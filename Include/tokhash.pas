(*
 * This file is generated from insns.dat, regs.dat and token.dat
 * by tokhash.pl; do not edit.
 *)

unit tokhash;

interface
   uses
      System.SysUtils,
      System.Win.Crtl,
      untCrc64,
      Nasm_Def;

Type
TTokendata = record
    strTok   : PAnsiChar;
    tokentype: Int16;
    aux      : Int8;
    tokflag  : Int8;
    num      : Int32;
end;

        Function nasm_token_hash(token : PAnsiChar; var tv: TTokenVal): Integer;

implementation

Function nasm_token_hash(token : PAnsiChar; var tv: TTokenVal): Integer;

Const UNUSED = 16383;
    hash1 : Array[0..2047] of Int16 = (
        0,
        UNUSED,
        UNUSED,
        UNUSED,
        0,
        UNUSED,
        0,
        UNUSED,
        0,
        0,
        -3300,
        UNUSED,
        0,
        0,
        -1035,
        UNUSED,
        UNUSED,
        UNUSED,
        UNUSED,
        0,
        UNUSED,
        0,
        0,
        UNUSED,
        0,
        -3655,
        UNUSED,
        0,
        UNUSED,
        0,
        0,
        UNUSED,
        -121,
        -823,
        -1221,
        0,
        0,
        0,
        4704,
        UNUSED,
        0,
        -324,
        0,
        0,
        UNUSED,
        198,
        165,
        0,
        0,
        0,
        0,
        4366,
        0,
        -1461,
        UNUSED,
        0,
        0,
        0,
        0,
        0,
        0,
        UNUSED,
        0,
        0,
        2145,
        UNUSED,
        0,
        1968,
        3637,
        UNUSED,
        UNUSED,
        UNUSED,
        0,
        -470,
        0,
        1303,
        UNUSED,
        0,
        0,
        UNUSED,
        1376,
        0,
        0,
        UNUSED,
        0,
        921,
        4101,
        0,
        0,
        UNUSED,
        2016,
        0,
        2665,
        1338,
        1545,
        1989,
        UNUSED,
        572,
        0,
        UNUSED,
        -4228,
        0,
        2099,
        3605,
        1844,
        UNUSED,
        UNUSED,
        UNUSED,
        0,
        UNUSED,
        -276,
        0,
        0,
        0,
        UNUSED,
        1561,
        0,
        UNUSED,
        348,
        1849,
        -852,
        698,
        1979,
        0,
        0,
        473,
        4432,
        -8,
        UNUSED,
        UNUSED,
        UNUSED,
        0,
        UNUSED,
        UNUSED,
        0,
        UNUSED,
        422,
        446,
        272,
        UNUSED,
        4597,
        0,
        0,
        UNUSED,
        UNUSED,
        UNUSED,
        1972,
        UNUSED,
        -811,
        113,
        UNUSED,
        -1583,
        UNUSED,
        687,
        0,
        0,
        177,
        -3789,
        0,
        2664,
        0,
        UNUSED,
        UNUSED,
        UNUSED,
        440,
        -4168,
        UNUSED,
        0,
        UNUSED,
        0,
        0,
        UNUSED,
        UNUSED,
        UNUSED,
        UNUSED,
        1053,
        1434,
        113,
        0,
        UNUSED,
        UNUSED,
        0,
        UNUSED,
        0,
        0,
        0,
        333,
        -525,
        UNUSED,
        0,
        0,
        UNUSED,
        -280,
        0,
        1653,
        UNUSED,
        UNUSED,
        0,
        UNUSED,
        406,
        UNUSED,
        33,
        UNUSED,
        UNUSED,
        -3901,
        0,
        0,
        0,
        UNUSED,
        -2092,
        0,
        UNUSED,
        UNUSED,
        UNUSED,
        UNUSED,
        UNUSED,
        0,
        0,
        349,
        0,
        UNUSED,
        UNUSED,
        0,
        -2053,
        0,
        1499,
        0,
        0,
        66,
        2075,
        UNUSED,
        0,
        -589,
        UNUSED,
        -2013,
        0,
        0,
        1763,
        UNUSED,
        0,
        0,
        UNUSED,
        UNUSED,
        2415,
        UNUSED,
        UNUSED,
        UNUSED,
        UNUSED,
        UNUSED,
        UNUSED,
        0,
        0,
        UNUSED,
        UNUSED,
        UNUSED,
        UNUSED,
        0,
        639,
        1961,
        0,
        UNUSED,
        UNUSED,
        UNUSED,
        719,
        833,
        -1939,
        0,
        UNUSED,
        830,
        1112,
        UNUSED,
        UNUSED,
        UNUSED,
        1376,
        UNUSED,
        0,
        UNUSED,
        -1372,
        UNUSED,
        -628,
        -2168,
        UNUSED,
        UNUSED,
        867,
        UNUSED,
        827,
        UNUSED,
        0,
        UNUSED,
        0,
        UNUSED,
        2135,
        UNUSED,
        805,
        0,
        865,
        1182,
        UNUSED,
        1578,
        2540,
        UNUSED,
        0,
        -1186,
        601,
        1254,
        UNUSED,
        1548,
        UNUSED,
        UNUSED,
        UNUSED,
        0,
        -2159,
        0,
        3386,
        -4599,
        538,
        105,
        0,
        UNUSED,
        0,
        0,
        -6390,
        0,
        -399,
        1287,
        0,
        UNUSED,
        0,
        -1184,
        0,
        UNUSED,
        0,
        458,
        2071,
        -547,
        UNUSED,
        1146,
        -3524,
        0,
        62,
        0,
        1863,
        4254,
        0,
        -1174,
        UNUSED,
        0,
        UNUSED,
        0,
        UNUSED,
        UNUSED,
        -402,
        793,
        UNUSED,
        2318,
        678,
        -4433,
        0,
        68,
        -4368,
        1271,
        UNUSED,
        UNUSED,
        UNUSED,
        UNUSED,
        0,
        UNUSED,
        1692,
        -939,
        2742,
        UNUSED,
        UNUSED,
        0,
        UNUSED,
        -1964,
        UNUSED,
        UNUSED,
        -542,
        1993,
        2561,
        UNUSED,
        2021,
        -3025,
        2403,
        1712,
        730,
        3205,
        0,
        -5708,
        1784,
        UNUSED,
        0,
        UNUSED,
        520,
        0,
        -5586,
        0,
        0,
        -3268,
        4103,
        -807,
        UNUSED,
        UNUSED,
        1089,
        347,
        367,
        305,
        UNUSED,
        798,
        -2793,
        0,
        UNUSED,
        849,
        UNUSED,
        UNUSED,
        -2096,
        0,
        UNUSED,
        0,
        3695,
        462,
        0,
        0,
        2946,
        -381,
        -182,
        UNUSED,
        UNUSED,
        -5333,
        UNUSED,
        1131,
        UNUSED,
        -3142,
        UNUSED,
        UNUSED,
        0,
        UNUSED,
        3747,
        -4290,
        UNUSED,
        UNUSED,
        202,
        599,
        UNUSED,
        1289,
        1213,
        UNUSED,
        300,
        0,
        1090,
        -695,
        1239,
        1899,
        1158,
        UNUSED,
        1514,
        UNUSED,
        -2284,
        691,
        2876,
        UNUSED,
        -5328,
        UNUSED,
        92,
        UNUSED,
        2239,
        UNUSED,
        3419,
        -2100,
        1635,
        -217,
        440,
        -108,
        0,
        UNUSED,
        UNUSED,
        -3052,
        649,
        468,
        -120,
        UNUSED,
        UNUSED,
        UNUSED,
        1561,
        21,
        -6622,
        1689,
        0,
        -914,
        838,
        450,
        UNUSED,
        2634,
        3502,
        -902,
        603,
        297,
        UNUSED,
        0,
        1159,
        -2191,
        UNUSED,
        0,
        0,
        3373,
        1759,
        UNUSED,
        3959,
        -2327,
        0,
        0,
        1298,
        UNUSED,
        0,
        1642,
        UNUSED,
        UNUSED,
        UNUSED,
        UNUSED,
        UNUSED,
        0,
        UNUSED,
        0,
        1489,
        1447,
        -1077,
        UNUSED,
        3514,
        0,
        UNUSED,
        0,
        UNUSED,
        0,
        0,
        UNUSED,
        751,
        383,
        -392,
        UNUSED,
        UNUSED,
        0,
        UNUSED,
        1313,
        UNUSED,
        -2879,
        UNUSED,
        0,
        0,
        1596,
        0,
        219,
        UNUSED,
        UNUSED,
        1872,
        -1781,
        126,
        531,
        0,
        859,
        -5161,
        886,
        UNUSED,
        UNUSED,
        UNUSED,
        -1613,
        -983,
        -606,
        0,
        856,
        UNUSED,
        910,
        UNUSED,
        UNUSED,
        2739,
        1471,
        UNUSED,
        UNUSED,
        1480,
        -1412,
        4236,
        0,
        UNUSED,
        UNUSED,
        0,
        UNUSED,
        1366,
        0,
        3670,
        0,
        1039,
        UNUSED,
        2430,
        UNUSED,
        -288,
        UNUSED,
        UNUSED,
        17,
        UNUSED,
        0,
        -1403,
        UNUSED,
        -3027,
        UNUSED,
        -416,
        UNUSED,
        639,
        UNUSED,
        -2329,
        0,
        1026,
        -545,
        -13,
        499,
        -274,
        UNUSED,
        -1531,
        -252,
        UNUSED,
        2888,
        UNUSED,
        UNUSED,
        -130,
        2046,
        2024,
        UNUSED,
        3144,
        0,
        -262,
        2081,
        911,
        1614,
        118,
        UNUSED,
        UNUSED,
        UNUSED,
        1194,
        UNUSED,
        -2494,
        UNUSED,
        -5685,
        629,
        UNUSED,
        1686,
        -1777,
        UNUSED,
        UNUSED,
        UNUSED,
        UNUSED,
        1260,
        4298,
        UNUSED,
        654,
        -485,
        1803,
        -928,
        UNUSED,
        -1154,
        UNUSED,
        UNUSED,
        0,
        1255,
        2722,
        UNUSED,
        0,
        556,
        -512,
        UNUSED,
        0,
        UNUSED,
        25,
        0,
        190,
        2012,
        UNUSED,
        1570,
        1980,
        1078,
        1144,
        0,
        -619,
        2136,
        -265,
        0,
        156,
        2189,
        UNUSED,
        947,
        -427,
        -1292,
        3604,
        4216,
        UNUSED,
        -6475,
        -1194,
        -3277,
        713,
        UNUSED,
        UNUSED,
        0,
        UNUSED,
        0,
        UNUSED,
        UNUSED,
        -1773,
        UNUSED,
        -980,
        UNUSED,
        UNUSED,
        UNUSED,
        0,
        UNUSED,
        0,
        UNUSED,
        UNUSED,
        UNUSED,
        0,
        UNUSED,
        1781,
        0,
        UNUSED,
        1265,
        2956,
        1143,
        426,
        229,
        -280,
        0,
        UNUSED,
        974,
        -3669,
        -1250,
        -472,
        0,
        829,
        0,
        4,
        0,
        UNUSED,
        -94,
        -1162,
        752,
        UNUSED,
        UNUSED,
        833,
        3613,
        UNUSED,
        1007,
        UNUSED,
        1467,
        0,
        -4187,
        2405,
        0,
        1177,
        0,
        UNUSED,
        UNUSED,
        -4058,
        0,
        -1838,
        2211,
        0,
        0,
        0,
        0,
        -1040,
        890,
        922,
        2830,
        UNUSED,
        1508,
        UNUSED,
        0,
        -362,
        -3475,
        -1053,
        0,
        UNUSED,
        UNUSED,
        263,
        0,
        823,
        UNUSED,
        830,
        2967,
        2311,
        1678,
        UNUSED,
        0,
        0,
        419,
        -4620,
        -4798,
        3708,
        -4279,
        -148,
        UNUSED,
        736,
        7730,
        1895,
        269,
        3422,
        -4406,
        1196,
        -123,
        UNUSED,
        1077,
        UNUSED,
        UNUSED,
        2001,
        UNUSED,
        769,
        UNUSED,
        UNUSED,
        382,
        -3001,
        -801,
        1280,
        0,
        2072,
        0,
        890,
        1901,
        1515,
        UNUSED,
        0,
        1007,
        UNUSED,
        2226,
        91,
        UNUSED,
        325,
        UNUSED,
        UNUSED,
        182,
        0,
        2878,
        2848,
        -819,
        UNUSED,
        -642,
        UNUSED,
        UNUSED,
        20,
        0,
        UNUSED,
        203,
        0,
        -279,
        241,
        340,
        175,
        2358,
        -1192,
        1777,
        -1189,
        UNUSED,
        2258,
        -94,
        454,
        UNUSED,
        888,
        UNUSED,
        UNUSED,
        -2344,
        -1872,
        UNUSED,
        1098,
        UNUSED,
        UNUSED,
        UNUSED,
        UNUSED,
        242,
        117,
        1489,
        UNUSED,
        -253,
        1924,
        UNUSED,
        0,
        2097,
        1548,
        UNUSED,
        UNUSED,
        205,
        1697,
        -1042,
        UNUSED,
        2581,
        UNUSED,
        UNUSED,
        4166,
        -1111,
        UNUSED,
        UNUSED,
        UNUSED,
        UNUSED,
        868,
        1829,
        UNUSED,
        -665,
        UNUSED,
        518,
        1917,
        UNUSED,
        UNUSED,
        2677,
        397,
        UNUSED,
        -1672,
        1485,
        630,
        UNUSED,
        UNUSED,
        1069,
        0,
        UNUSED,
        UNUSED,
        UNUSED,
        0,
        1050,
        0,
        UNUSED,
        UNUSED,
        0,
        -835,
        501,
        UNUSED,
        0,
        UNUSED,
        UNUSED,
        UNUSED,
        -5071,
        UNUSED,
        -5002,
        UNUSED,
        996,
        UNUSED,
        1877,
        956,
        372,
        2661,
        792,
        2022,
        UNUSED,
        UNUSED,
        5333,
        1155,
        UNUSED,
        2311,
        145,
        1427,
        UNUSED,
        UNUSED,
        1609,
        UNUSED,
        -444,
        896,
        -1248,
        0,
        1673,
        3519,
        1510,
        0,
        1657,
        0,
        -813,
        UNUSED,
        -975,
        1541,
        UNUSED,
        1258,
        UNUSED,
        0,
        UNUSED,
        1858,
        2341,
        1012,
        706,
        1670,
        389,
        2648,
        2215,
        1155,
        807,
        -1059,
        1981,
        UNUSED,
        UNUSED,
        120,
        UNUSED,
        UNUSED,
        5409,
        UNUSED,
        1708,
        -1324,
        491,
        1486,
        -1672,
        65,
        -1417,
        0,
        -99,
        0,
        UNUSED,
        -6776,
        1133,
        501,
        6,
        2088,
        UNUSED,
        -893,
        0,
        2028,
        UNUSED,
        -2812,
        UNUSED,
        1484,
        258,
        1299,
        UNUSED,
        -3099,
        219,
        UNUSED,
        -958,
        UNUSED,
        1793,
        -3333,
        3593,
        UNUSED,
        0,
        -94,
        0,
        UNUSED,
        -4370,
        528,
        0,
        41,
        2538,
        UNUSED,
        UNUSED,
        374,
        4083,
        -5223,
        769,
        UNUSED,
        UNUSED,
        1864,
        1896,
        674,
        UNUSED,
        1855,
        197,
        575,
        UNUSED,
        -1659,
        UNUSED,
        0,
        UNUSED,
        UNUSED,
        UNUSED,
        1329,
        0,
        2388,
        -1303,
        0,
        UNUSED,
        380,
        -1018,
        UNUSED,
        412,
        461,
        -1879,
        UNUSED,
        0,
        UNUSED,
        3074,
        -2306,
        -446,
        375,
        1282,
        1356,
        UNUSED,
        -119,
        0,
        -409,
        -1098,
        979,
        3508,
        572,
        2334,
        0,
        623,
        UNUSED,
        859,
        2435,
        1285,
        465,
        UNUSED,
        1288,
        UNUSED,
        UNUSED,
        1308,
        0,
        1189,
        128,
        930,
        1557,
        UNUSED,
        -5809,
        UNUSED,
        0,
        1950,
        UNUSED,
        UNUSED,
        1519,
        2065,
        UNUSED,
        UNUSED,
        UNUSED,
        UNUSED,
        UNUSED,
        -3755,
        UNUSED,
        1989,
        653,
        4976,
        UNUSED,
        UNUSED,
        2160,
        -1677,
        1486,
        UNUSED,
        0,
        1147,
        UNUSED,
        -82,
        603,
        UNUSED,
        UNUSED,
        461,
        UNUSED,
        1278,
        0,
        1456,
        -1305,
        UNUSED,
        -844,
        0,
        1879,
        73,
        UNUSED,
        646,
        -857,
        -168,
        UNUSED,
        UNUSED,
        506,
        -389,
        UNUSED,
        242,
        UNUSED,
        UNUSED,
        2200,
        UNUSED,
        2142,
        UNUSED,
        1142,
        UNUSED,
        1393,
        -4513,
        991,
        3108,
        UNUSED,
        921,
        -615,
        644,
        -346,
        819,
        UNUSED,
        UNUSED,
        UNUSED,
        1947,
        -1240,
        0,
        UNUSED,
        UNUSED,
        -3271,
        159,
        UNUSED,
        1453,
        2051,
        UNUSED,
        239,
        377,
        UNUSED,
        -1008,
        0,
        1152,
        -17,
        UNUSED,
        UNUSED,
        UNUSED,
        UNUSED,
        2130,
        UNUSED,
        UNUSED,
        1585,
        2805,
        -1963,
        0,
        -232,
        420,
        -969,
        UNUSED,
        -1470,
        UNUSED,
        1235,
        UNUSED,
        1167,
        1995,
        0,
        308,
        759,
        321,
        UNUSED,
        198,
        UNUSED,
        UNUSED,
        0,
        UNUSED,
        0,
        -418,
        UNUSED,
        UNUSED,
        -5595,
        1553,
        1566,
        583,
        UNUSED,
        UNUSED,
        -21,
        UNUSED,
        -44,
        UNUSED,
        0,
        UNUSED,
        -3017,
        2695,
        2669,
        1892,
        1789,
        UNUSED,
        -1150,
        0,
        UNUSED,
        2633,
        UNUSED,
        UNUSED,
        2968,
        0,
        UNUSED,
        1263,
        674,
        UNUSED,
        1568,
        1816,
        UNUSED,
        264,
        UNUSED,
        UNUSED,
        UNUSED,
        908,
        2229,
        UNUSED,
        -41,
        UNUSED,
        95,
        0,
        UNUSED,
        UNUSED,
        UNUSED,
        UNUSED,
        UNUSED,
        -4671,
        6309,
        0,
        1618,
        3251,
        4532,
        115,
        1547,
        UNUSED,
        -652,
        2207,
        0,
        1322,
        2443,
        1033,
        0,
        0,
        -4800,
        UNUSED,
        UNUSED,
        UNUSED,
        71,
        -2982,
        0,
        1446,
        UNUSED,
        UNUSED,
        -5760,
        0,
        1009,
        2234,
        UNUSED,
        UNUSED,
        -19,
        -377,
        -28,
        -4476,
        UNUSED,
        867,
        1872,
        1378,
        UNUSED,
        1343,
        1108,
        UNUSED,
        3086,
        1686,
        UNUSED,
        UNUSED,
        UNUSED,
        3372,
        -691,
        UNUSED,
        UNUSED,
        UNUSED,
        UNUSED,
        UNUSED,
        UNUSED,
        125,
        995,
        -33,
        UNUSED,
        UNUSED,
        628,
        2207,
        674,
        1720,
        112,
        UNUSED,
        1061,
        65,
        UNUSED,
        1907,
        244,
        -196,
        0,
        893,
        1398,
        -17,
        1460,
        -367,
        0,
        672,
        886,
        5080,
        UNUSED,
        -885,
        2337,
        3028,
        UNUSED,
        2133,
        729,
        UNUSED,
        -2718,
        1854,
        1135,
        UNUSED,
        585,
        0,
        UNUSED,
        618,
        792,
        857,
        UNUSED,
        0,
        0,
        UNUSED,
        UNUSED,
        2899,
        UNUSED,
        2993,
        UNUSED,
        1341,
        944,
        UNUSED,
        UNUSED,
        2349,
        2409,
        348,
        973,
        4542,
        761,
        UNUSED,
        -836,
        -231,
        592,
        -1982,
        0,
        UNUSED,
        570,
        UNUSED,
        -6464,
        UNUSED,
        -213,
        1792,
        737,
        UNUSED,
        -1291,
        1006,
        -284,
        -5400,
        UNUSED,
        342,
        -1957,
        3399,
        -565,
        UNUSED,
        1003,
        3382,
        1391,
        2195,
        1893,
        1024,
        UNUSED,
        1556,
        673,
        2517,
        UNUSED,
        312,
        1144,
        655,
        UNUSED,
        1056,
        1115,
        UNUSED,
        -1097,
        UNUSED,
        UNUSED,
        888,
        -681,
        1600,
        469,
        UNUSED,
        UNUSED,
        868,
        UNUSED,
        UNUSED,
        UNUSED,
        -1020,
        2869,
        149,
        367,
        2059,
        UNUSED,
        2267,
        14,
        UNUSED,
        UNUSED,
        438,
        153,
        0,
        UNUSED,
        -1480,
        UNUSED,
        0,
        UNUSED,
        -5048,
        672,
        -326,
        UNUSED,
        -729,
        UNUSED,
        1382,
        UNUSED,
        -430,
        1161,
        UNUSED,
        1759,
        1723,
        1958,
        UNUSED,
        UNUSED,
        -1918,
        UNUSED,
        UNUSED,
        1384,
        -2132,
        -914,
        1177,
        711,
        219,
        UNUSED,
        UNUSED,
        -387,
        -5143,
        1584,
        257,
        0,
        -85,
        -507,
        1392,
        -3,
        -1794,
        1916,
        -662,
        106,
        UNUSED,
        UNUSED,
        1046,
        0,
        -1652,
        UNUSED,
        1474,
        -948,
        831,
        248,
        -379,
        938,
        2747,
        2407,
        UNUSED,
        UNUSED,
        781,
        UNUSED,
        UNUSED,
        UNUSED,
        -3569,
        -887,
        4080,
        UNUSED,
        651,
        1645,
        UNUSED,
        UNUSED,
        1787,
        1029,
        UNUSED,
        UNUSED,
        1894,
        UNUSED,
        -1689,
        -2712,
        4734,
        UNUSED,
        945,
        UNUSED,
        UNUSED,
        UNUSED,
        619,
        5269,
        UNUSED,
        522,
        UNUSED,
        -1574,
        360,
        UNUSED,
        0,
        -216,
        1986,
        -1068,
        658,
        700,
        785,
        -1252,
        1683,
        1991,
        -2137,
        1590,
        UNUSED,
        UNUSED,
        -4150,
        -24,
        UNUSED,
        UNUSED,
        UNUSED,
        570,
        15,
        0,
        1649,
        UNUSED,
        UNUSED,
        UNUSED,
        375,
        UNUSED,
        1327,
        2759,
        -519,
        1343,
        702,
        -332,
        1236,
        UNUSED,
        1291,
        111,
        262,
        UNUSED,
        UNUSED,
        1706,
        UNUSED,
        -540,
        UNUSED,
        -827,
        662,
        836,
        UNUSED,
        UNUSED,
        2582,
        3965,
        103,
        363,
        1026,
        UNUSED,
        UNUSED,
        UNUSED,
        UNUSED,
        -604,
        -156,
        UNUSED,
        -3308,
        623,
        -1472,
        UNUSED,
        -287,
        -1941,
        UNUSED,
        UNUSED,
        0,
        0,
        548,
        1637,
        UNUSED,
        UNUSED,
        UNUSED,
        -1569,
        2434,
        207,
        0,
        UNUSED,
        -168,
        UNUSED,
        UNUSED,
        1432,
        UNUSED,
        -1,
        UNUSED,
        -171,
        -772,
        791,
        -4416,
        4155,
        1765,
        1197,
        UNUSED,
        1342,
        699,
        UNUSED,
        UNUSED,
        3262,
        UNUSED,
        UNUSED,
        -1035,
        UNUSED,
        1639,
        185,
        657,
        1881,
        UNUSED,
        -1803,
        -3937,
        UNUSED,
        1911,
        UNUSED,
        1980,
        -3560,
        UNUSED,
        -467,
        -120,
        UNUSED,
        1715,
        -1327,
        UNUSED,
        UNUSED,
        -147,
        UNUSED,
        1992,
        2076,
        -1363,
        UNUSED,
        UNUSED,
        1681,
        1580,
        230,
        105,
        559,
        UNUSED,
        1399,
        UNUSED,
        2174,
        804,
        118,
        -1648,
        1098,
        UNUSED,
        446,
        1951,
        UNUSED,
        UNUSED,
        UNUSED,
        -5,
        1638,
        1998,
        602,
        UNUSED,
        UNUSED,
        UNUSED,
        -1671,
        UNUSED,
        4650,
        UNUSED,
        UNUSED,
        UNUSED,
        0,
        UNUSED,
        UNUSED,
        UNUSED,
        -4951,
        -5846,
        435,
        UNUSED,
        1928,
        1582,
        UNUSED,
        1795,
        -1782,
        96,
        1011,
        -4842,
        UNUSED,
        1511,
        231,
        -1559,
        UNUSED,
        UNUSED,
        21,
        2188,
        3590,
        -114,
        UNUSED,
        2173,
        181,
        1632,
        1271,
        0,
        641,
        421,
        1853,
        UNUSED,
        UNUSED,
        UNUSED,
        0,
        600,
        1933,
        UNUSED,
        1700,
        UNUSED,
        1559,
        UNUSED,
        -275,
        UNUSED,
        -4972,
        UNUSED,
        195,
        UNUSED,
        UNUSED,
        UNUSED,
        UNUSED,
        3367,
        2122,
        177,
        UNUSED,
        UNUSED,
        UNUSED,
        UNUSED,
        -62,
        374,
        20,
        800,
        1605,
        409,
        UNUSED,
        3378,
        -5495,
        1546,
        -3156,
        -115,
        51,
        957,
        UNUSED,
        495,
        0,
        1305,
        686,
        1501,
        981,
        412,
        UNUSED,
        -1463,
        UNUSED,
        148,
        0,
        UNUSED,
        288,
        1333,
        1731,
        1435,
        UNUSED,
        UNUSED,
        1642,
        970,
        353,
        4265,
        681,
        UNUSED,
        1871,
        UNUSED,
        256,
        347,
        UNUSED,
        -694,
        1097,
        UNUSED,
        UNUSED,
        2204,
        914,
        -927,
        -925,
        2158,
        1094,
        1586,
        2173,
        46,
        UNUSED,
        UNUSED,
        31,
        360,
        1354,
        992,
        -269,
        1136,
        -5131,
        2061,
        -3547,
        UNUSED,
        UNUSED,
        544,
        -5715,
        2066,
        4078,
        UNUSED,
        UNUSED,
        -1082,
        1436,
        UNUSED,
        -433,
        UNUSED,
        UNUSED,
        -568,
        631,
        1775,
        -2384,
        2717,
        -4233,
        457,
        -787,
        -140,
        UNUSED,
        960,
        1127,
        UNUSED,
        UNUSED,
        -772,
        0,
        1659,
        26,
        3601,
        2292,
        UNUSED,
        3295,
        379,
        UNUSED,
        1256,
        UNUSED,
        -446,
        UNUSED,
        UNUSED,
        UNUSED,
        UNUSED,
        1882,
        UNUSED,
        UNUSED,
        1117,
        -381,
        -2769,
        832,
        505,
        1699,
        1348,
        -296,
        UNUSED,
        872,
        -1086,
        UNUSED,
        866,
        1544,
        -293,
        UNUSED,
        1034,
        UNUSED,
        UNUSED,
        950,
        1962,
        -297,
        1358,
        UNUSED,
        1099,
        -1975,
        373,
        -775,
        3037,
        352,
        1113,
        355,
        1086,
        UNUSED,
        -4755,
        -184,
        UNUSED,
        3633,
        2405,
        UNUSED,
        UNUSED,
        UNUSED,
        -2978,
        -1218,
        UNUSED,
        1983,
        UNUSED,
        1014,
        211,
        -603,
        -18,
        3731,
        UNUSED,
        -5823,
        UNUSED,
        UNUSED,
        1407,
        UNUSED,
        1248,
        331,
        UNUSED,
        UNUSED,
        1488,
        UNUSED,
        949,
        1315,
        UNUSED,
        2475,
        UNUSED,
        UNUSED,
        2971,
        -2172,
        -6339,
        -3549,
        2022,
        UNUSED,
        -11,
        UNUSED,
        1600,
        5399,
        1426,
        763,
        345,
        2842,
        1050,
        1138,
        0,
        UNUSED,
        1087,
        2279,
        -1647,
        1884,
        -706,
        UNUSED,
        UNUSED,
        UNUSED,
        1771,
        1993,
        UNUSED,
        UNUSED,
        530,
        UNUSED,
        UNUSED,
        UNUSED,
        UNUSED,
        -677,
        UNUSED,
        1098,
        UNUSED,
        261,
        UNUSED,
        UNUSED,
        1746,
        UNUSED,
        -307,
        531,
        535,
        2818,
        990,
        UNUSED,
        UNUSED,
        1680,
        UNUSED,
        UNUSED,
        1880,
        UNUSED,
        -2373,
        1499,
        572,
        UNUSED,
        -3436,
        164,
        1283,
        1751
    );
    hash2 : Array[0..2047] of Int16 = (
        UNUSED,
        UNUSED,
        0,
        UNUSED,
        0,
        0,
        UNUSED,
        UNUSED,
        0,
        1472,
        -974,
        0,
        UNUSED,
        UNUSED,
        0,
        0,
        UNUSED,
        0,
        UNUSED,
        0,
        UNUSED,
        0,
        -2379,
        0,
        0,
        UNUSED,
        0,
        4274,
        UNUSED,
        UNUSED,
        0,
        -266,
        0,
        UNUSED,
        UNUSED,
        3978,
        UNUSED,
        0,
        UNUSED,
        0,
        0,
        4896,
        UNUSED,
        UNUSED,
        6613,
        0,
        0,
        6171,
        0,
        0,
        0,
        UNUSED,
        4569,
        -19,
        1957,
        0,
        915,
        0,
        UNUSED,
        0,
        0,
        0,
        2514,
        1287,
        UNUSED,
        UNUSED,
        1110,
        -3671,
        0,
        0,
        0,
        0,
        UNUSED,
        985,
        UNUSED,
        0,
        42,
        0,
        6667,
        496,
        0,
        6725,
        2355,
        UNUSED,
        UNUSED,
        498,
        0,
        0,
        UNUSED,
        1718,
        2152,
        651,
        2472,
        UNUSED,
        -66,
        -245,
        0,
        1542,
        0,
        0,
        UNUSED,
        552,
        UNUSED,
        UNUSED,
        UNUSED,
        1497,
        0,
        -177,
        -983,
        0,
        1339,
        5357,
        -123,
        0,
        0,
        0,
        6403,
        UNUSED,
        UNUSED,
        0,
        UNUSED,
        -1276,
        3592,
        UNUSED,
        397,
        UNUSED,
        784,
        UNUSED,
        0,
        0,
        483,
        5860,
        UNUSED,
        3681,
        0,
        UNUSED,
        UNUSED,
        -3372,
        UNUSED,
        0,
        UNUSED,
        UNUSED,
        0,
        UNUSED,
        UNUSED,
        0,
        0,
        UNUSED,
        0,
        868,
        UNUSED,
        0,
        UNUSED,
        -265,
        -4158,
        0,
        UNUSED,
        0,
        UNUSED,
        -2124,
        5901,
        -2002,
        UNUSED,
        2312,
        0,
        0,
        0,
        UNUSED,
        427,
        0,
        1535,
        0,
        0,
        1269,
        0,
        UNUSED,
        UNUSED,
        26,
        UNUSED,
        190,
        UNUSED,
        UNUSED,
        2083,
        UNUSED,
        -445,
        0,
        1318,
        0,
        0,
        UNUSED,
        UNUSED,
        2083,
        0,
        1119,
        0,
        UNUSED,
        UNUSED,
        UNUSED,
        0,
        0,
        0,
        0,
        UNUSED,
        UNUSED,
        UNUSED,
        118,
        UNUSED,
        UNUSED,
        UNUSED,
        0,
        0,
        0,
        350,
        0,
        UNUSED,
        0,
        UNUSED,
        6568,
        -1337,
        UNUSED,
        UNUSED,
        UNUSED,
        0,
        -530,
        8,
        3013,
        UNUSED,
        0,
        UNUSED,
        0,
        6549,
        UNUSED,
        0,
        UNUSED,
        736,
        0,
        -1468,
        0,
        -237,
        0,
        207,
        0,
        -225,
        -496,
        80,
        UNUSED,
        0,
        UNUSED,
        UNUSED,
        -615,
        UNUSED,
        0,
        -1745,
        960,
        6063,
        -1233,
        UNUSED,
        4543,
        1874,
        UNUSED,
        UNUSED,
        UNUSED,
        4821,
        -435,
        0,
        0,
        0,
        219,
        UNUSED,
        0,
        2451,
        UNUSED,
        UNUSED,
        0,
        5245,
        1193,
        0,
        0,
        1867,
        UNUSED,
        -1695,
        0,
        -322,
        UNUSED,
        -679,
        2550,
        87,
        UNUSED,
        UNUSED,
        -920,
        UNUSED,
        6072,
        0,
        UNUSED,
        0,
        221,
        1969,
        97,
        -4373,
        UNUSED,
        1803,
        0,
        762,
        UNUSED,
        684,
        1023,
        UNUSED,
        951,
        158,
        -1248,
        UNUSED,
        902,
        0,
        0,
        UNUSED,
        494,
        UNUSED,
        UNUSED,
        UNUSED,
        UNUSED,
        -689,
        UNUSED,
        346,
        0,
        2204,
        161,
        399,
        0,
        0,
        UNUSED,
        2875,
        313,
        UNUSED,
        0,
        6736,
        1898,
        3441,
        UNUSED,
        1395,
        UNUSED,
        879,
        1450,
        UNUSED,
        UNUSED,
        0,
        -3327,
        0,
        -199,
        UNUSED,
        0,
        820,
        1956,
        UNUSED,
        0,
        UNUSED,
        0,
        UNUSED,
        0,
        1307,
        403,
        0,
        0,
        -4193,
        UNUSED,
        UNUSED,
        UNUSED,
        UNUSED,
        UNUSED,
        UNUSED,
        UNUSED,
        0,
        0,
        0,
        142,
        0,
        UNUSED,
        3020,
        -1092,
        UNUSED,
        UNUSED,
        0,
        1978,
        6022,
        5694,
        UNUSED,
        0,
        UNUSED,
        -170,
        UNUSED,
        UNUSED,
        7,
        0,
        UNUSED,
        -1645,
        UNUSED,
        1675,
        0,
        UNUSED,
        0,
        758,
        UNUSED,
        0,
        UNUSED,
        -1578,
        UNUSED,
        1125,
        1521,
        UNUSED,
        1011,
        1492,
        0,
        2143,
        UNUSED,
        0,
        594,
        UNUSED,
        2790,
        451,
        UNUSED,
        799,
        0,
        1645,
        1039,
        -880,
        0,
        UNUSED,
        -758,
        UNUSED,
        1557,
        UNUSED,
        -2405,
        1391,
        7334,
        0,
        2580,
        -2658,
        UNUSED,
        797,
        UNUSED,
        803,
        0,
        1834,
        UNUSED,
        UNUSED,
        0,
        1567,
        0,
        1512,
        1765,
        1319,
        -742,
        311,
        779,
        -364,
        -2507,
        20,
        UNUSED,
        4446,
        1875,
        UNUSED,
        UNUSED,
        UNUSED,
        UNUSED,
        0,
        2183,
        266,
        0,
        -1476,
        UNUSED,
        1066,
        731,
        UNUSED,
        0,
        7492,
        0,
        480,
        UNUSED,
        0,
        8667,
        UNUSED,
        -767,
        2030,
        0,
        3304,
        UNUSED,
        2152,
        1065,
        0,
        UNUSED,
        5065,
        UNUSED,
        3750,
        0,
        UNUSED,
        1257,
        UNUSED,
        -1412,
        516,
        2010,
        0,
        -129,
        UNUSED,
        UNUSED,
        0,
        938,
        1980,
        UNUSED,
        UNUSED,
        -166,
        -1470,
        0,
        UNUSED,
        UNUSED,
        96,
        3085,
        UNUSED,
        UNUSED,
        1489,
        1980,
        1970,
        UNUSED,
        -4103,
        396,
        0,
        -5770,
        UNUSED,
        3827,
        UNUSED,
        3761,
        1785,
        296,
        UNUSED,
        UNUSED,
        0,
        UNUSED,
        0,
        1137,
        -1915,
        UNUSED,
        0,
        0,
        UNUSED,
        3501,
        -1376,
        520,
        UNUSED,
        UNUSED,
        2725,
        6558,
        1707,
        UNUSED,
        0,
        1186,
        -2208,
        1536,
        640,
        UNUSED,
        UNUSED,
        428,
        0,
        -7675,
        891,
        5372,
        1696,
        UNUSED,
        UNUSED,
        UNUSED,
        UNUSED,
        -494,
        3657,
        UNUSED,
        232,
        UNUSED,
        0,
        -2887,
        0,
        UNUSED,
        -640,
        UNUSED,
        6001,
        0,
        UNUSED,
        UNUSED,
        2581,
        192,
        -697,
        213,
        UNUSED,
        UNUSED,
        -1164,
        -670,
        UNUSED,
        1495,
        0,
        1207,
        0,
        -68,
        0,
        -689,
        UNUSED,
        -311,
        -85,
        UNUSED,
        -1196,
        1038,
        UNUSED,
        0,
        0,
        0,
        UNUSED,
        479,
        UNUSED,
        0,
        1762,
        UNUSED,
        0,
        0,
        1648,
        UNUSED,
        0,
        UNUSED,
        2198,
        -1313,
        856,
        UNUSED,
        472,
        UNUSED,
        -3452,
        UNUSED,
        0,
        -1644,
        -9,
        UNUSED,
        0,
        -977,
        UNUSED,
        UNUSED,
        0,
        289,
        UNUSED,
        -351,
        -835,
        UNUSED,
        2679,
        UNUSED,
        UNUSED,
        UNUSED,
        UNUSED,
        2449,
        1219,
        876,
        1853,
        0,
        UNUSED,
        909,
        UNUSED,
        UNUSED,
        678,
        UNUSED,
        UNUSED,
        UNUSED,
        -1330,
        1487,
        UNUSED,
        2014,
        UNUSED,
        UNUSED,
        6430,
        345,
        UNUSED,
        1412,
        UNUSED,
        0,
        1259,
        808,
        1726,
        UNUSED,
        UNUSED,
        UNUSED,
        -2499,
        -800,
        3121,
        0,
        UNUSED,
        0,
        -6,
        UNUSED,
        -2319,
        UNUSED,
        1239,
        1318,
        105,
        786,
        2073,
        554,
        -647,
        679,
        1707,
        1318,
        5022,
        UNUSED,
        1389,
        1812,
        3210,
        943,
        2001,
        562,
        666,
        UNUSED,
        UNUSED,
        1135,
        UNUSED,
        3263,
        3168,
        1804,
        0,
        UNUSED,
        -3933,
        0,
        493,
        1221,
        124,
        UNUSED,
        0,
        5136,
        478,
        1583,
        5188,
        UNUSED,
        1713,
        UNUSED,
        779,
        UNUSED,
        -1207,
        UNUSED,
        0,
        -1033,
        -1450,
        2075,
        UNUSED,
        -766,
        UNUSED,
        UNUSED,
        UNUSED,
        0,
        UNUSED,
        UNUSED,
        -454,
        -425,
        UNUSED,
        UNUSED,
        UNUSED,
        UNUSED,
        -1385,
        0,
        UNUSED,
        -3914,
        580,
        -1449,
        -115,
        UNUSED,
        0,
        0,
        UNUSED,
        -651,
        UNUSED,
        130,
        UNUSED,
        UNUSED,
        UNUSED,
        UNUSED,
        UNUSED,
        1836,
        -638,
        5,
        UNUSED,
        374,
        0,
        UNUSED,
        0,
        868,
        UNUSED,
        2641,
        210,
        UNUSED,
        4683,
        UNUSED,
        UNUSED,
        2228,
        0,
        -949,
        440,
        0,
        867,
        -671,
        UNUSED,
        2364,
        UNUSED,
        -1137,
        UNUSED,
        0,
        -2755,
        -177,
        UNUSED,
        -380,
        2071,
        UNUSED,
        0,
        869,
        UNUSED,
        UNUSED,
        -2775,
        1560,
        UNUSED,
        -748,
        -1272,
        1869,
        1490,
        UNUSED,
        -1286,
        0,
        -61,
        0,
        UNUSED,
        UNUSED,
        -1437,
        UNUSED,
        UNUSED,
        1928,
        -1037,
        2096,
        201,
        -2813,
        6059,
        UNUSED,
        UNUSED,
        -1776,
        1633,
        3287,
        UNUSED,
        -1959,
        UNUSED,
        UNUSED,
        UNUSED,
        -790,
        0,
        1494,
        0,
        1041,
        1837,
        UNUSED,
        3820,
        UNUSED,
        -3745,
        UNUSED,
        UNUSED,
        85,
        -429,
        0,
        0,
        2138,
        1605,
        1982,
        -557,
        5437,
        517,
        0,
        -1011,
        -1802,
        UNUSED,
        UNUSED,
        4615,
        1340,
        0,
        1253,
        UNUSED,
        -1998,
        0,
        UNUSED,
        UNUSED,
        -1517,
        UNUSED,
        UNUSED,
        0,
        UNUSED,
        UNUSED,
        UNUSED,
        1470,
        UNUSED,
        796,
        UNUSED,
        -865,
        912,
        4325,
        1790,
        87,
        2197,
        UNUSED,
        304,
        1903,
        0,
        855,
        0,
        6935,
        UNUSED,
        1504,
        -1752,
        1377,
        1860,
        UNUSED,
        2038,
        376,
        -4962,
        2110,
        1480,
        UNUSED,
        UNUSED,
        UNUSED,
        -2082,
        0,
        -1019,
        418,
        6347,
        1314,
        UNUSED,
        UNUSED,
        217,
        UNUSED,
        UNUSED,
        2084,
        798,
        1085,
        58,
        UNUSED,
        UNUSED,
        0,
        1147,
        UNUSED,
        -86,
        844,
        71,
        UNUSED,
        860,
        0,
        UNUSED,
        UNUSED,
        UNUSED,
        194,
        1460,
        1654,
        0,
        845,
        UNUSED,
        UNUSED,
        UNUSED,
        6483,
        UNUSED,
        323,
        1933,
        -364,
        -2149,
        UNUSED,
        UNUSED,
        751,
        UNUSED,
        UNUSED,
        0,
        UNUSED,
        UNUSED,
        837,
        870,
        1502,
        UNUSED,
        UNUSED,
        0,
        402,
        -1813,
        1076,
        2111,
        UNUSED,
        UNUSED,
        -1718,
        8048,
        UNUSED,
        881,
        UNUSED,
        1780,
        -1787,
        0,
        -104,
        UNUSED,
        0,
        -631,
        0,
        1335,
        1624,
        UNUSED,
        UNUSED,
        410,
        UNUSED,
        3614,
        -357,
        1139,
        -1058,
        146,
        980,
        346,
        1763,
        1337,
        214,
        UNUSED,
        UNUSED,
        UNUSED,
        690,
        706,
        -2423,
        0,
        1243,
        -2211,
        2456,
        0,
        383,
        394,
        1463,
        0,
        1294,
        UNUSED,
        UNUSED,
        UNUSED,
        2426,
        -371,
        -826,
        5127,
        UNUSED,
        387,
        UNUSED,
        1161,
        UNUSED,
        -206,
        530,
        925,
        UNUSED,
        1727,
        0,
        UNUSED,
        2323,
        251,
        UNUSED,
        -1757,
        UNUSED,
        430,
        UNUSED,
        1747,
        881,
        UNUSED,
        UNUSED,
        UNUSED,
        545,
        UNUSED,
        -308,
        UNUSED,
        UNUSED,
        UNUSED,
        273,
        UNUSED,
        -738,
        -79,
        898,
        UNUSED,
        6042,
        -256,
        UNUSED,
        UNUSED,
        0,
        1055,
        0,
        UNUSED,
        -3487,
        -708,
        UNUSED,
        UNUSED,
        UNUSED,
        1855,
        UNUSED,
        328,
        5871,
        UNUSED,
        UNUSED,
        2485,
        UNUSED,
        1725,
        UNUSED,
        UNUSED,
        0,
        416,
        UNUSED,
        1848,
        2378,
        -318,
        1723,
        -313,
        0,
        1389,
        261,
        0,
        UNUSED,
        338,
        1974,
        3542,
        2118,
        UNUSED,
        -2280,
        UNUSED,
        UNUSED,
        UNUSED,
        1451,
        0,
        -922,
        -168,
        UNUSED,
        0,
        -3422,
        -2913,
        -1951,
        UNUSED,
        4760,
        1989,
        0,
        -1029,
        UNUSED,
        -567,
        UNUSED,
        848,
        UNUSED,
        0,
        1457,
        UNUSED,
        -712,
        952,
        1537,
        -738,
        1177,
        UNUSED,
        -747,
        UNUSED,
        UNUSED,
        UNUSED,
        UNUSED,
        UNUSED,
        UNUSED,
        137,
        -2317,
        -250,
        UNUSED,
        UNUSED,
        UNUSED,
        28,
        209,
        258,
        0,
        2547,
        UNUSED,
        2121,
        UNUSED,
        1761,
        599,
        UNUSED,
        50,
        UNUSED,
        -1524,
        UNUSED,
        UNUSED,
        851,
        874,
        UNUSED,
        4723,
        UNUSED,
        44,
        1887,
        UNUSED,
        0,
        4058,
        828,
        -974,
        1009,
        UNUSED,
        533,
        UNUSED,
        99,
        1162,
        0,
        UNUSED,
        0,
        -4206,
        700,
        UNUSED,
        UNUSED,
        -1552,
        1790,
        UNUSED,
        -1070,
        UNUSED,
        -4537,
        UNUSED,
        476,
        637,
        803,
        UNUSED,
        5841,
        0,
        388,
        116,
        -1046,
        -2721,
        -5062,
        UNUSED,
        1671,
        2089,
        1713,
        UNUSED,
        1732,
        UNUSED,
        0,
        UNUSED,
        UNUSED,
        UNUSED,
        -1440,
        UNUSED,
        1685,
        1885,
        UNUSED,
        -981,
        1160,
        UNUSED,
        785,
        UNUSED,
        1930,
        -66,
        UNUSED,
        -1935,
        -1829,
        -1412,
        -696,
        UNUSED,
        0,
        331,
        226,
        1709,
        0,
        1656,
        2225,
        UNUSED,
        UNUSED,
        -371,
        0,
        UNUSED,
        -2019,
        UNUSED,
        977,
        -172,
        1341,
        UNUSED,
        -68,
        -1343,
        UNUSED,
        1486,
        3064,
        0,
        297,
        502,
        -197,
        575,
        -283,
        UNUSED,
        UNUSED,
        UNUSED,
        UNUSED,
        1836,
        0,
        UNUSED,
        1430,
        6220,
        UNUSED,
        UNUSED,
        UNUSED,
        UNUSED,
        UNUSED,
        1598,
        641,
        0,
        482,
        UNUSED,
        -2,
        822,
        UNUSED,
        -1879,
        596,
        1145,
        UNUSED,
        0,
        3271,
        UNUSED,
        905,
        UNUSED,
        4634,
        UNUSED,
        -303,
        -2077,
        2134,
        UNUSED,
        UNUSED,
        193,
        1290,
        UNUSED,
        UNUSED,
        UNUSED,
        UNUSED,
        9,
        56,
        -7633,
        2225,
        1158,
        1492,
        -1232,
        UNUSED,
        UNUSED,
        UNUSED,
        -497,
        UNUSED,
        UNUSED,
        -1603,
        758,
        2096,
        518,
        1602,
        876,
        -1591,
        UNUSED,
        1563,
        159,
        UNUSED,
        -1331,
        1986,
        UNUSED,
        557,
        4630,
        0,
        5092,
        UNUSED,
        UNUSED,
        UNUSED,
        384,
        UNUSED,
        UNUSED,
        5112,
        UNUSED,
        UNUSED,
        5366,
        747,
        1558,
        -31,
        UNUSED,
        -21,
        0,
        UNUSED,
        UNUSED,
        1985,
        UNUSED,
        -698,
        1830,
        -2868,
        400,
        1579,
        1883,
        931,
        267,
        UNUSED,
        2164,
        7810,
        UNUSED,
        -258,
        681,
        UNUSED,
        360,
        548,
        -5370,
        695,
        1734,
        1786,
        1715,
        UNUSED,
        UNUSED,
        -365,
        5015,
        -2192,
        1885,
        UNUSED,
        UNUSED,
        2149,
        813,
        -381,
        -296,
        4580,
        825,
        961,
        UNUSED,
        1167,
        -1251,
        UNUSED,
        385,
        UNUSED,
        UNUSED,
        2181,
        1684,
        2162,
        1949,
        UNUSED,
        0,
        UNUSED,
        0,
        187,
        319,
        301,
        1513,
        UNUSED,
        UNUSED,
        UNUSED,
        UNUSED,
        UNUSED,
        1485,
        365,
        UNUSED,
        1886,
        1631,
        UNUSED,
        2008,
        791,
        2710,
        3002,
        2143,
        1058,
        344,
        199,
        -3071,
        2097,
        UNUSED,
        UNUSED,
        256,
        0,
        -238,
        1634,
        1809,
        1767,
        UNUSED,
        UNUSED,
        UNUSED,
        UNUSED,
        1162,
        UNUSED,
        -2122,
        1353,
        549,
        -3441,
        826,
        1530,
        978,
        UNUSED,
        7062,
        1566,
        1201,
        1119,
        1325,
        -671,
        -990,
        UNUSED,
        UNUSED,
        -597,
        434,
        1324,
        110,
        -985,
        0,
        UNUSED,
        1343,
        UNUSED,
        -643,
        UNUSED,
        -2308,
        381,
        770,
        1872,
        UNUSED,
        1527,
        0,
        UNUSED,
        1908,
        8626,
        UNUSED,
        472,
        265,
        -379,
        572,
        UNUSED,
        UNUSED,
        347,
        415,
        898,
        2141,
        -1780,
        1551,
        UNUSED,
        371,
        UNUSED,
        0,
        UNUSED,
        UNUSED,
        -769,
        UNUSED,
        0,
        -218,
        533,
        1961,
        UNUSED,
        UNUSED,
        583,
        -619,
        6993,
        2500,
        954,
        986,
        91,
        UNUSED,
        2097,
        5278,
        559,
        780,
        UNUSED,
        UNUSED,
        -545,
        UNUSED,
        941,
        1495,
        UNUSED,
        605,
        -3008,
        UNUSED,
        70,
        160,
        1760,
        UNUSED,
        UNUSED,
        48,
        -1185,
        -1029,
        -712,
        UNUSED,
        UNUSED,
        UNUSED,
        UNUSED,
        -654,
        -1655,
        47,
        543,
        UNUSED,
        UNUSED,
        1563,
        UNUSED,
        4801,
        UNUSED,
        1445,
        -1124,
        UNUSED,
        1518,
        640,
        -990,
        830,
        311,
        402,
        5093,
        1831,
        UNUSED,
        2001,
        -746,
        86,
        -555,
        1247,
        UNUSED,
        UNUSED,
        UNUSED,
        -1051,
        2136,
        6816,
        1577,
        UNUSED,
        784,
        1806,
        0,
        UNUSED,
        693,
        2943,
        2089,
        2155,
        4006,
        202,
        1673,
        UNUSED,
        UNUSED,
        543,
        UNUSED,
        569,
        845,
        UNUSED,
        602,
        UNUSED,
        UNUSED,
        2168,
        -476,
        -3014,
        979,
        123,
        UNUSED,
        445,
        2067,
        119,
        1927,
        -1208,
        -84,
        UNUSED,
        549,
        UNUSED,
        -1323,
        1082,
        700,
        2701,
        -30,
        1527,
        UNUSED,
        UNUSED,
        919,
        814,
        -8,
        162,
        -3062,
        871,
        1007,
        172,
        UNUSED,
        1986,
        0,
        UNUSED,
        UNUSED,
        UNUSED,
        5544,
        248,
        -1515,
        834,
        609,
        -363,
        -1601,
        -130,
        UNUSED,
        1229,
        UNUSED,
        43,
        UNUSED,
        -1893,
        UNUSED,
        -1192,
        -415,
        UNUSED,
        UNUSED,
        1575,
        UNUSED,
        -265,
        1267,
        -774,
        421,
        -78,
        -4444,
        778,
        UNUSED,
        -664,
        5376,
        UNUSED,
        UNUSED,
        2070,
        144,
        -5137,
        206,
        UNUSED,
        UNUSED,
        UNUSED,
        4043,
        447,
        0,
        -3008,
        UNUSED,
        UNUSED,
        2019,
        1372,
        5727,
        -2084,
        -716,
        0,
        -193,
        102,
        -276,
        0,
        UNUSED,
        -824,
        622,
        -4083,
        -105,
        2062,
        2977,
        3665,
        2600,
        550,
        -1121,
        UNUSED,
        1796,
        1814,
        93,
        UNUSED,
        -282,
        UNUSED,
        486,
        UNUSED,
        521,
        1385,
        UNUSED,
        UNUSED,
        UNUSED,
        UNUSED,
        UNUSED,
        UNUSED,
        UNUSED,
        1537,
        39,
        1282,
        1399,
        0,
        UNUSED,
        760,
        692,
        -297,
        2056,
        -1524,
        395,
        UNUSED,
        1323,
        1725,
        UNUSED,
        UNUSED,
        743,
        245,
        1344,
        6561,
        UNUSED,
        1361,
        UNUSED,
        -428,
        2093,
        UNUSED,
        UNUSED,
        2000,
        5140,
        1084,
        215,
        UNUSED,
        -1044,
        UNUSED,
        0,
        UNUSED,
        1457,
        817,
        6657,
        -457,
        2070,
        UNUSED,
        -1894,
        1704,
        UNUSED,
        UNUSED,
        UNUSED,
        UNUSED,
        1283,
        52,
        UNUSED,
        749,
        475,
        457,
        -3245,
        UNUSED,
        -1971,
        UNUSED,
        UNUSED,
        5915,
        3041,
        UNUSED,
        UNUSED,
        -351,
        49,
        1959,
        733,
        317,
        -199,
        UNUSED,
        240,
        1293,
        UNUSED,
        -2077,
        UNUSED,
        UNUSED,
        653,
        UNUSED,
        UNUSED,
        UNUSED,
        1841,
        2018,
        317,
        UNUSED,
        UNUSED,
        -278,
        150,
        UNUSED,
        -142,
        1637,
        UNUSED,
        UNUSED,
        165,
        432,
        UNUSED,
        UNUSED,
        UNUSED,
        UNUSED,
        1766,
        -1333,
        UNUSED,
        753,
        UNUSED,
        1231,
        3803,
        1543,
        UNUSED,
        UNUSED,
        UNUSED,
        UNUSED,
        2111,
        1779,
        616,
        3802,
        -3028,
        865,
        UNUSED,
        1992,
        1035,
        UNUSED,
        2054,
        4868,
        1165,
        UNUSED,
        UNUSED,
        UNUSED,
        UNUSED,
        1350,
        7872,
        1449,
        UNUSED,
        UNUSED,
        UNUSED,
        UNUSED,
        UNUSED,
        UNUSED,
        614,
        1916,
        705,
        -671,
        UNUSED,
        887,
        1160,
        1912,
        467,
        -2344,
        930,
        0,
        UNUSED,
        UNUSED,
        UNUSED,
        1443,
        1500,
        1124,
        -380,
        1552,
        UNUSED,
        518,
        704,
        -1961,
        UNUSED,
        UNUSED,
        1679,
        2041,
        UNUSED,
        1895,
        -1609,
        2172,
        1651,
        UNUSED,
        354,
        1998,
        696,
        3046,
        6017,
        10,
        -1046,
        UNUSED,
        -1181,
        1018,
        -103,
        UNUSED,
        1423,
        542,
        349,
        1156,
        897,
        828,
        UNUSED,
        535,
        1488,
        UNUSED,
        1165,
        1257,
        1353,
        72,
        463,
        UNUSED,
        46,
        UNUSED,
        UNUSED,
        -1884,
        1469,
        2409,
        1201,
        1947,
        UNUSED,
        UNUSED,
        1337,
        UNUSED,
        UNUSED,
        1902,
        UNUSED,
        1152,
        877,
        794,
        UNUSED,
        UNUSED,
        -1670,
        5586,
        473,
        507,
        644,
        UNUSED,
        1447,
        529,
        2518,
        323,
        UNUSED,
        59,
        1008,
        404,
        34,
        2880,
        -1588,
        UNUSED,
        1006,
        UNUSED,
        762,
        1067,
        1441,
        UNUSED,
        -1414,
        -1671,
        UNUSED,
        3046,
        UNUSED,
        UNUSED,
        UNUSED,
        292,
        1124,
        -285,
        2069,
        257,
        UNUSED,
        -1162,
        658,
        UNUSED,
        790,
        1216,
        -63,
        -1246,
        UNUSED,
        1674,
        1939,
        1889,
        -1821,
        -209,
        UNUSED,
        UNUSED,
        442,
        UNUSED,
        -832,
        2165,
        1578,
        818,
        -1915,
        -3664,
        1501,
        522,
        UNUSED,
        793,
        UNUSED,
        1332,
        809,
        849,
        -49,
        UNUSED,
        UNUSED,
        -2145,
        211,
        -1164,
        396,
        UNUSED,
        1027,
        1647,
        101,
        UNUSED,
        UNUSED,
        136,
        -2613,
        UNUSED,
        UNUSED,
        -2420,
        1809,
        1048,
        921,
        UNUSED,
        2348,
        UNUSED
    );
    tokendata : Array[0..2215] of TTokenData = (
        ( strTok:  'db'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_DB ),
        ( strTok:  'dw'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_DW ),
        ( strTok:  'dd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_DD ),
        ( strTok:  'dq'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_DQ ),
        ( strTok:  'dt'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_DT ),
        ( strTok:  'do'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_DO ),
        ( strTok:  'dy'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_DY ),
        ( strTok:  'dz'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_DZ ),
        ( strTok:  'resb'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_RESB ),
        ( strTok:  'resw'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_RESW ),
        ( strTok:  'resd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_RESD ),
        ( strTok:  'resq'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_RESQ ),
        ( strTok:  'rest'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_REST ),
        ( strTok:  'reso'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_RESO ),
        ( strTok:  'resy'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_RESY ),
        ( strTok:  'resz'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_RESZ ),
        ( strTok:  'aaa'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_AAA ),
        ( strTok:  'aad'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_AAD ),
        ( strTok:  'aam'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_AAM ),
        ( strTok:  'aas'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_AAS ),
        ( strTok:  'adc'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_ADC ),
        ( strTok:  'add'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_ADD ),
        ( strTok:  'and'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_AND ),
        ( strTok:  'arpl'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_ARPL ),
        ( strTok:  'bb0_reset'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_BB0_RESET ),
        ( strTok:  'bb1_reset'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_BB1_RESET ),
        ( strTok:  'bound'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_BOUND ),
        ( strTok:  'bsf'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_BSF ),
        ( strTok:  'bsr'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_BSR ),
        ( strTok:  'bswap'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_BSWAP ),
        ( strTok:  'bt'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_BT ),
        ( strTok:  'btc'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_BTC ),
        ( strTok:  'btr'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_BTR ),
        ( strTok:  'bts'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_BTS ),
        ( strTok:  'call'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_CALL ),
        ( strTok:  'cbw'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_CBW ),
        ( strTok:  'cdq'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_CDQ ),
        ( strTok:  'cdqe'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_CDQE ),
        ( strTok:  'clc'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_CLC ),
        ( strTok:  'cld'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_CLD ),
        ( strTok:  'cli'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_CLI ),
        ( strTok:  'clts'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_CLTS ),
        ( strTok:  'cmc'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_CMC ),
        ( strTok:  'cmp'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_CMP ),
        ( strTok:  'cmpsb'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_CMPSB ),
        ( strTok:  'cmpsd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_CMPSD ),
        ( strTok:  'cmpsq'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_CMPSQ ),
        ( strTok:  'cmpsw'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_CMPSW ),
        ( strTok:  'cmpxchg'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_CMPXCHG ),
        ( strTok:  'cmpxchg486'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_CMPXCHG486 ),
        ( strTok:  'cmpxchg8b'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_CMPXCHG8B ),
        ( strTok:  'cmpxchg16b'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_CMPXCHG16B ),
        ( strTok:  'cpuid'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_CPUID ),
        ( strTok:  'cpu_read'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_CPU_READ ),
        ( strTok:  'cpu_write'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_CPU_WRITE ),
        ( strTok:  'cqo'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_CQO ),
        ( strTok:  'cwd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_CWD ),
        ( strTok:  'cwde'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_CWDE ),
        ( strTok:  'daa'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_DAA ),
        ( strTok:  'das'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_DAS ),
        ( strTok:  'dec'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_DEC ),
        ( strTok:  'div'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_DIV ),
        ( strTok:  'dmint'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_DMINT ),
        ( strTok:  'emms'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_EMMS ),
        ( strTok:  'enter'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_ENTER ),
        ( strTok:  'equ'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_EQU ),
        ( strTok:  'f2xm1'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_F2XM1 ),
        ( strTok:  'fabs'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_FABS ),
        ( strTok:  'fadd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_FADD ),
        ( strTok:  'faddp'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_FADDP ),
        ( strTok:  'fbld'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_FBLD ),
        ( strTok:  'fbstp'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_FBSTP ),
        ( strTok:  'fchs'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_FCHS ),
        ( strTok:  'fclex'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_FCLEX ),
        ( strTok:  'fcmovb'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_FCMOVB ),
        ( strTok:  'fcmovbe'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_FCMOVBE ),
        ( strTok:  'fcmove'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_FCMOVE ),
        ( strTok:  'fcmovnb'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_FCMOVNB ),
        ( strTok:  'fcmovnbe'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_FCMOVNBE ),
        ( strTok:  'fcmovne'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_FCMOVNE ),
        ( strTok:  'fcmovnu'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_FCMOVNU ),
        ( strTok:  'fcmovu'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_FCMOVU ),
        ( strTok:  'fcom'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_FCOM ),
        ( strTok:  'fcomi'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_FCOMI ),
        ( strTok:  'fcomip'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_FCOMIP ),
        ( strTok:  'fcomp'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_FCOMP ),
        ( strTok:  'fcompp'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_FCOMPP ),
        ( strTok:  'fcos'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_FCOS ),
        ( strTok:  'fdecstp'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_FDECSTP ),
        ( strTok:  'fdisi'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_FDISI ),
        ( strTok:  'fdiv'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_FDIV ),
        ( strTok:  'fdivp'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_FDIVP ),
        ( strTok:  'fdivr'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_FDIVR ),
        ( strTok:  'fdivrp'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_FDIVRP ),
        ( strTok:  'femms'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_FEMMS ),
        ( strTok:  'feni'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_FENI ),
        ( strTok:  'ffree'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_FFREE ),
        ( strTok:  'ffreep'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_FFREEP ),
        ( strTok:  'fiadd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_FIADD ),
        ( strTok:  'ficom'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_FICOM ),
        ( strTok:  'ficomp'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_FICOMP ),
        ( strTok:  'fidiv'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_FIDIV ),
        ( strTok:  'fidivr'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_FIDIVR ),
        ( strTok:  'fild'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_FILD ),
        ( strTok:  'fimul'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_FIMUL ),
        ( strTok:  'fincstp'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_FINCSTP ),
        ( strTok:  'finit'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_FINIT ),
        ( strTok:  'fist'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_FIST ),
        ( strTok:  'fistp'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_FISTP ),
        ( strTok:  'fisttp'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_FISTTP ),
        ( strTok:  'fisub'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_FISUB ),
        ( strTok:  'fisubr'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_FISUBR ),
        ( strTok:  'fld'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_FLD ),
        ( strTok:  'fld1'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_FLD1 ),
        ( strTok:  'fldcw'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_FLDCW ),
        ( strTok:  'fldenv'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_FLDENV ),
        ( strTok:  'fldl2e'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_FLDL2E ),
        ( strTok:  'fldl2t'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_FLDL2T ),
        ( strTok:  'fldlg2'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_FLDLG2 ),
        ( strTok:  'fldln2'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_FLDLN2 ),
        ( strTok:  'fldpi'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_FLDPI ),
        ( strTok:  'fldz'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_FLDZ ),
        ( strTok:  'fmul'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_FMUL ),
        ( strTok:  'fmulp'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_FMULP ),
        ( strTok:  'fnclex'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_FNCLEX ),
        ( strTok:  'fndisi'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_FNDISI ),
        ( strTok:  'fneni'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_FNENI ),
        ( strTok:  'fninit'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_FNINIT ),
        ( strTok:  'fnop'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_FNOP ),
        ( strTok:  'fnsave'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_FNSAVE ),
        ( strTok:  'fnstcw'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_FNSTCW ),
        ( strTok:  'fnstenv'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_FNSTENV ),
        ( strTok:  'fnstsw'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_FNSTSW ),
        ( strTok:  'fpatan'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_FPATAN ),
        ( strTok:  'fprem'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_FPREM ),
        ( strTok:  'fprem1'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_FPREM1 ),
        ( strTok:  'fptan'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_FPTAN ),
        ( strTok:  'frndint'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_FRNDINT ),
        ( strTok:  'frstor'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_FRSTOR ),
        ( strTok:  'fsave'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_FSAVE ),
        ( strTok:  'fscale'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_FSCALE ),
        ( strTok:  'fsetpm'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_FSETPM ),
        ( strTok:  'fsin'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_FSIN ),
        ( strTok:  'fsincos'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_FSINCOS ),
        ( strTok:  'fsqrt'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_FSQRT ),
        ( strTok:  'fst'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_FST ),
        ( strTok:  'fstcw'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_FSTCW ),
        ( strTok:  'fstenv'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_FSTENV ),
        ( strTok:  'fstp'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_FSTP ),
        ( strTok:  'fstsw'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_FSTSW ),
        ( strTok:  'fsub'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_FSUB ),
        ( strTok:  'fsubp'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_FSUBP ),
        ( strTok:  'fsubr'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_FSUBR ),
        ( strTok:  'fsubrp'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_FSUBRP ),
        ( strTok:  'ftst'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_FTST ),
        ( strTok:  'fucom'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_FUCOM ),
        ( strTok:  'fucomi'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_FUCOMI ),
        ( strTok:  'fucomip'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_FUCOMIP ),
        ( strTok:  'fucomp'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_FUCOMP ),
        ( strTok:  'fucompp'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_FUCOMPP ),
        ( strTok:  'fxam'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_FXAM ),
        ( strTok:  'fxch'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_FXCH ),
        ( strTok:  'fxtract'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_FXTRACT ),
        ( strTok:  'fyl2x'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_FYL2X ),
        ( strTok:  'fyl2xp1'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_FYL2XP1 ),
        ( strTok:  'hlt'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_HLT ),
        ( strTok:  'ibts'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_IBTS ),
        ( strTok:  'icebp'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_ICEBP ),
        ( strTok:  'idiv'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_IDIV ),
        ( strTok:  'imul'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_IMUL ),
        ( strTok:  'in'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_IN ),
        ( strTok:  'inc'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_INC ),
        ( strTok:  'incbin'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_INCBIN ),
        ( strTok:  'insb'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_INSB ),
        ( strTok:  'insd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_INSD ),
        ( strTok:  'insw'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_INSW ),
        ( strTok:  'int'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_INT ),
        ( strTok:  'int01'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_INT01 ),
        ( strTok:  'int1'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_INT1 ),
        ( strTok:  'int03'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_INT03 ),
        ( strTok:  'int3'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_INT3 ),
        ( strTok:  'into'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_INTO ),
        ( strTok:  'invd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_INVD ),
        ( strTok:  'invpcid'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_INVPCID ),
        ( strTok:  'invlpg'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_INVLPG ),
        ( strTok:  'invlpga'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_INVLPGA ),
        ( strTok:  'iret'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_IRET ),
        ( strTok:  'iretd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_IRETD ),
        ( strTok:  'iretq'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_IRETQ ),
        ( strTok:  'iretw'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_IRETW ),
        ( strTok:  'jcxz'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_JCXZ ),
        ( strTok:  'jecxz'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_JECXZ ),
        ( strTok:  'jrcxz'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_JRCXZ ),
        ( strTok:  'jmp'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_JMP ),
        ( strTok:  'jmpe'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_JMPE ),
        ( strTok:  'lahf'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_LAHF ),
        ( strTok:  'lar'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_LAR ),
        ( strTok:  'lds'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_LDS ),
        ( strTok:  'lea'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_LEA ),
        ( strTok:  'leave'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_LEAVE ),
        ( strTok:  'les'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_LES ),
        ( strTok:  'lfence'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_LFENCE ),
        ( strTok:  'lfs'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_LFS ),
        ( strTok:  'lgdt'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_LGDT ),
        ( strTok:  'lgs'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_LGS ),
        ( strTok:  'lidt'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_LIDT ),
        ( strTok:  'lldt'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_LLDT ),
        ( strTok:  'lmsw'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_LMSW ),
        ( strTok:  'loadall'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_LOADALL ),
        ( strTok:  'loadall286'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_LOADALL286 ),
        ( strTok:  'lodsb'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_LODSB ),
        ( strTok:  'lodsd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_LODSD ),
        ( strTok:  'lodsq'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_LODSQ ),
        ( strTok:  'lodsw'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_LODSW ),
        ( strTok:  'loop'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_LOOP ),
        ( strTok:  'loope'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_LOOPE ),
        ( strTok:  'loopne'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_LOOPNE ),
        ( strTok:  'loopnz'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_LOOPNZ ),
        ( strTok:  'loopz'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_LOOPZ ),
        ( strTok:  'lsl'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_LSL ),
        ( strTok:  'lss'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_LSS ),
        ( strTok:  'ltr'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_LTR ),
        ( strTok:  'mfence'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_MFENCE ),
        ( strTok:  'monitor'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_MONITOR ),
        ( strTok:  'mov'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_MOV ),
        ( strTok:  'movd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_MOVD ),
        ( strTok:  'movq'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_MOVQ ),
        ( strTok:  'movsb'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_MOVSB ),
        ( strTok:  'movsd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_MOVSD ),
        ( strTok:  'movsq'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_MOVSQ ),
        ( strTok:  'movsw'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_MOVSW ),
        ( strTok:  'movsx'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_MOVSX ),
        ( strTok:  'movsxd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_MOVSXD ),
        ( strTok:  'movzx'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_MOVZX ),
        ( strTok:  'mul'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_MUL ),
        ( strTok:  'mwait'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_MWAIT ),
        ( strTok:  'neg'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_NEG ),
        ( strTok:  'nop'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_NOP ),
        ( strTok:  'not'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_NOT ),
        ( strTok:  'or'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_OR ),
        ( strTok:  'out'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_OUT ),
        ( strTok:  'outsb'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_OUTSB ),
        ( strTok:  'outsd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_OUTSD ),
        ( strTok:  'outsw'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_OUTSW ),
        ( strTok:  'packssdw'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_PACKSSDW ),
        ( strTok:  'packsswb'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_PACKSSWB ),
        ( strTok:  'packuswb'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_PACKUSWB ),
        ( strTok:  'paddb'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_PADDB ),
        ( strTok:  'paddd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_PADDD ),
        ( strTok:  'paddsb'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_PADDSB ),
        ( strTok:  'paddsiw'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_PADDSIW ),
        ( strTok:  'paddsw'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_PADDSW ),
        ( strTok:  'paddusb'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_PADDUSB ),
        ( strTok:  'paddusw'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_PADDUSW ),
        ( strTok:  'paddw'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_PADDW ),
        ( strTok:  'pand'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_PAND ),
        ( strTok:  'pandn'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_PANDN ),
        ( strTok:  'pause'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_PAUSE ),
        ( strTok:  'paveb'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_PAVEB ),
        ( strTok:  'pavgusb'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_PAVGUSB ),
        ( strTok:  'pcmpeqb'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_PCMPEQB ),
        ( strTok:  'pcmpeqd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_PCMPEQD ),
        ( strTok:  'pcmpeqw'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_PCMPEQW ),
        ( strTok:  'pcmpgtb'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_PCMPGTB ),
        ( strTok:  'pcmpgtd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_PCMPGTD ),
        ( strTok:  'pcmpgtw'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_PCMPGTW ),
        ( strTok:  'pdistib'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_PDISTIB ),
        ( strTok:  'pf2id'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_PF2ID ),
        ( strTok:  'pfacc'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_PFACC ),
        ( strTok:  'pfadd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_PFADD ),
        ( strTok:  'pfcmpeq'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_PFCMPEQ ),
        ( strTok:  'pfcmpge'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_PFCMPGE ),
        ( strTok:  'pfcmpgt'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_PFCMPGT ),
        ( strTok:  'pfmax'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_PFMAX ),
        ( strTok:  'pfmin'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_PFMIN ),
        ( strTok:  'pfmul'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_PFMUL ),
        ( strTok:  'pfrcp'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_PFRCP ),
        ( strTok:  'pfrcpit1'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_PFRCPIT1 ),
        ( strTok:  'pfrcpit2'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_PFRCPIT2 ),
        ( strTok:  'pfrsqit1'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_PFRSQIT1 ),
        ( strTok:  'pfrsqrt'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_PFRSQRT ),
        ( strTok:  'pfsub'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_PFSUB ),
        ( strTok:  'pfsubr'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_PFSUBR ),
        ( strTok:  'pi2fd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_PI2FD ),
        ( strTok:  'pmachriw'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_PMACHRIW ),
        ( strTok:  'pmaddwd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_PMADDWD ),
        ( strTok:  'pmagw'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_PMAGW ),
        ( strTok:  'pmulhriw'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_PMULHRIW ),
        ( strTok:  'pmulhrwa'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_PMULHRWA ),
        ( strTok:  'pmulhrwc'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_PMULHRWC ),
        ( strTok:  'pmulhw'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_PMULHW ),
        ( strTok:  'pmullw'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_PMULLW ),
        ( strTok:  'pmvgezb'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_PMVGEZB ),
        ( strTok:  'pmvlzb'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_PMVLZB ),
        ( strTok:  'pmvnzb'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_PMVNZB ),
        ( strTok:  'pmvzb'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_PMVZB ),
        ( strTok:  'pop'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_POP ),
        ( strTok:  'popa'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_POPA ),
        ( strTok:  'popad'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_POPAD ),
        ( strTok:  'popaw'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_POPAW ),
        ( strTok:  'popf'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_POPF ),
        ( strTok:  'popfd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_POPFD ),
        ( strTok:  'popfq'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_POPFQ ),
        ( strTok:  'popfw'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_POPFW ),
        ( strTok:  'por'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_POR ),
        ( strTok:  'prefetch'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_PREFETCH ),
        ( strTok:  'prefetchw'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_PREFETCHW ),
        ( strTok:  'pslld'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_PSLLD ),
        ( strTok:  'psllq'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_PSLLQ ),
        ( strTok:  'psllw'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_PSLLW ),
        ( strTok:  'psrad'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_PSRAD ),
        ( strTok:  'psraw'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_PSRAW ),
        ( strTok:  'psrld'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_PSRLD ),
        ( strTok:  'psrlq'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_PSRLQ ),
        ( strTok:  'psrlw'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_PSRLW ),
        ( strTok:  'psubb'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_PSUBB ),
        ( strTok:  'psubd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_PSUBD ),
        ( strTok:  'psubsb'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_PSUBSB ),
        ( strTok:  'psubsiw'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_PSUBSIW ),
        ( strTok:  'psubsw'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_PSUBSW ),
        ( strTok:  'psubusb'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_PSUBUSB ),
        ( strTok:  'psubusw'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_PSUBUSW ),
        ( strTok:  'psubw'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_PSUBW ),
        ( strTok:  'punpckhbw'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_PUNPCKHBW ),
        ( strTok:  'punpckhdq'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_PUNPCKHDQ ),
        ( strTok:  'punpckhwd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_PUNPCKHWD ),
        ( strTok:  'punpcklbw'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_PUNPCKLBW ),
        ( strTok:  'punpckldq'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_PUNPCKLDQ ),
        ( strTok:  'punpcklwd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_PUNPCKLWD ),
        ( strTok:  'push'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_PUSH ),
        ( strTok:  'pusha'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_PUSHA ),
        ( strTok:  'pushad'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_PUSHAD ),
        ( strTok:  'pushaw'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_PUSHAW ),
        ( strTok:  'pushf'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_PUSHF ),
        ( strTok:  'pushfd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_PUSHFD ),
        ( strTok:  'pushfq'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_PUSHFQ ),
        ( strTok:  'pushfw'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_PUSHFW ),
        ( strTok:  'pxor'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_PXOR ),
        ( strTok:  'rcl'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_RCL ),
        ( strTok:  'rcr'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_RCR ),
        ( strTok:  'rdshr'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_RDSHR ),
        ( strTok:  'rdmsr'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_RDMSR ),
        ( strTok:  'rdpmc'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_RDPMC ),
        ( strTok:  'rdtsc'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_RDTSC ),
        ( strTok:  'rdtscp'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_RDTSCP ),
        ( strTok:  'ret'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_RET ),
        ( strTok:  'retf'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_RETF ),
        ( strTok:  'retn'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_RETN ),
        ( strTok:  'rol'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_ROL ),
        ( strTok:  'ror'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_ROR ),
        ( strTok:  'rdm'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_RDM ),
        ( strTok:  'rsdc'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_RSDC ),
        ( strTok:  'rsldt'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_RSLDT ),
        ( strTok:  'rsm'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_RSM ),
        ( strTok:  'rsts'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_RSTS ),
        ( strTok:  'sahf'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_SAHF ),
        ( strTok:  'sal'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_SAL ),
        ( strTok:  'salc'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_SALC ),
        ( strTok:  'sar'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_SAR ),
        ( strTok:  'sbb'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_SBB ),
        ( strTok:  'scasb'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_SCASB ),
        ( strTok:  'scasd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_SCASD ),
        ( strTok:  'scasq'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_SCASQ ),
        ( strTok:  'scasw'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_SCASW ),
        ( strTok:  'sfence'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_SFENCE ),
        ( strTok:  'sgdt'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_SGDT ),
        ( strTok:  'shl'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_SHL ),
        ( strTok:  'shld'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_SHLD ),
        ( strTok:  'shr'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_SHR ),
        ( strTok:  'shrd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_SHRD ),
        ( strTok:  'sidt'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_SIDT ),
        ( strTok:  'sldt'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_SLDT ),
        ( strTok:  'skinit'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_SKINIT ),
        ( strTok:  'smi'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_SMI ),
        ( strTok:  'smint'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_SMINT ),
        ( strTok:  'smintold'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_SMINTOLD ),
        ( strTok:  'smsw'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_SMSW ),
        ( strTok:  'stc'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_STC ),
        ( strTok:  'std'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_STD ),
        ( strTok:  'sti'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_STI ),
        ( strTok:  'stosb'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_STOSB ),
        ( strTok:  'stosd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_STOSD ),
        ( strTok:  'stosq'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_STOSQ ),
        ( strTok:  'stosw'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_STOSW ),
        ( strTok:  'str'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_STR ),
        ( strTok:  'sub'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_SUB ),
        ( strTok:  'svdc'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_SVDC ),
        ( strTok:  'svldt'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_SVLDT ),
        ( strTok:  'svts'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_SVTS ),
        ( strTok:  'swapgs'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_SWAPGS ),
        ( strTok:  'syscall'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_SYSCALL ),
        ( strTok:  'sysenter'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_SYSENTER ),
        ( strTok:  'sysexit'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_SYSEXIT ),
        ( strTok:  'sysret'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_SYSRET ),
        ( strTok:  'test'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_TEST ),
        ( strTok:  'ud0'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_UD0 ),
        ( strTok:  'ud1'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_UD1 ),
        ( strTok:  'ud2b'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_UD2B ),
        ( strTok:  'ud2'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_UD2 ),
        ( strTok:  'ud2a'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_UD2A ),
        ( strTok:  'umov'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_UMOV ),
        ( strTok:  'verr'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VERR ),
        ( strTok:  'verw'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VERW ),
        ( strTok:  'fwait'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_FWAIT ),
        ( strTok:  'wbinvd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_WBINVD ),
        ( strTok:  'wrshr'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_WRSHR ),
        ( strTok:  'wrmsr'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_WRMSR ),
        ( strTok:  'xadd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_XADD ),
        ( strTok:  'xbts'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_XBTS ),
        ( strTok:  'xchg'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_XCHG ),
        ( strTok:  'xlatb'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_XLATB ),
        ( strTok:  'xlat'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_XLAT ),
        ( strTok:  'xor'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_XOR ),
        ( strTok:  'cmova'; tokentype:   TOKEN_INSN    ;aux:  C_A; tokflag:  0;  num:       I_CMOVcc ),
        ( strTok:  'cmovae'; tokentype:   TOKEN_INSN    ;aux:  C_AE; tokflag:  0;  num:       I_CMOVcc ),
        ( strTok:  'cmovb'; tokentype:   TOKEN_INSN    ;aux:  C_B; tokflag:  0;  num:       I_CMOVcc ),
        ( strTok:  'cmovbe'; tokentype:   TOKEN_INSN    ;aux:  C_BE; tokflag:  0;  num:       I_CMOVcc ),
        ( strTok:  'cmovc'; tokentype:   TOKEN_INSN    ;aux:  C_C; tokflag:  0;  num:       I_CMOVcc ),
        ( strTok:  'cmove'; tokentype:   TOKEN_INSN    ;aux:  C_E; tokflag:  0;  num:       I_CMOVcc ),
        ( strTok:  'cmovg'; tokentype:   TOKEN_INSN    ;aux:  C_G; tokflag:  0;  num:       I_CMOVcc ),
        ( strTok:  'cmovge'; tokentype:   TOKEN_INSN    ;aux:  C_GE; tokflag:  0;  num:       I_CMOVcc ),
        ( strTok:  'cmovl'; tokentype:   TOKEN_INSN    ;aux:  C_L; tokflag:  0;  num:       I_CMOVcc ),
        ( strTok:  'cmovle'; tokentype:   TOKEN_INSN    ;aux:  C_LE; tokflag:  0;  num:       I_CMOVcc ),
        ( strTok:  'cmovna'; tokentype:   TOKEN_INSN    ;aux:  C_NA; tokflag:  0;  num:       I_CMOVcc ),
        ( strTok:  'cmovnae'; tokentype:   TOKEN_INSN    ;aux:  C_NAE; tokflag:  0;  num:       I_CMOVcc ),
        ( strTok:  'cmovnb'; tokentype:   TOKEN_INSN    ;aux:  C_NB; tokflag:  0;  num:       I_CMOVcc ),
        ( strTok:  'cmovnbe'; tokentype:   TOKEN_INSN    ;aux:  C_NBE; tokflag:  0;  num:       I_CMOVcc ),
        ( strTok:  'cmovnc'; tokentype:   TOKEN_INSN    ;aux:  C_NC; tokflag:  0;  num:       I_CMOVcc ),
        ( strTok:  'cmovne'; tokentype:   TOKEN_INSN    ;aux:  C_NE; tokflag:  0;  num:       I_CMOVcc ),
        ( strTok:  'cmovng'; tokentype:   TOKEN_INSN    ;aux:  C_NG; tokflag:  0;  num:       I_CMOVcc ),
        ( strTok:  'cmovnge'; tokentype:   TOKEN_INSN    ;aux:  C_NGE; tokflag:  0;  num:       I_CMOVcc ),
        ( strTok:  'cmovnl'; tokentype:   TOKEN_INSN    ;aux:  C_NL; tokflag:  0;  num:       I_CMOVcc ),
        ( strTok:  'cmovnle'; tokentype:   TOKEN_INSN    ;aux:  C_NLE; tokflag:  0;  num:       I_CMOVcc ),
        ( strTok:  'cmovno'; tokentype:   TOKEN_INSN    ;aux:  C_NO; tokflag:  0;  num:       I_CMOVcc ),
        ( strTok:  'cmovnp'; tokentype:   TOKEN_INSN    ;aux:  C_NP; tokflag:  0;  num:       I_CMOVcc ),
        ( strTok:  'cmovns'; tokentype:   TOKEN_INSN    ;aux:  C_NS; tokflag:  0;  num:       I_CMOVcc ),
        ( strTok:  'cmovnz'; tokentype:   TOKEN_INSN    ;aux:  C_NZ; tokflag:  0;  num:       I_CMOVcc ),
        ( strTok:  'cmovo'; tokentype:   TOKEN_INSN    ;aux:  C_O; tokflag:  0;  num:       I_CMOVcc ),
        ( strTok:  'cmovp'; tokentype:   TOKEN_INSN    ;aux:  C_P; tokflag:  0;  num:       I_CMOVcc ),
        ( strTok:  'cmovpe'; tokentype:   TOKEN_INSN    ;aux:  C_PE; tokflag:  0;  num:       I_CMOVcc ),
        ( strTok:  'cmovpo'; tokentype:   TOKEN_INSN    ;aux:  C_PO; tokflag:  0;  num:       I_CMOVcc ),
        ( strTok:  'cmovs'; tokentype:   TOKEN_INSN    ;aux:  C_S; tokflag:  0;  num:       I_CMOVcc ),
        ( strTok:  'cmovz'; tokentype:   TOKEN_INSN    ;aux:  C_Z; tokflag:  0;  num:       I_CMOVcc ),
        ( strTok:  'ja'; tokentype:   TOKEN_INSN    ;aux:  C_A; tokflag:  0;  num:       I_Jcc ),
        ( strTok:  'jae'; tokentype:   TOKEN_INSN    ;aux:  C_AE; tokflag:  0;  num:       I_Jcc ),
        ( strTok:  'jb'; tokentype:   TOKEN_INSN    ;aux:  C_B; tokflag:  0;  num:       I_Jcc ),
        ( strTok:  'jbe'; tokentype:   TOKEN_INSN    ;aux:  C_BE; tokflag:  0;  num:       I_Jcc ),
        ( strTok:  'jc'; tokentype:   TOKEN_INSN    ;aux:  C_C; tokflag:  0;  num:       I_Jcc ),
        ( strTok:  'je'; tokentype:   TOKEN_INSN    ;aux:  C_E; tokflag:  0;  num:       I_Jcc ),
        ( strTok:  'jg'; tokentype:   TOKEN_INSN    ;aux:  C_G; tokflag:  0;  num:       I_Jcc ),
        ( strTok:  'jge'; tokentype:   TOKEN_INSN    ;aux:  C_GE; tokflag:  0;  num:       I_Jcc ),
        ( strTok:  'jl'; tokentype:   TOKEN_INSN    ;aux:  C_L; tokflag:  0;  num:       I_Jcc ),
        ( strTok:  'jle'; tokentype:   TOKEN_INSN    ;aux:  C_LE; tokflag:  0;  num:       I_Jcc ),
        ( strTok:  'jna'; tokentype:   TOKEN_INSN    ;aux:  C_NA; tokflag:  0;  num:       I_Jcc ),
        ( strTok:  'jnae'; tokentype:   TOKEN_INSN    ;aux:  C_NAE; tokflag:  0;  num:       I_Jcc ),
        ( strTok:  'jnb'; tokentype:   TOKEN_INSN    ;aux:  C_NB; tokflag:  0;  num:       I_Jcc ),
        ( strTok:  'jnbe'; tokentype:   TOKEN_INSN    ;aux:  C_NBE; tokflag:  0;  num:       I_Jcc ),
        ( strTok:  'jnc'; tokentype:   TOKEN_INSN    ;aux:  C_NC; tokflag:  0;  num:       I_Jcc ),
        ( strTok:  'jne'; tokentype:   TOKEN_INSN    ;aux:  C_NE; tokflag:  0;  num:       I_Jcc ),
        ( strTok:  'jng'; tokentype:   TOKEN_INSN    ;aux:  C_NG; tokflag:  0;  num:       I_Jcc ),
        ( strTok:  'jnge'; tokentype:   TOKEN_INSN    ;aux:  C_NGE; tokflag:  0;  num:       I_Jcc ),
        ( strTok:  'jnl'; tokentype:   TOKEN_INSN    ;aux:  C_NL; tokflag:  0;  num:       I_Jcc ),
        ( strTok:  'jnle'; tokentype:   TOKEN_INSN    ;aux:  C_NLE; tokflag:  0;  num:       I_Jcc ),
        ( strTok:  'jno'; tokentype:   TOKEN_INSN    ;aux:  C_NO; tokflag:  0;  num:       I_Jcc ),
        ( strTok:  'jnp'; tokentype:   TOKEN_INSN    ;aux:  C_NP; tokflag:  0;  num:       I_Jcc ),
        ( strTok:  'jns'; tokentype:   TOKEN_INSN    ;aux:  C_NS; tokflag:  0;  num:       I_Jcc ),
        ( strTok:  'jnz'; tokentype:   TOKEN_INSN    ;aux:  C_NZ; tokflag:  0;  num:       I_Jcc ),
        ( strTok:  'jo'; tokentype:   TOKEN_INSN    ;aux:  C_O; tokflag:  0;  num:       I_Jcc ),
        ( strTok:  'jp'; tokentype:   TOKEN_INSN    ;aux:  C_P; tokflag:  0;  num:       I_Jcc ),
        ( strTok:  'jpe'; tokentype:   TOKEN_INSN    ;aux:  C_PE; tokflag:  0;  num:       I_Jcc ),
        ( strTok:  'jpo'; tokentype:   TOKEN_INSN    ;aux:  C_PO; tokflag:  0;  num:       I_Jcc ),
        ( strTok:  'js'; tokentype:   TOKEN_INSN    ;aux:  C_S; tokflag:  0;  num:       I_Jcc ),
        ( strTok:  'jz'; tokentype:   TOKEN_INSN    ;aux:  C_Z; tokflag:  0;  num:       I_Jcc ),
        ( strTok:  'seta'; tokentype:   TOKEN_INSN    ;aux:  C_A; tokflag:  0;  num:       I_SETcc ),
        ( strTok:  'setae'; tokentype:   TOKEN_INSN    ;aux:  C_AE; tokflag:  0;  num:       I_SETcc ),
        ( strTok:  'setb'; tokentype:   TOKEN_INSN    ;aux:  C_B; tokflag:  0;  num:       I_SETcc ),
        ( strTok:  'setbe'; tokentype:   TOKEN_INSN    ;aux:  C_BE; tokflag:  0;  num:       I_SETcc ),
        ( strTok:  'setc'; tokentype:   TOKEN_INSN    ;aux:  C_C; tokflag:  0;  num:       I_SETcc ),
        ( strTok:  'sete'; tokentype:   TOKEN_INSN    ;aux:  C_E; tokflag:  0;  num:       I_SETcc ),
        ( strTok:  'setg'; tokentype:   TOKEN_INSN    ;aux:  C_G; tokflag:  0;  num:       I_SETcc ),
        ( strTok:  'setge'; tokentype:   TOKEN_INSN    ;aux:  C_GE; tokflag:  0;  num:       I_SETcc ),
        ( strTok:  'setl'; tokentype:   TOKEN_INSN    ;aux:  C_L; tokflag:  0;  num:       I_SETcc ),
        ( strTok:  'setle'; tokentype:   TOKEN_INSN    ;aux:  C_LE; tokflag:  0;  num:       I_SETcc ),
        ( strTok:  'setna'; tokentype:   TOKEN_INSN    ;aux:  C_NA; tokflag:  0;  num:       I_SETcc ),
        ( strTok:  'setnae'; tokentype:   TOKEN_INSN    ;aux:  C_NAE; tokflag:  0;  num:       I_SETcc ),
        ( strTok:  'setnb'; tokentype:   TOKEN_INSN    ;aux:  C_NB; tokflag:  0;  num:       I_SETcc ),
        ( strTok:  'setnbe'; tokentype:   TOKEN_INSN    ;aux:  C_NBE; tokflag:  0;  num:       I_SETcc ),
        ( strTok:  'setnc'; tokentype:   TOKEN_INSN    ;aux:  C_NC; tokflag:  0;  num:       I_SETcc ),
        ( strTok:  'setne'; tokentype:   TOKEN_INSN    ;aux:  C_NE; tokflag:  0;  num:       I_SETcc ),
        ( strTok:  'setng'; tokentype:   TOKEN_INSN    ;aux:  C_NG; tokflag:  0;  num:       I_SETcc ),
        ( strTok:  'setnge'; tokentype:   TOKEN_INSN    ;aux:  C_NGE; tokflag:  0;  num:       I_SETcc ),
        ( strTok:  'setnl'; tokentype:   TOKEN_INSN    ;aux:  C_NL; tokflag:  0;  num:       I_SETcc ),
        ( strTok:  'setnle'; tokentype:   TOKEN_INSN    ;aux:  C_NLE; tokflag:  0;  num:       I_SETcc ),
        ( strTok:  'setno'; tokentype:   TOKEN_INSN    ;aux:  C_NO; tokflag:  0;  num:       I_SETcc ),
        ( strTok:  'setnp'; tokentype:   TOKEN_INSN    ;aux:  C_NP; tokflag:  0;  num:       I_SETcc ),
        ( strTok:  'setns'; tokentype:   TOKEN_INSN    ;aux:  C_NS; tokflag:  0;  num:       I_SETcc ),
        ( strTok:  'setnz'; tokentype:   TOKEN_INSN    ;aux:  C_NZ; tokflag:  0;  num:       I_SETcc ),
        ( strTok:  'seto'; tokentype:   TOKEN_INSN    ;aux:  C_O; tokflag:  0;  num:       I_SETcc ),
        ( strTok:  'setp'; tokentype:   TOKEN_INSN    ;aux:  C_P; tokflag:  0;  num:       I_SETcc ),
        ( strTok:  'setpe'; tokentype:   TOKEN_INSN    ;aux:  C_PE; tokflag:  0;  num:       I_SETcc ),
        ( strTok:  'setpo'; tokentype:   TOKEN_INSN    ;aux:  C_PO; tokflag:  0;  num:       I_SETcc ),
        ( strTok:  'sets'; tokentype:   TOKEN_INSN    ;aux:  C_S; tokflag:  0;  num:       I_SETcc ),
        ( strTok:  'setz'; tokentype:   TOKEN_INSN    ;aux:  C_Z; tokflag:  0;  num:       I_SETcc ),
        ( strTok:  'addps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_ADDPS ),
        ( strTok:  'addss'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_ADDSS ),
        ( strTok:  'andnps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_ANDNPS ),
        ( strTok:  'andps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_ANDPS ),
        ( strTok:  'cmpeqps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_CMPEQPS ),
        ( strTok:  'cmpeqss'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_CMPEQSS ),
        ( strTok:  'cmpleps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_CMPLEPS ),
        ( strTok:  'cmpless'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_CMPLESS ),
        ( strTok:  'cmpltps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_CMPLTPS ),
        ( strTok:  'cmpltss'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_CMPLTSS ),
        ( strTok:  'cmpneqps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_CMPNEQPS ),
        ( strTok:  'cmpneqss'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_CMPNEQSS ),
        ( strTok:  'cmpnleps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_CMPNLEPS ),
        ( strTok:  'cmpnless'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_CMPNLESS ),
        ( strTok:  'cmpnltps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_CMPNLTPS ),
        ( strTok:  'cmpnltss'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_CMPNLTSS ),
        ( strTok:  'cmpordps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_CMPORDPS ),
        ( strTok:  'cmpordss'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_CMPORDSS ),
        ( strTok:  'cmpunordps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_CMPUNORDPS ),
        ( strTok:  'cmpunordss'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_CMPUNORDSS ),
        ( strTok:  'cmpps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_CMPPS ),
        ( strTok:  'cmpss'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_CMPSS ),
        ( strTok:  'comiss'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_COMISS ),
        ( strTok:  'cvtpi2ps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_CVTPI2PS ),
        ( strTok:  'cvtps2pi'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_CVTPS2PI ),
        ( strTok:  'cvtsi2ss'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_CVTSI2SS ),
        ( strTok:  'cvtss2si'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_CVTSS2SI ),
        ( strTok:  'cvttps2pi'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_CVTTPS2PI ),
        ( strTok:  'cvttss2si'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_CVTTSS2SI ),
        ( strTok:  'divps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_DIVPS ),
        ( strTok:  'divss'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_DIVSS ),
        ( strTok:  'ldmxcsr'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_LDMXCSR ),
        ( strTok:  'maxps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_MAXPS ),
        ( strTok:  'maxss'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_MAXSS ),
        ( strTok:  'minps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_MINPS ),
        ( strTok:  'minss'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_MINSS ),
        ( strTok:  'movaps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_MOVAPS ),
        ( strTok:  'movhps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_MOVHPS ),
        ( strTok:  'movlhps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_MOVLHPS ),
        ( strTok:  'movlps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_MOVLPS ),
        ( strTok:  'movhlps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_MOVHLPS ),
        ( strTok:  'movmskps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_MOVMSKPS ),
        ( strTok:  'movntps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_MOVNTPS ),
        ( strTok:  'movss'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_MOVSS ),
        ( strTok:  'movups'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_MOVUPS ),
        ( strTok:  'mulps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_MULPS ),
        ( strTok:  'mulss'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_MULSS ),
        ( strTok:  'orps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_ORPS ),
        ( strTok:  'rcpps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_RCPPS ),
        ( strTok:  'rcpss'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_RCPSS ),
        ( strTok:  'rsqrtps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_RSQRTPS ),
        ( strTok:  'rsqrtss'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_RSQRTSS ),
        ( strTok:  'shufps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_SHUFPS ),
        ( strTok:  'sqrtps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_SQRTPS ),
        ( strTok:  'sqrtss'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_SQRTSS ),
        ( strTok:  'stmxcsr'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_STMXCSR ),
        ( strTok:  'subps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_SUBPS ),
        ( strTok:  'subss'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_SUBSS ),
        ( strTok:  'ucomiss'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_UCOMISS ),
        ( strTok:  'unpckhps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_UNPCKHPS ),
        ( strTok:  'unpcklps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_UNPCKLPS ),
        ( strTok:  'xorps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_XORPS ),
        ( strTok:  'fxrstor'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_FXRSTOR ),
        ( strTok:  'fxrstor64'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_FXRSTOR64 ),
        ( strTok:  'fxsave'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_FXSAVE ),
        ( strTok:  'fxsave64'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_FXSAVE64 ),
        ( strTok:  'xgetbv'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_XGETBV ),
        ( strTok:  'xsetbv'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_XSETBV ),
        ( strTok:  'xsave'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_XSAVE ),
        ( strTok:  'xsave64'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_XSAVE64 ),
        ( strTok:  'xsavec'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_XSAVEC ),
        ( strTok:  'xsavec64'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_XSAVEC64 ),
        ( strTok:  'xsaveopt'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_XSAVEOPT ),
        ( strTok:  'xsaveopt64'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_XSAVEOPT64 ),
        ( strTok:  'xsaves'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_XSAVES ),
        ( strTok:  'xsaves64'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_XSAVES64 ),
        ( strTok:  'xrstor'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_XRSTOR ),
        ( strTok:  'xrstor64'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_XRSTOR64 ),
        ( strTok:  'xrstors'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_XRSTORS ),
        ( strTok:  'xrstors64'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_XRSTORS64 ),
        ( strTok:  'prefetchnta'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_PREFETCHNTA ),
        ( strTok:  'prefetcht0'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_PREFETCHT0 ),
        ( strTok:  'prefetcht1'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_PREFETCHT1 ),
        ( strTok:  'prefetcht2'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_PREFETCHT2 ),
        ( strTok:  'maskmovq'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_MASKMOVQ ),
        ( strTok:  'movntq'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_MOVNTQ ),
        ( strTok:  'pavgb'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_PAVGB ),
        ( strTok:  'pavgw'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_PAVGW ),
        ( strTok:  'pextrw'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_PEXTRW ),
        ( strTok:  'pinsrw'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_PINSRW ),
        ( strTok:  'pmaxsw'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_PMAXSW ),
        ( strTok:  'pmaxub'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_PMAXUB ),
        ( strTok:  'pminsw'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_PMINSW ),
        ( strTok:  'pminub'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_PMINUB ),
        ( strTok:  'pmovmskb'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_PMOVMSKB ),
        ( strTok:  'pmulhuw'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_PMULHUW ),
        ( strTok:  'psadbw'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_PSADBW ),
        ( strTok:  'pshufw'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_PSHUFW ),
        ( strTok:  'pf2iw'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_PF2IW ),
        ( strTok:  'pfnacc'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_PFNACC ),
        ( strTok:  'pfpnacc'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_PFPNACC ),
        ( strTok:  'pi2fw'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_PI2FW ),
        ( strTok:  'pswapd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_PSWAPD ),
        ( strTok:  'maskmovdqu'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_MASKMOVDQU ),
        ( strTok:  'clflush'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_CLFLUSH ),
        ( strTok:  'movntdq'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_MOVNTDQ ),
        ( strTok:  'movnti'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_MOVNTI ),
        ( strTok:  'movntpd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_MOVNTPD ),
        ( strTok:  'movdqa'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_MOVDQA ),
        ( strTok:  'movdqu'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_MOVDQU ),
        ( strTok:  'movdq2q'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_MOVDQ2Q ),
        ( strTok:  'movq2dq'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_MOVQ2DQ ),
        ( strTok:  'paddq'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_PADDQ ),
        ( strTok:  'pmuludq'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_PMULUDQ ),
        ( strTok:  'pshufd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_PSHUFD ),
        ( strTok:  'pshufhw'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_PSHUFHW ),
        ( strTok:  'pshuflw'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_PSHUFLW ),
        ( strTok:  'pslldq'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_PSLLDQ ),
        ( strTok:  'psrldq'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_PSRLDQ ),
        ( strTok:  'psubq'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_PSUBQ ),
        ( strTok:  'punpckhqdq'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_PUNPCKHQDQ ),
        ( strTok:  'punpcklqdq'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_PUNPCKLQDQ ),
        ( strTok:  'addpd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_ADDPD ),
        ( strTok:  'addsd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_ADDSD ),
        ( strTok:  'andnpd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_ANDNPD ),
        ( strTok:  'andpd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_ANDPD ),
        ( strTok:  'cmpeqpd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_CMPEQPD ),
        ( strTok:  'cmpeqsd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_CMPEQSD ),
        ( strTok:  'cmplepd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_CMPLEPD ),
        ( strTok:  'cmplesd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_CMPLESD ),
        ( strTok:  'cmpltpd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_CMPLTPD ),
        ( strTok:  'cmpltsd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_CMPLTSD ),
        ( strTok:  'cmpneqpd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_CMPNEQPD ),
        ( strTok:  'cmpneqsd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_CMPNEQSD ),
        ( strTok:  'cmpnlepd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_CMPNLEPD ),
        ( strTok:  'cmpnlesd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_CMPNLESD ),
        ( strTok:  'cmpnltpd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_CMPNLTPD ),
        ( strTok:  'cmpnltsd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_CMPNLTSD ),
        ( strTok:  'cmpordpd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_CMPORDPD ),
        ( strTok:  'cmpordsd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_CMPORDSD ),
        ( strTok:  'cmpunordpd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_CMPUNORDPD ),
        ( strTok:  'cmpunordsd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_CMPUNORDSD ),
        ( strTok:  'cmppd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_CMPPD ),
        ( strTok:  'comisd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_COMISD ),
        ( strTok:  'cvtdq2pd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_CVTDQ2PD ),
        ( strTok:  'cvtdq2ps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_CVTDQ2PS ),
        ( strTok:  'cvtpd2dq'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_CVTPD2DQ ),
        ( strTok:  'cvtpd2pi'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_CVTPD2PI ),
        ( strTok:  'cvtpd2ps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_CVTPD2PS ),
        ( strTok:  'cvtpi2pd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_CVTPI2PD ),
        ( strTok:  'cvtps2dq'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_CVTPS2DQ ),
        ( strTok:  'cvtps2pd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_CVTPS2PD ),
        ( strTok:  'cvtsd2si'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_CVTSD2SI ),
        ( strTok:  'cvtsd2ss'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_CVTSD2SS ),
        ( strTok:  'cvtsi2sd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_CVTSI2SD ),
        ( strTok:  'cvtss2sd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_CVTSS2SD ),
        ( strTok:  'cvttpd2pi'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_CVTTPD2PI ),
        ( strTok:  'cvttpd2dq'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_CVTTPD2DQ ),
        ( strTok:  'cvttps2dq'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_CVTTPS2DQ ),
        ( strTok:  'cvttsd2si'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_CVTTSD2SI ),
        ( strTok:  'divpd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_DIVPD ),
        ( strTok:  'divsd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_DIVSD ),
        ( strTok:  'maxpd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_MAXPD ),
        ( strTok:  'maxsd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_MAXSD ),
        ( strTok:  'minpd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_MINPD ),
        ( strTok:  'minsd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_MINSD ),
        ( strTok:  'movapd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_MOVAPD ),
        ( strTok:  'movhpd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_MOVHPD ),
        ( strTok:  'movlpd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_MOVLPD ),
        ( strTok:  'movmskpd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_MOVMSKPD ),
        ( strTok:  'movupd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_MOVUPD ),
        ( strTok:  'mulpd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_MULPD ),
        ( strTok:  'mulsd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_MULSD ),
        ( strTok:  'orpd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_ORPD ),
        ( strTok:  'shufpd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_SHUFPD ),
        ( strTok:  'sqrtpd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_SQRTPD ),
        ( strTok:  'sqrtsd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_SQRTSD ),
        ( strTok:  'subpd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_SUBPD ),
        ( strTok:  'subsd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_SUBSD ),
        ( strTok:  'ucomisd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_UCOMISD ),
        ( strTok:  'unpckhpd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_UNPCKHPD ),
        ( strTok:  'unpcklpd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_UNPCKLPD ),
        ( strTok:  'xorpd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_XORPD ),
        ( strTok:  'addsubpd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_ADDSUBPD ),
        ( strTok:  'addsubps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_ADDSUBPS ),
        ( strTok:  'haddpd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_HADDPD ),
        ( strTok:  'haddps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_HADDPS ),
        ( strTok:  'hsubpd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_HSUBPD ),
        ( strTok:  'hsubps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_HSUBPS ),
        ( strTok:  'lddqu'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_LDDQU ),
        ( strTok:  'movddup'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_MOVDDUP ),
        ( strTok:  'movshdup'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_MOVSHDUP ),
        ( strTok:  'movsldup'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_MOVSLDUP ),
        ( strTok:  'clgi'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_CLGI ),
        ( strTok:  'stgi'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_STGI ),
        ( strTok:  'vmcall'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VMCALL ),
        ( strTok:  'vmclear'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VMCLEAR ),
        ( strTok:  'vmfunc'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VMFUNC ),
        ( strTok:  'vmlaunch'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VMLAUNCH ),
        ( strTok:  'vmload'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VMLOAD ),
        ( strTok:  'vmmcall'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VMMCALL ),
        ( strTok:  'vmptrld'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VMPTRLD ),
        ( strTok:  'vmptrst'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VMPTRST ),
        ( strTok:  'vmread'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VMREAD ),
        ( strTok:  'vmresume'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VMRESUME ),
        ( strTok:  'vmrun'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VMRUN ),
        ( strTok:  'vmsave'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VMSAVE ),
        ( strTok:  'vmwrite'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VMWRITE ),
        ( strTok:  'vmxoff'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VMXOFF ),
        ( strTok:  'vmxon'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VMXON ),
        ( strTok:  'invept'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_INVEPT ),
        ( strTok:  'invvpid'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_INVVPID ),
        ( strTok:  'pabsb'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_PABSB ),
        ( strTok:  'pabsw'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_PABSW ),
        ( strTok:  'pabsd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_PABSD ),
        ( strTok:  'palignr'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_PALIGNR ),
        ( strTok:  'phaddw'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_PHADDW ),
        ( strTok:  'phaddd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_PHADDD ),
        ( strTok:  'phaddsw'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_PHADDSW ),
        ( strTok:  'phsubw'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_PHSUBW ),
        ( strTok:  'phsubd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_PHSUBD ),
        ( strTok:  'phsubsw'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_PHSUBSW ),
        ( strTok:  'pmaddubsw'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_PMADDUBSW ),
        ( strTok:  'pmulhrsw'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_PMULHRSW ),
        ( strTok:  'pshufb'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_PSHUFB ),
        ( strTok:  'psignb'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_PSIGNB ),
        ( strTok:  'psignw'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_PSIGNW ),
        ( strTok:  'psignd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_PSIGND ),
        ( strTok:  'extrq'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_EXTRQ ),
        ( strTok:  'insertq'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_INSERTQ ),
        ( strTok:  'movntsd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_MOVNTSD ),
        ( strTok:  'movntss'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_MOVNTSS ),
        ( strTok:  'lzcnt'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_LZCNT ),
        ( strTok:  'blendpd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_BLENDPD ),
        ( strTok:  'blendps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_BLENDPS ),
        ( strTok:  'blendvpd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_BLENDVPD ),
        ( strTok:  'blendvps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_BLENDVPS ),
        ( strTok:  'dppd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_DPPD ),
        ( strTok:  'dpps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_DPPS ),
        ( strTok:  'extractps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_EXTRACTPS ),
        ( strTok:  'insertps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_INSERTPS ),
        ( strTok:  'movntdqa'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_MOVNTDQA ),
        ( strTok:  'mpsadbw'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_MPSADBW ),
        ( strTok:  'packusdw'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_PACKUSDW ),
        ( strTok:  'pblendvb'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_PBLENDVB ),
        ( strTok:  'pblendw'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_PBLENDW ),
        ( strTok:  'pcmpeqq'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_PCMPEQQ ),
        ( strTok:  'pextrb'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_PEXTRB ),
        ( strTok:  'pextrd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_PEXTRD ),
        ( strTok:  'pextrq'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_PEXTRQ ),
        ( strTok:  'phminposuw'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_PHMINPOSUW ),
        ( strTok:  'pinsrb'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_PINSRB ),
        ( strTok:  'pinsrd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_PINSRD ),
        ( strTok:  'pinsrq'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_PINSRQ ),
        ( strTok:  'pmaxsb'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_PMAXSB ),
        ( strTok:  'pmaxsd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_PMAXSD ),
        ( strTok:  'pmaxud'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_PMAXUD ),
        ( strTok:  'pmaxuw'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_PMAXUW ),
        ( strTok:  'pminsb'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_PMINSB ),
        ( strTok:  'pminsd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_PMINSD ),
        ( strTok:  'pminud'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_PMINUD ),
        ( strTok:  'pminuw'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_PMINUW ),
        ( strTok:  'pmovsxbw'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_PMOVSXBW ),
        ( strTok:  'pmovsxbd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_PMOVSXBD ),
        ( strTok:  'pmovsxbq'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_PMOVSXBQ ),
        ( strTok:  'pmovsxwd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_PMOVSXWD ),
        ( strTok:  'pmovsxwq'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_PMOVSXWQ ),
        ( strTok:  'pmovsxdq'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_PMOVSXDQ ),
        ( strTok:  'pmovzxbw'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_PMOVZXBW ),
        ( strTok:  'pmovzxbd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_PMOVZXBD ),
        ( strTok:  'pmovzxbq'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_PMOVZXBQ ),
        ( strTok:  'pmovzxwd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_PMOVZXWD ),
        ( strTok:  'pmovzxwq'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_PMOVZXWQ ),
        ( strTok:  'pmovzxdq'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_PMOVZXDQ ),
        ( strTok:  'pmuldq'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_PMULDQ ),
        ( strTok:  'pmulld'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_PMULLD ),
        ( strTok:  'ptest'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_PTEST ),
        ( strTok:  'roundpd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_ROUNDPD ),
        ( strTok:  'roundps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_ROUNDPS ),
        ( strTok:  'roundsd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_ROUNDSD ),
        ( strTok:  'roundss'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_ROUNDSS ),
        ( strTok:  'crc32'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_CRC32 ),
        ( strTok:  'pcmpestri'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_PCMPESTRI ),
        ( strTok:  'pcmpestrm'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_PCMPESTRM ),
        ( strTok:  'pcmpistri'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_PCMPISTRI ),
        ( strTok:  'pcmpistrm'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_PCMPISTRM ),
        ( strTok:  'pcmpgtq'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_PCMPGTQ ),
        ( strTok:  'popcnt'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_POPCNT ),
        ( strTok:  'getsec'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_GETSEC ),
        ( strTok:  'pfrcpv'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_PFRCPV ),
        ( strTok:  'pfrsqrtv'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_PFRSQRTV ),
        ( strTok:  'movbe'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_MOVBE ),
        ( strTok:  'aesenc'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_AESENC ),
        ( strTok:  'aesenclast'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_AESENCLAST ),
        ( strTok:  'aesdec'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_AESDEC ),
        ( strTok:  'aesdeclast'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_AESDECLAST ),
        ( strTok:  'aesimc'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_AESIMC ),
        ( strTok:  'aeskeygenassist'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_AESKEYGENASSIST ),
        ( strTok:  'vaesenc'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VAESENC ),
        ( strTok:  'vaesenclast'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VAESENCLAST ),
        ( strTok:  'vaesdec'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VAESDEC ),
        ( strTok:  'vaesdeclast'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VAESDECLAST ),
        ( strTok:  'vaesimc'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VAESIMC ),
        ( strTok:  'vaeskeygenassist'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VAESKEYGENASSIST ),
        ( strTok:  'vaddpd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VADDPD ),
        ( strTok:  'vaddps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VADDPS ),
        ( strTok:  'vaddsd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VADDSD ),
        ( strTok:  'vaddss'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VADDSS ),
        ( strTok:  'vaddsubpd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VADDSUBPD ),
        ( strTok:  'vaddsubps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VADDSUBPS ),
        ( strTok:  'vandpd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VANDPD ),
        ( strTok:  'vandps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VANDPS ),
        ( strTok:  'vandnpd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VANDNPD ),
        ( strTok:  'vandnps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VANDNPS ),
        ( strTok:  'vblendpd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VBLENDPD ),
        ( strTok:  'vblendps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VBLENDPS ),
        ( strTok:  'vblendvpd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VBLENDVPD ),
        ( strTok:  'vblendvps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VBLENDVPS ),
        ( strTok:  'vbroadcastss'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VBROADCASTSS ),
        ( strTok:  'vbroadcastsd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VBROADCASTSD ),
        ( strTok:  'vbroadcastf128'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VBROADCASTF128 ),
        ( strTok:  'vcmpeq_ospd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCMPEQ_OSPD ),
        ( strTok:  'vcmpeqpd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCMPEQPD ),
        ( strTok:  'vcmplt_ospd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCMPLT_OSPD ),
        ( strTok:  'vcmpltpd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCMPLTPD ),
        ( strTok:  'vcmple_ospd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCMPLE_OSPD ),
        ( strTok:  'vcmplepd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCMPLEPD ),
        ( strTok:  'vcmpunord_qpd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCMPUNORD_QPD ),
        ( strTok:  'vcmpunordpd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCMPUNORDPD ),
        ( strTok:  'vcmpneq_uqpd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCMPNEQ_UQPD ),
        ( strTok:  'vcmpneqpd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCMPNEQPD ),
        ( strTok:  'vcmpnlt_uspd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCMPNLT_USPD ),
        ( strTok:  'vcmpnltpd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCMPNLTPD ),
        ( strTok:  'vcmpnle_uspd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCMPNLE_USPD ),
        ( strTok:  'vcmpnlepd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCMPNLEPD ),
        ( strTok:  'vcmpord_qpd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCMPORD_QPD ),
        ( strTok:  'vcmpordpd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCMPORDPD ),
        ( strTok:  'vcmpeq_uqpd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCMPEQ_UQPD ),
        ( strTok:  'vcmpnge_uspd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCMPNGE_USPD ),
        ( strTok:  'vcmpngepd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCMPNGEPD ),
        ( strTok:  'vcmpngt_uspd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCMPNGT_USPD ),
        ( strTok:  'vcmpngtpd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCMPNGTPD ),
        ( strTok:  'vcmpfalse_oqpd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCMPFALSE_OQPD ),
        ( strTok:  'vcmpfalsepd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCMPFALSEPD ),
        ( strTok:  'vcmpneq_oqpd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCMPNEQ_OQPD ),
        ( strTok:  'vcmpge_ospd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCMPGE_OSPD ),
        ( strTok:  'vcmpgepd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCMPGEPD ),
        ( strTok:  'vcmpgt_ospd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCMPGT_OSPD ),
        ( strTok:  'vcmpgtpd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCMPGTPD ),
        ( strTok:  'vcmptrue_uqpd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCMPTRUE_UQPD ),
        ( strTok:  'vcmptruepd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCMPTRUEPD ),
        ( strTok:  'vcmplt_oqpd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCMPLT_OQPD ),
        ( strTok:  'vcmple_oqpd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCMPLE_OQPD ),
        ( strTok:  'vcmpunord_spd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCMPUNORD_SPD ),
        ( strTok:  'vcmpneq_uspd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCMPNEQ_USPD ),
        ( strTok:  'vcmpnlt_uqpd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCMPNLT_UQPD ),
        ( strTok:  'vcmpnle_uqpd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCMPNLE_UQPD ),
        ( strTok:  'vcmpord_spd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCMPORD_SPD ),
        ( strTok:  'vcmpeq_uspd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCMPEQ_USPD ),
        ( strTok:  'vcmpnge_uqpd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCMPNGE_UQPD ),
        ( strTok:  'vcmpngt_uqpd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCMPNGT_UQPD ),
        ( strTok:  'vcmpfalse_ospd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCMPFALSE_OSPD ),
        ( strTok:  'vcmpneq_ospd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCMPNEQ_OSPD ),
        ( strTok:  'vcmpge_oqpd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCMPGE_OQPD ),
        ( strTok:  'vcmpgt_oqpd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCMPGT_OQPD ),
        ( strTok:  'vcmptrue_uspd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCMPTRUE_USPD ),
        ( strTok:  'vcmppd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCMPPD ),
        ( strTok:  'vcmpeq_osps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCMPEQ_OSPS ),
        ( strTok:  'vcmpeqps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCMPEQPS ),
        ( strTok:  'vcmplt_osps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCMPLT_OSPS ),
        ( strTok:  'vcmpltps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCMPLTPS ),
        ( strTok:  'vcmple_osps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCMPLE_OSPS ),
        ( strTok:  'vcmpleps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCMPLEPS ),
        ( strTok:  'vcmpunord_qps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCMPUNORD_QPS ),
        ( strTok:  'vcmpunordps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCMPUNORDPS ),
        ( strTok:  'vcmpneq_uqps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCMPNEQ_UQPS ),
        ( strTok:  'vcmpneqps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCMPNEQPS ),
        ( strTok:  'vcmpnlt_usps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCMPNLT_USPS ),
        ( strTok:  'vcmpnltps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCMPNLTPS ),
        ( strTok:  'vcmpnle_usps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCMPNLE_USPS ),
        ( strTok:  'vcmpnleps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCMPNLEPS ),
        ( strTok:  'vcmpord_qps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCMPORD_QPS ),
        ( strTok:  'vcmpordps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCMPORDPS ),
        ( strTok:  'vcmpeq_uqps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCMPEQ_UQPS ),
        ( strTok:  'vcmpnge_usps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCMPNGE_USPS ),
        ( strTok:  'vcmpngeps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCMPNGEPS ),
        ( strTok:  'vcmpngt_usps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCMPNGT_USPS ),
        ( strTok:  'vcmpngtps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCMPNGTPS ),
        ( strTok:  'vcmpfalse_oqps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCMPFALSE_OQPS ),
        ( strTok:  'vcmpfalseps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCMPFALSEPS ),
        ( strTok:  'vcmpneq_oqps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCMPNEQ_OQPS ),
        ( strTok:  'vcmpge_osps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCMPGE_OSPS ),
        ( strTok:  'vcmpgeps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCMPGEPS ),
        ( strTok:  'vcmpgt_osps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCMPGT_OSPS ),
        ( strTok:  'vcmpgtps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCMPGTPS ),
        ( strTok:  'vcmptrue_uqps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCMPTRUE_UQPS ),
        ( strTok:  'vcmptrueps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCMPTRUEPS ),
        ( strTok:  'vcmplt_oqps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCMPLT_OQPS ),
        ( strTok:  'vcmple_oqps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCMPLE_OQPS ),
        ( strTok:  'vcmpunord_sps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCMPUNORD_SPS ),
        ( strTok:  'vcmpneq_usps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCMPNEQ_USPS ),
        ( strTok:  'vcmpnlt_uqps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCMPNLT_UQPS ),
        ( strTok:  'vcmpnle_uqps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCMPNLE_UQPS ),
        ( strTok:  'vcmpord_sps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCMPORD_SPS ),
        ( strTok:  'vcmpeq_usps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCMPEQ_USPS ),
        ( strTok:  'vcmpnge_uqps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCMPNGE_UQPS ),
        ( strTok:  'vcmpngt_uqps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCMPNGT_UQPS ),
        ( strTok:  'vcmpfalse_osps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCMPFALSE_OSPS ),
        ( strTok:  'vcmpneq_osps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCMPNEQ_OSPS ),
        ( strTok:  'vcmpge_oqps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCMPGE_OQPS ),
        ( strTok:  'vcmpgt_oqps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCMPGT_OQPS ),
        ( strTok:  'vcmptrue_usps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCMPTRUE_USPS ),
        ( strTok:  'vcmpps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCMPPS ),
        ( strTok:  'vcmpeq_ossd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCMPEQ_OSSD ),
        ( strTok:  'vcmpeqsd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCMPEQSD ),
        ( strTok:  'vcmplt_ossd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCMPLT_OSSD ),
        ( strTok:  'vcmpltsd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCMPLTSD ),
        ( strTok:  'vcmple_ossd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCMPLE_OSSD ),
        ( strTok:  'vcmplesd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCMPLESD ),
        ( strTok:  'vcmpunord_qsd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCMPUNORD_QSD ),
        ( strTok:  'vcmpunordsd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCMPUNORDSD ),
        ( strTok:  'vcmpneq_uqsd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCMPNEQ_UQSD ),
        ( strTok:  'vcmpneqsd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCMPNEQSD ),
        ( strTok:  'vcmpnlt_ussd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCMPNLT_USSD ),
        ( strTok:  'vcmpnltsd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCMPNLTSD ),
        ( strTok:  'vcmpnle_ussd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCMPNLE_USSD ),
        ( strTok:  'vcmpnlesd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCMPNLESD ),
        ( strTok:  'vcmpord_qsd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCMPORD_QSD ),
        ( strTok:  'vcmpordsd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCMPORDSD ),
        ( strTok:  'vcmpeq_uqsd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCMPEQ_UQSD ),
        ( strTok:  'vcmpnge_ussd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCMPNGE_USSD ),
        ( strTok:  'vcmpngesd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCMPNGESD ),
        ( strTok:  'vcmpngt_ussd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCMPNGT_USSD ),
        ( strTok:  'vcmpngtsd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCMPNGTSD ),
        ( strTok:  'vcmpfalse_oqsd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCMPFALSE_OQSD ),
        ( strTok:  'vcmpfalsesd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCMPFALSESD ),
        ( strTok:  'vcmpneq_oqsd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCMPNEQ_OQSD ),
        ( strTok:  'vcmpge_ossd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCMPGE_OSSD ),
        ( strTok:  'vcmpgesd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCMPGESD ),
        ( strTok:  'vcmpgt_ossd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCMPGT_OSSD ),
        ( strTok:  'vcmpgtsd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCMPGTSD ),
        ( strTok:  'vcmptrue_uqsd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCMPTRUE_UQSD ),
        ( strTok:  'vcmptruesd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCMPTRUESD ),
        ( strTok:  'vcmplt_oqsd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCMPLT_OQSD ),
        ( strTok:  'vcmple_oqsd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCMPLE_OQSD ),
        ( strTok:  'vcmpunord_ssd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCMPUNORD_SSD ),
        ( strTok:  'vcmpneq_ussd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCMPNEQ_USSD ),
        ( strTok:  'vcmpnlt_uqsd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCMPNLT_UQSD ),
        ( strTok:  'vcmpnle_uqsd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCMPNLE_UQSD ),
        ( strTok:  'vcmpord_ssd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCMPORD_SSD ),
        ( strTok:  'vcmpeq_ussd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCMPEQ_USSD ),
        ( strTok:  'vcmpnge_uqsd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCMPNGE_UQSD ),
        ( strTok:  'vcmpngt_uqsd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCMPNGT_UQSD ),
        ( strTok:  'vcmpfalse_ossd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCMPFALSE_OSSD ),
        ( strTok:  'vcmpneq_ossd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCMPNEQ_OSSD ),
        ( strTok:  'vcmpge_oqsd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCMPGE_OQSD ),
        ( strTok:  'vcmpgt_oqsd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCMPGT_OQSD ),
        ( strTok:  'vcmptrue_ussd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCMPTRUE_USSD ),
        ( strTok:  'vcmpsd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCMPSD ),
        ( strTok:  'vcmpeq_osss'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCMPEQ_OSSS ),
        ( strTok:  'vcmpeqss'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCMPEQSS ),
        ( strTok:  'vcmplt_osss'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCMPLT_OSSS ),
        ( strTok:  'vcmpltss'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCMPLTSS ),
        ( strTok:  'vcmple_osss'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCMPLE_OSSS ),
        ( strTok:  'vcmpless'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCMPLESS ),
        ( strTok:  'vcmpunord_qss'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCMPUNORD_QSS ),
        ( strTok:  'vcmpunordss'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCMPUNORDSS ),
        ( strTok:  'vcmpneq_uqss'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCMPNEQ_UQSS ),
        ( strTok:  'vcmpneqss'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCMPNEQSS ),
        ( strTok:  'vcmpnlt_usss'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCMPNLT_USSS ),
        ( strTok:  'vcmpnltss'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCMPNLTSS ),
        ( strTok:  'vcmpnle_usss'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCMPNLE_USSS ),
        ( strTok:  'vcmpnless'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCMPNLESS ),
        ( strTok:  'vcmpord_qss'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCMPORD_QSS ),
        ( strTok:  'vcmpordss'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCMPORDSS ),
        ( strTok:  'vcmpeq_uqss'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCMPEQ_UQSS ),
        ( strTok:  'vcmpnge_usss'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCMPNGE_USSS ),
        ( strTok:  'vcmpngess'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCMPNGESS ),
        ( strTok:  'vcmpngt_usss'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCMPNGT_USSS ),
        ( strTok:  'vcmpngtss'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCMPNGTSS ),
        ( strTok:  'vcmpfalse_oqss'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCMPFALSE_OQSS ),
        ( strTok:  'vcmpfalsess'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCMPFALSESS ),
        ( strTok:  'vcmpneq_oqss'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCMPNEQ_OQSS ),
        ( strTok:  'vcmpge_osss'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCMPGE_OSSS ),
        ( strTok:  'vcmpgess'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCMPGESS ),
        ( strTok:  'vcmpgt_osss'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCMPGT_OSSS ),
        ( strTok:  'vcmpgtss'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCMPGTSS ),
        ( strTok:  'vcmptrue_uqss'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCMPTRUE_UQSS ),
        ( strTok:  'vcmptruess'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCMPTRUESS ),
        ( strTok:  'vcmplt_oqss'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCMPLT_OQSS ),
        ( strTok:  'vcmple_oqss'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCMPLE_OQSS ),
        ( strTok:  'vcmpunord_sss'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCMPUNORD_SSS ),
        ( strTok:  'vcmpneq_usss'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCMPNEQ_USSS ),
        ( strTok:  'vcmpnlt_uqss'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCMPNLT_UQSS ),
        ( strTok:  'vcmpnle_uqss'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCMPNLE_UQSS ),
        ( strTok:  'vcmpord_sss'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCMPORD_SSS ),
        ( strTok:  'vcmpeq_usss'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCMPEQ_USSS ),
        ( strTok:  'vcmpnge_uqss'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCMPNGE_UQSS ),
        ( strTok:  'vcmpngt_uqss'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCMPNGT_UQSS ),
        ( strTok:  'vcmpfalse_osss'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCMPFALSE_OSSS ),
        ( strTok:  'vcmpneq_osss'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCMPNEQ_OSSS ),
        ( strTok:  'vcmpge_oqss'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCMPGE_OQSS ),
        ( strTok:  'vcmpgt_oqss'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCMPGT_OQSS ),
        ( strTok:  'vcmptrue_usss'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCMPTRUE_USSS ),
        ( strTok:  'vcmpss'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCMPSS ),
        ( strTok:  'vcomisd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCOMISD ),
        ( strTok:  'vcomiss'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCOMISS ),
        ( strTok:  'vcvtdq2pd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCVTDQ2PD ),
        ( strTok:  'vcvtdq2ps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCVTDQ2PS ),
        ( strTok:  'vcvtpd2dq'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCVTPD2DQ ),
        ( strTok:  'vcvtpd2ps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCVTPD2PS ),
        ( strTok:  'vcvtps2dq'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCVTPS2DQ ),
        ( strTok:  'vcvtps2pd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCVTPS2PD ),
        ( strTok:  'vcvtsd2si'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCVTSD2SI ),
        ( strTok:  'vcvtsd2ss'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCVTSD2SS ),
        ( strTok:  'vcvtsi2sd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCVTSI2SD ),
        ( strTok:  'vcvtsi2ss'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCVTSI2SS ),
        ( strTok:  'vcvtss2sd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCVTSS2SD ),
        ( strTok:  'vcvtss2si'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCVTSS2SI ),
        ( strTok:  'vcvttpd2dq'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCVTTPD2DQ ),
        ( strTok:  'vcvttps2dq'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCVTTPS2DQ ),
        ( strTok:  'vcvttsd2si'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCVTTSD2SI ),
        ( strTok:  'vcvttss2si'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCVTTSS2SI ),
        ( strTok:  'vdivpd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VDIVPD ),
        ( strTok:  'vdivps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VDIVPS ),
        ( strTok:  'vdivsd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VDIVSD ),
        ( strTok:  'vdivss'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VDIVSS ),
        ( strTok:  'vdppd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VDPPD ),
        ( strTok:  'vdpps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VDPPS ),
        ( strTok:  'vextractf128'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VEXTRACTF128 ),
        ( strTok:  'vextractps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VEXTRACTPS ),
        ( strTok:  'vhaddpd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VHADDPD ),
        ( strTok:  'vhaddps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VHADDPS ),
        ( strTok:  'vhsubpd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VHSUBPD ),
        ( strTok:  'vhsubps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VHSUBPS ),
        ( strTok:  'vinsertf128'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VINSERTF128 ),
        ( strTok:  'vinsertps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VINSERTPS ),
        ( strTok:  'vlddqu'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VLDDQU ),
        ( strTok:  'vldqqu'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VLDQQU ),
        ( strTok:  'vldmxcsr'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VLDMXCSR ),
        ( strTok:  'vmaskmovdqu'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VMASKMOVDQU ),
        ( strTok:  'vmaskmovps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VMASKMOVPS ),
        ( strTok:  'vmaskmovpd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VMASKMOVPD ),
        ( strTok:  'vmaxpd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VMAXPD ),
        ( strTok:  'vmaxps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VMAXPS ),
        ( strTok:  'vmaxsd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VMAXSD ),
        ( strTok:  'vmaxss'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VMAXSS ),
        ( strTok:  'vminpd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VMINPD ),
        ( strTok:  'vminps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VMINPS ),
        ( strTok:  'vminsd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VMINSD ),
        ( strTok:  'vminss'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VMINSS ),
        ( strTok:  'vmovapd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VMOVAPD ),
        ( strTok:  'vmovaps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VMOVAPS ),
        ( strTok:  'vmovd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VMOVD ),
        ( strTok:  'vmovq'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VMOVQ ),
        ( strTok:  'vmovddup'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VMOVDDUP ),
        ( strTok:  'vmovdqa'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VMOVDQA ),
        ( strTok:  'vmovqqa'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VMOVQQA ),
        ( strTok:  'vmovdqu'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VMOVDQU ),
        ( strTok:  'vmovqqu'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VMOVQQU ),
        ( strTok:  'vmovhlps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VMOVHLPS ),
        ( strTok:  'vmovhpd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VMOVHPD ),
        ( strTok:  'vmovhps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VMOVHPS ),
        ( strTok:  'vmovlhps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VMOVLHPS ),
        ( strTok:  'vmovlpd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VMOVLPD ),
        ( strTok:  'vmovlps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VMOVLPS ),
        ( strTok:  'vmovmskpd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VMOVMSKPD ),
        ( strTok:  'vmovmskps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VMOVMSKPS ),
        ( strTok:  'vmovntdq'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VMOVNTDQ ),
        ( strTok:  'vmovntqq'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VMOVNTQQ ),
        ( strTok:  'vmovntdqa'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VMOVNTDQA ),
        ( strTok:  'vmovntpd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VMOVNTPD ),
        ( strTok:  'vmovntps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VMOVNTPS ),
        ( strTok:  'vmovsd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VMOVSD ),
        ( strTok:  'vmovshdup'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VMOVSHDUP ),
        ( strTok:  'vmovsldup'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VMOVSLDUP ),
        ( strTok:  'vmovss'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VMOVSS ),
        ( strTok:  'vmovupd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VMOVUPD ),
        ( strTok:  'vmovups'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VMOVUPS ),
        ( strTok:  'vmpsadbw'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VMPSADBW ),
        ( strTok:  'vmulpd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VMULPD ),
        ( strTok:  'vmulps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VMULPS ),
        ( strTok:  'vmulsd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VMULSD ),
        ( strTok:  'vmulss'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VMULSS ),
        ( strTok:  'vorpd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VORPD ),
        ( strTok:  'vorps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VORPS ),
        ( strTok:  'vpabsb'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPABSB ),
        ( strTok:  'vpabsw'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPABSW ),
        ( strTok:  'vpabsd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPABSD ),
        ( strTok:  'vpacksswb'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPACKSSWB ),
        ( strTok:  'vpackssdw'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPACKSSDW ),
        ( strTok:  'vpackuswb'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPACKUSWB ),
        ( strTok:  'vpackusdw'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPACKUSDW ),
        ( strTok:  'vpaddb'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPADDB ),
        ( strTok:  'vpaddw'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPADDW ),
        ( strTok:  'vpaddd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPADDD ),
        ( strTok:  'vpaddq'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPADDQ ),
        ( strTok:  'vpaddsb'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPADDSB ),
        ( strTok:  'vpaddsw'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPADDSW ),
        ( strTok:  'vpaddusb'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPADDUSB ),
        ( strTok:  'vpaddusw'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPADDUSW ),
        ( strTok:  'vpalignr'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPALIGNR ),
        ( strTok:  'vpand'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPAND ),
        ( strTok:  'vpandn'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPANDN ),
        ( strTok:  'vpavgb'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPAVGB ),
        ( strTok:  'vpavgw'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPAVGW ),
        ( strTok:  'vpblendvb'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPBLENDVB ),
        ( strTok:  'vpblendw'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPBLENDW ),
        ( strTok:  'vpcmpestri'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPCMPESTRI ),
        ( strTok:  'vpcmpestrm'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPCMPESTRM ),
        ( strTok:  'vpcmpistri'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPCMPISTRI ),
        ( strTok:  'vpcmpistrm'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPCMPISTRM ),
        ( strTok:  'vpcmpeqb'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPCMPEQB ),
        ( strTok:  'vpcmpeqw'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPCMPEQW ),
        ( strTok:  'vpcmpeqd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPCMPEQD ),
        ( strTok:  'vpcmpeqq'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPCMPEQQ ),
        ( strTok:  'vpcmpgtb'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPCMPGTB ),
        ( strTok:  'vpcmpgtw'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPCMPGTW ),
        ( strTok:  'vpcmpgtd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPCMPGTD ),
        ( strTok:  'vpcmpgtq'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPCMPGTQ ),
        ( strTok:  'vpermilpd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPERMILPD ),
        ( strTok:  'vpermilps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPERMILPS ),
        ( strTok:  'vperm2f128'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPERM2F128 ),
        ( strTok:  'vpextrb'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPEXTRB ),
        ( strTok:  'vpextrw'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPEXTRW ),
        ( strTok:  'vpextrd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPEXTRD ),
        ( strTok:  'vpextrq'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPEXTRQ ),
        ( strTok:  'vphaddw'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPHADDW ),
        ( strTok:  'vphaddd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPHADDD ),
        ( strTok:  'vphaddsw'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPHADDSW ),
        ( strTok:  'vphminposuw'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPHMINPOSUW ),
        ( strTok:  'vphsubw'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPHSUBW ),
        ( strTok:  'vphsubd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPHSUBD ),
        ( strTok:  'vphsubsw'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPHSUBSW ),
        ( strTok:  'vpinsrb'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPINSRB ),
        ( strTok:  'vpinsrw'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPINSRW ),
        ( strTok:  'vpinsrd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPINSRD ),
        ( strTok:  'vpinsrq'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPINSRQ ),
        ( strTok:  'vpmaddwd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPMADDWD ),
        ( strTok:  'vpmaddubsw'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPMADDUBSW ),
        ( strTok:  'vpmaxsb'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPMAXSB ),
        ( strTok:  'vpmaxsw'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPMAXSW ),
        ( strTok:  'vpmaxsd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPMAXSD ),
        ( strTok:  'vpmaxub'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPMAXUB ),
        ( strTok:  'vpmaxuw'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPMAXUW ),
        ( strTok:  'vpmaxud'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPMAXUD ),
        ( strTok:  'vpminsb'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPMINSB ),
        ( strTok:  'vpminsw'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPMINSW ),
        ( strTok:  'vpminsd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPMINSD ),
        ( strTok:  'vpminub'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPMINUB ),
        ( strTok:  'vpminuw'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPMINUW ),
        ( strTok:  'vpminud'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPMINUD ),
        ( strTok:  'vpmovmskb'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPMOVMSKB ),
        ( strTok:  'vpmovsxbw'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPMOVSXBW ),
        ( strTok:  'vpmovsxbd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPMOVSXBD ),
        ( strTok:  'vpmovsxbq'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPMOVSXBQ ),
        ( strTok:  'vpmovsxwd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPMOVSXWD ),
        ( strTok:  'vpmovsxwq'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPMOVSXWQ ),
        ( strTok:  'vpmovsxdq'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPMOVSXDQ ),
        ( strTok:  'vpmovzxbw'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPMOVZXBW ),
        ( strTok:  'vpmovzxbd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPMOVZXBD ),
        ( strTok:  'vpmovzxbq'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPMOVZXBQ ),
        ( strTok:  'vpmovzxwd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPMOVZXWD ),
        ( strTok:  'vpmovzxwq'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPMOVZXWQ ),
        ( strTok:  'vpmovzxdq'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPMOVZXDQ ),
        ( strTok:  'vpmulhuw'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPMULHUW ),
        ( strTok:  'vpmulhrsw'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPMULHRSW ),
        ( strTok:  'vpmulhw'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPMULHW ),
        ( strTok:  'vpmullw'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPMULLW ),
        ( strTok:  'vpmulld'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPMULLD ),
        ( strTok:  'vpmuludq'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPMULUDQ ),
        ( strTok:  'vpmuldq'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPMULDQ ),
        ( strTok:  'vpor'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPOR ),
        ( strTok:  'vpsadbw'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPSADBW ),
        ( strTok:  'vpshufb'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPSHUFB ),
        ( strTok:  'vpshufd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPSHUFD ),
        ( strTok:  'vpshufhw'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPSHUFHW ),
        ( strTok:  'vpshuflw'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPSHUFLW ),
        ( strTok:  'vpsignb'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPSIGNB ),
        ( strTok:  'vpsignw'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPSIGNW ),
        ( strTok:  'vpsignd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPSIGND ),
        ( strTok:  'vpslldq'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPSLLDQ ),
        ( strTok:  'vpsrldq'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPSRLDQ ),
        ( strTok:  'vpsllw'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPSLLW ),
        ( strTok:  'vpslld'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPSLLD ),
        ( strTok:  'vpsllq'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPSLLQ ),
        ( strTok:  'vpsraw'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPSRAW ),
        ( strTok:  'vpsrad'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPSRAD ),
        ( strTok:  'vpsrlw'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPSRLW ),
        ( strTok:  'vpsrld'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPSRLD ),
        ( strTok:  'vpsrlq'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPSRLQ ),
        ( strTok:  'vptest'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPTEST ),
        ( strTok:  'vpsubb'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPSUBB ),
        ( strTok:  'vpsubw'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPSUBW ),
        ( strTok:  'vpsubd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPSUBD ),
        ( strTok:  'vpsubq'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPSUBQ ),
        ( strTok:  'vpsubsb'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPSUBSB ),
        ( strTok:  'vpsubsw'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPSUBSW ),
        ( strTok:  'vpsubusb'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPSUBUSB ),
        ( strTok:  'vpsubusw'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPSUBUSW ),
        ( strTok:  'vpunpckhbw'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPUNPCKHBW ),
        ( strTok:  'vpunpckhwd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPUNPCKHWD ),
        ( strTok:  'vpunpckhdq'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPUNPCKHDQ ),
        ( strTok:  'vpunpckhqdq'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPUNPCKHQDQ ),
        ( strTok:  'vpunpcklbw'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPUNPCKLBW ),
        ( strTok:  'vpunpcklwd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPUNPCKLWD ),
        ( strTok:  'vpunpckldq'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPUNPCKLDQ ),
        ( strTok:  'vpunpcklqdq'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPUNPCKLQDQ ),
        ( strTok:  'vpxor'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPXOR ),
        ( strTok:  'vrcpps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VRCPPS ),
        ( strTok:  'vrcpss'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VRCPSS ),
        ( strTok:  'vrsqrtps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VRSQRTPS ),
        ( strTok:  'vrsqrtss'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VRSQRTSS ),
        ( strTok:  'vroundpd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VROUNDPD ),
        ( strTok:  'vroundps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VROUNDPS ),
        ( strTok:  'vroundsd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VROUNDSD ),
        ( strTok:  'vroundss'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VROUNDSS ),
        ( strTok:  'vshufpd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VSHUFPD ),
        ( strTok:  'vshufps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VSHUFPS ),
        ( strTok:  'vsqrtpd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VSQRTPD ),
        ( strTok:  'vsqrtps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VSQRTPS ),
        ( strTok:  'vsqrtsd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VSQRTSD ),
        ( strTok:  'vsqrtss'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VSQRTSS ),
        ( strTok:  'vstmxcsr'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VSTMXCSR ),
        ( strTok:  'vsubpd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VSUBPD ),
        ( strTok:  'vsubps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VSUBPS ),
        ( strTok:  'vsubsd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VSUBSD ),
        ( strTok:  'vsubss'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VSUBSS ),
        ( strTok:  'vtestps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VTESTPS ),
        ( strTok:  'vtestpd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VTESTPD ),
        ( strTok:  'vucomisd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VUCOMISD ),
        ( strTok:  'vucomiss'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VUCOMISS ),
        ( strTok:  'vunpckhpd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VUNPCKHPD ),
        ( strTok:  'vunpckhps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VUNPCKHPS ),
        ( strTok:  'vunpcklpd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VUNPCKLPD ),
        ( strTok:  'vunpcklps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VUNPCKLPS ),
        ( strTok:  'vxorpd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VXORPD ),
        ( strTok:  'vxorps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VXORPS ),
        ( strTok:  'vzeroall'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VZEROALL ),
        ( strTok:  'vzeroupper'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VZEROUPPER ),
        ( strTok:  'pclmullqlqdq'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_PCLMULLQLQDQ ),
        ( strTok:  'pclmulhqlqdq'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_PCLMULHQLQDQ ),
        ( strTok:  'pclmullqhqdq'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_PCLMULLQHQDQ ),
        ( strTok:  'pclmulhqhqdq'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_PCLMULHQHQDQ ),
        ( strTok:  'pclmulqdq'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_PCLMULQDQ ),
        ( strTok:  'vpclmullqlqdq'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPCLMULLQLQDQ ),
        ( strTok:  'vpclmulhqlqdq'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPCLMULHQLQDQ ),
        ( strTok:  'vpclmullqhqdq'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPCLMULLQHQDQ ),
        ( strTok:  'vpclmulhqhqdq'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPCLMULHQHQDQ ),
        ( strTok:  'vpclmulqdq'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPCLMULQDQ ),
        ( strTok:  'vfmadd132ps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VFMADD132PS ),
        ( strTok:  'vfmadd132pd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VFMADD132PD ),
        ( strTok:  'vfmadd312ps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VFMADD312PS ),
        ( strTok:  'vfmadd312pd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VFMADD312PD ),
        ( strTok:  'vfmadd213ps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VFMADD213PS ),
        ( strTok:  'vfmadd213pd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VFMADD213PD ),
        ( strTok:  'vfmadd123ps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VFMADD123PS ),
        ( strTok:  'vfmadd123pd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VFMADD123PD ),
        ( strTok:  'vfmadd231ps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VFMADD231PS ),
        ( strTok:  'vfmadd231pd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VFMADD231PD ),
        ( strTok:  'vfmadd321ps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VFMADD321PS ),
        ( strTok:  'vfmadd321pd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VFMADD321PD ),
        ( strTok:  'vfmaddsub132ps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VFMADDSUB132PS ),
        ( strTok:  'vfmaddsub132pd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VFMADDSUB132PD ),
        ( strTok:  'vfmaddsub312ps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VFMADDSUB312PS ),
        ( strTok:  'vfmaddsub312pd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VFMADDSUB312PD ),
        ( strTok:  'vfmaddsub213ps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VFMADDSUB213PS ),
        ( strTok:  'vfmaddsub213pd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VFMADDSUB213PD ),
        ( strTok:  'vfmaddsub123ps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VFMADDSUB123PS ),
        ( strTok:  'vfmaddsub123pd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VFMADDSUB123PD ),
        ( strTok:  'vfmaddsub231ps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VFMADDSUB231PS ),
        ( strTok:  'vfmaddsub231pd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VFMADDSUB231PD ),
        ( strTok:  'vfmaddsub321ps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VFMADDSUB321PS ),
        ( strTok:  'vfmaddsub321pd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VFMADDSUB321PD ),
        ( strTok:  'vfmsub132ps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VFMSUB132PS ),
        ( strTok:  'vfmsub132pd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VFMSUB132PD ),
        ( strTok:  'vfmsub312ps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VFMSUB312PS ),
        ( strTok:  'vfmsub312pd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VFMSUB312PD ),
        ( strTok:  'vfmsub213ps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VFMSUB213PS ),
        ( strTok:  'vfmsub213pd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VFMSUB213PD ),
        ( strTok:  'vfmsub123ps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VFMSUB123PS ),
        ( strTok:  'vfmsub123pd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VFMSUB123PD ),
        ( strTok:  'vfmsub231ps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VFMSUB231PS ),
        ( strTok:  'vfmsub231pd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VFMSUB231PD ),
        ( strTok:  'vfmsub321ps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VFMSUB321PS ),
        ( strTok:  'vfmsub321pd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VFMSUB321PD ),
        ( strTok:  'vfmsubadd132ps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VFMSUBADD132PS ),
        ( strTok:  'vfmsubadd132pd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VFMSUBADD132PD ),
        ( strTok:  'vfmsubadd312ps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VFMSUBADD312PS ),
        ( strTok:  'vfmsubadd312pd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VFMSUBADD312PD ),
        ( strTok:  'vfmsubadd213ps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VFMSUBADD213PS ),
        ( strTok:  'vfmsubadd213pd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VFMSUBADD213PD ),
        ( strTok:  'vfmsubadd123ps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VFMSUBADD123PS ),
        ( strTok:  'vfmsubadd123pd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VFMSUBADD123PD ),
        ( strTok:  'vfmsubadd231ps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VFMSUBADD231PS ),
        ( strTok:  'vfmsubadd231pd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VFMSUBADD231PD ),
        ( strTok:  'vfmsubadd321ps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VFMSUBADD321PS ),
        ( strTok:  'vfmsubadd321pd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VFMSUBADD321PD ),
        ( strTok:  'vfnmadd132ps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VFNMADD132PS ),
        ( strTok:  'vfnmadd132pd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VFNMADD132PD ),
        ( strTok:  'vfnmadd312ps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VFNMADD312PS ),
        ( strTok:  'vfnmadd312pd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VFNMADD312PD ),
        ( strTok:  'vfnmadd213ps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VFNMADD213PS ),
        ( strTok:  'vfnmadd213pd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VFNMADD213PD ),
        ( strTok:  'vfnmadd123ps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VFNMADD123PS ),
        ( strTok:  'vfnmadd123pd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VFNMADD123PD ),
        ( strTok:  'vfnmadd231ps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VFNMADD231PS ),
        ( strTok:  'vfnmadd231pd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VFNMADD231PD ),
        ( strTok:  'vfnmadd321ps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VFNMADD321PS ),
        ( strTok:  'vfnmadd321pd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VFNMADD321PD ),
        ( strTok:  'vfnmsub132ps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VFNMSUB132PS ),
        ( strTok:  'vfnmsub132pd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VFNMSUB132PD ),
        ( strTok:  'vfnmsub312ps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VFNMSUB312PS ),
        ( strTok:  'vfnmsub312pd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VFNMSUB312PD ),
        ( strTok:  'vfnmsub213ps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VFNMSUB213PS ),
        ( strTok:  'vfnmsub213pd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VFNMSUB213PD ),
        ( strTok:  'vfnmsub123ps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VFNMSUB123PS ),
        ( strTok:  'vfnmsub123pd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VFNMSUB123PD ),
        ( strTok:  'vfnmsub231ps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VFNMSUB231PS ),
        ( strTok:  'vfnmsub231pd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VFNMSUB231PD ),
        ( strTok:  'vfnmsub321ps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VFNMSUB321PS ),
        ( strTok:  'vfnmsub321pd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VFNMSUB321PD ),
        ( strTok:  'vfmadd132ss'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VFMADD132SS ),
        ( strTok:  'vfmadd132sd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VFMADD132SD ),
        ( strTok:  'vfmadd312ss'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VFMADD312SS ),
        ( strTok:  'vfmadd312sd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VFMADD312SD ),
        ( strTok:  'vfmadd213ss'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VFMADD213SS ),
        ( strTok:  'vfmadd213sd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VFMADD213SD ),
        ( strTok:  'vfmadd123ss'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VFMADD123SS ),
        ( strTok:  'vfmadd123sd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VFMADD123SD ),
        ( strTok:  'vfmadd231ss'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VFMADD231SS ),
        ( strTok:  'vfmadd231sd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VFMADD231SD ),
        ( strTok:  'vfmadd321ss'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VFMADD321SS ),
        ( strTok:  'vfmadd321sd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VFMADD321SD ),
        ( strTok:  'vfmsub132ss'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VFMSUB132SS ),
        ( strTok:  'vfmsub132sd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VFMSUB132SD ),
        ( strTok:  'vfmsub312ss'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VFMSUB312SS ),
        ( strTok:  'vfmsub312sd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VFMSUB312SD ),
        ( strTok:  'vfmsub213ss'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VFMSUB213SS ),
        ( strTok:  'vfmsub213sd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VFMSUB213SD ),
        ( strTok:  'vfmsub123ss'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VFMSUB123SS ),
        ( strTok:  'vfmsub123sd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VFMSUB123SD ),
        ( strTok:  'vfmsub231ss'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VFMSUB231SS ),
        ( strTok:  'vfmsub231sd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VFMSUB231SD ),
        ( strTok:  'vfmsub321ss'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VFMSUB321SS ),
        ( strTok:  'vfmsub321sd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VFMSUB321SD ),
        ( strTok:  'vfnmadd132ss'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VFNMADD132SS ),
        ( strTok:  'vfnmadd132sd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VFNMADD132SD ),
        ( strTok:  'vfnmadd312ss'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VFNMADD312SS ),
        ( strTok:  'vfnmadd312sd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VFNMADD312SD ),
        ( strTok:  'vfnmadd213ss'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VFNMADD213SS ),
        ( strTok:  'vfnmadd213sd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VFNMADD213SD ),
        ( strTok:  'vfnmadd123ss'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VFNMADD123SS ),
        ( strTok:  'vfnmadd123sd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VFNMADD123SD ),
        ( strTok:  'vfnmadd231ss'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VFNMADD231SS ),
        ( strTok:  'vfnmadd231sd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VFNMADD231SD ),
        ( strTok:  'vfnmadd321ss'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VFNMADD321SS ),
        ( strTok:  'vfnmadd321sd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VFNMADD321SD ),
        ( strTok:  'vfnmsub132ss'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VFNMSUB132SS ),
        ( strTok:  'vfnmsub132sd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VFNMSUB132SD ),
        ( strTok:  'vfnmsub312ss'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VFNMSUB312SS ),
        ( strTok:  'vfnmsub312sd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VFNMSUB312SD ),
        ( strTok:  'vfnmsub213ss'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VFNMSUB213SS ),
        ( strTok:  'vfnmsub213sd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VFNMSUB213SD ),
        ( strTok:  'vfnmsub123ss'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VFNMSUB123SS ),
        ( strTok:  'vfnmsub123sd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VFNMSUB123SD ),
        ( strTok:  'vfnmsub231ss'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VFNMSUB231SS ),
        ( strTok:  'vfnmsub231sd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VFNMSUB231SD ),
        ( strTok:  'vfnmsub321ss'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VFNMSUB321SS ),
        ( strTok:  'vfnmsub321sd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VFNMSUB321SD ),
        ( strTok:  'rdfsbase'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_RDFSBASE ),
        ( strTok:  'rdgsbase'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_RDGSBASE ),
        ( strTok:  'rdrand'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_RDRAND ),
        ( strTok:  'wrfsbase'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_WRFSBASE ),
        ( strTok:  'wrgsbase'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_WRGSBASE ),
        ( strTok:  'vcvtph2ps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCVTPH2PS ),
        ( strTok:  'vcvtps2ph'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCVTPS2PH ),
        ( strTok:  'adcx'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_ADCX ),
        ( strTok:  'adox'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_ADOX ),
        ( strTok:  'rdseed'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_RDSEED ),
        ( strTok:  'clac'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_CLAC ),
        ( strTok:  'stac'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_STAC ),
        ( strTok:  'xstore'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_XSTORE ),
        ( strTok:  'xcryptecb'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_XCRYPTECB ),
        ( strTok:  'xcryptcbc'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_XCRYPTCBC ),
        ( strTok:  'xcryptctr'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_XCRYPTCTR ),
        ( strTok:  'xcryptcfb'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_XCRYPTCFB ),
        ( strTok:  'xcryptofb'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_XCRYPTOFB ),
        ( strTok:  'montmul'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_MONTMUL ),
        ( strTok:  'xsha1'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_XSHA1 ),
        ( strTok:  'xsha256'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_XSHA256 ),
        ( strTok:  'llwpcb'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_LLWPCB ),
        ( strTok:  'slwpcb'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_SLWPCB ),
        ( strTok:  'lwpval'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_LWPVAL ),
        ( strTok:  'lwpins'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_LWPINS ),
        ( strTok:  'vfmaddpd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VFMADDPD ),
        ( strTok:  'vfmaddps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VFMADDPS ),
        ( strTok:  'vfmaddsd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VFMADDSD ),
        ( strTok:  'vfmaddss'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VFMADDSS ),
        ( strTok:  'vfmaddsubpd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VFMADDSUBPD ),
        ( strTok:  'vfmaddsubps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VFMADDSUBPS ),
        ( strTok:  'vfmsubaddpd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VFMSUBADDPD ),
        ( strTok:  'vfmsubaddps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VFMSUBADDPS ),
        ( strTok:  'vfmsubpd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VFMSUBPD ),
        ( strTok:  'vfmsubps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VFMSUBPS ),
        ( strTok:  'vfmsubsd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VFMSUBSD ),
        ( strTok:  'vfmsubss'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VFMSUBSS ),
        ( strTok:  'vfnmaddpd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VFNMADDPD ),
        ( strTok:  'vfnmaddps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VFNMADDPS ),
        ( strTok:  'vfnmaddsd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VFNMADDSD ),
        ( strTok:  'vfnmaddss'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VFNMADDSS ),
        ( strTok:  'vfnmsubpd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VFNMSUBPD ),
        ( strTok:  'vfnmsubps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VFNMSUBPS ),
        ( strTok:  'vfnmsubsd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VFNMSUBSD ),
        ( strTok:  'vfnmsubss'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VFNMSUBSS ),
        ( strTok:  'vfrczpd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VFRCZPD ),
        ( strTok:  'vfrczps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VFRCZPS ),
        ( strTok:  'vfrczsd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VFRCZSD ),
        ( strTok:  'vfrczss'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VFRCZSS ),
        ( strTok:  'vpcmov'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPCMOV ),
        ( strTok:  'vpcomb'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPCOMB ),
        ( strTok:  'vpcomd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPCOMD ),
        ( strTok:  'vpcomq'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPCOMQ ),
        ( strTok:  'vpcomub'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPCOMUB ),
        ( strTok:  'vpcomud'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPCOMUD ),
        ( strTok:  'vpcomuq'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPCOMUQ ),
        ( strTok:  'vpcomuw'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPCOMUW ),
        ( strTok:  'vpcomw'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPCOMW ),
        ( strTok:  'vphaddbd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPHADDBD ),
        ( strTok:  'vphaddbq'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPHADDBQ ),
        ( strTok:  'vphaddbw'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPHADDBW ),
        ( strTok:  'vphadddq'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPHADDDQ ),
        ( strTok:  'vphaddubd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPHADDUBD ),
        ( strTok:  'vphaddubq'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPHADDUBQ ),
        ( strTok:  'vphaddubw'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPHADDUBW ),
        ( strTok:  'vphaddudq'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPHADDUDQ ),
        ( strTok:  'vphadduwd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPHADDUWD ),
        ( strTok:  'vphadduwq'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPHADDUWQ ),
        ( strTok:  'vphaddwd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPHADDWD ),
        ( strTok:  'vphaddwq'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPHADDWQ ),
        ( strTok:  'vphsubbw'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPHSUBBW ),
        ( strTok:  'vphsubdq'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPHSUBDQ ),
        ( strTok:  'vphsubwd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPHSUBWD ),
        ( strTok:  'vpmacsdd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPMACSDD ),
        ( strTok:  'vpmacsdqh'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPMACSDQH ),
        ( strTok:  'vpmacsdql'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPMACSDQL ),
        ( strTok:  'vpmacssdd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPMACSSDD ),
        ( strTok:  'vpmacssdqh'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPMACSSDQH ),
        ( strTok:  'vpmacssdql'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPMACSSDQL ),
        ( strTok:  'vpmacsswd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPMACSSWD ),
        ( strTok:  'vpmacssww'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPMACSSWW ),
        ( strTok:  'vpmacswd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPMACSWD ),
        ( strTok:  'vpmacsww'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPMACSWW ),
        ( strTok:  'vpmadcsswd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPMADCSSWD ),
        ( strTok:  'vpmadcswd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPMADCSWD ),
        ( strTok:  'vpperm'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPPERM ),
        ( strTok:  'vprotb'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPROTB ),
        ( strTok:  'vprotd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPROTD ),
        ( strTok:  'vprotq'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPROTQ ),
        ( strTok:  'vprotw'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPROTW ),
        ( strTok:  'vpshab'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPSHAB ),
        ( strTok:  'vpshad'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPSHAD ),
        ( strTok:  'vpshaq'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPSHAQ ),
        ( strTok:  'vpshaw'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPSHAW ),
        ( strTok:  'vpshlb'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPSHLB ),
        ( strTok:  'vpshld'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPSHLD ),
        ( strTok:  'vpshlq'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPSHLQ ),
        ( strTok:  'vpshlw'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPSHLW ),
        ( strTok:  'vbroadcasti128'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VBROADCASTI128 ),
        ( strTok:  'vpblendd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPBLENDD ),
        ( strTok:  'vpbroadcastb'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPBROADCASTB ),
        ( strTok:  'vpbroadcastw'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPBROADCASTW ),
        ( strTok:  'vpbroadcastd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPBROADCASTD ),
        ( strTok:  'vpbroadcastq'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPBROADCASTQ ),
        ( strTok:  'vpermd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPERMD ),
        ( strTok:  'vpermpd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPERMPD ),
        ( strTok:  'vpermps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPERMPS ),
        ( strTok:  'vpermq'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPERMQ ),
        ( strTok:  'vperm2i128'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPERM2I128 ),
        ( strTok:  'vextracti128'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VEXTRACTI128 ),
        ( strTok:  'vinserti128'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VINSERTI128 ),
        ( strTok:  'vpmaskmovd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPMASKMOVD ),
        ( strTok:  'vpmaskmovq'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPMASKMOVQ ),
        ( strTok:  'vpsllvd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPSLLVD ),
        ( strTok:  'vpsllvq'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPSLLVQ ),
        ( strTok:  'vpsravd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPSRAVD ),
        ( strTok:  'vpsrlvd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPSRLVD ),
        ( strTok:  'vpsrlvq'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPSRLVQ ),
        ( strTok:  'vgatherdpd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VGATHERDPD ),
        ( strTok:  'vgatherqpd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VGATHERQPD ),
        ( strTok:  'vgatherdps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VGATHERDPS ),
        ( strTok:  'vgatherqps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VGATHERQPS ),
        ( strTok:  'vpgatherdd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPGATHERDD ),
        ( strTok:  'vpgatherqd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPGATHERQD ),
        ( strTok:  'vpgatherdq'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPGATHERDQ ),
        ( strTok:  'vpgatherqq'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPGATHERQQ ),
        ( strTok:  'xabort'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_XABORT ),
        ( strTok:  'xbegin'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_XBEGIN ),
        ( strTok:  'xend'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_XEND ),
        ( strTok:  'xtest'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_XTEST ),
        ( strTok:  'andn'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_ANDN ),
        ( strTok:  'bextr'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_BEXTR ),
        ( strTok:  'blci'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_BLCI ),
        ( strTok:  'blcic'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_BLCIC ),
        ( strTok:  'blsi'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_BLSI ),
        ( strTok:  'blsic'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_BLSIC ),
        ( strTok:  'blcfill'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_BLCFILL ),
        ( strTok:  'blsfill'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_BLSFILL ),
        ( strTok:  'blcmsk'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_BLCMSK ),
        ( strTok:  'blsmsk'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_BLSMSK ),
        ( strTok:  'blsr'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_BLSR ),
        ( strTok:  'blcs'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_BLCS ),
        ( strTok:  'bzhi'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_BZHI ),
        ( strTok:  'mulx'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_MULX ),
        ( strTok:  'pdep'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_PDEP ),
        ( strTok:  'pext'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_PEXT ),
        ( strTok:  'rorx'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_RORX ),
        ( strTok:  'sarx'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_SARX ),
        ( strTok:  'shlx'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_SHLX ),
        ( strTok:  'shrx'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_SHRX ),
        ( strTok:  'tzcnt'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_TZCNT ),
        ( strTok:  'tzmsk'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_TZMSK ),
        ( strTok:  't1mskc'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_T1MSKC ),
        ( strTok:  'prefetchwt1'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_PREFETCHWT1 ),
        ( strTok:  'bndmk'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_BNDMK ),
        ( strTok:  'bndcl'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_BNDCL ),
        ( strTok:  'bndcu'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_BNDCU ),
        ( strTok:  'bndcn'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_BNDCN ),
        ( strTok:  'bndmov'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_BNDMOV ),
        ( strTok:  'bndldx'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_BNDLDX ),
        ( strTok:  'bndstx'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_BNDSTX ),
        ( strTok:  'kaddb'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_KADDB ),
        ( strTok:  'kaddd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_KADDD ),
        ( strTok:  'kaddq'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_KADDQ ),
        ( strTok:  'kaddw'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_KADDW ),
        ( strTok:  'kandb'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_KANDB ),
        ( strTok:  'kandd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_KANDD ),
        ( strTok:  'kandnb'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_KANDNB ),
        ( strTok:  'kandnd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_KANDND ),
        ( strTok:  'kandnq'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_KANDNQ ),
        ( strTok:  'kandnw'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_KANDNW ),
        ( strTok:  'kandq'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_KANDQ ),
        ( strTok:  'kandw'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_KANDW ),
        ( strTok:  'kmovb'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_KMOVB ),
        ( strTok:  'kmovd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_KMOVD ),
        ( strTok:  'kmovq'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_KMOVQ ),
        ( strTok:  'kmovw'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_KMOVW ),
        ( strTok:  'knotb'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_KNOTB ),
        ( strTok:  'knotd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_KNOTD ),
        ( strTok:  'knotq'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_KNOTQ ),
        ( strTok:  'knotw'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_KNOTW ),
        ( strTok:  'korb'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_KORB ),
        ( strTok:  'kord'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_KORD ),
        ( strTok:  'korq'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_KORQ ),
        ( strTok:  'kortestb'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_KORTESTB ),
        ( strTok:  'kortestd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_KORTESTD ),
        ( strTok:  'kortestq'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_KORTESTQ ),
        ( strTok:  'kortestw'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_KORTESTW ),
        ( strTok:  'korw'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_KORW ),
        ( strTok:  'kshiftlb'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_KSHIFTLB ),
        ( strTok:  'kshiftld'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_KSHIFTLD ),
        ( strTok:  'kshiftlq'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_KSHIFTLQ ),
        ( strTok:  'kshiftlw'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_KSHIFTLW ),
        ( strTok:  'kshiftrb'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_KSHIFTRB ),
        ( strTok:  'kshiftrd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_KSHIFTRD ),
        ( strTok:  'kshiftrq'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_KSHIFTRQ ),
        ( strTok:  'kshiftrw'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_KSHIFTRW ),
        ( strTok:  'ktestb'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_KTESTB ),
        ( strTok:  'ktestd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_KTESTD ),
        ( strTok:  'ktestq'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_KTESTQ ),
        ( strTok:  'ktestw'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_KTESTW ),
        ( strTok:  'kunpckbw'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_KUNPCKBW ),
        ( strTok:  'kunpckdq'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_KUNPCKDQ ),
        ( strTok:  'kunpckwd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_KUNPCKWD ),
        ( strTok:  'kxnorb'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_KXNORB ),
        ( strTok:  'kxnord'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_KXNORD ),
        ( strTok:  'kxnorq'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_KXNORQ ),
        ( strTok:  'kxnorw'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_KXNORW ),
        ( strTok:  'kxorb'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_KXORB ),
        ( strTok:  'kxord'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_KXORD ),
        ( strTok:  'kxorq'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_KXORQ ),
        ( strTok:  'kxorw'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_KXORW ),
        ( strTok:  'sha1msg1'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_SHA1MSG1 ),
        ( strTok:  'sha1msg2'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_SHA1MSG2 ),
        ( strTok:  'sha1nexte'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_SHA1NEXTE ),
        ( strTok:  'sha1rnds4'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_SHA1RNDS4 ),
        ( strTok:  'sha256msg1'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_SHA256MSG1 ),
        ( strTok:  'sha256msg2'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_SHA256MSG2 ),
        ( strTok:  'sha256rnds2'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_SHA256RNDS2 ),
        ( strTok:  'valignd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VALIGND ),
        ( strTok:  'valignq'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VALIGNQ ),
        ( strTok:  'vblendmpd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VBLENDMPD ),
        ( strTok:  'vblendmps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VBLENDMPS ),
        ( strTok:  'vbroadcastf32x2'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VBROADCASTF32X2 ),
        ( strTok:  'vbroadcastf32x4'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VBROADCASTF32X4 ),
        ( strTok:  'vbroadcastf32x8'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VBROADCASTF32X8 ),
        ( strTok:  'vbroadcastf64x2'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VBROADCASTF64X2 ),
        ( strTok:  'vbroadcastf64x4'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VBROADCASTF64X4 ),
        ( strTok:  'vbroadcasti32x2'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VBROADCASTI32X2 ),
        ( strTok:  'vbroadcasti32x4'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VBROADCASTI32X4 ),
        ( strTok:  'vbroadcasti32x8'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VBROADCASTI32X8 ),
        ( strTok:  'vbroadcasti64x2'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VBROADCASTI64X2 ),
        ( strTok:  'vbroadcasti64x4'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VBROADCASTI64X4 ),
        ( strTok:  'vcompresspd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCOMPRESSPD ),
        ( strTok:  'vcompressps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCOMPRESSPS ),
        ( strTok:  'vcvtpd2qq'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCVTPD2QQ ),
        ( strTok:  'vcvtpd2udq'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCVTPD2UDQ ),
        ( strTok:  'vcvtpd2uqq'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCVTPD2UQQ ),
        ( strTok:  'vcvtps2qq'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCVTPS2QQ ),
        ( strTok:  'vcvtps2udq'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCVTPS2UDQ ),
        ( strTok:  'vcvtps2uqq'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCVTPS2UQQ ),
        ( strTok:  'vcvtqq2pd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCVTQQ2PD ),
        ( strTok:  'vcvtqq2ps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCVTQQ2PS ),
        ( strTok:  'vcvtsd2usi'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCVTSD2USI ),
        ( strTok:  'vcvtss2usi'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCVTSS2USI ),
        ( strTok:  'vcvttpd2qq'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCVTTPD2QQ ),
        ( strTok:  'vcvttpd2udq'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCVTTPD2UDQ ),
        ( strTok:  'vcvttpd2uqq'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCVTTPD2UQQ ),
        ( strTok:  'vcvttps2qq'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCVTTPS2QQ ),
        ( strTok:  'vcvttps2udq'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCVTTPS2UDQ ),
        ( strTok:  'vcvttps2uqq'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCVTTPS2UQQ ),
        ( strTok:  'vcvttsd2usi'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCVTTSD2USI ),
        ( strTok:  'vcvttss2usi'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCVTTSS2USI ),
        ( strTok:  'vcvtudq2pd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCVTUDQ2PD ),
        ( strTok:  'vcvtudq2ps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCVTUDQ2PS ),
        ( strTok:  'vcvtuqq2pd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCVTUQQ2PD ),
        ( strTok:  'vcvtuqq2ps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCVTUQQ2PS ),
        ( strTok:  'vcvtusi2sd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCVTUSI2SD ),
        ( strTok:  'vcvtusi2ss'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VCVTUSI2SS ),
        ( strTok:  'vdbpsadbw'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VDBPSADBW ),
        ( strTok:  'vexp2pd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VEXP2PD ),
        ( strTok:  'vexp2ps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VEXP2PS ),
        ( strTok:  'vexpandpd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VEXPANDPD ),
        ( strTok:  'vexpandps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VEXPANDPS ),
        ( strTok:  'vextractf32x4'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VEXTRACTF32X4 ),
        ( strTok:  'vextractf32x8'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VEXTRACTF32X8 ),
        ( strTok:  'vextractf64x2'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VEXTRACTF64X2 ),
        ( strTok:  'vextractf64x4'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VEXTRACTF64X4 ),
        ( strTok:  'vextracti32x4'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VEXTRACTI32X4 ),
        ( strTok:  'vextracti32x8'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VEXTRACTI32X8 ),
        ( strTok:  'vextracti64x2'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VEXTRACTI64X2 ),
        ( strTok:  'vextracti64x4'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VEXTRACTI64X4 ),
        ( strTok:  'vfixupimmpd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VFIXUPIMMPD ),
        ( strTok:  'vfixupimmps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VFIXUPIMMPS ),
        ( strTok:  'vfixupimmsd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VFIXUPIMMSD ),
        ( strTok:  'vfixupimmss'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VFIXUPIMMSS ),
        ( strTok:  'vfpclasspd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VFPCLASSPD ),
        ( strTok:  'vfpclassps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VFPCLASSPS ),
        ( strTok:  'vfpclasssd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VFPCLASSSD ),
        ( strTok:  'vfpclassss'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VFPCLASSSS ),
        ( strTok:  'vgatherpf0dpd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VGATHERPF0DPD ),
        ( strTok:  'vgatherpf0dps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VGATHERPF0DPS ),
        ( strTok:  'vgatherpf0qpd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VGATHERPF0QPD ),
        ( strTok:  'vgatherpf0qps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VGATHERPF0QPS ),
        ( strTok:  'vgatherpf1dpd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VGATHERPF1DPD ),
        ( strTok:  'vgatherpf1dps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VGATHERPF1DPS ),
        ( strTok:  'vgatherpf1qpd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VGATHERPF1QPD ),
        ( strTok:  'vgatherpf1qps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VGATHERPF1QPS ),
        ( strTok:  'vgetexppd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VGETEXPPD ),
        ( strTok:  'vgetexpps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VGETEXPPS ),
        ( strTok:  'vgetexpsd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VGETEXPSD ),
        ( strTok:  'vgetexpss'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VGETEXPSS ),
        ( strTok:  'vgetmantpd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VGETMANTPD ),
        ( strTok:  'vgetmantps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VGETMANTPS ),
        ( strTok:  'vgetmantsd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VGETMANTSD ),
        ( strTok:  'vgetmantss'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VGETMANTSS ),
        ( strTok:  'vinsertf32x4'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VINSERTF32X4 ),
        ( strTok:  'vinsertf32x8'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VINSERTF32X8 ),
        ( strTok:  'vinsertf64x2'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VINSERTF64X2 ),
        ( strTok:  'vinsertf64x4'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VINSERTF64X4 ),
        ( strTok:  'vinserti32x4'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VINSERTI32X4 ),
        ( strTok:  'vinserti32x8'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VINSERTI32X8 ),
        ( strTok:  'vinserti64x2'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VINSERTI64X2 ),
        ( strTok:  'vinserti64x4'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VINSERTI64X4 ),
        ( strTok:  'vmovdqa32'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VMOVDQA32 ),
        ( strTok:  'vmovdqa64'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VMOVDQA64 ),
        ( strTok:  'vmovdqu16'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VMOVDQU16 ),
        ( strTok:  'vmovdqu32'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VMOVDQU32 ),
        ( strTok:  'vmovdqu64'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VMOVDQU64 ),
        ( strTok:  'vmovdqu8'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VMOVDQU8 ),
        ( strTok:  'vpabsq'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPABSQ ),
        ( strTok:  'vpandd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPANDD ),
        ( strTok:  'vpandnd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPANDND ),
        ( strTok:  'vpandnq'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPANDNQ ),
        ( strTok:  'vpandq'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPANDQ ),
        ( strTok:  'vpblendmb'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPBLENDMB ),
        ( strTok:  'vpblendmd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPBLENDMD ),
        ( strTok:  'vpblendmq'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPBLENDMQ ),
        ( strTok:  'vpblendmw'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPBLENDMW ),
        ( strTok:  'vpbroadcastmb2q'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPBROADCASTMB2Q ),
        ( strTok:  'vpbroadcastmw2d'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPBROADCASTMW2D ),
        ( strTok:  'vpcmpb'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPCMPB ),
        ( strTok:  'vpcmpd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPCMPD ),
        ( strTok:  'vpcmpq'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPCMPQ ),
        ( strTok:  'vpcmpub'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPCMPUB ),
        ( strTok:  'vpcmpud'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPCMPUD ),
        ( strTok:  'vpcmpuq'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPCMPUQ ),
        ( strTok:  'vpcmpuw'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPCMPUW ),
        ( strTok:  'vpcmpw'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPCMPW ),
        ( strTok:  'vpcompressd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPCOMPRESSD ),
        ( strTok:  'vpcompressq'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPCOMPRESSQ ),
        ( strTok:  'vpconflictd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPCONFLICTD ),
        ( strTok:  'vpconflictq'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPCONFLICTQ ),
        ( strTok:  'vpermb'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPERMB ),
        ( strTok:  'vpermi2b'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPERMI2B ),
        ( strTok:  'vpermi2d'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPERMI2D ),
        ( strTok:  'vpermi2pd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPERMI2PD ),
        ( strTok:  'vpermi2ps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPERMI2PS ),
        ( strTok:  'vpermi2q'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPERMI2Q ),
        ( strTok:  'vpermi2w'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPERMI2W ),
        ( strTok:  'vpermt2b'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPERMT2B ),
        ( strTok:  'vpermt2d'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPERMT2D ),
        ( strTok:  'vpermt2pd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPERMT2PD ),
        ( strTok:  'vpermt2ps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPERMT2PS ),
        ( strTok:  'vpermt2q'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPERMT2Q ),
        ( strTok:  'vpermt2w'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPERMT2W ),
        ( strTok:  'vpermw'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPERMW ),
        ( strTok:  'vpexpandd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPEXPANDD ),
        ( strTok:  'vpexpandq'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPEXPANDQ ),
        ( strTok:  'vplzcntd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPLZCNTD ),
        ( strTok:  'vplzcntq'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPLZCNTQ ),
        ( strTok:  'vpmadd52huq'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPMADD52HUQ ),
        ( strTok:  'vpmadd52luq'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPMADD52LUQ ),
        ( strTok:  'vpmaxsq'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPMAXSQ ),
        ( strTok:  'vpmaxuq'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPMAXUQ ),
        ( strTok:  'vpminsq'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPMINSQ ),
        ( strTok:  'vpminuq'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPMINUQ ),
        ( strTok:  'vpmovb2m'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPMOVB2M ),
        ( strTok:  'vpmovd2m'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPMOVD2M ),
        ( strTok:  'vpmovdb'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPMOVDB ),
        ( strTok:  'vpmovdw'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPMOVDW ),
        ( strTok:  'vpmovm2b'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPMOVM2B ),
        ( strTok:  'vpmovm2d'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPMOVM2D ),
        ( strTok:  'vpmovm2q'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPMOVM2Q ),
        ( strTok:  'vpmovm2w'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPMOVM2W ),
        ( strTok:  'vpmovq2m'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPMOVQ2M ),
        ( strTok:  'vpmovqb'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPMOVQB ),
        ( strTok:  'vpmovqd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPMOVQD ),
        ( strTok:  'vpmovqw'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPMOVQW ),
        ( strTok:  'vpmovsdb'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPMOVSDB ),
        ( strTok:  'vpmovsdw'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPMOVSDW ),
        ( strTok:  'vpmovsqb'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPMOVSQB ),
        ( strTok:  'vpmovsqd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPMOVSQD ),
        ( strTok:  'vpmovsqw'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPMOVSQW ),
        ( strTok:  'vpmovswb'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPMOVSWB ),
        ( strTok:  'vpmovusdb'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPMOVUSDB ),
        ( strTok:  'vpmovusdw'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPMOVUSDW ),
        ( strTok:  'vpmovusqb'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPMOVUSQB ),
        ( strTok:  'vpmovusqd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPMOVUSQD ),
        ( strTok:  'vpmovusqw'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPMOVUSQW ),
        ( strTok:  'vpmovuswb'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPMOVUSWB ),
        ( strTok:  'vpmovw2m'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPMOVW2M ),
        ( strTok:  'vpmovwb'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPMOVWB ),
        ( strTok:  'vpmullq'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPMULLQ ),
        ( strTok:  'vpmultishiftqb'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPMULTISHIFTQB ),
        ( strTok:  'vpord'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPORD ),
        ( strTok:  'vporq'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPORQ ),
        ( strTok:  'vprold'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPROLD ),
        ( strTok:  'vprolq'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPROLQ ),
        ( strTok:  'vprolvd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPROLVD ),
        ( strTok:  'vprolvq'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPROLVQ ),
        ( strTok:  'vprord'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPRORD ),
        ( strTok:  'vprorq'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPRORQ ),
        ( strTok:  'vprorvd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPRORVD ),
        ( strTok:  'vprorvq'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPRORVQ ),
        ( strTok:  'vpscatterdd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPSCATTERDD ),
        ( strTok:  'vpscatterdq'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPSCATTERDQ ),
        ( strTok:  'vpscatterqd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPSCATTERQD ),
        ( strTok:  'vpscatterqq'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPSCATTERQQ ),
        ( strTok:  'vpsllvw'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPSLLVW ),
        ( strTok:  'vpsraq'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPSRAQ ),
        ( strTok:  'vpsravq'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPSRAVQ ),
        ( strTok:  'vpsravw'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPSRAVW ),
        ( strTok:  'vpsrlvw'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPSRLVW ),
        ( strTok:  'vpternlogd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPTERNLOGD ),
        ( strTok:  'vpternlogq'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPTERNLOGQ ),
        ( strTok:  'vptestmb'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPTESTMB ),
        ( strTok:  'vptestmd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPTESTMD ),
        ( strTok:  'vptestmq'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPTESTMQ ),
        ( strTok:  'vptestmw'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPTESTMW ),
        ( strTok:  'vptestnmb'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPTESTNMB ),
        ( strTok:  'vptestnmd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPTESTNMD ),
        ( strTok:  'vptestnmq'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPTESTNMQ ),
        ( strTok:  'vptestnmw'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPTESTNMW ),
        ( strTok:  'vpxord'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPXORD ),
        ( strTok:  'vpxorq'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VPXORQ ),
        ( strTok:  'vrangepd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VRANGEPD ),
        ( strTok:  'vrangeps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VRANGEPS ),
        ( strTok:  'vrangesd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VRANGESD ),
        ( strTok:  'vrangess'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VRANGESS ),
        ( strTok:  'vrcp14pd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VRCP14PD ),
        ( strTok:  'vrcp14ps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VRCP14PS ),
        ( strTok:  'vrcp14sd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VRCP14SD ),
        ( strTok:  'vrcp14ss'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VRCP14SS ),
        ( strTok:  'vrcp28pd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VRCP28PD ),
        ( strTok:  'vrcp28ps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VRCP28PS ),
        ( strTok:  'vrcp28sd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VRCP28SD ),
        ( strTok:  'vrcp28ss'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VRCP28SS ),
        ( strTok:  'vreducepd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VREDUCEPD ),
        ( strTok:  'vreduceps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VREDUCEPS ),
        ( strTok:  'vreducesd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VREDUCESD ),
        ( strTok:  'vreducess'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VREDUCESS ),
        ( strTok:  'vrndscalepd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VRNDSCALEPD ),
        ( strTok:  'vrndscaleps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VRNDSCALEPS ),
        ( strTok:  'vrndscalesd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VRNDSCALESD ),
        ( strTok:  'vrndscaless'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VRNDSCALESS ),
        ( strTok:  'vrsqrt14pd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VRSQRT14PD ),
        ( strTok:  'vrsqrt14ps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VRSQRT14PS ),
        ( strTok:  'vrsqrt14sd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VRSQRT14SD ),
        ( strTok:  'vrsqrt14ss'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VRSQRT14SS ),
        ( strTok:  'vrsqrt28pd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VRSQRT28PD ),
        ( strTok:  'vrsqrt28ps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VRSQRT28PS ),
        ( strTok:  'vrsqrt28sd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VRSQRT28SD ),
        ( strTok:  'vrsqrt28ss'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VRSQRT28SS ),
        ( strTok:  'vscalefpd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VSCALEFPD ),
        ( strTok:  'vscalefps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VSCALEFPS ),
        ( strTok:  'vscalefsd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VSCALEFSD ),
        ( strTok:  'vscalefss'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VSCALEFSS ),
        ( strTok:  'vscatterdpd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VSCATTERDPD ),
        ( strTok:  'vscatterdps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VSCATTERDPS ),
        ( strTok:  'vscatterpf0dpd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VSCATTERPF0DPD ),
        ( strTok:  'vscatterpf0dps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VSCATTERPF0DPS ),
        ( strTok:  'vscatterpf0qpd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VSCATTERPF0QPD ),
        ( strTok:  'vscatterpf0qps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VSCATTERPF0QPS ),
        ( strTok:  'vscatterpf1dpd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VSCATTERPF1DPD ),
        ( strTok:  'vscatterpf1dps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VSCATTERPF1DPS ),
        ( strTok:  'vscatterpf1qpd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VSCATTERPF1QPD ),
        ( strTok:  'vscatterpf1qps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VSCATTERPF1QPS ),
        ( strTok:  'vscatterqpd'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VSCATTERQPD ),
        ( strTok:  'vscatterqps'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VSCATTERQPS ),
        ( strTok:  'vshuff32x4'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VSHUFF32X4 ),
        ( strTok:  'vshuff64x2'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VSHUFF64X2 ),
        ( strTok:  'vshufi32x4'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VSHUFI32X4 ),
        ( strTok:  'vshufi64x2'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_VSHUFI64X2 ),
        ( strTok:  'clflushopt'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_CLFLUSHOPT ),
        ( strTok:  'hint_nop0'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_HINT_NOP0 ),
        ( strTok:  'hint_nop1'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_HINT_NOP1 ),
        ( strTok:  'hint_nop2'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_HINT_NOP2 ),
        ( strTok:  'hint_nop3'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_HINT_NOP3 ),
        ( strTok:  'hint_nop4'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_HINT_NOP4 ),
        ( strTok:  'hint_nop5'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_HINT_NOP5 ),
        ( strTok:  'hint_nop6'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_HINT_NOP6 ),
        ( strTok:  'hint_nop7'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_HINT_NOP7 ),
        ( strTok:  'hint_nop8'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_HINT_NOP8 ),
        ( strTok:  'hint_nop9'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_HINT_NOP9 ),
        ( strTok:  'hint_nop10'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_HINT_NOP10 ),
        ( strTok:  'hint_nop11'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_HINT_NOP11 ),
        ( strTok:  'hint_nop12'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_HINT_NOP12 ),
        ( strTok:  'hint_nop13'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_HINT_NOP13 ),
        ( strTok:  'hint_nop14'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_HINT_NOP14 ),
        ( strTok:  'hint_nop15'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_HINT_NOP15 ),
        ( strTok:  'hint_nop16'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_HINT_NOP16 ),
        ( strTok:  'hint_nop17'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_HINT_NOP17 ),
        ( strTok:  'hint_nop18'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_HINT_NOP18 ),
        ( strTok:  'hint_nop19'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_HINT_NOP19 ),
        ( strTok:  'hint_nop20'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_HINT_NOP20 ),
        ( strTok:  'hint_nop21'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_HINT_NOP21 ),
        ( strTok:  'hint_nop22'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_HINT_NOP22 ),
        ( strTok:  'hint_nop23'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_HINT_NOP23 ),
        ( strTok:  'hint_nop24'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_HINT_NOP24 ),
        ( strTok:  'hint_nop25'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_HINT_NOP25 ),
        ( strTok:  'hint_nop26'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_HINT_NOP26 ),
        ( strTok:  'hint_nop27'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_HINT_NOP27 ),
        ( strTok:  'hint_nop28'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_HINT_NOP28 ),
        ( strTok:  'hint_nop29'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_HINT_NOP29 ),
        ( strTok:  'hint_nop30'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_HINT_NOP30 ),
        ( strTok:  'hint_nop31'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_HINT_NOP31 ),
        ( strTok:  'hint_nop32'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_HINT_NOP32 ),
        ( strTok:  'hint_nop33'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_HINT_NOP33 ),
        ( strTok:  'hint_nop34'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_HINT_NOP34 ),
        ( strTok:  'hint_nop35'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_HINT_NOP35 ),
        ( strTok:  'hint_nop36'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_HINT_NOP36 ),
        ( strTok:  'hint_nop37'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_HINT_NOP37 ),
        ( strTok:  'hint_nop38'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_HINT_NOP38 ),
        ( strTok:  'hint_nop39'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_HINT_NOP39 ),
        ( strTok:  'hint_nop40'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_HINT_NOP40 ),
        ( strTok:  'hint_nop41'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_HINT_NOP41 ),
        ( strTok:  'hint_nop42'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_HINT_NOP42 ),
        ( strTok:  'hint_nop43'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_HINT_NOP43 ),
        ( strTok:  'hint_nop44'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_HINT_NOP44 ),
        ( strTok:  'hint_nop45'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_HINT_NOP45 ),
        ( strTok:  'hint_nop46'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_HINT_NOP46 ),
        ( strTok:  'hint_nop47'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_HINT_NOP47 ),
        ( strTok:  'hint_nop48'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_HINT_NOP48 ),
        ( strTok:  'hint_nop49'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_HINT_NOP49 ),
        ( strTok:  'hint_nop50'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_HINT_NOP50 ),
        ( strTok:  'hint_nop51'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_HINT_NOP51 ),
        ( strTok:  'hint_nop52'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_HINT_NOP52 ),
        ( strTok:  'hint_nop53'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_HINT_NOP53 ),
        ( strTok:  'hint_nop54'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_HINT_NOP54 ),
        ( strTok:  'hint_nop55'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_HINT_NOP55 ),
        ( strTok:  'hint_nop56'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_HINT_NOP56 ),
        ( strTok:  'hint_nop57'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_HINT_NOP57 ),
        ( strTok:  'hint_nop58'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_HINT_NOP58 ),
        ( strTok:  'hint_nop59'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_HINT_NOP59 ),
        ( strTok:  'hint_nop60'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_HINT_NOP60 ),
        ( strTok:  'hint_nop61'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_HINT_NOP61 ),
        ( strTok:  'hint_nop62'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_HINT_NOP62 ),
        ( strTok:  'hint_nop63'; tokentype:  TOKEN_INSN    ;aux:  C_none; tokflag:  0;  num:       I_HINT_NOP63 ),
        ( strTok:  'al'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_AL ),
        ( strTok:  'ah'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_AH ),
        ( strTok:  'ax'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_AX ),
        ( strTok:  'eax'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_EAX ),
        ( strTok:  'rax'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_RAX ),
        ( strTok:  'bl'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_BL ),
        ( strTok:  'bh'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_BH ),
        ( strTok:  'bx'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_BX ),
        ( strTok:  'ebx'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_EBX ),
        ( strTok:  'rbx'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_RBX ),
        ( strTok:  'cl'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_CL ),
        ( strTok:  'ch'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_CH ),
        ( strTok:  'cx'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_CX ),
        ( strTok:  'ecx'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_ECX ),
        ( strTok:  'rcx'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_RCX ),
        ( strTok:  'dl'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_DL ),
        ( strTok:  'dh'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_DH ),
        ( strTok:  'dx'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_DX ),
        ( strTok:  'edx'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_EDX ),
        ( strTok:  'rdx'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_RDX ),
        ( strTok:  'spl'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_SPL ),
        ( strTok:  'sp'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_SP ),
        ( strTok:  'esp'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_ESP ),
        ( strTok:  'rsp'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_RSP ),
        ( strTok:  'bpl'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_BPL ),
        ( strTok:  'bp'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_BP ),
        ( strTok:  'ebp'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_EBP ),
        ( strTok:  'rbp'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_RBP ),
        ( strTok:  'sil'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_SIL ),
        ( strTok:  'si'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_SI ),
        ( strTok:  'esi'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_ESI ),
        ( strTok:  'rsi'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_RSI ),
        ( strTok:  'dil'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_DIL ),
        ( strTok:  'di'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_DI ),
        ( strTok:  'edi'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_EDI ),
        ( strTok:  'rdi'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_RDI ),
        ( strTok:  'r8b'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_R8B ),
        ( strTok:  'r9b'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_R9B ),
        ( strTok:  'r10b'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_R10B ),
        ( strTok:  'r11b'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_R11B ),
        ( strTok:  'r12b'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_R12B ),
        ( strTok:  'r13b'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_R13B ),
        ( strTok:  'r14b'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_R14B ),
        ( strTok:  'r15b'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_R15B ),
        ( strTok:  'r8w'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_R8W ),
        ( strTok:  'r9w'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_R9W ),
        ( strTok:  'r10w'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_R10W ),
        ( strTok:  'r11w'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_R11W ),
        ( strTok:  'r12w'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_R12W ),
        ( strTok:  'r13w'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_R13W ),
        ( strTok:  'r14w'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_R14W ),
        ( strTok:  'r15w'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_R15W ),
        ( strTok:  'r8d'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_R8D ),
        ( strTok:  'r9d'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_R9D ),
        ( strTok:  'r10d'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_R10D ),
        ( strTok:  'r11d'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_R11D ),
        ( strTok:  'r12d'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_R12D ),
        ( strTok:  'r13d'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_R13D ),
        ( strTok:  'r14d'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_R14D ),
        ( strTok:  'r15d'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_R15D ),
        ( strTok:  'r8'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_R8 ),
        ( strTok:  'r9'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_R9 ),
        ( strTok:  'r10'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_R10 ),
        ( strTok:  'r11'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_R11 ),
        ( strTok:  'r12'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_R12 ),
        ( strTok:  'r13'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_R13 ),
        ( strTok:  'r14'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_R14 ),
        ( strTok:  'r15'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_R15 ),
        ( strTok:  'es'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_ES ),
        ( strTok:  'cs'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_CS ),
        ( strTok:  'ss'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_SS ),
        ( strTok:  'ds'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_DS ),
        ( strTok:  'fs'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_FS ),
        ( strTok:  'gs'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_GS ),
        ( strTok:  'segr6'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_SEGR6 ),
        ( strTok:  'segr7'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_SEGR7 ),
        ( strTok:  'cr0'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_CR0 ),
        ( strTok:  'cr1'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_CR1 ),
        ( strTok:  'cr2'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_CR2 ),
        ( strTok:  'cr3'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_CR3 ),
        ( strTok:  'cr4'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_CR4 ),
        ( strTok:  'cr5'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_CR5 ),
        ( strTok:  'cr6'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_CR6 ),
        ( strTok:  'cr7'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_CR7 ),
        ( strTok:  'cr8'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_CR8 ),
        ( strTok:  'cr9'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_CR9 ),
        ( strTok:  'cr10'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_CR10 ),
        ( strTok:  'cr11'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_CR11 ),
        ( strTok:  'cr12'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_CR12 ),
        ( strTok:  'cr13'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_CR13 ),
        ( strTok:  'cr14'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_CR14 ),
        ( strTok:  'cr15'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_CR15 ),
        ( strTok:  'dr0'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_DR0 ),
        ( strTok:  'dr1'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_DR1 ),
        ( strTok:  'dr2'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_DR2 ),
        ( strTok:  'dr3'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_DR3 ),
        ( strTok:  'dr4'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_DR4 ),
        ( strTok:  'dr5'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_DR5 ),
        ( strTok:  'dr6'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_DR6 ),
        ( strTok:  'dr7'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_DR7 ),
        ( strTok:  'dr8'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_DR8 ),
        ( strTok:  'dr9'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_DR9 ),
        ( strTok:  'dr10'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_DR10 ),
        ( strTok:  'dr11'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_DR11 ),
        ( strTok:  'dr12'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_DR12 ),
        ( strTok:  'dr13'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_DR13 ),
        ( strTok:  'dr14'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_DR14 ),
        ( strTok:  'dr15'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_DR15 ),
        ( strTok:  'tr0'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_TR0 ),
        ( strTok:  'tr1'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_TR1 ),
        ( strTok:  'tr2'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_TR2 ),
        ( strTok:  'tr3'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_TR3 ),
        ( strTok:  'tr4'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_TR4 ),
        ( strTok:  'tr5'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_TR5 ),
        ( strTok:  'tr6'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_TR6 ),
        ( strTok:  'tr7'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_TR7 ),
        ( strTok:  'st0'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_ST0 ),
        ( strTok:  'st1'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_ST1 ),
        ( strTok:  'st2'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_ST2 ),
        ( strTok:  'st3'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_ST3 ),
        ( strTok:  'st4'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_ST4 ),
        ( strTok:  'st5'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_ST5 ),
        ( strTok:  'st6'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_ST6 ),
        ( strTok:  'st7'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_ST7 ),
        ( strTok:  'mm0'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_MM0 ),
        ( strTok:  'mm1'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_MM1 ),
        ( strTok:  'mm2'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_MM2 ),
        ( strTok:  'mm3'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_MM3 ),
        ( strTok:  'mm4'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_MM4 ),
        ( strTok:  'mm5'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_MM5 ),
        ( strTok:  'mm6'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_MM6 ),
        ( strTok:  'mm7'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_MM7 ),
        ( strTok:  'xmm0'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_XMM0 ),
        ( strTok:  'xmm1'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_XMM1 ),
        ( strTok:  'xmm2'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_XMM2 ),
        ( strTok:  'xmm3'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_XMM3 ),
        ( strTok:  'xmm4'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_XMM4 ),
        ( strTok:  'xmm5'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_XMM5 ),
        ( strTok:  'xmm6'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_XMM6 ),
        ( strTok:  'xmm7'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_XMM7 ),
        ( strTok:  'xmm8'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_XMM8 ),
        ( strTok:  'xmm9'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_XMM9 ),
        ( strTok:  'xmm10'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_XMM10 ),
        ( strTok:  'xmm11'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_XMM11 ),
        ( strTok:  'xmm12'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_XMM12 ),
        ( strTok:  'xmm13'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_XMM13 ),
        ( strTok:  'xmm14'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_XMM14 ),
        ( strTok:  'xmm15'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_XMM15 ),
        ( strTok:  'xmm16'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_XMM16 ),
        ( strTok:  'xmm17'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_XMM17 ),
        ( strTok:  'xmm18'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_XMM18 ),
        ( strTok:  'xmm19'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_XMM19 ),
        ( strTok:  'xmm20'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_XMM20 ),
        ( strTok:  'xmm21'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_XMM21 ),
        ( strTok:  'xmm22'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_XMM22 ),
        ( strTok:  'xmm23'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_XMM23 ),
        ( strTok:  'xmm24'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_XMM24 ),
        ( strTok:  'xmm25'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_XMM25 ),
        ( strTok:  'xmm26'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_XMM26 ),
        ( strTok:  'xmm27'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_XMM27 ),
        ( strTok:  'xmm28'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_XMM28 ),
        ( strTok:  'xmm29'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_XMM29 ),
        ( strTok:  'xmm30'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_XMM30 ),
        ( strTok:  'xmm31'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_XMM31 ),
        ( strTok:  'ymm0'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_YMM0 ),
        ( strTok:  'ymm1'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_YMM1 ),
        ( strTok:  'ymm2'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_YMM2 ),
        ( strTok:  'ymm3'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_YMM3 ),
        ( strTok:  'ymm4'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_YMM4 ),
        ( strTok:  'ymm5'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_YMM5 ),
        ( strTok:  'ymm6'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_YMM6 ),
        ( strTok:  'ymm7'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_YMM7 ),
        ( strTok:  'ymm8'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_YMM8 ),
        ( strTok:  'ymm9'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_YMM9 ),
        ( strTok:  'ymm10'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_YMM10 ),
        ( strTok:  'ymm11'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_YMM11 ),
        ( strTok:  'ymm12'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_YMM12 ),
        ( strTok:  'ymm13'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_YMM13 ),
        ( strTok:  'ymm14'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_YMM14 ),
        ( strTok:  'ymm15'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_YMM15 ),
        ( strTok:  'ymm16'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_YMM16 ),
        ( strTok:  'ymm17'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_YMM17 ),
        ( strTok:  'ymm18'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_YMM18 ),
        ( strTok:  'ymm19'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_YMM19 ),
        ( strTok:  'ymm20'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_YMM20 ),
        ( strTok:  'ymm21'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_YMM21 ),
        ( strTok:  'ymm22'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_YMM22 ),
        ( strTok:  'ymm23'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_YMM23 ),
        ( strTok:  'ymm24'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_YMM24 ),
        ( strTok:  'ymm25'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_YMM25 ),
        ( strTok:  'ymm26'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_YMM26 ),
        ( strTok:  'ymm27'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_YMM27 ),
        ( strTok:  'ymm28'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_YMM28 ),
        ( strTok:  'ymm29'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_YMM29 ),
        ( strTok:  'ymm30'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_YMM30 ),
        ( strTok:  'ymm31'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_YMM31 ),
        ( strTok:  'zmm0'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_ZMM0 ),
        ( strTok:  'zmm1'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_ZMM1 ),
        ( strTok:  'zmm2'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_ZMM2 ),
        ( strTok:  'zmm3'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_ZMM3 ),
        ( strTok:  'zmm4'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_ZMM4 ),
        ( strTok:  'zmm5'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_ZMM5 ),
        ( strTok:  'zmm6'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_ZMM6 ),
        ( strTok:  'zmm7'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_ZMM7 ),
        ( strTok:  'zmm8'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_ZMM8 ),
        ( strTok:  'zmm9'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_ZMM9 ),
        ( strTok:  'zmm10'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_ZMM10 ),
        ( strTok:  'zmm11'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_ZMM11 ),
        ( strTok:  'zmm12'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_ZMM12 ),
        ( strTok:  'zmm13'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_ZMM13 ),
        ( strTok:  'zmm14'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_ZMM14 ),
        ( strTok:  'zmm15'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_ZMM15 ),
        ( strTok:  'zmm16'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_ZMM16 ),
        ( strTok:  'zmm17'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_ZMM17 ),
        ( strTok:  'zmm18'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_ZMM18 ),
        ( strTok:  'zmm19'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_ZMM19 ),
        ( strTok:  'zmm20'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_ZMM20 ),
        ( strTok:  'zmm21'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_ZMM21 ),
        ( strTok:  'zmm22'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_ZMM22 ),
        ( strTok:  'zmm23'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_ZMM23 ),
        ( strTok:  'zmm24'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_ZMM24 ),
        ( strTok:  'zmm25'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_ZMM25 ),
        ( strTok:  'zmm26'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_ZMM26 ),
        ( strTok:  'zmm27'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_ZMM27 ),
        ( strTok:  'zmm28'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_ZMM28 ),
        ( strTok:  'zmm29'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_ZMM29 ),
        ( strTok:  'zmm30'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_ZMM30 ),
        ( strTok:  'zmm31'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_ZMM31 ),
        ( strTok:  'k0'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_K0 ),
        ( strTok:  'k1'; tokentype:   TOKEN_REG;aux:  0; tokflag:  TFLAG_BRC_OPT;  num:       R_K1 ),
        ( strTok:  'k2'; tokentype:   TOKEN_REG;aux:  0; tokflag:  TFLAG_BRC_OPT;  num:       R_K2 ),
        ( strTok:  'k3'; tokentype:   TOKEN_REG;aux:  0; tokflag:  TFLAG_BRC_OPT;  num:       R_K3 ),
        ( strTok:  'k4'; tokentype:   TOKEN_REG;aux:  0; tokflag:  TFLAG_BRC_OPT;  num:       R_K4 ),
        ( strTok:  'k5'; tokentype:   TOKEN_REG;aux:  0; tokflag:  TFLAG_BRC_OPT;  num:       R_K5 ),
        ( strTok:  'k6'; tokentype:   TOKEN_REG;aux:  0; tokflag:  TFLAG_BRC_OPT;  num:       R_K6 ),
        ( strTok:  'k7'; tokentype:   TOKEN_REG;aux:  0; tokflag:  TFLAG_BRC_OPT;  num:       R_K7 ),
        ( strTok:  'bnd0'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_BND0 ),
        ( strTok:  'bnd1'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_BND1 ),
        ( strTok:  'bnd2'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_BND2 ),
        ( strTok:  'bnd3'; tokentype:   TOKEN_REG;aux:  0; tokflag:  0;  num:       R_BND3 ),
        ( strTok:  'a16'; tokentype:   TOKEN_PREFIX; aux:  0; tokflag:  0;  num:       P_A16 ),
        ( strTok:  'a32'; tokentype:   TOKEN_PREFIX; aux:  0; tokflag:  0;  num:       P_A32 ),
        ( strTok:  'a64'; tokentype:   TOKEN_PREFIX; aux:  0; tokflag:  0;  num:       P_A64 ),
        ( strTok:  'asp'; tokentype:   TOKEN_PREFIX; aux:  0; tokflag:  0;  num:       P_ASP ),
        ( strTok:  'lock'; tokentype:   TOKEN_PREFIX; aux:  0; tokflag:  0;  num:       P_LOCK ),
        ( strTok:  'o16'; tokentype:   TOKEN_PREFIX; aux:  0; tokflag:  0;  num:       P_O16 ),
        ( strTok:  'o32'; tokentype:   TOKEN_PREFIX; aux:  0; tokflag:  0;  num:       P_O32 ),
        ( strTok:  'o64'; tokentype:   TOKEN_PREFIX; aux:  0; tokflag:  0;  num:       P_O64 ),
        ( strTok:  'osp'; tokentype:   TOKEN_PREFIX; aux:  0; tokflag:  0;  num:       P_OSP ),
        ( strTok:  'rep'; tokentype:   TOKEN_PREFIX; aux:  0; tokflag:  0;  num:       P_REP ),
        ( strTok:  'repe'; tokentype:   TOKEN_PREFIX; aux:  0; tokflag:  0;  num:       P_REPE ),
        ( strTok:  'repne'; tokentype:   TOKEN_PREFIX; aux:  0; tokflag:  0;  num:       P_REPNE ),
        ( strTok:  'repnz'; tokentype:   TOKEN_PREFIX; aux:  0; tokflag:  0;  num:       P_REPNZ ),
        ( strTok:  'repz'; tokentype:   TOKEN_PREFIX; aux:  0; tokflag:  0;  num:       P_REPZ ),
        ( strTok:  'times'; tokentype:   TOKEN_PREFIX; aux:  0; tokflag:  0;  num:       P_TIMES ),
        ( strTok:  'wait'; tokentype:   TOKEN_PREFIX; aux:  0; tokflag:  0;  num:       P_WAIT ),
        ( strTok:  'xacquire'; tokentype:   TOKEN_PREFIX; aux:  0; tokflag:  0;  num:       P_XACQUIRE ),
        ( strTok:  'xrelease'; tokentype:   TOKEN_PREFIX; aux:  0; tokflag:  0;  num:       P_XRELEASE ),
        ( strTok:  'bnd'; tokentype:   TOKEN_PREFIX; aux:  0; tokflag:  0;  num:       P_BND ),
        ( strTok:  'nobnd'; tokentype:   TOKEN_PREFIX; aux:  0; tokflag:  0;  num:       P_NOBND ),
        ( strTok:  'abs'; tokentype:   TOKEN_SPECIAL; aux:  0; tokflag:  0;  num:       S_ABS ),
        ( strTok:  'byte'; tokentype:   TOKEN_SPECIAL; aux:  0; tokflag:  0;  num:       S_BYTE ),
        ( strTok:  'dword'; tokentype:   TOKEN_SPECIAL; aux:  0; tokflag:  0;  num:       S_DWORD ),
        ( strTok:  'far'; tokentype:   TOKEN_SPECIAL; aux:  0; tokflag:  0;  num:       S_FAR ),
        ( strTok:  'long'; tokentype:   TOKEN_SPECIAL; aux:  0; tokflag:  0;  num:       S_LONG ),
        ( strTok:  'near'; tokentype:   TOKEN_SPECIAL; aux:  0; tokflag:  0;  num:       S_NEAR ),
        ( strTok:  'nosplit'; tokentype:   TOKEN_SPECIAL; aux:  0; tokflag:  0;  num:       S_NOSPLIT ),
        ( strTok:  'oword'; tokentype:   TOKEN_SPECIAL; aux:  0; tokflag:  0;  num:       S_OWORD ),
        ( strTok:  'qword'; tokentype:   TOKEN_SPECIAL; aux:  0; tokflag:  0;  num:       S_QWORD ),
        ( strTok:  'rel'; tokentype:   TOKEN_SPECIAL; aux:  0; tokflag:  0;  num:       S_REL ),
        ( strTok:  'short'; tokentype:   TOKEN_SPECIAL; aux:  0; tokflag:  0;  num:       S_SHORT ),
        ( strTok:  'strict'; tokentype:   TOKEN_SPECIAL; aux:  0; tokflag:  0;  num:       S_STRICT ),
        ( strTok:  'to'; tokentype:   TOKEN_SPECIAL; aux:  0; tokflag:  0;  num:       S_TO ),
        ( strTok:  'tword'; tokentype:   TOKEN_SPECIAL; aux:  0; tokflag:  0;  num:       S_TWORD ),
        ( strTok:  'word'; tokentype:   TOKEN_SPECIAL; aux:  0; tokflag:  0;  num:       S_WORD ),
        ( strTok:  'yword'; tokentype:   TOKEN_SPECIAL; aux:  0; tokflag:  0;  num:       S_YWORD ),
        ( strTok:  'zword'; tokentype:   TOKEN_SPECIAL; aux:  0; tokflag:  0;  num:       S_ZWORD ),
        ( strTok:  '__infinity__'; tokentype:   TOKEN_FLOAT; aux:  0; tokflag:  0;  num:       0 ),
        ( strTok:  '__nan__'; tokentype:   TOKEN_FLOAT; aux:  0; tokflag:  0;  num:       0 ),
        ( strTok:  '__qnan__'; tokentype:   TOKEN_FLOAT; aux:  0; tokflag:  0;  num:       0 ),
        ( strTok:  '__snan__'; tokentype:   TOKEN_FLOAT; aux:  0; tokflag:  0;  num:       0 ),
        ( strTok:  '__float8__'; tokentype:   TOKEN_FLOATIZE; aux:  0; tokflag:  0;  num:       FLOAT_8 ),
        ( strTok:  '__float16__'; tokentype:   TOKEN_FLOATIZE; aux:  0; tokflag:  0;  num:       FLOAT_16 ),
        ( strTok:  '__float32__'; tokentype:   TOKEN_FLOATIZE; aux:  0; tokflag:  0;  num:       FLOAT_32 ),
        ( strTok:  '__float64__'; tokentype:   TOKEN_FLOATIZE; aux:  0; tokflag:  0;  num:       FLOAT_64 ),
        ( strTok:  '__float80m__'; tokentype:   TOKEN_FLOATIZE; aux:  0; tokflag:  0;  num:       FLOAT_80M ),
        ( strTok:  '__float80e__'; tokentype:   TOKEN_FLOATIZE; aux:  0; tokflag:  0;  num:       FLOAT_80E ),
        ( strTok:  '__float128l__'; tokentype:   TOKEN_FLOATIZE; aux:  0; tokflag:  0;  num:       FLOAT_128L ),
        ( strTok:  '__float128h__'; tokentype:   TOKEN_FLOATIZE; aux:  0; tokflag:  0;  num:       FLOAT_128H ),
        ( strTok:  '__utf16__'; tokentype:   TOKEN_STRFUNC; aux:  0; tokflag:  0;  num:       STRFUNC_UTF16 ),
        ( strTok:  '__utf16le__'; tokentype:   TOKEN_STRFUNC; aux:  0; tokflag:  0;  num:       STRFUNC_UTF16LE ),
        ( strTok:  '__utf16be__'; tokentype:   TOKEN_STRFUNC; aux:  0; tokflag:  0;  num:       STRFUNC_UTF16BE ),
        ( strTok:  '__utf32__'; tokentype:   TOKEN_STRFUNC; aux:  0; tokflag:  0;  num:       STRFUNC_UTF32 ),
        ( strTok:  '__utf32le__'; tokentype:   TOKEN_STRFUNC; aux:  0; tokflag:  0;  num:       STRFUNC_UTF32LE ),
        ( strTok:  '__utf32be__'; tokentype:   TOKEN_STRFUNC; aux:  0; tokflag:  0;  num:       STRFUNC_UTF32BE ),
        ( strTok:  '__ilog2e__'; tokentype:   TOKEN_IFUNC; aux:  0; tokflag:  0;  num:       IFUNC_ILOG2E ),
        ( strTok:  '__ilog2w__'; tokentype:   TOKEN_IFUNC; aux:  0; tokflag:  0;  num:       IFUNC_ILOG2W ),
        ( strTok:  '__ilog2f__'; tokentype:   TOKEN_IFUNC; aux:  0; tokflag:  0;  num:       IFUNC_ILOG2F ),
        ( strTok:  '__ilog2c__'; tokentype:   TOKEN_IFUNC; aux:  0; tokflag:  0;  num:       IFUNC_ILOG2C ),
        ( strTok:  'seg'; tokentype:   TOKEN_SEG; aux:  0; tokflag:  0;  num:       0 ),
        ( strTok:  'wrt'; tokentype:   TOKEN_WRT; aux:  0; tokflag:  0;  num:       0 ),
        ( strTok:  '1to2'; tokentype:   TOKEN_DECORATOR; aux:  0; tokflag:  TFLAG_BRC or TFLAG_BRDCAST;  num:       BRC_1TO2 ),
        ( strTok:  '1to4'; tokentype:   TOKEN_DECORATOR; aux:  0; tokflag:  TFLAG_BRC or TFLAG_BRDCAST;  num:       BRC_1TO4 ),
        ( strTok:  '1to8'; tokentype:   TOKEN_DECORATOR; aux:  0; tokflag:  TFLAG_BRC or TFLAG_BRDCAST;  num:       BRC_1TO8 ),
        ( strTok:  '1to16'; tokentype:   TOKEN_DECORATOR; aux:  0; tokflag:  TFLAG_BRC or TFLAG_BRDCAST;  num:       BRC_1TO16 ),
        ( strTok:  'rn-sae'; tokentype:   TOKEN_DECORATOR; aux:  0;  tokflag:  TFLAG_BRC;  num:       BRC_RN ),
        ( strTok:  'rd-sae'; tokentype:   TOKEN_DECORATOR; aux:  0;  tokflag:  TFLAG_BRC;  num:       BRC_RD ),
        ( strTok:  'ru-sae'; tokentype:   TOKEN_DECORATOR; aux:  0;  tokflag:  TFLAG_BRC;  num:       BRC_RU ),
        ( strTok:  'rz-sae'; tokentype:   TOKEN_DECORATOR; aux:  0;  tokflag:  TFLAG_BRC;  num:       BRC_RZ ),
        ( strTok:  'sae'; tokentype:   TOKEN_DECORATOR; aux:  0;  tokflag:  TFLAG_BRC;  num:       BRC_SAE ),
        ( strTok:  'z'; tokentype:   TOKEN_DECORATOR; aux:  0;  tokflag:  TFLAG_BRC;  num:       BRC_Z ),
        ( strTok:  'evex'; tokentype:   TOKEN_PREFIX; aux:  0;  tokflag:  TFLAG_BRC;  num:       P_EVEX ),
        ( strTok:  'vex3'; tokentype:   TOKEN_PREFIX; aux:  0;  tokflag:  TFLAG_BRC;  num:       P_VEX3 ),
        ( strTok:  'vex2'; tokentype:   TOKEN_PREFIX; aux:  0;  tokflag:  TFLAG_BRC;  num:       P_VEX2 )
    );
  var
    k1, k2 : Cardinal;
    crc    : UInt64;
    ix     : UInt16;
    data   : TTokendata;

Begin
    tv.t_flag := 0;
    crc       := crc64($ace2d0e480575791, token);
    k1        := Cardinal(crc);
    k2        := Cardinal(crc shr 32);

    ix := hash1[k1 and $7ff] + hash2[k2 and $7ff];
    if (ix >= 2216) then
    Begin
        tv.t_type := TOKEN_ID;
        Result    := tv.t_type ;
        Exit;
    End;

    data := tokendata[ix];
    if (strcmp(data.strTok, token)) <> 0 then
    Begin
        tv.t_type := TOKEN_ID;
        Result    := tv.t_type ;
        Exit;
    End;

    tv.t_integer := data.num;
    tv.t_inttwo  := data.aux;
    tv.t_flag    := data.tokflag;
    tv.t_type    := data.tokentype;
    Result       := tv.t_type;
End;
End.
