add al,0x10
inc eax
add [ebx],al
pop es
inc edx
outsd
outsd
insb
gs popad
outsb
add [eax],eax
add [eax],al
add [ecx],al
add [eax],al
add [eax],al
adc [eax+0x0],al
add eax,0x736c6146
gs add al,0x54
jc 0x99
lea eax,[gs:eax+0x0]
sub al,0x10
inc eax
add [edx],al
add al,0x43
push dword 0x17261
add [eax],al
add bh,bh
add [eax],al
add [eax+0x401040],dl
add [edi],eax
dec ecx
outsb
jz 0xab
gs jc 0x4e
add [eax],al
add [eax+0x7fffffff],al
mov eax,eax
pop eax
adc [eax+0x0],al
add [edx+eax*2],eax
jns 0xd1
add [gs:eax],eax
add [eax],al
add bh,bh
add [eax],al
add [eax+0x40106c],dl
add [edi+edx*2],eax
outsd
jc 0xd6
add eax,[eax]
add [eax],al
add bh,bh
inc dword [eax]
add [eax+0x401080],dl
add [eax],ecx
inc ebx
popad
jc 0xea
imul ebp,[esi+0x61],dword 0x56c
add [eax],al
db 0xff
db 0xff
db 0xff
call dword [eax+0x401098]
or al,[esi]
jnc 0x110
jc 0x107
outsb
a16 movsb
adc [eax+0x0],al
or ecx,[edx]
push edi
imul esp,[ebp+0x53],dword 0x6e697274
a16 cld
adc [eax+0x0],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
cld
adc [eax+0x0],al
add al,0x0
add [eax],al
add [eax],al
add [eax],al
cmp [esi],bh
inc eax
add [esi+edi+0x40],al
add [eax+0x3e],cl
inc eax
add [esi+edi+0x40],cl
add [eax+0x3e],al
inc eax
add [eax-0x5bffbfc5],cl
cmp eax,[eax+0x0]
loopne 0x135
inc eax
add [edi],al
push esp
dec edi
bound ebp,[edx+0x65]
arpl [eax+ecx+0x11],si
inc eax
add [edi],al
pop es
push esp
dec edi
bound ebp,[edx+0x65]
arpl [esp+edi*8+0x10],si
inc eax
add [eax],al
add [eax],al
add [eax],al
add [esi],al
push ebx
jns 0x192
jz 0x186
insd
add [eax],al
sub [ecx],dl
inc eax
add [edi],cl
or cl,[ecx+0x49]
outsb
jz 0x194
jc 0x197
popad
arpl [ebp+0x0],sp
add [eax],al
add [ecx],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
rol byte [eax],byte 0x0
add [eax],al
add [eax],al
inc esi
push es
push ebx
jns 0x1c0
jz 0x1b4
insd
add eax,[eax]
db 0xff
dec esp
add dword [esp+0x4],byte -0x8
jmp dword 0x531c
add dword [esp+0x4],byte -0x8
jmp dword 0x5344
add dword [esp+0x4],byte -0x8
jmp dword 0x5358
int3
int3
push ebp
adc [eax+0x0],eax
pop edi
adc [eax+0x0],eax
imul edx,[ecx],dword 0x10040
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
rol byte [eax],byte 0x0
add [eax],al
add [eax],al
inc esi
jnz 0x1a8
inc eax
add [eax],cl
add [eax],al
add [eax],al
add [eax],al
add [ebp+0x11f00040],cl
inc eax
add [ecx+0x4011],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add al,dh
adc [eax+0x0],eax
or al,0x0
add [eax],al
mov al,0x10
inc eax
add [eax],bh
ds inc eax
add al,dh
bound eax,[eax+0x0]
cld
bound eax,[eax+0x0]
dec esp
ds inc eax
add [eax+0x3e],al
inc eax
add [ebx],cl
inc eax
add [ebx+edi+0x3be00040],ah
inc eax
add [ecx],dl
push esp
dec ecx
outsb
jz 0x25b
jc 0x25e
popad
arpl [ebp+0x64],sp
dec edi
bound ebp,[edx+0x65]
arpl [ebx+ecx*4-0x40],si
jmp dword [dword 0x46e840]
mov eax,eax
jmp dword [dword 0x46e83c]
mov eax,eax
jmp dword [dword 0x46e838]
mov eax,eax
jmp dword [dword 0x46e834]
mov eax,eax
jmp dword [dword 0x46e830]
mov eax,eax
jmp dword [dword 0x46e7c4]
mov eax,eax
jmp dword [dword 0x46e82c]
mov eax,eax
jmp dword [dword 0x46e828]
mov eax,eax
jmp dword [dword 0x46e7c0]
mov eax,eax
jmp dword [dword 0x46e824]
mov eax,eax
jmp dword [dword 0x46e820]
mov eax,eax
jmp dword [dword 0x46e81c]
mov eax,eax
jmp dword [dword 0x46e818]
mov eax,eax
jmp dword [dword 0x46e814]
mov eax,eax
jmp dword [dword 0x46e810]
mov eax,eax
jmp dword [dword 0x46e80c]
mov eax,eax
jmp dword [dword 0x46e808]
mov eax,eax
jmp dword [dword 0x46e804]
mov eax,eax
jmp dword [dword 0x46e800]
mov eax,eax
jmp dword [dword 0x46e7fc]
mov eax,eax
jmp dword [dword 0x46e7bc]
mov eax,eax
jmp dword [dword 0x46e7f8]
mov eax,eax
jmp dword [dword 0x46e7f4]
mov eax,eax
jmp dword [dword 0x46e7f0]
mov eax,eax
jmp dword [dword 0x46e7ac]
mov eax,eax
jmp dword [dword 0x46e7a8]
mov eax,eax
jmp dword [dword 0x46e7a4]
mov eax,eax
jmp dword [dword 0x46e7ec]
mov eax,eax
jmp dword [dword 0x46e7e8]
mov eax,eax
jmp dword [dword 0x46e79c]
mov eax,eax
jmp dword [dword 0x46e798]
mov eax,eax
jmp dword [dword 0x46e794]
mov eax,eax
jmp dword [dword 0x46e7e4]
mov eax,eax
jmp dword [dword 0x46e7e0]
mov eax,eax
jmp dword [dword 0x46e7dc]
mov eax,eax
push ebx
add esp,byte -0x44
mov ebx,0xa
push esp
call dword 0x28c
test byte [esp+0x2c],0x1
jz 0x337
movzx ebx,word [esp+0x30]
mov eax,ebx
add esp,byte +0x44
pop ebx
ret
mov eax,eax
jmp dword [dword 0x46e7d8]
mov eax,eax
jmp dword [dword 0x46e7d4]
mov eax,eax
jmp dword [dword 0x46e7d0]
mov eax,eax
jmp dword [dword 0x46e7b8]
mov eax,eax
db 0xff
db 0xff
db 0xff
call dword [edi+0x0]
add [eax],al
inc esi
popad
jnc 0x3e0
dec ebp
dec ebp
and [edx+0x6f],al
jc 0x3df
popad
outsb
and [fs:ebp+0x64],al
imul esi,[ecx+ebp*2+0x6f],dword 0x20a9206e
xor dh,[eax]
xor [esp+ebp],dh
and [edx],dh
xor [eax],dh
xor eax,0x65695020
jc 0x403
and [gs:ebp+0x20],ch
push edx
imul esp,[ebx+0x68],dword 0x202f2065
push eax
jc 0x410
gs o16 jnc 0x418
imul ebp,[edi+0x6e],dword 0x53206c61
outsd
o16 jz 0x427
popad
jc 0x418
and [ebp+0x76],al
gs insb
outsd
jo 0x429
gs outsb
jz 0x3c0
lock cmpxchg [ecx],dl
ret
lea eax,[eax+0x0]
mov ecx,[eax]
mov [edx],ecx
mov ecx,[eax+0x4]
mov eax,[eax+0x8]
mov [edx+0x4],ecx
mov [edx+0x8],eax
ret
lea eax,[eax+0x0]
mov ecx,[eax]
mov [edx],ecx
mov ecx,[eax+0x4]
mov [edx+0x4],ecx
mov ecx,[eax+0x8]
mov [edx+0x8],ecx
mov ecx,[eax+0xc]
mov eax,[eax+0x10]
mov [edx+0xc],ecx
mov [edx+0x10],eax
ret
lea eax,[eax+0x0]
mov ecx,[eax]
mov [edx],ecx
mov ecx,[eax+0x4]
mov [edx+0x4],ecx
mov ecx,[eax+0x8]
mov [edx+0x8],ecx
mov ecx,[eax+0xc]
mov [edx+0xc],ecx
mov ecx,[eax+0x10]
mov [edx+0x10],ecx
mov ecx,[eax+0x14]
mov eax,[eax+0x18]
mov [edx+0x14],ecx
mov [edx+0x18],eax
ret
lea eax,[eax+0x0]
fild qword [eax]
fild qword [eax+0x8]
fild qword [eax+0x10]
fild qword [eax+0x18]
mov ecx,[eax+0x20]
mov [edx+0x20],ecx
fistp qword [edx+0x18]
fistp qword [edx+0x10]
fistp qword [edx+0x8]
fistp qword [edx]
ret
lea eax,[eax+0x0]
fild qword [eax]
fild qword [eax+0x8]
fild qword [eax+0x10]
fild qword [eax+0x18]
fild qword [eax+0x20]
mov ecx,[eax+0x28]
mov [edx+0x28],ecx
fistp qword [edx+0x20]
fistp qword [edx+0x18]
fistp qword [edx+0x10]
fistp qword [edx+0x8]
fistp qword [edx]
ret
nop
fild qword [eax]
fild qword [eax+0x8]
fild qword [eax+0x10]
fild qword [eax+0x18]
fild qword [eax+0x20]
fild qword [eax+0x28]
mov ecx,[eax+0x30]
mov [edx+0x30],ecx
fistp qword [edx+0x28]
fistp qword [edx+0x20]
fistp qword [edx+0x18]
fistp qword [edx+0x10]
fistp qword [edx+0x8]
fistp qword [edx]
ret
lea eax,[eax+0x0]
fild qword [eax]
fild qword [eax+0x8]
fild qword [eax+0x10]
fild qword [eax+0x18]
fild qword [eax+0x20]
fild qword [eax+0x28]
fild qword [eax+0x30]
mov ecx,[eax+0x38]
mov [edx+0x38],ecx
fistp qword [edx+0x30]
fistp qword [edx+0x28]
fistp qword [edx+0x20]
fistp qword [edx+0x18]
fistp qword [edx+0x10]
fistp qword [edx+0x8]
fistp qword [edx]
ret
nop
fild qword [eax]
fild qword [eax+0x8]
fild qword [eax+0x10]
fild qword [eax+0x18]
fild qword [eax+0x20]
fild qword [eax+0x28]
fild qword [eax+0x30]
fild qword [eax+0x38]
mov ecx,[eax+0x40]
mov [edx+0x40],ecx
fistp qword [edx+0x38]
fistp qword [edx+0x30]
fistp qword [edx+0x28]
fistp qword [edx+0x20]
fistp qword [edx+0x18]
fistp qword [edx+0x10]
fistp qword [edx+0x8]
fistp qword [edx]
ret
lea eax,[eax+0x0]
sub ecx,byte +0xc
add eax,ecx
add edx,ecx
neg ecx
jns 0x51e
fild qword [ecx+eax]
fild qword [ecx+eax+0x8]
fistp qword [ecx+edx+0x8]
fistp qword [ecx+edx]
add ecx,byte +0x10
js 0x50b
fild qword [ecx+eax]
fistp qword [ecx+edx]
mov eax,[ecx+eax+0x8]
mov [ecx+edx+0x8],eax
ret
lea eax,[eax+0x0]
sub ecx,byte +0x4
add eax,ecx
add edx,ecx
neg ecx
fild qword [ecx+eax]
fistp qword [ecx+edx]
add ecx,byte +0x8
js 0x539
mov eax,[ecx+eax]
mov [ecx+edx],eax
ret
nop
mov ecx,[eax+0x4]
mov edx,[eax]
cmp ecx,edx
mov [ecx],edx
mov [edx+0x4],ecx
jz 0x55c
ret
nop
sub ecx,0x4697a4
mov edx,ecx
shr ecx,byte 0x3
movzx edx,dh
mov eax,0xfffffffe
rol eax,cl
and [edx*4+0x469724],eax
jnz 0x55a
mov eax,0xfffffffe
mov ecx,edx
rol eax,cl
and [dword 0x469720],eax
ret
mov eax,eax
sub edx,0xb30
shr edx,byte 0x8
sub edx,0x3ff
sbb ecx,ecx
and edx,ecx
add edx,0x3ff
lea ecx,[edx*8+0x4697a4]
mov edx,[ecx+0x4]
cmp edx,ecx
mov [eax],ecx
mov [eax+0x4],edx
mov [edx],eax
mov [ecx+0x4],eax
jz 0x5c0
ret
nop
nop
sub ecx,0x4697a4
mov edx,ecx
shr ecx,byte 0x3
movzx edx,dh
mov eax,0x1
shl eax,cl
or [edx*4+0x469724],eax
mov eax,0x1
mov ecx,edx
shl eax,cl
or [dword 0x469720],eax
ret
cmp dword [dword 0x46971c],byte +0x0
jnz 0x5f8
ret
nop
nop
mov eax,[0x469718]
test byte [eax-0x4],0x1
jnz 0x628
or dword [eax-0x4],byte +0x8
mov edx,[dword 0x46971c]
sub eax,edx
lea ecx,[edx+0x3]
mov [eax-0x4],ecx
mov [edx+eax-0x8],edx
cmp edx,0xb30
jnc dword 0x58c
ret
nop
nop
mov edx,0xfffffff0
and edx,[eax-0x4]
cmp edx,0xb30
jc 0x64a
call dword 0x54c
mov eax,[0x469718]
mov edx,0xfffffff0
and edx,[eax-0x4]
mov ecx,[dword 0x46971c]
sub eax,ecx
add edx,ecx
jmp short 0x60f
ret
nop
push ebx
mov ebx,eax
call dword 0x5ec
push byte +0x4
push dword 0x1000
push dword 0x13fff0
push byte +0x0
call dword 0x340
test eax,eax
jz 0x6c4
mov edx,[dword 0x469708]
mov ecx,eax
mov dword [ecx],0x469704
mov [0x469708],eax
mov [ecx+0x4],edx
mov [edx],eax
mov edx,eax
add edx,0x13fff0
mov ecx,edx
sub ecx,byte +0x4
mov dword [ecx],0x2
mov ecx,0x13ffe0
sub ecx,ebx
mov [dword 0x46971c],ecx
sub edx,ebx
mov eax,edx
mov [0x469718],eax
or ebx,byte +0x2
mov edx,eax
sub edx,byte +0x4
mov [edx],ebx
pop ebx
ret
xor eax,eax
mov [0x46971c],eax
xor eax,eax
pop ebx
ret
nop
cmp byte [dword 0x469049],0x0
jz 0x716
jmp short 0x704
cmp byte [dword 0x4695b1],0x0
jnz 0x704
push byte +0x0
call dword 0x350
mov ecx,0x46b7a4
mov dl,0x1
xor eax,eax
call dword 0x3c0
test al,al
jz 0x716
push byte +0xa
call dword 0x350
mov ecx,0x46b7a4
mov dl,0x1
xor eax,eax
call dword 0x3c0
test al,al
jnz 0x6db
ret
nop
push ebx
push esi
push edi
push ebp
mov ebp,eax
lea esi,[ebp+0x10010]
dec esi
add esi,byte +0x4
and esi,0xffff0000
push byte +0x4
push dword 0x101000
push esi
push byte +0x0
call dword 0x340
mov ebx,eax
test ebx,ebx
jz 0x773
mov edi,ebx
mov [edi+0x8],ebp
or esi,byte +0x4
mov [edi+0xc],esi
call dword 0x6d0
mov eax,[0x46b7ac]
mov dword [edi],0x46b7a8
mov [dword 0x46b7ac],ebx
mov [edi+0x4],eax
mov [eax],ebx
mov byte [dword 0x46b7a4],0x0
add ebx,byte +0x10
mov eax,ebx
pop ebp
pop edi
pop esi
pop ebx
ret
mov eax,eax
push ebx
push esi
push edi
push ebp
add esp,byte -0x24
mov esi,eax
sub esi,byte +0x10
call dword 0x6d0
mov eax,esi
mov edx,[eax]
mov [esp],edx
mov edx,[eax+0x4]
mov [esp+0x4],edx
mov edx,[eax+0xc]
test dl,0x8
jnz 0x7bd
push dword 0x8000
push byte +0x0
push esi
call dword 0x348
test eax,eax
jz 0x7b8
xor edi,edi
jmp short 0x7f7
or edi,byte -0x1
jmp short 0x7f7
mov ebx,esi
mov ebp,edx
and ebp,byte -0x10
xor edi,edi
push byte +0x1c
lea eax,[esp+0xc]
push eax
push ebx
call dword 0x2e4
push dword 0x8000
push byte +0x0
push ebx
call dword 0x348
test eax,eax
jnz 0x7e9
or edi,byte -0x1
jmp short 0x7f7
mov esi,[esp+0x14]
cmp ebp,esi
jna 0x7f7
sub ebp,esi
add ebx,esi
jmp short 0x7c6
test edi,edi
jnz 0x80e
mov eax,[esp+0x4]
mov edx,[esp]
mov [eax],edx
mov eax,[esp]
mov edx,[esp+0x4]
mov [eax+0x4],edx
mov byte [dword 0x46b7a4],0x0
mov eax,edi
add esp,byte +0x24
pop ebp
pop edi
pop esi
pop ebx
ret
nop
push ebx
push esi
push edi
push ebp
add esp,byte -0x20
mov esi,edx
mov edi,eax
mov eax,edi
sub eax,byte +0x4
mov eax,[eax]
mov ebx,eax
and ebx,byte -0x10
sub ebx,byte +0x14
cmp ebx,esi
jnc dword 0x923
mov edx,ebx
shr edx,byte 0x2
add edx,ebx
cmp edx,esi
jna 0x851
mov ebp,edx
jmp short 0x853
mov ebp,esi
mov edx,edi
sub edx,byte +0x10
and eax,byte -0x10
add edx,eax
mov [esp],edx
push byte +0x1c
lea eax,[esp+0x8]
push eax
mov eax,[esp+0x8]
push eax
call dword 0x2e4
cmp dword [esp+0x14],0x10000
jnz 0x8eb
and dword [esp+0x10],0xffff0000
mov edx,esi
sub edx,ebx
mov eax,[esp+0x10]
cmp edx,eax
jnc 0x8eb
mov edx,ebp
sub edx,ebx
add edx,0x10000
dec edx
and edx,0xffff0000
mov ebx,edx
cmp eax,ebx
jnc 0x8a8
mov ebx,eax
push byte +0x4
push dword 0x2000
push ebx
mov eax,[esp+0xc]
push eax
call dword 0x340
test eax,eax
jz 0x8eb
push byte +0x4
push dword 0x1000
push ebx
mov eax,[esp+0xc]
push eax
call dword 0x340
test eax,eax
jz 0x8eb
mov eax,edi
sub eax,byte +0x10
mov [eax+0x8],esi
mov edx,eax
add ebx,[edx+0xc]
or ebx,byte +0x8
mov [edx+0xc],ebx
mov ebx,edi
jmp short 0x962
mov eax,ebp
call dword 0x96c
mov ebx,eax
test ebx,ebx
jz 0x962
cmp ebp,0x40a2c
jna 0x908
mov eax,ebx
sub eax,byte +0x10
mov [eax+0x8],esi
mov eax,edi
sub eax,byte +0x10
mov eax,[eax+0x8]
mov edx,ebx
mov ecx,edi
xchg eax,ecx
call dword 0x500
mov eax,edi
call dword 0xcf0
jmp short 0x962
shr ebx,1
cmp esi,ebx
jc 0x933
mov ebx,edi
sub edi,byte +0x10
mov [edi+0x8],esi
jmp short 0x962
mov eax,esi
call dword 0x96c
mov ebx,eax
test ebx,ebx
jz 0x962
cmp esi,0x40a2c
jna 0x950
mov eax,edi
sub eax,byte +0x10
mov [eax+0x8],esi
mov edx,ebx
mov eax,edi
mov ecx,esi
call dword 0x530
mov eax,edi
call dword 0xcf0
mov eax,ebx
add esp,byte +0x20
pop ebp
pop edi
pop esi
pop ebx
ret
lea edx,[eax+0x3]
shr edx,byte 0x3
cmp eax,0xa2c
push ebx
mov cl,[dword 0x469049]
ja dword 0xbcc
test cl,cl
movzx eax,byte [edx+0x4695bc]
lea ebx,[eax*8+0x46703c]
jnz 0x9ec
mov edx,[ebx+0x4]
mov eax,[edx+0x8]
mov ecx,0xfffffff8
cmp edx,ebx
jz 0x9bc
add dword [edx+0xc],byte +0x1
and ecx,[eax-0x4]
mov [edx+0x8],ecx
mov [eax-0x4],edx
jz 0x9dc
mov byte [ebx],0x0
pop ebx
ret
nop
nop
nop
mov edx,[ebx+0x10]
movzx ecx,word [ebx+0x2]
add ecx,eax
cmp eax,[ebx+0xc]
ja 0xa40
add dword [edx+0xc],byte +0x1
mov [ebx+0x8],ecx
mov byte [ebx],0x0
mov [eax-0x4],edx
pop ebx
ret
nop
nop
nop
mov ecx,[edx+0x4]
mov [ecx+0x14],ebx
mov [ebx+0x4],ecx
mov byte [ebx],0x0
pop ebx
ret
nop
nop
mov eax,0x100
lock cmpxchg [ebx],ah
jz 0x996
add ebx,byte +0x20
mov eax,0x100
lock cmpxchg [ebx],ah
jz 0x996
add ebx,byte +0x20
mov eax,0x100
lock cmpxchg [ebx],ah
jz 0x996
sub ebx,byte +0x40
pause
cmp byte [dword 0x4695b1],0x0
jnz 0x9ec
push byte +0x0
call dword 0x350
mov eax,0x100
lock cmpxchg [ebx],ah
jz dword 0x996
push byte +0xa
call dword 0x350
jmp short 0x9ec
push esi
push edi
cmp byte [dword 0x469049],0x0
jz 0xa84
mov eax,0x100
lock cmpxchg [dword 0x469714],ah
jz 0xa84
pause
cmp byte [dword 0x4695b1],0x0
jnz 0xa4b
push byte +0x0
call dword 0x350
mov eax,0x100
lock cmpxchg [dword 0x469714],ah
jz 0xa84
push byte +0xa
call dword 0x350
jmp short 0xa4b
movsx esi,byte [ebx+0x1]
and esi,[dword 0x469720]
jz 0xb00
bsf eax,esi
lea esi,[eax*8+0x0]
mov ecx,[eax*4+0x469724]
bsf ecx,ecx
lea ecx,[ecx+esi*4]
lea edi,[ecx*8+0x4697a4]
mov esi,[edi+0x4]
mov edx,[esi+0x4]
mov [edi+0x4],edx
mov [edx],edi
cmp edi,edx
jnz 0xad4
mov edx,0xfffffffe
rol edx,cl
and [eax*4+0x469724],edx
jnz 0xad4
btr [dword 0x469720],eax
mov edi,0xfffffff0
and edi,[esi-0x4]
cmp edi,0x10a60
jc 0xb50
mov edx,edi
movzx edi,word [ebx+0x1a]
sub edx,edi
lea eax,[edi+esi]
lea ecx,[edx+0x3]
mov [eax-0x4],ecx
mov [edx+eax-0x8],edx
call dword 0x58c
jmp short 0xb55
movzx ecx,word [ebx+0x18]
mov edi,[dword 0x46971c]
cmp edi,ecx
jc 0xb34
mov esi,[dword 0x469718]
movzx ecx,word [ebx+0x1a]
lea edx,[ecx+0xb30]
cmp edi,edx
jc 0xb24
mov edi,ecx
sub esi,edi
sub [dword 0x46971c],edi
mov [dword 0x469718],esi
jmp short 0xb55
movzx eax,word [ebx+0x1a]
mov edi,eax
call dword 0x658
mov esi,eax
test eax,eax
jnz 0xb55
mov [0x469714],al
mov [ebx],al
pop edi
pop esi
pop ebx
ret
and byte [edi+esi-0x4],0xf7
lea ecx,[edi+0x6]
mov [esi-0x4],ecx
xor eax,eax
mov [0x469714],al
mov [esi],ebx
mov [esi+0x8],eax
mov dword [esi+0xc],0x1
mov [ebx+0x10],esi
lea eax,[esi+0x20]
movzx ecx,word [ebx+0x2]
lea edx,[ecx+eax]
mov [ebx+0x8],edx
add edi,esi
sub edi,ecx
mov [ebx+0xc],edi
mov byte [ebx],0x0
mov [eax-0x4],esi
pop edi
pop esi
pop ebx
ret
nop
mov eax,0x100
lock cmpxchg [dword 0x469714],ah
jz 0xbea
pause
cmp byte [dword 0x4695b1],0x0
jnz 0xb90
push byte +0x0
call dword 0x350
mov eax,0x100
lock cmpxchg [dword 0x469714],ah
jz 0xbea
push byte +0xa
call dword 0x350
jmp short 0xb90
nop
nop
nop
cmp eax,0x40a2c
ja dword 0xce4
lea ebx,[eax+0xd3]
and ebx,0xffffff00
add ebx,byte +0x30
test cl,cl
jnz 0xb90
lea edx,[ebx-0xb30]
mov ecx,edx
shr edx,byte 0xd
shr ecx,byte 0x8
mov eax,0xffffffff
shl eax,cl
and eax,[edx*4+0x469724]
jz 0xc14
and ecx,byte -0x20
bsf eax,eax
or ecx,eax
jmp short 0xc70
nop
nop
mov eax,0xfffffffe
mov ecx,edx
shl eax,cl
and eax,[dword 0x469720]
jz 0xc3c
bsf edx,eax
mov eax,[edx*4+0x469724]
bsf ecx,eax
mov eax,edx
shl eax,byte 0x5
or ecx,eax
jmp short 0xc70
nop
mov ecx,[dword 0x46971c]
sub ecx,ebx
jc 0xc60
mov eax,[0x469718]
sub eax,ebx
mov [0x469718],eax
mov [dword 0x46971c],ecx
or ebx,byte +0x2
mov [eax-0x4],ebx
jmp short 0xc67
mov eax,ebx
call dword 0x658
mov byte [dword 0x469714],0x0
pop ebx
ret
push esi
push edi
lea edi,[ecx*8+0x4697a4]
mov esi,[edi+0x4]
mov eax,[esi+0x4]
mov [edi+0x4],eax
mov [eax],edi
cmp edi,eax
jnz 0xc9f
mov eax,0xfffffffe
rol eax,cl
and [edx*4+0x469724],eax
jnz 0xc9f
btr [dword 0x469720],edx
mov edi,0xfffffff0
and edi,[esi-0x4]
mov edx,edi
sub edx,ebx
jz 0xccc
lea eax,[ebx+esi]
lea ecx,[edx+0x3]
mov [eax-0x4],ecx
mov [edx+eax-0x8],edx
cmp edx,0xb30
jc 0xcd1
call dword 0x58c
jmp short 0xcd1
nop
nop
nop
and byte [edi+esi-0x4],0xf7
lea ecx,[ebx+0x2]
mov [esi-0x4],ecx
mov byte [dword 0x469714],0x0
mov eax,esi
pop edi
pop esi
pop ebx
ret
pop ebx
test eax,eax
jns dword 0x718
xor eax,eax
ret
mov edx,[eax-0x4]
test dl,0x7
mov ecx,eax
push ebx
mov bl,[dword 0x469049]
jnz dword 0xde8
test bl,bl
mov ebx,[edx]
jnz 0xd6c
sub dword [edx+0xc],byte +0x1
mov eax,[edx+0x8]
jz 0xd40
test eax,eax
mov [edx+0x8],ecx
lea eax,[eax+0x1]
mov [ecx-0x4],eax
jz 0xd28
xor eax,eax
mov [ebx],al
pop ebx
ret
nop
mov ecx,[ebx+0x4]
mov [edx+0x14],ebx
mov [edx+0x4],ecx
mov [ecx+0x14],edx
mov [ebx+0x4],edx
mov byte [ebx],0x0
xor eax,eax
pop ebx
ret
nop
nop
test eax,eax
jz 0xd57
mov eax,[edx+0x14]
mov ecx,[edx+0x4]
mov [eax+0x4],ecx
mov [ecx+0x14],eax
xor eax,eax
cmp [ebx+0x10],edx
jnz 0xd5a
mov [ebx+0xc],eax
mov [ebx],al
mov eax,edx
mov edx,[edx-0x4]
mov bl,[dword 0x469049]
jmp dword 0xdf1
mov eax,0x100
lock cmpxchg [ebx],ah
jz 0xd0b
pause
cmp byte [dword 0x4695b1],0x0
jnz 0xd6c
push ecx
push edx
push byte +0x0
call dword 0x350
pop edx
pop ecx
mov eax,0x100
lock cmpxchg [ebx],ah
jz dword 0xd0b
push ecx
push edx
push byte +0xa
call dword 0x350
pop edx
pop ecx
jmp short 0xd6c
nop
nop
nop
mov eax,0x100
lock cmpxchg [dword 0x469714],ah
jz 0xdfd
pause
cmp byte [dword 0x4695b1],0x0
jnz 0xdac
push byte +0x0
call dword 0x350
mov eax,0x100
lock cmpxchg [dword 0x469714],ah
jz 0xdfd
push byte +0xa
call dword 0x350
jmp short 0xdac
nop
nop
nop
test dl,0x5
jnz dword 0xed8
and edx,byte -0x10
test bl,bl
mov ebx,edx
push esi
mov esi,eax
jnz 0xdac
test dword [ebx+esi-0x4],0x1
mov ecx,[ebx+esi-0x4]
jnz 0xe40
or ecx,byte +0x8
mov [ebx+esi-0x4],ecx
test byte [esi-0x4],0x8
jnz 0xe58
cmp ebx,0x13ffe0
jz 0xe70
lea eax,[ebx+0x3]
mov [esi-0x4],eax
mov [ebx+esi-0x8],ebx
mov eax,esi
mov edx,ebx
call dword 0x58c
mov byte [dword 0x469714],0x0
xor eax,eax
pop esi
pop ebx
ret
nop
lea eax,[ebx+esi]
and ecx,byte -0x10
add ebx,ecx
cmp ecx,0xb30
jc 0xe12
call dword 0x54c
jmp short 0xe12
nop
mov ecx,[esi-0x8]
sub esi,ecx
add ebx,ecx
cmp ecx,0xb30
jc 0xe18
mov eax,esi
call dword 0x54c
jmp short 0xe18
cmp dword [dword 0x46971c],0x13ffe0

jnz 0xea8
sub esi,byte +0x10
mov eax,[esi]
mov edx,[esi+0x4]
mov [eax+0x4],edx
mov [edx],eax
mov byte [dword 0x469714],0x0
push dword 0x8000
push byte +0x0
push esi
call dword 0x348
cmp eax,byte +0x1
sbb eax,eax
pop esi
pop ebx
ret
nop
nop
nop
lea ebx,[esi+0x13ffe0]
call dword 0x5ec
mov dword [ebx-0x4],0x2
mov dword [dword 0x46971c],0x13ffe0

mov [dword 0x469718],ebx
mov byte [dword 0x469714],0x0
xor eax,eax
pop esi
pop ebx
ret
nop
nop
pop ebx
test dl,0x3
jz dword 0x77c
mov eax,0xffffffff
ret
mov ecx,[eax-0x4]
test cl,0x7
push ebx
push esi
mov esi,eax
jnz dword 0xf80
mov ebx,[ecx]
movzx ecx,word [ebx+0x2]
sub ecx,byte +0x4
cmp ecx,edx
jc 0xf3c
lea ebx,[edx*4+0x40]
cmp ebx,ecx
jc 0xf14
pop esi
pop ebx
ret
nop
mov ebx,edx
mov eax,edx
call dword 0x96c
test eax,eax
jz 0xf37
mov ecx,ebx
mov edx,eax
mov ebx,eax
mov eax,esi
call dword 0x530
mov eax,esi
call dword 0xcf0
mov eax,ebx
pop esi
pop ebx
ret
nop
nop
lea ecx,[ecx+ecx+0x20]
push edi
mov edi,edx
xor eax,eax
sub ecx,edx
adc eax,byte -0x1
and eax,ecx
add eax,edx
call dword 0x96c
test eax,eax
jz 0xf7b
cmp edi,0x40a2c
jna 0xf62
mov [eax-0x8],edi
movzx ecx,word [ebx+0x2]
sub ecx,byte +0x4
mov edx,eax
mov edi,eax
mov eax,esi
call dword [ebx+0x1c]
mov eax,esi
call dword 0xcf0
mov eax,edi
pop edi
pop esi
pop ebx
ret
nop
test cl,0x5
jnz dword 0x11f0
mov ebx,ecx
and ecx,byte -0x10
push edi
lea edi,[ecx+eax]
sub ecx,byte +0x4
and ebx,byte +0xf
cmp edx,ecx
push ebp
ja dword 0x10b0
lea ebp,[edx+edx]
cmp ebp,ecx
jc 0xfb0
pop ebp
pop edi
pop esi
pop ebx
ret
nop
nop
nop
cmp edx,0xb2c
jnc 0xfcd
cmp edx,0x2cc
jc dword 0x1088
mov edx,0xb2c
cmp ecx,edx
jna 0xfa8
lea ebp,[edx+0xd3]
and ebp,0xffffff00
add ebp,byte +0x30
add ecx,byte +0x4
sub ecx,ebp
cmp byte [dword 0x469049],0x0
jz 0x1030
mov eax,0x100
lock cmpxchg [dword 0x469714],ah
jz 0x1028
pause
cmp byte [dword 0x4695b1],0x0
jnz 0xfea
push ecx
push byte +0x0
call dword 0x350
pop ecx
mov eax,0x100
lock cmpxchg [dword 0x469714],ah
jz 0x1028
push ecx
push byte +0xa
call dword 0x350
pop ecx
jmp short 0xfea
nop
mov ebx,0xf
and ebx,[esi-0x4]
or ebx,ebp
mov [esi-0x4],ebx
mov ebx,ecx
mov edx,[edi-0x4]
test dl,0x1
jnz 0x1048
or edx,byte +0x8
mov [edi-0x4],edx
jmp short 0x105e
nop
mov eax,edi
and edx,byte -0x10
add ebx,edx
add edi,edx
cmp edx,0xb30
jc 0x105e
call dword 0x54c
mov [edi-0x8],ebx
lea eax,[ebx+0x3]
mov [esi+ebp-0x4],eax
cmp ebx,0xb30
jc 0x107a
lea eax,[esi+ebp]
mov edx,ebx
call dword 0x58c
mov byte [dword 0x469714],0x0
mov eax,esi
pop ebp
pop edi
pop esi
pop ebx
ret
mov edi,edx
mov eax,edx
call dword 0x96c
test eax,eax
jz 0x10ab
mov ebp,eax
mov edx,eax
mov eax,esi
mov ecx,edi
call dword 0x530
mov eax,esi
call dword 0xcf0
mov eax,ebp
pop ebp
pop edi
pop esi
pop ebx
ret
mov eax,[edi-0x4]
test al,0x1
jz dword 0x11a8
and eax,byte -0x10
lea ebp,[ecx+eax]
cmp edx,ebp
ja dword 0x11a8
cmp byte [dword 0x469049],0x0
jz 0x112d
mov eax,0x100
lock cmpxchg [dword 0x469714],ah
jz 0x1114
pause
cmp byte [dword 0x4695b1],0x0
jnz 0x10d2
push ecx
push edx
push byte +0x0
call dword 0x350
pop edx
pop ecx
mov eax,0x100
lock cmpxchg [dword 0x469714],ah
jz 0x1114
push ecx
push edx
push byte +0xa
call dword 0x350
pop edx
pop ecx
jmp short 0x10d2
nop
mov ebx,0xf
and ebx,[esi-0x4]
mov eax,[edi-0x4]
test al,0x1
jz 0x11a1
and eax,byte -0x10
lea ebp,[ecx+eax]
cmp edx,ebp
ja 0x11a1
cmp eax,0xb30
jc 0x113f
mov eax,edi
push ecx
push edx
call dword 0x54c
pop edx
pop ecx
mov eax,ecx
shr eax,byte 0x2
add eax,ecx
xor edi,edi
sub eax,edx
adc edi,byte -0x1
and eax,edi
lea eax,[edx+eax+0xd3]
and eax,0xffffff00
add eax,byte +0x30
lea edx,[ebp+0x4]
sub edx,eax
ja 0x1170
and dword [esi+ebp],byte -0x9
add ebp,byte +0x4
jmp short 0x118c
nop
nop
mov [esi+ebp-0x4],edx
lea edi,[edx+0x3]
mov [eax+esi-0x4],edi
mov ebp,eax
cmp edx,0xb30
jc 0x118c
add eax,esi
call dword 0x58c
or ebp,ebx
mov [esi-0x4],ebp
mov byte [dword 0x469714],0x0
mov eax,esi
pop ebp
pop edi
pop esi
pop ebx
ret
nop
nop
mov byte [dword 0x469714],0x0
mov eax,ecx
shr eax,byte 0x2
add eax,ecx
xor edi,edi
sub eax,edx
adc edi,byte -0x1
and eax,edi
add eax,edx
mov ebp,eax
mov edi,ecx
push edx
call dword 0x96c
pop edx
test eax,eax
jz 0x119a
cmp ebp,0x40a2c
jna 0x11d4
mov [eax-0x8],edx
mov ebp,eax
mov edx,eax
mov eax,esi
mov ecx,edi
call dword 0x500
mov eax,esi
call dword 0xcf0
mov eax,ebp
pop ebp
pop edi
pop esi
pop ebx
ret
nop
pop esi
pop ebx
test cl,0x3
jz dword 0x820
xor eax,eax
ret
mov eax,eax
push ebx
lea ebx,[eax-0x1]
and ebx,byte -0x4
call dword 0x96c
cmp eax,byte +0x1
sbb ecx,ecx
lea edx,[ebx+eax]
or ebx,ecx
cmp ebx,0x40a2c
jnc 0x122e
neg ebx
fldz
fst qword [ebx+edx]
add ebx,byte +0x8
js 0x1222
mov [edx],ecx
ffree st0
pop ebx
ret
mov ecx,eax
mov edx,ecx
sub edx,byte +0x4
mov edx,[edx]
and edx,byte -0x10
add edx,ecx
mov eax,edx
mov edx,eax
sub edx,byte +0x4
mov edx,[edx]
and edx,byte -0x10
test edx,edx
jnz 0x1250
xor eax,eax
ret
lea eax,[eax+0x0]
cmp dword [dword 0x46971c],byte +0x0
jz 0x1277
mov edx,[dword 0x469718]
cmp edx,eax
jc 0x1277
mov edx,eax
add edx,0x13fff0
cmp edx,[dword 0x469718]
jnc 0x127b
add eax,byte +0x10
ret
cmp dword [dword 0x46971c],0x13ffe0

jz 0x128e
mov eax,[0x469718]
jmp short 0x1290
xor eax,eax
ret
lea eax,[eax+0x0]
push ebx
push esi
mov ebx,eax
add ebx,byte +0x20
mov [edx],ebx
mov edx,[eax]
cmp eax,[edx+0x10]
jnz 0x12ac
mov ebx,[edx+0x8]
cmp ebx,[edx+0xc]
jna 0x12c5
mov esi,eax
mov ebx,esi
sub ebx,byte +0x4
mov ebx,[ebx]
and ebx,byte -0x10
add ebx,esi
movzx eax,word [edx+0x2]
sub ebx,eax
mov [ecx],ebx
pop esi
pop ebx
ret
mov eax,[edx+0x8]
dec eax
mov [ecx],eax
pop esi
pop ebx
ret
mov eax,eax
push edi
mov edi,edx
add eax,byte +0x1
mov edx,0x89705f41
mul edx
shr eax,byte 0x1e
mov ecx,edx
and edx,0x1fffffff
shr ecx,byte 0x1d
lea edx,[edx+edx*4]
add edx,eax
mov eax,ecx
or eax,byte +0x30
mov [edi],al
mov eax,edx
cmp ecx,byte +0x1
sbb edi,byte -0x1
shr eax,byte 0x1c
and edx,0xfffffff
or ecx,eax
or eax,byte +0x30
mov [edi],al
lea eax,[edx+edx*4]
lea edx,[edx+edx*4]
cmp ecx,byte +0x1
sbb edi,byte -0x1
shr eax,byte 0x1b
and edx,0x7ffffff
or ecx,eax
or eax,byte +0x30
mov [edi],al
lea eax,[edx+edx*4]
lea edx,[edx+edx*4]
cmp ecx,byte +0x1
sbb edi,byte -0x1
shr eax,byte 0x1a
and edx,0x3ffffff
or ecx,eax
or eax,byte +0x30
mov [edi],al
lea eax,[edx+edx*4]
lea edx,[edx+edx*4]
cmp ecx,byte +0x1
sbb edi,byte -0x1
shr eax,byte 0x19
and edx,0x1ffffff
or ecx,eax
or eax,byte +0x30
mov [edi],al
lea eax,[edx+edx*4]
lea edx,[edx+edx*4]
cmp ecx,byte +0x1
sbb edi,byte -0x1
shr eax,byte 0x18
and edx,0xffffff
or ecx,eax
or eax,byte +0x30
mov [edi],al
lea eax,[edx+edx*4]
lea edx,[edx+edx*4]
cmp ecx,byte +0x1
sbb edi,byte -0x1
shr eax,byte 0x17
and edx,0x7fffff
or ecx,eax
or eax,byte +0x30
mov [edi],al
lea eax,[edx+edx*4]
lea edx,[edx+edx*4]
cmp ecx,byte +0x1
sbb edi,byte -0x1
shr eax,byte 0x16
and edx,0x3fffff
or ecx,eax
or eax,byte +0x30
mov [edi],al
lea eax,[edx+edx*4]
lea edx,[edx+edx*4]
cmp ecx,byte +0x1
sbb edi,byte -0x1
shr eax,byte 0x15
and edx,0x1fffff
or ecx,eax
or eax,byte +0x30
mov [edi],al
lea eax,[edx+edx*4]
cmp ecx,byte +0x1
sbb edi,byte -0x1
shr eax,byte 0x14
or eax,byte +0x30
mov [edi],al
lea eax,[edi+0x1]
pop edi
ret
lea eax,[eax+0x0]
push ebx
push esi
mov esi,ecx
mov ebx,edx
mov edx,ebx
mov ecx,esi
call dword 0x2050
mov eax,ebx
add eax,esi
pop esi
pop ebx
ret
mov eax,eax
push ebp
mov ebp,esp
push ebx
mov edx,eax
cmp edx,0xffff
jna 0x147a
test dl,0x3
jnz 0x147a
mov edx,[ebp+0x8]
mov edx,[edx-0x1c]
mov ecx,eax
cmp edx,ecx
ja 0x1433
mov ebx,[ebp+0x8]
mov ebx,[ebp+0x8]
add edx,[ebx-0x10]
add ecx,byte +0x4
cmp edx,ecx
jnc 0x144a
mov edx,[ebp+0x8]
xor ecx,ecx
mov [edx-0x10],ecx
push byte +0x1c
mov edx,[ebp+0x8]
add edx,byte -0x1c
push edx
push eax
call dword 0x2e4
mov eax,[ebp+0x8]
cmp dword [eax-0x10],byte +0x4
jc 0x1471
mov eax,[ebp+0x8]
cmp dword [eax-0xc],0x1000
jnz 0x1471
mov eax,[ebp+0x8]
test byte [eax-0x8],0xf6
jz 0x1471
mov eax,[ebp+0x8]
test byte [eax-0x7],0x1
jz 0x1475
xor eax,eax
jmp short 0x147c
mov al,0x1
pop ebx
pop ebp
ret
xor eax,eax
pop ebx
pop ebp
ret
nop
push ebp
mov ebp,esp
push ebx
push esi
push edi
mov edi,edx
mov ebx,eax
cmp edi,0x3e8
jnl 0x14f7
mov eax,[ebp+0x8]
push eax
mov eax,ebx
add eax,byte -0x4c
call dword 0x1404
pop ecx
test al,al
jz 0x14f7
mov eax,[ebp+0x8]
push eax
mov eax,ebx
add eax,byte -0x24
call dword 0x1404
pop ecx
test al,al
jz 0x14f7
mov eax,ebx
add eax,byte -0x24
mov esi,[eax]
mov eax,ebx
add eax,byte -0x4c
cmp ebx,[eax]
jnz 0x14ef
test esi,esi
jz 0x14f3
mov eax,[ebp+0x8]
push eax
mov eax,esi
call dword 0x1404
pop ecx
test al,al
jz 0x14ef
mov eax,[ebp+0x8]
push eax
lea edx,[edi+0x1]
mov eax,[esi]
call dword 0x1480
pop ecx
test al,al
jnz 0x14f3
xor eax,eax
jmp short 0x14f9
mov al,0x1
jmp short 0x14f9
xor eax,eax
pop edi
pop esi
pop ebx
pop ebp
ret
mov eax,eax
push ebp
mov ebp,esp
add esp,byte -0x1c
push ebx
mov ebx,[eax]
xor eax,eax
mov [ebp-0x10],eax
push ebp
xor edx,edx
mov eax,ebx
call dword 0x1480
pop ecx
test al,al
jnz 0x151f
xor ebx,ebx
mov eax,ebx
pop ebx
mov esp,ebp
pop ebp
ret
mov eax,eax
cmp byte [dword 0x469049],0x0
jz 0x156e
jmp short 0x155c
cmp byte [dword 0x4695b1],0x0
jnz 0x155c
push byte +0x0
call dword 0x350
mov ecx,0x46b7bc
mov dl,0x1
xor eax,eax
call dword 0x3c0
test al,al
jz 0x156e
push byte +0xa
call dword 0x350
mov ecx,0x46b7bc
mov dl,0x1
xor eax,eax
call dword 0x3c0
test al,al
jnz 0x1533
cmp dword [dword 0x46b7b8],byte +0x0
jnz 0x158f
push byte +0x4
push dword 0x1000
push dword 0x10000
push byte +0x0
call dword 0x340
mov [0x46b7b8],eax
cmp dword [dword 0x46b7b8],byte +0x0
setnz al
ret
mov eax,eax
push ebx
mov ebx,eax
call dword 0x1528
test al,al
jz 0x15d1
mov eax,[0x46b7b8]
cmp dword [eax],0x3ffe
jnl 0x15d1
mov eax,[0x46b7b8]
mov eax,[eax]
mov edx,[dword 0x46b7b8]
mov [edx+eax*4+0x4],ebx
mov eax,[0x46b7b8]
inc dword [eax]
mov al,0x1
jmp short 0x15d3
xor eax,eax
mov byte [dword 0x46b7bc],0x0
pop ebx
ret
push ebx
push esi
push edi
mov esi,eax
mov edi,0x46b7b8
xor ebx,ebx
cmp dword [edi],byte +0x0
jz 0x162c
call dword 0x1528
test al,al
jz 0x162c
mov eax,[edi]
mov edx,[eax]
dec edx
test edx,edx
jl 0x1625
inc edx
xor eax,eax
mov ecx,[edi]
cmp esi,[ecx+eax*4+0x4]
jnz 0x1621
mov edx,[edi]
mov edx,[edx]
mov ecx,[edi]
mov edx,[ecx+edx*4]
mov ecx,[edi]
mov [ecx+eax*4+0x4],edx
mov edx,[edi]
dec dword [edx]
mov bl,0x1
jmp short 0x1625
inc eax
dec edx
jnz 0x1602
mov byte [dword 0x46b7bc],0x0
mov eax,ebx
pop edi
pop esi
pop ebx
ret
mov eax,eax
push ebp
mov ebp,esp
add esp,byte -0x20
push ebx
push esi
push edi
mov [ebp-0x4],eax
mov eax,[ebp-0x4]
mov eax,[eax]
sub eax,0x46703c
shr eax,byte 0x5
shl eax,byte 0x8
mov edx,[ebp+0x8]
lea esi,[edx+eax*8-0x1b800]
lea ecx,[ebp-0x1c]
lea edx,[ebp-0x18]
mov eax,[ebp-0x4]
call dword 0x1294
jmp dword 0x176b
mov eax,[ebp-0x18]
sub eax,byte +0x4
test byte [eax],0x1
jnz dword 0x175f
mov eax,[ebp-0x18]
call dword 0x15dc
test al,al
jnz dword 0x175f
mov eax,[ebp+0x8]
mov byte [eax-0x1b801],0x0
xor ebx,ebx
mov eax,[ebp-0x18]
call dword 0x1500
mov edi,eax
test edi,edi
jnz dword 0x1733
mov eax,[ebp-0x18]
cmp dword [eax],0x100
jnc dword 0x175b
mov eax,[ebp-0x18]
add eax,byte +0x4
mov eax,[eax]
mov [ebp-0xc],eax
cmp dword [ebp-0xc],byte +0x0
jng dword 0x175b
mov eax,[ebp-0x4]
mov eax,[eax]
movzx eax,word [eax+0x2]
sub eax,byte +0xd
cmp eax,[ebp-0xc]
jl 0x175b
mov eax,[ebp-0x18]
add eax,byte +0x8
mov [ebp-0x10],eax
mov byte [ebp-0x11],0x1
mov eax,[ebp-0xc]
test eax,eax
jng 0x171e
mov [ebp-0x20],eax
cmp byte [ebp-0x11],0x0
jz 0x170d
mov eax,[ebp-0x10]
cmp byte [eax],0x20
jc 0x170d
mov eax,[ebp-0x10]
cmp byte [eax],0x80
jc 0x1711
xor eax,eax
jmp short 0x1713
mov al,0x1
mov [ebp-0x11],al
inc dword [ebp-0x10]
dec dword [ebp-0x20]
jnz 0x16f7
cmp byte [ebp-0x11],0x0
jz 0x175b
mov eax,[ebp-0x10]
cmp byte [eax],0x0
jnz 0x175b
mov ebx,0x1
jmp short 0x175b
mov ebx,0x2
cmp edi,[esi+ebx*8]
jz 0x174c
cmp dword [esi+ebx*8],byte +0x0
jz 0x174c
inc ebx
cmp ebx,0xff
jng 0x1738
cmp ebx,0xff
jg 0x1759
mov [esi+ebx*8],edi
jmp short 0x175b
xor ebx,ebx
inc dword [esi+ebx*8+0x4]
mov eax,[ebp-0x4]
mov eax,[eax]
movzx eax,word [eax+0x2]
add [ebp-0x18],eax
mov eax,[ebp-0x18]
cmp eax,[ebp-0x1c]
jna dword 0x166e
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret
mov eax,eax
push ebp
mov ebp,esp
push eax
mov eax,0x27
add esp,0xfffff004
push eax
dec eax
jnz 0x1789
mov eax,[ebp-0x4]
add esp,0xfffff6dc
push ebx
push esi
push edi
lea eax,[ebp-0x1b800]
xor ecx,ecx
mov edx,0x1b800
call dword 0x252c
lea eax,[ebp-0x1f828]
xor ecx,ecx
mov edx,0x4000
call dword 0x252c
xor eax,eax
mov [ebp-0x1b808],eax
mov byte [ebp-0x1b801],0x1
mov edi,[dword 0x469708]
jmp dword 0x185f
mov eax,edi
call dword 0x1254
mov ebx,eax
test ebx,ebx
jz 0x185c
mov eax,ebx
sub eax,byte +0x4
mov esi,[eax]
test esi,0x1
jnz 0x184f
test esi,0x4
jz 0x180c
push ebp
mov eax,ebx
call dword 0x1634
pop ecx
jmp short 0x184f
cmp dword [ebp-0x1b808],0x1000

jnl 0x184f
and esi,byte -0x10
sub esi,byte +0x4
mov [ebp-0x1b814],esi
mov eax,ebx
call dword 0x15dc
test al,al
jnz 0x184f
mov byte [ebp-0x1b801],0x0
mov eax,[ebp-0x1b808]
mov edx,[ebp-0x1b814]
mov [ebp+eax*4-0x1f828],edx
inc dword [ebp-0x1b808]
mov eax,ebx
call dword 0x1230
mov ebx,eax
test ebx,ebx
jnz 0x17ea
mov edi,[edi+0x4]
cmp edi,0x469704
jnz dword 0x17dd
mov ebx,[dword 0x46b7ac]
jmp short 0x18aa
mov eax,ebx
add eax,byte +0x10
call dword 0x15dc
test al,al
jnz 0x18a7
mov byte [ebp-0x1b801],0x0
mov esi,[ebx+0xc]
and esi,byte -0x10
sub esi,byte +0x4
sub esi,byte +0x10
mov eax,[ebp-0x1b808]
mov [ebp+eax*4-0x1f828],esi
inc dword [ebp-0x1b808]
mov ebx,[ebx+0x4]
cmp ebx,0x46b7a8
jz 0x18be
cmp dword [ebp-0x1b808],0x1000

jl 0x1873
cmp byte [ebp-0x1b801],0x0
jnz dword 0x1b23
mov byte [ebp-0x1b809],0x0
xor eax,eax
mov [ebp-0x1b818],eax
lea edx,[ebp-0x27828]
mov eax,0x402b2c
mov ecx,0x28
call dword 0x13ec
mov ebx,eax
mov dword [ebp-0x1b810],0x37

mov dword [ebp-0x1b824],0x46703e

lea eax,[ebp-0x1b004]
mov [ebp-0x1b828],eax
mov eax,[ebp-0x1b824]
movzx eax,word [eax]
sub eax,byte +0x4
mov [ebp-0x1b81c],eax
mov byte [ebp-0x1b80a],0x0
mov edi,0xff
mov eax,[ebp-0x1b828]
mov esi,eax
lea eax,[ebp-0x20029]
cmp ebx,eax
ja dword 0x1a4e
cmp dword [esi],byte +0x0
jna dword 0x1a41
cmp byte [ebp-0x1b809],0x0
jnz 0x1971
mov eax,0x402b58
mov ecx,0x27
mov edx,ebx
call dword 0x13ec
mov ebx,eax
mov byte [ebp-0x1b809],0x1
cmp byte [ebp-0x1b80a],0x0
jnz 0x19c9
mov byte [ebx],0xd
inc ebx
mov byte [ebx],0xa
inc ebx
mov eax,[ebp-0x1b818]
inc eax
mov edx,ebx
call dword 0x12d0
mov ebx,eax
mov byte [ebx],0x20
inc ebx
mov byte [ebx],0x2d
inc ebx
mov byte [ebx],0x20
inc ebx
mov edx,ebx
mov eax,[ebp-0x1b81c]
call dword 0x12d0
mov ebx,eax
mov eax,0x402b80
mov ecx,0x8
mov edx,ebx
call dword 0x13ec
mov ebx,eax
mov byte [ebp-0x1b80a],0x1
jmp short 0x19d1
mov byte [ebx],0x2c
inc ebx
mov byte [ebx],0x20
inc ebx
mov eax,edi
sub eax,byte +0x1
jc 0x19dc
jz 0x19f1
jmp short 0x1a06
mov eax,0x402b8c
mov ecx,0x7
mov edx,ebx
call dword 0x13ec
mov ebx,eax
jmp short 0x1a2a
mov eax,0x402b94
mov ecx,0x6
mov edx,ebx
call dword 0x13ec
mov ebx,eax
jmp short 0x1a2a
lea edx,[ebp-0x27928]
mov eax,[esi-0x4]
call dword 0x2ad0
movzx ecx,byte [ebp-0x27928]
lea eax,[ebp-0x27927]
mov edx,ebx
call dword 0x13ec
mov ebx,eax
mov byte [ebx],0x20
inc ebx
mov byte [ebx],0x78
inc ebx
mov byte [ebx],0x20
inc ebx
mov eax,[esi]
mov edx,ebx
call dword 0x12d0
mov ebx,eax
dec edi
sub esi,byte +0x8
cmp edi,byte -0x1
jnz dword 0x1937
mov eax,[ebp-0x1b81c]
mov [ebp-0x1b818],eax
add dword [ebp-0x1b828],0x800

add dword [ebp-0x1b824],byte +0x20
dec dword [ebp-0x1b810]
jnz dword 0x1911
cmp dword [ebp-0x1b808],byte +0x0
jng 0x1afa
cmp byte [ebp-0x1b809],0x0
jz 0x1a99
mov byte [ebx],0xd
inc ebx
mov byte [ebx],0xa
inc ebx
mov byte [ebx],0xd
inc ebx
mov byte [ebx],0xa
inc ebx
mov eax,0x402b9c
mov ecx,0x3c
mov edx,ebx
call dword 0x13ec
mov ebx,eax
mov edi,[ebp-0x1b808]
dec edi
test edi,edi
jc 0x1afa
inc edi
mov dword [ebp-0x1b820],0x0

lea esi,[ebp-0x1f828]
cmp dword [ebp-0x1b820],byte +0x0
jz 0x1ad9
mov byte [ebx],0x2c
inc ebx
mov byte [ebx],0x20
inc ebx
mov eax,[esi]
mov edx,ebx
call dword 0x12d0
mov ebx,eax
lea eax,[ebp-0x20029]
cmp ebx,eax
ja 0x1afa
inc dword [ebp-0x1b820]
add esi,byte +0x4
dec edi
jnz 0x1ac8
mov eax,0x402bdc
mov ecx,0x3
mov edx,ebx
call dword 0x13ec
push dword 0x2010
push dword 0x402be0
lea eax,[ebp-0x27828]
push eax
push byte +0x0
call dword 0x244
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret
add [eax],al
inc ecx
outsb
and [ebp+0x6e],dh
gs js 0x1ba4
arpl [gs:ebp+0x64],si
and [ebp+0x65],ch
insd
outsd
jc 0x1bb9
and [ebp+0x61],ch
imul esp,[eax],byte +0x68
popad
jnc 0x1b6a
outsd
arpl [ebx+0x75],sp
jc 0x1bc2
and [cs:eax],al
add [eax],al
add [eax+ebp*2+0x65],dl
and [ebp+0x6e],dh
gs js 0x1bd1
arpl [gs:ebp+0x64],si
and [ebx+0x6d],dh
popad
insb
insb
and [edx+0x6c],ah
outsd
arpl [ebx+0x20],bp
insb
gs popad
imul esi,[ebx+0x20],byte +0x61
jc 0x1be1
cmp cl,[dword 0x6220000a]
jns 0x1bf8
gs jnc 0x1bc1
and [eax],al
add [eax],al
add [ebp+0x6e],dl
imul ebp,[esi+0x6f],byte +0x77
outsb
add [ebx+0x74],dl
jc 0x1c01
outsb
add [bx+si],al
push esp
push dword 0x69732065
jpe 0x1c09
jnc 0x1bc6
outsd
o16 and [ebp+0x6e],dh
gs js 0x1c1e
arpl [gs:ebp+0x64],si
and [ebp+0x61],ch
imul esp,[ebp+0x64],byte +0x20
insd
imul esi,[fs:ebp+0x6d],dword 0x646e6120

and [ecx+0x72],ch
and [gs:bp+si+0x6c],ah
outsd
arpl [ebx+0x73],bp
and [ecx+0x72],ah
cmp ah,[gs:eax]
add [eax],al
add [eax],al
or eax,0x5500000a
outsb
gs js 0x1c55
arpl [gs:ebp+0x64],si
and [ebp+0x65],cl
insd
outsd
jc 0x1c6a
and [ebp+0x61],cl
imul eax,[eax],byte +0x0
push esi
push edi
xor eax,eax
xor esi,esi
mov edx,0x46703e
cmp byte [dword 0x469702],0x0
jz 0x1c11
test byte [edx],0xf
jnz 0x1c2e
movzx edi,word [edx]
shr edi,byte 0x3
mov ecx,esi
add ecx,ecx
add ecx,ecx
cmp edi,eax
jna 0x1c2c
mov [eax+0x4695bc],cl
inc eax
cmp edi,eax
ja 0x1c21
mov eax,edi
inc esi
add edx,byte +0x20
cmp esi,byte +0x37
jnz 0x1c03
pop edi
pop esi
ret
mov eax,eax
push ebx
push esi
push edi
mov esi,0x37
mov ebx,0x467058
cmp dword [ebx],byte +0x0
jnz 0x1c54
mov dword [ebx],0x401500
lea eax,[ebx-0x1c]
mov [ebx-0x8],eax
lea eax,[ebx-0x1c]
mov [ebx-0x18],eax
xor eax,eax
mov [ebx-0x10],eax
mov dword [ebx-0x14],0x1
movzx eax,word [ebx-0x1a]
add eax,eax
add eax,eax
lea eax,[eax+eax*2]
add eax,0xef
and eax,0xffffff00
add eax,byte +0x30
cmp eax,0xb30
jnc 0x1c90
mov eax,0xb30
add eax,0x4d0
shr eax,byte 0xd
cmp eax,byte +0x7
jna 0x1ca2
mov eax,0x7
mov ecx,eax
mov dl,0xff
shl dl,cl
mov [ebx-0x1b],dl
shl eax,byte 0xd
add ax,0xb30
mov [ebx-0x4],ax
movzx edi,word [ebx-0x1a]
movzx eax,di
mov ecx,eax
shl ecx,byte 0x4
lea ecx,[ecx+ecx*2]
add ecx,0xef
and ecx,0xffffff00
add ecx,byte +0x30
cmp ecx,0x7330
jnc 0x1ce1
mov ecx,0x7330
cmp ecx,0xff30
jna 0x1cee
mov ecx,0xff30
mov eax,ecx
sub eax,byte +0x20
movzx edx,di
mov ecx,edx
xor edx,edx
div ecx
imul di
add ax,0xef
and ax,0xff00
add ax,byte +0x30
mov [ebx-0x2],ax
add ebx,byte +0x20
dec esi
jnz dword 0x1c49
call dword 0x1bf8
mov dword [dword 0x469704],0x469704

mov dword [dword 0x469708],0x469704

mov esi,0x400
mov edx,0x4697a4
mov eax,edx
mov [eax],eax
mov [eax+0x4],eax
add edx,byte +0x8
dec esi
jnz 0x1d3c
mov dword [dword 0x46b7a8],0x46b7a8

mov dword [dword 0x46b7ac],0x46b7a8

pop edi
pop esi
pop ebx
ret
lea eax,[eax+0x0]
push ebx
push esi
push edi
push ebp
mov ebx,0x469704
mov esi,0x46b7a8
mov edi,[ebx+0x4]
jmp short 0x1d89
mov ebp,[edi+0x4]
push dword 0x8000
push byte +0x0
push edi
call dword 0x348
mov edi,ebp
cmp edi,ebx
jnz 0x1d77
mov edx,0x37
mov eax,0x46703c
mov ecx,eax
mov [eax+0x14],ecx
mov ecx,eax
mov [eax+0x4],ecx
mov dword [eax+0x8],0x1
xor ecx,ecx
mov [eax+0xc],ecx
add eax,byte +0x20
dec edx
jnz 0x1d97
mov [ebx],ebx
mov [ebx+0x4],ebx
mov edx,0x400
mov ecx,0x4697a4
mov eax,ecx
mov [eax],eax
mov [eax+0x4],eax
add ecx,byte +0x8
dec edx
jnz 0x1dc2
mov ebx,[esi+0x4]
jmp short 0x1de6
mov edi,[ebx+0x4]
push dword 0x8000
push byte +0x0
push ebx
call dword 0x348
mov ebx,edi
cmp ebx,esi
jnz 0x1dd4
mov [esi],esi
mov [esi+0x4],esi
pop ebp
pop edi
pop esi
pop ebx
ret
cmp dword [dword 0x46b7c0],byte +0x0
jz 0x1e0f
mov eax,[0x46b7c0]
push eax
call dword 0x358
xor eax,eax
mov [0x46b7c0],eax
cmp byte [dword 0x4695b0],0x0
jz 0x1e1d
call dword 0x1780
cmp dword [dword 0x46b7b8],byte +0x0
jz 0x1e3f
push dword 0x8000
push byte +0x0
mov eax,[0x46b7b8]
push eax
call dword 0x348
xor eax,eax
mov [0x46b7b8],eax
call dword 0x1d64
ret
lea eax,[eax+0x0]
test eax,eax
jz 0x1e56
call dword [dword 0x467728]
test eax,eax
jz 0x1e58
rep ret
mov al,0x1
jmp dword 0x1fb0
ret
test eax,eax
jng 0x1e77
call dword [dword 0x46771c]
test eax,eax
jz 0x1e70
rep ret
mov al,0x1
jmp dword 0x1fb0
xor eax,eax
rep ret
nop
test eax,eax
jz 0x1e8a
call dword [dword 0x467720]
test eax,eax
jnz 0x1e8c
rep ret
mov al,0x2
jmp dword 0x1fb0
ret
mov ecx,[eax]
test ecx,ecx
jz 0x1ecc
test edx,edx
jz 0x1eb6
push eax
mov eax,ecx
call dword [dword 0x467724]
pop ecx
or eax,eax
jz 0x1ec5
mov [ecx],eax
ret
mov al,0x2
jmp dword 0x1fb0
mov [eax],edx
mov eax,ecx
call dword [dword 0x467720]
or eax,eax
jnz 0x1eaf
ret
mov al,0x1
jmp dword 0x1fb0
test edx,edx
jz 0x1ee0
push eax
mov eax,edx
call dword [dword 0x46771c]
pop ecx
or eax,eax
jz 0x1ec5
mov [ecx],eax
ret
lea eax,[eax+0x0]
call dword 0x5888
cmp dword [eax+0x0],byte +0x0
jz 0x1f01
call dword 0x5888
mov eax,[eax+0x0]
mov eax,[eax+0x8]
ret
xor eax,eax
ret
call dword 0x5888
cmp dword [eax+0x0],byte +0x0
jz 0x1f21
call dword 0x5888
mov eax,[eax+0x0]
mov eax,[eax+0x4]
ret
xor eax,eax
ret
push ebx
push esi
call dword 0x5888
cmp dword [eax+0x0],byte +0x0
jz 0x1f4e
call dword 0x5888
mov esi,[eax+0x0]
mov ebx,[esi+0x8]
call dword 0x5888
xor eax,eax
mov [esi+0x8],eax
jmp short 0x1f50
xor ebx,ebx
mov eax,ebx
pop esi
pop ebx
ret
lea eax,[eax+0x0]
mov [dword 0x467004],edx
call dword 0x3a04
ret
push ebx
push esi
mov esi,edx
mov ebx,eax
and bl,0x7f
cmp dword [dword 0x469008],byte +0x0
jz 0x1f80
mov edx,esi
mov eax,ebx
call dword [dword 0x469008]
test bl,bl
jnz 0x1f91
call dword 0x5888
mov ebx,[eax+0x4]
jmp short 0x1fa0
cmp bl,0x18
ja 0x1fa0
movzx eax,bl
movzx ebx,byte [eax+0x467734]
movzx eax,bl
mov edx,esi
call dword 0x1f58
pop esi
pop ebx
ret
lea eax,[eax+0x0]
and eax,byte +0x7f
mov edx,[esp]
jmp dword 0x1f64
ret
push eax
push edx
push ecx
call dword 0x5888
cmp dword [eax+0x4],byte +0x0
pop ecx
pop edx
pop eax
jnz 0x1fd1
ret
xor eax,eax
jmp dword 0x1fb0
ret
lea eax,[eax+0x0]
push ebx
mov ebx,eax
call dword 0x5888
mov [eax+0x4],ebx
pop ebx
ret
push esi
push edi
mov esi,eax
mov edi,[esp+0xc]
xor eax,eax
or al,[esi]
jz 0x2025
test edx,edx
jng 0x2016
cmp edx,eax
jg 0x201d
sub eax,edx
inc eax
test ecx,ecx
jl 0x201d
cmp ecx,eax
jg 0x2021
add esi,edx
mov [edi],cl
inc edi
rep movsb
jmp short 0x2027
mov edx,0x1
jmp short 0x2002
xor ecx,ecx
jmp short 0x200d
mov ecx,eax
jmp short 0x200d
mov [edi],al
pop edi
pop esi
ret 0x4
ret
lea eax,[eax+0x0]
push ebx
call dword 0x5888
mov ebx,[eax+0x4]
call dword 0x5888
xor edx,edx
mov [eax+0x4],edx
mov eax,ebx
pop ebx
ret
lea eax,[eax+0x0]
cmp eax,edx
jz 0x2085
cmp ecx,byte +0x20
ja 0x20d5
sub ecx,byte +0x8
jg 0x2065
jmp dword [ecx*4+0x4030a8]
fild qword [ecx+eax]
fild qword [eax]
cmp ecx,byte +0x8
jng 0x2080
fild qword [eax+0x8]
cmp ecx,byte +0x10
jng 0x207d
fild qword [eax+0x10]
fistp qword [edx+0x10]
fistp qword [edx+0x8]
fistp qword [edx]
fistp qword [ecx+edx]
ret
nop
nop
test [eax],esi
inc eax
add [esi],al
xor [eax+0x0],eax
or al,0x31
inc eax
add [ebx],dl
xor [eax+0x0],eax
and [ecx],dh
inc eax
add [dword 0x30004031],ah
xor [eax+0x0],eax
cmp eax,0x48004031
xor [eax+0x0],eax
push edx
fild qword [eax]
lea eax,[ecx+eax-0x8]
lea ecx,[edx+ecx-0x8]
fild qword [eax]
push ecx
neg ecx
and edx,byte -0x8
lea ecx,[edx+ecx+0x8]
pop edx
fild qword [ecx+eax]
fistp qword [ecx+edx]
add ecx,byte +0x8
jl 0x20c4
fistp qword [edx]
pop edx
fistp qword [edx]
ret
jng 0x2105
cmp eax,edx
ja 0x20ac
sub edx,ecx
cmp eax,edx
lea edx,[ecx+edx]
jna 0x20ac
sub ecx,byte +0x8
push ecx
fild qword [ecx+eax]
fild qword [eax]
add ecx,edx
and ecx,byte -0x8
sub ecx,edx
fild qword [ecx+eax]
fistp qword [ecx+edx]
sub ecx,byte +0x8
jg 0x20f4
pop ecx
fistp qword [edx]
fistp qword [ecx+edx]
ret
movzx ecx,byte [eax]
mov [edx],cl
ret
movzx ecx,word [eax]
mov [edx],cx
ret
mov cx,[eax]
mov al,[eax+0x2]
mov [edx],cx
mov [edx+0x2],al
ret
mov ecx,[eax]
mov [edx],ecx
ret
mov ecx,[eax]
mov al,[eax+0x4]
mov [edx],ecx
mov [edx+0x4],al
ret
mov ecx,[eax]
mov ax,[eax+0x4]
mov [edx],ecx
mov [edx+0x4],ax
ret
mov ecx,[eax]
mov eax,[eax+0x3]
mov [edx],ecx
mov [edx+0x3],eax
ret
fild qword [eax]
fistp qword [edx]
ret
lea eax,[eax+0x0]
push ebx
push esi
push edi
push ebp
push ecx
mov esi,edx
mov ebx,eax
jmp short 0x2163
push ebx
call dword 0x22c
mov ebx,eax
cmp byte [ebx],0x0
jz 0x216d
cmp byte [ebx],0x20
jna 0x215b
cmp byte [ebx],0x22
jnz 0x217d
cmp byte [ebx+0x1],0x22
jnz 0x217d
add ebx,byte +0x2
jmp short 0x2163
xor ebp,ebp
mov [esp],ebx
jmp short 0x21cc
cmp byte [ebx],0x22
jnz 0x21bc
push ebx
call dword 0x22c
mov ebx,eax
jmp short 0x21a3
push ebx
call dword 0x22c
mov edi,eax
mov eax,edi
sub eax,ebx
add ebp,eax
mov ebx,edi
cmp byte [ebx],0x0
jz 0x21ad
cmp byte [ebx],0x22
jnz 0x2193
cmp byte [ebx],0x0
jz 0x21cc
push ebx
call dword 0x22c
mov ebx,eax
jmp short 0x21cc
push ebx
call dword 0x22c
mov edi,eax
mov eax,edi
sub eax,ebx
add ebp,eax
mov ebx,edi
cmp byte [ebx],0x20
ja 0x2184
mov eax,esi
mov edx,ebp
call dword 0x413c
mov ebx,[esp]
mov ebp,[esi]
xor esi,esi
jmp short 0x223d
cmp byte [ebx],0x22
jnz 0x2224
push ebx
call dword 0x22c
mov ebx,eax
jmp short 0x220b
push ebx
call dword 0x22c
mov edi,eax
cmp edi,ebx
jna 0x220b
movzx eax,byte [ebx]
mov [ebp+esi+0x0],al
inc ebx
inc esi
cmp edi,ebx
ja 0x21fe
cmp byte [ebx],0x0
jz 0x2215
cmp byte [ebx],0x22
jnz 0x21f2
cmp byte [ebx],0x0
jz 0x223d
push ebx
call dword 0x22c
mov ebx,eax
jmp short 0x223d
push ebx
call dword 0x22c
mov edi,eax
cmp edi,ebx
jna 0x223d
movzx eax,byte [ebx]
mov [ebp+esi+0x0],al
inc ebx
inc esi
cmp edi,ebx
ja 0x2230
cmp byte [ebx],0x20
ja 0x21e3
mov eax,ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
ret
mov eax,eax
push ebp
mov ebp,esp
push byte +0x0
push ebx
push esi
xor eax,eax
push ebp
push dword 0x40329d
push dword [fs:eax]
mov [fs:eax],esp
xor esi,esi
call dword 0x264
lea edx,[ebp-0x4]
call dword 0x2150
mov ebx,eax
lea edx,[ebp-0x4]
mov eax,ebx
call dword 0x2150
mov ebx,eax
cmp dword [ebp-0x4],byte +0x0
jz 0x2287
inc esi
jmp short 0x2272
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x4032a4
lea eax,[ebp-0x4]
call dword 0x3a1c
ret
jmp dword 0x3384
jmp short 0x2294
mov eax,esi
pop esi
pop ebx
pop ecx
pop ebp
ret
nop
push ebx
push esi
push edi
add esp,0xfffffef8
mov ebx,edx
mov esi,eax
mov eax,ebx
call dword 0x3a1c
test esi,esi
jnz 0x22e2
push dword 0x105
lea eax,[esp+0x4]
push eax
push byte +0x0
call dword 0x274
mov ecx,eax
mov edx,esp
mov eax,ebx
call dword 0x3b0c
jmp short 0x2300
call dword 0x264
mov edi,eax
mov edx,ebx
mov eax,edi
call dword 0x2150
mov edi,eax
test esi,esi
jz 0x2300
cmp dword [ebx],byte +0x0
jz 0x2300
dec esi
jmp short 0x22e9
add esp,0x108
pop edi
pop esi
pop ebx
ret
mov eax,eax
mov [0x467020],ax
fnclex
fldcw [dword 0x467020]
ret
nop
push byte +0x0
fnstcw [esp]
pop eax
ret
nop
sub esp,byte +0x8
fistp qword [esp]
wait pop eax
pop edx
ret
mov eax,eax
sub esp,byte +0xc
fnstcw [esp]
fnstcw [esp+0x2]
wait or word [esp+0x2],0xf00
fldcw [esp+0x2]
fistp qword [esp+0x4]
wait fldcw [esp]
pop ecx
pop eax
pop edx
ret
mov eax,eax
cmp dword [dword 0x469028],byte +0x0
jz 0x2363
call dword [dword 0x469028]
mov eax,0xd2
jmp dword 0x3a10
ret
mov eax,eax
push ebx
movzx ecx,word [eax+0x4]
sub cx,0xd7b1
jz 0x238b
dec ecx
sub cx,byte +0x2
jnc 0x238f
mov ebx,edx
call ebx
mov ebx,eax
jmp short 0x23a6
xor ebx,ebx
jmp short 0x23a6
cmp eax,0x469218
jz 0x239d
cmp eax,0x4693e4
jnz 0x23a1
xor ebx,ebx
jmp short 0x23a6
mov ebx,0x67
test ebx,ebx
jz 0x23b1
mov eax,ebx
call dword 0x1fdc
mov eax,ebx
pop ebx
ret
lea eax,[eax+0x0]
mov edx,[eax+0x1c]
call dword 0x2370
ret
lea eax,[eax+0x0]
push ebx
push esi
mov ebx,eax
xor esi,esi
movzx eax,word [ebx+0x4]
cmp ax,0xd7b1
jc 0x2403
cmp ax,0xd7b3
ja 0x2403
and ax,0xd7b2
cmp ax,0xd7b2
jnz 0x23eb
mov eax,ebx
call dword [ebx+0x1c]
mov esi,eax
test esi,esi
jnz 0x23f6
mov eax,ebx
call dword [ebx+0x24]
mov esi,eax
test esi,esi
jz 0x2415
mov eax,esi
call dword 0x1fdc
jmp short 0x2415
cmp ebx,0x46904c
jz 0x2415
mov eax,0x67
call dword 0x1fdc
mov eax,esi
pop esi
pop ebx
ret
mov eax,eax
push ebx
movzx ebx,byte [edx]
cmp cl,bl
jna 0x2426
mov ecx,ebx
mov [eax],cl
inc edx
inc eax
movzx ecx,cl
xchg eax,edx
call dword 0x2050
pop ebx
ret
lea eax,[eax+0x0]
push ebx
push esi
push edi
mov esi,eax
mov edi,edx
xor eax,eax
xor edx,edx
mov al,[esi]
mov dl,[edi]
inc esi
inc edi
sub eax,edx
ja 0x244f
add edx,eax
push edx
shr edx,byte 0x2
jz 0x247b
mov ecx,[esi]
mov ebx,[edi]
cmp ecx,ebx
jnz 0x24a1
dec edx
jz 0x2475
mov ecx,[esi+0x4]
mov ebx,[edi+0x4]
cmp ecx,ebx
jnz 0x24a1
add esi,byte +0x8
add edi,byte +0x8
dec edx
jnz 0x2455
jmp short 0x247b
add esi,byte +0x4
add edi,byte +0x4
pop edx
and edx,byte +0x3
jz 0x249d
mov cl,[esi]
cmp cl,[edi]
jnz 0x24b6
dec edx
jz 0x249d
mov cl,[esi+0x1]
cmp cl,[edi+0x1]
jnz 0x24b6
dec edx
jz 0x249d
mov cl,[esi+0x2]
cmp cl,[edi+0x2]
jnz 0x24b6
add eax,eax
jmp short 0x24b6
pop edx
cmp cl,bl
jnz 0x24b6
cmp ch,bh
jnz 0x24b6
shr ecx,byte 0x10
shr ebx,byte 0x10
cmp cl,bl
jnz 0x24b6
cmp ch,bh
pop edi
pop esi
pop ebx
ret
mov eax,eax
push ebx
push esi
push ecx
mov esi,ecx
shr esi,byte 0x2
jz 0x24ec
mov ecx,[eax]
mov ebx,[edx]
cmp ecx,ebx
jnz 0x2513
dec esi
jz 0x24e6
mov ecx,[eax+0x4]
mov ebx,[edx+0x4]
cmp ecx,ebx
jnz 0x2513
add eax,byte +0x8
add edx,byte +0x8
dec esi
jnz 0x24c6
jmp short 0x24ec
add eax,byte +0x4
add edx,byte +0x4
pop esi
and esi,byte +0x3
jz 0x2528
mov cl,[eax]
cmp cl,[edx]
jnz 0x2528
dec esi
jz 0x250e
mov cl,[eax+0x1]
cmp cl,[edx+0x1]
jnz 0x2528
dec esi
jz 0x250e
mov cl,[eax+0x2]
cmp cl,[edx+0x2]
jnz 0x2528
xor eax,eax
pop esi
pop ebx
ret
pop esi
cmp cl,bl
jnz 0x2528
cmp ch,bh
jnz 0x2528
shr ecx,byte 0x10
shr ebx,byte 0x10
cmp cl,bl
jnz 0x2528
cmp ch,bh
pop esi
pop ebx
ret
nop
cmp edx,byte +0x20
mov ch,cl
jl 0x2570
mov [eax],cx
mov [eax+0x2],cx
mov [eax+0x4],cx
mov [eax+0x6],cx
sub edx,byte +0x10
fld qword [eax]
fst qword [edx+eax]
fst qword [edx+eax+0x8]
mov ecx,eax
and ecx,byte +0x7
sub ecx,byte +0x8
sub eax,ecx
add edx,ecx
add eax,edx
neg edx
fst qword [edx+eax]
fst qword [edx+eax+0x8]
add edx,byte +0x10
jl 0x255e
ffree st0
ret
nop
nop
nop
test edx,edx
jng 0x25c4
mov [edx+eax-0x1],cl
and edx,byte -0x2
neg edx
lea edx,[edx*2+0x4035c4]
jmp edx
nop
nop
mov [eax+0x1c],cx
mov [eax+0x1a],cx
mov [eax+0x18],cx
mov [eax+0x16],cx
mov [eax+0x14],cx
mov [eax+0x12],cx
mov [eax+0x10],cx
mov [eax+0xe],cx
mov [eax+0xc],cx
mov [eax+0xa],cx
mov [eax+0x8],cx
mov [eax+0x6],cx
mov [eax+0x4],cx
mov [eax+0x2],cx
mov [eax],cx
ret
ret
lea eax,[eax+0x0]
push ebx
push esi
push edi
mov esi,eax
push eax
test eax,eax
jz 0x263e
xor eax,eax
xor ebx,ebx
mov edi,0xccccccc
mov bl,[esi]
inc esi
cmp bl,0x20
jz 0x25db
mov ch,0x0
cmp bl,0x2d
jz 0x264c
cmp bl,0x2b
jz 0x264e
cmp bl,0x24
jz 0x2653
cmp bl,0x78
jz 0x2653
cmp bl,0x58
jz 0x2653
cmp bl,0x30
jnz 0x2616
mov bl,[esi]
inc esi
cmp bl,0x78
jz 0x2653
cmp bl,0x58
jz 0x2653
test bl,bl
jz 0x2634
jmp short 0x261a
test bl,bl
jz 0x2647
sub bl,0x30
cmp bl,0x9
ja 0x2647
cmp eax,edi
ja 0x2647
lea eax,[eax+eax*4]
add eax,eax
add eax,ebx
mov bl,[esi]
inc esi
test bl,bl
jnz 0x261a
dec ch
jz 0x2641
test eax,eax
jnl 0x2690
jmp short 0x2647
inc esi
jmp short 0x2647
neg eax
jng 0x2690
js 0x2690
pop ebx
sub esi,ebx
jmp short 0x2693
inc ch
mov bl,[esi]
inc esi
jmp short 0x25ef
mov edi,0xfffffff
mov bl,[esi]
inc esi
test bl,bl
jz 0x263e
cmp bl,0x61
jc 0x2667
sub bl,0x20
sub bl,0x30
cmp bl,0x9
jna 0x267a
sub bl,0x11
cmp bl,0x5
ja 0x2647
add bl,0xa
cmp eax,edi
ja 0x2647
shl eax,byte 0x4
add eax,ebx
mov bl,[esi]
inc esi
test bl,bl
jnz 0x265f
dec ch
jnz 0x2690
neg eax
pop ecx
xor esi,esi
mov [edx],esi
pop edi
pop esi
pop ebx
ret
lea eax,[eax+0x0]
mov ecx,0xff
call dword 0x26a8
ret
nop
push ebx
push eax
cmp ecx,0xff
jna 0x26b7
mov ecx,0xff
mov bl,[edx]
inc edx
test bl,bl
jz 0x26c4
inc eax
mov [eax],bl
dec ecx
jnz 0x26b7
pop edx
sub eax,edx
mov [edx],al
pop ebx
ret
nop
jmp dword 0x26d4
ret
mov eax,eax
push ebx
xor ebx,ebx
test eax,eax
jl 0x2728
jz dword 0x277b
cmp eax,0x1400
jnl dword 0x276d
mov edx,eax
and edx,byte +0x1f
lea edx,[edx+edx*4]
fld tword [ebx+edx*2+0x403787]
fmulp st1
shr eax,byte 0x5
jz 0x277b
mov edx,eax
and edx,byte +0xf
jz 0x2715
lea edx,[edx+edx*4]
fld tword [ebx+edx*2+0x4038bd]
fmulp st1
shr eax,byte 0x4
jz 0x277b
lea eax,[eax+eax*4]
fld tword [ebx+eax*2+0x403953]
fmulp st1
jmp short 0x277b
neg eax
cmp eax,0x1400
jnl 0x2777
mov edx,eax
and edx,byte +0x1f
lea edx,[edx+edx*4]
fld tword [ebx+edx*2+0x403787]
fdivp st1
shr eax,byte 0x5
jz 0x277b
mov edx,eax
and edx,byte +0xf
jz 0x275a
lea edx,[edx+edx*4]
fld tword [ebx+edx*2+0x4038bd]
fdivp st1
shr eax,byte 0x4
jz 0x277b
lea eax,[eax+eax*4]
fld tword [ebx+eax*2+0x403953]
fdivp st1
jmp short 0x277b
fstp st0
fld tword [ebx+0x40377d]
jmp short 0x277b
fstp st0
fldz
pop ebx
ret
add [eax],al
add [eax],al
add [eax],al
add [eax+0x7fff],al
add [eax],al
add [eax],al
add [eax+0x3fff],al
add [eax],al
add [eax],al
add [eax+0x4002],ah
add [eax],al
add [eax],al
add al,cl
add eax,0x40
add [eax],al
add [eax],al
cli
or [eax+0x0],al
add [eax],al
add [eax],al
add [eax-0x64],al
or al,0x40
add [eax],al
add [eax],al
add [eax],al
push eax
ret
cmovo eax,[eax]
add [eax],al
add [eax],al
add [esp+esi*8],ah
adc al,[eax+0x0]
add [eax],al
add [eax],al
adc byte [esi+0x401698],0x0
add [eax],al
add [eax],ah
mov esp,0x4019be
add [eax],al
add [eax],al
sub [ebx-0x12],ch
sbb al,0x40
add [eax],al
add [eax],al
add cl,bh
add dl,[ebp+0x4020]
add [eax],al
inc eax
mov bh,0x43
mov edx,0x4023
add [eax],al
adc [ebp+0x4026e8d4],ah
add [eax],al
add [eax],al
sub ah,bh
test [ecx+0x402a],dl
add [eax-0x4a19df0c],al
sub eax,0x40
mov al,[0xe35fa931]
xor [eax+0x0],al
add [eax],al
add al,0xbf
leave
sbb ecx,[esi+0x4034]
add ch,al
cs mov esp,0x4037b1a2
add [eax],al
inc eax
jna 0x287a
imul ecx,[ebx],byte -0x22
cmp al,[eax+0x0]
add al,ch
mov [ebx],eax
db 0xc7
mov bh,[esi]
inc eax
add [eax],al
bound ebp,[ebp+eax*8+0x41ad78eb]
inc eax
add [eax+0x26b7177a],al
xlatb
fadd dword [eax+eax*2+0x0]
nop
lodsb
outsb
xor bh,[eax-0x7a]
xchg ecx,[eax+0x40]
add [edi+edx*2+0x68163f0a],dh
test eax,0xa100404b
in eax,dx
int3
into
sbb eax,edx
ror dword [esi+0x40],cl
mov al,[0x61401484]
push ecx
pop ecx
test [edx+0x40],dl
enter 0x19a5,0x90
mov ecx,0x55a56fa5
inc eax
cmp cl,[edi]
and ah,dh
daa
db 0x8f
retf
into
pop eax
inc eax
test [ecx],cl
xchg eax,esp
clc
js 0x28de
aas
sbb dword [eax+eax*2-0x1b],0xd736b90b
pop es
db 0x8f
mov eax,[0x4edf405f]
add al,0xcd
leave
repne leave
bound eax,[eax-0x6a]
and al,[ecx+0x6f7c4045]
cld
gs inc eax
sahf
mov ch,0x70
sub ebp,[eax+0x699dc5ad]
inc eax
aad 0xa6
iretd
dec dword [ecx+0x1f]
js 0x289b
rol dword [eax-0x5d],cl
adc al,0x9b
lds edx,[esi]
stosd
mov bl,0xef
cmp eax,0xe98ce041
or cl,0x47
mov edx,0xaa41a893
pop ss
out 0x7f,al
sub esp,[ecx+0x4212b616]
imul edx,[ebp+0x27],byte +0x39
db 0x8d
div dword [eax-0x20]
jl 0x2945
xor cl,cl
cmp al,0xe3
call dword [esi+0x42e78a52]
mov ds,esi
stc
popfd
sti
jmp short 0x2992
stosb
push ecx
inc ebx
mov [edi],gs
push byte +0x5c
sbb esp,edi
sar byte [es:ebx-0x331c89bd],cl
repne sub [edi],ebp
test [ecx+0xad24426],al
nop
fild dword [eax]
daa
movsb
lahf
nop
inc esp
pop ss
stosb
clc
scasb
adc bl,ah
db 0xc5
db 0xc4
cli
inc esp
pop ecx
pushfd
mov al,0xe9
pop es
pushfd
mov dh,dl
fs inc ebp
aam 0xf3
imul ebx
loope 0x2999
jpe 0x28e6
iretd
inc ebp
db 0x62
mov [0xd8dc0795],al
ds mov eax,0x91c74639
push cs
cmpsb
scasb
mov al,[0x46a3e319]
pop ss
or al,0x75
add dword [esi+0x48c97675],0x93a7e44d

cmp [ebx],edi
xor eax,0x53edb2b8
in eax,0x5d
cmp eax,0x8b3b5dc5
sahf
xchg eax,edx
pop edx
cmpsb
lock mov eax,[0xa554c020]
mov [edi],segr6
popad
mov ebx,[edx-0x75]
fsub dword [dword 0xdbf9895d]
a16 clc
rep daa
mov edi,0xdd5dc8a2
sub byte [esi-0x65],0x97
and [edx-0x3b9fadfe],cl
and eax,0xd559f075
outsb
db 0x62
adc [dword 0xc37bcaae],esi
jmp dword [dword 0x46e7b4]
mov eax,eax
push ebx
xor ebx,ebx
push byte +0x0
call dword 0x29b8
cmp eax,byte +0x7
jnz 0x29eb
push byte +0x1
call dword 0x29b8
and eax,0xff00
cmp eax,0xd00
jz 0x29e9
cmp eax,0x400
jnz 0x29eb
mov bl,0x1
mov eax,ebx
pop ebx
ret
nop
push ebp
mov ebp,esp
add esp,byte -0xc
movzx eax,word [dword 0x467020]
mov [ebp-0x8],eax
lea eax,[ebp-0x4]
push eax
push byte +0x1
push byte +0x0
push dword 0x403a88
push dword 0x80000002
call dword 0x2cc
test eax,eax
jnz 0x2a68
xor eax,eax
push ebp
push dword 0x403a61
push dword [fs:eax]
mov [fs:eax],esp
mov dword [ebp-0xc],0x4
lea eax,[ebp-0xc]
push eax
lea eax,[ebp-0x8]
push eax
push byte +0x0
push byte +0x0
push dword 0x403aa4
mov eax,[ebp-0x4]
push eax
call dword 0x2d4
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x403a68
mov eax,[ebp-0x4]
push eax
call dword 0x2c4
ret
jmp dword 0x3384
jmp short 0x2a57
movzx eax,word [dword 0x467020]
and ax,0xffc0
movzx edx,word [ebp-0x8]
and dx,byte +0x3f
or ax,dx
mov [0x467020],ax
mov esp,ebp
pop ebp
ret
push ebx
dec edi
inc esi
push esp
push edi
inc ecx
push edx
inc ebp
pop esp
inc edx
outsd
jc 0x2b01
popad
outsb
fs pop esp
inc esp
gs insb
jo 0x2b06
imul ebx,[edx+edx*2+0x54],dword 0x5046004c
push ebp
dec ebp
popad
jnc 0x2b16
push esi
popad
insb
jnz 0x2b15
add [eax],al
add [eax],al
fninit
wait fldcw [dword 0x467020]
ret
mov eax,eax
mov al,0x5
jmp dword 0x1fb0
ret
mov eax,[eax]
mov edx,eax
mov eax,edx
ret
nop
push esi
push edi
mov edi,edx
mov esi,[eax-0x2c]
xor ecx,ecx
mov cl,[esi]
inc ecx
rep movsb
pop edi
pop esi
ret
lea eax,[eax+0x0]
push ebp
mov ebp,esp
add esp,0xfffffefc
push ebx
push esi
xor ecx,ecx
mov [ebp-0x4],ecx
mov esi,edx
mov ebx,eax
xor eax,eax
push ebp
push dword 0x403b6b
push dword [fs:eax]
mov [fs:eax],esp
lea edx,[ebp-0x104]
mov eax,ebx
call dword 0x2ad0
lea edx,[ebp-0x104]
lea eax,[ebp-0x4]
call dword 0x3c80
mov eax,esi
call dword 0x3cdc
push eax
mov eax,esi
call dword 0x3eac
push eax
mov eax,[ebp-0x4]
call dword 0x3cdc
push eax
mov eax,[ebp-0x4]
call dword 0x3eac
push eax
push byte +0x1
push dword 0x800
call dword 0x234
cmp eax,byte +0x2
setz bl
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x403b72
lea eax,[ebp-0x4]
call dword 0x3a1c
ret
jmp dword 0x3384
jmp short 0x2b62
mov eax,ebx
pop esi
pop ebx
mov esp,ebp
pop ebp
ret
mov eax,eax
mov eax,[eax-0x24]
test eax,eax
jz 0x2b85
mov eax,[eax]
ret
mov eax,eax
push ebx
mov ebx,eax
mov eax,ebx
call dword 0x2bb8
call dword 0x1e60
mov edx,eax
mov eax,ebx
call dword 0x2bfc
pop ebx
ret
mov eax,eax
push ebx
mov ebx,eax
mov eax,ebx
call dword 0x2c54
mov eax,ebx
call dword 0x1e7c
pop ebx
ret
nop
add eax,byte -0x28
mov eax,[eax]
ret
mov eax,eax
test dl,dl
jz 0x2bcc
add esp,byte -0x10
call dword 0x2f14
test dl,dl
jz 0x2bdf
call dword 0x2f6c
pop dword [dword fs:0x0]
add esp,byte +0xc
ret
call dword 0x2fbc
test dl,dl
jng 0x2bee
call dword 0x2f64
ret
nop
test eax,eax
jz 0x2bfb
mov dl,0x1
mov ecx,[eax]
call dword [ecx-0x4]
ret
push ebx
push esi
push edi
mov ebx,eax
mov edi,edx
stosd
mov ecx,[ebx-0x28]
xor eax,eax
push ecx
shr ecx,byte 0x2
dec ecx
rep stosd
pop ecx
and ecx,byte +0x3
rep stosb
mov eax,edx
mov edx,esp
mov ecx,[ebx-0x48]
test ecx,ecx
jz 0x2c22
push ecx
mov ebx,[ebx-0x24]
test ebx,ebx
jz 0x2c2d
mov ebx,[ebx]
jmp short 0x2c1a
cmp esp,edx
jz 0x2c4e
pop ebx
mov ecx,[ebx]
add ebx,byte +0x4
mov esi,[ebx+0x10]
test esi,esi
jz 0x2c44
mov edi,[ebx+0x14]
mov [edi+eax],esi
add ebx,byte +0x1c
dec ecx
jnz 0x2c37
cmp esp,edx
jnz 0x2c31
pop edi
pop esi
pop ebx
ret
mov eax,eax
push ebx
push esi
mov ebx,eax
mov esi,eax
mov esi,[esi]
mov edx,[esi-0x40]
mov esi,[esi-0x24]
test edx,edx
jz 0x2c6d
call dword 0x4610
mov eax,ebx
test esi,esi
jnz 0x2c5a
pop esi
pop ebx
ret
xchg edx,ecx
cmp ecx,0xff000000
jnc 0x2c8f
cmp ecx,0xfe000000
jc 0x2c8d
movsx ecx,cx
add ecx,[eax]
jmp dword [ecx]
jmp ecx
and ecx,0xffffff
add ecx,eax
mov eax,edx
mov edx,[ecx]
jmp dword 0x5288
ret
lea eax,[eax+0x0]
push ebp
mov ebp,esp
add esp,byte -0x8
push ebx
push esi
push edi
xor ebx,ebx
mov [ebp-0x8],ebx
mov esi,ecx
mov [ebp-0x4],edx
mov edi,eax
xor eax,eax
push ebp
push dword 0x403d28
push dword [fs:eax]
mov [fs:eax],esp
xor eax,eax
mov [esi],eax
mov edx,[ebp-0x4]
mov eax,[edi]
call dword 0x2d38
mov ebx,eax
test ebx,ebx
jz 0x2d0c
mov eax,[ebx+0x14]
test eax,eax
jz 0x2cf5
add edi,eax
mov [esi],edi
cmp dword [esi],byte +0x0
jz 0x2d0c
mov eax,[esi]
push eax
mov eax,[eax]
call dword [eax+0x4]
jmp short 0x2d0c
lea ecx,[ebp-0x8]
mov edx,[ebx+0x18]
mov eax,edi
call dword 0x2c74
mov edx,[ebp-0x8]
mov eax,esi
call dword 0x5288
cmp dword [esi],byte +0x0
setnz bl
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x403d2f
lea eax,[ebp-0x8]
call dword 0x5270
ret
jmp dword 0x3384
jmp short 0x2d1f
mov eax,ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
ret
push ebx
push esi
mov ebx,eax
mov eax,[ebx-0x48]
test eax,eax
jz 0x2d6c
mov ecx,[eax]
add eax,byte +0x4
mov esi,[edx]
cmp esi,[eax]
jnz 0x2d66
mov esi,[edx+0x4]
cmp esi,[eax+0x4]
jnz 0x2d66
mov esi,[edx+0x8]
cmp esi,[eax+0x8]
jnz 0x2d66
mov esi,[edx+0xc]
cmp esi,[eax+0xc]
jz 0x2d79
add eax,byte +0x1c
dec ecx
jnz 0x2d48
mov ebx,[ebx-0x24]
test ebx,ebx
jz 0x2d77
mov ebx,[ebx]
jmp short 0x2d3c
xor eax,eax
pop esi
pop ebx
ret
push ebx
push esi
mov esi,edx
mov ebx,eax
test ebx,ebx
jz 0x2d93
mov edx,esi
mov eax,[ebx]
call dword 0x2e1c
test al,al
jnz 0x2d98
xor eax,eax
pop esi
pop ebx
ret
mov al,0x1
pop esi
pop ebx
ret
lea eax,[eax+0x0]
test eax,eax
jz 0x2dba
mov ecx,eax
mov ecx,[ecx]
cmp ecx,edx
jz 0x2dba
mov ecx,[ecx-0x24]
test ecx,ecx
jnz 0x2da6
mov al,0xa
jmp dword 0x1fb0
ret
nop
push edi
xchg eax,esi
jmp short 0x2dc2
mov esi,[esi]
mov edi,[esi-0x30]
test edi,edi
jz 0x2dd6
movzx ecx,word [edi]
push ecx
add edi,byte +0x2
repne scasw
jz 0x2ddf
pop ecx
mov esi,[esi-0x24]
test esi,esi
jnz 0x2dc0
pop edi
ret
pop eax
add eax,eax
sub eax,ecx
mov esi,[edi+eax*2-0x4]
pop edi
ret
mov eax,eax
push eax
push ecx
mov eax,[eax]
call dword 0x2dbc
pop ecx
pop eax
jz 0x2dfb
jmp esi
pop ecx
jmp dword 0x2354
ret
mov eax,eax
push esi
mov esi,edx
mov eax,[eax]
call dword 0x2dbc
mov eax,esi
pop esi
jnz 0x2e19
pop ecx
jmp dword 0x2354
ret
mov eax,eax
jmp short 0x2e20
mov eax,[eax]
cmp eax,edx
jz 0x2e2c
mov eax,[eax-0x24]
test eax,eax
jnz 0x2e1e
ret
mov al,0x1
ret
nop
add eax,byte -0x3c
mov eax,[eax]
ret
mov eax,eax
mov eax,0x8000ffff
ret
mov eax,eax
ret
lea eax,[eax+0x0]
ret
lea eax,[eax+0x0]
ret
lea eax,[eax+0x0]
push esi
mov si,[edx]
or si,si
jz 0x2e6c
cmp si,0xc000
jnc 0x2e6c
push eax
mov eax,[eax]
call dword 0x2dbc
pop eax
jz 0x2e6c
mov ecx,esi
pop esi
jmp ecx
pop esi
mov ecx,[eax]
jmp dword [ecx-0x10]
ret
nop
push ebx
push esi
push edi
xor ecx,ecx
xor edi,edi
mov bl,[edx]
jmp short 0x2e81
mov eax,[eax]
mov esi,[eax-0x34]
test esi,esi
jz 0x2e9d
mov di,[esi]
add esi,byte +0x2
mov cl,[esi+0x6]
cmp cl,bl
jz 0x2eaa
mov cx,[esi]
add esi,ecx
dec edi
jnz 0x2e8e
mov eax,[eax-0x24]
test eax,eax
jnz 0x2e7f
jmp short 0x2ebe
mov bl,[edx]
jmp short 0x2e95
mov ch,0x0
mov bl,[ecx+esi+0x6]
xor bl,[ecx+edx]
and bl,0xdf
jnz 0x2ea6
dec ecx
jnz 0x2eac
mov eax,[esi+0x2]
pop edi
pop esi
pop ebx
ret
mov eax,eax
push ebx
push esi
push edi
xor ecx,ecx
xor edi,edi
mov bl,[edx]
push eax
mov eax,[eax]
mov esi,[eax-0x38]
test esi,esi
jz 0x2eeb
mov di,[esi]
add esi,byte +0x6
mov cl,[esi+0x6]
cmp cl,bl
jz 0x2efc
lea esi,[ecx+esi+0x7]
dec edi
jnz 0x2edd
mov eax,[eax-0x24]
test eax,eax
jnz 0x2ece
pop edx
jmp short 0x2f10
mov bl,[edx]
mov cl,[esi+0x6]
jmp short 0x2ee4
mov bl,[ecx+esi+0x6]
xor bl,[ecx+edx]
and bl,0xdf
jnz 0x2ef5
dec ecx
jnz 0x2efc
mov eax,[esi]
pop edx
add eax,edx
pop edi
pop esi
pop ebx
ret
push edx
push ecx
push ebx
test dl,dl
jl 0x2f1e
call dword [eax-0xc]
xor edx,edx
lea ecx,[esp+0x10]
mov ebx,[fs:edx]
mov [ecx],ebx
mov [ecx+0x8],ebp
mov dword [ecx+0x4],0x403f3d
mov [ecx+0xc],eax
mov [fs:edx],ecx
pop ebx
pop ecx
pop edx
ret
jmp dword 0x30d0
mov eax,[esp+0x2c]
mov eax,[eax+0xc]
test eax,eax
jz 0x2f5b
mov ecx,[eax]
mov dl,0x81
push eax
call dword [ecx-0x4]
pop eax
call dword 0x2f64
call dword 0x348c
ret
lea eax,[eax+0x0]
mov edx,[eax]
call dword [edx-0x8]
ret
mov eax,eax
push ebp
mov ebp,esp
push ecx
push ebx
push esi
push edi
mov [ebp-0x4],eax
xor edx,edx
push ebp
push dword 0x403f9b
push dword [fs:edx]
mov [fs:edx],esp
mov eax,[ebp-0x4]
mov edx,[eax]
call dword [edx-0x1c]
mov eax,[ebp-0x4]
pop dword [dword fs:0x0]
add esp,byte +0x8
jmp short 0x2fb4
jmp dword 0x30d0
mov dl,0x1
mov eax,[ebp-0x4]
call dword 0x2fbc
call dword 0x348c
call dword 0x34e0
pop edi
pop esi
pop ebx
pop ecx
pop ebp
ret
mov eax,eax
test dl,dl
jg 0x2fc1
ret
push eax
push edx
mov edx,[eax]
call dword [edx-0x18]
pop edx
pop eax
ret
nop
cmp byte [dword 0x467024],0x1
jna 0x2fe6
push byte +0x0
push byte +0x0
push byte +0x0
push dword 0xeedfadf
call dword [dword 0x469014]
ret
nop
cmp byte [dword 0x467024],0x0
jz 0x3008
push eax
push eax
push edx
push esp
push byte +0x2
push byte +0x0
push dword 0xeedfae4
call dword [dword 0x469014]
add esp,byte +0x8
pop eax
ret
lea eax,[eax+0x0]
push esp
push byte +0x1
push byte +0x0
push dword 0xeedfae0
call dword [dword 0x469014]
add esp,byte +0x4
pop eax
ret
lea eax,[eax+0x0]
cmp byte [dword 0x467024],0x1
jna 0x3036
push eax
push dword [ebx+0x4]
jmp dword 0x300c
ret
nop
cmp byte [dword 0x467024],0x1
jna 0x3048
push eax
push ebx
jmp dword 0x300c
ret
lea eax,[eax+0x0]
test ecx,ecx
jz 0x3069
mov eax,[ecx+0x1]
cmp byte [ecx],0xe9
jz 0x3064
cmp byte [ecx],0xeb
jnz 0x3069
movsx eax,al
inc ecx
inc ecx
jmp short 0x3067
add ecx,byte +0x5
add ecx,eax
ret
mov eax,eax
cmp byte [dword 0x467024],0x1
jna 0x3092
push eax
push edx
push ecx
call dword 0x304c
push ecx
push esp
push byte +0x1
push byte +0x0
push dword 0xeedfae1
call dword [dword 0x469014]
pop ecx
pop ecx
pop edx
pop eax
ret
nop
cmp byte [dword 0x467024],0x1
jna 0x30af
push edx
push esp
push byte +0x1
push byte +0x0
push dword 0xeedfae2
call dword [dword 0x469014]
pop edx
ret
push eax
push edx
cmp byte [dword 0x467024],0x1
jna 0x30cb
push esp
push byte +0x2
push byte +0x0
push dword 0xeedfae3
call dword [dword 0x469014]
pop edx
pop eax
ret
mov eax,eax
mov eax,[esp+0x4]
test dword [eax+0x4],0x6
jnz dword 0x31f4
cmp dword [eax],0xeedfade
mov edx,[eax+0x18]
mov ecx,[eax+0x14]
jz 0x315d
cld
call dword 0x2ab4
mov edx,[dword 0x469010]
test edx,edx
jz dword 0x31f4
call edx
test eax,eax
jz dword 0x31f4
mov edx,[esp+0xc]
mov ecx,[esp+0x4]
cmp dword [ecx],0xeefface
jz 0x3154
call dword 0x2fe8
cmp byte [dword 0x467028],0x0
jna 0x3154
cmp byte [dword 0x467024],0x0
ja 0x3154
lea ecx,[esp+0x4]
push eax
push ecx
call dword 0x21c
cmp eax,byte +0x0
pop eax
jz dword 0x31f4
mov edx,eax
mov eax,[esp+0x4]
mov ecx,[eax+0xc]
jmp short 0x3184
mov edx,eax
mov eax,[esp+0x4]
mov ecx,[eax+0xc]
cmp byte [dword 0x467028],0x1
jna 0x3184
cmp byte [dword 0x467024],0x0
ja 0x3184
push eax
lea eax,[esp+0x8]
push edx
push ecx
push eax
call dword 0x21c
cmp eax,byte +0x0
pop ecx
pop edx
pop eax
jz 0x31f4
or dword [eax+0x4],byte +0x2
push ebx
xor ebx,ebx
push esi
push edi
push ebp
mov ebx,[fs:ebx]
push ebx
push eax
push edx
push ecx
mov edx,[esp+0x28]
push byte +0x0
push eax
push dword 0x4041a8
push edx
call dword [dword 0x469018]
mov edi,[esp+0x28]
call dword 0x5888
push dword [eax+0x0]
mov [eax+0x0],esp
mov ebp,[edi+0x8]
mov ebx,[edi+0x4]
mov dword [edi+0x4],0x4041d4
add ebx,byte +0x5
call dword 0x3038
jmp ebx
jmp dword 0x342c
call dword 0x5888
mov ecx,[eax+0x0]
mov edx,[ecx]
mov [eax+0x0],edx
mov eax,[ecx+0x8]
jmp dword 0x2bf0
mov eax,0x1
ret
mov eax,eax
mov eax,[esp+0x4]
test dword [eax+0x4],0x6
jnz dword 0x337c
cmp dword [eax],0xeedfade
jz 0x3234
cld
call dword 0x2ab4
mov edx,[dword 0x46900c]
test edx,edx
jz dword 0x337c
call edx
test eax,eax
jnz 0x3239
jmp dword 0x337c
mov eax,[eax+0x18]
mov eax,[eax]
mov edx,[esp+0x8]
push ebx
push esi
push edi
push ebp
mov ecx,[edx+0x4]
mov ebx,[ecx+0x5]
lea esi,[ecx+0x9]
mov ebp,eax
mov eax,[esi]
test eax,eax
jz 0x3295
mov edi,ebp
jmp short 0x3258
mov edi,[edi]
mov eax,[eax]
cmp eax,edi
jz 0x3295
mov ecx,[eax-0x28]
cmp ecx,[edi-0x28]
jnz 0x327d
mov eax,[eax-0x2c]
mov edx,[edi-0x2c]
xor ecx,ecx
mov cl,[eax]
cmp cl,[edx]
jnz 0x327d
inc eax
inc edx
call dword 0x24bc
jz 0x3295
mov edi,[edi-0x24]
mov eax,[esi]
test edi,edi
jnz 0x3256
add esi,byte +0x8
dec ebx
jnz 0x324c
pop ebp
pop edi
pop esi
pop ebx
jmp dword 0x337c
mov eax,[esp+0x14]
cmp dword [eax],0xeedfade
mov edx,[eax+0x18]
mov ecx,[eax+0x14]
jz 0x32e8
call dword [dword 0x469010]
mov edx,[esp+0x1c]
call dword 0x2fe8
cmp byte [dword 0x467028],0x0
jna 0x32dd
cmp byte [dword 0x467024],0x0
ja 0x32dd
lea ecx,[esp+0x4]
push eax
push ecx
call dword 0x21c
cmp eax,byte +0x0
pop eax
jz dword 0x337c
mov edx,eax
mov eax,[esp+0x14]
mov ecx,[eax+0xc]
jmp short 0x330f
cmp byte [dword 0x467028],0x1
jna 0x330f
cmp byte [dword 0x467024],0x0
ja 0x330f
push eax
lea eax,[esp+0x8]
push edx
push ecx
push eax
call dword 0x21c
cmp eax,byte +0x0
pop ecx
pop edx
pop eax
jz 0x337c
xor ebx,ebx
mov ebx,[fs:ebx]
push ebx
push eax
push edx
push ecx
mov edx,[esp+0x28]
or dword [eax+0x4],byte +0x2
push esi
push byte +0x0
push eax
push dword 0x404330
push edx
call dword [dword 0x469018]
pop ebx
mov edi,[esp+0x28]
call dword 0x5888
push dword [eax+0x0]
mov [eax+0x0],esp
mov ebp,[edi+0x8]
mov dword [edi+0x4],0x40435c
mov eax,[esp+0x8]
call dword 0x3024
jmp dword [ebx+0x4]
jmp dword 0x342c
call dword 0x5888
mov ecx,[eax+0x0]
mov edx,[ecx]
mov [eax+0x0],edx
mov eax,[ecx+0x8]
jmp dword 0x2bf0
mov eax,0x1
ret
mov eax,eax
mov eax,[esp+0x4]
test dword [eax+0x4],0x6
jz dword 0x3424
push ebx
xor ebx,ebx
push esi
push edi
push ebp
push ebp
push dword 0x404404
push dword [fs:ebx]
mov [fs:ebx],esp
mov ebx,[fs:ebx]
mov edx,[eax+0x18]
mov ecx,[eax+0x14]
push ebx
push eax
push edx
push ecx
mov edi,[esp+0x34]
call dword 0x5888
push dword [eax+0x0]
mov [eax+0x0],esp
mov ecx,[edi+0x4]
mov ebp,[edi+0x8]
mov dword [edi+0x4],0x404404
add ecx,byte +0x5
call dword 0x306c
call ecx
call dword 0x5888
mov ecx,[eax+0x0]
mov edx,[ecx]
mov [eax+0x0],edx
add esp,byte +0x14
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
pop ebp
pop edi
pop esi
pop ebx
jmp short 0x3424
jmp dword 0x342c
call dword 0x5888
mov ecx,[eax+0x0]
mov edx,[ecx]
mov [eax+0x0],edx
mov eax,[ecx+0x8]
jmp dword 0x2bf0
mov eax,0x1
ret
mov eax,eax
mov eax,[esp+0x4]
mov edx,[esp+0x8]
test dword [eax+0x4],0x6
jz 0x345c
mov ecx,[edx+0x4]
mov dword [edx+0x4],0x40445c
push ebx
push esi
push edi
push ebp
mov ebp,[edx+0x8]
add ecx,byte +0x5
call dword 0x306c
call ecx
pop ebp
pop edi
pop esi
pop ebx
mov eax,0x1
ret
mov eax,eax
or eax,eax
jnz 0x3472
mov eax,0xd8
call dword 0x3a10
pop edx
push esp
push ebp
push edi
push esi
push ebx
push eax
push edx
push esp
push byte +0x7
push byte +0x1
push dword 0xeedfade
push edx
jmp dword [dword 0x469014]
ret
mov eax,[esp+0x30]
mov dword [eax+0x4],0x4044d7
call dword 0x5888
mov edx,[eax+0x0]
mov ecx,[edx]
mov [eax+0x0],ecx
mov eax,[edx+0xc]
and dword [eax+0x4],byte -0x3
cmp dword [eax],0xeedfade
jz 0x34c6
mov eax,[edx+0x8]
call dword 0x2bf0
call dword 0x2fcc
xor eax,eax
add esp,byte +0x14
mov edx,[fs:eax]
pop ecx
mov edx,[edx]
mov [ecx],edx
pop ebp
pop edi
pop esi
pop ebx
mov eax,0x1
ret
lea eax,[eax+0x0]
call dword 0x5888
mov edx,[eax+0x0]
mov ecx,[edx]
mov [eax+0x0],ecx
mov eax,[edx+0x8]
call dword 0x2bf0
pop edx
mov esp,[esp+0x2c]
xor eax,eax
pop ecx
mov [fs:eax],ecx
pop eax
pop ebp
call dword 0x3094
jmp edx
ret
xor edx,edx
mov ecx,[esp+0x8]
mov eax,[esp+0x4]
add ecx,byte +0x5
mov [fs:edx],eax
call ecx
ret 0xc
ret
mov eax,eax
push ebp
mov ebp,esp
mov edx,[ebp+0x8]
mov eax,[edx]
cmp eax,0xc0000092
jg 0x3563
jz 0x3595
cmp eax,0xc000008e
jg 0x3555
jz 0x3599
sub eax,0xc0000005
jz 0x35a5
sub eax,0x87
jz 0x358d
dec eax
jz 0x35a1
jmp short 0x35b5
add eax,0x3fffff71
sub eax,byte +0x2
jc 0x3595
jz 0x3591
jmp short 0x35b5
cmp eax,0xc0000096
jg 0x357b
jz 0x35a9
sub eax,0xc0000093
jz 0x35a1
dec eax
jz 0x3589
dec eax
jz 0x359d
jmp short 0x35b5
sub eax,0xc00000fd
jz 0x35b1
sub eax,byte +0x3d
jz 0x35ad
jmp short 0x35b5
mov al,0xc8
jmp short 0x35b7
mov al,0xc9
jmp short 0x35b7
mov al,0xcd
jmp short 0x35b7
mov al,0xcf
jmp short 0x35b7
mov al,0xc8
jmp short 0x35b7
mov al,0xd7
jmp short 0x35b7
mov al,0xce
jmp short 0x35b7
mov al,0xd8
jmp short 0x35b7
mov al,0xda
jmp short 0x35b7
mov al,0xd9
jmp short 0x35b7
mov al,0xca
jmp short 0x35b7
mov al,0xff
movzx eax,al
mov edx,[edx+0xc]
call dword 0x1f58
pop ebp
ret 0x4
mov eax,eax
mov eax,[esp+0x4]
test dword [eax+0x4],0x6
jnz dword 0x3662
cmp byte [dword 0x467024],0x0
ja 0x35f1
lea eax,[esp+0x4]
push eax
call dword 0x21c
cmp eax,byte +0x0
jz 0x3662
mov eax,[esp+0x4]
cld
call dword 0x2ab4
mov edx,[esp+0x8]
push byte +0x0
push eax
push dword 0x40460e
push edx
call dword [dword 0x469018]
mov ebx,[esp+0x4]
cmp dword [ebx],0xeedfade
mov edx,[ebx+0x14]
mov eax,[ebx+0x18]
jz 0x363d
mov edx,[dword 0x469010]
test edx,edx
jz dword 0x3528
mov eax,ebx
call edx
test eax,eax
jz dword 0x3528
mov edx,[ebx+0xc]
call dword 0x30b0
mov ecx,[dword 0x469004]
test ecx,ecx
jz 0x364e
call ecx
mov ecx,[esp+0x4]
mov eax,0xd9
mov edx,[ecx+0x14]
mov [esp],edx
jmp dword 0x3a10
xor eax,eax
ret
lea eax,[eax+0x0]
xor edx,edx
lea eax,[ebp-0xc]
mov ecx,[fs:edx]
mov [fs:edx],eax
mov [eax],ecx
mov dword [eax+0x4],0x4045c8
mov [eax+0x8],ebp
mov [0x46b7c8],eax
ret
lea eax,[eax+0x0]
xor edx,edx
mov eax,[0x46b7c8]
test eax,eax
jz 0x36af
mov ecx,[fs:edx]
cmp eax,ecx
jnz 0x36a2
mov eax,[eax]
mov [fs:edx],eax
ret
mov ecx,[ecx]
cmp ecx,byte -0x1
jz 0x36af
cmp [ecx],eax
jnz 0x36a0
mov eax,[eax]
mov [ecx],eax
ret
push ebp
mov ebp,esp
push ebx
push esi
push edi
mov eax,[0x46b7cc]
test eax,eax
jz 0x370d
mov ebx,[dword 0x46b7d0]
mov edi,[eax+0x4]
xor eax,eax
push ebp
push dword 0x4046f9
push dword [fs:eax]
mov [fs:eax],esp
test ebx,ebx
jng 0x36ef
dec ebx
mov [dword 0x46b7d0],ebx
mov esi,[edi+ebx*8+0x4]
test esi,esi
jz 0x36eb
call esi
test ebx,ebx
jg 0x36da
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
jmp short 0x370d
jmp dword 0x30d0
call dword 0x36b0
call dword 0x348c
call dword 0x34e0
pop edi
pop esi
pop ebx
pop ebp
ret
mov eax,eax
push ebp
mov ebp,esp
push ecx
push ebx
push esi
push edi
mov eax,[0x46b7cc]
test eax,eax
jz 0x3775
mov edi,[eax]
xor ebx,ebx
mov eax,[eax+0x4]
mov [ebp-0x4],eax
xor eax,eax
push ebp
push dword 0x404761
push dword [fs:eax]
mov [fs:eax],esp
cmp edi,ebx
jng 0x3757
mov eax,[ebp-0x4]
mov esi,[eax+ebx*8]
inc ebx
mov [dword 0x46b7d0],ebx
test esi,esi
jz 0x3753
call esi
cmp edi,ebx
jg 0x3740
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
jmp short 0x3775
jmp dword 0x30d0
call dword 0x36b0
call dword 0x348c
call dword 0x34e0
pop edi
pop esi
pop ebx
pop ecx
pop ebp
ret
nop
mov dword [dword 0x469014],0x40120c

mov dword [dword 0x469018],0x401214

mov [0x46b7cc],eax
xor eax,eax
mov [0x46b7d0],eax
mov [dword 0x46b7d4],edx
mov eax,[edx+0x4]
mov [0x46902c],eax
call dword 0x3668
mov byte [dword 0x469034],0x0
call dword 0x3714
ret
push ebx
xor ebx,ebx
push edi
push esi
mov edi,[eax+ebx]
lea esi,[eax+ebx+0x4]
mov eax,[esi+0x4]
mov edx,[esi]
mov eax,[eax+ebx]
add edx,ebx
call dword 0x5750
add esi,byte +0x8
dec edi
jnz 0x37c8
pop esi
pop edi
pop ebx
ret
lea eax,[eax+0x0]
push ebx
xor ebx,ebx
push edi
push esi
mov edi,[eax+ebx]
lea esi,[eax+ebx+0x4]
mov eax,[esi+0x4]
mov edx,[esi]
mov eax,[eax+ebx]
add eax,[esi+0x8]
mov [edx+ebx],eax
add esi,byte +0xc
dec edi
jnz 0x37f0
pop esi
pop edi
pop ebx
ret
push ebx
push esi
push edi
mov edi,0x467758
mov bl,0x10
mov esi,[dword 0x467000]
mov eax,esi
mov ecx,0xa
cdq
idiv ecx
add dl,0x30
movzx eax,bl
mov [edi+eax],dl
mov ecx,0xa
mov eax,esi
cdq
idiv ecx
mov esi,eax
dec ebx
test esi,esi
jnz 0x3818
mov bl,0x1c
mov esi,[dword 0x467004]
mov eax,esi
and eax,byte +0xf
movzx eax,byte [eax+0x467778]
movzx edx,bl
mov [edi+edx],al
mov ecx,0x10
mov eax,esi
xor edx,edx
div ecx
mov esi,eax
dec ebx
test esi,esi
jnz 0x3844
pop edi
pop esi
pop ebx
ret
xor eax,eax
xchg eax,[dword 0x467000]
neg eax
sbb eax,eax
inc eax
mov edi,0x46b7c4
mov ebx,[edi+0x18]
mov ebp,[edi+0x14]
push dword [edi+0x1c]
push dword [edi+0x20]
mov esi,[edi]
mov ecx,0xb
rep movsd
pop edi
pop esi
leave
ret 0xc
ret
mov eax,eax
push ecx
cmp byte [dword 0x469048],0x0
jz 0x38fd
cmp word [dword 0x46921c],0xd7b2

jnz 0x38c5
cmp dword [dword 0x469224],byte +0x0
jna 0x38c5
mov eax,0x469218
call dword [dword 0x469234]
push byte +0x0
lea eax,[esp+0x4]
push eax
push byte +0x1e
push dword 0x467758
push byte -0xb
call dword 0x204
push eax
call dword 0x224
push byte +0x0
lea eax,[esp+0x4]
push eax
push byte +0x2
push dword 0x404924
push byte -0xb
call dword 0x204
push eax
call dword 0x224
pop edx
ret
cmp byte [dword 0x46702c],0x0
jnz 0x3919
push byte +0x0
push dword 0x467750
push dword 0x467758
push byte +0x0
call dword 0x244
pop edx
ret
add bh,bh
db 0xff
db 0xff
inc dword [edx]
add [eax],al
add [dword 0x5300000a],cl
push esi
push edi
push ebp
mov ebx,0x46b7c4
mov edi,0x469044
cmp byte [ebx+0x28],0x0
jnz 0x3950
cmp dword [edi],byte +0x0
jz 0x3950
mov eax,[edi]
mov esi,eax
xor eax,eax
mov [edi],eax
call esi
cmp dword [edi],byte +0x0
jnz 0x3941
cmp dword [dword 0x467004],byte +0x0
jz 0x396a
call dword 0x3808
call dword 0x389c
xor eax,eax
mov [0x467004],eax
cmp byte [ebx+0x28],0x2
jnz 0x397e
cmp dword [dword 0x467000],byte +0x0
jnz 0x397e
xor eax,eax
mov [ebx+0xc],eax
call dword 0x36b0
cmp byte [ebx+0x28],0x1
jna 0x3992
cmp dword [dword 0x467000],byte +0x0
jz 0x39b5
mov edi,[ebx+0x10]
test edi,edi
jz 0x39b5
mov eax,edi
call dword 0x5200
mov ebp,[ebx+0x10]
mov esi,[ebp+0x10]
cmp esi,[ebp+0x4]
jz 0x39b5
test esi,esi
jz 0x39b5
push esi
call dword 0x25c
call dword 0x3688
cmp byte [ebx+0x28],0x1
jnz 0x39c3
call dword [ebx+0x24]
cmp byte [ebx+0x28],0x0
jz 0x39ce
call dword 0x386c
cmp dword [ebx],byte +0x0
jnz 0x39ed
cmp dword [dword 0x469024],byte +0x0
jz 0x39e2
call dword [dword 0x469024]
mov eax,[0x467000]
push eax
call dword 0x23c
mov eax,[ebx]
mov esi,eax
mov edi,ebx
mov ecx,0xb
rep movsd
jmp dword 0x396a
pop ebp
pop edi
pop esi
pop ebx
ret
mov [0x467000],eax
call dword 0x3928
ret
nop
pop dword [dword 0x467004]
jmp dword 0x3a04
ret
mov edx,[eax]
test edx,edx
jz 0x3a3e
mov dword [eax],0x0
mov ecx,[edx-0x8]
dec ecx
jl 0x3a3e
lock dec dword [edx-0x8]
jnz 0x3a3e
push eax
lea eax,[edx-0x8]
call dword 0x1e7c
pop eax
ret
nop
push ebx
push esi
mov ebx,eax
mov esi,edx
mov edx,[ebx]
test edx,edx
jz 0x3a66
mov dword [ebx],0x0
mov ecx,[edx-0x8]
dec ecx
jl 0x3a66
lock dec dword [edx-0x8]
jnz 0x3a66
lea eax,[edx-0x8]
call dword 0x1e7c
add ebx,byte +0x4
dec esi
jnz 0x3a46
pop esi
pop ebx
ret
nop
test edx,edx
jz 0x3a98
mov ecx,[edx-0x8]
inc ecx
jg 0x3a94
push eax
push edx
mov eax,[edx-0x4]
call dword 0x3ae0
mov edx,eax
pop eax
push edx
mov ecx,[eax-0x4]
call dword 0x2050
pop edx
pop eax
jmp short 0x3a98
lock inc dword [edx-0x8]
xchg edx,[eax]
test edx,edx
jz 0x3ab2
mov ecx,[edx-0x8]
dec ecx
jl 0x3ab2
lock dec dword [edx-0x8]
jnz 0x3ab2
lea eax,[edx-0x8]
call dword 0x1e7c
ret
nop
test edx,edx
jz 0x3ac2
mov ecx,[edx-0x8]
inc ecx
jng 0x3ac2
lock inc dword [edx-0x8]
xchg edx,[eax]
test edx,edx
jz 0x3adc
mov ecx,[edx-0x8]
dec ecx
jl 0x3adc
lock dec dword [edx-0x8]
jnz 0x3adc
lea eax,[edx-0x8]
call dword 0x1e7c
ret
lea eax,[eax+0x0]
test eax,eax
jng 0x3b08
push eax
add eax,byte +0xa
and eax,byte -0x2
push eax
call dword 0x1e60
pop edx
mov word [edx+eax-0x2],0x0
add eax,byte +0x8
pop edx
mov [eax-0x4],edx
mov dword [eax-0x8],0x1
ret
xor eax,eax
ret
nop
push ebx
push esi
push edi
mov ebx,eax
mov esi,edx
mov edi,ecx
mov eax,edi
call dword 0x3ae0
mov ecx,edi
mov edi,eax
test esi,esi
jz 0x3b2d
mov edx,eax
mov eax,esi
call dword 0x2050
mov eax,ebx
call dword 0x3a1c
mov [ebx],edi
pop edi
pop esi
pop ebx
ret
mov eax,eax
push ebp
mov ebp,esp
push byte +0x0
push byte +0x0
push edx
push eax
mov eax,[ebp+0x8]
push eax
push ecx
push byte +0x0
mov eax,[0x4695b8]
push eax
call dword 0x2dc
pop ebp
ret 0x4
nop
push ebp
mov ebp,esp
push edx
push eax
mov eax,[ebp+0x8]
push eax
push ecx
push byte +0x0
mov eax,[0x4695b8]
push eax
call dword 0x2bc
pop ebp
ret 0x4
nop
push ebx
push esi
push edi
push ebp
add esp,0xfffff004
push eax
add esp,byte -0x4
mov esi,ecx
mov [esp],edx
mov edi,eax
test esi,esi
jg 0x3b9a
mov eax,edi
call dword 0x3a1c
jmp short 0x3bf9
lea ebp,[esi+0x1]
cmp ebp,0x7ff
jnl 0x3bcd
push esi
lea eax,[esp+0x8]
mov ecx,[esp+0x4]
mov edx,0xfff
call dword 0x3b3c
mov ebx,eax
test ebx,ebx
jl 0x3bcd
lea edx,[esp+0x4]
mov eax,edi
mov ecx,ebx
call dword 0x3b0c
jmp short 0x3bf9
mov ebx,ebp
add ebx,ebx
mov eax,edi
mov edx,ebx
call dword 0x413c
push esi
mov eax,[edi]
mov ecx,[esp+0x4]
mov edx,ebx
call dword 0x3b3c
mov ebx,eax
test ebx,ebx
jnl 0x3bf0
xor ebx,ebx
mov eax,edi
mov edx,ebx
call dword 0x413c
add esp,0x1004
pop ebp
pop edi
pop esi
pop ebx
ret
push edx
mov edx,esp
mov ecx,0x1
call dword 0x3b0c
pop edx
ret
nop
xor ecx,ecx
test edx,edx
jz 0x3c3b
push edx
cmp cl,[edx]
jz 0x3c36
cmp cl,[edx+0x1]
jz 0x3c35
cmp cl,[edx+0x2]
jz 0x3c34
cmp cl,[edx+0x3]
jz 0x3c33
add edx,byte +0x4
jmp short 0x3c1b
inc edx
inc edx
inc edx
mov ecx,edx
pop edx
sub ecx,edx
jmp dword 0x3b0c
ret
lea eax,[eax+0x0]
xor ecx,ecx
test edx,edx
jz 0x3c77
push edx
cmp cx,[edx]
jz 0x3c70
cmp cx,[edx+0x2]
jz 0x3c6d
cmp cx,[edx+0x4]
jz 0x3c6a
cmp cx,[edx+0x6]
jz 0x3c67
add edx,byte +0x8
jmp short 0x3c4b
add edx,byte +0x2
add edx,byte +0x2
add edx,byte +0x2
mov ecx,edx
pop edx
sub ecx,edx
shr ecx,1
jmp dword 0x3b78
ret
lea eax,[eax+0x0]
xor ecx,ecx
mov cl,[edx]
inc edx
jmp dword 0x3b0c
ret
nop
push edi
push eax
push ecx
mov edi,edx
xor eax,eax
repne scasb
jnz 0x3c99
not ecx
pop eax
add ecx,eax
pop eax
pop edi
jmp dword 0x3b0c
ret
xor ecx,ecx
test edx,edx
jz 0x3caf
mov ecx,[edx-0x4]
shr ecx,1
jmp dword 0x3b78
ret
lea eax,[eax+0x0]
push ebx
test edx,edx
jz 0x3cd5
mov ebx,[edx-0x4]
test ebx,ebx
jz 0x3cd5
cmp ecx,ebx
jl 0x3cca
mov ecx,ebx
mov [eax],cl
inc eax
xchg eax,edx
call dword 0x2050
pop ebx
ret
mov byte [eax],0x0
pop ebx
ret
mov eax,eax
test eax,eax
jz 0x3ce5
sub eax,byte +0x4
mov eax,[eax]
ret
mov eax,eax
test edx,edx
jz 0x3d32
mov ecx,[eax]
test ecx,ecx
jz dword 0x3a70
push ebx
push esi
push edi
mov ebx,eax
mov esi,edx
mov edi,[ecx-0x4]
mov edx,[esi-0x4]
add edx,edi
jo 0x3d2d
cmp esi,ecx
jz 0x3d22
call dword 0x413c
mov eax,esi
mov ecx,[esi-0x4]
mov edx,[ebx]
add edx,edi
call dword 0x2050
pop edi
pop esi
pop ebx
ret
call dword 0x413c
mov eax,[ebx]
mov ecx,edi
jmp short 0x3d15
jmp dword 0x2ac0
ret
nop
test edx,edx
jz 0x3d9b
test ecx,ecx
jz dword 0x3a70
cmp edx,[eax]
jz 0x3da2
cmp ecx,[eax]
jz 0x3d56
push eax
push ecx
call dword 0x3a70
pop edx
pop eax
jmp dword 0x3ce8
push ebx
push esi
push edi
mov ebx,edx
mov esi,ecx
push eax
mov eax,[ebx-0x4]
add eax,[esi-0x4]
jo 0x3da9
call dword 0x3ae0
mov edi,eax
mov edx,eax
mov eax,ebx
mov ecx,[ebx-0x4]
call dword 0x2050
mov edx,edi
mov eax,esi
mov ecx,[esi-0x4]
add edx,[ebx-0x4]
call dword 0x2050
pop eax
mov edx,edi
test edi,edi
jz 0x3d92
dec dword [edi-0x8]
call dword 0x3a70
pop edi
pop esi
pop ebx
ret
mov edx,ecx
jmp dword 0x3a70
mov edx,ecx
jmp dword 0x3ce8
jmp dword 0x2ac0
ret
nop
push ebx
push esi
push edi
push edx
push eax
mov ebx,edx
xor edi,edi
mov ecx,[esp+edx*4+0x14]
test ecx,ecx
jz 0x3dcd
cmp [eax],ecx
jnz 0x3dcd
mov edi,ecx
mov eax,[ecx-0x4]
dec edx
jmp short 0x3dcf
xor eax,eax
mov ecx,[esp+edx*4+0x14]
test ecx,ecx
jz 0x3de2
add eax,[ecx-0x4]
jo 0x3e3b
cmp edi,ecx
jnz 0x3de2
xor edi,edi
dec edx
jnz 0x3dcf
test edi,edi
jz 0x3e00
mov edx,eax
mov eax,[esp]
mov esi,[edi-0x4]
call dword 0x413c
mov edi,[esp]
push dword [edi]
add esi,[edi]
dec ebx
jmp short 0x3e08
call dword 0x3ae0
push eax
mov esi,eax
mov eax,[esp+ebx*4+0x18]
mov edx,esi
test eax,eax
jz 0x3e1c
mov ecx,[eax-0x4]
add esi,ecx
call dword 0x2050
dec ebx
jnz 0x3e08
pop edx
pop eax
test edi,edi
jnz 0x3e31
test edx,edx
jz 0x3e2c
dec dword [edx-0x8]
call dword 0x3a70
pop edx
pop edi
pop esi
pop ebx
pop eax
lea esp,[esp+edx*4]
jmp eax
jmp dword 0x2ac0
ret
lea eax,[eax+0x0]
cmp eax,edx
jz 0x3e78
test eax,edx
jz 0x3e8c
movzx ecx,byte [eax]
sub cl,[edx]
jnz 0x3e78
push ebx
mov ebx,[eax-0x4]
sub ebx,[edx-0x4]
push ebx
adc ecx,byte -0x1
and ecx,ebx
sub ecx,[eax-0x4]
sub eax,ecx
sub edx,ecx
mov ebx,[ecx+eax]
xor ebx,[ecx+edx]
jnz 0x3e79
add ecx,byte +0x4
js 0x3e67
pop eax
add eax,eax
pop ebx
ret
bsf ebx,ebx
shr ebx,byte 0x3
add ecx,ebx
jns 0x3e74
mov al,[ecx+eax]
cmp al,[ecx+edx]
pop ebx
pop ebx
ret
test eax,eax
jz 0x3e98
test edx,edx
jnz 0x3e4c
cmp [eax-0x4],edx
ret
cmp eax,[edx-0x4]
ret
test eax,eax
jz 0x3eaa
mov edx,[eax-0x8]
inc edx
jng 0x3eaa
lock inc dword [eax-0x8]
ret
nop
test eax,eax
jz 0x3eba
ret
db 0xff
db 0xff
db 0xff
inc dword [eax]
add [eax],al
add [eax],al
mov eax,0x404eb9
ret
mov edx,[eax]
test edx,edx
jz 0x3efe
mov ecx,[edx-0x8]
dec ecx
jz 0x3efe
push ebx
mov ebx,eax
mov eax,[edx-0x4]
call dword 0x3ae0
mov edx,eax
mov eax,[ebx]
mov [ebx],edx
push eax
mov ecx,[eax-0x4]
call dword 0x2050
pop eax
mov ecx,[eax-0x8]
dec ecx
jl 0x3efb
lock dec dword [eax-0x8]
jnz 0x3efb
lea eax,[eax-0x8]
call dword 0x1e7c
mov edx,[ebx]
pop ebx
mov eax,edx
ret
lea eax,[eax+0x0]
jmp dword 0x3ec0
ret
mov eax,eax
jmp dword 0x3ec0
ret
mov eax,eax
push ebx
test eax,eax
jz 0x3f46
mov ebx,[eax-0x4]
test ebx,ebx
jz 0x3f46
dec edx
jl 0x3f3e
cmp edx,ebx
jnl 0x3f46
sub ebx,edx
test ecx,ecx
jl 0x3f46
cmp ecx,ebx
jg 0x3f42
add edx,eax
mov eax,[esp+0x8]
call dword 0x3b0c
jmp short 0x3f4f
xor edx,edx
jmp short 0x3f27
mov ecx,ebx
jmp short 0x3f31
mov eax,[esp+0x8]
call dword 0x3a1c
pop ebx
ret 0x4
ret
push ebx
push esi
push edi
mov ebx,eax
mov esi,edx
mov edi,ecx
call dword 0x3f04
mov edx,[ebx]
test edx,edx
jz 0x3f98
mov ecx,[edx-0x4]
dec esi
jl 0x3f98
cmp esi,ecx
jnl 0x3f98
test edi,edi
jng 0x3f98
sub ecx,esi
cmp edi,ecx
jng 0x3f7e
mov edi,ecx
sub ecx,edi
add edx,esi
lea eax,[edi+edx]
call dword 0x2050
mov edx,[ebx]
mov eax,ebx
mov edx,[edx-0x4]
sub edx,edi
call dword 0x413c
pop edi
pop esi
pop ebx
ret
test eax,eax
jz 0x3ff6
push ebx
push esi
push edi
push ebp
mov ebx,eax
mov esi,edx
mov edi,ecx
mov edx,[edx]
push edx
test edx,edx
jz 0x3fb4
mov edx,[edx-0x4]
dec edi
jnl 0x3fb9
xor edi,edi
cmp edi,edx
jng 0x3fbf
mov edi,edx
mov ebp,[ebx-0x4]
mov eax,esi
add edx,ebp
call dword 0x413c
pop eax
cmp eax,ebx
jnz 0x3fd2
mov ebx,[esi]
mov eax,[esi]
lea edx,[edi+ebp]
mov ecx,[eax-0x4]
sub ecx,edx
add edx,eax
add eax,edi
call dword 0x2050
mov eax,ebx
mov edx,[esi]
mov ecx,ebp
add edx,edi
call dword 0x2050
pop ebp
pop edi
pop esi
pop ebx
ret
nop
push ebx
push esi
add esp,byte -0x10
test edx,edx
jz 0x404f
test eax,eax
jz 0x404f
mov esi,[edx-0x4]
mov ebx,[eax-0x4]
cmp esi,ebx
jl 0x404f
test ebx,ebx
jng 0x404f
dec ebx
add esi,edx
add edx,ebx
mov [esp+0x8],esi
add eax,ebx
mov [esp+0x4],edx
neg ebx
movzx ecx,byte [eax]
mov [esp],ebx
jnz dword 0x40c9
sub esi,byte +0x2
mov [esp+0xc],esi
cmp cl,[edx]
jz 0x407c
cmp cl,[edx+0x1]
jz 0x408c
add edx,byte +0x2
cmp edx,[esp+0xc]
jc 0x4053
cmp edx,[esp+0x8]
jc 0x4037
xor eax,eax
jmp short 0x4083
cmp cl,[edx]
jz 0x407c
cmp cl,[edx+0x1]
jz 0x408c
cmp cl,[edx+0x2]
jz 0x4079
cmp cl,[edx+0x3]
jz 0x4089
add edx,byte +0x4
cmp edx,[esp+0xc]
jc 0x4053
cmp edx,[esp+0x8]
jc 0x4037
xor eax,eax
jmp short 0x4083
add edx,byte +0x2
inc edx
mov eax,edx
sub eax,[esp+0x4]
add esp,byte +0x10
pop esi
pop ebx
ret
add edx,byte +0x2
add edx,byte +0x2
xor eax,eax
cmp edx,[esp+0x8]
ja 0x409d
mov eax,edx
sub eax,[esp+0x4]
add esp,byte +0x10
pop esi
pop ebx
ret
cmp cl,[edx]
jz 0x411c
cmp cl,[edx+0x1]
jz 0x40ef
cmp cl,[edx+0x2]
jz 0x4119
cmp cl,[edx+0x3]
jz 0x40ec
add edx,byte +0x4
cmp edx,[esp+0xc]
jc 0x40a3
cmp edx,[esp+0x8]
jc 0x40d0
xor eax,eax
jmp short 0x4113
sub esi,byte +0x2
mov [esp+0xc],esi
cmp cl,[edx]
jz 0x411c
cmp cl,[edx+0x1]
jz 0x40ef
add edx,byte +0x2
cmp edx,[esp+0xc]
jc 0x40a3
cmp edx,[esp+0x8]
jc 0x40d0
xor eax,eax
jmp short 0x4113
add edx,byte +0x2
mov esi,[esp]
movzx ebx,word [eax+esi]
cmp bx,[edx+esi+0x1]
jnz 0x40d9
add esi,byte +0x2
jl 0x40f2
add edx,byte +0x2
xor eax,eax
cmp edx,[esp+0x8]
ja 0x4113
mov eax,edx
sub eax,[esp+0x4]
add esp,byte +0x10
pop esi
pop ebx
ret
add edx,byte +0x2
mov esi,[esp]
movzx ebx,word [eax+esi]
cmp bx,[edx+esi]
jnz 0x40d4
add esi,byte +0x2
jl 0x411f
inc edx
mov eax,edx
sub eax,[esp+0x4]
add esp,byte +0x10
pop esi
pop ebx
ret
nop
push ebx
push esi
push edi
mov ebx,eax
mov esi,edx
xor edi,edi
test edx,edx
jng 0x4191
mov eax,[ebx]
test eax,eax
jz 0x4172
cmp dword [eax-0x8],byte +0x1
jnz 0x4172
sub eax,byte +0x8
add edx,byte +0x9
push eax
mov eax,esp
call dword 0x1e94
pop eax
add eax,byte +0x8
mov [ebx],eax
mov [eax-0x4],esi
mov byte [esi+eax],0x0
jmp short 0x419a
mov eax,edx
call dword 0x3ae0
mov edi,eax
mov eax,[ebx]
test eax,eax
jz 0x4191
mov edx,edi
mov ecx,[eax-0x4]
cmp ecx,esi
jl 0x418c
mov ecx,esi
call dword 0x2050
mov eax,ebx
call dword 0x3a1c
mov [ebx],edi
pop edi
pop esi
pop ebx
ret
mov eax,eax
mov al,0x1
jmp dword 0x1fb0
ret
test eax,eax
jz 0x41bc
push eax
push byte +0x0
call dword 0x2ec
test eax,eax
jz dword 0x41a0
ret
lea eax,[eax+0x0]
xchg edx,[eax]
test edx,edx
jz 0x41cc
push edx
call dword 0x2fc
ret
lea eax,[eax+0x0]
mov edx,[eax]
test edx,edx
jz 0x41e4
mov dword [eax],0x0
push eax
push edx
call dword 0x2fc
pop eax
ret
lea eax,[eax+0x0]
push ebx
push esi
mov ebx,eax
mov esi,edx
mov eax,[ebx]
test eax,eax
jz 0x4200
mov dword [ebx],0x0
push eax
call dword 0x2fc
add ebx,byte +0x4
dec esi
jnz 0x41ee
pop esi
pop ebx
ret
lea eax,[eax+0x0]
cmp [eax],edx
jz 0x4233
test edx,edx
jz dword 0x41d0
mov ecx,[edx-0x4]
shr ecx,1
jz dword 0x41d0
push ecx
push edx
push eax
call dword 0x2f4
test eax,eax
jz dword 0x41a0
ret
jmp dword 0x420c
ret
mov eax,eax
push ebx
push esi
push edi
push ebp
add esp,0xfffff004
push eax
add esp,byte -0x4
mov esi,ecx
mov [esp],edx
mov edi,eax
test esi,esi
jg 0x425e
mov eax,edi
call dword 0x41d0
jmp short 0x42bb
lea ebp,[esi+0x1]
cmp ebp,0x7ff
jnl 0x4291
push esi
lea eax,[esp+0x8]
mov ecx,[esp+0x4]
mov edx,0x7ff
call dword 0x3b5c
mov ebx,eax
test ebx,ebx
jng 0x4291
lea edx,[esp+0x4]
mov eax,edi
mov ecx,ebx
call dword 0x42c8
jmp short 0x42bb
mov ebx,ebp
mov eax,edi
mov edx,ebx
call dword 0x44dc
push esi
mov eax,[edi]
mov ecx,[esp+0x4]
mov edx,ebx
call dword 0x3b5c
mov ebx,eax
test ebx,ebx
jnl 0x42b2
xor ebx,ebx
mov eax,edi
mov edx,ebx
call dword 0x44dc
add esp,0x1004
pop ebp
pop edi
pop esi
pop ebx
ret
mov eax,eax
test ecx,ecx
jz dword 0x41d0
push eax
push ecx
push edx
call dword 0x2ec
test eax,eax
jz dword 0x41a0
pop edx
push dword [edx]
mov [edx],eax
call dword 0x2fc
ret
nop
push edx
mov edx,esp
mov ecx,0x1
call dword 0x42c8
pop edx
ret
nop
xor ecx,ecx
test edx,edx
jz 0x432f
push edx
cmp cx,[edx]
jz 0x4328
cmp cx,[edx+0x2]
jz 0x4325
cmp cx,[edx+0x4]
jz 0x4322
cmp cx,[edx+0x6]
jz 0x431f
add edx,byte +0x8
jmp short 0x4303
add edx,byte +0x2
add edx,byte +0x2
add edx,byte +0x2
mov ecx,edx
pop edx
sub ecx,edx
shr ecx,1
jmp dword 0x42c8
ret
lea eax,[eax+0x0]
xor ecx,ecx
test edx,edx
jz 0x4341
mov ecx,[edx-0x4]
jmp dword 0x423c
ret
nop
test eax,eax
jz 0x4350
ret
nop
add [eax],al
mov eax,0x40534e
ret
mov eax,eax
test eax,eax
jz 0x4361
mov eax,[eax-0x4]
shr eax,1
ret
mov eax,eax
push ebx
push esi
push edi
push ebp
push ecx
mov ebp,edx
mov [esp],eax
mov eax,ebp
call dword 0x4358
mov ebx,eax
test ebx,ebx
jz 0x43bd
mov eax,[esp]
mov eax,[eax]
call dword 0x4358
mov esi,eax
lea eax,[ebx+esi]
call dword 0x41a8
mov edi,eax
test esi,esi
jng 0x43a5
mov ecx,esi
add ecx,ecx
mov edx,edi
mov eax,[esp]
mov eax,[eax]
call dword 0x2050
mov ecx,ebx
add ecx,ecx
lea edx,[edi+esi*2]
mov eax,ebp
call dword 0x2050
mov eax,[esp]
mov edx,edi
call dword 0x41c0
pop edx
pop ebp
pop edi
pop esi
pop ebx
ret
nop
push ebx
push esi
push edx
push eax
mov ebx,edx
xor eax,eax
mov ecx,[esp+edx*4+0x10]
test ecx,ecx
jz 0x43d7
add eax,[ecx-0x4]
dec edx
jnz 0x43cc
shr eax,1
call dword 0x41a8
push eax
mov esi,eax
mov eax,[esp+ebx*4+0x14]
mov edx,esi
test eax,eax
jz 0x43f8
mov ecx,[eax-0x4]
add esi,ecx
call dword 0x2050
dec ebx
jnz 0x43e4
pop edx
pop eax
call dword 0x41c0
pop edx
pop esi
pop ebx
pop eax
lea esp,[esp+edx*4]
jmp eax
ret
push ebx
push esi
push edi
mov esi,eax
mov edi,edx
cmp eax,edx
jz 0x4489
test esi,esi
jz 0x446c
test edi,edi
jz 0x4473
mov eax,[esi-0x4]
mov edx,[edi-0x4]
sub eax,edx
ja 0x442b
add edx,eax
push edx
shr edx,byte 0x2
jz 0x4457
mov ecx,[esi]
mov ebx,[edi]
cmp ecx,ebx
jnz 0x447a
dec edx
jz 0x4451
mov ecx,[esi+0x4]
mov ebx,[edi+0x4]
cmp ecx,ebx
jnz 0x447a
add esi,byte +0x8
add edi,byte +0x8
dec edx
jnz 0x4431
jmp short 0x4457
add esi,byte +0x4
add edi,byte +0x4
pop edx
and edx,byte +0x2
jz 0x4468
mov cx,[esi]
mov bx,[edi]
cmp cx,bx
jnz 0x4489
add eax,eax
jmp short 0x4489
mov edx,[edi-0x4]
sub eax,edx
jmp short 0x4489
mov eax,[esi-0x4]
sub eax,edx
jmp short 0x4489
pop edx
cmp cx,bx
jnz 0x4489
shr ecx,byte 0x10
shr ebx,byte 0x10
cmp cx,bx
pop edi
pop esi
pop ebx
ret
lea eax,[eax+0x0]
push ebp
mov ebp,esp
push ebx
push esi
push edi
mov edi,ecx
mov ebx,edx
mov esi,eax
mov eax,esi
call dword 0x4358
cmp ebx,byte +0x1
jnl 0x44ac
xor ebx,ebx
jmp short 0x44b3
dec ebx
cmp eax,ebx
jnl 0x44b3
mov ebx,eax
test edi,edi
jnl 0x44bb
xor eax,eax
jmp short 0x44c3
sub eax,ebx
cmp edi,eax
jnl 0x44c3
mov eax,edi
mov edx,ebx
add edx,edx
add edx,esi
mov ecx,[ebp+0x8]
xchg eax,ecx
call dword 0x42c8
pop edi
pop esi
pop ebx
pop ebp
ret 0x4
lea eax,[eax+0x0]
push ebx
push esi
push edi
mov esi,edx
mov edi,eax
xor ebx,ebx
test esi,esi
jng 0x4510
mov eax,esi
call dword 0x41a8
mov ebx,eax
mov eax,[edi]
call dword 0x4358
test eax,eax
jng 0x4510
cmp esi,eax
jnl 0x4503
mov eax,esi
mov ecx,eax
add ecx,ecx
mov edx,ebx
mov eax,[edi]
call dword 0x2050
mov eax,edi
mov edx,ebx
call dword 0x41c0
pop edi
pop esi
pop ebx
ret
lea eax,[eax+0x0]
mov edx,[eax]
test edx,edx
jz 0x453e
push eax
mov ecx,[edx-0x4]
shr ecx,1
push ecx
push edx
call dword 0x2ec
pop edx
test eax,eax
jz dword 0x41a0
mov [edx],eax
ret
nop
xor ecx,ecx
push ebx
mov cl,[edx+0x1]
push esi
push edi
mov ebx,eax
lea esi,[ecx+edx+0xa]
mov edi,[ecx+edx+0x6]
mov edx,[esi]
mov eax,[esi+0x4]
add eax,ebx
mov edx,[edx]
mov ecx,0x1
call dword 0x4570
add esi,byte +0x8
dec edi
jg 0x4552
pop edi
pop esi
pop ebx
ret
nop
test ecx,ecx
jz dword 0x4602
push ebx
push esi
push edi
mov ebx,eax
mov esi,edx
mov edi,ecx
xor edx,edx
mov al,[esi]
mov dl,[esi+0x1]
xor ecx,ecx
cmp al,0xa
jz 0x45b0
cmp al,0xb
jz 0x45b0
cmp al,0xc
jz 0x45ba
cmp al,0xd
jz 0x45cd
cmp al,0xe
jz 0x45eb
cmp al,0xf
jz 0x45b0
cmp al,0x11
jz 0x45b0
mov al,0x2
pop edi
pop esi
pop ebx
jmp dword 0x1fb0
mov [ebx],ecx
add ebx,byte +0x4
dec edi
jg 0x45b0
jmp short 0x45ff
mov [ebx],ecx
mov [ebx+0x4],ecx
mov [ebx+0x8],ecx
mov [ebx+0xc],ecx
add ebx,byte +0x10
dec edi
jg 0x45ba
jmp short 0x45ff
push ebp
mov ebp,edx
mov edx,[esi+ebp+0xa]
mov eax,ebx
add ebx,[esi+ebp+0x2]
mov ecx,[esi+ebp+0x6]
mov edx,[edx]
call dword 0x4570
dec edi
jg 0x45d0
pop ebp
jmp short 0x45ff
push ebp
mov ebp,edx
mov eax,ebx
add ebx,[esi+ebp+0x2]
mov edx,esi
call dword 0x4540
dec edi
jg 0x45ee
pop ebp
pop edi
pop esi
pop ebx
ret
nop
mov ecx,0x1
jmp dword 0x4570
ret
nop
xor ecx,ecx
push ebx
mov cl,[edx+0x1]
push esi
push edi
mov ebx,eax
lea esi,[ecx+edx+0xa]
mov edi,[ecx+edx+0x6]
mov edx,[esi]
mov eax,[esi+0x4]
add eax,ebx
mov edx,[edx]
mov ecx,0x1
call dword 0x465c
add esi,byte +0x8
dec edi
jg 0x4622
mov eax,ebx
pop edi
pop esi
pop ebx
ret
lea eax,[eax+0x0]
cmp dword [dword 0x46700c],byte +0x0
jz 0x4654
call dword [dword 0x46700c]
ret
mov al,0x10
call dword 0x1fb0
ret
cmp ecx,byte +0x0
jz dword 0x4745
push eax
push ebx
push esi
push edi
mov ebx,eax
mov esi,edx
mov edi,ecx
xor edx,edx
mov al,[esi]
mov dl,[esi+0x1]
cmp al,0xa
jz 0x469f
cmp al,0xb
jz 0x46bc
cmp al,0xc
jz 0x46d3
cmp al,0xd
jz 0x46e2
cmp al,0xe
jz 0x4700
cmp al,0xf
jz dword 0x4716
cmp al,0x11
jz dword 0x4725
jmp dword 0x4736
cmp ecx,byte +0x1
mov eax,ebx
jg 0x46b0
call dword 0x3a1c
jmp dword 0x4741
mov edx,ecx
call dword 0x3a40
jmp dword 0x4741
cmp ecx,byte +0x1
mov eax,ebx
jg 0x46ca
call dword 0x41d0
jmp short 0x4741
mov edx,ecx
call dword 0x41e8
jmp short 0x4741
mov eax,ebx
add ebx,byte +0x10
call dword 0x4644
dec edi
jg 0x46d3
jmp short 0x4741
push ebp
mov ebp,edx
mov edx,[esi+ebp+0xa]
mov eax,ebx
add ebx,[esi+ebp+0x2]
mov ecx,[esi+ebp+0x6]
mov edx,[edx]
call dword 0x465c
dec edi
jg 0x46e5
pop ebp
jmp short 0x4741
push ebp
mov ebp,edx
mov eax,ebx
add ebx,[esi+ebp+0x2]
mov edx,esi
call dword 0x4610
dec edi
jg 0x4703
pop ebp
jmp short 0x4741
mov eax,ebx
add ebx,byte +0x4
call dword 0x5270
dec edi
jg 0x4716
jmp short 0x4741
mov eax,ebx
mov edx,esi
add ebx,byte +0x4
call dword 0x4b98
dec edi
jg 0x4725
jmp short 0x4741
pop edi
pop esi
pop ebx
pop eax
mov al,0x2
jmp dword 0x1fb0
pop edi
pop esi
pop ebx
pop eax
ret
mov eax,eax
mov ecx,0x1
jmp dword 0x465c
ret
nop
cmp dword [dword 0x467014],byte +0x0
jz 0x4764
call dword [dword 0x467014]
ret
mov al,0x10
call dword 0x1fb0
ret
push ebx
push esi
push edi
push ebp
mov ebx,eax
mov esi,edx
xor eax,eax
mov al,[ecx+0x1]
lea edi,[eax+ecx+0xa]
mov ebp,[edi-0x4]
xor eax,eax
mov ecx,[edi-0x8]
push ecx
mov ecx,[edi+0x4]
sub ecx,eax
jng 0x4798
mov edx,eax
add eax,esi
add edx,ebx
call dword 0x2050
mov eax,[edi+0x4]
mov edx,[edi]
mov edx,[edx]
mov cl,[edx]
cmp cl,0xa
jz 0x47d7
cmp cl,0xb
jz 0x47e8
cmp cl,0xc
jz 0x47f9
cmp cl,0xd
jz 0x480a
cmp cl,0xe
jz 0x482a
cmp cl,0xf
jz dword 0x4843
cmp cl,0x11
jz dword 0x4854
mov al,0x2
pop ebp
pop edi
pop esi
pop ebx
jmp dword 0x1fb0
mov edx,[eax+esi]
add eax,ebx
call dword 0x3a70
mov eax,0x4
jmp short 0x4865
mov edx,[eax+esi]
add eax,ebx
call dword 0x420c
mov eax,0x4
jmp short 0x4865
lea edx,[eax+esi]
add eax,ebx
call dword 0x4754
mov eax,0x10
jmp short 0x4865
xor ecx,ecx
mov cl,[edx+0x1]
push dword [ecx+edx+0x2]
push dword [ecx+edx+0x6]
mov ecx,[ecx+edx+0xa]
mov ecx,[ecx]
lea edx,[eax+esi]
add eax,ebx
call dword 0x4888
pop eax
jmp short 0x4865
xor ecx,ecx
mov cl,[edx+0x1]
mov ecx,[ecx+edx+0x2]
push ecx
mov ecx,edx
lea edx,[eax+esi]
add eax,ebx
call dword 0x476c
pop eax
jmp short 0x4865
mov edx,[eax+esi]
add eax,ebx
call dword 0x5288
mov eax,0x4
jmp short 0x4865
mov ecx,edx
mov edx,[eax+esi]
add eax,ebx
call dword 0x4bd4
mov eax,0x4
add eax,[edi+0x4]
add edi,byte +0x8
dec ebp
jnz dword 0x4786
pop ecx
sub ecx,eax
jng 0x4881
lea edx,[eax+ebx]
add eax,esi
call dword 0x2050
pop ebp
pop edi
pop esi
pop ebx
ret
mov eax,eax
push ebx
push esi
push edi
push ebp
mov ebx,eax
mov esi,edx
mov edi,ecx
mov ebp,[esp+0x14]
mov cl,[edi]
cmp cl,0xa
jz 0x48ce
cmp cl,0xb
jz 0x48e5
cmp cl,0xc
jz 0x48f9
cmp cl,0xd
jz 0x490d
cmp cl,0xe
jz 0x4930
cmp cl,0xf
jz dword 0x494d
cmp cl,0x11
jz dword 0x4961
mov al,0x2
pop ebp
pop edi
pop esi
pop ebx
jmp dword 0x1fb0
mov eax,ebx
mov edx,[esi]
call dword 0x3a70
add ebx,byte +0x4
add esi,byte +0x4
dec ebp
jnz 0x48ce
jmp dword 0x4975
mov eax,ebx
mov edx,[esi]
call dword 0x420c
add ebx,byte +0x4
add esi,byte +0x4
dec ebp
jnz 0x48e5
jmp short 0x4975
mov eax,ebx
mov edx,esi
call dword 0x4754
add ebx,byte +0x10
add esi,byte +0x10
dec ebp
jnz 0x48f9
jmp short 0x4975
xor ecx,ecx
mov cl,[edi+0x1]
lea edi,[ecx+edi+0x2]
mov eax,ebx
mov edx,esi
mov ecx,[edi+0x8]
mov ecx,[ecx]
push dword [edi+0x4]
call dword 0x4888
add ebx,[edi]
add esi,[edi]
dec ebp
jnz 0x4916
jmp short 0x4975
mov eax,ebx
mov edx,esi
mov ecx,edi
call dword 0x476c
xor eax,eax
mov al,[edi+0x1]
add ebx,[eax+edi+0x2]
add esi,[eax+edi+0x2]
dec ebp
jnz 0x4930
jmp short 0x4975
mov eax,ebx
mov edx,[esi]
call dword 0x5288
add ebx,byte +0x4
add esi,byte +0x4
dec ebp
jnz 0x494d
jmp short 0x4975
mov eax,ebx
mov edx,[esi]
mov ecx,edi
call dword 0x4bd4
add ebx,byte +0x4
add esi,byte +0x4
dec ebp
jnz 0x4961
pop ebp
pop edi
pop esi
pop ebx
ret 0x4
ret
lea eax,[eax+0x0]
push edx
call dword 0x1e60
pop edx
test eax,eax
jz 0x4992
push eax
call dword 0x4604
pop eax
ret
nop
push eax
call dword 0x4748
pop eax
call dword 0x1e7c
ret
lea eax,[eax+0x0]
mov al,0x11
jmp dword 0x1fb0
ret
push edx
push eax
mov eax,[esp+0x10]
mul dword [esp]
mov ecx,eax
mov eax,[esp+0x4]
mul dword [esp+0xc]
add ecx,eax
mov eax,[esp]
mul dword [esp+0xc]
add edx,ecx
pop ecx
pop ecx
ret 0x8
ret
test eax,eax
jz 0x49d7
mov eax,[eax-0x4]
ret
call dword 0x49d0
dec eax
ret
nop
push ebp
mov ebp,esp
push dword [ebp+0x8]
call dword 0x4888
pop ebp
ret 0x4
nop
jmp dword 0x465c
ret
mov eax,eax
call dword 0x4b98
ret
mov eax,eax
push ebp
mov ebp,esp
add esp,byte -0x20
push ebx
push esi
push edi
mov [ebp-0x8],ecx
mov esi,edx
mov [ebp-0x4],eax
mov ebx,[ebp-0x4]
mov ebx,[ebx]
mov eax,[ebp+0x8]
mov edi,[eax]
test edi,edi
jg 0x4a39
test edi,edi
jnl 0x4a2a
mov al,0x4
call dword 0x1fb0
mov eax,[ebp-0x4]
mov edx,esi
call dword 0x49f8
jmp dword 0x4b82
xor eax,eax
mov [ebp-0x10],eax
test ebx,ebx
jz 0x4a4d
sub ebx,byte +0x4
mov eax,[ebx]
mov [ebp-0x10],eax
sub ebx,byte +0x4
movzx eax,byte [esi+0x1]
add esi,eax
mov eax,esi
mov edx,[eax+0x2]
mov [ebp-0x18],edx
mov edx,[eax+0x6]
test edx,edx
jz 0x4a66
mov esi,[edx]
jmp short 0x4a68
xor esi,esi
mov eax,edi
imul dword [ebp-0x18]
mov [ebp-0x1c],eax
mov eax,[ebp-0x1c]
cdq
idiv edi
cmp eax,[ebp-0x18]
jz 0x4a82
mov al,0x4
call dword 0x1fb0
add dword [ebp-0x1c],byte +0x8
test ebx,ebx
jz 0x4a8f
cmp dword [ebx],byte +0x1
jnz 0x4ac4
mov [ebp-0x20],ebx
cmp edi,[ebp-0x10]
jnl 0x4ab4
test esi,esi
jz 0x4ab4
mov eax,ebx
add eax,byte +0x8
mov edx,edi
imul edx,[ebp-0x18]
add eax,edx
mov ecx,[ebp-0x10]
sub ecx,edi
mov edx,esi
call dword 0x49f0
lea eax,[ebp-0x20]
mov edx,[ebp-0x1c]
call dword 0x1e94
mov ebx,[ebp-0x20]
jmp short 0x4b22
dec dword [ebx]
mov eax,[ebp-0x1c]
call dword 0x1e60
mov ebx,eax
mov eax,[ebp-0x10]
mov [ebp-0x14],eax
cmp edi,[ebp-0x14]
jnl 0x4ade
mov [ebp-0x14],edi
test esi,esi
jz 0x4b0c
mov edx,[ebp-0x14]
imul edx,[ebp-0x18]
mov eax,ebx
add eax,byte +0x8
xor ecx,ecx
call dword 0x252c
mov eax,[ebp-0x14]
push eax
mov edx,[ebp-0x4]
mov edx,[edx]
mov eax,ebx
add eax,byte +0x8
mov ecx,esi
call dword 0x49e0
jmp short 0x4b22
mov ecx,[ebp-0x14]
imul ecx,[ebp-0x18]
mov edx,ebx
add edx,byte +0x8
mov eax,[ebp-0x4]
mov eax,[eax]
call dword 0x2050
mov dword [ebx],0x1
add ebx,byte +0x4
mov [ebx],edi
add ebx,byte +0x4
mov edx,edi
sub edx,[ebp-0x10]
imul edx,[ebp-0x18]
mov eax,[ebp-0x18]
imul eax,[ebp-0x10]
add eax,ebx
xor ecx,ecx
call dword 0x252c
cmp dword [ebp-0x8],byte +0x1
jng 0x4b7d
add dword [ebp+0x8],byte +0x4
dec dword [ebp-0x8]
dec edi
test edi,edi
jl 0x4b7d
inc edi
mov dword [ebp-0xc],0x0
mov eax,[ebp+0x8]
push eax
mov eax,[ebp-0xc]
lea eax,[ebx+eax*4]
mov ecx,[ebp-0x8]
mov edx,esi
call dword 0x4a00
inc dword [ebp-0xc]
dec edi
jnz 0x4b63
mov eax,[ebp-0x4]
mov [eax],ebx
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret 0x4
nop
push esp
add dword [esp],byte +0x4
call dword 0x4a00
ret
nop
mov ecx,[eax]
test ecx,ecx
jz 0x4bd1
mov dword [eax],0x0
lock dec dword [ecx-0x8]
jnz 0x4bd1
push eax
mov eax,ecx
xor ecx,ecx
mov cl,[edx+0x1]
mov edx,[ecx+edx+0x6]
test edx,edx
jz 0x4bc8
mov ecx,[eax-0x4]
test ecx,ecx
jz 0x4bc8
mov edx,[edx]
call dword 0x465c
sub eax,byte +0x8
call dword 0x1e7c
pop eax
ret
mov eax,eax
push ebx
mov ebx,[eax]
test edx,edx
jz 0x4bdf
lock inc dword [edx-0x8]
test ebx,ebx
jz 0x4bf7
lock dec dword [ebx-0x8]
jnz 0x4bf7
push eax
push edx
mov edx,ecx
inc dword [ebx-0x8]
call dword 0x4b98
pop edx
pop eax
mov [eax],edx
pop ebx
ret
nop
add esp,byte -0x1c
push byte +0x1c
lea edx,[esp+0x4]
push edx
push eax
call dword 0x2e4
cmp dword [esp+0x10],0x1000
jnz 0x4c1c
mov eax,[esp+0x4]
jmp short 0x4c1e
xor eax,eax
add esp,byte +0x1c
ret
mov eax,eax
call dword 0x4bfc
ret
mov eax,eax
push ebx
push esi
add esp,0xfffffef8
mov ebx,eax
cmp dword [ebx+0x10],byte +0x0
jnz 0x4c67
push dword 0x105
lea eax,[esp+0x4]
push eax
mov eax,[ebx+0x4]
push eax
call dword 0x274
mov eax,esp
mov dl,0x1
call dword 0x4e90
mov esi,eax
mov [ebx+0x10],esi
test esi,esi
jnz 0x4c67
mov eax,[ebx+0x4]
mov [ebx+0x10],eax
mov eax,[ebx+0x10]
add esp,0x108
pop esi
pop ebx
ret
nop
push ebx
push esi
push edi
mov esi,eax
mov ebx,[dword 0x467030]
test ebx,ebx
jz 0x4ca3
cmp esi,[ebx+0x4]
jz 0x4c92
cmp esi,[ebx+0x8]
jz 0x4c92
cmp esi,[ebx+0xc]
jnz 0x4c9d
mov eax,ebx
call dword 0x4c2c
mov edi,eax
jmp short 0x4ca5
mov ebx,[ebx]
test ebx,ebx
jnz 0x4c83
mov edi,esi
mov eax,edi
pop edi
pop esi
pop ebx
ret
nop
push ebx
push esi
mov esi,eax
jmp short 0x4cba
push esi
call dword 0x22c
mov esi,eax
movzx ebx,byte [esi]
test bl,bl
jz 0x4cc6
cmp bl,0x5c
jnz 0x4cb2
mov eax,esi
pop esi
pop ebx
ret
nop
push ebp
mov ebp,esp
add esp,0xfffffdac
push ebx
push esi
push edi
mov [ebp-0x8],edx
mov [ebp-0x4],eax
mov eax,[ebp-0x4]
mov [ebp-0xc],eax
push dword 0x405e6c
call dword 0x27c
mov [ebp-0x10],eax
cmp dword [ebp-0x10],byte +0x0
jz 0x4d3a
push dword 0x405e7c
mov eax,[ebp-0x10]
push eax
call dword 0x284
mov ebx,eax
test ebx,ebx
jz 0x4d3a
push dword 0x105
lea eax,[ebp-0x253]
push eax
mov eax,[ebp-0x4]
push eax
call ebx
test eax,eax
jz 0x4d3a
mov eax,[ebp-0x8]
push eax
lea eax,[ebp-0x253]
push eax
mov eax,[ebp-0x4]
push eax
call dword 0x2ac
jmp dword 0x4e62
mov eax,[ebp-0x4]
cmp byte [eax],0x5c
jnz 0x4d7a
mov eax,[ebp-0x4]
cmp byte [eax+0x1],0x5c
jnz dword 0x4e62
mov eax,[ebp-0x4]
add eax,byte +0x2
call dword 0x4cac
mov esi,eax
cmp byte [esi],0x0
jz dword 0x4e62
lea eax,[esi+0x1]
call dword 0x4cac
mov esi,eax
cmp byte [esi],0x0
jz dword 0x4e62
jmp short 0x4d80
mov esi,[ebp-0x4]
add esi,byte +0x2
mov ebx,esi
sub ebx,[ebp-0x4]
lea eax,[ebx+0x1]
push eax
mov eax,[ebp-0x4]
push eax
lea eax,[ebp-0x253]
push eax
call dword 0x2ac
jmp dword 0x4e45
lea eax,[esi+0x1]
call dword 0x4cac
mov edi,eax
mov eax,edi
sub eax,esi
add eax,ebx
inc eax
cmp eax,0x105
jg dword 0x4e62
mov eax,edi
sub eax,esi
inc eax
push eax
push esi
lea eax,[ebp-0x253]
add eax,ebx
push eax
call dword 0x2ac
lea eax,[ebp-0x14e]
push eax
lea eax,[ebp-0x253]
push eax
call dword 0x254
mov [ebp-0x10],eax
cmp dword [ebp-0x10],byte -0x1
jz 0x4e62
mov eax,[ebp-0x10]
push eax
call dword 0x24c
lea eax,[ebp-0x122]
push eax
call dword 0x2b4
lea edx,[ebx+0x1]
add eax,edx
inc eax
cmp eax,0x105
jg 0x4e62
mov byte [ebp+ebx-0x253],0x5c
mov eax,0x105
sub eax,ebx
dec eax
push eax
lea eax,[ebp-0x122]
push eax
lea eax,[ebp-0x253]
add eax,ebx
inc eax
push eax
call dword 0x2ac
lea eax,[ebp-0x122]
push eax
call dword 0x2b4
inc eax
add ebx,eax
mov esi,edi
cmp byte [esi],0x0
jnz dword 0x4d9e
mov eax,[ebp-0x8]
push eax
lea eax,[ebp-0x253]
push eax
mov eax,[ebp-0x4]
push eax
call dword 0x2ac
mov eax,[ebp-0xc]
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret
imul esp,[ebp+0x72],byte +0x6e
gs insb
xor esi,[edx]
fs insb
insb
add [eax],al
add [eax],al
inc edi
gs jz 0x4ecc
outsd
outsb
push eax
popad
jz 0x4eef
dec esi
popad
insd
gs inc ecx
add [eax],al
add [eax],al
push ebp
mov ebp,esp
add esp,0xfffffee0
push ebx
push esi
mov [ebp-0x4],eax
push dword 0x105
lea eax,[ebp-0x11d]
push eax
push byte +0x0
call dword 0x274
mov byte [ebp-0x12],0x0
lea eax,[ebp-0x8]
push eax
push dword 0xf0019
push byte +0x0
push dword 0x4060c0
push dword 0x80000001
call dword 0x2cc
test eax,eax
jz 0x4f13
lea eax,[ebp-0x8]
push eax
push dword 0xf0019
push byte +0x0
push dword 0x4060c0
push dword 0x80000002
call dword 0x2cc
test eax,eax
jz 0x4f13
lea eax,[ebp-0x8]
push eax
push dword 0xf0019
push byte +0x0
push dword 0x4060dc
push dword 0x80000001
call dword 0x2cc
test eax,eax
jnz dword 0x4f9c
xor eax,eax
push ebp
push dword 0x405f95
push dword [fs:eax]
mov [fs:eax],esp
mov dword [ebp-0x18],0x5
lea eax,[ebp-0x11d]
mov edx,0x105
call dword 0x4ccc
lea eax,[ebp-0x18]
push eax
lea eax,[ebp-0x12]
push eax
push byte +0x0
push byte +0x0
lea eax,[ebp-0x11d]
push eax
mov eax,[ebp-0x8]
push eax
call dword 0x2d4
test eax,eax
jz 0x4f7a
lea eax,[ebp-0x18]
push eax
lea eax,[ebp-0x12]
push eax
push byte +0x0
push byte +0x0
push dword 0x4060fc
mov eax,[ebp-0x8]
push eax
call dword 0x2d4
test eax,eax
jz 0x4f7a
mov byte [ebp-0x12],0x0
mov byte [ebp-0xe],0x0
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x405f9c
mov eax,[ebp-0x8]
push eax
call dword 0x2c4
ret
jmp dword 0x3384
jmp short 0x4f8b
push dword 0x105
mov eax,[ebp-0x4]
push eax
lea eax,[ebp-0x11d]
push eax
call dword 0x2ac
push byte +0x5
lea eax,[ebp-0xd]
push eax
push byte +0x3
call dword 0x294
push eax
call dword 0x26c
xor esi,esi
cmp byte [ebp-0x11d],0x0
jz dword 0x50b6
cmp byte [ebp-0xd],0x0
jnz 0x4fe3
cmp byte [ebp-0x12],0x0
jz dword 0x50b6
lea eax,[ebp-0x11d]
push eax
call dword 0x2b4
mov ebx,eax
lea eax,[ebp-0x11d]
add ebx,eax
jmp short 0x4ffc
dec ebx
cmp byte [ebx],0x2e
jz 0x500b
lea eax,[ebp-0x11d]
cmp ebx,eax
jnz 0x4ffb
lea eax,[ebp-0x11d]
cmp ebx,eax
jz dword 0x50b6
inc ebx
cmp byte [ebp-0x12],0x0
jz 0x5048
mov edx,ebx
sub edx,eax
mov eax,0x105
sub eax,edx
push eax
lea eax,[ebp-0x12]
push eax
push ebx
call dword 0x2ac
push byte +0x2
push byte +0x0
lea eax,[ebp-0x11d]
push eax
call dword 0x29c
mov esi,eax
test esi,esi
jnz 0x50b6
cmp byte [ebp-0xd],0x0
jz 0x50b6
lea eax,[ebp-0x11d]
mov edx,ebx
sub edx,eax
mov eax,0x105
sub eax,edx
push eax
lea eax,[ebp-0xd]
push eax
push ebx
call dword 0x2ac
push byte +0x2
push byte +0x0
lea eax,[ebp-0x11d]
push eax
call dword 0x29c
mov esi,eax
test esi,esi
jnz 0x50b6
mov byte [ebp-0xb],0x0
lea eax,[ebp-0x11d]
mov edx,ebx
sub edx,eax
mov eax,0x105
sub eax,edx
push eax
lea eax,[ebp-0xd]
push eax
push ebx
call dword 0x2ac
push byte +0x2
push byte +0x0
lea eax,[ebp-0x11d]
push eax
call dword 0x29c
mov esi,eax
mov eax,esi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret
add [eax],al
push ebx
outsd
o16 jz 0x513c
popad
jc 0x512d
pop esp
inc edx
outsd
jc 0x5139
popad
outsb
fs pop esp
dec esp
outsd
arpl [ecx+0x6c],sp
gs jnc 0x50d9
add [eax],al
add [ebx+0x6f],dl
o16 jz 0x5158
popad
jc 0x5149
pop esp
inc edx
outsd
jc 0x5155
popad
outsb
fs pop esp
inc esp
gs insb
jo 0x515a
imul ebx,[esp+ecx*2+0x6f],dword 0x656c6163
jnc 0x50fc
add [eax],al
add [eax],al
call dword 0x5110
ret
mov eax,eax
call dword 0x5130
ret
mov eax,eax
push ebx
mov ebx,eax
mov eax,0x8
call dword 0x1e60
mov edx,[dword 0x467034]
mov [eax],edx
mov [eax+0x4],ebx
mov [0x467034],eax
pop ebx
ret
nop
push ebx
push esi
push edi
push ebp
mov ebp,eax
mov edi,[dword 0x467034]
test edi,edi
jz 0x5161
mov eax,[edi+0x4]
cmp eax,ebp
jnz 0x5161
mov eax,[0x467034]
mov eax,[eax]
mov [0x467034],eax
mov edx,0x8
mov eax,edi
call dword 0x1e7c
jmp short 0x518e
mov ebx,edi
test ebx,ebx
jz 0x518e
mov esi,[ebx]
test esi,esi
jz 0x5188
mov eax,[esi+0x4]
cmp eax,ebp
jnz 0x5188
mov edi,esi
mov eax,[esi]
mov [ebx],eax
mov edx,0x8
mov eax,edi
call dword 0x1e7c
jmp short 0x518e
mov ebx,[ebx]
test ebx,ebx
jnz 0x5167
pop ebp
pop edi
pop esi
pop ebx
ret
nop
push ebp
mov ebp,esp
add esp,byte -0x8
push ebx
push esi
push edi
mov [ebp-0x4],eax
mov eax,[0x467034]
mov [ebp-0x8],eax
cmp dword [ebp-0x8],byte +0x0
jz 0x51e7
xor eax,eax
push ebp
push dword 0x4061cf
push dword [fs:eax]
mov [fs:eax],esp
mov ebx,[ebp-0x8]
mov eax,[ebp-0x4]
call dword [ebx+0x4]
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
jmp short 0x51d9
jmp dword 0x30d0
call dword 0x34e0
mov eax,[ebp-0x8]
mov eax,[eax]
mov [ebp-0x8],eax
cmp dword [ebp-0x8],byte +0x0
jnz 0x51ae
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
ret
mov eax,eax
mov edx,[dword 0x467030]
mov [eax],edx
mov [0x467030],eax
ret
mov eax,eax
push ebp
mov ebp,esp
push ecx
mov [ebp-0x4],eax
xor edx,edx
push ebp
push dword 0x406264
push dword [fs:edx]
mov [fs:edx],esp
mov eax,[ebp-0x4]
mov eax,[eax+0x4]
call dword 0x5194
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x40626b
mov eax,[ebp-0x4]
cmp eax,[dword 0x467030]
jnz 0x5244
mov eax,[ebp-0x4]
mov eax,[eax]
mov [0x467030],eax
jmp short 0x5263
mov eax,[0x467030]
test eax,eax
jz 0x5263
mov edx,[eax]
cmp edx,[ebp-0x4]
jnz 0x525d
mov edx,[ebp-0x4]
mov edx,[edx]
mov [eax],edx
jmp short 0x5263
mov eax,[eax]
test eax,eax
jnz 0x524d
ret
jmp dword 0x3384
jmp short 0x522d
pop ecx
pop ebp
ret
mov eax,eax
mov edx,[eax]
test edx,edx
jz 0x5284
mov dword [eax],0x0
push eax
push edx
mov eax,[edx]
call dword [eax+0x8]
pop eax
ret
lea eax,[eax+0x0]
test edx,edx
jz 0x52a5
push edx
push eax
mov eax,[edx]
push edx
call dword [eax+0x4]
pop eax
mov ecx,[eax]
pop dword [eax]
test ecx,ecx
jnz 0x529e
ret
mov eax,[ecx]
push ecx
call dword [eax+0x8]
ret
mov ecx,[eax]
test ecx,ecx
mov [eax],edx
jz 0x52b3
mov eax,[ecx]
push ecx
call dword [eax+0x8]
ret
test edx,edx
jz dword 0x5270
push edi
mov edi,eax
push byte +0x0
push esp
push ecx
push edx
mov eax,[edx]
call dword [eax]
test eax,eax
jz 0x52d3
mov al,0x17
jmp dword 0x1fb0
mov eax,[edi]
test eax,eax
jz 0x52df
push eax
mov eax,[eax]
call dword [eax+0x8]
pop eax
mov [edi],eax
pop edi
ret
test eax,eax
jz 0x52ee
push eax
mov eax,[eax]
call dword [eax+0x4]
ret
nop
add eax,byte +0x4
push eax
call dword 0x30c
ret
mov eax,eax
cmp dword [eax+0x4],byte +0x0
jz 0x5309
mov al,0x2
call dword 0x1fb0
ret
mov eax,eax
call dword 0x2b88
mov dword [eax+0x4],0x1
ret
lea eax,[eax+0x0]
push ebp
mov ebp,esp
push ebx
mov ebx,[ebp+0x8]
mov ecx,[ebp+0x10]
mov edx,[ebp+0xc]
mov eax,ebx
call dword 0x2ca4
test al,al
jz 0x5338
xor eax,eax
jmp short 0x533d
mov eax,0x80004002
pop ebx
pop ebp
ret 0xc
mov eax,eax
push ebp
mov ebp,esp
mov eax,[ebp+0x8]
add eax,byte +0x4
push eax
call dword 0x304
pop ebp
ret 0x4
nop
push ebp
mov ebp,esp
push ebx
push esi
mov ebx,[ebp+0x8]
lea eax,[ebx+0x4]
push eax
call dword 0x30c
mov esi,eax
test esi,esi
jnz 0x5378
mov dl,0x1
mov eax,ebx
mov ecx,[eax]
call dword [ecx-0x4]
mov eax,esi
pop esi
pop ebx
pop ebp
ret 0x4
push ebp
mov ebp,esp
add esp,byte -0x8
push ebx
push esi
mov [ebp-0x8],ecx
mov [ebp-0x4],edx
xor edx,edx
cmp dword [ebp-0x8],byte +0x0
jz dword 0x5452
xor esi,esi
xor ecx,ecx
test eax,eax
jz dword 0x542d
jmp short 0x5414
mov edx,[ebp-0x8]
movzx edx,word [edx+ecx*2]
inc ecx
cmp edx,byte +0x7f
ja 0x53bb
mov [eax+esi],dl
inc esi
jmp short 0x5414
cmp edx,0x7ff
jna 0x53f4
lea ebx,[esi+0x3]
cmp ebx,[ebp-0x4]
ja 0x541e
mov ebx,edx
shr ebx,byte 0xc
or bl,0xe0
mov [eax+esi],bl
mov ebx,edx
shr ebx,byte 0x6
and bl,0x3f
or bl,0x80
mov [eax+esi+0x1],bl
and dl,0x3f
or dl,0x80
mov [eax+esi+0x2],dl
add esi,byte +0x3
jmp short 0x5414
lea ebx,[esi+0x2]
cmp ebx,[ebp-0x4]
ja 0x541e
mov ebx,edx
shr ebx,byte 0x6
or bl,0xc0
mov [eax+esi],bl
and dl,0x3f
or dl,0x80
mov [eax+esi+0x1],dl
add esi,byte +0x2
cmp ecx,[ebp+0x8]
jnc 0x541e
cmp esi,[ebp-0x4]
jc 0x53a8
cmp esi,[ebp-0x4]
jc 0x5427
mov esi,[ebp-0x4]
dec esi
mov byte [eax+esi],0x0
jmp short 0x544f
cmp ecx,[ebp+0x8]
jnc 0x544f
mov eax,[ebp-0x8]
movzx edx,word [eax+ecx*2]
inc ecx
cmp edx,byte +0x7f
jna 0x5449
cmp edx,0x7ff
jna 0x5448
inc esi
inc esi
inc esi
cmp ecx,[ebp+0x8]
jc 0x5432
lea edx,[esi+0x1]
mov eax,edx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
ret 0x4
push ebp
mov ebp,esp
add esp,byte -0x10
push ebx
push esi
mov [ebp-0xc],ecx
mov [ebp-0x8],edx
mov [ebp-0x4],eax
cmp dword [ebp-0xc],byte +0x0
jnz 0x547d
xor eax,eax
mov [ebp-0x10],eax
jmp dword 0x5581
mov dword [ebp-0x10],0xffffffff
xor eax,eax
xor esi,esi
cmp dword [ebp-0x4],byte +0x0
jz dword 0x5533
jmp short 0x5511
mov edx,[ebp-0xc]
movzx ecx,byte [edx+esi]
inc esi
test cl,0x80
jz 0x5509
cmp esi,[ebp+0x8]
jnc dword 0x5581
and ecx,byte +0x3f
test cl,0x20
jz 0x54de
mov edx,[ebp-0xc]
movzx edx,byte [edx+esi]
inc esi
mov ebx,edx
and bl,0xc0
cmp bl,0x80
jnz dword 0x5581
cmp esi,[ebp+0x8]
jnc dword 0x5581
and dl,0x3f
movzx edx,dl
shl ecx,byte 0x6
or edx,ecx
mov ecx,edx
mov edx,[ebp-0xc]
movzx edx,byte [edx+esi]
inc esi
mov ebx,edx
and bl,0xc0
cmp bl,0x80
jnz dword 0x5581
and dl,0x3f
movzx edx,dl
shl ecx,byte 0x6
or dx,cx
mov ecx,[ebp-0x4]
mov [ecx+eax*2],dx
jmp short 0x5510
mov edx,[ebp-0x4]
mov [edx+eax*2],cx
inc eax
cmp esi,[ebp+0x8]
jnc 0x551f
cmp eax,[ebp-0x8]
jc dword 0x5494
cmp eax,[ebp-0x8]
jc 0x5528
mov eax,[ebp-0x8]
dec eax
mov edx,[ebp-0x4]
mov word [edx+eax*2],0x0
jmp short 0x557d
cmp esi,[ebp+0x8]
jnc 0x557d
mov edx,[ebp-0xc]
movzx edx,byte [edx+esi]
inc esi
test dl,0x80
jz 0x5577
cmp esi,[ebp+0x8]
jnc 0x5581
and dl,0x3f
test dl,0x20
jz 0x5567
mov edx,[ebp-0xc]
movzx edx,byte [edx+esi]
inc esi
and dl,0xc0
cmp dl,0x80
jnz 0x5581
cmp esi,[ebp+0x8]
jnc 0x5581
mov edx,[ebp-0xc]
movzx edx,byte [edx+esi]
inc esi
and dl,0xc0
cmp dl,0x80
jnz 0x5581
inc eax
cmp esi,[ebp+0x8]
jc 0x5538
inc eax
mov [ebp-0x10],eax
mov eax,[ebp-0x10]
pop esi
pop ebx
mov esp,ebp
pop ebp
ret 0x4
push ebp
mov ebp,esp
add esp,byte -0x8
push ebx
push esi
xor ecx,ecx
mov [ebp-0x4],ecx
mov [ebp-0x8],edx
mov esi,eax
xor eax,eax
push ebp
push dword 0x406638
push dword [fs:eax]
mov [fs:eax],esp
mov eax,[ebp-0x8]
call dword 0x3a1c
mov eax,esi
xor edx,edx
call dword 0x440c
jz 0x5622
mov eax,esi
call dword 0x4358
lea edx,[eax+eax*2]
lea eax,[ebp-0x4]
call dword 0x413c
mov ebx,[ebp-0x4]
test ebx,ebx
jz 0x55dd
sub ebx,byte +0x4
mov ebx,[ebx]
mov eax,esi
call dword 0x4358
push eax
mov eax,esi
call dword 0x4348
push eax
mov eax,[ebp-0x4]
call dword 0x3eac
lea edx,[ebx+0x1]
pop ecx
call dword 0x5380
test eax,eax
jng 0x560f
mov edx,eax
dec edx
lea eax,[ebp-0x4]
call dword 0x413c
jmp short 0x5617
lea eax,[ebp-0x4]
call dword 0x3a1c
mov eax,[ebp-0x8]
mov edx,[ebp-0x4]
call dword 0x3a70
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x40663f
lea eax,[ebp-0x4]
call dword 0x3a1c
ret
jmp dword 0x3384
jmp short 0x562f
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
ret
lea eax,[eax+0x0]
push ebp
mov ebp,esp
add esp,byte -0xc
push ebx
push esi
xor ecx,ecx
mov [ebp-0x4],ecx
mov [ebp-0x8],edx
mov esi,eax
xor eax,eax
push ebp
push dword 0x4066f3
push dword [fs:eax]
mov [fs:eax],esp
mov eax,[ebp-0x8]
call dword 0x41d0
test esi,esi
jz 0x56dd
mov [ebp-0xc],esi
mov ebx,[ebp-0xc]
mov eax,ebx
test eax,eax
jz 0x5685
sub eax,byte +0x4
mov eax,[eax]
lea edx,[ebp-0x4]
xchg eax,edx
call dword 0x44dc
test ebx,ebx
jz 0x5697
sub ebx,byte +0x4
mov ebx,[ebx]
push ebx
mov eax,[ebp-0x4]
call dword 0x4358
inc eax
push eax
mov eax,esi
call dword 0x3eac
push eax
mov eax,[ebp-0x4]
call dword 0x4348
pop ecx
pop edx
call dword 0x545c
test eax,eax
jng 0x56ca
mov edx,eax
dec edx
lea eax,[ebp-0x4]
call dword 0x44dc
jmp short 0x56d2
lea eax,[ebp-0x4]
call dword 0x41d0
mov eax,[ebp-0x8]
mov edx,[ebp-0x4]
call dword 0x420c
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x4066fa
lea eax,[ebp-0x4]
call dword 0x41d0
ret
jmp dword 0x3384
jmp short 0x56ea
pop esi
pop ebx
mov esp,ebp
pop ebp
ret
push ebp
mov ebp,esp
push byte +0x0
push ebx
push esi
mov esi,edx
mov ebx,eax
xor eax,eax
push ebp
push dword 0x406743
push dword [fs:eax]
mov [fs:eax],esp
lea eax,[ebp-0x4]
mov edx,ebx
call dword 0x4338
mov eax,[ebp-0x4]
mov edx,esi
call dword 0x558c
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x40674a
lea eax,[ebp-0x4]
call dword 0x41d0
ret
jmp dword 0x3384
jmp short 0x573a
pop esi
pop ebx
pop ecx
pop ebp
ret
nop
push ebx
push esi
add esp,0xfffff004
push eax
mov esi,edx
mov ebx,eax
test ebx,ebx
jz 0x579e
cmp dword [ebx+0x4],0x10000
jnl 0x5794
push dword 0x1000
lea eax,[esp+0x4]
push eax
mov eax,[ebx+0x4]
push eax
mov eax,[ebx]
mov eax,[eax]
call dword 0x4c74
push eax
call dword 0x2a4
mov ecx,eax
mov edx,esp
mov eax,esi
call dword 0x3b0c
jmp short 0x579e
mov eax,esi
mov edx,[ebx+0x4]
call dword 0x3c14
add esp,0x1000
pop esi
pop ebx
ret
nop
jmp dword [dword 0x46e7cc]
mov eax,eax
push ebp
mov ebp,esp
xor eax,eax
push ebp
push dword 0x406804
push dword [fs:eax]
mov [fs:eax],esp
inc dword [dword 0x4695b4]
jnz 0x57f6
mov eax,0x46904c
call dword 0x23c4
mov eax,0x469218
call dword 0x23c4
mov eax,0x4693e4
call dword 0x23c4
call dword 0x1df4
mov eax,0x467038
call dword 0x3a1c
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x40680b
ret
jmp dword 0x3384
jmp short 0x5803
pop ebp
ret
lea eax,[eax+0x0]
jmp dword [dword 0x46e854]
mov eax,eax
jmp dword [dword 0x46e850]
mov eax,eax
jmp dword [dword 0x46e84c]
mov eax,eax
jmp dword [dword 0x46e848]
mov eax,eax
push eax
push byte +0x40
call dword 0x5818
ret
lea eax,[eax+0x0]
mov eax,0x34
ret
mov eax,eax
push ebx
call dword 0x583c
mov ebx,eax
test ebx,ebx
jz 0x5886
cmp dword [dword 0x467788],byte -0x1
jnz 0x5863
mov eax,0xe2
call dword 0x3a10
mov eax,ebx
call dword 0x5830
test eax,eax
jnz 0x587a
mov eax,0xe2
call dword 0x3a10
jmp short 0x5886
push eax
mov eax,[0x467788]
push eax
call dword 0x5828
pop ebx
ret
mov cl,[dword 0x46b7f0]
mov eax,[0x467788]
test cl,cl
jnz 0x58bd
mov edx,[dword fs:0x2c]
mov eax,[edx+eax*4]
ret
call dword 0x5844
mov eax,[0x467788]
push eax
call dword 0x5820
test eax,eax
jz 0x58b7
ret
mov eax,[0x46b7f8]
ret
push eax
call dword 0x5820
test eax,eax
jz 0x58a2
ret
mov eax,0x467790
call dword 0x51f0
ret
nop
push ebx
mov ebx,eax
xor eax,eax
mov [0x467788],eax
push byte +0x0
call dword 0x5810
mov [0x46b7f4],eax
mov eax,[0x46b7f4]
mov [0x467794],eax
xor eax,eax
mov [0x467798],eax
xor eax,eax
mov [0x46779c],eax
call dword 0x58c8
mov edx,0x467790
mov eax,ebx
call dword 0x377c
pop ebx
ret
lea eax,[eax+0x0]
push ebp
mov ebp,esp
push ebx
mov ebx,[ebp+0x8]
mov [ebx],eax
mov [ebx+0x4],edx
mov eax,[ebp+0xc]
mov [ebx+0xc],eax
mov [ebx+0x8],ecx
pop ebx
pop ebp
ret 0x8
mov eax,eax
mov [ecx],eax
mov [ecx+0x4],edx
ret
mov eax,eax
push ecx
mov edx,eax
and dx,byte -0x1
mov [esp],dx
shr eax,byte 0x10
mov [esp+0x2],ax
mov eax,[esp]
pop edx
ret
push ebp
mov ebp,esp
push ebx
mov ebx,[ebp+0x8]
mov [ebx],eax
mov [ebx+0x4],edx
add ecx,eax
mov [ebx+0x8],ecx
add edx,[ebp+0xc]
mov [ebx+0xc],edx
pop ebx
pop ebp
ret 0x8
jz 0x59db
inc eax
add [ecx],al
add al,0x48
push edi
dec esi
inc esp
add eax,0x0
db 0xff
db 0xff
db 0xff
call dword [eax+0x406988]
add eax,[edx]
xor [dword cs:0x0],eax
or al,0x0
add [eax],al
test [ecx+0x40],ch
add [edx],cl
outsd
fs push ebx
gs insb
arpl [gs:ebp+0x64],si
or [edi+0x64],ch
inc edi
jc 0x5a0b
jns 0x5a11
or ch,[fs:edi+0x64]
inc esp
imul esi,[ebx+0x61],dword 0x64656c62
or [edi+0x64],ebp
inc ebx
push dword 0x656b6365
or [fs:edi+0x64],ebp
inc esi
outsd
arpl [ebp+0x73],si
or [fs:edi+0x64],ebp
inc esp
gs popaw
jnz 0x5a41
jz 0x59e1
outsd
fs dec eax
outsd
jz 0x5a29
imul esp,[edi+0x68],dword 0x646f0a74
dec ecx
outsb
popad
arpl [ecx+ebp*2+0x76],si
or [gs:edi+0x64],ebp
dec esi
outsd
inc ecx
arpl [ebx+0x65],sp
insb
or eax,0x6f4e646f
inc esi
outsd
arpl [ebp+0x73],si
push edx
arpl [gs:ebx+ecx+0x6f],si
fs push edx
gs jnc 0x5a70
jc 0x5a83
xor [fs:ebx],ecx
outsd
fs push edx
gs jnc 0x5a7c
jc 0x5a8f
xor cl,[fs:esi]
outsd
fs inc ebx
outsd
insd
bound ebp,[edi+0x42]
outsd
js 0x5a6d
imul esi,[fs:edi+eax+0x57],dword 0x6f646e69

ja 0x5aa6
nop
cmp [edx+0x40],ch
add [esi],al
andps xmm1,oword [edi+0x77]
outsb
gs jc 0x5a85
jc 0x5aa4
ja 0x5a98
jz 0x5aa8
jz 0x5aae
add eax,[ecx+ebp*2-0x3f74ffc0]
jmp dword [dword 0x46ed04]
mov eax,eax
jmp dword [dword 0x46ed00]
mov eax,eax
jmp dword [dword 0x46ecfc]
mov eax,eax
jmp dword [dword 0x46ecf8]
mov eax,eax
jmp dword [dword 0x46ecf0]
mov eax,eax
jmp dword [dword 0x46ecec]
mov eax,eax
jmp dword [dword 0x46ece8]
mov eax,eax
jmp dword [dword 0x46ece4]
mov eax,eax
jmp dword [dword 0x46ece0]
mov eax,eax
jmp dword [dword 0x46ecdc]
mov eax,eax
jmp dword [dword 0x46ecd8]
mov eax,eax
jmp dword [dword 0x46ecd4]
mov eax,eax
jmp dword [dword 0x46ecd0]
mov eax,eax
jmp dword [dword 0x46eccc]
mov eax,eax
jmp dword [dword 0x46ecc8]
mov eax,eax
jmp dword [dword 0x46ecc4]
mov eax,eax
jmp dword [dword 0x46ecc0]
mov eax,eax
jmp dword [dword 0x46ecbc]
mov eax,eax
jmp dword [dword 0x46ecb8]
mov eax,eax
jmp dword [dword 0x46ecb4]
mov eax,eax
jmp dword [dword 0x46ecb0]
mov eax,eax
jmp dword [dword 0x46ecac]
mov eax,eax
jmp dword [dword 0x46eca8]
mov eax,eax
jmp dword [dword 0x46eca4]
mov eax,eax
jmp dword [dword 0x46eca0]
mov eax,eax
jmp dword [dword 0x46ec9c]
mov eax,eax
jmp dword [dword 0x46ec98]
mov eax,eax
jmp dword [dword 0x46ec94]
mov eax,eax
jmp dword [dword 0x46ec90]
mov eax,eax
jmp dword [dword 0x46ec8c]
mov eax,eax
jmp dword [dword 0x46ec88]
mov eax,eax
jmp dword [dword 0x46ec84]
mov eax,eax
jmp dword [dword 0x46ec80]
mov eax,eax
jmp dword [dword 0x46ec7c]
mov eax,eax
jmp dword [dword 0x46ec78]
mov eax,eax
jmp dword [dword 0x46ec74]
mov eax,eax
jmp dword [dword 0x46ec70]
mov eax,eax
jmp dword [dword 0x46ec6c]
mov eax,eax
jmp dword [dword 0x46ec68]
mov eax,eax
jmp dword [dword 0x46ec64]
mov eax,eax
jmp dword [dword 0x46ec60]
mov eax,eax
jmp dword [dword 0x46ec5c]
mov eax,eax
jmp dword [dword 0x46ec58]
mov eax,eax
jmp dword [dword 0x46ec54]
mov eax,eax
jmp dword [dword 0x46ec50]
mov eax,eax
jmp dword [dword 0x46ec4c]
mov eax,eax
jmp dword [dword 0x46ec48]
mov eax,eax
jmp dword [dword 0x46ec44]
mov eax,eax
jmp dword [dword 0x46ec40]
mov eax,eax
jmp dword [dword 0x46ec3c]
mov eax,eax
jmp dword [dword 0x46ec38]
mov eax,eax
jmp dword [dword 0x46ec34]
mov eax,eax
jmp dword [dword 0x46ec30]
mov eax,eax
jmp dword [dword 0x46ec2c]
mov eax,eax
jmp dword [dword 0x46ec28]
mov eax,eax
jmp dword [dword 0x46ec24]
mov eax,eax
jmp dword [dword 0x46ec20]
mov eax,eax
jmp dword [dword 0x46ec1c]
mov eax,eax
jmp dword [dword 0x46ec18]
mov eax,eax
jmp dword [dword 0x46ec14]
mov eax,eax
jmp dword [dword 0x46ec0c]
mov eax,eax
jmp dword [dword 0x46ec08]
mov eax,eax
jmp dword [dword 0x46ec04]
mov eax,eax
jmp dword [dword 0x46ebfc]
mov eax,eax
jmp dword [dword 0x46ebf8]
mov eax,eax
jmp dword [dword 0x46ebf4]
mov eax,eax
jmp dword [dword 0x46ebf0]
mov eax,eax
jmp dword [dword 0x46ebec]
mov eax,eax
jmp dword [dword 0x46ebe8]
mov eax,eax
jmp dword [dword 0x46ebe4]
mov eax,eax
jmp dword [dword 0x46ebe0]
mov eax,eax
jmp dword [dword 0x46ebdc]
mov eax,eax
jmp dword [dword 0x46ebd8]
mov eax,eax
jmp dword [dword 0x46ebd4]
mov eax,eax
jmp dword [dword 0x46ebd0]
mov eax,eax
jmp dword [dword 0x46ebcc]
mov eax,eax
jmp dword [dword 0x46ebc8]
mov eax,eax
jmp dword [dword 0x46ebc4]
mov eax,eax
jmp dword [dword 0x46ebc0]
mov eax,eax
jmp dword [dword 0x46ebbc]
mov eax,eax
jmp dword [dword 0x46ebb8]
mov eax,eax
jmp dword [dword 0x46ebb4]
mov eax,eax
jmp dword [dword 0x46ebb0]
mov eax,eax
jmp dword [dword 0x46ebac]
mov eax,eax
jmp dword [dword 0x46eba8]
mov eax,eax
jmp dword [dword 0x46eba4]
mov eax,eax
jmp dword [dword 0x46eba0]
mov eax,eax
jmp dword [dword 0x46eb9c]
mov eax,eax
jmp dword [dword 0x46eb98]
mov eax,eax
jmp dword [dword 0x46eb94]
mov eax,eax
jmp dword [dword 0x46eb90]
mov eax,eax
jmp dword [dword 0x46eb8c]
mov eax,eax
jmp dword [dword 0x46eb88]
mov eax,eax
jmp dword [dword 0x46eb84]
mov eax,eax
jmp dword [dword 0x46eb80]
mov eax,eax
jmp dword [dword 0x46eb7c]
mov eax,eax
jmp dword [dword 0x46eb78]
mov eax,eax
jmp dword [dword 0x46eb74]
mov eax,eax
jmp dword [dword 0x46eb70]
mov eax,eax
jmp dword [dword 0x46eb6c]
mov eax,eax
jmp dword [dword 0x46eb68]
mov eax,eax
jmp dword [dword 0x46eb64]
mov eax,eax
jmp dword [dword 0x46eb60]
mov eax,eax
jmp dword [dword 0x46eb5c]
mov eax,eax
jmp dword [dword 0x46eb58]
mov eax,eax
jmp dword [dword 0x46eb54]
mov eax,eax
jmp dword [dword 0x46eb50]
mov eax,eax
jmp dword [dword 0x46eb4c]
mov eax,eax
jmp dword [dword 0x46eb48]
mov eax,eax
jmp dword [dword 0x46eb44]
mov eax,eax
jmp dword [dword 0x46eb40]
mov eax,eax
jmp dword [dword 0x46eb3c]
mov eax,eax
jmp dword [dword 0x46eb38]
mov eax,eax
jmp dword [dword 0x46eb34]
mov eax,eax
jmp dword [dword 0x46eb30]
mov eax,eax
jmp dword [dword 0x46eb2c]
mov eax,eax
jmp dword [dword 0x46eb28]
mov eax,eax
jmp dword [dword 0x46eb24]
mov eax,eax
jmp dword [dword 0x46eb20]
mov eax,eax
jmp dword [dword 0x46eb1c]
mov eax,eax
jmp dword [dword 0x46eb18]
mov eax,eax
jmp dword [dword 0x46eb14]
mov eax,eax
jmp dword [dword 0x46eb10]
mov eax,eax
jmp dword [dword 0x46eb0c]
mov eax,eax
jmp dword [dword 0x46eb08]
mov eax,eax
jmp dword [dword 0x46eb04]
mov eax,eax
jmp dword [dword 0x46eb00]
mov eax,eax
jmp dword [dword 0x46eafc]
mov eax,eax
jmp dword [dword 0x46eaf4]
mov eax,eax
jmp dword [dword 0x46eaf0]
mov eax,eax
jmp dword [dword 0x46eae4]
mov eax,eax
jmp dword [dword 0x46ead8]
mov eax,eax
jmp dword [dword 0x46ead4]
mov eax,eax
jmp dword [dword 0x46ead0]
mov eax,eax
jmp dword [dword 0x46eae0]
mov eax,eax
jmp dword [dword 0x46eadc]
mov eax,eax
jmp dword [dword 0x46eaec]
mov eax,eax
jmp dword [dword 0x46eae8]
mov eax,eax
jmp dword [dword 0x46eacc]
mov eax,eax
jmp dword [dword 0x46eac8]
mov eax,eax
jmp dword [dword 0x46eac4]
mov eax,eax
jmp dword [dword 0x46eac0]
mov eax,eax
jmp dword [dword 0x46eabc]
mov eax,eax
jmp dword [dword 0x46eab8]
mov eax,eax
jmp dword [dword 0x46eab4]
mov eax,eax
jmp dword [dword 0x46eab0]
mov eax,eax
jmp dword [dword 0x46eaac]
mov eax,eax
jmp dword [dword 0x46eaa8]
mov eax,eax
jmp dword [dword 0x46eaa4]
mov eax,eax
jmp dword [dword 0x46eaa0]
mov eax,eax
jmp dword [dword 0x46ea9c]
mov eax,eax
jmp dword [dword 0x46ea98]
mov eax,eax
jmp dword [dword 0x46ea94]
mov eax,eax
jmp dword [dword 0x46ea90]
mov eax,eax
jmp dword [dword 0x46ea8c]
mov eax,eax
jmp dword [dword 0x46ea88]
mov eax,eax
jmp dword [dword 0x46ea84]
mov eax,eax
jmp dword [dword 0x46ea80]
mov eax,eax
jmp dword [dword 0x46ea7c]
mov eax,eax
jmp dword [dword 0x46ea78]
mov eax,eax
jmp dword [dword 0x46ea74]
mov eax,eax
jmp dword [dword 0x46ea70]
mov eax,eax
jmp dword [dword 0x46ea6c]
mov eax,eax
jmp dword [dword 0x46ea68]
mov eax,eax
jmp dword [dword 0x46ea64]
mov eax,eax
jmp dword [dword 0x46ea60]
mov eax,eax
jmp dword [dword 0x46ea5c]
mov eax,eax
jmp dword [dword 0x46ea58]
mov eax,eax
jmp dword [dword 0x46ea54]
mov eax,eax
jmp dword [dword 0x46ea50]
mov eax,eax
jmp dword [dword 0x46ea4c]
mov eax,eax
jmp dword [dword 0x46ea48]
mov eax,eax
jmp dword [dword 0x46ea44]
mov eax,eax
jmp dword [dword 0x46ea40]
mov eax,eax
jmp dword [dword 0x46ea3c]
mov eax,eax
jmp dword [dword 0x46ea38]
mov eax,eax
jmp dword [dword 0x46ea34]
mov eax,eax
jmp dword [dword 0x46ea30]
mov eax,eax
jmp dword [dword 0x46ea2c]
mov eax,eax
jmp dword [dword 0x46ea28]
mov eax,eax
jmp dword [dword 0x46ea24]
mov eax,eax
jmp dword [dword 0x46ea20]
mov eax,eax
jmp dword [dword 0x46ea1c]
mov eax,eax
jmp dword [dword 0x46ea18]
mov eax,eax
jmp dword [dword 0x46ea14]
mov eax,eax
jmp dword [dword 0x46ea10]
mov eax,eax
jmp dword [dword 0x46ea0c]
mov eax,eax
jmp dword [dword 0x46ea08]
mov eax,eax
jmp dword [dword 0x46ea04]
mov eax,eax
jmp dword [dword 0x46ea00]
mov eax,eax
jmp dword [dword 0x46e9fc]
mov eax,eax
jmp dword [dword 0x46e9f8]
mov eax,eax
jmp dword [dword 0x46e9f4]
mov eax,eax
jmp dword [dword 0x46e9f0]
mov eax,eax
jmp dword [dword 0x46e9ec]
mov eax,eax
jmp dword [dword 0x46e9e8]
mov eax,eax
jmp dword [dword 0x46e9e4]
mov eax,eax
jmp dword [dword 0x46e9e0]
mov eax,eax
jmp dword [dword 0x46e9dc]
mov eax,eax
jmp dword [dword 0x46e9d8]
mov eax,eax
jmp dword [dword 0x46e9d4]
mov eax,eax
jmp dword [dword 0x46e9d0]
mov eax,eax
jmp dword [dword 0x46e9cc]
mov eax,eax
jmp dword [dword 0x46e9c8]
mov eax,eax
jmp dword [dword 0x46e9c4]
mov eax,eax
jmp dword [dword 0x46e9c0]
mov eax,eax
jmp dword [dword 0x46e9bc]
mov eax,eax
jmp dword [dword 0x46e9b8]
mov eax,eax
jmp dword [dword 0x46e9b4]
mov eax,eax
jmp dword [dword 0x46e9b0]
mov eax,eax
jmp dword [dword 0x46e9ac]
mov eax,eax
jmp dword [dword 0x46e9d8]
mov eax,eax
jmp dword [dword 0x46e9a8]
mov eax,eax
jmp dword [dword 0x46e9a4]
mov eax,eax
jmp dword [dword 0x46e9a0]
mov eax,eax
jmp dword [dword 0x46e99c]
mov eax,eax
jmp dword [dword 0x46e998]
mov eax,eax
jmp dword [dword 0x46e994]
mov eax,eax
jmp dword [dword 0x46e990]
mov eax,eax
jmp dword [dword 0x46e990]
mov eax,eax
jmp dword [dword 0x46e98c]
mov eax,eax
jmp dword [dword 0x46e988]
mov eax,eax
jmp dword [dword 0x46e984]
mov eax,eax
jmp dword [dword 0x46e980]
mov eax,eax
jmp dword [dword 0x46e97c]
mov eax,eax
jmp dword [dword 0x46e978]
mov eax,eax
jmp dword [dword 0x46e974]
mov eax,eax
jmp dword [dword 0x46e970]
mov eax,eax
jmp dword [dword 0x46e96c]
mov eax,eax
jmp dword [dword 0x46e968]
mov eax,eax
jmp dword [dword 0x46e964]
mov eax,eax
jmp dword [dword 0x46e960]
mov eax,eax
jmp dword [dword 0x46e95c]
mov eax,eax
jmp dword [dword 0x46e958]
mov eax,eax
jmp dword [dword 0x46e954]
mov eax,eax
jmp dword [dword 0x46e950]
mov eax,eax
jmp dword [dword 0x46e94c]
mov eax,eax
jmp dword [dword 0x46e948]
mov eax,eax
jmp dword [dword 0x46e944]
mov eax,eax
jmp dword [dword 0x46e940]
mov eax,eax
jmp dword [dword 0x46e93c]
mov eax,eax
jmp dword [dword 0x46e938]
mov eax,eax
jmp dword [dword 0x46e934]
mov eax,eax
jmp dword [dword 0x46e930]
mov eax,eax
jmp dword [dword 0x46e92c]
mov eax,eax
jmp dword [dword 0x46e928]
mov eax,eax
jmp dword [dword 0x46e924]
mov eax,eax
jmp dword [dword 0x46e920]
mov eax,eax
jmp dword [dword 0x46e91c]
mov eax,eax
jmp dword [dword 0x46e918]
mov eax,eax
jmp dword [dword 0x46e914]
mov eax,eax
jmp dword [dword 0x46e910]
mov eax,eax
jmp dword [dword 0x46e90c]
mov eax,eax
jmp dword [dword 0x46e908]
mov eax,eax
jmp dword [dword 0x46e904]
mov eax,eax
jmp dword [dword 0x46e900]
mov eax,eax
jmp dword [dword 0x46e8fc]
mov eax,eax
jmp dword [dword 0x46e8f8]
mov eax,eax
jmp dword [dword 0x46e8f4]
mov eax,eax
jmp dword [dword 0x46e8f0]
mov eax,eax
jmp dword [dword 0x46e8ec]
mov eax,eax
jmp dword [dword 0x46e8e8]
mov eax,eax
jmp dword [dword 0x46e8e8]
mov eax,eax
jmp dword [dword 0x46e8e4]
mov eax,eax
jmp dword [dword 0x46e8e0]
mov eax,eax
jmp dword [dword 0x46e8dc]
mov eax,eax
jmp dword [dword 0x46e8d8]
mov eax,eax
jmp dword [dword 0x46e8d4]
mov eax,eax
jmp dword [dword 0x46e8d0]
mov eax,eax
jmp dword [dword 0x46e8cc]
mov eax,eax
jmp dword [dword 0x46e8c8]
mov eax,eax
jmp dword [dword 0x46e8c4]
mov eax,eax
jmp dword [dword 0x46e8c0]
mov eax,eax
jmp dword [dword 0x46e8bc]
mov eax,eax
jmp dword [dword 0x46e8b8]
mov eax,eax
jmp dword [dword 0x46e8b4]
mov eax,eax
jmp dword [dword 0x46e8b0]
mov eax,eax
jmp dword [dword 0x46e8ac]
mov eax,eax
jmp dword [dword 0x46e8a8]
mov eax,eax
jmp dword [dword 0x46e8a4]
mov eax,eax
jmp dword [dword 0x46e8a0]
mov eax,eax
jmp dword [dword 0x46e89c]
mov eax,eax
jmp dword [dword 0x46e898]
mov eax,eax
jmp dword [dword 0x46e894]
mov eax,eax
jmp dword [dword 0x46e890]
mov eax,eax
jmp dword [dword 0x46e88c]
mov eax,eax
jmp dword [dword 0x46e888]
mov eax,eax
jmp dword [dword 0x46e884]
mov eax,eax
jmp dword [dword 0x46e880]
mov eax,eax
jmp dword [dword 0x46e87c]
mov eax,eax
jmp dword [dword 0x46e878]
mov eax,eax
jmp dword [dword 0x46e874]
mov eax,eax
jmp dword [dword 0x46e870]
mov eax,eax
jmp dword [dword 0x46e86c]
mov eax,eax
jmp dword [dword 0x46e868]
mov eax,eax
jmp dword [dword 0x46e864]
mov eax,eax
jmp dword [dword 0x46e860]
mov eax,eax
xchg eax,edx
call dword 0x2050
ret
nop
jmp dword [dword 0x46e85c]
mov eax,eax
push ebp
mov ebp,esp
push ecx
push ebx
push esi
push edi
mov [ebp-0x4],ecx
mov edi,edx
mov esi,eax
call dword 0x231c
mov ebx,eax
mov eax,[ebp+0x8]
push eax
mov eax,[ebp+0xc]
push eax
mov eax,[ebp+0x10]
push eax
mov eax,[ebp+0x14]
push eax
mov eax,[ebp+0x18]
push eax
mov eax,[ebp+0x1c]
push eax
mov eax,[ebp+0x20]
push eax
mov eax,[ebp+0x24]
push eax
mov eax,[ebp+0x28]
push eax
mov eax,[ebp-0x4]
push eax
push edi
push esi
call dword 0x63a0
mov esi,eax
mov eax,ebx
call dword 0x230c
mov eax,esi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
ret 0x24
nop
push ebp
mov ebp,esp
push ecx
push ebx
push esi
push edi
mov edi,ecx
mov esi,edx
mov [ebp-0x4],eax
push dword 0x40749c
push dword 0x4074b0
call dword 0x5f90
mov ebx,eax
push dword 0x4074b8
call dword 0x6240
mov edx,[ebp-0x4]
mov [edx],eax
push dword 0x4074c8
call dword 0x6240
mov [esi],eax
push dword 0x4074e0
call dword 0x6240
mov [edi],eax
cmp dword [esi],byte +0x0
jz 0x6463
test ebx,ebx
jz 0x6463
push byte +0x0
push byte +0x0
mov eax,[esi]
push eax
push ebx
call dword 0x6278
mov edx,[ebp+0xc]
mov [edx],eax
jmp short 0x646a
mov eax,[ebp+0xc]
xor edx,edx
mov [eax],edx
cmp dword [edi],byte +0x0
jz 0x6487
test ebx,ebx
jz 0x6487
push byte +0x0
push byte +0x0
mov eax,[edi]
push eax
push ebx
call dword 0x6278
mov edx,[ebp+0x8]
mov [edx],eax
jmp short 0x6490
mov eax,[ebp+0x8]
mov dword [eax],0x3
mov eax,ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
ret 0x8
add [eax],al
dec ebp
popad
gs a16 insb
insb
popad
outsb
and [ebp+0x53],cl
push edi
dec eax
inc ebp
inc ebp
dec esp
add [eax],al
add [eax],al
dec ebp
outsd
jnz 0x6527
gs pop edx
add [eax],al
dec ebp
push ebx
push edi
dec eax
inc ebp
inc ebp
dec esp
pop edi
push edx
dec edi
dec esp
dec esp
dec ebp
push ebx
inc edi
add [ebp+0x53],cl
dec eax
pop edi
push edi
dec eax
inc ebp
inc ebp
dec esp
push ebx
push ebp
push eax
push eax
dec edi
push edx
push esp
pop edi
dec ebp
push ebx
inc edi
add [eax],al
add [eax],al
dec ebp
push ebx
dec eax
pop edi
push ebx
inc ebx
push edx
dec edi
dec esp
dec esp
pop edi
dec esp
dec ecx
dec esi
inc ebp
push ebx
pop edi
dec ebp
push ebx
inc edi
add [eax],al
add [eax],al
push ebp
mov ebp,esp
xor eax,eax
push ebp
push dword 0x407533
push dword [fs:eax]
mov [fs:eax],esp
inc dword [dword 0x46b7fc]
jnz 0x6525
cmp dword [dword 0x46b800],byte +0x0
jz 0x6525
mov eax,[0x46b800]
push eax
call dword 0x5ad0
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x40753a
ret
jmp dword 0x3384
jmp short 0x6532
pop ebp
ret
jmp dword [dword 0x46ed14]
mov eax,eax
jmp dword [dword 0x46ed10]
mov eax,eax
jmp dword [dword 0x46ed0c]
mov eax,eax
test eax,0x80000000
setz al
ret
lea eax,[eax+0x0]
hlt
mov bh,0x46
add al,dh
inc dword [eax]
add ah,dh
mov bh,0x46
add cl,dh
inc dword [eax]
add ah,dh
mov bh,0x46
add dl,dh
inc dword [eax]
add ah,dh
mov bh,0x46
add bl,dh
inc dword [eax]
add ah,dh
mov bh,0x46
add ah,dh
inc dword [eax]
add ah,dh
mov bh,0x46
add ch,dh
inc dword [eax]
add ah,dh
mov bh,0x46
add dh,dh
inc dword [eax]
add ah,dh
mov bh,0x46
add bh,dh
inc dword [eax]
add ah,dh
mov bh,0x46
add al,bh
inc dword [eax]
add ah,dh
mov bh,0x46
add cl,bh
inc dword [eax]
add ah,dh
mov bh,0x46
add dl,bh
inc dword [eax]
add ah,dh
mov bh,0x46
add bl,bh
inc dword [eax]
add ah,dh
mov bh,0x46
add ah,bh
inc dword [eax]
add ah,dh
mov bh,0x46
add ch,bh
inc dword [eax]
add ah,dh
mov bh,0x46
add dh,bh
inc dword [eax]
add ah,dh
mov bh,0x46
add bh,bh
inc dword [eax]
add ah,dh
mov bh,0x46
add al,ah
inc dword [eax]
add ah,dh
mov bh,0x46
add cl,ah
inc dword [eax]
add ah,dh
mov bh,0x46
add dl,ah
inc dword [eax]
add ah,dh
mov bh,0x46
add bl,ah
inc dword [eax]
add ah,dh
mov bh,0x46
add ah,ah
inc dword [eax]
add ah,dh
mov bh,0x46
add ch,ah
inc dword [eax]
add ah,dh
mov bh,0x46
add dh,ah
inc dword [eax]
add ah,dh
mov bh,0x46
add bh,ah
inc dword [eax]
add ah,dh
mov bh,0x46
add al,ch
inc dword [eax]
add ah,dh
mov bh,0x46
add cl,ch
inc dword [eax]
add ah,dh
mov bh,0x46
add dl,ch
inc dword [eax]
add ah,dh
mov bh,0x46
add bl,ch
inc dword [eax]
add ah,dh
mov bh,0x46
add ah,ch
inc dword [eax]
add ah,dh
mov bh,0x46
add ch,ch
inc dword [eax]
add ah,dh
mov bh,0x46
add dh,ch
inc dword [eax]
add ah,dh
mov bh,0x46
add bh,ch
inc dword [eax]
add ah,dh
mov bh,0x46
add al,dl
inc dword [eax]
add ah,dh
mov bh,0x46
add cl,dl
inc dword [eax]
add ah,dh
mov bh,0x46
add dl,dl
inc dword [eax]
add ah,dh
mov bh,0x46
add bl,dl
inc dword [eax]
add ah,dh
mov bh,0x46
add ah,dl
inc dword [eax]
add ah,dh
mov bh,0x46
add ch,dl
inc dword [eax]
add ah,dh
mov bh,0x46
add dh,dl
inc dword [eax]
add ah,dh
mov bh,0x46
add bh,dl
inc dword [eax]
add ah,dh
mov bh,0x46
add al,bl
inc dword [eax]
add ah,dh
mov bh,0x46
add cl,bl
inc dword [eax]
add ah,dh
mov bh,0x46
add dl,bl
inc dword [eax]
add ah,dh
mov bh,0x46
add bl,bl
inc dword [eax]
add ah,dh
mov bh,0x46
add ah,bl
inc dword [eax]
add ah,dh
mov bh,0x46
add ch,bl
inc dword [eax]
add ah,dh
mov bh,0x46
add dh,bl
inc dword [eax]
add ah,dh
mov bh,0x46
add bh,bl
inc dword [eax]
add ah,dh
mov bh,0x46
add al,al
inc dword [eax]
add ah,dh
mov bh,0x46
add cl,al
inc dword [eax]
add ah,dh
mov bh,0x46
add dl,al
inc dword [eax]
add ah,dh
mov bh,0x46
add bl,al
inc dword [eax]
add ah,dh
mov bh,0x46
add ah,al
inc dword [eax]
add ah,dh
mov bh,0x46
add ch,al
inc dword [eax]
add ah,dh
mov bh,0x46
add dh,al
inc dword [eax]
add ah,dh
mov bh,0x46
add bh,al
inc dword [eax]
add ah,dh
mov bh,0x46
add al,cl
inc dword [eax]
add ah,dh
mov bh,0x46
add cl,cl
inc dword [eax]
add ah,dh
mov bh,0x46
add dl,cl
inc dword [eax]
add ah,dh
mov bh,0x46
add bl,cl
inc dword [eax]
add ah,dh
mov bh,0x46
add ah,cl
inc dword [eax]
add ah,dh
mov bh,0x46
add ch,cl
inc dword [eax]
add ah,dh
mov bh,0x46
add dh,cl
inc dword [eax]
add ah,dh
mov bh,0x46
add bh,cl
inc dword [eax]
add ah,dh
mov bh,0x46
add [eax-0xbffff01],dh
mov bh,0x46
add [ecx-0xbffff01],dh
mov bh,0x46
add [edx-0xbffff01],dh
mov bh,0x46
add [ebx-0xbffff01],dh
mov bh,0x46
add [edi+edi*8-0x480c0000],dh
inc esi
add [ebp-0xbffff01],dh
mov bh,0x46
add [esi-0xbffff01],dh
mov bh,0x46
add [edi-0xbffff01],dh
mov bh,0x46
add [eax-0xbffff01],bh
mov bh,0x46
add [ecx-0xbffff01],bh
mov bh,0x46
add [edx-0xbffff01],bh
mov bh,0x46
add [ebx-0xbffff01],bh
mov bh,0x46
add [edi+edi*8-0x480c0000],bh
inc esi
add [ebp-0xbffff01],bh
mov bh,0x46
add [esi-0xbffff01],bh
mov bh,0x46
add [edi-0xbffff01],bh
mov bh,0x46
add [eax-0xbffff01],ah
mov bh,0x46
add [ecx-0xbffff01],ah
mov bh,0x46
add [edx-0xbffff01],ah
mov bh,0x46
add [ebx-0xbffff01],ah
mov bh,0x46
add [edi+edi*8-0x480c0000],ah
inc esi
add [ebp-0xbffff01],ah
mov bh,0x46
add [esi-0xbffff01],ah
mov bh,0x46
add [edi-0xbffff01],ah
mov bh,0x46
add [eax-0xbffff01],ch
mov bh,0x46
add [ecx-0xbffff01],ch
mov bh,0x46
add [edx-0xbffff01],ch
mov bh,0x46
add [ebx-0xbffff01],ch
mov bh,0x46
add [edi+edi*8+0x784c0000],ch
inc eax
add [edx],cl
or [esi+eax*2+0x69],edx
insb
gs dec esi
popad
insd
gs nop
movsb
js 0x689b
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax+edi*2+0x40],ah
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
mov dh,0x78
inc eax
add [eax+eax],cl
add [eax],al
mov al,0x10
inc eax
add [eax],bh
ds inc eax
add [esi+edi+0x40],al
add [eax+0x3e],cl
inc eax
add [esi+edi+0x40],cl
add [eax+0x3e],al
inc eax
add [eax-0x5bffbfc5],cl
cmp eax,[eax+0x0]
loopne 0x68dd
inc eax
add [esi],cl
add [eax],al
add [eax],al
add [ecx],al
add [eax],al
add [eax+edx+0x40040],dl
add [eax],al
or [ebp+0x78],eax
arpl [ebp+0x70],sp
jz 0x6927
outsd
outsb
or al,0x79
inc eax
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [ecx+edi*2],cl
inc eax
add [eax+eax],cl
add [eax],al
pop eax
js 0x692b
add [eax],bh
ds inc eax
add [esi+edi+0x40],al
add [eax+0x3e],cl
inc eax
add [esi+edi+0x40],cl
add [eax+0x3e],al
inc eax
add [eax-0x5bffbfc5],cl
cmp eax,[eax+0x0]
loopne 0x6945
inc eax
add [esi],al
inc ebp
inc ecx
bound ebp,[edi+0x72]
jz 0x68a4
pushad
jns 0x6957
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax+0x79],ah
inc eax
add [eax],dl
add [eax],al
add [eax+0x78],bl
inc eax
add [eax],bh
ds inc eax
add [esi+edi+0x40],al
add [eax+0x3e],cl
inc eax
add [esi+edi+0x40],cl
add [eax+0x3e],al
inc eax
add [eax-0x23ffbfc5],cl
lds eax,[eax+0x0]
loopne 0x6999
inc eax
add [esi],cl
inc ebp
dec eax
gs popad
jo 0x69ac
js 0x69cc
gs jo 0x69e0
imul ebp,[edi+0x6e],dword 0x4079bc90
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [ecx+edi*2+0x100040],bh
add [eax],al
adc al,0x79
inc eax
add [eax],bh
ds inc eax
add [esi+edi+0x40],al
add [eax+0x3e],cl
inc eax
add [esi+edi+0x40],cl
add [eax+0x3e],al
inc eax
add [eax-0x23ffbfc5],cl
lds eax,[eax+0x0]
loopne 0x69f5
inc eax
add [eax*2+0x4f74754f],cl
dec bp
gs insd
outsd
jc 0x6a42
lea eax,[eax+0x0]
sbb [edx+0x40],bh
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],bl
jpe 0x6a2f
add [eax],dl
add [eax],al
add [eax+0x78],bl
inc eax
add [eax],bh
ds inc eax
add [esi+edi+0x40],al
add [eax+0x3e],cl
inc eax
add [esi+edi+0x40],cl
add [eax+0x3e],al
inc eax
add [eax-0x5bffbfc5],cl
cmp eax,[eax+0x0]
loopne 0x6a51
inc eax
add [ebx],cl
inc ebp
dec ecx
outsb
dec edi
jnz 0x6a93
inc ebp
jc 0x6a94
outsd
jc 0x6a95
jpe 0x6a67
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax+0x7a],dh
inc eax
add [eax],dl
add [eax],al
add [eax+0x78],bl
inc eax
add [eax],bh
ds inc eax
add [esi+edi+0x40],al
add [eax+0x3e],cl
inc eax
add [esi+edi+0x40],cl
add [eax+0x3e],al
inc eax
add [eax-0x5bffbfc5],cl
cmp eax,[eax+0x0]
loopne 0x6aa9
inc eax
add [ecx],cl
inc ebp
inc ebp
js 0x6ae9
gs jc 0x6ae6
popad
insb
mov eax,eax
enter 0x407a,0x0
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
enter 0x407a,0x0
adc [eax],al
add [eax],al
and al,0x7a
inc eax
add [eax],bh
ds inc eax
add [esi+edi+0x40],al
add [eax+0x3e],cl
inc eax
add [esi+edi+0x40],cl
add [eax+0x3e],al
inc eax
add [eax-0x5bffbfc5],cl
cmp eax,[eax+0x0]
loopne 0x6b01
inc eax
add [edx],dl
inc ebp
inc ebp
js 0x6b41
gs jc 0x6b3e
popad
insb
inc ebp
js 0x6b38
gs jo 0x6b4c
imul ebp,[edi+0x6e],dword 0x407b2890
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],ch
jpo 0x6b3f
add [eax],dl
add [eax],al
add [edx+edi*2],ah
inc eax
add [eax],bh
ds inc eax
add [esi+edi+0x40],al
add [eax+0x3e],cl
inc eax
add [esi+edi+0x40],cl
add [eax+0x3e],al
inc eax
add [eax-0x5bffbfc5],cl
cmp eax,[eax+0x0]
loopne 0x6b61
inc eax
add [ecx],cl
inc ebp
dec ecx
outsb
jz 0x6b73
jc 0x6ba2
outsd
jc 0x6abe
rol byte [eax+0x407b],byte 0x0
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
cmp byte [ebx+0x40],0x0
adc [eax],al
add [eax],al
fdivr qword [edx+0x40]
add [eax],bh
ds inc eax
add [esi+edi+0x40],al
add [eax+0x3e],cl
inc eax
add [esi+edi+0x40],cl
add [eax+0x3e],al
inc eax
add [eax-0x5bffbfc5],cl
cmp eax,[eax+0x0]
loopne 0x6bb9
inc eax
add [edx],cl
inc ebp
inc esp
imul esi,[esi+0x42],dword 0x72655a79
outsd
nop
fdivr dword [ebx+0x40]
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add al,bl
jpo 0x6bef
add [eax],dl
add [eax],al
add ah,bl
jpe 0x6bf7
add [eax],bh
ds inc eax
add [esi+edi+0x40],al
add [eax+0x3e],cl
inc eax
add [esi+edi+0x40],cl
add [eax+0x3e],al
inc eax
add [eax-0x5bffbfc5],cl
cmp eax,[eax+0x0]
loopne 0x6c11
inc eax
add [ebx],cl
inc ebp
push edx
popad
outsb
gs inc ebp
jc 0x6c54
outsd
jc 0x6c15
jl 0x6c27
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],dh
jl 0x6c47
add [eax],dl
add [eax],al
add ah,bl
jpe 0x6c4f
add [eax],bh
ds inc eax
add [esi+edi+0x40],al
add [eax+0x3e],cl
inc eax
add [esi+edi+0x40],cl
add [eax+0x3e],al
inc eax
add [eax-0x5bffbfc5],cl
cmp eax,[eax+0x0]
loopne 0x6c69
inc eax
add [eax*2+0x4f746e49],cl
jna 0x6c9d
jc 0x6ca0
insb
outsd
ja 0x6bcb
inc eax
add [esp+edi*2+0x40],cl
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
mov [eax+eax*2+0x0],segr7
adc [eax],al
add [eax],al
and al,0x7a
inc eax
add [eax],bh
ds inc eax
add [esi+edi+0x40],al
add [eax+0x3e],cl
inc eax
add [esi+edi+0x40],cl
add [eax+0x3e],al
inc eax
add [eax-0x5bffbfc5],cl
cmp eax,[eax+0x0]
loopne 0x6cc5
inc eax
add [edx],cl
inc ebp
dec ebp
popad
jz 0x6cfa
inc ebp
jc 0x6d07
outsd
jc 0x6c28
in al,0x7c
inc eax
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add ah,ah
jl 0x6cfb
add [eax],dl
add [eax],al
add [eax+0x7c],al
inc eax
add [eax],bh
ds inc eax
add [esi+edi+0x40],al
add [eax+0x3e],cl
inc eax
add [esi+edi+0x40],cl
add [eax+0x3e],al
inc eax
add [eax-0x5bffbfc5],cl
cmp eax,[eax+0x0]
loopne 0x6d1d
inc eax
add [edx],cl
inc ebp
dec ecx
outsb
jna 0x6d4b
insb
imul esp,[edi+ecx*2+0x70],dword 0x407d3c90
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [edi*2+0x100040],bh
add [eax],al
inc eax
jl 0x6d5b
add [eax],bh
ds inc eax
add [esi+edi+0x40],al
add [eax+0x3e],cl
inc eax
add [esi+edi+0x40],cl
add [eax+0x3e],al
inc eax
add [eax-0x5bffbfc5],cl
cmp eax,[eax+0x0]
loopne 0x6d75
inc eax
add [ebx],cl
inc ebp
pop edx
gs jc 0x6db1
inc esp
imul esi,[esi+0x69],dword 0x7d946564
inc eax
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [ebp+edi*2+0x100040],dl
add [eax],al
inc eax
jl 0x6db3
add [eax],bh
ds inc eax
add [esi+edi+0x40],al
add [eax+0x3e],cl
inc eax
add [esi+edi+0x40],cl
add [eax+0x3e],al
inc eax
add [eax-0x5bffbfc5],cl
cmp eax,[eax+0x0]
loopne 0x6dcd
inc eax
add [ecx],cl
inc ebp
dec edi
jna 0x6dfe
jc 0x6e01
insb
outsd
ja 0x6d2a
shr ah,byte 0x7d
inc eax
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add ah,ch
jnl 0x6e03
add [eax],dl
add [eax],al
add [eax+0x7c],al
inc eax
add [eax],bh
ds inc eax
add [esi+edi+0x40],al
add [eax+0x3e],cl
inc eax
add [esi+edi+0x40],cl
add [eax+0x3e],al
inc eax
add [eax-0x5bffbfc5],cl
cmp eax,[eax+0x0]
loopne 0x6e25
inc eax
add [edx],cl
inc ebp
push ebp
outsb
gs jc 0x6e5a
insb
outsd
ja 0x6d88
inc esp
jng 0x6e3b
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [esi+edi*2+0x40],al
add [eax],dl
add [eax],al
add [ecx+edi*2],dl
inc eax
add [eax],bh
ds inc eax
add [esi+edi+0x40],al
add [eax+0x3e],cl
inc eax
add [esi+edi+0x40],cl
add [eax+0x3e],al
inc eax
add [eax-0x23ffbfc5],cl
lds eax,[eax+0x0]
loopne 0x6e7d
inc eax
add [edi],cl
inc ebp
dec ecx
outsb
jna 0x6eab
insb
imul esp,[eax+edx*2+0x6f],dword 0x65746e69
jc 0x6df5
jng 0x6e97
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax+0xc00407e],ah
add [eax],al
add [eax+0x78],bl
inc eax
add [eax],bh
ds inc eax
add [esi+edi+0x40],al
add [eax+0x3e],cl
inc eax
add [esi+edi+0x40],cl
add [eax+0x3e],al
inc eax
add [eax-0x5bffbfc5],cl
cmp eax,[eax+0x0]
loopne 0x6ed9
inc eax
add [eax*2+0x61766e49],cl
insb
imul esp,[ebx+eax*2+0x61],dword 0x408d7473
add ah,bh
jng 0x6ef3
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add ah,bh
jng 0x6f13
add [eax+eax],cl
add [eax],al
pop eax
js 0x6f1b
add [eax],bh
ds inc eax
add [esi+edi+0x40],al
add [eax+0x3e],cl
inc eax
add [esi+edi+0x40],cl
add [eax+0x3e],al
inc eax
add [eax-0x5bffbfc5],cl
cmp eax,[eax+0x0]
loopne 0x6f35
inc eax
add [dword 0x6e6f4345],cl
jna 0x6f68
jc 0x6f79
inc ebp
jc 0x6f7a
outsd
jc 0x6e96
rcr byte [eax+0x7f],byte 0x40
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax+0x7f],bl
inc eax
add [eax],dl
add [eax],al
add [edx+edi*2],ah
inc eax
add [eax],bh
ds inc eax
add [esi+edi+0x40],al
add [eax+0x3e],cl
inc eax
add [esi+edi+0x40],cl
add [eax+0x3e],al
inc eax
add [eax-0x5bffbfc5],cl
cmp eax,[eax+0x0]
loopne 0x6f91
inc eax
add [eax],dl
inc ebp
inc ecx
arpl [ebx+0x65],sp
jnc 0x6fd3
push esi
imul ebp,[edi+0x6c],dword 0x6f697461
outsb
lea eax,[eax+0x0]
mov eax,0x407f
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax+0x1000407f],bh
add [eax],al
add [edx+edi*2],ah
inc eax
add [eax],bh
ds inc eax
add [esi+edi+0x40],al
add [eax+0x3e],cl
inc eax
add [esi+edi+0x40],cl
add [eax+0x3e],al
inc eax
add [eax-0x5bffbfc5],cl
cmp eax,[eax+0x0]
loopne 0x6ff1
inc eax
add [edx],cl
inc ebp
push eax
jc 0x7026
jna 0x7028
insb
gs xchg eax,eax
adc [eax+0x40],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
adc [eax+0x100040],al
add [eax],al
and al,0x7a
inc eax
add [eax],bh
ds inc eax
add [esi+edi+0x40],al
add [eax+0x3e],cl
inc eax
add [esi+edi+0x40],cl
add [eax+0x3e],al
inc eax
add [eax-0x5bffbfc5],cl
cmp eax,[eax+0x0]
loopne 0x7049
inc eax
add [esi],cl
inc ebp
push ebx
jz 0x7076
arpl [ebx+0x4f],bp
jna 0x707f
jc 0x7082
insb
outsd
ja 0x6fb0
insb
add byte [eax+0x0],0x0
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax+eax*4+0x40],ch
add [eax],dl
add [eax],al
add [edx+edi*2],ah
inc eax
add [eax],bh
ds inc eax
add [esi+edi+0x40],al
add [eax+0x3e],cl
inc eax
add [esi+edi+0x40],cl
add [eax+0x3e],al
inc eax
add [eax-0x5bffbfc5],cl
cmp eax,[eax+0x0]
loopne 0x70a5
inc eax
add [ecx],cl
inc ebp
inc ebx
outsd
outsb
jz 0x70e5
outsd
insb
inc ebx
mov eax,eax
les eax,[eax+0x40]
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
les eax,[eax+0xc0040]
add [eax],al
pop eax
js 0x70e3
add [eax],bh
ds inc eax
add [esi+edi+0x40],al
add [eax+0x3e],cl
inc eax
add [esi+edi+0x40],cl
add [eax+0x3e],al
inc eax
add [eax-0x5bffbfc5],cl
cmp eax,[eax+0x0]
loopne 0x70fd
inc eax
add [dword 0x72615645],cl
imul esp,[ecx+0x6e],dword 0x72724574
outsd
jc 0x705e
shl byte [eax],byte 0x81
inc eax
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],ah
add dword [eax+0x0],0xc
pop eax
js 0x713f
add [eax],bh
ds inc eax
add [esi+edi+0x40],al
add [eax+0x3e],cl
inc eax
add [esi+edi+0x40],cl
add [eax+0x3e],al
inc eax
add [eax-0x5bffbfc5],cl
cmp eax,[eax+0x0]
loopne 0x7159
inc eax
add [eax],dl
inc ebp
inc ecx
jnc 0x7198
gs jc 0x719c
imul ebp,[edi+0x6e],dword 0x6c696146
lea eax,[fs:eax+0x0]
add byte [ecx+0x40],0x0
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax+0xc004081],al
add [eax],al
add [eax+0x78],bl
inc eax
add [eax],bh
ds inc eax
add [esi+edi+0x40],al
add [eax+0x3e],cl
inc eax
add [esi+edi+0x40],cl
add [eax+0x3e],al
inc eax
add [eax-0x5bffbfc5],cl
cmp eax,[eax+0x0]
loopne 0x71b9
inc eax
add [esi],cl
inc ebp
inc ecx
db 0x62
jnc 0x71fa
jc 0x71e9
arpl [ebp+eax*2+0x72],si
jc 0x71fd
jc 0x7120
fadd qword [ecx+0x40]
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
fadd qword [ecx+0xc0040]
add [eax],al
pop eax
js 0x71fb
add [eax],bh
ds inc eax
add [esi+edi+0x40],al
add [eax+0x3e],cl
inc eax
add [esi+edi+0x40],cl
add [eax+0x3e],al
inc eax
add [eax-0x5bffbfc5],cl
cmp eax,[eax+0x0]
loopne 0x7215
inc eax
add [esi],cl
inc ebp
dec ecx
outsb
jz 0x7248
inc ebx
popad
jnc 0x725a
inc ebp
jc 0x725b
outsd
jc 0x717c
cmp [edx+0x40],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
cmp [edx+0x100040],al
add [eax],al
pop eax
js 0x7257
add [eax],bh
ds inc eax
add [esi+edi+0x40],al
add [eax+0x3e],cl
inc eax
add [esi+edi+0x40],cl
add [eax+0x3e],al
inc eax
add [eax-0x5bffbfc5],cl
cmp eax,[eax+0x0]
loopne 0x7271
inc eax
add [eax],cl
inc ebp
dec edi
push ebx
inc ebp
jc 0x72b1
outsd
jc 0x71cf
inc eax
add [eax+0x4082],dl
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax+0xc004082],dl
add [eax],al
add [eax+0x78],bl
inc eax
add [eax],bh
ds inc eax
add [esi+edi+0x40],al
add [eax+0x3e],cl
inc eax
add [esi+edi+0x40],cl
add [eax+0x3e],al
inc eax
add [eax-0x5bffbfc5],cl
cmp eax,[eax+0x0]
loopne 0x72c9
inc eax
add [edx],dl
inc ebp
push ebx
popad
o16 arpl [gs:ecx+0x6c],sp
insb
inc ebp
js 0x7300
gs jo 0x7314
imul ebp,[edi+0x6e],dword 0x4082a890
add [ecx],dl
add ebp,[esi]
aaa
xor al,0x4
add [eax],al
add [eax+edx+0x480040],dl
add [eax],al
xchg eax,esp
adc [eax+0x0],al
or [ebx+0x79],dl
jnc 0x7317
jz 0x732d
insb
jnc 0x7252
ror ah,byte 0x82
inc eax
add [ecx],dl
add ebp,[esi]
cmp [esp+eax],dh
add [eax],al
add [eax+edx+0x480040],dl
add [eax],al
xchg eax,esp
adc [eax+0x0],al
or [ebx+0x79],dl
jnc 0x733b
jz 0x7351
insb
jnc 0x7276
sar bh,byte 0xff
db 0xff
inc dword [ecx]
add [eax],al
add [eax+eax],ah
add [eax],al
inc esp
add dword [eax+0x0],byte +0x0
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [ebx+eax*4+0x40],al
add [eax+eax+0x0],al
add [eax+0x38004010],dh
ds inc eax
add [esi+edi+0x40],al
add [eax+0x3e],cl
inc eax
add [esi+edi+0x40],cl
add [eax+0x3e],al
inc eax
add [eax-0x5bffbfc5],cl
cmp eax,[eax+0x0]
aam 0xdc
inc eax
add [ebx],dl
push esp
push esp
push dword 0x64616572
dec esp
outsd
arpl [ecx+0x6c],sp
inc ebx
outsd
jnz 0x73c3
jz 0x73bc
jc 0x7325
add eax,byte -0x2c
jmp dword 0xd010
add eax,byte -0x2c
jmp dword 0xd080
add eax,byte -0x2c
jmp dword 0xcf14
add eax,byte -0x2c
jmp dword 0xcfc0
add dword [esp+0x4],byte -0x2c
jmp dword 0x531c
add dword [esp+0x4],byte -0x2c
jmp dword 0x5344
add dword [esp+0x4],byte -0x2c
jmp dword 0x5358
int3
jns 0x731d
inc eax
add [ebx-0x72ffbf7d],al
add dword [eax+0x0],byte +0x59
add dword [eax+0x0],byte +0x61
add dword [eax+0x0],byte +0x69
add dword [eax+0x0],byte +0x71
add dword [eax+0x0],byte +0x1
add [eax],al
add [edx-0x74],dl
adc [ebx-0x71],bh
sbb eax,0xdf9c4cdb
push edi
loopne 0x7436
sbb [dword 0x4083983f],edi
add [eax+eax],ch
add [eax],al
add [eax],al
add [eax],al
and [eax+eax*2+0x4083b400],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],ah
test [eax+0x0],al
xor [eax],al
add [eax],al
movsb
adc [eax+0x0],eax
cmp [esi],bh
inc eax
add al,dh
bound eax,[eax+0x0]
cld
bound eax,[eax+0x0]
dec esp
ds inc eax
add [eax+0x3e],al
inc eax
add [ebx],cl
inc eax
add [ebx+edi-0x2177ffc0],ah
inc eax
add [esp+edx*2],ah
dec ebp
jnz 0x7491
jz 0x7490
push edx
gs popad
fs inc ebp
js 0x7491
insb
jnz 0x74a4
imul esi,[esi+0x65],dword 0x74697257
gs push ebx
jns 0x74aa
arpl [eax+0x72],bp
outsd
outsb
imul edi,[edx+0x65],dword 0x408d72
push ebp
mov ebp,esp
push ebx
mov ebx,edx
mov edx,eax
shr edx,byte 0x10
div bx
mov ebx,[ebp+0x8]
mov [ecx],ax
mov [ebx],dx
pop ebx
pop ebp
ret 0x4
push ebx
push esi
push edi
mov edi,ecx
mov esi,edx
mov ebx,eax
push esi
push edi
mov ecx,ebx
mov dl,0x1
mov eax,[0x407eb0]
call dword 0xb548
call dword 0x3464
pop edi
pop esi
pop ebx
ret
mov eax,eax
jmp dword [dword 0x46ed24]
mov eax,eax
push ebp
mov ebp,esp
add esp,byte -0xc
push ebx
push esi
xor ecx,ecx
mov [ebp-0x4],ecx
mov esi,edx
mov ebx,eax
xor eax,eax
push ebp
push dword 0x408504
push dword [fs:eax]
mov [fs:eax],esp
push esi
lea eax,[ebp-0x4]
mov edx,ebx
call dword 0x4338
mov eax,[ebp-0x4]
call dword 0x4348
push eax
call dword 0x7488
test eax,0x80000000
setz al
neg al
sbb eax,eax
test eax,eax
jnz 0x74ee
mov [ebp-0xc],ebx
mov byte [ebp-0x8],0xb
lea edx,[ebp-0xc]
mov eax,[0x468db8]
xor ecx,ecx
call dword 0x7464
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x40850b
lea eax,[ebp-0x4]
call dword 0x41d0
ret
jmp dword 0x3384
jmp short 0x74fb
pop esi
pop ebx
mov esp,ebp
pop ebp
ret
lea eax,[eax+0x0]
push ebx
mov eax,[0x467820]
mov edx,[eax]
mov [dword 0x467820],edx
mov edx,[dword 0x468af0]
mov ecx,[eax+0x4]
mov [edx],ecx
mov ebx,[eax+0x8]
mov edx,0xc
call dword 0x1e7c
call ebx
pop ebx
ret
mov eax,eax
push ebx
mov ebx,eax
mov eax,0xc
call dword 0x1e60
mov edx,[dword 0x467820]
mov [eax],edx
mov edx,[dword 0x468af0]
mov edx,[edx]
mov [eax+0x4],edx
mov [eax+0x8],ebx
mov [0x467820],eax
mov eax,[0x468af0]
mov dword [eax],0x408514
pop ebx
ret
lea eax,[eax+0x0]
push ebx
push edi
push esi
test eax,eax
mov esi,eax
mov edi,edx
mov eax,edx
jz 0x75c6
mov edx,[esi-0x4]
test edx,edx
jz 0x75c6
mov ebx,edx
call dword 0x413c
mov edi,[edi]
mov eax,[ebx+esi-0x4]
mov ecx,eax
or eax,0x80808080
mov edx,eax
sub eax,0x7b7b7b7b
xor edx,ecx
or eax,0x80808080
sub eax,0x66666666
and eax,edx
shr eax,byte 0x2
sub ecx,eax
mov [ebx+edi-0x4],ecx
sub ebx,byte +0x1
and ebx,byte -0x4
jmp short 0x75f5
pop esi
pop edi
pop ebx
jmp dword 0x3a1c
mov eax,[ebx+esi]
mov ecx,eax
or eax,0x80808080
mov edx,eax
sub eax,0x7b7b7b7b
xor edx,ecx
or eax,0x80808080
sub eax,0x66666666
and eax,edx
shr eax,byte 0x2
sub ecx,eax
mov [ebx+edi],ecx
sub ebx,byte +0x4
jnc 0x75ce
pop esi
pop edi
pop ebx
ret
mov eax,eax
push ebx
push edi
push esi
test eax,eax
mov esi,eax
mov edi,edx
mov eax,edx
jz 0x764e
mov edx,[esi-0x4]
test edx,edx
jz 0x764e
mov ebx,edx
call dword 0x413c
mov edi,[edi]
mov eax,[ebx+esi-0x4]
mov ecx,eax
or eax,0x80808080
mov edx,eax
sub eax,0x5b5b5b5b
xor edx,ecx
or eax,0x80808080
sub eax,0x66666666
and eax,edx
shr eax,byte 0x2
add ecx,eax
mov [ebx+edi-0x4],ecx
sub ebx,byte +0x1
and ebx,byte -0x4
jmp short 0x767d
pop esi
pop edi
pop ebx
jmp dword 0x3a1c
mov eax,[ebx+esi]
mov ecx,eax
or eax,0x80808080
mov edx,eax
sub eax,0x5b5b5b5b
xor edx,ecx
or eax,0x80808080
sub eax,0x66666666
and eax,edx
shr eax,byte 0x2
add ecx,eax
mov [ebx+edi],ecx
sub ebx,byte +0x4
jnc 0x7656
pop esi
pop edi
pop ebx
ret
mov eax,eax
cmp eax,edx
jz 0x76da
test eax,edx
jz 0x76dd
movzx ecx,byte [edx]
cmp cl,[eax]
jz 0x769d
movzx eax,byte [eax]
sub eax,ecx
ret
push ebx
mov ebx,[eax-0x4]
xor ecx,ecx
sub ebx,[edx-0x4]
push ebx
adc ecx,byte -0x1
and ecx,ebx
sub ecx,[eax-0x4]
sub eax,ecx
sub edx,ecx
mov ebx,[ecx+eax]
xor ebx,[ecx+edx]
jnz 0x76c3
add ecx,byte +0x4
js 0x76b3
pop eax
pop ebx
ret
bsf ebx,ebx
shr ebx,byte 0x3
add ecx,ebx
jns 0x76c0
movzx eax,byte [ecx+eax]
movzx edx,byte [ecx+edx]
sub eax,edx
pop ebx
pop ebx
ret
xor eax,eax
ret
test eax,eax
jz 0x76e9
test edx,edx
jnz 0x7690
mov eax,[eax-0x4]
ret
sub eax,[edx-0x4]
ret
lea eax,[eax+0x0]
add eax,ecx
add edx,ecx
xor ecx,byte -0x1
add eax,byte -0x8
add edx,byte -0x8
add ecx,byte +0x9
push ebx
jg 0x7746
mov ebx,[ecx+eax]
cmp ebx,[ecx+edx]
jnz 0x777d
lea ebx,[ecx+eax]
add ecx,byte +0x4
and ebx,byte +0x3
sub ecx,ebx
jg 0x7746
mov ebx,[ecx+eax]
cmp ebx,[ecx+edx]
jnz 0x777d
mov ebx,[ecx+eax+0x4]
cmp ebx,[ecx+edx+0x4]
jnz 0x777d
add ecx,byte +0x8
jg 0x7746
mov ebx,[ecx+eax]
cmp ebx,[ecx+edx]
jnz 0x777d
mov ebx,[ecx+eax+0x4]
cmp ebx,[ecx+edx+0x4]
jnz 0x777d
add ecx,byte +0x8
jng 0x7718
cmp ecx,byte +0x4
jg 0x7756
mov ebx,[ecx+eax]
cmp ebx,[ecx+edx]
jnz 0x777d
add ecx,byte +0x4
cmp ecx,byte +0x6
jg 0x7768
movzx ebx,word [ecx+eax]
cmp bx,[ecx+edx]
jnz 0x777d
add ecx,byte +0x2
cmp ecx,byte +0x7
jg 0x7776
movzx ebx,byte [eax+0x7]
cmp bl,[edx+0x7]
jnz 0x777d
mov eax,0x1
pop ebx
ret
xor eax,eax
pop ebx
ret
lea eax,[eax+0x0]
test eax,eax
jnz 0x7792
test edx,edx
jz 0x7791
mov eax,[edx-0x4]
neg eax
ret
test edx,edx
jnz 0x779a
mov eax,[eax-0x4]
ret
push ebx
push ebp
push esi
mov ebp,[eax-0x4]
mov ebx,[edx-0x4]
sub ebp,ebx
sbb ecx,ecx
and ecx,ebp
add ecx,ebx
lea esi,[ecx+eax]
add edx,ecx
neg ecx
jz 0x7817
movzx eax,word [ecx+esi]
movzx ebx,word [ecx+edx]
cmp eax,ebx
jz 0x7812
cmp al,bl
jz 0x77f0
mov ah,0x0
mov bh,0x0
cmp al,0x61
jl 0x77d3
cmp al,0x7a
jg 0x77d3
sub eax,byte +0x20
cmp bl,0x61
jl 0x77e0
cmp bl,0x7a
jg 0x77e0
sub ebx,byte +0x20
sub eax,ebx
jnz 0x7819
movzx eax,word [ecx+esi]
movzx ebx,word [ecx+edx]
cmp ah,bh
jz 0x7812
shr eax,byte 0x8
shr ebx,byte 0x8
cmp al,0x61
jl 0x7801
cmp al,0x7a
jg 0x7801
sub eax,byte +0x20
cmp bl,0x61
jl 0x780e
cmp bl,0x7a
jg 0x780e
sub ebx,byte +0x20
sub eax,ebx
jnz 0x7819
add ecx,byte +0x2
jl 0x77b4
mov eax,ebp
pop esi
pop ebp
pop ebx
ret
lea eax,[eax+0x0]
cmp eax,edx
jz 0x783d
or eax,eax
jz 0x783f
or edx,edx
jz 0x7840
mov ecx,[eax-0x4]
cmp ecx,[edx-0x4]
jnz 0x7840
call dword 0x7784
test eax,eax
jnz 0x7840
mov al,0x1
ret
xor eax,eax
ret
nop
push ebx
push esi
push edi
mov edi,edx
mov esi,eax
mov eax,esi
test eax,eax
jz 0x7856
sub eax,byte +0x4
mov eax,[eax]
mov ebx,eax
mov eax,esi
call dword 0x3eac
mov edx,eax
mov eax,edi
mov ecx,ebx
call dword 0x3b0c
test ebx,ebx
jng 0x7877
push ebx
mov eax,[edi]
push eax
call dword 0x5e98
pop edi
pop esi
pop ebx
ret
nop
push ebx
push esi
push edi
mov edi,edx
mov esi,eax
mov eax,esi
test eax,eax
jz 0x788e
sub eax,byte +0x4
mov eax,[eax]
mov ebx,eax
mov eax,esi
call dword 0x3eac
mov edx,eax
mov eax,edi
mov ecx,ebx
call dword 0x3b0c
test ebx,ebx
jng 0x78af
push ebx
mov eax,[edi]
push eax
call dword 0x5e80
pop edi
pop esi
pop ebx
ret
nop
push ebx
push esi
push edi
push ebp
mov ebp,edx
mov edi,eax
mov ebx,edi
test ebx,ebx
jz 0x78c7
sub ebx,byte +0x4
mov ebx,[ebx]
mov esi,ebp
test esi,esi
jz 0x78d2
sub esi,byte +0x4
mov esi,[esi]
push esi
mov eax,ebp
call dword 0x3eac
push eax
push ebx
mov eax,edi
call dword 0x3eac
push eax
push byte +0x1
push dword 0x400
call dword 0x5a78
sub eax,byte +0x2
pop ebp
pop edi
pop esi
pop ebx
ret
push ebx
push esi
push edi
mov ebx,ecx
mov edi,edx
mov esi,eax
push ebx
push edi
push ebx
push esi
push byte +0x1
push dword 0x400
call dword 0x5a78
sub eax,byte +0x2
pop edi
pop esi
pop ebx
ret
push ebx
push esi
push edi
push ebp
mov ebp,edx
mov edi,eax
mov eax,edi
test eax,eax
jz 0x792b
sub eax,byte +0x4
mov eax,[eax]
mov esi,eax
mov ebx,0x1
jmp short 0x7935
inc ebx
cmp esi,ebx
jl 0x7940
cmp byte [edi+ebx-0x1],0x20
jna 0x7934
cmp esi,ebx
jnl 0x794e
mov eax,ebp
call dword 0x3a1c
jmp short 0x7964
dec esi
cmp byte [edi+esi-0x1],0x20
jna 0x794d
push ebp
mov ecx,esi
sub ecx,ebx
inc ecx
mov edx,ebx
mov eax,edi
call dword 0x3f14
pop ebp
pop edi
pop esi
pop ebx
ret
lea eax,[eax+0x0]
push ebp
mov ebp,esp
add esp,byte -0x14
push ebx
push esi
push edi
xor ebx,ebx
mov [ebp-0x14],ebx
mov [ebp-0x8],ecx
mov [ebp-0x1],dl
mov edi,eax
xor eax,eax
push ebp
push dword 0x408ad3
push dword [fs:eax]
mov [fs:eax],esp
mov ebx,edi
mov edx,edi
mov eax,edx
test eax,eax
jz 0x799f
sub eax,byte +0x4
mov eax,[eax]
lea esi,[eax+ebx]
mov eax,edx
test eax,eax
jz 0x79ad
sub eax,byte +0x4
mov eax,[eax]
mov [ebp-0xc],eax
cmp esi,ebx
jna 0x7a0a
movzx eax,byte [ebx]
sub al,0xa
jz 0x79c1
sub al,0x3
jz 0x79cc
jmp short 0x79eb
cmp byte [ebp-0x1],0x1
jnz 0x7a05
inc dword [ebp-0xc]
jmp short 0x7a05
cmp byte [ebp-0x1],0x1
jnz 0x79e0
cmp byte [ebx+0x1],0xa
jnz 0x79db
inc ebx
jmp short 0x7a05
inc dword [ebp-0xc]
jmp short 0x7a05
cmp byte [ebx+0x1],0xa
jnz 0x7a05
dec dword [ebp-0xc]
jmp short 0x7a05
movzx eax,byte [ebx]
movzx eax,al
bt [dword 0x4677f8],eax
jnc 0x7a05
mov eax,ebx
call dword 0xc07c
mov ebx,eax
jmp short 0x7a06
inc ebx
cmp esi,ebx
ja 0x79b4
lea eax,[ebp-0x14]
mov edx,ebx
call dword 0x3c14
mov eax,[ebp-0x14]
test eax,eax
jz 0x7a20
sub eax,byte +0x4
mov eax,[eax]
cmp eax,[ebp-0xc]
jnz 0x7a34
mov eax,[ebp-0x8]
mov edx,edi
call dword 0x3a70
jmp dword 0x7abd
mov ebx,edi
mov eax,[ebp-0x8]
mov ecx,[ebp-0xc]
xor edx,edx
call dword 0x3b0c
mov edi,[ebp-0x8]
mov edi,[edi]
cmp esi,ebx
jna 0x7abd
movzx eax,byte [ebx]
sub al,0xa
jz 0x7a59
sub al,0x3
jz 0x7a6a
jmp short 0x7a81
cmp byte [ebp-0x1],0x1
jnz 0x7a63
mov byte [edi],0xd
inc edi
mov byte [edi],0xa
inc edi
inc ebx
jmp short 0x7ab9
cmp byte [ebp-0x1],0x1
jnz 0x7a74
mov byte [edi],0xd
inc edi
mov byte [edi],0xa
inc edi
inc ebx
cmp byte [ebx],0xa
jnz 0x7ab9
inc ebx
jmp short 0x7ab9
movzx eax,byte [ebx]
movzx eax,al
bt [dword 0x4677f8],eax
jnc 0x7ab2
mov eax,ebx
call dword 0xc05c
mov [ebp-0x10],eax
mov edx,edi
mov eax,ebx
mov ecx,[ebp-0x10]
call dword 0x2050
mov eax,[ebp-0x10]
add edi,eax
mov eax,[ebp-0x10]
add ebx,eax
jmp short 0x7ab9
movzx eax,byte [ebx]
mov [edi],al
inc edi
inc ebx
cmp esi,ebx
ja 0x7a4c
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x408ada
lea eax,[ebp-0x14]
call dword 0x3a1c
ret
jmp dword 0x3384
jmp short 0x7aca
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret
lea eax,[eax+0x0]
push esi
push edi
mov edi,eax
xor eax,eax
mov esi,edi
mov ecx,esi
test ecx,ecx
jz 0x7af7
sub ecx,byte +0x4
mov ecx,[ecx]
test ecx,ecx
jnz 0x7aff
mov cl,0x1
jmp short 0x7b20
movzx ecx,byte [edi]
add cl,0xbf
sub cl,0x1a
jc 0x7b1b
sub cl,0x4
jz 0x7b1b
add cl,0xfe
sub cl,0x1a
jc 0x7b1b
xor ecx,ecx
jmp short 0x7b1d
mov cl,0x1
xor cl,0x1
test cl,cl
jnz dword 0x7bad
test dl,dl
jz 0x7b6f
mov edx,esi
test edx,edx
jz 0x7b37
sub edx,byte +0x4
mov edx,[edx]
sub edx,byte +0x2
jl 0x7bab
inc edx
mov esi,0x2
movzx ecx,byte [edi+esi-0x1]
sub cl,0x2e
jz 0x7b69
add cl,0xfe
sub cl,0xa
jc 0x7b69
add cl,0xf9
sub cl,0x1a
jc 0x7b69
sub cl,0x4
jz 0x7b69
add cl,0xfe
sub cl,0x1a
jnc 0x7bad
inc esi
dec edx
jnz 0x7b42
jmp short 0x7bab
mov edx,esi
test edx,edx
jz 0x7b7a
sub edx,byte +0x4
mov edx,[edx]
sub edx,byte +0x2
jl 0x7bab
inc edx
mov esi,0x2
movzx ecx,byte [edi+esi-0x1]
add cl,0xd0
sub cl,0xa
jc 0x7ba7
add cl,0xf9
sub cl,0x1a
jc 0x7ba7
sub cl,0x4
jz 0x7ba7
add cl,0xfe
sub cl,0x1a
jnc 0x7bad
inc esi
dec edx
jnz 0x7b85
mov al,0x1
pop edi
pop esi
ret
or cl,cl
jnz 0x7bcb
or eax,eax
jns 0x7bc6
neg eax
call dword 0x7bc6
mov al,0x2d
inc ecx
dec esi
mov [esi],al
ret
mov ecx,0xa
push edx
push esi
xor edx,edx
div ecx
dec esi
add dl,0x30
cmp dl,0x3a
jc 0x7bdd
add dl,0x7
mov [esi],dl
or eax,eax
jnz 0x7bcd
pop ecx
pop edx
sub ecx,esi
sub edx,ecx
jna 0x7bfb
add ecx,edx
mov al,0x30
sub esi,edx
jmp short 0x7bf6
mov [edx+esi],al
dec edx
jnz 0x7bf3
mov [esi],al
ret
push esi
mov esi,esp
sub esp,byte +0x10
xor ecx,ecx
push edx
xor edx,edx
call dword 0x7bb0
mov edx,esi
pop eax
call dword 0x3b0c
add esp,byte +0x10
pop esi
ret
lea eax,[eax+0x0]
or cl,cl
jnz 0x7c50
mov ecx,0xa
test dword [eax+0x4],0x80000000
jz 0x7c50
push dword [eax+0x4]
push dword [eax]
mov eax,esp
neg dword [esp]
adc dword [esp+0x4],byte +0x0
neg dword [esp+0x4]
call dword 0x7c50
mov byte [esi-0x1],0x2d
dec esi
inc ecx
add esp,byte +0x8
ret
push esi
sub esp,byte +0x4
fnstcw [esp+0x2]
fnstcw [esp]
or word [esp],0xf00
fldcw [esp]
mov [esp],cx
fld1
test dword [eax+0x4],0x80000000
jz 0x7c9a
push dword [eax+0x4]
push dword [eax]
and dword [esp+0x4],0x7fffffff
push dword 0x7fffffff
push dword 0xffffffff
fild qword [esp+0x8]
fild qword [esp]
fadd st2
faddp st1
add esp,byte +0x10
jmp short 0x7c9c
fild qword [eax]
fild word [esp]
fld st1
dec esi
fprem
fistp word [esp]
fdiv to st1
mov al,[esp]
add al,0x30
cmp al,0x3a
jc 0x7cb4
add al,0x7
mov [esi],al
fld st1
fcom st3
fstsw ax
sahf
jnc 0x7ca1
fldcw [esp+0x2]
add esp,byte +0x4
ffree st3
ffree st2
ffree st1
ffree st0
pop ecx
sub ecx,esi
sub edx,ecx
jna 0x7ce6
sub esi,edx
mov al,0x30
add ecx,edx
jmp short 0x7ce1
mov [edx+esi],al
dec edx
jnz 0x7cde
mov [esi],al
ret
nop
push ebp
mov ebp,esp
push esi
mov esi,esp
sub esp,byte +0x20
xor ecx,ecx
push eax
xor edx,edx
lea eax,[ebp+0x8]
call dword 0x7c1c
mov edx,esi
pop eax
call dword 0x3b0c
add esp,byte +0x20
pop esi
pop ebp
ret 0x8
mov eax,eax
cmp edx,byte +0x20
jna 0x7d17
xor edx,edx
push esi
mov esi,esp
sub esp,byte +0x20
push ecx
mov ecx,0x10
call dword 0x7bb0
mov edx,esi
pop eax
call dword 0x3b0c
add esp,byte +0x20
pop esi
ret
lea eax,[eax+0x0]
push ebx
push esi
add esp,byte -0xc
mov ebx,eax
mov edx,esp
mov eax,ebx
call dword 0x25c8
mov esi,eax
cmp dword [esp],byte +0x0
jz 0x7d69
mov [esp+0x4],ebx
mov byte [esp+0x8],0xb
lea edx,[esp+0x4]
mov eax,[0x468bfc]
xor ecx,ecx
call dword 0x7464
mov eax,esi
add esp,byte +0xc
pop esi
pop ebx
ret
lea eax,[eax+0x0]
push ebx
push ecx
mov ebx,edx
mov edx,esp
call dword 0x25c8
cmp dword [esp],byte +0x0
jz 0x7d87
mov eax,ebx
pop edx
pop ebx
ret
mov eax,eax
push ebx
push esi
push ecx
mov esi,edx
mov ebx,eax
mov edx,esp
mov eax,ebx
call dword 0x25c8
mov [esi],eax
cmp dword [esp],byte +0x0
setz al
pop edx
pop esi
pop ebx
ret
lea eax,[eax+0x0]
mov eax,[0x46b90c]
call dword 0x49d0
test eax,eax
jnz 0x7de3
push byte +0x1
mov eax,0x46b90c
mov ecx,0x1
mov edx,[dword 0x4082a4]
call dword 0x4b8c
add esp,byte +0x4
mov eax,[0x46b90c]
mov edx,0x408e24
call dword 0x3a70
mov eax,[0x46b910]
call dword 0x49d0
test eax,eax
jnz 0x7e1a
push byte +0x1
mov eax,0x46b910
mov ecx,0x1
mov edx,[dword 0x4082c8]
call dword 0x4b8c
add esp,byte +0x4
mov eax,[0x46b910]
mov edx,0x408e34
call dword 0x3a70
ret
add bh,bh
db 0xff
db 0xff
inc dword [eax+eax]
add [eax],al
push esp
jc 0x7e9c
add [gs:eax],al
add [eax],al
db 0xff
db 0xff
db 0xff
inc dword [dword 0x46000000]
popad
insb
jnc 0x7e9e
add [eax],al
add [ebp-0x75],dl
in al,dx
add esp,byte -0x14
push ebx
push esi
push edi
mov byte [ebp-0x1],0x0
test edx,edx
jl 0x7eb3
inc edx
mov [ebp-0xc],edx
mov ebx,eax
mov eax,[ebp+0x8]
mov eax,[eax-0x4]
mov [ebp-0x10],eax
mov eax,[ebx]
mov [ebp-0x14],eax
mov esi,[ebp-0x10]
test esi,esi
jz 0x7e6d
sub esi,byte +0x4
mov esi,[esi]
mov edi,[ebp-0x14]
test edi,edi
jz 0x7e79
sub edi,byte +0x4
mov edi,[edi]
push edi
mov eax,[ebp-0x14]
call dword 0x3eac
push eax
push esi
mov eax,[ebp-0x10]
call dword 0x3eac
push eax
push byte +0x1
push dword 0x400
call dword 0x5a78
sub eax,byte +0x2
test eax,eax
setz al
test al,al
jz 0x7eab
mov byte [ebp-0x1],0x1
jmp short 0x7eb3
add ebx,byte +0x4
dec dword [ebp-0xc]
jnz 0x7e53
movzx eax,byte [ebp-0x1]
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret
mov eax,eax
push ebp
mov ebp,esp
add esp,byte -0x10
push ebx
mov ebx,edx
mov [ebp-0x4],eax
lea edx,[ebp-0x10]
mov eax,[ebp-0x4]
call dword 0x92cc
mov edx,eax
test dl,dl
jz 0x7eef
fld tword [ebp-0x10]
fcomp dword [dword 0x408f40]
fstsw ax
sahf
setnz [ebx]
jmp short 0x7f38
call dword 0x7dac
push ebp
mov eax,[0x46b90c]
call dword 0x49d8
mov edx,eax
mov eax,[0x46b90c]
call dword 0x7e3c
pop ecx
mov edx,eax
test dl,dl
jz 0x7f17
mov byte [ebx],0x1
jmp short 0x7f38
push ebp
mov eax,[0x46b910]
call dword 0x49d8
mov edx,eax
mov eax,[0x46b910]
call dword 0x7e3c
pop ecx
mov edx,eax
test dl,dl
jz 0x7f38
mov byte [ebx],0x0
mov eax,edx
pop ebx
mov esp,ebp
pop ebp
ret
add [eax],al
add [eax],al
add bh,bh
db 0xff
db 0xff
inc dword [ecx]
add [eax],al
add [eax],dh
add [eax],al
add bh,bh
db 0xff
db 0xff
inc dword [edx]
add [eax],al
add [dword 0x53000031],ch
push esi
mov esi,ecx
mov ebx,eax
test dl,dl
jz 0x7f92
call dword 0x7dac
test bl,bl
jz 0x7f80
mov eax,esi
mov edx,[dword 0x46b90c]
mov edx,[edx]
call dword 0x3a70
jmp short 0x7fa3
mov eax,esi
mov edx,[dword 0x46b910]
mov edx,[edx]
call dword 0x3a70
pop esi
pop ebx
ret
mov eax,esi
movzx edx,bl
mov edx,[edx*4+0x467824]
call dword 0x3a70
pop esi
pop ebx
ret
mov eax,eax
push ebx
push esi
push edi
mov ebx,edx
mov edi,eax
or eax,byte -0x1
mov esi,ebx
and esi,byte +0x3
cmp esi,byte +0x2
ja 0x7ffb
mov edx,ebx
and edx,0xf0
cmp edx,byte +0x40
ja 0x7ffb
push byte +0x0
push dword 0x80
push byte +0x3
push byte +0x0
mov eax,ebx
and eax,0xf0
shr eax,byte 0x4
mov eax,[eax*4+0x467838]
push eax
mov eax,[esi*4+0x46782c]
push eax
mov eax,edi
call dword 0x3eac
push eax
call dword 0x5a90
pop edi
pop esi
pop ebx
ret
nop
push ebx
push esi
push edi
push ecx
mov edi,ecx
mov esi,edx
mov ebx,eax
push byte +0x0
lea eax,[esp+0x4]
push eax
push edi
push esi
push ebx
call dword 0x5bc8
test eax,eax
jnz 0x8024
mov dword [esp],0xffffffff
mov eax,[esp]
pop edx
pop edi
pop esi
pop ebx
ret
push ebx
push esi
push edi
push ecx
mov edi,ecx
mov esi,edx
mov ebx,eax
push byte +0x0
lea eax,[esp+0x4]
push eax
push edi
push esi
push ebx
call dword 0x5c20
test eax,eax
jnz 0x8050
mov dword [esp],0xffffffff
mov eax,[esp]
pop edx
pop edi
pop esi
pop ebx
ret
push ebp
mov ebp,esp
add esp,byte -0x8
push ebx
push esi
mov esi,edx
mov ebx,eax
mov eax,[ebp+0x8]
mov [ebp-0x8],eax
mov eax,[ebp+0xc]
mov [ebp-0x4],eax
push esi
lea eax,[ebp-0x4]
push eax
mov eax,[ebp-0x8]
push eax
push ebx
call dword 0x5bf0
mov [ebp-0x8],eax
cmp dword [ebp-0x8],byte -0x1
jnz 0x8098
call dword 0x5b28
test eax,eax
jz 0x8098
mov dword [ebp-0x4],0xffffffff
mov eax,[ebp-0x8]
mov edx,[ebp-0x4]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
ret 0x8
mov eax,eax
push ebx
mov ebx,eax
mov eax,ebx
call dword 0x3eac
push eax
call dword 0x5b10
cmp eax,byte -0x1
jz 0x80c1
test al,0x10
jnz 0x80c5
xor eax,eax
pop ebx
ret
mov al,0x1
pop ebx
ret
lea eax,[eax+0x0]
push ebp
mov ebp,esp
xor ecx,ecx
push ecx
push ecx
push ecx
push ecx
push ebx
mov [ebp-0x4],eax
mov eax,[ebp-0x4]
call dword 0x3e9c
xor eax,eax
push ebp
push dword 0x4091b5
push dword [fs:eax]
mov [fs:eax],esp
mov bl,0x1
cmp dword [ebp-0x4],byte +0x0
jnz 0x8119
mov ecx,[dword 0x468e74]
mov dl,0x1
mov eax,[0x4079cc]
call dword 0xb50c
mov edx,eax
mov dword [edx+0xc],0x3
mov eax,edx
call dword 0x3464
lea edx,[ebp-0x8]
mov eax,[ebp-0x4]
call dword 0xc198
mov edx,[ebp-0x8]
lea eax,[ebp-0x4]
call dword 0x3ab4
mov eax,[ebp-0x4]
test eax,eax
jz 0x813b
sub eax,byte +0x4
mov eax,[eax]
cmp eax,byte +0x3
jnl 0x8144
mov al,0x1
jmp short 0x814c
mov eax,[ebp-0x4]
call dword 0x80a8
test al,al
jz 0x8154
mov al,0x1
jmp short 0x816d
lea edx,[ebp-0xc]
mov eax,[ebp-0x4]
call dword 0x824c
mov eax,[ebp-0xc]
mov edx,[ebp-0x4]
call dword 0x3e44
setz al
test al,al
jnz 0x819a
lea edx,[ebp-0x10]
mov eax,[ebp-0x4]
call dword 0x824c
mov eax,[ebp-0x10]
call dword 0x80cc
test al,al
jz 0x8194
mov eax,[ebp-0x4]
call dword 0x83b0
test al,al
jnz 0x8198
xor ebx,ebx
jmp short 0x819a
mov bl,0x1
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x4091bc
lea eax,[ebp-0x10]
mov edx,0x4
call dword 0x3a40
ret
jmp dword 0x3384
jmp short 0x81a7
mov eax,ebx
pop ebx
mov esp,ebp
pop ebp
ret
nop
push ebx
push esi
mov esi,eax
mov eax,esi
test eax,eax
jz 0x81d3
sub eax,byte +0x4
mov eax,[eax]
mov ebx,eax
test ebx,ebx
jz 0x81f0
jmp short 0x81dc
dec ebx
mov edx,ebx
mov eax,esi
call dword 0xbe10
cmp al,0x2
jz 0x81db
lea eax,[esi+ebx-0x1]
pop esi
pop ebx
ret
xor eax,eax
pop esi
pop ebx
ret
lea eax,[eax+0x0]
push ebx
push esi
push edi
push ebp
mov esi,edx
mov ebx,eax
mov eax,esi
test eax,eax
jz 0x820b
sub eax,byte +0x4
mov eax,[eax]
mov edi,eax
mov eax,ebx
call dword 0x3eac
mov ebp,eax
test edi,edi
jng 0x8243
movzx ebx,byte [esi+edi-0x1]
test bl,bl
jz 0x823e
mov edx,ebx
mov eax,ebp
call dword 0x85cc
test eax,eax
jz 0x823e
mov edx,edi
mov eax,esi
call dword 0xbe10
cmp al,0x2
jnz 0x8243
dec edi
dec edi
test edi,edi
jg 0x821a
mov eax,edi
pop ebp
pop edi
pop esi
pop ebx
ret
mov eax,eax
push ebx
push esi
push edi
mov edi,edx
mov ebx,eax
mov edx,ebx
mov eax,0x40927c
call dword 0x81f8
mov esi,eax
push edi
mov ecx,esi
mov edx,0x1
mov eax,ebx
call dword 0x3f14
pop edi
pop esi
pop ebx
ret
db 0xff
db 0xff
db 0xff
inc dword [edx]
add [eax],al
add [edx+edi+0x0],bl
add [ebx+0x56],dl
push edi
mov edi,edx
mov ebx,eax
mov edx,ebx
mov eax,0x4092b4
call dword 0x81f8
mov esi,eax
push edi
lea edx,[esi+0x1]
mov ecx,0x7fffffff
mov eax,ebx
call dword 0x3f14
pop edi
pop esi
pop ebx
ret
add [eax],al
add bh,bh
db 0xff
db 0xff
inc dword [edx]
add [eax],al
add [edx+edi+0x0],bl
add [ebx+0x56],dl
push edi
mov edi,edx
mov esi,eax
mov edx,esi
mov eax,0x4092fc
call dword 0x81f8
mov ebx,eax
test ebx,ebx
jng 0x82e9
cmp byte [esi+ebx-0x1],0x2e
jnz 0x82e9
push edi
mov ecx,0x7fffffff
mov edx,ebx
mov eax,esi
call dword 0x3f14
jmp short 0x82f0
mov eax,edi
call dword 0x3a1c
pop edi
pop esi
pop ebx
ret
db 0xff
db 0xff
db 0xff
inc dword [ebx]
add [eax],al
add [esi],ch
pop esp
cmp al,[eax]
push ebx
push esi
add esp,0xfffffef8
mov esi,edx
mov ebx,eax
push esp
lea eax,[esp+0x8]
push eax
push dword 0x104
mov eax,ebx
call dword 0x3eac
push eax
call dword 0x5b18
mov ecx,eax
lea edx,[esp+0x4]
mov eax,esi
call dword 0x3b0c
add esp,0x108
pop esi
pop ebx
ret
mov eax,eax
push ebp
mov ebp,esp
add esp,byte -0x18
push ebx
mov eax,[ebp+0x8]
test eax,eax
jnz 0x834c
xor eax,eax
lea edx,[ebp-0x10]
push edx
lea edx,[ebp-0xc]
push edx
lea edx,[ebp-0x8]
push edx
lea edx,[ebp-0x4]
push edx
push eax
call dword 0x5b08
mov ebx,eax
mov eax,[ebp-0x4]
imul dword [ebp-0x8]
xor edx,edx
mov [ebp-0x18],eax
mov [ebp-0x14],edx
mov eax,[ebp-0xc]
xor edx,edx
push edx
push eax
mov eax,[ebp-0x18]
mov edx,[ebp-0x14]
call dword 0x49ac
mov ecx,[ebp+0xc]
mov [ecx],eax
mov [ecx+0x4],edx
mov eax,[ebp-0x10]
xor edx,edx
push edx
push eax
mov eax,[ebp-0x18]
mov edx,[ebp-0x14]
call dword 0x49ac
mov ecx,[ebp+0x10]
mov [ecx],eax
mov [ecx+0x4],edx
mov eax,ebx
pop ebx
mov esp,ebp
pop ebp
ret 0x10
nop
push ebx
mov ebx,eax
push byte +0x0
mov eax,ebx
call dword 0x3eac
push eax
call dword 0x5a80
cmp eax,byte +0x1
sbb eax,eax
inc eax
pop ebx
ret
mov eax,eax
cmp byte [eax],0x0
jz 0x83f7
mov edx,eax
neg edx
add eax,byte +0x1
and eax,byte -0x2
mov cx,[eax]
add eax,byte +0x2
test cl,ch
jnz 0x83db
test cl,cl
jz 0x83f2
test ch,ch
jnz 0x83db
lea eax,[edx+eax-0x1]
ret
lea eax,[edx+eax-0x2]
ret
xor eax,eax
ret
mov eax,eax
mov edx,edi
mov edi,eax
mov ecx,0xffffffff
xor al,al
repne scasb
lea eax,[edi-0x1]
mov edi,edx
ret
nop
push esi
mov esi,eax
xchg eax,edx
call dword 0x2050
mov eax,esi
pop esi
ret
lea eax,[eax+0x0]
sub edx,eax
test eax,0x1
push eax
jz 0x8435
movzx ecx,byte [edx+eax]
mov [eax],cl
test ecx,ecx
jz 0x844f
inc eax
movzx ecx,byte [edx+eax]
test ecx,ecx
jz 0x8451
movzx ecx,word [edx+eax]
mov [eax],cx
add eax,byte +0x2
cmp ecx,0xff
ja 0x8435
pop eax
ret
mov [eax],cl
pop eax
ret
lea eax,[eax+0x0]
push edi
push esi
push ebx
mov esi,eax
mov edi,edx
mov ebx,ecx
xor al,al
test ecx,ecx
jz 0x846c
repne scasb
jnz 0x846c
inc ecx
sub ebx,ecx
mov edi,esi
mov esi,edx
mov edx,edi
mov ecx,ebx
shr ecx,byte 0x2
rep movsd
mov ecx,ebx
and ecx,byte +0x3
rep movsb
stosb
mov eax,edx
pop ebx
pop esi
pop edi
ret
lea eax,[eax+0x0]
push ebx
push esi
push edi
mov esi,edx
mov edi,eax
mov ebx,esi
test ebx,ebx
jz 0x849e
sub ebx,byte +0x4
mov ebx,[ebx]
mov eax,esi
call dword 0x3eac
mov edx,eax
mov ecx,ebx
mov eax,edi
call dword 0x8458
pop edi
pop esi
pop ebx
ret
push ebx
push esi
push edi
mov edi,ecx
mov esi,edx
mov ebx,eax
mov eax,esi
call dword 0x3eac
mov edx,eax
mov ecx,edi
mov eax,ebx
call dword 0x8458
pop edi
pop esi
pop ebx
ret
nop
sub edx,eax
jnz 0x84db
xor eax,eax
ret
movzx ecx,byte [edx+eax]
cmp cl,[eax]
jnz 0x8559
test cl,cl
jz 0x8559
movzx ecx,byte [edx+eax+0x1]
cmp cl,[eax+0x1]
jnz 0x8556
test cl,cl
jz 0x8556
movzx ecx,byte [edx+eax+0x2]
cmp cl,[eax+0x2]
jnz 0x8553
test cl,cl
jz 0x8553
movzx ecx,byte [edx+eax+0x3]
cmp cl,[eax+0x3]
jnz 0x8550
add eax,byte +0x4
test cl,cl
jz 0x854d
movzx ecx,byte [edx+eax]
cmp cl,[eax]
jnz 0x8559
test cl,cl
jz 0x8559
movzx ecx,byte [edx+eax+0x1]
cmp cl,[eax+0x1]
jnz 0x8556
test cl,cl
jz 0x8556
movzx ecx,byte [edx+eax+0x2]
cmp cl,[eax+0x2]
jnz 0x8553
test cl,cl
jz 0x8553
movzx ecx,byte [edx+eax+0x3]
cmp cl,[eax+0x3]
jnz 0x8550
add eax,byte +0x4
test cl,cl
jnz 0x84db
sub eax,byte +0x4
add eax,byte +0x1
add eax,byte +0x1
add eax,byte +0x1
movzx eax,byte [eax]
sub eax,ecx
ret
nop
push edi
push esi
push ebx
mov edi,edx
mov esi,eax
mov ebx,ecx
xor eax,eax
or ecx,ecx
jz 0x8583
repne scasb
sub ebx,ecx
mov ecx,ebx
mov edi,edx
xor edx,edx
repe cmpsb
mov al,[esi-0x1]
mov dl,[edi-0x1]
sub eax,edx
pop ebx
pop esi
pop edi
ret
nop
push edi
push esi
push ebx
mov edi,edx
mov esi,eax
mov ebx,ecx
xor eax,eax
or ecx,ecx
jz 0x85c6
repne scasb
sub ebx,ecx
mov ecx,ebx
mov edi,edx
xor edx,edx
repe cmpsb
jz 0x85c6
mov al,[esi-0x1]
cmp al,0x61
jc 0x85b2
cmp al,0x7a
ja 0x85b2
sub al,0x20
mov dl,[edi-0x1]
cmp dl,0x61
jc 0x85c2
cmp dl,0x7a
ja 0x85c2
sub dl,0x20
sub eax,edx
jz 0x85a1
pop ebx
pop esi
pop edi
ret
mov eax,eax
jmp short 0x85d6
test cl,cl
jnz 0x85d5
xor eax,eax
ret
inc eax
movzx ecx,byte [eax]
cmp dl,cl
jnz 0x85ce
ret
mov eax,eax
push edi
push esi
push ebx
or eax,eax
jz 0x862b
or edx,edx
jz 0x862b
mov ebx,eax
mov edi,edx
xor al,al
mov ecx,0xffffffff
repne scasb
not ecx
dec ecx
jz 0x862b
mov esi,ecx
mov edi,ebx
mov ecx,0xffffffff
repne scasb
not ecx
sub ecx,esi
jna 0x862b
mov edi,ebx
lea ebx,[esi-0x1]
mov esi,edx
lodsb
repne scasb
jnz 0x862b
mov eax,ecx
push edi
mov ecx,ebx
repe cmpsb
pop edi
mov ecx,eax
jnz 0x8613
lea eax,[edi-0x1]
jmp short 0x862d
xor eax,eax
pop ebx
pop esi
pop edi
ret
lea eax,[eax+0x0]
push ebx
push esi
mov esi,edx
mov ebx,eax
mov eax,esi
mov edx,ebx
call dword 0x3c14
pop esi
pop ebx
ret
mov eax,eax
push ebx
mov ebx,eax
add ebx,byte +0x4
mov eax,ebx
call dword 0x1e60
mov [eax],ebx
add eax,byte +0x4
pop ebx
ret
sub eax,byte +0x4
mov eax,[eax]
sub eax,byte +0x4
ret
lea eax,[eax+0x0]
push ebx
push esi
mov ebx,eax
test ebx,ebx
jnz 0x8675
xor eax,eax
pop esi
pop ebx
ret
mov eax,ebx
call dword 0x83cc
mov esi,eax
inc esi
mov eax,esi
call dword 0x8648
mov ecx,esi
mov edx,ebx
call dword 0x8410
pop esi
pop ebx
ret
mov eax,eax
test eax,eax
jz 0x86a2
sub eax,byte +0x4
mov edx,[eax]
call dword 0x1e7c
ret
nop
push ebx
push esi
push edi
add esp,byte -0x28
mov ebx,ecx
mov esi,edx
mov edi,eax
cmp ebx,byte +0x1f
jna 0x86ba
mov ebx,0x1f
mov edx,ebx
dec edx
mov eax,esi
call dword 0xbe34
cmp al,0x1
jnz 0x86c9
dec ebx
mov eax,esp
mov ecx,ebx
mov edx,esi
call dword 0x8410
mov byte [esp+ebx],0x0
mov eax,esp
mov [esp+0x20],eax
mov byte [esp+0x24],0x6
lea edx,[esp+0x20]
mov eax,[edi*4+0x46784c]
xor ecx,ecx
call dword 0x7464
add esp,byte +0x28
pop edi
pop esi
pop ebx
ret
push ebx
mov ecx,[dword 0x468e68]
cmp dword [ecx],byte +0x0
jz 0x8714
mov ebx,[dword 0x468e68]
mov ebx,[ebx]
call ebx
pop ebx
ret
mov al,0x10
call dword 0x1fb0
pop ebx
ret
lea eax,[eax+0x0]
push ebx
mov ebx,eax
mov eax,ebx
call dword 0x3a1c
pop ebx
ret
push ebp
mov ebp,esp
add esp,byte -0x6c
push ebx
xor ebx,ebx
mov [ebp-0x14],ebx
push ebx
push esi
push edi
mov edi,eax
mov esi,ecx
xor eax,eax
mov [ebp-0x4],eax
add ecx,[ebp+0x10]
mov [ebp-0x8],edi
xor eax,eax
mov [ebp-0xc],eax
mov [ebp-0x10],eax
mov [ebp-0x14],eax
or edx,edx
jz 0x8766
cmp esi,ecx
jz 0x8766
lodsb
cmp al,0x25
jz 0x8770
stosb
dec edx
jnz 0x8759
mov eax,edi
sub eax,[ebp-0x8]
jmp dword 0x8a93
cmp esi,ecx
jz 0x8766
lodsb
cmp al,0x25
jz 0x8762
lea ebx,[esi-0x2]
mov [ebp-0x18],ebx
mov [ebp-0x19],al
cmp al,0x2d
jnz 0x878b
cmp esi,ecx
jz 0x8766
lodsb
call dword 0x880e
cmp al,0x3a
jnz 0x879e
mov [ebp-0xc],ebx
cmp esi,ecx
jz 0x8766
lodsb
jmp short 0x877f
mov [ebp-0x20],ebx
mov ebx,0xffffffff
cmp al,0x2e
jnz 0x87b4
cmp esi,ecx
jz 0x8766
lodsb
call dword 0x880e
mov [ebp-0x24],ebx
mov [ebp-0x28],esi
push ecx
push edx
call dword 0x8856
pop edx
mov ebx,[ebp-0x20]
sub ebx,ecx
jnc 0x87cb
xor ebx,ebx
cmp byte [ebp-0x19],0x2d
jnz 0x87db
sub edx,ecx
jnc 0x87d9
add ecx,edx
xor edx,edx
rep movsb
xchg ebx,ecx
sub edx,ecx
jnc 0x87e5
add ecx,edx
xor edx,edx
mov al,0x20
rep stosb
xchg ebx,ecx
sub edx,ecx
jnc 0x87f3
add ecx,edx
xor edx,edx
rep movsb
cmp dword [ebp-0x10],byte +0x0
jz 0x8805
push edx
lea eax,[ebp-0x10]
call dword 0x8720
pop edx
pop ecx
mov esi,[ebp-0x28]
jmp dword 0x8755
xor ebx,ebx
cmp al,0x2a
jz 0x8836
cmp al,0x30
jc 0x8855
cmp al,0x39
ja 0x8855
imul ebx,ebx,dword 0xa
sub al,0x30
movzx eax,al
add ebx,eax
cmp esi,ecx
jz 0x8830
lodsb
jmp short 0x8814
pop eax
jmp dword 0x8766
mov eax,[ebp-0xc]
cmp eax,[ebp+0x8]
jg 0x8850
inc dword [ebp-0xc]
mov ebx,[ebp+0xc]
cmp byte [ebx+eax*8+0x4],0x0
mov ebx,[ebx+eax*8]
jz 0x8850
xor ebx,ebx
cmp esi,ecx
jz 0x8830
lodsb
ret
and al,0xdf
mov cl,al
mov eax,0x1
mov ebx,[ebp-0xc]
cmp ebx,[ebp+0x8]
jg 0x88c3
inc dword [ebp-0xc]
mov esi,[ebp+0xc]
lea esi,[esi+ebx*8]
mov eax,[esi]
movzx edx,byte [esi+0x4]
jmp dword [edx*4+0x40987d]
push cs
cdq
inc eax
add cl,al
cwde
inc eax
add [edi-0x67],al
inc eax
add [esi],cl
call dword 0x40:0x99770040
out dx,eax
cdq
inc eax
add bh,cl
cdq
inc eax
add cl,al
cwde
inc eax
add cl,al
cwde
inc eax
add cl,al
cwde
inc eax
add [eax-0x4cffbf67],cl
cdq
inc eax
add [edx],cl
call dword 0x40:0x99560040
rcr dword [eax-0x6670ffc0],byte 0x40
add al,bl
cwde
inc eax
add [ecx],dh
shr al,byte 0xbb
add [eax],eax
add [ebx+0x4d8be855],cl
fsubr dword [ecx]
ror dword [ebx-0x331703a3],1
std
db 0xff
dec dword [ebp+0x558bb775]
fadd qword [ebx+0x27620fa]
xor edx,edx
mov ebx,ecx
sub cl,0x44
jz dword 0x7c1c
mov ecx,0x10
cmp bl,0x58
jz dword 0x7c1c
mov ecx,0xa
cmp bl,0x55
jz dword 0x7c1c
jmp short 0x88c1
lea esi,[ebp-0x59]
mov edx,[ebp-0x24]
mov ebx,ecx
cmp edx,byte +0x10
jna 0x891d
xor edx,edx
sub cl,0x44
jz dword 0x7bb0
mov ecx,0x10
cmp bl,0x58
jz dword 0x7bb0
mov ecx,0xa
cmp bl,0x55
jz dword 0x7bb0
jmp dword 0x88c1
cmp cl,0x53
jnz dword 0x88c1
mov ecx,0x1
ret
cmp cl,0x53
jnz dword 0x88c1
cmp word [eax],byte +0x1
jna 0x8974
mov edx,eax
lea eax,[ebp-0x10]
call dword 0x86fc
mov esi,[ebp-0x10]
jmp short 0x89be
xor ecx,ecx
ret
cmp cl,0x53
jnz dword 0x88c1
mov esi,eax
lodsb
movzx ecx,al
jmp short 0x89c5
mov esi,0x404c44
jmp short 0x8994
mov esi,0x404ca4
add esi,[ebp-0x4]
cmp cl,0x53
jnz dword 0x88c1
mov edx,eax
lea eax,[ebp-0x14]
push ebx
mov ebx,[ebp-0x4]
call esi
pop ebx
mov esi,[ebp-0x14]
mov eax,esi
jmp short 0x89be
cmp cl,0x53
jnz dword 0x88c1
mov esi,eax
or esi,esi
jz 0x8974
mov ecx,[esi-0x4]
cmp ecx,[ebp-0x24]
ja 0x89cb
ret
mov ecx,[ebp-0x24]
ret
cmp cl,0x53
jnz dword 0x88c1
mov esi,eax
push edi
mov edi,eax
xor al,al
mov ecx,[ebp-0x24]
jecxz 0x89e9
repne scasb
jnz 0x89e9
dec edi
mov ecx,edi
sub ecx,esi
pop edi
ret
cmp cl,0x50
jnz dword 0x88c1
mov edx,0x8
mov ecx,0x10
lea esi,[ebp-0x59]
jmp dword 0x7bb0
mov bh,0x1
jmp short 0x8a10
mov bh,0x0
mov esi,eax
mov bl,0x0
cmp cl,0x47
jz 0x8a58
mov bl,0x1
cmp cl,0x45
jz 0x8a58
mov bl,0x2
cmp cl,0x46
jz 0x8a39
mov bl,0x3
cmp cl,0x4e
jz 0x8a39
cmp cl,0x4d
jnz dword 0x88c1
mov bl,0x4
mov eax,0x12
mov edx,[ebp-0x24]
cmp edx,eax
jna 0x8a6a
mov edx,0x2
cmp cl,0x4d
jnz 0x8a6a
movzx edx,byte [dword 0x46b80c]
jmp short 0x8a6a
mov eax,[ebp-0x24]
mov edx,0x3
cmp eax,byte +0x12
jna 0x8a6a
mov eax,0xf
push ebx
push eax
push edx
lea eax,[ebp-0x69]
mov edx,esi
movzx ecx,bh
mov ebx,[ebp-0x4]
call dword 0x8c58
mov ecx,eax
lea esi,[ebp-0x69]
ret
push ebx
push eax
lea eax,[ebp-0x14]
mov ebx,[ebp-0x4]
call dword 0x3a1c
pop eax
pop ebx
ret
call dword 0x8a83
pop edi
pop esi
pop ebx
pop ebx
mov esp,ebp
pop ebp
ret 0xc
mov eax,eax
push ebp
mov ebp,esp
push ebx
push esi
push edi
mov edi,ecx
mov esi,edx
mov ebx,eax
test ebx,ebx
jz 0x8adb
test esi,esi
jz 0x8adb
mov eax,esi
call dword 0x83cc
push eax
push edi
mov eax,[ebp+0x8]
push eax
mov ecx,esi
mov eax,ebx
mov edx,0x7fffffff
call dword 0x872c
mov byte [ebx+eax],0x0
mov eax,ebx
jmp short 0x8add
xor eax,eax
pop edi
pop esi
pop ebx
pop ebp
ret 0x4
push ebp
mov ebp,esp
push ebx
push esi
push edi
mov esi,ecx
mov edi,edx
mov ebx,eax
test ebx,ebx
jz 0x8b1b
test esi,esi
jz 0x8b1b
mov eax,esi
call dword 0x83cc
push eax
mov eax,[ebp+0xc]
push eax
mov eax,[ebp+0x8]
push eax
mov ecx,esi
mov eax,ebx
mov edx,edi
call dword 0x872c
mov byte [ebx+eax],0x0
mov eax,ebx
jmp short 0x8b1d
xor eax,eax
pop edi
pop esi
pop ebx
pop ebp
ret 0x8
push ebp
mov ebp,esp
push ecx
mov ecx,[ebp+0x8]
xchg eax,ecx
xchg edx,ecx
call dword 0x8b38
pop ebp
ret 0x4
nop
push ebp
mov ebp,esp
add esp,0xfffff004
push eax
add esp,byte -0xc
push ebx
push esi
push edi
mov [ebp-0x8],ecx
mov [ebp-0x4],edx
mov edi,eax
mov ebx,0x1000
mov edx,[ebp-0x4]
mov eax,edx
test eax,eax
jz 0x8b63
sub eax,byte +0x4
mov eax,[eax]
cmp eax,0xc00
jnl 0x8b96
mov eax,edx
test eax,eax
jz 0x8b75
sub eax,byte +0x4
mov eax,[eax]
push eax
mov eax,[ebp-0x8]
push eax
mov eax,[ebp+0x8]
push eax
mov ecx,[ebp-0x4]
lea eax,[ebp-0x100c]
mov edx,0xfff
call dword 0x872c
mov [ebp-0xc],eax
jmp short 0x8ba6
mov eax,edx
test eax,eax
jz 0x8ba1
sub eax,byte +0x4
mov eax,[eax]
mov ebx,eax
mov [ebp-0xc],ebx
mov eax,ebx
dec eax
cmp eax,[ebp-0xc]
jg 0x8bfb
jmp short 0x8be7
add ebx,ebx
mov eax,edi
call dword 0x3a1c
mov eax,edi
mov edx,ebx
call dword 0x413c
mov esi,[ebp-0x4]
test esi,esi
jz 0x8bce
sub esi,byte +0x4
mov esi,[esi]
push esi
mov eax,[ebp-0x8]
push eax
mov eax,[ebp+0x8]
push eax
mov ecx,[ebp-0x4]
mov edx,ebx
dec edx
mov eax,[edi]
call dword 0x872c
mov [ebp-0xc],eax
mov eax,ebx
dec eax
cmp eax,[ebp-0xc]
jng 0x8bb0
mov eax,edi
mov edx,[ebp-0xc]
call dword 0x413c
jmp short 0x8c0b
lea edx,[ebp-0x100c]
mov eax,edi
mov ecx,[ebp-0xc]
call dword 0x3b0c
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret 0x4
push esi
xor esi,esi
stosb
or bl,bl
jnz 0x8c20
xor edx,edx
jmp short 0x8c2a
or edx,edx
jnl 0x8c2a
mov al,0x2d
neg edx
jmp short 0x8c30
or ah,ah
jz 0x8c31
mov al,ah
stosb
xchg eax,edx
push eax
mov ebx,esp
xor edx,edx
div dword [esi+0x467860]
add dl,0x30
mov [ebx],dl
inc ebx
dec ecx
or eax,eax
jnz 0x8c35
or ecx,ecx
jg 0x8c35
dec ebx
mov al,[ebx]
stosb
cmp ebx,esp
jnz 0x8c4c
pop eax
pop esi
ret
nop
push ebp
mov ebp,esp
add esp,byte -0x2c
push edi
push esi
push ebx
mov [ebp-0x4],eax
mov al,[0x46b80b]
mov [ebp-0x5],al
mov al,[0x46b80a]
mov [ebp-0x6],al
mov eax,[0x46b804]
mov [ebp-0xc],eax
mov al,[0x46b808]
mov [ebp-0xd],al
mov al,[0x46b809]
mov [ebp-0xe],al
mov dword [ebp-0x14],0x0
mov eax,0x13
cmp cl,0x0
jnz 0x8cb4
mov eax,[ebp+0xc]
cmp eax,byte +0x2
jnl 0x8caa
mov eax,0x2
cmp eax,byte +0x12
jng 0x8cb4
mov eax,0x12
mov [ebp+0xc],eax
push eax
mov eax,0x270f
cmp byte [ebp+0x10],0x2
jc 0x8cc6
mov eax,[ebp+0x8]
push eax
lea eax,[ebp-0x2c]
call dword 0x8f2c
mov edi,[ebp-0x4]
movzx eax,word [ebp-0x2c]
sub eax,0x7fff
cmp eax,byte +0x2
jnc 0x8cfa
mov ecx,eax
call dword 0x8d57
lea esi,[ecx+ecx*2+0x409d48]
add esi,[ebp-0x14]
mov ecx,0x3
rep movsb
jmp short 0x8d27
lea esi,[ebp-0x29]
movzx ebx,byte [ebp+0x10]
cmp bl,0x1
jz 0x8d16
cmp bl,0x4
ja 0x8d14
movsx eax,word [ebp-0x2c]
cmp eax,[ebp+0xc]
jng 0x8d16
mov bl,0x0
lea ebx,[ebx*4+0x409d34]
add ebx,[ebp-0x14]
mov ebx,[ebx]
add ebx,[ebp-0x14]
call ebx
mov eax,edi
sub eax,[ebp-0x4]
pop ebx
pop esi
pop edi
jmp dword 0x8f25
popad
popfd
inc eax
add [ebp-0xbffbf63],bh
popfd
inc eax
add ah,dh
popfd
inc eax
add [esi-0x62],bl
inc eax
add [ecx+0x4e],cl
inc esi
dec esi
inc ecx
dec esi
lodsb
or al,al
jnz 0x8d56
mov al,0x30
dec esi
ret
cmp byte [ebp-0x2a],0x0
jz 0x8d60
mov al,0x2d
stosb
ret
call dword 0x8d57
movsx ecx,word [ebp-0x2c]
xor edx,edx
cmp ecx,[ebp+0xc]
jg 0x8d8e
cmp ecx,byte -0x3
jl 0x8d8e
or ecx,ecx
jg 0x8d94
mov al,0x30
stosb
cmp byte [esi],0x0
jz 0x8dbc
mov al,[ebp-0x5]
stosb
neg ecx
mov al,0x30
rep stosb
jmp short 0x8da8
mov ecx,0x1
inc edx
lodsb
or al,al
jz 0x8db0
stosb
loop 0x8d94
lodsb
or al,al
jz 0x8db4
mov ah,al
mov al,[ebp-0x5]
stosw
lodsb
or al,al
jz 0x8db4
stosb
jmp short 0x8da8
mov al,0x30
rep stosb
or edx,edx
jz 0x8dbc
xor eax,eax
jmp short 0x8dda
ret
call dword 0x8d57
call dword 0x8d4e
mov ah,[ebp-0x5]
stosw
mov ecx,[ebp+0xc]
dec ecx
call dword 0x8d4e
stosb
loop 0x8dd0
mov ah,0x2b
mov ecx,[ebp+0x8]
cmp ecx,byte +0x4
jna 0x8de4
xor ecx,ecx
mov al,0x45
mov bl,[ebp-0x29]
movsx edx,word [ebp-0x2c]
dec edx
call dword 0x8c14
ret
call dword 0x8d57
mov edx,[ebp+0x8]
cmp edx,byte +0x12
jc 0x8e06
mov edx,0x12
movsx ecx,word [ebp-0x2c]
or ecx,ecx
jg 0x8e13
mov al,0x30
stosb
jmp short 0x8e3d
xor ebx,ebx
cmp byte [ebp+0x10],0x2
jz 0x8e25
mov eax,ecx
dec eax
mov bl,0x3
div bl
mov bl,ah
inc ebx
call dword 0x8d4e
stosb
dec ecx
jz 0x8e3d
dec ebx
jnz 0x8e25
mov al,[ebp-0x6]
test al,al
jz 0x8e25
stosb
mov bl,0x3
jmp short 0x8e25
or edx,edx
jz 0x8e5d
mov al,[ebp-0x5]
test al,al
jz 0x8e49
stosb
jecxz 0x8e54
mov al,0x30
stosb
dec edx
jz 0x8e5d
inc ecx
jnz 0x8e4d
call dword 0x8d4e
stosb
dec edx
jnz 0x8e54
ret
xor ebx,ebx
mov bl,[ebp-0xd]
mov ecx,0x3
cmp byte [ebp-0x2a],0x0
jz 0x8e76
mov bl,[ebp-0xe]
mov ecx,0x40f
cmp bl,cl
jna 0x8e7c
mov bl,cl
add bl,ch
lea ebx,[ebx+ebx*4+0x409ec1]
add ebx,[ebp-0x14]
mov ecx,0x5
mov al,[ebx]
cmp al,0x40
jz 0x8eb1
push ecx
push ebx
cmp al,0x24
jz 0x8ea0
cmp al,0x2a
jz 0x8ea7
stosb
jmp short 0x8eac
call dword 0x8eb2
jmp short 0x8eac
call dword 0x8df9
pop ebx
pop ecx
inc ebx
loop 0x8e8d
ret
push esi
mov esi,[ebp-0xc]
test esi,esi
jz 0x8ebf
mov ecx,[esi-0x4]
rep movsb
pop esi
ret
and al,0x2a
inc eax
inc eax
inc eax
sub ah,[eax+eax*2]
inc eax
inc eax
and al,0x20
sub al,[eax+0x40]
sub ah,[eax]
and al,0x40
inc eax
sub [edx+ebp],ah
sub [eax+0x2d],eax
and al,0x2a
inc eax
inc eax
and al,0x2d
sub al,[eax+0x40]
and al,0x2a
sub eax,0x2a284040
and al,0x29
inc eax
sub eax,0x4040242a
sub ch,[dword 0x2a404024]
and al,0x2d
inc eax
inc eax
sub eax,0x4024202a
sub eax,0x402a2024
sub ah,[eax]
and al,0x2d
inc eax
and al,0x20
sub ch,[dword 0x2d202440]
sub al,[eax+0x2a]
sub eax,0x28402420
and al,0x20
sub ch,[ecx]
sub [edx],ch
and [ecx+ebp],ah
mov esp,ebp
pop ebp
ret 0xc
nop
push ebp
mov ebp,esp
add esp,byte -0x20
push edi
push esi
push ebx
mov ebx,eax
mov esi,edx
mov dword [ebp-0x4],0x0
cmp cl,0x0
jz 0x8f4f
call dword 0x907b
jmp dword 0x914f
call dword 0x8f59
jmp dword 0x914f
mov ax,[esi+0x8]
mov edx,eax
and eax,0x7fff
jz 0x8f84
cmp eax,0x7fff
jnz 0x8f8f
test word [esi+0x6],0x8000
jz 0x8f86
cmp dword [esi],byte +0x0
jnz 0x8f83
cmp dword [esi+0x4],0x80000000
jz 0x8f86
inc eax
xor edx,edx
mov byte [ebx+0x3],0x0
jmp dword 0x905c
fld tword [esi]
sub eax,0x3fff
imul eax,eax,dword 0x4d10
sar eax,byte 0x10
inc eax
mov [ebp-0x8],eax
mov eax,0x12
sub eax,[ebp-0x8]
fabs
push ebx
mov ebx,[ebp-0x4]
call dword 0x26cc
pop ebx
frndint
mov edi,[ebp-0x4]
fld tword [edi+0x467854]
fcomp st1
fstsw [ebp-0xa]
wait test word [ebp-0xa],0x4100
jz 0x8fda
fidiv dword [edi+0x467860]
inc dword [ebp-0x8]
fbstp tword [ebp-0x18]
lea edi,[ebx+0x3]
mov edx,0x9
wait mov al,[edx+ebp-0x19]
mov ah,al
shr al,byte 0x4
and ah,0xf
add ax,0x3030
stosw
dec edx
jnz 0x8fe6
xor al,al
stosb
mov edi,[ebp-0x8]
add edi,[ebp+0x8]
jns 0x900d
xor eax,eax
jmp dword 0x8f84
cmp edi,[ebp+0xc]
jc 0x9015
mov edi,[ebp+0xc]
cmp edi,byte +0x12
jnc 0x9041
cmp byte [ebx+edi+0x3],0x35
jc 0x9046
mov byte [ebx+edi+0x3],0x0
dec edi
js 0x9036
inc byte [ebx+edi+0x3]
cmp byte [ebx+edi+0x3],0x39
ja 0x9021
jmp short 0x9055
mov word [ebx+0x3],0x31
inc dword [ebp-0x8]
jmp short 0x9055
mov edi,0x12
mov byte [ebx+edi+0x3],0x0
dec edi
js 0x9067
cmp byte [ebx+edi+0x3],0x30
jz 0x9046
mov dx,[esi+0x8]
mov eax,[ebp-0x8]
shr dx,byte 0xf
mov [ebx],ax
mov [ebx+0x2],dl
ret
xor edx,edx
jmp short 0x9059
or al,[eax]
add [eax],al
add [fs:eax],al
add al,ch
add eax,[eax]
add [eax],dl
daa
add [eax],al
mov eax,[esi]
mov edx,[esi+0x4]
mov ecx,eax
or ecx,edx
jz dword 0x9141
or edx,edx
jns 0x9095
neg edx
neg eax
sbb edx,byte +0x0
xor ecx,ecx
mov edi,[ebp+0x8]
or edi,edi
jnl 0x90a0
xor edi,edi
cmp edi,byte +0x4
jl 0x90c4
mov edi,0x4
inc ecx
sub eax,0xa7640000
sbb edx,0xde0b6b3
jnc 0x90aa
dec ecx
add eax,0xa7640000
adc edx,0xde0b6b3
mov [ebp-0x20],eax
mov [ebp-0x1c],edx
fild qword [ebp-0x20]
mov edx,edi
mov eax,0x4
sub eax,edx
jz 0x90e2
mov edi,[ebp-0x4]
fidiv dword [edi+eax*4+0x40a067]
fbstp tword [ebp-0x18]
lea edi,[ebx+0x3]
wait or ecx,ecx
jnz 0x9108
mov ecx,0x9
mov al,[ecx+ebp-0x19]
mov ah,al
shr al,byte 0x4
jnz 0x911b
mov al,ah
and al,0xf
jnz 0x9122
dec ecx
jnz 0x90f2
jmp short 0x9141
mov al,cl
add al,0x30
stosb
mov ecx,0x9
mov al,[ecx+ebp-0x19]
mov ah,al
shr al,byte 0x4
add al,0x30
stosb
mov al,ah
and al,0xf
add al,0x30
stosb
dec ecx
jnz 0x9112
mov eax,edi
lea ecx,[ebx+edx+0x3]
sub eax,ecx
mov byte [edi],0x0
dec edi
cmp byte [edi],0x30
jz 0x9130
mov edx,[esi+0x4]
shr edx,byte 0x1f
jmp short 0x9148
xor eax,eax
xor edx,edx
mov [ebx+0x3],al
mov [ebx],ax
mov [ebx+0x2],dl
ret
pop ebx
pop esi
pop edi
mov esp,ebp
pop ebp
ret 0x8
push ebp
mov ebp,esp
add esp,byte -0xc
push edi
push esi
push ebx
mov esi,eax
mov edi,edx
mov dword [ebp-0x4],0x0
mov al,[0x46b80b]
mov [ebp-0x5],al
mov ebx,ecx
fstcw [ebp-0x8]
fclex
fldcw [dword 0x467864]
fldz
call dword 0x920f
mov bh,[esi]
cmp bh,0x2b
jz 0x9196
cmp bh,0x2d
jnz 0x9197
inc esi
mov ecx,esi
call dword 0x921a
xor edx,edx
mov al,[esi]
cmp al,[ebp-0x5]
jnz 0x91af
inc esi
call dword 0x921a
neg edx
cmp ecx,esi
jz 0x9202
mov al,[esi]
and al,0xdf
cmp al,0x45
jnz 0x91c5
inc esi
push edx
call dword 0x9236
pop eax
add edx,eax
call dword 0x920f
cmp byte [esi],0x0
jnz 0x9202
mov eax,edx
cmp bl,0x1
jnz 0x91d9
add eax,byte +0x4
push ebx
mov ebx,[ebp-0x4]
call dword 0x26cc
pop ebx
cmp bh,0x2d
jnz 0x91ea
fchs
cmp bl,0x0
jz 0x91f3
fistp qword [edi]
jmp short 0x91f5
fstp tword [edi]
fstsw ax
test ax,0x9
jnz 0x9204
mov al,0x1
jmp short 0x9206
fstp st0
xor eax,eax
fclex
fldcw [ebp-0x8]
wait jmp short 0x9265
lodsb
or al,al
jz 0x9218
cmp al,0x20
jz 0x920f
dec esi
ret
xor eax,eax
xor edx,edx
lodsb
sub al,0x3a
add al,0xa
jnc 0x9234
fimul dword [dword 0x467860]
mov [ebp-0xc],eax
fiadd dword [ebp-0xc]
inc edx
jmp short 0x921e
dec esi
ret
xor eax,eax
xor edx,edx
mov cl,[esi]
cmp cl,0x2b
jz 0x9246
cmp cl,0x2d
jnz 0x9247
inc esi
mov al,[esi]
sub al,0x3a
add al,0xa
jnc 0x925d
inc esi
imul edx,edx,byte +0xa
add edx,eax
cmp edx,0x1f4
jc 0x9247
cmp cl,0x2d
jnz 0x9264
neg edx
ret
pop ebx
pop esi
pop edi
mov esp,ebp
pop ebp
ret
push ebp
mov ebp,esp
add esp,byte -0x40
push ebx
mov ebx,eax
push byte +0x0
push byte +0xf
push byte +0x0
lea edx,[ebp+0x8]
lea eax,[ebp-0x40]
xor ecx,ecx
call dword 0x8c58
mov ecx,eax
lea edx,[ebp-0x40]
mov eax,ebx
call dword 0x3b0c
pop ebx
mov esp,ebp
pop ebp
ret 0xc
nop
push ebp
mov ebp,esp
add esp,byte -0x40
push ebx
mov ebx,eax
push byte +0x0
push byte +0x0
push byte +0x0
lea edx,[ebp+0x8]
lea eax,[ebp-0x40]
mov cl,0x1
call dword 0x8c58
mov ecx,eax
lea edx,[ebp-0x40]
mov eax,ebx
call dword 0x3b0c
pop ebx
mov esp,ebp
pop ebp
ret 0x8
nop
push ebx
push esi
mov esi,edx
mov ebx,eax
mov eax,ebx
call dword 0x3eac
mov edx,esi
xor ecx,ecx
call dword 0x9158
pop esi
pop ebx
ret
lea eax,[eax+0x0]
push ebx
push esi
add esp,byte -0xc
mov esi,edx
mov ebx,eax
mov eax,ebx
call dword 0x3eac
mov edx,esp
xor ecx,ecx
call dword 0x9158
test al,al
jz 0x930b
fld tword [esp]
fstp qword [esi]
wait add esp,byte +0xc
pop esi
pop ebx
ret
lea eax,[eax+0x0]
push ebx
push esi
add esp,byte -0xc
mov esi,edx
mov ebx,eax
mov eax,ebx
call dword 0x3eac
mov edx,esp
xor ecx,ecx
call dword 0x9158
test al,al
jz 0x9337
fld tword [esp]
fstp dword [esi]
wait add esp,byte +0xc
pop esi
pop ebx
ret
lea eax,[eax+0x0]
push ebx
push esi
mov esi,edx
mov ebx,eax
mov eax,ebx
call dword 0x3eac
mov edx,esi
mov cl,0x1
call dword 0x9158
pop esi
pop ebx
ret
lea eax,[eax+0x0]
push ebp
mov ebp,esp
push ebx
xor ebx,ebx
mov ecx,eax
fld qword [ebp+0x8]
fmul dword [ebx+0x467868]
sub esp,byte +0x8
fistp qword [esp]
wait pop eax
pop edx
or edx,edx
jns 0x938b
neg edx
neg eax
sbb edx,byte +0x0
div dword [ebx+0x46786c]
neg eax
jmp short 0x9391
div dword [ebx+0x46786c]
add eax,0xa955a
mov [ecx],edx
mov [ecx+0x4],eax
pop ebx
pop ebp
ret 0x8
push ebp
mov ebp,esp
add esp,byte -0x8
push esi
mov esi,[ebp+0xc]
mov byte [ebp-0x1],0x0
cmp ax,byte +0x18
jnc 0x9401
cmp dx,byte +0x3c
jnc 0x9401
cmp cx,byte +0x3c
jnc 0x9401
cmp si,0x3e8
jnc 0x9401
movzx eax,ax
imul eax,eax,dword 0x36ee80
movzx edx,dx
imul edx,edx,dword 0xea60
add eax,edx
movzx edx,cx
imul edx,edx,dword 0x3e8
add eax,edx
movzx edx,si
add eax,edx
mov [ebp-0x8],eax
fild dword [ebp-0x8]
fdiv dword [dword 0x40a40c]
mov eax,[ebp+0x8]
fstp qword [eax]
wait mov byte [ebp-0x1],0x1
movzx eax,byte [ebp-0x1]
pop esi
pop ecx
pop ecx
pop ebp
ret 0x8
or bl,0xa4
dec esp
push ebp
mov ebp,esp
add esp,byte -0xc
push ebx
push esi
push edi
mov edi,ecx
mov esi,edx
mov ebx,eax
lea eax,[ebp-0x4]
push eax
push dword [ebp+0x10]
push dword [ebp+0xc]
lea eax,[ebp-0xc]
call dword 0x935c
mov eax,[ebp-0xc]
lea ecx,[ebp-0x2]
mov dx,0xea60
call dword 0x7448
push esi
mov ecx,ebx
movzx eax,word [ebp-0x2]
mov dx,0x3c
call dword 0x7448
mov eax,[ebp+0x8]
push eax
mov ecx,edi
movzx eax,word [ebp-0x4]
mov dx,0x3e8
call dword 0x7448
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret 0xc
push ebx
push esi
mov ecx,eax
movzx eax,cx
and eax,byte +0x3
test eax,eax
jnz 0x949b
movzx ebx,cx
mov eax,ebx
mov esi,0x64
xor edx,edx
div esi
test edx,edx
jnz 0x94a0
mov eax,ebx
mov ecx,0x190
xor edx,edx
div ecx
test edx,edx
jz 0x94a0
xor eax,eax
pop esi
pop ebx
ret
mov al,0x1
pop esi
pop ebx
ret
lea eax,[eax+0x0]
push ebp
mov ebp,esp
add esp,byte -0x8
push ebx
push esi
push edi
mov ebx,ecx
mov edi,edx
mov [ebp-0x2],ax
mov byte [ebp-0x3],0x0
movzx eax,word [ebp-0x2]
call dword 0x946c
and eax,byte +0x7f
lea eax,[eax+eax*2]
lea esi,[eax*8+0x4677c8]
cmp word [ebp-0x2],byte +0x1
jc dword 0x9564
cmp word [ebp-0x2],0x270f
ja 0x9564
cmp di,byte +0x1
jc 0x9564
cmp di,byte +0xc
ja 0x9564
cmp bx,byte +0x1
jc 0x9564
movzx eax,di
cmp bx,[esi+eax*2-0x2]
ja 0x9564
movzx eax,di
dec eax
test eax,eax
jng 0x9518
mov ecx,0x1
add bx,[esi+ecx*2-0x2]
inc ecx
dec eax
jnz 0x950f
movzx ecx,word [ebp-0x2]
dec ecx
mov eax,ecx
mov esi,0x64
cdq
idiv esi
imul esi,ecx,dword 0x16d
mov edx,ecx
test edx,edx
jns 0x9536
add edx,byte +0x3
sar edx,byte 0x2
add esi,edx
sub esi,eax
mov eax,ecx
mov ecx,0x190
cdq
idiv ecx
add esi,eax
movzx eax,bx
add esi,eax
sub esi,0xa955a
mov [ebp-0x8],esi
fild dword [ebp-0x8]
mov eax,[ebp+0x8]
fstp qword [eax]
wait mov byte [ebp-0x3],0x1
movzx eax,byte [ebp-0x3]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
ret 0x4
lea eax,[eax+0x0]
push ebp
mov ebp,esp
add esp,byte -0x18
push ebx
push esi
mov [ebp-0xc],ecx
mov [ebp-0x8],edx
mov [ebp-0x4],eax
mov ebx,[ebp+0x8]
push dword [ebp+0x10]
push dword [ebp+0xc]
lea eax,[ebp-0x18]
call dword 0x935c
mov ecx,[ebp-0x14]
test ecx,ecx
jg 0x95c1
mov eax,[ebp-0x4]
mov word [eax],0x0
mov eax,[ebp-0x8]
mov word [eax],0x0
mov eax,[ebp-0xc]
mov word [eax],0x0
mov word [ebx],0x0
xor edx,edx
jmp dword 0x96b3
mov eax,ecx
mov esi,0x7
cdq
idiv esi
inc edx
mov [ebx],dx
dec ecx
mov bx,0x1
cmp ecx,0x23ab1
jl 0x95ef
sub ecx,0x23ab1
add bx,0x190
cmp ecx,0x23ab1
jnl 0x95dc
lea eax,[ebp-0xe]
push eax
lea eax,[ebp-0x10]
mov dx,0x8eac
xchg eax,ecx
call dword 0x7448
cmp word [ebp-0x10],byte +0x4
jnz 0x9611
dec word [ebp-0x10]
add word [ebp-0xe],0x8eac
imul ax,[ebp-0x10],byte +0x64
add bx,ax
lea eax,[ebp-0xe]
push eax
lea ecx,[ebp-0x10]
movzx eax,word [ebp-0xe]
mov dx,0x5b5
call dword 0x7448
movzx eax,word [ebp-0x10]
add eax,eax
add eax,eax
add bx,ax
lea eax,[ebp-0xe]
push eax
lea ecx,[ebp-0x10]
movzx eax,word [ebp-0xe]
mov dx,0x16d
call dword 0x7448
cmp word [ebp-0x10],byte +0x4
jnz 0x965d
dec word [ebp-0x10]
add word [ebp-0xe],0x16d
add bx,[ebp-0x10]
mov eax,ebx
call dword 0x946c
mov edx,eax
movzx eax,dl
lea eax,[eax+eax*2]
lea esi,[eax*8+0x4677c8]
mov ax,0x1
movzx ecx,ax
movzx ecx,word [esi+ecx*2-0x2]
mov [ebp-0x10],cx
movzx ecx,word [ebp-0xe]
cmp cx,[ebp-0x10]
jc 0x969c
movzx ecx,word [ebp-0x10]
sub [ebp-0xe],cx
inc eax
jmp short 0x967b
mov ecx,[ebp-0x4]
mov [ecx],bx
mov ecx,[ebp-0x8]
mov [ecx],ax
movzx eax,word [ebp-0xe]
inc eax
mov ecx,[ebp-0xc]
mov [ecx],ax
mov eax,edx
pop esi
pop ebx
mov esp,ebp
pop ebp
ret 0xc
lea eax,[eax+0x0]
push ebp
mov ebp,esp
push ecx
push esi
mov esi,eax
push dword [ebp+0xc]
push dword [ebp+0x8]
lea eax,[ebp-0x2]
push eax
mov eax,esi
call dword 0x9574
pop esi
pop ecx
pop ebp
ret 0x8
mov eax,eax
push ebp
mov ebp,esp
add esp,byte -0x8
push dword [ebp+0xc]
push dword [ebp+0x8]
lea eax,[ebp-0x8]
call dword 0x935c
mov eax,[ebp-0x4]
mov ecx,0x7
cdq
idiv ecx
mov eax,edx
inc eax
pop ecx
pop ecx
pop ebp
ret 0x8
add esp,byte -0x10
push esp
call dword 0x5b30
movzx eax,word [esp]
add esp,byte +0x10
ret
lea eax,[eax+0x0]
push ebp
mov ebp,esp
push ebx
mov ecx,[ebp+0x8]
mov ebx,0x100
sub ebx,[ecx-0x104]
cmp edx,ebx
jnl 0x9734
mov ebx,edx
test ebx,ebx
jz 0x9752
mov edx,[ebp+0x8]
mov edx,[edx-0x104]
mov ecx,[ebp+0x8]
lea edx,[ecx+edx-0x100]
mov ecx,ebx
call dword 0x2050
mov eax,[ebp+0x8]
add [eax-0x104],ebx
pop ebx
pop ebp
ret
mov eax,eax
push ebp
mov ebp,esp
mov edx,eax
test edx,edx
jz 0x976e
sub edx,byte +0x4
mov edx,[edx]
mov ecx,[ebp+0x8]
push ecx
call dword 0x971c
pop ecx
pop ebp
ret
mov eax,eax
push ebp
mov ebp,esp
add esp,byte -0x20
push ebx
push esi
mov esi,edx
mov ebx,eax
mov eax,[ebp+0x8]
push eax
push byte +0x4
mov [ebp-0x20],esi
mov byte [ebp-0x1c],0x0
mov [ebp-0x18],ebx
mov byte [ebp-0x14],0x0
lea eax,[ebp-0x20]
push eax
push byte +0x1
mov ecx,0x467870
lea eax,[ebp-0x10]
mov edx,0x10
call dword 0x872c
mov edx,eax
lea eax,[ebp-0x10]
call dword 0x971c
pop ecx
pop esi
pop ebx
mov esp,ebp
pop ebp
ret
lea eax,[eax+0x0]
push ebp
mov ebp,esp
push ebx
mov eax,[ebp+0x8]
add eax,byte -0x4
mov edx,[eax]
jmp short 0x97d8
inc dword [eax]
mov ecx,[eax]
movzx ecx,byte [ecx]
mov ebx,[ebp+0x8]
cmp cl,[ebx-0x5]
jz 0x97d6
mov eax,[eax]
sub eax,edx
inc eax
mov edx,[ebp+0x8]
mov [edx-0xc],eax
pop ebx
pop ebp
ret
nop
push ebp
mov ebp,esp
mov eax,[ebp+0x8]
cmp byte [eax-0x13],0x0
jnz 0x982a
mov eax,[ebp+0x8]
mov eax,[eax+0x8]
push dword [eax+0xc]
push dword [eax+0x8]
mov eax,[ebp+0x8]
lea ecx,[eax-0x12]
mov eax,[ebp+0x8]
lea edx,[eax-0x10]
mov eax,[ebp+0x8]
add eax,byte -0xe
call dword 0x96c0
mov eax,[ebp+0x8]
mov byte [eax-0x13],0x1
pop ebp
ret
push ebp
mov ebp,esp
mov eax,[ebp+0x8]
cmp byte [eax-0x1d],0x0
jnz 0x9869
mov eax,[ebp+0x8]
mov eax,[eax+0x8]
push dword [eax+0xc]
push dword [eax+0x8]
mov eax,[ebp+0x8]
add eax,byte -0x1c
push eax
mov eax,[ebp+0x8]
lea ecx,[eax-0x1a]
mov eax,[ebp+0x8]
lea edx,[eax-0x18]
mov eax,[ebp+0x8]
add eax,byte -0x16
call dword 0x9410
mov eax,[ebp+0x8]
mov byte [eax-0x1d],0x1
pop ebp
ret
nop
push ebp
mov ebp,esp
add esp,0xfffffee4
push ebx
push esi
xor ecx,ecx
mov [ebp-0x11c],ecx
mov [ebp-0x4],ecx
mov ebx,edx
mov esi,eax
xor eax,eax
push ebp
push dword 0x40a9ce
push dword [fs:eax]
mov [fs:eax],esp
mov eax,ebx
call dword 0x3a1c
mov eax,[ebp+0x8]
movzx eax,word [eax-0xe]
mov [ebp-0x14],ax
mov eax,[ebp+0x8]
movzx eax,word [eax-0x10]
mov [ebp-0x12],ax
mov eax,[ebp+0x8]
movzx eax,word [eax-0x12]
mov [ebp-0xe],ax
lea eax,[ebp-0x4]
mov edx,0x40a9e4
call dword 0x3ab4
push dword 0x100
lea eax,[ebp-0x114]
push eax
mov eax,[ebp-0x4]
call dword 0x3eac
push eax
lea eax,[ebp-0x14]
push eax
push byte +0x4
call dword 0x5b60
push eax
call dword 0x5b00
test eax,eax
jz dword 0x99ad
mov eax,ebx
lea edx,[ebp-0x114]
mov ecx,0x100
call dword 0x3c8c
dec esi
jnz dword 0x99ad
mov eax,[0x46b8c8]
sub eax,byte +0x4
jz 0x9940
sub eax,byte +0xd
jnz dword 0x99ad
push ebx
mov eax,[ebx]
mov edx,0x1
call dword 0xbfec
mov ecx,eax
mov eax,[ebx]
mov edx,0x1
call dword 0x3f14
jmp short 0x99ad
cmp dword [dword 0x46b8cc],byte +0x1
jnz 0x99ad
mov eax,[ebx]
mov [ebp-0x118],eax
mov esi,[ebp-0x118]
test esi,esi
jz 0x9960
sub esi,byte +0x4
mov esi,[esi]
mov eax,[ebx]
mov edx,esi
call dword 0xbe4c
cmp eax,byte +0x4
jnz 0x99ad
mov eax,[ebx]
mov edx,0x3
call dword 0xbf68
mov esi,eax
lea eax,[ebp-0x114]
add esi,eax
dec esi
lea eax,[ebp-0x11c]
mov edx,esi
call dword 0x3c14
mov eax,[ebp-0x11c]
mov edx,0x2
call dword 0xbfec
mov ecx,eax
mov eax,ebx
mov edx,esi
call dword 0x3b0c
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x40a9d5
lea eax,[ebp-0x11c]
call dword 0x3a1c
lea eax,[ebp-0x4]
call dword 0x3a1c
ret
jmp dword 0x3384
jmp short 0x99ba
pop esi
pop ebx
mov esp,ebp
pop ebp
ret
add bh,bh
db 0xff
db 0xff
inc dword [edx]
add [eax],al
add [edi+0x67],ah
add [eax],al
push ebp
mov ebp,esp
add esp,0xfffffee8
push ebx
push esi
xor ecx,ecx
mov [ebp-0x4],ecx
mov ebx,edx
mov esi,eax
xor eax,eax
push ebp
push dword 0x40aad6
push dword [fs:eax]
mov [fs:eax],esp
mov eax,ebx
call dword 0x3a1c
mov eax,[ebp+0x8]
movzx eax,word [eax-0xe]
mov [ebp-0x14],ax
mov eax,[ebp+0x8]
movzx eax,word [eax-0x10]
mov [ebp-0x12],ax
mov eax,[ebp+0x8]
movzx eax,word [eax-0x12]
mov [ebp-0xe],ax
cmp esi,byte +0x2
jg 0x9a46
lea eax,[ebp-0x4]
mov edx,0x40aaec
call dword 0x3ab4
jmp short 0x9a53
lea eax,[ebp-0x4]
mov edx,0x40aaf8
call dword 0x3ab4
push dword 0x100
lea eax,[ebp-0x114]
push eax
mov eax,[ebp-0x4]
call dword 0x3eac
push eax
lea eax,[ebp-0x14]
push eax
push byte +0x4
call dword 0x5b60
push eax
call dword 0x5b00
test eax,eax
jz 0x9ac0
mov eax,ebx
lea edx,[ebp-0x114]
mov ecx,0x100
call dword 0x3c8c
dec esi
jnz 0x9ac0
mov eax,[ebx]
cmp byte [eax],0x30
jnz 0x9ac0
mov eax,[ebx]
mov [ebp-0x118],eax
mov esi,[ebp-0x118]
test esi,esi
jz 0x9ab0
sub esi,byte +0x4
mov esi,[esi]
push ebx
mov ecx,esi
dec ecx
mov eax,[ebx]
mov edx,0x2
call dword 0x3f14
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x40aadd
lea eax,[ebp-0x4]
call dword 0x3a1c
ret
jmp dword 0x3384
jmp short 0x9acd
pop esi
pop ebx
mov esp,ebp
pop ebp
ret
add bh,bh
db 0xff
db 0xff
inc dword [edx]
add [eax],al
add [ecx+0x79],bh
add [eax],al
db 0xff
db 0xff
db 0xff
inc dword [eax+eax]
add [eax],al
jns 0x9b73
jns 0x9b75
add [eax],al
add [eax],al
push ebp
mov ebp,esp
add esp,byte -0x2c
push ebx
push esi
push edi
xor edx,edx
mov [ebp-0x2c],edx
mov [ebp-0x28],edx
mov [ebp-0x4],eax
lea edi,[ebp-0x4]
xor eax,eax
push ebp
push dword 0x40b284
push dword [fs:eax]
mov [fs:eax],esp
cmp dword [edi],byte +0x0
jz dword 0xa269
mov eax,[ebp+0x8]
cmp dword [eax-0x108],byte +0x2
jnl dword 0xa269
mov eax,[ebp+0x8]
inc dword [eax-0x108]
mov byte [ebp-0x1e],0x20
mov byte [ebp-0x13],0x0
mov byte [ebp-0x1d],0x0
mov byte [ebp-0x1f],0x0
jmp dword 0xa255
mov eax,[edi]
movzx eax,byte [eax]
mov [ebp-0x5],al
movzx eax,byte [ebp-0x5]
movzx eax,al
bt [dword 0x4677f8],eax
jnc 0x9b9b
mov eax,[ebp+0x8]
push eax
mov eax,[edi]
call dword 0xc05c
mov edx,eax
mov eax,[edi]
call dword 0x971c
pop ecx
mov eax,[edi]
call dword 0xc07c
mov [edi],eax
mov byte [ebp-0x1e],0x20
jmp dword 0xa255
mov eax,[edi]
call dword 0xc07c
mov [edi],eax
movzx ebx,byte [ebp-0x5]
mov eax,ebx
add al,0x9f
sub al,0x1a
jnc 0x9bb3
sub bl,0x20
mov eax,ebx
add al,0xbf
sub al,0x1a
jnc 0x9bcb
cmp bl,0x4d
jnz 0x9bc8
cmp byte [ebp-0x1e],0x48
jnz 0x9bc8
mov bl,0x4e
mov [ebp-0x1e],bl
movzx eax,bl
add eax,byte -0x22
cmp eax,byte +0x38
ja dword 0xa243
movzx eax,byte [eax+0x40abe8]
jmp dword [eax*4+0x40ac21]
sldt [eax]
add [eax],al
sldt [eax]
add [eax],al
add [eax],al
add [dword 0x0],cl
add [eax],al
add [eax],al
add [eax],al
push cs
add [eax],al
add [eax],al
add [eax],al
or eax,[eax]
or al,0x5
add eax,[eax]
add al,[esi]
add [eax],al
add [eax],al
add al,0x7
add [eax],al
add [eax],al
or [ecx],cl
add [eax],al
add [eax],al
add [edx],ecx
inc ebx
mov dl,0x40
add [ecx-0x54],ah
inc eax
add [eax-0x22ffbf54],dh
lodsb
inc eax
add [edx],cl
lodsd
inc eax
add [edi-0x53],ch
inc eax
add [esi+ebp*4],bl
inc eax
add [eax],ah
scasd
inc eax
add [ecx-0x51],dl
inc eax
add [edx-0x48ffbf51],al
scasd
inc eax
add al,ch
scasd
inc eax
add [ebp-0x4f],dl
inc eax
add [ebx-0x29ffbf4f],dh
mov cl,0x40
add ch,dh
mov cl,0x40
add [ebp-0x18],dl
popad
sti
db 0xff
call dword far [ecx+0x55]
call dword 0x97f4
pop ecx
cmp dword [ebp-0xc],byte +0x2
jg 0x9c98
mov eax,[ebp+0x8]
push eax
movzx eax,word [ebp-0xe]
mov ecx,0x64
xor edx,edx
div ecx
mov eax,edx
mov edx,0x2
call dword 0x977c
pop ecx
jmp dword 0xa255
mov eax,[ebp+0x8]
push eax
movzx eax,word [ebp-0xe]
mov edx,0x4
call dword 0x977c
pop ecx
jmp dword 0xa255
push ebp
call dword 0x97c8
pop ecx
push ebp
call dword 0x97f4
pop ecx
mov eax,[ebp+0x8]
push eax
push ebp
lea edx,[ebp-0x28]
mov eax,[ebp-0xc]
call dword 0x986c
pop ecx
mov eax,[ebp-0x28]
call dword 0x9760
pop ecx
jmp dword 0xa255
push ebp
call dword 0x97c8
pop ecx
push ebp
call dword 0x97f4
pop ecx
mov eax,[ebp+0x8]
push eax
push ebp
lea edx,[ebp-0x2c]
mov eax,[ebp-0xc]
call dword 0x99e8
pop ecx
mov eax,[ebp-0x2c]
call dword 0x9760
pop ecx
jmp dword 0xa255
push ebp
call dword 0x97c8
pop ecx
push ebp
call dword 0x97f4
pop ecx
mov eax,[ebp-0xc]
dec eax
sub eax,byte +0x2
jc 0x9d25
jz 0x9d3b
jmp short 0x9d55
mov eax,[ebp+0x8]
push eax
movzx eax,word [ebp-0x10]
mov edx,[ebp-0xc]
call dword 0x977c
pop ecx
jmp dword 0xa255
mov eax,[ebp+0x8]
push eax
movzx eax,word [ebp-0x10]
mov eax,[eax*4+0x46b828]
call dword 0x9760
pop ecx
jmp dword 0xa255
mov eax,[ebp+0x8]
push eax
movzx eax,word [ebp-0x10]
mov eax,[eax*4+0x46b858]
call dword 0x9760
pop ecx
jmp dword 0xa255
push ebp
call dword 0x97c8
pop ecx
mov eax,[ebp-0xc]
dec eax
sub eax,byte +0x2
jc 0x9d89
jz 0x9da6
dec eax
jz 0x9dcd
dec eax
jz 0x9df4
jmp short 0x9e08
push ebp
call dword 0x97f4
pop ecx
mov eax,[ebp+0x8]
push eax
movzx eax,word [ebp-0x12]
mov edx,[ebp-0xc]
call dword 0x977c
pop ecx
jmp dword 0xa255
mov eax,[ebp+0x8]
push eax
mov eax,[ebp+0x8]
push dword [eax+0xc]
push dword [eax+0x8]
call dword 0x96e0
movzx eax,ax
mov eax,[eax*4+0x46b888]
call dword 0x9760
pop ecx
jmp dword 0xa255
mov eax,[ebp+0x8]
push eax
mov eax,[ebp+0x8]
push dword [eax+0xc]
push dword [eax+0x8]
call dword 0x96e0
movzx eax,ax
mov eax,[eax*4+0x46b8a4]
call dword 0x9760
pop ecx
jmp dword 0xa255
mov eax,[ebp+0x8]
push eax
mov eax,[0x46b810]
call dword 0x9b00
pop ecx
jmp dword 0xa255
mov eax,[ebp+0x8]
push eax
mov eax,[0x46b814]
call dword 0x9b00
pop ecx
jmp dword 0xa255
push ebp
call dword 0x97c8
pop ecx
push ebp
call dword 0x982c
pop ecx
mov byte [ebp-0x20],0x0
mov esi,[edi]
jmp dword 0x9ecb
movzx eax,byte [esi]
movzx eax,al
bt [dword 0x4677f8],eax
jnc 0x9e4f
mov eax,esi
call dword 0xc07c
mov esi,eax
jmp short 0x9ecb
movzx eax,byte [esi]
cmp eax,byte +0x48
jg 0x9e6a
jz 0x9ed4
sub eax,byte +0x22
jz 0x9ec1
sub eax,byte +0x5
jz 0x9ec1
sub eax,byte +0x1a
jz 0x9e76
jmp short 0x9eca
sub eax,byte +0x61
jz 0x9e76
sub eax,byte +0x7
jz 0x9ed4
jmp short 0x9eca
cmp byte [ebp-0x20],0x0
jnz 0x9eca
mov edx,0x40b294
mov ecx,0x5
mov eax,esi
call dword 0x8588
test eax,eax
jz 0x9ebb
mov edx,0x40b29c
mov ecx,0x3
mov eax,esi
call dword 0x8588
test eax,eax
jz 0x9ebb
mov edx,0x40b2a0
mov ecx,0x4
mov eax,esi
call dword 0x8588
test eax,eax
jnz 0x9ed4
mov byte [ebp-0x1f],0x1
jmp short 0x9ed4
movzx eax,byte [ebp-0x20]
xor al,0x1
mov [ebp-0x20],al
inc esi
cmp byte [esi],0x0
jnz dword 0x9e35
movzx eax,word [ebp-0x16]
mov [ebp-0x22],ax
cmp byte [ebp-0x1f],0x0
jz 0x9efd
cmp word [ebp-0x22],byte +0x0
jnz 0x9ef1
mov word [ebp-0x22],0xc
jmp short 0x9efd
cmp word [ebp-0x22],byte +0xc
jna 0x9efd
sub word [ebp-0x22],byte +0xc
cmp dword [ebp-0xc],byte +0x2
jng 0x9f0a
mov dword [ebp-0xc],0x2
mov eax,[ebp+0x8]
push eax
movzx eax,word [ebp-0x22]
mov edx,[ebp-0xc]
call dword 0x977c
pop ecx
jmp dword 0xa255
push ebp
call dword 0x97c8
pop ecx
push ebp
call dword 0x982c
pop ecx
cmp dword [ebp-0xc],byte +0x2
jng 0x9f3b
mov dword [ebp-0xc],0x2
mov eax,[ebp+0x8]
push eax
movzx eax,word [ebp-0x18]
mov edx,[ebp-0xc]
call dword 0x977c
pop ecx
jmp dword 0xa255
push ebp
call dword 0x97c8
pop ecx
push ebp
call dword 0x982c
pop ecx
cmp dword [ebp-0xc],byte +0x2
jng 0x9f6c
mov dword [ebp-0xc],0x2
mov eax,[ebp+0x8]
push eax
movzx eax,word [ebp-0x1a]
mov edx,[ebp-0xc]
call dword 0x977c
pop ecx
jmp dword 0xa255
push ebp
call dword 0x97c8
pop ecx
cmp dword [ebp-0xc],byte +0x1
jnz 0x9fa3
mov eax,[ebp+0x8]
push eax
mov eax,[0x46b824]
call dword 0x9b00
pop ecx
jmp dword 0xa255
mov eax,[ebp+0x8]
push eax
mov eax,[0x46b828]
call dword 0x9b00
pop ecx
jmp dword 0xa255
push ebp
call dword 0x97c8
pop ecx
push ebp
call dword 0x982c
pop ecx
cmp dword [ebp-0xc],byte +0x3
jng 0x9fd2
mov dword [ebp-0xc],0x3
mov eax,[ebp+0x8]
push eax
movzx eax,word [ebp-0x1c]
mov edx,[ebp-0xc]
call dword 0x977c
pop ecx
jmp dword 0xa255
push ebp
call dword 0x982c
pop ecx
mov esi,[edi]
dec esi
mov edx,0x40b294
mov ecx,0x5
mov eax,esi
call dword 0x8588
test eax,eax
jnz 0xa02e
cmp word [ebp-0x16],byte +0xc
jc 0xa011
add esi,byte +0x3
mov eax,[ebp+0x8]
push eax
mov edx,0x2
mov eax,esi
call dword 0x971c
pop ecx
add dword [edi],byte +0x4
mov byte [ebp-0x1f],0x1
jmp dword 0xa255
mov edx,0x40b29c
mov ecx,0x3
mov eax,esi
call dword 0x8588
test eax,eax
jnz 0xa06a
cmp word [ebp-0x16],byte +0xc
jc 0xa04d
add esi,byte +0x2
mov eax,[ebp+0x8]
push eax
mov edx,0x1
mov eax,esi
call dword 0x971c
pop ecx
add dword [edi],byte +0x2
mov byte [ebp-0x1f],0x1
jmp dword 0xa255
mov edx,0x40b2a0
mov ecx,0x4
mov eax,esi
call dword 0x8588
test eax,eax
jnz 0xa0b2
cmp word [ebp-0x16],byte +0xc
jnc 0xa097
mov eax,[ebp+0x8]
push eax
mov eax,[0x46b81c]
call dword 0x9760
pop ecx
jmp short 0xa0a6
mov eax,[ebp+0x8]
push eax
mov eax,[0x46b820]
call dword 0x9760
pop ecx
add dword [edi],byte +0x3
mov byte [ebp-0x1f],0x1
jmp dword 0xa255
mov edx,0x40b2a8
mov ecx,0x4
mov eax,esi
call dword 0x8588
test eax,eax
jnz 0xa0f8
push ebp
call dword 0x97f4
pop ecx
mov eax,[ebp+0x8]
push eax
mov eax,[ebp+0x8]
push dword [eax+0xc]
push dword [eax+0x8]
call dword 0x96e0
movzx eax,ax
mov eax,[eax*4+0x46b8a4]
call dword 0x9760
pop ecx
add dword [edi],byte +0x3
jmp dword 0xa255
mov edx,0x40b2b0
mov ecx,0x3
mov eax,esi
call dword 0x8588
test eax,eax
jnz 0xa13e
push ebp
call dword 0x97f4
pop ecx
mov eax,[ebp+0x8]
push eax
mov eax,[ebp+0x8]
push dword [eax+0xc]
push dword [eax+0x8]
call dword 0x96e0
movzx eax,ax
mov eax,[eax*4+0x46b888]
call dword 0x9760
pop ecx
add dword [edi],byte +0x2
jmp dword 0xa255
mov eax,[ebp+0x8]
push eax
lea eax,[ebp-0x5]
mov edx,0x1
call dword 0x971c
pop ecx
jmp dword 0xa255
push ebp
call dword 0x97c8
pop ecx
mov eax,[ebp+0x8]
push eax
mov eax,[0x46b810]
call dword 0x9b00
pop ecx
push ebp
call dword 0x982c
pop ecx
cmp word [ebp-0x16],byte +0x0
jnz 0xa18b
cmp word [ebp-0x18],byte +0x0
jnz 0xa18b
cmp word [ebp-0x1a],byte +0x0
jz dword 0xa255
mov eax,[ebp+0x8]
push eax
mov eax,0x40b2b4
mov edx,0x1
call dword 0x971c
pop ecx
mov eax,[ebp+0x8]
push eax
mov eax,[0x46b828]
call dword 0x9b00
pop ecx
jmp dword 0xa255
cmp byte [dword 0x46b80d],0x0
jz dword 0xa255
mov eax,[ebp+0x8]
push eax
mov eax,0x46b80d
mov edx,0x1
call dword 0x971c
pop ecx
jmp short 0xa255
cmp byte [dword 0x46b818],0x0
jz 0xa255
mov eax,[ebp+0x8]
push eax
mov eax,0x46b818
mov edx,0x1
call dword 0x971c
pop ecx
jmp short 0xa255
mov esi,[edi]
jmp short 0xa217
mov eax,[edi]
movzx eax,byte [eax]
movzx eax,al
bt [dword 0x4677f8],eax
jnc 0xa215
mov eax,[edi]
call dword 0xc07c
mov [edi],eax
jmp short 0xa217
inc dword [edi]
mov eax,[edi]
cmp byte [eax],0x0
jz 0xa228
mov eax,[edi]
movzx eax,byte [eax]
cmp al,[ebp-0x5]
jnz 0xa1f9
mov eax,[ebp+0x8]
push eax
mov edx,[edi]
sub edx,esi
mov eax,esi
call dword 0x971c
pop ecx
mov eax,[edi]
cmp byte [eax],0x0
jz 0xa255
inc dword [edi]
jmp short 0xa255
mov eax,[ebp+0x8]
push eax
lea eax,[ebp-0x5]
mov edx,0x1
call dword 0x971c
pop ecx
mov eax,[edi]
cmp byte [eax],0x0
jnz dword 0x9b5c
mov eax,[ebp+0x8]
dec dword [eax-0x108]
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x40b28b
lea eax,[ebp-0x2c]
mov edx,0x2
call dword 0x3a40
ret
jmp dword 0x3384
jmp short 0xa276
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret
add [eax],al
inc ecx
dec ebp
das
push eax
dec ebp
add [eax],al
add [ecx+0x2f],al
push eax
add [ecx+0x4d],al
push eax
dec ebp
add [eax],al
add [eax],al
inc ecx
inc ecx
inc ecx
inc ecx
add [eax],al
add [eax],al
inc ecx
inc ecx
inc ecx
add [eax],ah
add [eax],al
add [ebp-0x75],dl
in al,dx
add esp,0xfffffef8
push ebx
push esi
mov ebx,edx
mov esi,eax
xor eax,eax
mov [ebp-0x104],eax
xor eax,eax
mov [ebp-0x108],eax
test ebx,ebx
jz 0xa2e6
push ebp
mov eax,ebx
call dword 0x9b00
pop ecx
jmp short 0xa2f2
push ebp
mov eax,0x40b310
call dword 0x9b00
pop ecx
lea edx,[ebp-0x100]
mov eax,esi
mov ecx,[ebp-0x104]
call dword 0x3b0c
pop esi
pop ebx
mov esp,ebp
pop ebp
ret 0x8
add [eax],al
add [ebx+0x0],al
add [eax],al
push ebx
push esi
push edi
mov edi,edx
mov esi,eax
mov ebx,[edi]
jmp short 0xa320
inc ebx
mov eax,esi
call dword 0x3cdc
cmp ebx,eax
jg 0xa332
cmp byte [esi+ebx-0x1],0x20
jz 0xa31f
mov [edi],ebx
pop edi
pop esi
pop ebx
ret
push ebp
mov ebp,esp
add esp,byte -0xc
push ebx
push esi
push edi
mov [ebp-0x8],ecx
mov [ebp-0x4],edx
mov edi,eax
mov byte [ebp-0x9],0x0
mov eax,[ebp+0x8]
mov byte [eax],0x0
mov edx,[ebp-0x4]
mov eax,edi
call dword 0xa314
mov ebx,[ebp-0x4]
mov ebx,[ebx]
xor esi,esi
jmp short 0xa37c
mov eax,esi
add eax,eax
lea eax,[eax+eax*4]
movzx edx,byte [edi+ebx-0x1]
sub dx,byte +0x30
add ax,dx
mov esi,eax
inc ebx
mov eax,edi
call dword 0x3cdc
cmp ebx,eax
jg 0xa399
movzx eax,byte [edi+ebx-0x1]
add al,0xd0
sub al,0xa
jnc 0xa399
cmp si,0x3e8
jc 0xa366
mov eax,[ebp-0x4]
cmp ebx,[eax]
jng 0xa3bd
mov eax,ebx
mov edx,[ebp-0x4]
mov edx,[edx]
sub al,dl
mov edx,[ebp+0x8]
mov [edx],al
mov eax,[ebp-0x4]
mov [eax],ebx
mov eax,[ebp-0x8]
mov [eax],si
mov byte [ebp-0x9],0x1
movzx eax,byte [ebp-0x9]
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret 0x4
mov eax,eax
push ebp
mov ebp,esp
add esp,byte -0x14
push ebx
push esi
push edi
xor ebx,ebx
mov [ebp-0x14],ebx
mov ebx,ecx
mov [ebp-0x8],edx
mov [ebp-0x4],eax
xor eax,eax
push ebp
push dword 0x40b492
push dword [fs:eax]
mov [fs:eax],esp
mov byte [ebp-0x9],0x0
test ebx,ebx
jz dword 0xa47c
mov edx,[ebp-0x8]
mov eax,[ebp-0x4]
call dword 0xa314
mov esi,ebx
test esi,esi
jz 0xa412
sub esi,byte +0x4
mov esi,[esi]
lea eax,[ebp-0x14]
push eax
mov edx,[ebp-0x8]
mov edx,[edx]
mov ecx,esi
mov eax,[ebp-0x4]
call dword 0x3f14
mov eax,[ebp-0x14]
mov [ebp-0x10],eax
mov esi,ebx
test esi,esi
jz 0xa436
sub esi,byte +0x4
mov esi,[esi]
mov edi,[ebp-0x10]
test edi,edi
jz 0xa442
sub edi,byte +0x4
mov edi,[edi]
push edi
mov eax,[ebp-0x10]
call dword 0x3eac
push eax
push esi
mov eax,ebx
call dword 0x3eac
push eax
push byte +0x1
push dword 0x400
call dword 0x5a78
sub eax,byte +0x2
test eax,eax
jnz 0xa47c
mov eax,ebx
test eax,eax
jz 0xa473
sub eax,byte +0x4
mov eax,[eax]
mov edx,[ebp-0x8]
add [edx],eax
mov byte [ebp-0x9],0x1
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x40b499
lea eax,[ebp-0x14]
call dword 0x3a1c
ret
jmp dword 0x3384
jmp short 0xa489
movzx eax,byte [ebp-0x9]
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret
push ebx
push esi
push edi
push ecx
mov [esp],cl
mov edi,edx
mov esi,eax
xor ebx,ebx
mov edx,edi
mov eax,esi
call dword 0xa314
mov eax,esi
test eax,eax
jz 0xa4c5
sub eax,byte +0x4
mov eax,[eax]
cmp eax,[edi]
jl 0xa4d9
mov eax,[edi]
movzx eax,byte [esi+eax-0x1]
cmp al,[esp]
jnz 0xa4d9
inc dword [edi]
mov bl,0x1
mov eax,ebx
pop edx
pop edi
pop esi
pop ebx
ret
push ebx
push esi
push edi
mov esi,eax
xor ebx,ebx
mov edi,0x1
jmp short 0xa518
movzx eax,byte [esi+edi-0x1]
and al,0xdf
sub al,0x44
jz 0xa513
dec al
jz 0xa507
sub al,0x8
jz 0xa50f
sub al,0xc
jz 0xa50b
jmp short 0xa517
mov bl,0x2
jmp short 0xa525
mov bl,0x2
jmp short 0xa525
xor ebx,ebx
jmp short 0xa525
mov bl,0x1
jmp short 0xa525
inc edi
mov eax,esi
call dword 0x3cdc
cmp edi,eax
jng 0xa4ee
xor ebx,ebx
mov eax,ebx
pop edi
pop esi
pop ebx
ret
nop
push ebx
push esi
mov ebx,edx
mov esi,eax
jmp short 0xa556
mov eax,[ebx]
movzx eax,byte [esi+eax-0x1]
movzx eax,al
bt [dword 0x4677f8],eax
jnc 0xa554
mov edx,[ebx]
mov eax,esi
call dword 0xc0bc
mov [ebx],eax
jmp short 0xa556
inc dword [ebx]
mov eax,esi
call dword 0x3cdc
cmp eax,[ebx]
jl 0xa56e
mov eax,[ebx]
movzx eax,byte [esi+eax-0x1]
add al,0xd0
sub al,0xa
jnc 0xa534
pop esi
pop ebx
ret
lea eax,[eax+0x0]
push ebx
push esi
push edi
push ebp
push ecx
mov ebp,eax
xor eax,eax
mov [esp],eax
mov edi,0x7
mov ebx,0x46b8d4
mov esi,0x46b8f0
cmp dword [ebx],byte +0x0
jz 0xa5bd
mov eax,ebp
call dword 0x3eac
push eax
mov eax,[ebx]
call dword 0x3eac
pop edx
call dword 0xc2b4
test eax,eax
jz 0xa5b4
mov eax,[esi]
mov [esp],eax
jmp short 0xa5bd
add esi,byte +0x4
add ebx,byte +0x4
dec edi
jnz 0xa58f
mov eax,[esp]
pop edx
pop ebp
pop edi
pop esi
pop ebx
ret
mov eax,eax
push ebp
mov ebp,esp
push ebx
mov ebx,eax
cmp dword [dword 0x46b8c8],byte +0x12
jnz 0xa611
cmp ebx,byte +0x63
jg 0xa600
call dword 0x9708
movzx ecx,ax
mov eax,[ebp+0x8]
mov eax,[eax-0x4]
cdq
xor eax,edx
sub eax,edx
add ecx,eax
mov eax,ecx
mov ecx,0x64
cdq
idiv ecx
imul eax,eax,byte +0x64
add ebx,eax
mov eax,[ebp+0x8]
cmp dword [eax-0x4],byte +0x0
jng 0xa617
mov eax,[ebp+0x8]
neg dword [eax-0x4]
jmp short 0xa617
mov eax,[ebp+0x8]
dec dword [eax-0x4]
mov eax,[ebp+0x8]
mov eax,[eax-0x4]
add eax,ebx
pop ebx
pop ebp
ret
mov eax,eax
push ebp
mov ebp,esp
add esp,byte -0x28
push ebx
push esi
push edi
xor ebx,ebx
mov [ebp-0x28],ebx
mov [ebp-0x24],ebx
mov [ebp-0x20],ebx
mov [ebp-0x8],ebx
mov [ebp-0xc],ecx
mov ebx,edx
mov esi,eax
xor eax,eax
push ebp
push dword 0x40b946
push dword [fs:eax]
mov [fs:eax],esp
xor edi,edi
mov word [ebp-0x16],0x0
mov word [ebp-0x18],0x0
mov byte [ebp-0x1c],0x0
mov byte [ebp-0xd],0x0
mov eax,[0x46b810]
call dword 0xa4e0
mov [ebp-0xe],al
xor eax,eax
mov [ebp-0x4],eax
mov eax,[0x46b810]
cmp byte [eax],0x67
jnz 0xa6b6
mov edx,ebx
mov eax,esi
call dword 0xa52c
lea eax,[ebp-0x20]
push eax
mov ecx,[ebx]
dec ecx
mov edx,0x1
mov eax,esi
call dword 0x3f14
mov eax,[ebp-0x20]
lea edx,[ebp-0x8]
call dword 0x7918
mov eax,[ebp-0x8]
call dword 0xa574
mov [ebp-0x4],eax
jmp short 0xa6d2
mov edx,[dword 0x46b810]
mov eax,0x40b960
call dword 0xc1e8
test eax,eax
jng 0xa6d2
mov eax,[0x46b8f0]
mov [ebp-0x4],eax
lea eax,[ebp-0x19]
push eax
lea ecx,[ebp-0x10]
mov edx,ebx
mov eax,esi
call dword 0xa338
test al,al
jz dword 0xa923
mov edx,ebx
movzx ecx,byte [dword 0x46b80d]
mov eax,esi
call dword 0xa4a4
test al,al
jz dword 0xa923
lea eax,[ebp-0x1a]
push eax
lea ecx,[ebp-0x12]
mov edx,ebx
mov eax,esi
call dword 0xa338
test al,al
jz dword 0xa923
mov edx,ebx
movzx ecx,byte [dword 0x46b80d]
mov eax,esi
call dword 0xa4a4
test al,al
jz dword 0xa804
lea eax,[ebp-0x1b]
push eax
lea ecx,[ebp-0x14]
mov edx,ebx
mov eax,esi
call dword 0xa338
test al,al
jz dword 0xa923
movzx eax,byte [ebp-0xe]
sub al,0x1
jc 0xa75a
jz 0xa777
dec al
jz 0xa794
jmp short 0xa7af
movzx edi,word [ebp-0x14]
movzx eax,byte [ebp-0x1b]
mov [ebp-0x1c],al
movzx eax,word [ebp-0x10]
mov [ebp-0x16],ax
movzx eax,word [ebp-0x12]
mov [ebp-0x18],ax
jmp short 0xa7af
movzx edi,word [ebp-0x14]
movzx eax,byte [ebp-0x1b]
mov [ebp-0x1c],al
movzx eax,word [ebp-0x12]
mov [ebp-0x16],ax
movzx eax,word [ebp-0x10]
mov [ebp-0x18],ax
jmp short 0xa7af
movzx edi,word [ebp-0x10]
movzx eax,byte [ebp-0x19]
mov [ebp-0x1c],al
movzx eax,word [ebp-0x12]
mov [ebp-0x16],ax
movzx eax,word [ebp-0x14]
mov [ebp-0x18],ax
cmp dword [ebp-0x4],byte +0x0
jng 0xa7c3
push ebp
movzx eax,di
call dword 0xa5c8
pop ecx
mov edi,eax
jmp short 0xa833
cmp byte [ebp-0x1c],0x2
ja 0xa833
call dword 0x9708
movzx ecx,ax
movzx eax,word [dword 0x4677c4]
sub ecx,eax
mov eax,ecx
push ecx
mov ecx,0x64
cdq
idiv ecx
pop ecx
imul ax,ax,byte +0x64
add di,ax
cmp word [dword 0x4677c4],byte +0x0
jna 0xa833
movzx eax,di
cmp ecx,eax
jng 0xa833
add di,byte +0x64
jmp short 0xa833
call dword 0x9708
mov edi,eax
cmp byte [ebp-0xe],0x1
jnz 0xa823
movzx eax,word [ebp-0x10]
mov [ebp-0x18],ax
movzx eax,word [ebp-0x12]
mov [ebp-0x16],ax
jmp short 0xa833
movzx eax,word [ebp-0x10]
mov [ebp-0x16],ax
movzx eax,word [ebp-0x12]
mov [ebp-0x18],ax
mov edx,ebx
movzx ecx,byte [dword 0x46b80d]
mov eax,esi
call dword 0xa4a4
mov edx,ebx
mov eax,esi
call dword 0xa314
cmp byte [dword 0x46b8d0],0x0
jz dword 0xa90d
mov edx,[dword 0x46b810]
mov eax,0x40b96c
call dword 0x3ff8
test eax,eax
jz dword 0xa90d
mov eax,[0x46b824]
movzx eax,byte [eax]
add al,0xd0
sub al,0xa
jnc 0xa891
mov edx,ebx
mov eax,esi
call dword 0xa52c
jmp dword 0xa90d
jmp short 0xa891
inc dword [ebx]
mov eax,esi
call dword 0x3cdc
cmp eax,[ebx]
jl 0xa8a5
mov eax,[ebx]
cmp byte [esi+eax-0x1],0x20
jnz 0xa88f
mov edx,ebx
mov eax,esi
call dword 0xa314
mov eax,esi
call dword 0x3cdc
cmp eax,[ebx]
jl 0xa90d
lea eax,[ebp-0x24]
push eax
mov eax,[0x46b81c]
call dword 0x3cdc
mov ecx,eax
mov edx,[ebx]
mov eax,esi
call dword 0x3f14
mov edx,[ebp-0x24]
mov eax,[0x46b81c]
call dword 0x78b4
test eax,eax
jz 0xa90d
lea eax,[ebp-0x28]
push eax
mov eax,[0x46b820]
call dword 0x3cdc
mov ecx,eax
mov edx,[ebx]
mov eax,esi
call dword 0x3f14
mov edx,[ebp-0x28]
mov eax,[0x46b820]
call dword 0x78b4
test eax,eax
jnz 0xa891
mov eax,[ebp-0xc]
push eax
movzx ecx,word [ebp-0x18]
movzx edx,word [ebp-0x16]
mov eax,edi
call dword 0x94a8
mov [ebp-0xd],al
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x40b94d
lea eax,[ebp-0x28]
mov edx,0x3
call dword 0x3a40
lea eax,[ebp-0x8]
call dword 0x3a1c
ret
jmp dword 0x3384
jmp short 0xa930
movzx eax,byte [ebp-0xd]
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret
db 0xff
db 0xff
db 0xff
inc dword [ecx]
add [eax],al
add [ebp+0x0],ah
add [eax],al
db 0xff
db 0xff
db 0xff
inc dword [ebx]
add [eax],al
add [esp+0x64],ah
add [ebx+0x56],dl
push edi
push ebp
add esp,byte -0x10
mov [esp],ecx
mov esi,edx
mov ebp,eax
xor ebx,ebx
or edi,byte -0x1
mov edx,esi
mov ecx,[dword 0x46b81c]
mov eax,ebp
call dword 0xa3cc
test al,al
jnz 0xa9a8
mov edx,esi
mov ecx,0x40bb58
mov eax,ebp
call dword 0xa3cc
test al,al
jz 0xa9ac
xor edi,edi
jmp short 0xa9d6
mov edx,esi
mov ecx,[dword 0x46b820]
mov eax,ebp
call dword 0xa3cc
test al,al
jnz 0xa9d1
mov edx,esi
mov ecx,0x40bb64
mov eax,ebp
call dword 0xa3cc
test al,al
jz 0xa9d6
mov edi,0xc
test edi,edi
jl 0xa9e3
mov edx,esi
mov eax,ebp
call dword 0xa314
lea eax,[esp+0xc]
push eax
lea ecx,[esp+0x8]
mov edx,esi
mov eax,ebp
call dword 0xa338
test al,al
jz dword 0xab45
mov word [esp+0x6],0x0
mov word [esp+0x8],0x0
mov word [esp+0xa],0x0
mov edx,esi
movzx ecx,byte [dword 0x46b818]
mov eax,ebp
call dword 0xa4a4
test al,al
jz 0xaa9c
lea eax,[esp+0xc]
push eax
lea ecx,[esp+0xa]
mov edx,esi
mov eax,ebp
call dword 0xa338
test al,al
jz dword 0xab45
mov edx,esi
movzx ecx,byte [dword 0x46b818]
mov eax,ebp
call dword 0xa4a4
test al,al
jz 0xaa9c
lea eax,[esp+0xc]
push eax
lea ecx,[esp+0xc]
mov edx,esi
mov eax,ebp
call dword 0xa338
test al,al
jz dword 0xab45
mov edx,esi
movzx ecx,byte [dword 0x46b80b]
mov eax,ebp
call dword 0xa4a4
test al,al
jz 0xaa9c
lea eax,[esp+0xc]
push eax
lea ecx,[esp+0xe]
mov edx,esi
mov eax,ebp
call dword 0xa338
test al,al
jz dword 0xab45
test edi,edi
jnl 0xaaf3
mov edx,esi
mov ecx,[dword 0x46b81c]
mov eax,ebp
call dword 0xa3cc
test al,al
jnz 0xaac5
mov edx,esi
mov ecx,0x40bb58
mov eax,ebp
call dword 0xa3cc
test al,al
jz 0xaac9
xor edi,edi
jmp short 0xaaf3
mov edx,esi
mov ecx,[dword 0x46b820]
mov eax,ebp
call dword 0xa3cc
test al,al
jnz 0xaaee
mov edx,esi
mov ecx,0x40bb64
mov eax,ebp
call dword 0xa3cc
test al,al
jz 0xaaf3
mov edi,0xc
test edi,edi
jl 0xab1b
cmp word [esp+0x4],byte +0x0
jz 0xab45
cmp word [esp+0x4],byte +0xc
ja 0xab45
cmp word [esp+0x4],byte +0xc
jnz 0xab16
mov word [esp+0x4],0x0
add [esp+0x4],di
mov edx,esi
mov eax,ebp
call dword 0xa314
movzx eax,word [esp+0xa]
push eax
mov eax,[esp+0x4]
push eax
movzx ecx,word [esp+0x10]
movzx edx,word [esp+0xe]
movzx eax,word [esp+0xc]
call dword 0x93a0
mov ebx,eax
mov eax,ebx
add esp,byte +0x10
pop ebp
pop edi
pop esi
pop ebx
ret
add bh,bh
db 0xff
db 0xff
inc dword [edx]
add [eax],al
add [ecx+0x4d],al
add [eax],al
db 0xff
db 0xff
db 0xff
inc dword [edx]
add [eax],al
add [eax+0x4d],dl
add [eax],al
push ebx
push esi
push ecx
mov esi,edx
mov ebx,eax
mov dword [esp],0x1
mov ecx,esi
mov edx,esp
mov eax,ebx
call dword 0xa970
test al,al
jz 0xab98
mov eax,ebx
test eax,eax
jz 0xab90
sub eax,byte +0x4
mov eax,[eax]
cmp eax,[esp]
setl al
jmp short 0xab9a
xor eax,eax
pop edx
pop esi
pop ebx
ret
mov eax,eax
push ebx
push esi
push edi
add esp,byte -0x18
mov edi,edx
mov esi,eax
mov bl,0x1
mov dword [esp],0x1
xor eax,eax
mov [esp+0x10],eax
mov [esp+0x14],eax
lea ecx,[esp+0x8]
mov edx,esp
mov eax,esi
call dword 0xa624
test al,al
jnz 0xabd2
mov al,0x1
jmp short 0xabf5
mov eax,esi
test eax,eax
jz 0xabdd
sub eax,byte +0x4
mov eax,[eax]
cmp eax,[esp]
jnl 0xabe6
mov al,0x1
jmp short 0xabf3
lea ecx,[esp+0x10]
mov edx,esp
mov eax,esi
call dword 0xa970
xor al,0x1
test al,al
jz 0xac06
mov edx,edi
mov eax,esi
call dword 0xab68
mov ebx,eax
jmp short 0xac2e
fld qword [esp+0x8]
fcomp dword [dword 0x40bc38]
fstsw ax
sahf
jc 0xac23
fld qword [esp+0x8]
fadd qword [esp+0x10]
fstp qword [edi]
wait jmp short 0xac2e
fld qword [esp+0x8]
fsub qword [esp+0x10]
fstp qword [edi]
wait mov eax,ebx
add esp,byte +0x18
pop edi
pop esi
pop ebx
ret
add [eax],al
add [eax],al
add [ebx-0x7f],dl
les eax,[eax]
db 0xff
db 0xff
dec dword [ebx+0x68006ada]
add [ecx],al
add [eax],al
lea edx,[esp+0x8]
push edx
push byte +0x0
push eax
push byte +0x0
push dword 0x3200
call dword 0x5ac8
jmp short 0xac63
dec eax
test eax,eax
jng 0xac76
movzx edx,byte [esp+eax-0x1]
sub dl,0x21
jc 0xac62
sub dl,0xd
jz 0xac62
mov edx,esp
mov ecx,ebx
xchg eax,ecx
call dword 0x3b0c
add esp,0x100
pop ebx
ret
push ebp
mov ebp,esp
add esp,0xffffff00
push ebx
push esi
mov esi,ecx
mov ebx,[ebp+0x8]
push dword 0x100
lea ecx,[ebp-0x100]
push ecx
push edx
push eax
call dword 0x5b38
test eax,eax
jng 0xacc1
mov ecx,eax
dec ecx
lea edx,[ebp-0x100]
mov eax,ebx
call dword 0x3b0c
jmp short 0xacca
mov eax,ebx
mov edx,esi
call dword 0x3a70
pop esi
pop ebx
mov esp,ebp
pop ebp
ret 0x4
mov eax,eax
push ebx
push esi
push edi
push ecx
mov ebx,ecx
mov esi,edx
mov edi,eax
push byte +0x2
lea eax,[esp+0x4]
push eax
push esi
push edi
call dword 0x5b38
test eax,eax
jng 0xacf6
movzx eax,byte [esp]
jmp short 0xacf8
mov eax,ebx
pop edx
pop edi
pop esi
pop ebx
ret
lea eax,[eax+0x0]
push ebp
mov ebp,esp
push ecx
push ebx
push esi
push edi
mov [ebp-0x4],ecx
mov edi,edx
mov esi,eax
mov ebx,[ebp+0x8]
push ebx
mov eax,[ebp+0x10]
mov eax,[eax-0x4]
xor ecx,ecx
mov edx,esi
call dword 0xac88
cmp dword [ebx],byte +0x0
jnz 0xad33
mov eax,[ebp-0x4]
mov eax,[eax+edi*4]
mov edx,ebx
call dword 0x5750
pop edi
pop esi
pop ebx
pop ecx
pop ebp
ret 0x8
nop
push ebp
mov ebp,esp
xor ecx,ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
xor eax,eax
push ebp
push dword 0x40be4f
push dword [fs:eax]
mov [fs:eax],esp
call dword 0x5b60
mov [ebp-0x4],eax
mov ebx,0x1
mov esi,0x46b82c
mov edi,0x46b85c
push ebp
push byte +0xb
lea eax,[ebp-0xc]
push eax
mov ecx,0x467874
mov edx,ebx
dec edx
lea eax,[ebx+0x44]
dec eax
call dword 0xad00
pop ecx
mov edx,[ebp-0xc]
mov eax,esi
call dword 0x3a70
push ebp
push byte +0xb
lea eax,[ebp-0x10]
push eax
mov ecx,0x4678a4
mov edx,ebx
dec edx
lea eax,[ebx+0x38]
dec eax
call dword 0xad00
pop ecx
mov edx,[ebp-0x10]
mov eax,edi
call dword 0x3a70
inc ebx
add edi,byte +0x4
add esi,byte +0x4
cmp ebx,byte +0xd
jnz 0xad6f
mov ebx,0x1
mov esi,0x46b88c
mov edi,0x46b8a8
lea eax,[ebx+0x5]
mov ecx,0x7
cdq
idiv ecx
mov [ebp-0x8],edx
push ebp
push byte +0x6
lea eax,[ebp-0x14]
push eax
mov ecx,0x4678d4
mov edx,ebx
dec edx
mov eax,[ebp-0x8]
add eax,byte +0x31
call dword 0xad00
pop ecx
mov edx,[ebp-0x14]
mov eax,esi
call dword 0x3a70
push ebp
push byte +0x6
lea eax,[ebp-0x18]
push eax
mov ecx,0x4678f0
mov edx,ebx
dec edx
mov eax,[ebp-0x8]
add eax,byte +0x2a
call dword 0xad00
pop ecx
mov edx,[ebp-0x18]
mov eax,edi
call dword 0x3a70
inc ebx
add edi,byte +0x4
add esi,byte +0x4
cmp ebx,byte +0x8
jnz 0xadd0
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x40be56
lea eax,[ebp-0x18]
mov edx,0x4
call dword 0x3a40
ret
jmp dword 0x3384
jmp short 0xae41
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret
lea eax,[eax+0x0]
push ebp
mov ebp,esp
push ebx
push esi
xor esi,esi
mov ebx,0x1
jmp short 0xae74
cmp ebx,byte +0x7
jz 0xae92
inc ebx
cmp dword [ebx*4+0x46b8d0],byte +0x0
jnz 0xae6e
lea eax,[ebx*4+0x46b8d0]
mov edx,[ebp+0x8]
call dword 0x3c14
mov esi,0x1
mov eax,esi
pop esi
pop ebx
pop ebp
ret 0x4
mov eax,eax
push ebp
mov ebp,esp
push byte +0x0
push ebx
push esi
xor eax,eax
push ebp
push dword 0x40bf01
push dword [fs:eax]
mov [fs:eax],esp
xor esi,esi
mov ebx,0x1
jmp short 0xaec0
cmp ebx,byte +0x7
jz 0xaeeb
inc ebx
cmp dword [ebx*4+0x46b8ec],byte -0x1
jnz 0xaeba
lea eax,[ebp-0x4]
mov edx,[ebp+0x8]
call dword 0x3c14
mov eax,[ebp-0x4]
xor edx,edx
call dword 0x7d74
mov [ebx*4+0x46b8ec],eax
mov esi,0x1
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x40bf08
lea eax,[ebp-0x4]
call dword 0x3a1c
ret
jmp dword 0x3384
jmp short 0xaef8
mov eax,esi
pop esi
pop ebx
pop ecx
pop ebp
ret 0x4
lea eax,[eax+0x0]
push ebp
mov ebp,esp
push byte +0x0
push esi
xor eax,eax
push ebp
push dword 0x40bfab
push dword [fs:eax]
mov [fs:eax],esp
lea eax,[ebp-0x4]
push eax
call dword 0x5b60
mov ecx,0x40bfc0
mov edx,0x100b
call dword 0xac88
mov eax,[ebp-0x4]
mov edx,0x1
call dword 0x7d74
mov esi,eax
mov eax,esi
add eax,byte -0x3
sub eax,byte +0x3
jnc 0xaf95
push byte +0x4
push esi
call dword 0x5b60
push eax
push dword 0x40be60
call dword 0x5ab8
mov edx,0x7
mov eax,0x46b8f0
mov dword [eax],0xffffffff
add eax,byte +0x4
dec edx
jnz 0xaf76
push byte +0x3
push esi
call dword 0x5b60
push eax
push dword 0x40be9c
call dword 0x5ab8
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x40bfb2
lea eax,[ebp-0x4]
call dword 0x3a1c
ret
jmp dword 0x3384
jmp short 0xafa2
pop esi
pop ecx
pop ebp
ret
add [eax],al
db 0xff
db 0xff
db 0xff
inc dword [ecx]
add [eax],al
add [ecx],dh
add [eax],al
add [ebp-0x75],dl
in al,dx
xor ecx,ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov edi,edx
mov esi,eax
xor eax,eax
push ebp
push dword 0x40c194
push dword [fs:eax]
mov [fs:eax],esp
mov ebx,0x1
mov eax,edi
call dword 0x3a1c
lea eax,[ebp-0x8]
push eax
call dword 0x5b60
mov ecx,0x40c1ac
mov edx,0x1009
call dword 0xac88
mov eax,[ebp-0x8]
mov edx,0x1
call dword 0x7d74
add eax,byte -0x3
sub eax,byte +0x3
jc dword 0xb16a
mov eax,[0x46b8c8]
sub eax,byte +0x4
jz 0xb036
add eax,byte -0xd
sub eax,byte +0x2
jc 0xb036
xor eax,eax
jmp short 0xb038
mov al,0x1
test al,al
jz 0xb073
jmp short 0xb063
movzx eax,byte [esi+ebx-0x1]
sub al,0x47
jz 0xb062
sub al,0x20
jz 0xb062
lea eax,[ebp-0xc]
movzx edx,byte [esi+ebx-0x1]
call dword 0x3c04
mov edx,[ebp-0xc]
mov eax,edi
call dword 0x3ce8
inc ebx
mov eax,esi
call dword 0x3cdc
cmp ebx,eax
jng 0xb03e
jmp dword 0xb179
mov eax,edi
mov edx,esi
call dword 0x3a70
jmp dword 0xb179
movzx eax,byte [esi+ebx-0x1]
movzx eax,al
bt [dword 0x4677f8],eax
jnc 0xb0c0
mov edx,ebx
mov eax,esi
call dword 0xc084
mov [ebp-0x4],eax
lea eax,[ebp-0x10]
push eax
mov ecx,[ebp-0x4]
mov edx,ebx
mov eax,esi
call dword 0x3f14
mov edx,[ebp-0x10]
mov eax,edi
call dword 0x3ce8
add ebx,[ebp-0x4]
jmp dword 0xb16a
mov edx,0x40c1b0
lea eax,[esi+ebx-0x1]
mov ecx,0x2
call dword 0x8588
test eax,eax
jnz 0xb0e9
mov eax,edi
mov edx,0x40c1bc
call dword 0x3ce8
inc ebx
jmp dword 0xb169
mov edx,0x40c1c0
lea eax,[esi+ebx-0x1]
mov ecx,0x4
call dword 0x8588
test eax,eax
jnz 0xb111
mov eax,edi
mov edx,0x40c1d0
call dword 0x3ce8
add ebx,byte +0x3
jmp short 0xb169
mov edx,0x40c1d8
lea eax,[esi+ebx-0x1]
mov ecx,0x2
call dword 0x8588
test eax,eax
jnz 0xb137
mov eax,edi
mov edx,0x40c1e4
call dword 0x3ce8
inc ebx
jmp short 0xb169
movzx eax,byte [esi+ebx-0x1]
sub al,0x59
jz 0xb144
sub al,0x20
jnz 0xb152
mov eax,edi
mov edx,0x40c1f0
call dword 0x3ce8
jmp short 0xb169
lea eax,[ebp-0x14]
movzx edx,byte [esi+ebx-0x1]
call dword 0x3c04
mov edx,[ebp-0x14]
mov eax,edi
call dword 0x3ce8
inc ebx
mov eax,esi
call dword 0x3cdc
cmp ebx,eax
jng dword 0xb081
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x40c19b
lea eax,[ebp-0x14]
mov edx,0x4
call dword 0x3a40
ret
jmp dword 0x3384
jmp short 0xb186
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret
add [eax],al
db 0xff
db 0xff
db 0xff
inc dword [ecx]
add [eax],al
add [ecx],dh
add [eax],al
add [edi+0x67],ah
add [eax],al
db 0xff
db 0xff
db 0xff
inc dword [ebx]
add [eax],al
add [edi+0x67],ah
add [bx+di+0x79],bh
jns 0xb23d
add [eax],al
add [eax],al
db 0xff
db 0xff
db 0xff
inc dword [eax+eax]
add [eax],al
add [gs:eax],al
add [eax],al
jns 0xb253
add [eax],al
db 0xff
db 0xff
db 0xff
inc dword [edx]
add [eax],al
add [ebp+0x65],ah
add [eax],al
db 0xff
db 0xff
db 0xff
inc dword [ecx]
add [eax],al
add [ebp+0x0],ah
add [eax],al
test eax,eax
jz 0xb1fd
sub eax,0x1000
ret
mov eax,eax
push ebp
mov ebp,esp
add esp,0xfffffba8
push ebx
push esi
push edi
mov [ebp-0x4],ecx
mov ebx,edx
mov esi,eax
push byte +0x1c
lea eax,[ebp-0x330]
push eax
push ebx
call dword 0x5c10
cmp dword [ebp-0x320],0x1000

jnz 0xb24a
push dword 0x105
lea eax,[ebp-0x212]
push eax
mov eax,[ebp-0x32c]
push eax
call dword 0x5b40
test eax,eax
jnz 0xb26d
push dword 0x105
lea eax,[ebp-0x212]
push eax
mov eax,[0x46b7f4]
push eax
call dword 0x5b40
mov eax,ebx
call dword 0xb1f4
mov [ebp-0x8],eax
jmp short 0xb276
sub ebx,[ebp-0x32c]
mov [ebp-0x8],ebx
lea eax,[ebp-0x212]
mov dl,0x5c
call dword 0xc354
mov edx,eax
inc edx
lea eax,[ebp-0x10d]
mov ecx,0x104
call dword 0x8458
mov ebx,0x40c380
mov edi,0x40c380
mov eax,esi
mov edx,[dword 0x407858]
call dword 0x2d7c
test al,al
jz 0xb2d2
mov eax,[esi+0x4]
call dword 0x3eac
mov ebx,eax
mov eax,ebx
call dword 0x83cc
test eax,eax
jz 0xb2d2
cmp byte [ebx+eax-0x1],0x2e
jz 0xb2d2
mov edi,0x40c384
push dword 0x100
lea eax,[ebp-0x312]
push eax
mov eax,[0x468e70]
mov eax,[eax+0x4]
push eax
mov eax,[0x46b7f4]
call dword 0x4c74
push eax
call dword 0x61d0
lea edx,[ebp-0x458]
mov eax,[esi]
call dword 0x2ad0
lea eax,[ebp-0x458]
mov [ebp-0x358],eax
mov byte [ebp-0x354],0x4
lea eax,[ebp-0x10d]
mov [ebp-0x350],eax
mov byte [ebp-0x34c],0x6
mov eax,[ebp-0x8]
mov [ebp-0x348],eax
mov byte [ebp-0x344],0x5
mov [ebp-0x340],ebx
mov byte [ebp-0x33c],0x6
mov [ebp-0x338],edi
mov byte [ebp-0x334],0x6
lea eax,[ebp-0x358]
push eax
push byte +0x4
lea ecx,[ebp-0x312]
mov edx,[ebp+0x8]
mov eax,[ebp-0x4]
call dword 0x8ae4
mov eax,[ebp-0x4]
call dword 0x83cc
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret 0x4
add [eax],al
add [eax],al
add [esi],ch
add [eax],al
add [ecx-0x4433c],al
jmp dword far [eax+0x0]
add al,0x0
add [ebp-0x17b7dbb4],cl
fs
db 0xfe
db 0xff
jmp dword [ecx+0x468d98]
cmp byte [eax],0x0
jz 0xb404
mov eax,[0x468bb4]
call dword 0x23b8
call dword 0x1fbc
lea eax,[esp+0x44]
push eax
lea eax,[esp+0x48]
push eax
call dword 0x5e90
push byte +0x0
lea eax,[esp+0x4]
push eax
lea eax,[esp+0x4c]
call dword 0x83cc
push eax
lea eax,[esp+0x50]
push eax
push byte -0xc
call dword 0x5b58
push eax
call dword 0x5c20
push byte +0x0
lea eax,[esp+0x4]
push eax
push byte +0x2
push dword 0x40c44c
push byte -0xc
call dword 0x5b58
push eax
call dword 0x5c20
jmp short 0xb43a
push byte +0x40
lea eax,[esp+0x8]
push eax
mov eax,[0x468b60]
mov eax,[eax+0x4]
push eax
mov eax,[0x46b7f4]
call dword 0x4c74
push eax
call dword 0x61d0
push dword 0x2010
lea eax,[esp+0x8]
push eax
lea eax,[esp+0x4c]
push eax
push byte +0x0
call dword 0x61e8
add esp,0x444
ret
add [eax],al
add bh,bh
db 0xff
db 0xff
inc dword [edx]
add [eax],al
add [dword 0x5300000a],cl
push esi
push edi
test dl,dl
jz 0xb45f
add esp,byte -0x10
call dword 0x2f14
mov esi,ecx
mov ebx,edx
mov edi,eax
lea eax,[edi+0x4]
mov edx,esi
call dword 0x3a70
mov eax,edi
test bl,bl
jz 0xb484
call dword 0x2f6c
pop dword [dword fs:0x0]
add esp,byte +0xc
mov eax,edi
pop edi
pop esi
pop ebx
ret
mov eax,eax
push ebp
mov ebp,esp
push byte +0x0
push ebx
push esi
push edi
test dl,dl
jz 0xb4a0
add esp,byte -0x10
call dword 0x2f14
mov esi,ecx
mov ebx,edx
mov edi,eax
xor eax,eax
push ebp
push dword 0x40c4e6
push dword [fs:eax]
mov [fs:eax],esp
lea eax,[ebp-0x4]
push eax
mov edx,[ebp+0xc]
mov ecx,[ebp+0x8]
mov eax,esi
call dword 0x8b24
mov edx,[ebp-0x4]
lea eax,[edi+0x4]
call dword 0x3a70
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x40c4ed
lea eax,[ebp-0x4]
call dword 0x3a1c
ret
jmp dword 0x3384
jmp short 0xb4dd
mov eax,edi
test bl,bl
jz 0xb502
call dword 0x2f6c
pop dword [dword fs:0x0]
add esp,byte +0xc
mov eax,edi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
ret 0x8
push ebx
push esi
push edi
test dl,dl
jz 0xb51b
add esp,byte -0x10
call dword 0x2f14
mov esi,ecx
mov ebx,edx
mov edi,eax
lea edx,[edi+0x4]
mov eax,esi
call dword 0x5750
mov eax,edi
test bl,bl
jz 0xb540
call dword 0x2f6c
pop dword [dword fs:0x0]
add esp,byte +0xc
mov eax,edi
pop edi
pop esi
pop ebx
ret
mov eax,eax
push ebp
mov ebp,esp
push byte +0x0
push byte +0x0
push ebx
push esi
push edi
test dl,dl
jz 0xb55e
add esp,byte -0x10
call dword 0x2f14
mov esi,ecx
mov ebx,edx
mov edi,eax
xor eax,eax
push ebp
push dword 0x40c5b4
push dword [fs:eax]
mov [fs:eax],esp
lea eax,[ebp-0x4]
push eax
lea edx,[ebp-0x8]
mov eax,esi
call dword 0x5750
mov eax,[ebp-0x8]
mov edx,[ebp+0xc]
mov ecx,[ebp+0x8]
call dword 0x8b24
mov edx,[ebp-0x4]
lea eax,[edi+0x4]
call dword 0x3a70
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x40c5bb
lea eax,[ebp-0x8]
mov edx,0x2
call dword 0x3a40
ret
jmp dword 0x3384
jmp short 0xb5a6
mov eax,edi
test bl,bl
jz 0xb5d0
call dword 0x2f6c
pop dword [dword fs:0x0]
add esp,byte +0xc
mov eax,edi
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
ret 0x8
nop
cmp byte [eax+0xc],0x0
jz 0xb5e7
call dword 0x2ba4
ret
in al,dx
lds eax,[eax+0x0]
push cs
or [ebp+eax*2+0x72],edx
jc 0xb662
jc 0xb647
arpl [gs:eax],cx
add [eax],al
add [ecx],al
add [eax],al
add [eax+edx+0x40040],dl
add [eax],al
nop
push ebx
push esi
add esp,byte -0x8
xor ebx,ebx
call dword 0x2030
mov esi,eax
jmp short 0xb619
inc ebx
cmp ebx,byte +0x6
jg 0xb627
cmp esi,[ebx*8+0x46790c]
jnz 0xb618
cmp ebx,byte +0x6
jg 0xb641
mov ecx,[ebx*8+0x467910]
mov dl,0x1
mov eax,[0x4079cc]
call dword 0xb450
jmp short 0xb65e
mov [esp],esi
mov byte [esp+0x4],0x0
push esp
push byte +0x0
mov ecx,[dword 0x468b5c]
mov dl,0x1
mov eax,[0x4079cc]
call dword 0xb548
mov [eax+0xc],esi
pop ecx
pop edx
pop esi
pop ebx
ret
mov eax,eax
insb
mov byte [eax+0x0],0xe
or dl,[ebp+eax*2+0x78]
arpl [ebp+0x70],sp
jz 0xb6c8
arpl [gs:eax],cx
add [eax],al
add [ecx],al
add [eax],al
add [eax+edx+0x40040],dl
add [eax],al
push ebx
mov ebx,edx
mov edx,eax
dec dl
jz 0xb69d
dec dl
jz 0xb6a5
dec edx
sub dl,0x16
jc 0xb6ad
jmp short 0xb6c7
mov edx,[dword 0x46b918]
jmp short 0xb6ce
mov edx,[dword 0x46b91c]
jmp short 0xb6ce
movzx eax,al
lea eax,[eax*8+0x46792c]
mov ecx,[eax+0x4]
mov eax,[eax]
mov dl,0x1
call dword 0xb450
mov edx,eax
jmp short 0xb6ce
call dword 0xb608
mov edx,eax
push ebx
mov eax,edx
jmp dword 0x3464
pop ebx
ret
push ebp
mov ebp,esp
add esp,byte -0x20
push ebx
push esi
push edi
xor ebx,ebx
mov [ebp-0x20],ebx
mov [ebp-0x4],ebx
mov edi,ecx
mov esi,edx
mov ebx,eax
xor eax,eax
push ebp
push dword 0x40c774
push dword [fs:eax]
mov [fs:eax],esp
test ebx,ebx
jz 0xb70d
lea eax,[ebp-0x4]
mov edx,ebx
call dword 0x3ab4
jmp short 0xb71a
lea edx,[ebp-0x4]
mov eax,[0x468d6c]
call dword 0x5750
mov eax,[ebp-0x4]
mov [ebp-0x1c],eax
mov byte [ebp-0x18],0xb
mov [ebp-0x14],esi
mov byte [ebp-0x10],0xb
mov [ebp-0xc],edi
mov byte [ebp-0x8],0x0
lea eax,[ebp-0x1c]
push eax
push byte +0x2
lea edx,[ebp-0x20]
mov eax,[0x468dd8]
call dword 0x5750
mov ecx,[ebp-0x20]
mov dl,0x1
mov eax,[0x4080d4]
call dword 0xb48c
mov ebx,eax
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x40c77b
lea eax,[ebp-0x20]
call dword 0x3a1c
lea eax,[ebp-0x4]
call dword 0x3a1c
ret
jmp dword 0x3384
jmp short 0xb763
mov eax,ebx
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret
mov esp,ecx
mov [esp],edx
mov ebp,[ebp+0x0]
jmp dword 0x3464
ret
mov eax,eax
push ebp
mov ebp,esp
call dword 0xb6d8
lea ecx,[ebp+0x8]
add ecx,byte +0x4
mov edx,[ebp+0x8]
call dword 0xb784
pop ebp
ret 0x4
mov eax,eax
mov ecx,[dword 0x468b80]
mov dl,0x1
mov eax,[0x408134]
call dword 0xb50c
call dword 0x3464
ret
mov eax,[eax]
cmp eax,0xc0000092
jg 0xb7fd
jz 0xb82c
cmp eax,0xc000008e
jg 0xb7ef
jz 0xb82f
sub eax,0xc0000005
jz 0xb838
sub eax,0x87
jz 0xb826
dec eax
jz 0xb835
jmp short 0xb844
add eax,0x3fffff71
sub eax,byte +0x2
jc 0xb82c
jz 0xb832
jmp short 0xb844
cmp eax,0xc0000096
jg 0xb815
jz 0xb83b
sub eax,0xc0000093
jz 0xb835
dec eax
jz 0xb823
dec eax
jz 0xb829
jmp short 0xb844
sub eax,0xc00000fd
jz 0xb841
sub eax,byte +0x3d
jz 0xb83e
jmp short 0xb844
mov al,0x3
ret
mov al,0x4
ret
mov al,0x5
ret
mov al,0x6
ret
mov al,0x7
ret
mov al,0x8
ret
mov al,0x9
ret
mov al,0xb
ret
mov al,0xc
ret
mov al,0xd
ret
mov al,0xe
ret
mov al,0x16
ret
nop
push ebx
mov ebx,eax
mov eax,ebx
call dword 0xb7c8
movzx eax,al
mov eax,[eax*8+0x46792c]
pop ebx
ret
mov eax,eax
push ebp
mov ebp,esp
add esp,0xfffffe90
push ebx
push esi
xor eax,eax
mov [ebp-0x170],eax
mov [ebp-0x14c],eax
mov [ebp-0x154],eax
mov [ebp-0x150],eax
mov [ebp-0x4],eax
xor eax,eax
push ebp
push dword 0x40ca1b
push dword [fs:eax]
mov [fs:eax],esp
mov eax,[ebp+0x8]
mov ebx,[eax-0x4]
cmp dword [ebx+0x14],byte +0x0
jnz 0xb8b1
lea edx,[ebp-0x4]
mov eax,[0x468eb8]
call dword 0x5750
jmp short 0xb8be
lea edx,[ebp-0x4]
mov eax,[0x468d3c]
call dword 0x5750
mov esi,[ebx+0x18]
push byte +0x1c
lea eax,[ebp-0x20]
push eax
mov eax,[ebx+0xc]
push eax
call dword 0x5c10
cmp dword [ebp-0x10],0x1000
jnz dword 0xb990
push dword 0x105
lea eax,[ebp-0x125]
push eax
mov eax,[ebp-0x1c]
push eax
call dword 0x5b40
test eax,eax
jz dword 0xb990
mov eax,[ebx+0xc]
mov [ebp-0x148],eax
mov byte [ebp-0x144],0x5
lea eax,[ebp-0x150]
lea edx,[ebp-0x125]
mov ecx,0x105
call dword 0x3c8c
mov eax,[ebp-0x150]
lea edx,[ebp-0x14c]
call dword 0x8280
mov eax,[ebp-0x14c]
mov [ebp-0x140],eax
mov byte [ebp-0x13c],0xb
mov eax,[ebp-0x4]
mov [ebp-0x138],eax
mov byte [ebp-0x134],0xb
mov [ebp-0x130],esi
mov byte [ebp-0x12c],0x5
lea eax,[ebp-0x148]
push eax
push byte +0x3
lea edx,[ebp-0x154]
mov eax,[0x468db0]
call dword 0x5750
mov ecx,[ebp-0x154]
mov dl,0x1
mov eax,[0x407f0c]
call dword 0xb48c
mov ebx,eax
jmp short 0xb9ea
mov eax,[ebx+0xc]
mov [ebp-0x16c],eax
mov byte [ebp-0x168],0x5
mov eax,[ebp-0x4]
mov [ebp-0x164],eax
mov byte [ebp-0x160],0xb
mov [ebp-0x15c],esi
mov byte [ebp-0x158],0x5
lea eax,[ebp-0x16c]
push eax
push byte +0x2
lea edx,[ebp-0x170]
mov eax,[0x468d48]
call dword 0x5750
mov ecx,[ebp-0x170]
mov dl,0x1
mov eax,[0x407f0c]
call dword 0xb48c
mov ebx,eax
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x40ca22
lea eax,[ebp-0x170]
call dword 0x3a1c
lea eax,[ebp-0x154]
mov edx,0x3
call dword 0x3a40
lea eax,[ebp-0x4]
call dword 0x3a1c
ret
jmp dword 0x3384
jmp short 0xb9f7
mov eax,ebx
pop esi
pop ebx
mov esp,ebp
pop ebp
ret
mov eax,eax
push ebp
mov ebp,esp
add esp,byte -0x10
push ebx
xor edx,edx
mov [ebp-0x10],edx
mov [ebp-0x4],eax
xor eax,eax
push ebp
push dword 0x40cae5
push dword [fs:eax]
mov [fs:eax],esp
mov eax,[ebp-0x4]
call dword 0xb7c8
movzx eax,al
mov edx,eax
add edx,byte -0x3
sub edx,byte +0x8
jc 0xba66
jz 0xba7d
dec edx
sub edx,byte +0xa
jnc 0xba88
lea eax,[eax*8+0x46792c]
mov ecx,[eax+0x4]
mov eax,[eax]
mov dl,0x1
call dword 0xb450
mov ebx,eax
jmp short 0xbab8
push ebp
call dword 0xb860
pop ecx
mov ebx,eax
jmp short 0xbab8
mov eax,[ebp-0x4]
mov eax,[eax]
mov [ebp-0xc],eax
mov byte [ebp-0x8],0x0
lea eax,[ebp-0xc]
push eax
push byte +0x0
lea edx,[ebp-0x10]
mov eax,[0x468ae0]
call dword 0x5750
mov ecx,[ebp-0x10]
mov dl,0x1
mov eax,[0x407a7c]
call dword 0xb48c
mov ebx,eax
mov eax,ebx
mov edx,[dword 0x407a24]
call dword 0x2d7c
test al,al
jz 0xbacf
mov eax,[ebp-0x4]
mov [ebx+0xc],eax
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x40caec
lea eax,[ebp-0x10]
call dword 0x3a1c
ret
jmp dword 0x3384
jmp short 0xbadc
mov eax,ebx
pop ebx
mov esp,ebp
pop ebp
ret
nop
call dword 0xb388
mov eax,0x1
call dword 0x3a04
ret
mov ecx,[dword 0x468b64]
mov dl,0x1
mov eax,[0x407970]
call dword 0xb50c
mov [0x46b918],eax
mov ecx,[dword 0x468d00]
mov dl,0x1
mov eax,[0x407df8]
call dword 0xb50c
mov [0x46b91c],eax
mov eax,[0x468af4]
mov dword [eax],0x40c688
mov eax,[0x468be4]
mov dword [eax],0x40caf4
mov eax,[0x468b50]
mov edx,[dword 0x407858]
mov [eax],edx
mov eax,[0x468bc8]
mov dword [eax],0x40c848
mov eax,[0x468bec]
mov dword [eax],0x40ca2c
mov eax,0x40c794
mov edx,[dword 0x468d24]
mov [edx],eax
mov eax,0x40c7b0
mov edx,[dword 0x468adc]
mov [edx],eax
ret
mov eax,eax
cmp dword [dword 0x46b918],byte +0x0
jz 0xbbab
mov eax,[0x46b918]
mov byte [eax+0xc],0x1
mov eax,[0x46b918]
mov edx,[eax]
call dword [edx-0x8]
xor eax,eax
mov [0x46b918],eax
cmp dword [dword 0x46b91c],byte +0x0
jz 0xbbce
mov eax,[0x46b91c]
mov byte [eax+0xc],0x1
mov eax,[0x46b91c]
call dword 0x2bf0
xor eax,eax
mov [0x46b91c],eax
mov eax,[0x468af4]
xor edx,edx
mov [eax],edx
mov eax,[0x468be4]
xor edx,edx
mov [eax],edx
mov eax,[0x468b50]
xor edx,edx
mov [eax],edx
mov eax,[0x468bc8]
xor edx,edx
mov [eax],edx
mov eax,[0x468bec]
xor edx,edx
mov [eax],edx
mov eax,[0x468d24]
xor edx,edx
mov [eax],edx
call dword 0x1ee4
test eax,eax
jz 0xbc1e
call dword 0x1f04
push eax
call dword 0x1ee4
pop edx
call dword 0xbaf4
ret
nop
add esp,0xffffff6c
mov dword [esp],0x94
push esp
call dword 0x5b78
test eax,eax
jz 0xbc87
mov eax,[esp+0x10]
mov [0x4677b0],eax
mov eax,[esp+0x4]
mov [0x4677b4],eax
mov eax,[esp+0x8]
mov [0x4677b8],eax
cmp dword [dword 0x4677b0],byte +0x1
jnz 0xbc6b
mov eax,[esp+0xc]
and eax,0xffff
mov [0x4677bc],eax
jmp short 0xbc74
mov eax,[esp+0xc]
mov [0x4677bc],eax
mov eax,0x4677c0
lea edx,[esp+0x14]
mov ecx,0x80
call dword 0x3c8c
add esp,0x94
ret
mov eax,eax
cmp eax,[dword 0x4677b4]
jl 0xbcab
cmp eax,[dword 0x4677b4]
jnz 0xbca8
cmp edx,[dword 0x4677b8]
jng 0xbcab
xor eax,eax
ret
mov al,0x1
ret
mov eax,eax
push ebp
mov ebp,esp
add esp,byte -0x18
push ebx
xor edx,edx
mov [ebp-0x4],edx
mov ebx,eax
xor eax,eax
push ebp
push dword 0x40cd86
push dword [fs:eax]
mov [fs:eax],esp
mov dword [ebp-0x8],0xffffffff
lea eax,[ebp-0x4]
mov edx,ebx
call dword 0x3ab4
lea eax,[ebp-0x4]
call dword 0x3f04
lea eax,[ebp-0xc]
push eax
mov eax,[ebp-0x4]
call dword 0x3eac
push eax
call dword 0x5c38
mov ebx,eax
test ebx,ebx
jz 0xbd70
mov eax,ebx
call dword 0x1e60
mov [ebp-0x10],eax
xor eax,eax
push ebp
push dword 0x40cd69
push dword [fs:eax]
mov [fs:eax],esp
mov eax,[ebp-0x10]
push eax
push ebx
mov eax,[ebp-0xc]
push eax
mov eax,[ebp-0x4]
call dword 0x3eac
push eax
call dword 0x5c30
test eax,eax
jz 0xbd53
lea eax,[ebp-0x18]
push eax
lea eax,[ebp-0x14]
push eax
push dword 0x40cd98
mov eax,[ebp-0x10]
push eax
call dword 0x5c40
test eax,eax
jz 0xbd53
mov eax,[ebp-0x14]
mov eax,[eax+0x8]
mov [ebp-0x8],eax
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x40cd70
mov eax,[ebp-0x10]
call dword 0x1e7c
ret
jmp dword 0x3384
jmp short 0xbd60
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x40cd8d
lea eax,[ebp-0x4]
call dword 0x3a1c
ret
jmp dword 0x3384
jmp short 0xbd7d
mov eax,[ebp-0x8]
pop ebx
mov esp,ebp
pop ebp
ret
add [eax],al
add [eax+eax+0x0],bl
add [esi+0x57],dl
mov edi,edx
xor edx,edx
test eax,eax
jz 0xbe08
cmp byte [eax+edi],0x0
jz 0xbe08
test edi,edi
jnz 0xbdc3
movzx eax,byte [eax]
movzx eax,al
bt [dword 0x4677f8],eax
jnc 0xbe08
mov dl,0x1
jmp short 0xbe08
mov esi,edi
dec esi
jmp short 0xbdc9
dec esi
test esi,esi
jl 0xbddd
movzx ecx,byte [eax+esi]
movzx ecx,cl
bt [dword 0x4677f8],ecx
jc 0xbdc8
mov ecx,edi
sub ecx,esi
and ecx,0x80000001
jns 0xbdee
dec ecx
or ecx,byte -0x2
inc ecx
test ecx,ecx
jnz 0xbdf6
mov dl,0x2
jmp short 0xbe08
movzx eax,byte [eax+edi]
movzx eax,al
bt [dword 0x4677f8],eax
jnc 0xbe08
mov dl,0x1
mov eax,edx
pop edi
pop esi
ret
lea eax,[eax+0x0]
push ebx
push esi
mov esi,edx
mov ebx,eax
xor eax,eax
cmp byte [dword 0x46b8d0],0x0
jz 0xbe30
mov eax,ebx
call dword 0x3eac
mov edx,esi
dec edx
call dword 0xbd9c
pop esi
pop ebx
ret
nop
xor ecx,ecx
cmp byte [dword 0x46b8d0],0x0
jz 0xbe46
call dword 0xbd9c
mov ecx,eax
mov eax,ecx
ret
lea eax,[eax+0x0]
push ebx
mov ebx,eax
mov ecx,ebx
test ecx,ecx
jz 0xbe5a
sub ecx,byte +0x4
mov ecx,[ecx]
cmp edx,ecx
jng 0xbe69
mov edx,ebx
test edx,edx
jz 0xbe69
sub edx,byte +0x4
mov edx,[edx]
call dword 0xbe70
pop ebx
ret
push ebx
push esi
push edi
push ebp
mov ebp,edx
mov edi,eax
xor esi,esi
test ebp,ebp
jg 0xbe82
mov al,0x1
jmp short 0xbe92
mov eax,edi
test eax,eax
jz 0xbe8d
sub eax,byte +0x4
mov eax,[eax]
cmp eax,ebp
setl al
test al,al
jnz 0xbed0
mov esi,ebp
cmp byte [dword 0x46b8d0],0x0
jz 0xbed0
mov ebx,0x1
xor esi,esi
cmp ebp,ebx
jl 0xbed0
movzx eax,byte [edi+ebx-0x1]
movzx eax,al
bt [dword 0x4677f8],eax
jnc 0xbeca
mov edx,ebx
mov eax,edi
call dword 0xc0bc
mov ebx,eax
jmp short 0xbecb
inc ebx
inc esi
cmp ebp,ebx
jnl 0xbeac
mov eax,esi
pop ebp
pop edi
pop esi
pop ebx
ret
nop
push ebp
mov ebp,esp
add esp,byte -0xc
push ebx
push esi
push edi
mov [ebp-0x8],ecx
mov [ebp-0x4],edx
mov edi,eax
mov eax,edi
test eax,eax
jz 0xbef4
sub eax,byte +0x4
mov eax,[eax]
mov [ebp-0xc],eax
mov esi,0x1
mov ebx,0x1
jmp short 0xbf23
inc esi
movzx eax,byte [edi+ebx-0x1]
movzx eax,al
bt [dword 0x4677f8],eax
jnc 0xbf22
mov edx,ebx
mov eax,edi
call dword 0xc0bc
mov ebx,eax
jmp short 0xbf23
inc ebx
cmp ebx,[ebp-0xc]
jnl 0xbf2d
cmp esi,[ebp-0x4]
jl 0xbf03
cmp esi,[ebp-0x4]
jnz 0xbf54
cmp ebx,[ebp-0xc]
jnl 0xbf54
movzx eax,byte [edi+ebx-0x1]
movzx eax,al
bt [dword 0x4677f8],eax
jnc 0xbf54
mov edx,ebx
mov eax,edi
call dword 0xc0bc
dec eax
mov ebx,eax
mov eax,[ebp-0x8]
mov [eax],esi
mov eax,[ebp+0x8]
mov [eax],ebx
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret 0x4
nop
push ebx
push esi
push edi
add esp,byte -0x8
mov ebx,edx
mov esi,eax
xor eax,eax
mov [esp],eax
test ebx,ebx
jg 0xbf7f
mov al,0x1
jmp short 0xbf8f
mov eax,esi
test eax,eax
jz 0xbf8a
sub eax,byte +0x4
mov eax,[eax]
cmp eax,ebx
setl al
test al,al
jnz 0xbfe0
cmp ebx,byte +0x1
jng 0xbfdd
cmp byte [dword 0x46b8d0],0x0
jz 0xbfdd
push esp
lea ecx,[esp+0x8]
mov edi,ebx
dec edi
mov edx,edi
mov eax,esi
call dword 0xbed8
cmp edi,[esp+0x4]
jng 0xbfbc
mov al,0x1
jmp short 0xbfcd
mov eax,esi
test eax,eax
jz 0xbfc7
sub eax,byte +0x4
mov eax,[eax]
cmp eax,[esp]
setng al
test al,al
jz 0xbfd8
xor eax,eax
mov [esp],eax
jmp short 0xbfe0
inc dword [esp]
jmp short 0xbfe0
mov [esp],ebx
mov eax,[esp]
pop ecx
pop edx
pop edi
pop esi
pop ebx
ret
lea eax,[eax+0x0]
push ebx
push esi
add esp,byte -0x8
mov ebx,eax
xor eax,eax
mov [esp],eax
test edx,edx
jng 0xc052
mov esi,ebx
mov eax,esi
test eax,eax
jz 0xc009
sub eax,byte +0x4
mov eax,[eax]
cmp eax,edx
jnl 0xc01a
mov eax,esi
test eax,eax
jz 0xc018
sub eax,byte +0x4
mov eax,[eax]
mov edx,eax
cmp byte [dword 0x46b8d0],0x0
jz 0xc04f
push esp
lea ecx,[esp+0x8]
mov eax,ebx
call dword 0xbed8
mov eax,esi
test eax,eax
jz 0xc03a
sub eax,byte +0x4
mov eax,[eax]
cmp eax,[esp]
jnl 0xc052
mov eax,esi
test eax,eax
jz 0xc04a
sub eax,byte +0x4
mov eax,[eax]
mov [esp],eax
jmp short 0xc052
mov [esp],edx
mov eax,[esp]
pop ecx
pop edx
pop esi
pop ebx
ret
mov eax,eax
push ebx
mov ebx,eax
cmp byte [dword 0x46b8d0],0x0
jz 0xc072
push ebx
call dword 0x5e88
sub eax,ebx
pop ebx
ret
mov eax,0x1
pop ebx
ret
lea eax,[eax+0x0]
push eax
call dword 0x5e88
ret
nop
push ebx
push esi
mov esi,edx
mov ebx,eax
mov eax,0x1
cmp byte [dword 0x46b8d0],0x0
jz 0xc0b8
movzx edx,byte [ebx+esi-0x1]
movzx edx,dl
bt [dword 0x4677f8],edx
jnc 0xc0b8
mov eax,ebx
call dword 0x3eac
add eax,esi
dec eax
call dword 0xc05c
pop esi
pop ebx
ret
nop
push ebx
push esi
mov ebx,edx
mov esi,eax
lea eax,[ebx+0x1]
cmp byte [dword 0x46b8d0],0x0
jz 0xc0f0
movzx edx,byte [esi+ebx-0x1]
movzx edx,dl
bt [dword 0x4677f8],edx
jnc 0xc0f0
mov eax,esi
call dword 0x3eac
add eax,ebx
dec eax
call dword 0xc05c
add eax,ebx
pop esi
pop ebx
ret
nop
push ebx
push esi
mov ebx,edx
mov esi,eax
test ebx,ebx
jng 0xc110
mov eax,esi
test eax,eax
jz 0xc109
sub eax,byte +0x4
mov eax,[eax]
cmp eax,ebx
setnl al
jmp short 0xc112
xor eax,eax
test al,al
jz 0xc120
cmp byte [esi+ebx-0x1],0x5c
setz al
jmp short 0xc122
xor eax,eax
test al,al
jz 0xc137
mov edx,ebx
mov eax,esi
call dword 0xbe10
test al,al
setz al
pop esi
pop ebx
ret
xor eax,eax
pop esi
pop ebx
ret
push ebx
push esi
push edi
push ebp
mov edi,ecx
mov esi,edx
mov ebp,eax
xor ebx,ebx
test edi,edi
jg 0xc150
mov al,0x1
jmp short 0xc160
mov eax,esi
test eax,eax
jz 0xc15b
sub eax,byte +0x4
mov eax,[eax]
cmp eax,edi
setl al
test al,al
jz 0xc168
mov al,0x1
jmp short 0xc176
mov edx,edi
mov eax,esi
call dword 0xbe10
test al,al
setnz al
test al,al
jnz 0xc190
mov eax,ebp
call dword 0x3eac
movzx edx,byte [esi+edi-0x1]
call dword 0x85cc
test eax,eax
setnz bl
mov eax,ebx
pop ebp
pop edi
pop esi
pop ebx
ret
nop
push ebx
push esi
push ecx
mov ebx,edx
mov esi,eax
mov eax,ebx
mov edx,esi
call dword 0x3a70
mov eax,[ebx]
mov [esp],eax
mov esi,[esp]
test esi,esi
jz 0xc1b9
sub esi,byte +0x4
mov esi,[esi]
mov eax,[ebx]
mov edx,esi
call dword 0xc0f4
test al,al
jz 0xc1e1
mov eax,[ebx]
mov [esp],eax
mov eax,[esp]
test eax,eax
jz 0xc1d7
sub eax,byte +0x4
mov eax,[eax]
mov edx,eax
dec edx
mov eax,ebx
call dword 0x413c
pop edx
pop esi
pop ebx
ret
lea eax,[eax+0x0]
push ebx
push esi
push edi
push ebp
mov esi,edx
mov ebx,eax
xor edi,edi
mov eax,ebx
call dword 0x3eac
push eax
mov eax,esi
call dword 0x3eac
mov ebp,eax
mov eax,ebp
pop edx
call dword 0xc2b4
mov ebx,eax
test ebx,ebx
jz 0xc216
mov edi,ebx
sub edi,ebp
inc edi
mov eax,edi
pop ebp
pop edi
pop esi
pop ebx
ret
lea eax,[eax+0x0]
push ebx
push esi
push edi
push ebp
mov edi,edx
mov esi,eax
cmp byte [dword 0x46b8d0],0x0
jz 0xc2a4
mov eax,esi
test eax,eax
jz 0xc23c
sub eax,byte +0x4
mov eax,[eax]
mov ebp,eax
mov eax,edi
mov edx,ebp
call dword 0x413c
mov ebx,0x1
cmp ebp,ebx
jl 0xc2ad
mov eax,edi
call dword 0x3f0c
movzx edx,byte [esi+ebx-0x1]
mov [eax+ebx-0x1],dl
movzx eax,byte [esi+ebx-0x1]
movzx eax,al
bt [dword 0x4677f8],eax
jnc 0xc284
inc ebx
mov eax,edi
call dword 0x3f0c
movzx edx,byte [esi+ebx-0x1]
mov [eax+ebx-0x1],dl
jmp short 0xc29d
mov eax,[edi]
movzx eax,byte [eax+ebx-0x1]
add al,0xbf
sub al,0x1a
jnc 0xc29d
mov eax,edi
call dword 0x3f0c
add byte [eax+ebx-0x1],0x20
inc ebx
cmp ebp,ebx
jnl 0xc250
jmp short 0xc2ad
mov edx,edi
mov eax,esi
call dword 0x787c
pop ebp
pop edi
pop esi
pop ebx
ret
mov eax,eax
push ebx
push esi
push edi
push ebp
add esp,byte -0x8
mov ebp,edx
mov esi,eax
xor ebx,ebx
test esi,esi
jz dword 0xc34a
cmp byte [esi],0x0
jz 0xc34a
test ebp,ebp
jz 0xc34a
cmp byte [ebp+0x0],0x0
jz 0xc34a
mov eax,esi
call dword 0x83cc
mov [esp],eax
mov eax,ebp
call dword 0x83cc
mov edi,eax
mov edx,ebp
mov eax,esi
call dword 0x85e0
mov ebx,eax
jmp short 0xc337
mov edx,ebx
sub edx,esi
mov eax,esi
call dword 0xbe34
mov [esp+0x4],al
cmp byte [esp+0x4],0x2
jz 0xc323
push edi
push ebp
push edi
push ebx
push byte +0x0
push dword 0x400
call dword 0x5a78
cmp eax,byte +0x2
jz 0xc34a
cmp byte [esp+0x4],0x1
jnz 0xc32b
inc ebx
inc ebx
mov edx,ebp
mov eax,ebx
call dword 0x85e0
mov ebx,eax
test ebx,ebx
jz 0xc348
mov eax,ebx
sub eax,esi
mov edx,[esp]
sub edx,eax
cmp edi,edx
jna 0xc2f8
xor ebx,ebx
mov eax,ebx
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
ret
nop
push ebx
push esi
push edi
mov ebx,edx
mov esi,eax
mov edx,ebx
mov eax,esi
call dword 0xc388
mov esi,eax
mov edi,esi
test bl,bl
jz 0xc382
test esi,esi
jz 0xc382
mov edi,esi
inc esi
mov edx,ebx
mov eax,esi
call dword 0xc388
mov esi,eax
test esi,esi
jnz 0xc370
mov eax,edi
pop edi
pop esi
pop ebx
ret
push ebx
push esi
push edi
mov ebx,edx
mov esi,eax
mov edx,ebx
mov eax,esi
call dword 0x85cc
mov edi,eax
test edi,edi
jz 0xc3c2
mov edx,edi
sub edx,esi
mov eax,esi
call dword 0xbe34
sub al,0x1
jc 0xc3c2
jz 0xc3b1
jmp short 0xc3b2
inc edi
inc edi
mov edx,ebx
mov eax,edi
call dword 0x85cc
mov edi,eax
test edi,edi
jnz 0xc39e
mov eax,edi
pop edi
pop esi
pop ebx
ret
push ebp
mov ebp,esp
push ecx
push ebx
push esi
push edi
mov edi,[ebp+0x8]
add edi,byte -0x14
push edi
push byte +0x0
call dword 0x5ae8
xor esi,esi
jmp short 0xc40b
movzx eax,byte [edi+esi+0x6]
movzx ebx,byte [edi+esi+0x7]
sub bl,al
jc 0xc408
inc ebx
mov [ebp-0x1],al
movzx eax,byte [ebp-0x1]
movzx eax,al
bts [dword 0x4677f8],eax
inc byte [ebp-0x1]
dec bl
jnz 0xc3f3
add esi,byte +0x2
cmp esi,byte +0xc
jnl 0xc41b
movzx eax,byte [edi+esi+0x6]
or al,[edi+esi+0x7]
jnz 0xc3e1
pop edi
pop esi
pop ebx
pop ecx
pop ebp
ret
lea eax,[eax+0x0]
push ebp
mov ebp,esp
add esp,byte -0x14
push ebx
push esi
push edi
mov esi,0x46b8c4
mov dword [esi],0x409
mov dword [esi+0x4],0x9
mov dword [esi+0x8],0x1
call dword 0x5b60
test eax,eax
jz 0xc451
mov [esi],eax
test ax,ax
jz 0xc46c
mov edx,eax
and dx,0x3ff
movzx edx,dx
mov [esi+0x4],edx
movzx eax,ax
shr eax,byte 0xa
mov [esi+0x8],eax
push esi
mov esi,0x40d4c8
mov edi,0x4677f8
mov ecx,0x8
rep movsd
pop esi
cmp dword [dword 0x4677b4],byte +0x4
jng 0xc497
cmp dword [dword 0x4677b0],byte +0x2
jnz 0xc497
mov byte [esi+0xd],0x1
jmp short 0xc4a6
push byte +0x4a
call dword 0x60d8
test eax,eax
setnz al
mov [esi+0xd],al
push byte +0x2a
call dword 0x60d8
test eax,eax
setnz bl
mov [esi+0xc],bl
test bl,bl
jz 0xc4c0
push ebp
call dword 0xc3c8
pop ecx
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [ebp-0x75],dl
in al,dx
mov ecx,0x8
push byte +0x0
push byte +0x0
dec ecx
jnz 0xc4f0
push ebx
xor eax,eax
push ebp
push dword 0x40d7b3
push dword [fs:eax]
mov [fs:eax],esp
call dword 0xc424
call dword 0xad3c
cmp byte [dword 0x46b8d0],0x0
jz 0xc51e
call dword 0xaf14
call dword 0x5b60
mov ebx,eax
lea eax,[ebp-0x10]
push eax
xor ecx,ecx
mov edx,0x14
mov eax,ebx
call dword 0xac88
mov edx,[ebp-0x10]
mov eax,0x46b804
call dword 0x3a70
lea eax,[ebp-0x14]
push eax
mov ecx,0x40d7c8
mov edx,0x1b
mov eax,ebx
call dword 0xac88
mov eax,[ebp-0x14]
xor edx,edx
call dword 0x7d74
mov [0x46b808],al
lea eax,[ebp-0x18]
push eax
mov ecx,0x40d7c8
mov edx,0x1c
mov eax,ebx
call dword 0xac88
mov eax,[ebp-0x18]
xor edx,edx
call dword 0x7d74
mov [0x46b809],al
mov cl,0x2c
mov edx,0xf
mov eax,ebx
call dword 0xacd4
mov [0x46b80a],al
mov cl,0x2e
mov edx,0xe
mov eax,ebx
call dword 0xacd4
mov [0x46b80b],al
lea eax,[ebp-0x1c]
push eax
mov ecx,0x40d7c8
mov edx,0x19
mov eax,ebx
call dword 0xac88
mov eax,[ebp-0x1c]
xor edx,edx
call dword 0x7d74
mov [0x46b80c],al
mov cl,0x2f
mov edx,0x1d
mov eax,ebx
call dword 0xacd4
mov [0x46b80d],al
lea eax,[ebp-0x24]
push eax
mov ecx,0x40d7d4
mov edx,0x1f
mov eax,ebx
call dword 0xac88
mov eax,[ebp-0x24]
lea edx,[ebp-0x20]
call dword 0xafc4
mov edx,[ebp-0x20]
mov eax,0x46b810
call dword 0x3a70
lea eax,[ebp-0x2c]
push eax
mov ecx,0x40d7e4
mov edx,0x20
mov eax,ebx
call dword 0xac88
mov eax,[ebp-0x2c]
lea edx,[ebp-0x28]
call dword 0xafc4
mov edx,[ebp-0x28]
mov eax,0x46b814
call dword 0x3a70
mov cl,0x3a
mov edx,0x1e
mov eax,ebx
call dword 0xacd4
mov [0x46b818],al
lea eax,[ebp-0x30]
push eax
mov ecx,0x40d7fc
mov edx,0x28
mov eax,ebx
call dword 0xac88
mov edx,[ebp-0x30]
mov eax,0x46b81c
call dword 0x3a70
lea eax,[ebp-0x34]
push eax
mov ecx,0x40d808
mov edx,0x29
mov eax,ebx
call dword 0xac88
mov edx,[ebp-0x34]
mov eax,0x46b820
call dword 0x3a70
lea eax,[ebp-0x8]
call dword 0x3a1c
lea eax,[ebp-0xc]
call dword 0x3a1c
lea eax,[ebp-0x38]
push eax
mov ecx,0x40d7c8
mov edx,0x25
mov eax,ebx
call dword 0xac88
mov eax,[ebp-0x38]
xor edx,edx
call dword 0x7d74
test eax,eax
jnz 0xc6dc
lea eax,[ebp-0x4]
mov edx,0x40d814
call dword 0x3ab4
jmp short 0xc6e9
lea eax,[ebp-0x4]
mov edx,0x40d820
call dword 0x3ab4
lea eax,[ebp-0x3c]
push eax
mov ecx,0x40d7c8
mov edx,0x23
mov eax,ebx
call dword 0xac88
mov eax,[ebp-0x3c]
xor edx,edx
call dword 0x7d74
test eax,eax
jnz 0xc74b
lea eax,[ebp-0x40]
push eax
mov ecx,0x40d7c8
mov edx,0x1005
mov eax,ebx
call dword 0xac88
mov eax,[ebp-0x40]
xor edx,edx
call dword 0x7d74
test eax,eax
jnz 0xc73e
lea eax,[ebp-0xc]
mov edx,0x40d82c
call dword 0x3ab4
jmp short 0xc74b
lea eax,[ebp-0x8]
mov edx,0x40d83c
call dword 0x3ab4
push dword [ebp-0x8]
push dword [ebp-0x4]
push dword 0x40d84c
push dword [ebp-0xc]
mov eax,0x46b824
mov edx,0x4
call dword 0x3db0
push dword [ebp-0x8]
push dword [ebp-0x4]
push dword 0x40d858
push dword [ebp-0xc]
mov eax,0x46b828
mov edx,0x4
call dword 0x3db0
mov cl,0x2c
mov edx,0xc
mov eax,ebx
call dword 0xacd4
mov [0x46b8d2],al
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x40d7ba
lea eax,[ebp-0x40]
mov edx,0x10
call dword 0x3a40
ret
jmp dword 0x3384
jmp short 0xc7a5
pop ebx
mov esp,ebp
pop ebp
ret
add bh,bh
db 0xff
db 0xff
inc dword [ecx]
add [eax],al
add [eax],dh
add [eax],al
add bh,bh
db 0xff
db 0xff
inc dword [esi]
add [eax],al
add [ebp+0x2f],ch
fs das
jns 0xc853
add [eax],al
db 0xff
db 0xff
db 0xff
dec dword [eax+eax]
add [eax],al
insd
insd
insd
insd
and [esp+ebp+0x20],ah
jns 0xc867
jns 0xc869
add [eax],al
add [eax],al
db 0xff
db 0xff
db 0xff
inc dword [edx]
add [eax],al
add [ecx+0x6d],ah
add [eax],al
db 0xff
db 0xff
db 0xff
inc dword [edx]
add [eax],al
add [eax+0x6d],dh
add [eax],al
db 0xff
db 0xff
db 0xff
inc dword [ecx]
add [eax],al
add [eax+0x0],ch
add [eax],al
db 0xff
db 0xff
db 0xff
inc dword [edx]
add [eax],al
add [eax+0x68],ch
add [eax],al
db 0xff
db 0xff
db 0xff
inc dword [dword 0x20000000]
inc ecx
dec ebp
push eax
dec ebp
add [eax],al
add bh,bh
db 0xff
db 0xff
inc dword [dword 0x41000000]
dec ebp
push eax
dec ebp
and [eax],al
add [eax],al
db 0xff
db 0xff
db 0xff
inc dword [ebx]
add [eax],al
add [edx],bh
insd
insd
add bh,bh
db 0xff
db 0xff
inc dword [esi]
add [eax],al
add [edx],bh
insd
insd
cmp dh,[ebx+0x73]
add [eax],al
push ebp
mov ebp,esp
push byte +0x0
push byte +0x0
push byte +0x0
push byte +0x0
push byte +0x0
push byte +0x0
push byte +0x0
push ebx
push esi
push edi
mov [ebp-0x14],ecx
mov [ebp-0x10],edx
mov ebx,eax
mov esi,[ebp+0x8]
xor eax,eax
push ebp
push dword 0x40d9a9
push dword [fs:eax]
mov [fs:eax],esp
test byte [ebp+0xc],0x2
jz 0xc8aa
lea edx,[ebp-0x4]
mov eax,ebx
call dword 0x7844
lea edx,[ebp-0x8]
mov eax,[ebp-0x10]
call dword 0x7844
jmp short 0xc8bf
lea eax,[ebp-0x4]
mov edx,ebx
call dword 0x3ab4
lea eax,[ebp-0x8]
mov edx,[ebp-0x10]
call dword 0x3ab4
lea eax,[ebp-0xc]
mov edx,ebx
call dword 0x3ab4
mov eax,esi
call dword 0x3a1c
jmp dword 0xc97c
mov edx,[ebp-0x4]
mov eax,[ebp-0x8]
call dword 0xc1e8
mov ebx,eax
test ebx,ebx
jnz 0xc8f5
mov eax,esi
mov edx,[ebp-0xc]
call dword 0x3ce8
jmp dword 0xc986
push dword [esi]
lea eax,[ebp-0x1c]
push eax
mov ecx,ebx
dec ecx
mov edx,0x1
mov eax,[ebp-0xc]
call dword 0x3f14
push dword [ebp-0x1c]
push dword [ebp-0x14]
mov eax,esi
mov edx,0x3
call dword 0x3db0
mov edi,[ebp-0x10]
test edi,edi
jz 0xc929
sub edi,byte +0x4
mov edi,[edi]
lea eax,[ebp-0xc]
push eax
lea edx,[edi+ebx]
mov ecx,0x7fffffff
mov eax,[ebp-0xc]
call dword 0x3f14
test byte [ebp+0xc],0x1
jnz 0xc94f
mov eax,esi
mov edx,[ebp-0xc]
call dword 0x3ce8
jmp short 0xc986
mov eax,[ebp-0x8]
mov [ebp-0x18],eax
cmp dword [ebp-0x18],byte +0x0
jz 0xc966
mov eax,[ebp-0x18]
sub eax,byte +0x4
mov eax,[eax]
mov [ebp-0x18],eax
lea eax,[ebp-0x4]
push eax
mov edx,[ebp-0x18]
add edx,ebx
mov ecx,0x7fffffff
mov eax,[ebp-0x4]
call dword 0x3f14
cmp dword [ebp-0x4],byte +0x0
jnz dword 0xc8d5
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x40d9b0
lea eax,[ebp-0x1c]
call dword 0x3a1c
lea eax,[ebp-0xc]
mov edx,0x3
call dword 0x3a40
ret
jmp dword 0x3384
jmp short 0xc993
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret 0x8
lea eax,[eax+0x0]
rcr cl,byte 0x40
add [ecx],dl
push cs
push esp
push ebp
outsb
imul esi,[eax+ecx*2+0x61],dword 0x72416873
jc 0xca30
jns 0xc9e9
add [eax],al
add [eax],al
add [eax],al
add bh,bh
db 0xff
db 0xff
inc dword [eax]
add [eax],al
add [eax],cl
push ebx
jns 0xca57
push ebp
jz 0xca50
insb
jnc 0xc977
inc eax
add al,dh
fld dword [eax+0x0]
push cs
or edx,[ebp+ecx*2+0x6f]
fs jnz 0xca64
gs dec ecx
outsb
outsw
or [eax],al
add [eax],al
add [eax],eax
add [eax],al
mov esp,0x40040d9
add [eax],al
add [ebp+0x53560040],cl
mov esi,eax
xor eax,eax
rol eax,byte 0x5
mov bl,[esi]
cmp bl,0x0
jz 0xca32
cmp bl,0x41
jl 0xca2d
cmp bl,0x5a
jg 0xca2d
or bl,0x20
xor al,bl
inc esi
jmp short 0xca16
pop ebx
pop esi
ret
ret
mov eax,eax
push ebx
push esi
push edi
push ebp
add esp,byte -0xc
mov edx,[dword 0x468dec]
mov edx,[edx]
test edx,edx
jz 0xca56
cmp eax,[edx+0x4]
jz 0xca56
mov edx,[edx]
test edx,edx
jnz 0xca4b
mov [esp],edx
cmp dword [esp],byte +0x0
jz dword 0xcb48
mov eax,[esp]
cmp dword [eax+0x14],byte +0x0
jz dword 0xcb48
mov eax,[esp]
mov ebx,[eax+0x14]
cmp byte [ebx],0x0
jz 0xca85
mov dword [esp+0x8],0x46b920
jmp short 0xca8d
mov dword [esp+0x8],0x46c914
mov eax,[ebx+0x4]
call dword 0x49d8
mov ebp,eax
test ebp,ebp
jl dword 0xcb33
inc ebp
xor esi,esi
lea edi,[esi+esi*2]
mov eax,[ebx+0x4]
cmp dword [eax+edi*8+0x4],byte +0x0
jz 0xcac3
mov eax,[ebx+0x4]
mov eax,[eax+edi*8]
lea edx,[esi+esi*2]
mov ecx,[ebx+0x4]
mov edx,[ecx+edx*8+0x4]
mov [edx],eax
jmp short 0xcb0f
mov eax,[ebx+0x4]
cmp dword [eax+edi*8+0xc],byte +0x0
jz 0xcb0f
lea eax,[esi+esi*2]
mov edx,[ebx+0x4]
mov eax,[edx+eax*8+0xc]
call dword 0xca10
mov ecx,0x3fd
xor edx,edx
div ecx
mov [esp+0x4],edx
mov eax,[esp+0x8]
mov edx,[esp+0x4]
mov eax,[eax+edx*4]
mov edx,[ebx+0x4]
lea edx,[edx+edi*8]
cmp eax,edx
jnz 0xcb0f
mov eax,[ebx+0x4]
mov eax,[eax+edi*8]
mov edx,[esp+0x8]
mov ecx,[esp+0x4]
mov [edx+ecx*4],eax
mov eax,[ebx+0x4]
cmp dword [eax+edi*8],byte +0x0
jz 0xcb2b
mov eax,[ebx+0x4]
mov eax,[eax+edi*8+0x4]
lea edx,[esi+esi*2]
mov ecx,[ebx+0x4]
mov edx,[ecx+edx*8]
mov [edx+0x4],eax
inc esi
dec ebp
jnz dword 0xcaa2
mov edx,[dword 0x40d9ec]
mov eax,ebx
call dword 0x4994
mov eax,[esp]
xor edx,edx
mov [eax+0x14],edx
add esp,byte +0xc
pop ebp
pop edi
pop esi
pop ebx
ret
jmp dword [dword 0x46ed1c]
mov eax,eax
call dword 0x5b28
call dword 0xcb64
ret
nop
push ebp
mov ebp,esp
add esp,byte -0x14
push ebx
xor edx,edx
mov [ebp-0x14],edx
mov ebx,eax
xor eax,eax
push ebp
push dword 0x40dbef
push dword [fs:eax]
mov [fs:eax],esp
test ebx,ebx
jz 0xcbbb
mov [ebp-0x10],ebx
mov byte [ebp-0xc],0x0
lea edx,[ebp-0x14]
mov eax,ebx
call dword 0xac3c
mov eax,[ebp-0x14]
mov [ebp-0x8],eax
mov byte [ebp-0x4],0xb
lea eax,[ebp-0x10]
push eax
push byte +0x1
mov ecx,[dword 0x468d5c]
mov dl,0x1
mov eax,[0x4081ec]
call dword 0xb548
mov edx,eax
jmp short 0xcbcf
mov ecx,[dword 0x468e4c]
mov dl,0x1
mov eax,[0x4081ec]
call dword 0xb50c
mov edx,eax
mov [edx+0xc],ebx
mov eax,edx
call dword 0x3464
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x40dbf6
lea eax,[ebp-0x14]
call dword 0x3a1c
ret
jmp dword 0x3384
jmp short 0xcbe6
pop ebx
mov esp,ebp
pop ebp
ret
nop
push ebx
mov ebx,eax
test ebx,ebx
jnz 0xcc08
call dword 0xcb58
mov eax,ebx
pop ebx
ret
push ebx
push esi
mov bl,0x1
mov esi,[dword 0x4679f4]
jmp short 0xcc1f
call dword [esi+0x4]
mov ebx,eax
mov esi,[esi]
test bl,bl
jz 0xcc27
test esi,esi
jnz 0xcc18
mov eax,ebx
pop esi
pop ebx
ret
push ebx
push esi
mov esi,0x4679f4
jmp short 0xcc47
mov ebx,[esi]
mov eax,[ebx]
mov [esi],eax
mov edx,0x8
mov eax,ebx
call dword 0x1e7c
cmp dword [esi],byte +0x0
jnz 0xcc35
pop esi
pop ebx
ret
nop
push ebx
push dword 0x40dc88
call dword 0x5b48
mov ebx,eax
test ebx,ebx
jz 0xcc71
push dword 0x40dc98
push ebx
call dword 0x5b50
mov [0x46781c],eax
cmp dword [dword 0x46781c],byte +0x0
jnz 0xcc84
mov eax,0x40933c
mov [0x46781c],eax
pop ebx
ret
add [eax],al
imul esp,[ebp+0x72],byte +0x6e
gs insb
xor esi,[edx]
fs insb
insb
add [eax],al
add [eax],al
inc edi
gs jz 0xcce0
imul esi,[ebx+0x6b],dword 0x65657246
push ebx
jo 0xcd07
arpl [ebp+0x45],sp
js 0xccec
add [edx+0x1],bh
xchg eax,edx
lock xadd [edx],eax
inc eax
ret
mov edx,0xffffffff
xchg eax,edx
lock xadd [edx],eax
dec eax
ret
xchg edx,[eax]
mov eax,edx
ret
lea eax,[eax+0x0]
xchg eax,edx
lock xadd [edx],eax
ret
mov eax,eax
push ebx
push esi
push edi
push ebp
push ecx
call dword 0x2fbc
mov [esp],dl
mov ebp,eax
xor edi,edi
mov ebx,[ebp+edi*4+0x4]
xor eax,eax
mov [ebp+edi*4+0x4],eax
test ebx,ebx
jz 0xcd02
mov esi,ebx
mov ebx,[ebx]
mov eax,esi
call dword 0x1e7c
test ebx,ebx
jnz 0xccf3
inc edi
cmp edi,byte +0x10
jnz 0xcce5
movzx edx,byte [esp]
and dl,0xfc
mov eax,ebp
call dword 0x2be0
cmp byte [esp],0x0
jng 0xcd23
mov eax,ebp
call dword 0x2f64
pop edx
pop ebp
pop edi
pop esi
pop ebx
ret
lea eax,[eax+0x0]
push ebp
mov ebp,esp
push ecx
call dword 0x5af8
mov [ebp-0x2],ax
movzx eax,byte [ebp-0x2]
xor al,[ebp-0x1]
and al,0xf
pop ecx
pop ebp
ret
lea eax,[eax+0x0]
push ebx
push esi
push edi
push ebp
push ecx
mov [esp],edx
mov edi,eax
mov eax,edi
call dword 0xcd2c
mov ebx,eax
call dword 0x5af8
mov esi,eax
movzx eax,bl
mov ebp,[edi+eax*4+0x4]
jmp short 0xcd6e
mov ebp,[ebp+0x0]
test ebp,ebp
jz 0xcd77
cmp esi,[ebp+0x4]
jnz 0xcd6b
test ebp,ebp
jnz 0xcdb2
mov eax,edi
call dword 0xcdd0
mov ebp,eax
test ebp,ebp
jnz 0xcdb2
mov eax,0x10
call dword 0x1e48
mov ebp,eax
mov [ebp+0x4],esi
mov dword [ebp+0x8],0x7fffffff
mov [ebp+0x0],ebp
movzx eax,bl
lea eax,[edi+eax*4+0x4]
mov edx,ebp
call dword 0xccc4
mov [ebp+0x0],eax
mov eax,[esp]
mov [eax],ebp
pop edx
pop ebp
pop edi
pop esi
pop ebx
ret
lea eax,[eax+0x0]
mov eax,[edx]
xor ecx,ecx
mov [eax+0x4],ecx
mov eax,[edx]
xor edx,edx
mov [eax+0x8],edx
ret
nop
push ebx
push esi
mov ebx,eax
mov eax,ebx
call dword 0xcd2c
movzx eax,al
mov ebx,[ebx+eax*4+0x4]
test ebx,ebx
jz 0xce0d
lea eax,[ebx+0x8]
mov edx,0x7fffffff
call dword 0xccc4
mov esi,eax
cmp esi,0x7fffffff
jz 0xce07
call dword 0x5af8
mov [ebx+0x4],eax
jmp short 0xce0d
mov ebx,[ebx]
test ebx,ebx
jnz 0xcde6
mov eax,ebx
pop esi
pop ebx
ret
mov eax,eax
push ebx
push esi
test dl,dl
jz 0xce22
add esp,byte -0x10
call dword 0x2f14
mov ebx,edx
mov esi,eax
xor edx,edx
mov eax,esi
call dword 0x2bc0
mov dword [esi+0xc],0xffff
push byte +0x0
push byte -0x1
push byte -0x1
push byte +0x0
call dword 0x5a88
mov [esi+0x10],eax
push byte +0x0
push byte +0x0
push byte +0x0
push byte +0x0
call dword 0x5a88
mov [esi+0x14],eax
mov dword [esi+0x18],0xffffffff
mov dl,0x1
mov eax,[0x4082f8]
call dword 0x2bc0
mov [esi+0x20],eax
mov eax,esi
test bl,bl
jz 0xce81
call dword 0x2f6c
pop dword [dword fs:0x0]
add esp,byte +0xc
mov eax,esi
pop esi
pop ebx
ret
mov eax,eax
push ebx
push esi
call dword 0x2fbc
mov ebx,edx
mov esi,eax
mov eax,esi
call dword 0xcf14
mov edx,ebx
and dl,0xfc
mov eax,esi
call dword 0x2be0
mov eax,[esi+0x10]
push eax
call dword 0x5a70
mov eax,[esi+0x14]
push eax
call dword 0x5a70
mov eax,[esi+0x20]
call dword 0x2bf0
test bl,bl
jng 0xcecb
mov eax,esi
call dword 0x2f64
pop esi
pop ebx
ret
mov eax,eax
mov eax,[eax+0x10]
push eax
call dword 0x5bd0
ret
mov eax,eax
mov eax,[eax+0x10]
push eax
call dword 0x5be8
ret
mov eax,eax
mov eax,[eax+0x14]
push eax
call dword 0x5be8
ret
mov eax,eax
mov edx,[eax+0x18]
push edx
mov eax,[eax+0x10]
push eax
call dword 0x5c18
ret
mov eax,eax
mov edx,[eax+0x18]
push edx
mov eax,[eax+0x14]
push eax
call dword 0x5c18
ret
mov eax,eax
push ebx
push esi
push edi
push ebp
add esp,byte -0x8
mov ebp,eax
mov bl,0x1
call dword 0x5af8
mov edi,eax
cmp edi,[ebp+0x24]
jz dword 0xcfb3
mov eax,ebp
call dword 0xced0
mov eax,[ebp+0x28]
mov [esp+0x4],eax
mov edx,esp
mov eax,[ebp+0x20]
call dword 0xcd48
mov eax,[esp]
cmp dword [eax+0xc],byte +0x0
seta bl
test bl,bl
jz 0xcf79
lea eax,[ebp+0xc]
call dword 0xccac
jmp short 0xcf79
lea eax,[ebp+0xc]
mov edx,0xffff
call dword 0xcccc
mov esi,eax
test esi,esi
jz 0xcf79
mov eax,ebp
call dword 0xcf04
lea eax,[ebp+0xc]
mov edx,0xffff0001
call dword 0xcccc
cmp eax,0xffff
jnz 0xcf5f
mov eax,ebp
call dword 0xced0
test bl,bl
jz 0xcfa0
lea eax,[ebp+0xc]
call dword 0xccb8
mov [ebp+0x24],edi
lea eax,[ebp+0x28]
call dword 0xccac
dec eax
cmp eax,[esp+0x4]
setz bl
inc dword [ebp+0x1c]
mov eax,ebx
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
ret
nop
push ebx
push ecx
mov ebx,eax
mov edx,esp
mov eax,[ebx+0x20]
call dword 0xcd48
dec dword [ebx+0x1c]
cmp dword [ebx+0x1c],byte +0x0
jnz 0xcff7
xor eax,eax
mov [ebx+0x24],eax
lea eax,[ebx+0xc]
mov edx,0xffff
call dword 0xcccc
mov eax,ebx
call dword 0xcee8
mov eax,ebx
call dword 0xcedc
mov eax,[esp]
cmp dword [eax+0xc],byte +0x0
jnz 0xd00a
mov edx,esp
mov eax,[ebx+0x20]
call dword 0xcdc0
pop edx
pop ebx
ret
lea eax,[eax+0x0]
push ebx
push esi
push edi
push ecx
mov edi,eax
mov edx,esp
mov eax,[edi+0x20]
call dword 0xcd48
mov eax,[esp]
inc dword [eax+0xc]
mov eax,[esp]
cmp dword [eax+0xc],byte +0x1
seta bl
call dword 0x5af8
cmp eax,[edi+0x24]
jz 0xd07a
test bl,bl
jnz 0xd07a
mov eax,edi
call dword 0xcef4
jmp short 0xd06e
lea eax,[edi+0xc]
call dword 0xccac
mov esi,eax
cmp esi,0xffff
jnz 0xd060
mov eax,edi
call dword 0xcee8
push byte +0x0
call dword 0xcb50
mov eax,edi
call dword 0xcef4
lea eax,[edi+0xc]
call dword 0xccb8
test eax,eax
jng 0xd047
pop edx
pop edi
pop esi
pop ebx
ret
nop
push ebx
push ecx
mov ebx,eax
mov edx,esp
mov eax,[ebx+0x20]
call dword 0xcd48
mov eax,[esp]
dec dword [eax+0xc]
mov eax,[esp]
cmp dword [eax+0xc],byte +0x0
jnz 0xd0e5
mov edx,esp
mov eax,[ebx+0x20]
call dword 0xcdc0
call dword 0x5af8
cmp eax,[ebx+0x24]
jz 0xd0e5
lea eax,[ebx+0xc]
call dword 0xccac
mov ecx,eax
cmp ecx,0xffff
jnz 0xd0cc
mov eax,ebx
call dword 0xcee8
jmp short 0xd0e5
test ecx,ecx
jg 0xd0e5
mov eax,ecx
mov ecx,0xffff
cdq
idiv ecx
test edx,edx
jnz 0xd0e5
mov eax,ebx
call dword 0xcee8
pop edx
pop ebx
ret
mov edx,[eax]
xor ecx,ecx
mov [eax],ecx
mov eax,edx
call dword 0x2bf0
ret
mov eax,eax
push ebx
push esi
push edi
mov edi,ecx
mov esi,edx
mov ebx,eax
test ebx,ebx
jz 0xd110
push edi
push esi
push ebx
mov eax,[ebx]
call dword [eax]
test eax,eax
jz 0xd114
xor eax,eax
jmp short 0xd116
mov al,0x1
pop edi
pop esi
pop ebx
ret
mov eax,eax
push ebp
mov ebp,esp
push byte +0x0
push ebx
push esi
push edi
mov edi,ecx
mov esi,edx
mov ebx,eax
xor eax,eax
push ebp
push dword 0x40e193
push dword [fs:eax]
mov [fs:eax],esp
test ebx,ebx
jz 0xd175
lea eax,[ebp-0x4]
call dword 0x5270
mov ecx,eax
mov edx,0x40e1a4
mov eax,ebx
call dword 0x2ca4
test al,al
jz 0xd166
mov ecx,edi
mov edx,esi
mov eax,[ebp-0x4]
call dword 0xd0f8
test al,al
jnz 0xd179
mov ecx,edi
mov edx,esi
mov eax,ebx
call dword 0x2ca4
test al,al
jnz 0xd179
xor eax,eax
jmp short 0xd17b
mov al,0x1
mov ebx,eax
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x40e19a
lea eax,[ebp-0x4]
call dword 0x5270
ret
jmp dword 0x3384
jmp short 0xd18a
mov eax,ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
ret
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
rol byte [eax],byte 0x0
add [eax],al
add [eax],al
inc esi
push ebp
mov ebp,esp
add esp,byte -0xc
push ebx
mov ebx,eax
push edx
call dword 0x5be0
mov [ebp-0xc],eax
xor eax,eax
push ebp
push dword 0x40e226
push dword [fs:eax]
mov [fs:eax],esp
fnstcw [ebp-0x2]
xor eax,eax
push ebp
push dword 0x40e208
push dword [fs:eax]
mov [fs:eax],esp
mov eax,ebx
call dword 0x3eac
push eax
call dword 0x5ba8
mov [ebp-0x8],eax
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x40e20f
fnclex
fldcw [ebp-0x2]
ret
jmp dword 0x3384
jmp short 0xd202
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x40e22d
mov eax,[ebp-0xc]
push eax
call dword 0x5be0
ret
jmp dword 0x3384
jmp short 0xd21c
mov eax,[ebp-0x8]
pop ebx
mov esp,ebp
pop ebp
ret
lea eax,[eax+0x0]
push ebx
mov ebx,[dword 0x468dec]
mov ebx,[ebx]
test ebx,ebx
jz 0xd264
cmp dword [ebx+0x14],byte +0x0
jz 0xd25e
mov edx,[dword 0x40d9ec]
mov eax,[ebx+0x14]
call dword 0x4994
xor eax,eax
mov [ebx+0x14],eax
mov ebx,[ebx]
test ebx,ebx
jnz 0xd245
pop ebx
ret
mov eax,eax
sbb eax,0xf0000000
jns 0xd2b5
add [eax],ch
lea eax,[esi+0x0]
call dword 0x540118f2
mov [esi+0x0],es
loopne 0xd2f7
inc esi
add al,ah
mov al,[esi+0x0]
fdivr dword [ecx+0x46]
add [ebp+ecx*4+0x46],ch
add al,dl
jns 0xd2d5
add [eax-0x37ffb973],ah
jns 0xd2dd
add [ebx+ecx*4+0x79c00046],al
inc esi
add [esp+ecx*4],bh
inc esi
add [eax-0x53ffb987],bh
mov al,[esi+0x0]
mov al,0x79
inc esi
add [eax-0x57ffb974],cl
jns 0xd2fd
add al,dl
mov [esi+0x0],es
mov al,[0xc004679]
mov [esi+0x0],es
cwde
jns 0xd30d
add [esp+ecx*4],dl
inc esi
add [eax+0x18004679],dl
mov es,[esi+0x0]
mov [ecx+0x46],bh
add [eax],dl
mov [esi+0x0],es
cmp byte [ecx+0x46],0x0
or byte [esi+0x79780046],0x46
add [eax],cl
lea eax,[esi+0x0]
jo 0xd367
inc esi
add al,ch
mov [esi+0x0],es
push dword 0x94004679
mov es,[esi+0x0]
pushad
jns 0xd345
add [eax-0x72],dl
inc esi
add [eax+0x79],bl
inc esi
add [eax],ch
mov [esi+0x0],es
push eax
jns 0xd355
add [eax],ah
mov es,[esi+0x0]
dec eax
jns 0xd35d
add [esi+ecx*4],ch
inc esi
add [eax+0x79],al
inc esi
add [eax-0x75],dh
inc esi
add [eax],bh
jns 0xd36d
add [ebx+ecx*4],dh
inc esi
add [eax],dh
jns 0xd375
add ah,ah
mov [esi+0x0],es
sub [ecx+0x46],bh
add [ebp+ecx*4+0x46],ah
add [eax],ah
jns 0xd385
add [eax+0x1800468a],bh
jns 0xd38d
add [esi+ecx*4],dl
inc esi
add [eax],dl
jns 0xd395
add [esp+ecx*4],ah
inc esi
add [eax],ch
add [eax],al
add [eax],cl
jns 0xd3a1
add ah,bh
lea eax,[esi+0x0]
add [eax],al
add [eax],al
add al,0x79
inc esi
add ah,ch
mov al,[esi+0x0]
add [eax],al
add [eax],al
add [ecx+0x46],bh
add [eax-0x73],bl
inc esi
add [eax],al
add [eax],al
add ah,bh
js 0xd3c5
add ah,al
mov al,[esi+0x0]
add [eax],al
add [eax],al
clc
js 0xd3d1
add [ebx+ecx*4+0x46],cl
add [eax],al
add [eax],al
add ah,dh
js 0xd3dd
add [ebx+ecx*4+0x46],al
add [eax],al
add [eax],al
add al,dh
js 0xd3e9
add ah,bh
mov al,[esi+0x0]
add [eax],al
add [eax],al
in al,dx
js 0xd3f5
add [eax],ah
mov [esi+0x0],es
add [eax],al
add [eax],al
call dword 0x4011a35
lea eax,[esi+0x0]
add [eax],al
add [eax],al
in al,0x78
inc esi
add [eax-0x75],cl
inc esi
add [eax],al
add [eax],al
add al,ah
js 0xd419
add ah,bl
mov [esi+0x0],es
add [eax],al
add [eax],al
fdivr qword [eax+0x46]
add [ebp+ecx*4+0x46],bl
add [eax],al
fdivr dword [eax+0x46]
add [eax+0x468d],cl
add [eax],al
add ah,dl
js 0xd43d
add [eax],ah
lea eax,[esi+0x0]
add [eax],al
add [eax],al
sar byte [eax+0x46],1
add [eax],cl
mov [esi+0x0],es
add [eax],al
add [eax],al
int3
js 0xd455
add [ebx+ecx*4+0x46],bh
add [eax],al
enter 0x4678,0x0
ror byte [edx+0x46],byte 0x0
add ah,al
js 0xd46d
add [ebp+ecx*4+0x46],al
add [eax],al
sar byte [eax+0x46],byte 0x0
test al,0x8c
inc esi
add [eax],al
add [eax],al
add [eax+edi*2-0x7457ffba],bh
inc esi
add [eax],al
add [eax],al
add [eax-0x7bffb988],bh
mov [esi+0x0],es
add [eax],al
add [eax],al
mov ah,0x78
inc esi
add al,dh
mov [esi+0x0],es
add [eax],al
add [eax],al
mov al,0x78
inc esi
add [eax+0x468c],bl
add [eax],al
add [eax+edi*2-0x741fffba],ch
inc esi
add [eax],al
add [eax],al
add [eax-0x43ffb988],ch
mov al,[esi+0x0]
add [eax],al
add [eax],al
movsb
js 0xd4cd
add [eax-0x74],cl
inc esi
add [eax],al
add [eax],al
add [eax+0x34004678],ah
mov es,[esi+0x0]
add [eax],al
add [eax],al
pushfd
js 0xd4e5
add ah,bl
lea eax,[esi+0x0]
add [eax],al
add [eax],al
cwde
js 0xd4f1
add al,bl
mov [esi+0x0],es
add [eax],al
add [eax],al
xchg eax,esp
js 0xd4fd
add [ebx+ecx*4+0x46],ch
add [eax],al
add [eax],al
add [eax-0x2fffb988],dl
mov al,[esi+0x0]
add [eax],al
add [eax],al
mov [eax+0x46],segr7
add ah,cl
lea eax,[esi+0x0]
add [eax],al
add [eax],al
mov [eax+0x46],bh
add [esi+ecx*4+0x46],bh
add [eax],al
test [eax+0x46],bh
add [ebx+ecx*4],al
inc esi
add [eax],al
add [eax],al
add [eax-0x57ffb988],al
mov al,[esi+0x0]
add [eax],al
add [eax],al
jl 0xd576
inc esi
add [esi+ecx*4],cl
inc esi
add [eax],al
add [eax],al
add [eax+0x78],bh
inc esi
add ah,dl
mov [esi+0x0],es
add [eax],al
add [eax],al
jz 0xd58e
inc esi
add [esi+ecx*4+0x46],ah
add [eax],al
add [eax],al
add [eax+0x78],dl
inc esi
add [eax],dh
mov [esi+0x0],es
add [eax],al
add [eax],al
dec esp
js 0xd575
add [eax-0x75],bh
inc esi
add [eax],al
add [eax],al
add [ebp-0x75],dl
in al,dx
xor eax,eax
push ebp
push dword 0x40e6bc
push dword [fs:eax]
mov [fs:eax],esp
inc dword [dword 0x46b914]
jnz dword 0xd6ae
mov eax,0x46d908
call dword 0xd0e8
mov eax,0x40da38
call dword 0x5130
call dword 0xd238
call dword 0xcc2c
call dword 0xbb88
mov eax,0x4677a8
call dword 0x3a1c
mov eax,0x4677ac
call dword 0x41d0
mov eax,0x4677c0
call dword 0x3a1c
mov eax,0x46b804
call dword 0x3a1c
mov eax,0x46b810
call dword 0x3a1c
mov eax,0x46b814
call dword 0x3a1c
mov eax,0x46b81c
call dword 0x3a1c
mov eax,0x46b820
call dword 0x3a1c
mov eax,0x46b824
call dword 0x3a1c
mov eax,0x46b828
call dword 0x3a1c
mov eax,0x46b82c
mov ecx,0xc
mov edx,[dword 0x401094]
call dword 0x465c
mov eax,0x46b85c
mov ecx,0xc
mov edx,[dword 0x401094]
call dword 0x465c
mov eax,0x46b88c
mov ecx,0x7
mov edx,[dword 0x401094]
call dword 0x465c
mov eax,0x46b8a8
mov ecx,0x7
mov edx,[dword 0x401094]
call dword 0x465c
mov eax,0x46b8d4
mov ecx,0x7
mov edx,[dword 0x401094]
call dword 0x465c
mov eax,0x46b90c
mov edx,[dword 0x4082a4]
call dword 0x4b98
mov eax,0x46b910
mov edx,[dword 0x4082c8]
call dword 0x4b98
mov eax,0x467818
call dword 0x3a1c
mov eax,0x467824
mov ecx,0x2
mov edx,[dword 0x401094]
call dword 0x465c
mov eax,0x46790c
mov ecx,0x7
mov edx,[dword 0x40c5e8]
call dword 0x465c
mov eax,0x467944
mov ecx,0x16
mov edx,[dword 0x40c668]
call dword 0x465c
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x40e6c3
ret
jmp dword 0x3384
jmp short 0xd6bb
pop ebp
ret
lea eax,[eax+0x0]
jmp dword [dword 0x46ed48]
mov eax,eax
jmp dword [dword 0x46ed44]
mov eax,eax
jmp dword [dword 0x46ed40]
mov eax,eax
jmp dword [dword 0x46ed3c]
mov eax,eax
push ebp
mov ebp,esp
cmp dword [ebp+0x10],0x400
jz 0xd6fb
mov eax,0x80004001
jmp short 0xd712
movzx eax,word [ebp+0x18]
push eax
movzx eax,word [ebp+0x14]
push eax
mov eax,[ebp+0xc]
push eax
mov eax,[ebp+0x8]
push eax
call dword 0xd6e0
pop ebp
ret 0x14
mov eax,eax
push ebp
mov ebp,esp
mov eax,0x80004001
pop ebp
ret 0x8
push ebp
mov ebp,esp
mov eax,0x80004001
pop ebp
ret 0xc
push ebp
mov ebp,esp
mov eax,0x80004001
pop ebp
ret 0x10
push ebp
mov ebp,esp
push byte +0x0
push ebx
xor eax,eax
push ebp
push dword 0x40e796
push dword [fs:eax]
mov [fs:eax],esp
cmp dword [ebp+0xc],0x400
jz 0xd760
mov ebx,0x80004001
jmp short 0xd780
lea eax,[ebp-0x4]
mov edx,[ebp+0x8]
call dword 0x3ca4
mov eax,[ebp-0x4]
mov edx,[ebp+0x14]
call dword 0x7d8c
and eax,byte +0x7f
mov ebx,[eax*4+0x4679f8]
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x40e79d
lea eax,[ebp-0x4]
call dword 0x3a1c
ret
jmp dword 0x3384
jmp short 0xd78d
mov eax,ebx
pop ebx
pop ecx
pop ebp
ret 0x10
lea eax,[eax+0x0]
push ebp
mov ebp,esp
push byte +0x0
push ebx
xor eax,eax
push ebp
push dword 0x40e802
push dword [fs:eax]
mov [fs:eax],esp
cmp dword [ebp+0xc],0x400
jz 0xd7cc
mov ebx,0x80004001
jmp short 0xd7ec
lea eax,[ebp-0x4]
mov edx,[ebp+0x8]
call dword 0x3ca4
mov eax,[ebp-0x4]
mov edx,[ebp+0x14]
call dword 0x9314
and eax,byte +0x7f
mov ebx,[eax*4+0x4679f8]
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x40e809
lea eax,[ebp-0x4]
call dword 0x3a1c
ret
jmp dword 0x3384
jmp short 0xd7f9
mov eax,ebx
pop ebx
pop ecx
pop ebp
ret 0x10
lea eax,[eax+0x0]
push ebp
mov ebp,esp
push byte +0x0
push ebx
xor eax,eax
push ebp
push dword 0x40e86e
push dword [fs:eax]
mov [fs:eax],esp
cmp dword [ebp+0xc],0x400
jz 0xd838
mov ebx,0x80004001
jmp short 0xd858
lea eax,[ebp-0x4]
mov edx,[ebp+0x8]
call dword 0x3ca4
mov eax,[ebp-0x4]
mov edx,[ebp+0x14]
call dword 0x92e8
and eax,byte +0x7f
mov ebx,[eax*4+0x4679f8]
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x40e875
lea eax,[ebp-0x4]
call dword 0x3a1c
ret
jmp dword 0x3384
jmp short 0xd865
mov eax,ebx
pop ebx
pop ecx
pop ebp
ret 0x10
lea eax,[eax+0x0]
push ebp
mov ebp,esp
push byte +0x0
push ebx
xor eax,eax
push ebp
push dword 0x40e8da
push dword [fs:eax]
mov [fs:eax],esp
cmp dword [ebp+0xc],0x400
jz 0xd8a4
mov ebx,0x80004001
jmp short 0xd8c4
lea eax,[ebp-0x4]
mov edx,[ebp+0x8]
call dword 0x3ca4
mov eax,[ebp-0x4]
mov edx,[ebp+0x14]
call dword 0xaba0
and eax,byte +0x7f
mov ebx,[eax*4+0x4679f8]
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x40e8e1
lea eax,[ebp-0x4]
call dword 0x3a1c
ret
jmp dword 0x3384
jmp short 0xd8d1
mov eax,ebx
pop ebx
pop ecx
pop ebp
ret 0x10
lea eax,[eax+0x0]
push ebp
mov ebp,esp
push byte +0x0
push ebx
xor eax,eax
push ebp
push dword 0x40e946
push dword [fs:eax]
mov [fs:eax],esp
cmp dword [ebp+0xc],0x400
jz 0xd910
mov ebx,0x80004001
jmp short 0xd930
lea eax,[ebp-0x4]
mov edx,[ebp+0x8]
call dword 0x3ca4
mov eax,[ebp-0x4]
mov edx,[ebp+0x14]
call dword 0x9340
and eax,byte +0x7f
mov ebx,[eax*4+0x4679f8]
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x40e94d
lea eax,[ebp-0x4]
call dword 0x3a1c
ret
jmp dword 0x3384
jmp short 0xd93d
mov eax,ebx
pop ebx
pop ecx
pop ebp
ret 0x10
lea eax,[eax+0x0]
push ebp
mov ebp,esp
add esp,byte -0x8
push ebx
xor eax,eax
mov [ebp-0x8],eax
xor eax,eax
push ebp
push dword 0x40e9c5
push dword [fs:eax]
mov [fs:eax],esp
cmp dword [ebp+0xc],0x400
jz 0xd982
mov ebx,0x80004001
jmp short 0xd9af
lea eax,[ebp-0x8]
mov edx,[ebp+0x8]
call dword 0x3ca4
mov eax,[ebp-0x8]
lea edx,[ebp-0x1]
call dword 0x7ec0
and eax,byte +0x7f
mov ebx,[eax*4+0x4679f8]
cmp byte [ebp-0x1],0x1
cmc
sbb eax,eax
mov edx,[ebp+0x14]
mov [edx],ax
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x40e9cc
lea eax,[ebp-0x8]
call dword 0x3a1c
ret
jmp dword 0x3384
jmp short 0xd9bc
mov eax,ebx
pop ebx
pop ecx
pop ecx
pop ebp
ret 0x10
lea eax,[eax+0x0]
push ebp
mov ebp,esp
push byte +0x0
push ebx
mov eax,[ebp+0x18]
test eax,eax
jz 0xd9e9
xor edx,edx
mov [eax],edx
xor eax,eax
push ebp
push dword 0x40ea38
push dword [fs:eax]
mov [fs:eax],esp
cmp dword [ebp+0x10],0x400
jz 0xda07
mov ebx,0x80004001
jmp short 0xda22
push dword [ebp+0xc]
push dword [ebp+0x8]
lea eax,[ebp-0x4]
call dword 0x929c
mov edx,[ebp-0x4]
mov eax,[ebp+0x18]
call dword 0x4338
xor ebx,ebx
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x40ea3f
lea eax,[ebp-0x4]
call dword 0x3a1c
ret
jmp dword 0x3384
jmp short 0xda2f
mov eax,ebx
pop ebx
pop ecx
pop ebp
ret 0x14
nop
push ebp
mov ebp,esp
push byte +0x0
push ebx
mov eax,[ebp+0x18]
test eax,eax
jz 0xda59
xor edx,edx
mov [eax],edx
xor eax,eax
push ebp
push dword 0x40eaaa
push dword [fs:eax]
mov [fs:eax],esp
cmp dword [ebp+0x10],0x400
jz 0xda77
mov ebx,0x80004001
jmp short 0xda94
push dword [ebp+0xc]
push dword [ebp+0x8]
lea eax,[ebp-0x4]
xor edx,edx
call dword 0xa2b8
mov eax,[ebp+0x18]
mov edx,[ebp-0x4]
call dword 0x4338
xor ebx,ebx
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x40eab1
lea eax,[ebp-0x4]
call dword 0x3a1c
ret
jmp dword 0x3384
jmp short 0xdaa1
mov eax,ebx
pop ebx
pop ecx
pop ebp
ret 0x14
lea eax,[eax+0x0]
push ebp
mov ebp,esp
push byte +0x0
push ebx
mov eax,[ebp+0x14]
test eax,eax
jz 0xdacd
xor edx,edx
mov [eax],edx
xor eax,eax
push ebp
push dword 0x40eb20
push dword [fs:eax]
mov [fs:eax],esp
cmp dword [ebp+0xc],0x400
jz 0xdaeb
mov ebx,0x80004001
jmp short 0xdb0a
cmp word [ebp+0x8],byte +0x1
sbb eax,eax
inc eax
lea ecx,[ebp-0x4]
xor edx,edx
call dword 0x7f5c
mov edx,[ebp-0x4]
mov eax,[ebp+0x14]
call dword 0x4338
xor ebx,ebx
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x40eb27
lea eax,[ebp-0x4]
call dword 0x3a1c
ret
jmp dword 0x3384
jmp short 0xdb17
mov eax,ebx
pop ebx
pop ecx
pop ebp
ret 0x10
nop
jmp dword [dword 0x46ed38]
mov eax,eax
jmp dword [dword 0x46ed34]
mov eax,eax
jmp dword [dword 0x46ed30]
mov eax,eax
jmp dword [dword 0x46ed2c]
mov eax,eax
push ebp
mov ebp,esp
push ebx
mov ebx,edx
mov edx,ebx
mov ecx,[ebp+0x8]
cmp dword [ecx-0x4],byte +0x0
jz 0xdb76
push eax
mov eax,[ebp+0x8]
mov eax,[eax-0x4]
push eax
call dword 0x5b50
mov edx,eax
test edx,edx
jnz 0xdb76
mov edx,ebx
mov eax,edx
pop ebx
pop ebp
ret
nop
push ebp
mov ebp,esp
push ecx
push dword 0x40ed74
call dword 0x5b48
mov [ebp-0x4],eax
push ebp
mov edx,0x40e6e8
mov eax,0x40ed84
call dword 0xdb50
pop ecx
mov [0x46d90c],eax
push ebp
mov edx,0x40e718
mov eax,0x40ed98
call dword 0xdb50
pop ecx
mov [0x46d910],eax
push ebp
mov edx,0x40e718
mov eax,0x40eda0
call dword 0xdb50
pop ecx
mov [0x46d914],eax
push ebp
mov edx,0x40e724
mov eax,0x40eda8
call dword 0xdb50
pop ecx
mov [0x46d918],eax
push ebp
mov edx,0x40e724
mov eax,0x40edb0
call dword 0xdb50
pop ecx
mov [0x46d91c],eax
push ebp
mov edx,0x40e724
mov eax,0x40edb8
call dword 0xdb50
pop ecx
mov [0x46d920],eax
push ebp
mov edx,0x40e724
mov eax,0x40edc0
call dword 0xdb50
pop ecx
mov [0x46d924],eax
push ebp
mov edx,0x40e724
mov eax,0x40edc8
call dword 0xdb50
pop ecx
mov [0x46d928],eax
push ebp
mov edx,0x40e724
mov eax,0x40edd0
call dword 0xdb50
pop ecx
mov [0x46d92c],eax
push ebp
mov edx,0x40e724
mov eax,0x40edd8
call dword 0xdb50
pop ecx
mov [0x46d930],eax
push ebp
mov edx,0x40e724
mov eax,0x40ede0
call dword 0xdb50
pop ecx
mov [0x46d934],eax
push ebp
mov edx,0x40e724
mov eax,0x40ede8
call dword 0xdb50
pop ecx
mov [0x46d938],eax
push ebp
mov edx,0x40e730
mov eax,0x40edf0
call dword 0xdb50
pop ecx
mov [0x46d93c],eax
push ebp
mov edx,0x40e73c
mov eax,0x40edf8
call dword 0xdb50
pop ecx
mov [0x46d940],eax
push ebp
mov edx,0x40e7a8
mov eax,0x40ee08
call dword 0xdb50
pop ecx
mov [0x46d944],eax
push ebp
mov edx,0x40e814
mov eax,0x40ee18
call dword 0xdb50
pop ecx
mov [0x46d948],eax
push ebp
mov edx,0x40e880
mov eax,0x40ee28
call dword 0xdb50
pop ecx
mov [0x46d94c],eax
push ebp
mov edx,0x40e8ec
mov eax,0x40ee38
call dword 0xdb50
pop ecx
mov [0x46d950],eax
push ebp
mov edx,0x40e958
mov eax,0x40ee48
call dword 0xdb50
pop ecx
mov [0x46d954],eax
push ebp
mov edx,0x40e9d8
mov eax,0x40ee58
call dword 0xdb50
pop ecx
mov [0x46d958],eax
push ebp
mov edx,0x40ea48
mov eax,0x40ee68
call dword 0xdb50
pop ecx
mov [0x46d95c],eax
push ebp
mov edx,0x40eabc
mov eax,0x40ee78
call dword 0xdb50
pop ecx
mov [0x46d960],eax
pop ecx
pop ebp
ret
outsd
insb
gs popad
jnz 0xddee
xor esi,[edx]
fs insb
insb
add [eax],al
add [eax],al
push esi
popad
jc 0xddf1
popad
outsb
jz 0xddcf
push dword 0x65676e61
push esp
jns 0xde04
gs inc ebp
js 0xdd98
push esi
popad
jc 0xddea
add [gs:bx+si],al
push esi
popad
jc 0xddf2
outsd
jz 0xdda7
add [esi+0x61],dl
jc 0xdded
add [fs:eax],al
push esi
popad
jc 0xde07
jnz 0xde18
add [eax],al
push esi
popad
jc 0xde09
jnz 0xde2a
add [eax],al
push esi
popad
jc 0xde08
imul esi,[esi+0x0],dword 0x72615600
dec ecx
imul esi,[fs:esi+0x0],dword 0x4d726156
outsd
add [fs:eax],al
push esi
popad
jc 0xde1d
outsb
add [fs:eax],al
push esi
popad
jc 0xde33
jc 0xdde6
add [eax],al
push esi
popad
jc 0xde44
outsd
jc 0xddef
add [esi+0x61],dl
jc 0xde37
insd
jo 0xddf7
add [esi+0x61],dl
jc 0xde45
xor al,0x46
jc 0xde6f
insd
push ebx
jz 0xde76
add [eax],al
add [eax],al
push esi
popad
jc 0xde5e
xor al,0x46
jc 0xde7f
insd
push ebx
jz 0xde86
add [eax],al
add [eax],al
push esi
popad
jc 0xde6e
cmp [esi+0x72],al
outsd
insd
push ebx
jz 0xde96
add [eax],al
add [eax],al
push esi
popad
jc 0xde70
popad
jz 0xde94
inc esi
jc 0xdea1
insd
push ebx
jz 0xdea8
add [eax],al
push esi
popad
jc 0xde7f
jns 0xde84
jc 0xdeaf
insd
push ebx
jz 0xdeb6
add [eax],al
add [eax],al
push esi
popad
jc 0xde8e
outsd
outsd
insb
inc esi
jc 0xdec1
insd
push ebx
jz 0xdec8
add [eax],al
push esi
popad
jc 0xde9e
jnc 0xded2
jc 0xdea6
jc 0xded1
insd
inc ebx
jns 0xde66
add [eax],al
push esi
popad
jc 0xdeae
jnc 0xdee2
jc 0xdeb6
jc 0xdee1
insd
inc esp
popad
jz 0xdedc
add [esi+0x61],dl
jc 0xdebe
jnc 0xdef2
jc 0xdec6
jc 0xdef1
insd
inc edx
outsd
outsd
insb
add [ebp-0x75],dl
in al,dx
xor eax,eax
push ebp
push dword 0x40eead
push dword [fs:eax]
mov [fs:eax],esp
inc dword [dword 0x46d964]
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x40eeb4
ret
jmp dword 0x3384
jmp short 0xdeac
pop ebp
ret
mov eax,eax
int3
add dword [esp+0x4],byte -0x8
mov eax,[esp+0x4]
mov eax,[eax]
jmp dword [eax]
add dword [esp+0x4],byte -0x8
jmp dword 0x105e4
add dword [esp+0x4],byte -0x8
jmp dword 0x105f0
mov ecx,0xc60040ee
out dx,al
inc eax
add al,dl
out dx,al
inc eax
add [ecx],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add al,al
add [eax],al
add [eax],al
add [eax],al
inc esi
db 0xda
out dx,al
inc eax
add [eax],cl
add [eax],al
add [eax],al
add [eax],al
add [ebx+0x40ef54c0],cl
add dh,ah
out dx,al
inc eax
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax+0xc0040ef],dl
add [eax],al
add [eax+0x38004010],dh
ds inc eax
add [esi+edi+0x40],al
add [eax+0x3e],cl
inc eax
add [esi+edi+0x40],cl
add [eax+0x3e],al
inc eax
add [eax-0x5bffbfc5],cl
cmp eax,[eax+0x0]
clc
adc al,0x41
add ah,bh
adc eax,0x15880041
inc ecx
add [ebp+edx+0x159c0041],bh
inc ecx
add al,bl
adc eax,0x15840041
inc ecx
add al,bh
adc eax,[ecx+0x0]
xor [ecx+eax*2],dl
add [esp+edx+0x33540041],bh
inc eax
add [ebx+esi+0x40],dl
add ah,ch
adc eax,[ecx+0x0]
rcl byte [dword 0x14840041],1
inc ecx
add [eax+0x14],bh
inc ecx
add [edx],dl
push esp
inc ebx
jnz 0xe008
jz 0xe006
insd
push esi
popad
jc 0xe005
popad
outsb
jz 0xdff4
jns 0xe012
gs nop
test al,0xef
inc eax
add [edi],al
adc dl,[ebx+eax*2+0x75]
jnc 0xe023
outsd
insd
push esi
popad
jc 0xe01e
popad
outsb
jz 0xe00d
jns 0xe02b
gs push esp
out dx,eax
inc eax
add [ecx+edx],al
inc eax
add [eax],al
add [eax],cl
push esi
popad
jc 0xe034
popad
outsb
jz 0xe042
add [eax],al
lea eax,[eax+0x0]
and al,dh
inc eax
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],ah
lock inc eax
add [eax+eax],cl
add [eax],al
js 0xdf7e
inc eax
add [eax],bh
ds inc eax
add [esi+edi+0x40],al
add [eax+0x3e],cl
inc eax
add [esi+edi+0x40],cl
add [eax+0x3e],al
inc eax
add [eax-0x5bffbfc5],cl
cmp eax,[eax+0x0]
loopne 0xe059
inc eax
add [esi],dl
inc ebp
push esi
popad
jc 0xe08f
popad
outsb
jz 0xe073
outsb
jna 0xe08e
insb
imul esp,[edi+ecx*2+0x70],dword 0x6f727245
jc 0xdfc8
test al,dh
inc eax
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax+esi*8+0xc0040],al
add [eax],al
js 0xdfe2
inc eax
add [eax],bh
ds inc eax
add [esi+edi+0x40],al
add [eax+0x3e],cl
inc eax
add [esi+edi+0x40],cl
add [eax+0x3e],al
inc eax
add [eax-0x5bffbfc5],cl
cmp eax,[eax+0x0]
loopne 0xe0bd
inc eax
add [dword 0x72615645],dl
imul esp,[ecx+0x6e],dword 0x70795474
gs inc ebx
popad
jnc 0xe109
inc ebp
jc 0xe10a
outsd
jc 0xe026
shr al,byte 0xf0
inc eax
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add al,ch
lock inc eax
add [eax+eax],cl
add [eax],al
js 0xe046
inc eax
add [eax],bh
ds inc eax
add [esi+edi+0x40],al
add [eax+0x3e],cl
inc eax
add [esi+edi+0x40],cl
add [eax+0x3e],al
inc eax
add [eax-0x5bffbfc5],cl
cmp eax,[eax+0x0]
loopne 0xe121
inc eax
add [dword 0x72615645],dl
imul esp,[ecx+0x6e],dword 0x65764f74
jc 0xe15c
insb
outsd
ja 0xe13f
jc 0xe16e
outsd
jc 0xe08a
ror byte [ecx+esi*8+0x40],byte 0x0
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
dec esp
int1
inc eax
add [eax+eax],cl
add [eax],al
js 0xe0aa
inc eax
add [eax],bh
ds inc eax
add [esi+edi+0x40],al
add [eax+0x3e],cl
inc eax
add [esi+edi+0x40],cl
add [eax+0x3e],al
inc eax
add [eax-0x5bffbfc5],cl
cmp eax,[eax+0x0]
loopne 0xe185
inc eax
add [edi],dl
inc ebp
push esi
popad
jc 0xe1bb
popad
outsb
jz 0xe19f
outsb
jna 0xe1ba
insb
imul esp,[ecx+eax*2+0x72],dword 0x72724567
outsd
jc 0xe115
int1
inc eax
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax+0xc0040f1],dh
add [eax],al
add [eax-0x80],bh
inc eax
add [eax],bh
ds inc eax
add [esi+edi+0x40],al
add [eax+0x3e],cl
inc eax
add [esi+edi+0x40],cl
add [eax+0x3e],al
inc eax
add [eax-0x5bffbfc5],cl
cmp eax,[eax+0x0]
loopne 0xe1e9
inc eax
add [edi],dl
inc ebp
push esi
popad
jc 0xe21f
popad
outsb
jz 0xe1fc
popad
fs push esi
popad
jc 0xe214
jns 0xe232
gs inc ebp
jc 0xe238
outsd
jc 0xe1dd
repne inc eax
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [edx+esi*8],dl
inc eax
add [eax+eax],cl
add [eax],al
js 0xe172
inc eax
add [eax],bh
ds inc eax
add [esi+edi+0x40],al
add [eax+0x3e],cl
inc eax
add [esi+edi+0x40],cl
add [eax+0x3e],al
inc eax
add [eax-0x5bffbfc5],cl
cmp eax,[eax+0x0]
loopne 0xe24d
inc eax
add [dword 0x72615645],dl
imul esp,[ecx+0x6e],dword 0x64614274
dec ecx
outsb
gs js 0xe26b
jc 0xe29a
outsd
jc 0xe1b6
sar byte [eax-0xe],byte 0x40
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax-0xe],bh
inc eax
add [eax+eax],cl
add [eax],al
js 0xe1d6
inc eax
add [eax],bh
ds inc eax
add [esi+edi+0x40],al
add [eax+0x3e],cl
inc eax
add [esi+edi+0x40],cl
add [eax+0x3e],al
inc eax
add [eax-0x5bffbfc5],cl
cmp eax,[eax+0x0]
loopne 0xe2b1
inc eax
add [eax],bl
inc ebp
push esi
popad
jc 0xe2e7
popad
outsb
jz 0xe2c3
jc 0xe2f6
popad
jns 0xe2d3
outsd
arpl [ebx+0x65],bp
fs inc ebp
jc 0xe301
outsd
jc 0xe21f
inc eax
add al,ah
repne inc eax
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add al,ah
repne inc eax
add [eax+eax],cl
add [eax],al
js 0xe23e
inc eax
add [eax],bh
ds inc eax
add [esi+edi+0x40],al
add [eax+0x3e],cl
inc eax
add [esi+edi+0x40],cl
add [eax+0x3e],al
inc eax
add [eax-0x5bffbfc5],cl
cmp eax,[eax+0x0]
loopne 0xe319
inc eax
add [eax],bl
inc ebp
push esi
popad
jc 0xe34f
popad
outsb
jz 0xe32b
jc 0xe35e
popad
jns 0xe332
jc 0xe356
popad
jz 0xe359
inc ebp
jc 0xe369
outsd
jc 0xe287
inc eax
add [eax-0xd],cl
inc eax
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax-0xd],cl
inc eax
add [eax+eax],cl
add [eax],al
js 0xe2a6
inc eax
add [eax],bh
ds inc eax
add [esi+edi+0x40],al
add [eax+0x3e],cl
inc eax
add [esi+edi+0x40],cl
add [eax+0x3e],al
inc eax
add [eax-0x5bffbfc5],cl
cmp eax,[eax+0x0]
loopne 0xe381
inc eax
add [eax*2+0x69726156],dl
popad
outsb
jz 0xe3a0
outsd
jz 0xe39e
insd
jo 0xe3c4
inc ebp
jc 0xe3cd
outsd
jc 0xe2eb
inc eax
add [ebx+esi*8+0x40],ch
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
lodsb
rep inc eax
add [eax+eax],cl
add [eax],al
js 0xe30a
inc eax
add [eax],bh
ds inc eax
add [esi+edi+0x40],al
add [eax+0x3e],cl
inc eax
add [esi+edi+0x40],cl
add [eax+0x3e],al
inc eax
add [eax-0x5bffbfc5],cl
cmp eax,[eax+0x0]
loopne 0xe3e5
inc eax
add [eax],bl
inc ebp
push esi
popad
jc 0xe41b
popad
outsb
jz 0xe405
jnz 0xe42c
dec edi
dec bp
gs insd
outsd
jc 0xe439
inc ebp
jc 0xe435
outsd
jc 0xe353
inc eax
add [esp+esi*8],dl
inc eax
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [esp+esi*8],dl
inc eax
add [eax+eax],cl
add [eax],al
js 0xe372
inc eax
add [eax],bh
ds inc eax
add [esi+edi+0x40],al
add [eax+0x3e],cl
inc eax
add [esi+edi+0x40],cl
add [eax+0x3e],al
inc eax
add [eax-0x5bffbfc5],cl
cmp eax,[eax+0x0]
loopne 0xe44d
inc eax
add [edi],dl
inc ebp
push esi
popad
jc 0xe483
popad
outsb
jz 0xe473
outsb
gs js 0xe492
arpl [gs:ebp+0x64],si
inc ebp
jc 0xe49c
outsd
jc 0xe4a5
hlt
inc eax
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax-0xc],bh
inc eax
add [eax+eax],cl
add [eax],al
js 0xe3d6
inc eax
add [eax],bh
ds inc eax
add [esi+edi+0x40],al
add [eax+0x3e],cl
inc eax
add [esi+edi+0x40],cl
add [eax+0x3e],al
inc eax
add [eax-0x5bffbfc5],cl
cmp eax,[eax+0x0]
loopne 0xe4b1
inc eax
add [dword 0x72615645],dl
imul esp,[ecx+0x6e],dword 0x73694474
jo 0xe4e7
jz 0xe4eb
push dword 0x6f727245
jc 0xe41a
rcl byte [ebp-0x75],byte 0xec
push byte +0x0
xor eax,eax
push ebp
push dword 0x40f4da
push dword [fs:eax]
mov [fs:eax],esp
lea edx,[ebp-0x4]
mov eax,[0x468cd0]
call dword 0x5750
mov ecx,[ebp-0x4]
mov dl,0x1
mov eax,[0x40f038]
call dword 0xb450
call dword 0x3464
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x40f4e1
lea eax,[ebp-0x4]
call dword 0x3a1c
ret
jmp dword 0x3384
jmp short 0xe4d1
pop ecx
pop ebp
ret
push ebp
mov ebp,esp
add esp,byte -0x1c
push ebx
push esi
xor ecx,ecx
mov [ebp-0x14],ecx
mov [ebp-0x18],ecx
mov [ebp-0x1c],ecx
mov esi,edx
mov ebx,eax
xor eax,eax
push ebp
push dword 0x40f573
push dword [fs:eax]
mov [fs:eax],esp
lea edx,[ebp-0x14]
mov eax,ebx
call dword 0x101c8
mov eax,[ebp-0x14]
mov [ebp-0x10],eax
mov byte [ebp-0xc],0xb
lea edx,[ebp-0x18]
mov eax,esi
call dword 0x101c8
mov eax,[ebp-0x18]
mov [ebp-0x8],eax
mov byte [ebp-0x4],0xb
lea eax,[ebp-0x10]
push eax
push byte +0x1
lea edx,[ebp-0x1c]
mov eax,[0x468ab4]
call dword 0x5750
mov ecx,[ebp-0x1c]
mov dl,0x1
mov eax,[0x40f038]
call dword 0xb48c
call dword 0x3464
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x40f57a
lea eax,[ebp-0x1c]
mov edx,0x3
call dword 0x3a40
ret
jmp dword 0x3384
jmp short 0xe565
pop esi
pop ebx
mov esp,ebp
pop ebp
ret
push ebp
mov ebp,esp
push byte +0x0
xor eax,eax
push ebp
push dword 0x40f5ca
push dword [fs:eax]
mov [fs:eax],esp
lea edx,[ebp-0x4]
mov eax,[0x468c88]
call dword 0x5750
mov ecx,[ebp-0x4]
mov dl,0x1
mov eax,[0x40efd4]
call dword 0xb450
call dword 0x3464
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x40f5d1
lea eax,[ebp-0x4]
call dword 0x3a1c
ret
jmp dword 0x3384
jmp short 0xe5c1
pop ecx
pop ebp
ret
push ebp
mov ebp,esp
add esp,byte -0x1c
push ebx
push esi
xor ecx,ecx
mov [ebp-0x14],ecx
mov [ebp-0x18],ecx
mov [ebp-0x1c],ecx
mov esi,edx
mov ebx,eax
xor eax,eax
push ebp
push dword 0x40f663
push dword [fs:eax]
mov [fs:eax],esp
lea edx,[ebp-0x14]
mov eax,ebx
call dword 0x101c8
mov eax,[ebp-0x14]
mov [ebp-0x10],eax
mov byte [ebp-0xc],0xb
lea edx,[ebp-0x18]
mov eax,esi
call dword 0x101c8
mov eax,[ebp-0x18]
mov [ebp-0x8],eax
mov byte [ebp-0x4],0xb
lea eax,[ebp-0x10]
push eax
push byte +0x1
lea edx,[ebp-0x1c]
mov eax,[0x468d2c]
call dword 0x5750
mov ecx,[ebp-0x1c]
mov dl,0x1
mov eax,[0x40f09c]
call dword 0xb48c
call dword 0x3464
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x40f66a
lea eax,[ebp-0x1c]
mov edx,0x3
call dword 0x3a40
ret
jmp dword 0x3384
jmp short 0xe655
pop esi
pop ebx
mov esp,ebp
pop ebp
ret
push ebp
mov ebp,esp
push byte +0x0
xor eax,eax
push ebp
push dword 0x40f6ba
push dword [fs:eax]
mov [fs:eax],esp
lea edx,[ebp-0x4]
mov eax,[0x468c3c]
call dword 0x5750
mov ecx,[ebp-0x4]
mov dl,0x1
mov eax,[0x40f294]
call dword 0xb450
call dword 0x3464
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x40f6c1
lea eax,[ebp-0x4]
call dword 0x3a1c
ret
jmp dword 0x3384
jmp short 0xe6b1
pop ecx
pop ebp
ret
push ebp
mov ebp,esp
mov ecx,0x8
push byte +0x0
push byte +0x0
dec ecx
jnz 0xe6cc
push ebx
mov ebx,eax
xor eax,eax
push ebp
push dword 0x40f909
push dword [fs:eax]
mov [fs:eax],esp
mov eax,ebx
cmp eax,0x8002000a
jg 0xe726
jz dword 0xe78d
cmp eax,0x80020005
jg 0xe717
jz 0xe753
sub eax,0x80004001
jz dword 0xe7ff
sub eax,0xbffe
jz dword 0xe86e
jmp dword 0xe891
sub eax,0x80020008
jz 0xe75d
dec eax
jz 0xe783
jmp dword 0xe891
sub eax,0x8002000b
jz dword 0xe7b3
sub eax,byte +0x2
jz dword 0xe7d9
sub eax,0x50001
jz dword 0xe825
sub eax,byte +0x49
jz dword 0xe84b
jmp dword 0xe891
call dword 0xe490
jmp dword 0xe8e1
lea edx,[ebp-0x4]
mov eax,[0x468e28]
call dword 0x5750
mov ecx,[ebp-0x4]
mov dl,0x1
mov eax,[0x40f164]
call dword 0xb450
call dword 0x3464
jmp dword 0xe8e1
call dword 0xe580
jmp dword 0xe8e1
lea edx,[ebp-0x8]
mov eax,[0x468b18]
call dword 0x5750
mov ecx,[ebp-0x8]
mov dl,0x1
mov eax,[0x40f09c]
call dword 0xb450
call dword 0x3464
jmp dword 0xe8e1
lea edx,[ebp-0xc]
mov eax,[0x468da0]
call dword 0x5750
mov ecx,[ebp-0xc]
mov dl,0x1
mov eax,[0x40f1c8]
call dword 0xb450
call dword 0x3464
jmp dword 0xe8e1
lea edx,[ebp-0x10]
mov eax,[0x468e90]
call dword 0x5750
mov ecx,[ebp-0x10]
mov dl,0x1
mov eax,[0x40f22c]
call dword 0xb450
call dword 0x3464
jmp dword 0xe8e1
lea edx,[ebp-0x14]
mov eax,[0x468cec]
call dword 0x5750
mov ecx,[ebp-0x14]
mov dl,0x1
mov eax,[0x40f2fc]
call dword 0xb450
call dword 0x3464
jmp dword 0xe8e1
lea edx,[ebp-0x18]
mov eax,[0x468b64]
call dword 0x5750
mov ecx,[ebp-0x18]
mov dl,0x1
mov eax,[0x40f360]
call dword 0xb450
call dword 0x3464
jmp dword 0xe8e1
lea edx,[ebp-0x1c]
mov eax,[0x468b84]
call dword 0x5750
mov ecx,[ebp-0x1c]
mov dl,0x1
mov eax,[0x40f100]
call dword 0xb450
call dword 0x3464
jmp short 0xe8e1
lea edx,[ebp-0x20]
mov eax,[0x468b14]
call dword 0x5750
mov ecx,[ebp-0x20]
mov dl,0x1
mov eax,[0x40f3c8]
call dword 0xb450
call dword 0x3464
jmp short 0xe8e1
mov eax,[0x468e38]
mov eax,[eax]
mov [ebp-0x38],eax
mov byte [ebp-0x34],0xb
mov [ebp-0x30],ebx
mov byte [ebp-0x2c],0x0
lea edx,[ebp-0x3c]
mov eax,ebx
call dword 0xac3c
mov eax,[ebp-0x3c]
mov [ebp-0x28],eax
mov byte [ebp-0x24],0xb
lea eax,[ebp-0x38]
push eax
push byte +0x2
lea edx,[ebp-0x40]
mov eax,[0x468c40]
call dword 0x5750
mov ecx,[ebp-0x40]
mov dl,0x1
mov eax,[0x408078]
call dword 0xb48c
call dword 0x3464
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x40f910
lea eax,[ebp-0x40]
mov edx,0x2
call dword 0x3a40
lea eax,[ebp-0x20]
mov edx,0x8
call dword 0x3a40
ret
jmp dword 0x3384
jmp short 0xe8ee
pop ebx
mov esp,ebp
pop ebp
ret
lea eax,[eax+0x0]
test eax,eax
jz 0xe921
call dword 0xe6c4
ret
mov eax,eax
push ebx
test eax,eax
jz 0xe955
mov ebx,eax
sub ebx,0x80020005
jz 0xe93a
sub ebx,byte +0x5
jz 0xe945
jmp short 0xe950
mov eax,edx
mov edx,ecx
call dword 0xe4e4
jmp short 0xe955
mov eax,edx
mov edx,ecx
call dword 0xe5d4
jmp short 0xe955
call dword 0xe6c4
pop ebx
ret
nop
push ebp
mov ebp,esp
push byte +0x0
xor eax,eax
push ebp
push dword 0x40f9a2
push dword [fs:eax]
mov [fs:eax],esp
lea edx,[ebp-0x4]
mov eax,[0x468aac]
call dword 0x5750
mov ecx,[ebp-0x4]
mov dl,0x1
mov eax,[0x40f42c]
call dword 0xb450
call dword 0x3464
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x40f9a9
lea eax,[ebp-0x4]
call dword 0x3a1c
ret
jmp dword 0x3384
jmp short 0xe999
pop ecx
pop ebp
ret
push ebx
mov ebx,eax
mov eax,ebx
call dword 0xec44
mov word [ebx],0x1
pop ebx
ret
lea eax,[eax+0x0]
push ebp
mov ebp,esp
push ebx
mov ecx,[ebp+0x8]
add ecx,0xfffffd00
mov edx,[ecx+eax*8+0x4]
add edx,[ecx+eax*8]
mov ebx,[ebp+0x8]
cmp edx,[ebx+eax*4-0x100]
setg dl
dec eax
test dl,dl
jz 0xe9ea
test eax,eax
jnl 0xe9cd
mov eax,edx
pop ebx
pop ebp
ret
nop
push ebp
mov ebp,esp
push ebx
push esi
mov dl,0x1
mov ecx,[ebp+0x8]
inc dword [ecx+eax*4-0x100]
mov ecx,[ebp+0x8]
mov ecx,[ecx+eax*8-0x2fc]
mov ebx,ecx
mov esi,[ebp+0x8]
add ebx,[esi+eax*8-0x300]
mov esi,[ebp+0x8]
cmp ebx,[esi+eax*4-0x100]
jg 0xea45
test eax,eax
jnz 0xea2b
xor edx,edx
jmp short 0xea45
mov edx,[ebp+0x8]
mov edx,[ebp+0x8]
mov [edx+eax*4-0x100],ecx
mov edx,[ebp+0x8]
push edx
dec eax
call dword 0xe9f0
pop ecx
mov edx,eax
mov eax,edx
pop esi
pop ebx
pop ebp
ret
nop
push ebp
mov ebp,esp
add esp,0xfffffce8
push ebx
push esi
push edi
mov [ebp-0x304],eax
mov eax,[ebp-0x304]
test byte [eax+0x1],0x20
jnz 0xea74
mov eax,0x80070057
call dword 0xe918
mov eax,[ebp-0x304]
movzx eax,word [eax]
mov edx,eax
and dx,0xfff
cmp dx,byte +0xc
jnz dword 0xebb0
mov edx,[ebp-0x304]
test ah,0x40
jz 0xeaac
mov eax,[ebp-0x304]
mov eax,[eax+0x8]
mov eax,[eax]
mov [ebp-0x308],eax
jmp short 0xeabb
mov eax,[ebp-0x304]
mov eax,[eax+0x8]
mov [ebp-0x308],eax
mov eax,[ebp-0x308]
movzx eax,word [eax]
mov [ebp-0x310],eax
mov ebx,[ebp-0x310]
dec ebx
test ebx,ebx
jl 0xeb40
inc ebx
xor edi,edi
lea esi,[ebp-0x300]
mov eax,esi
mov [ebp-0x318],eax
mov eax,[ebp-0x318]
add eax,byte +0x4
push eax
lea eax,[edi+0x1]
push eax
mov eax,[ebp-0x308]
push eax
call dword 0xdb38
call dword 0xe918
lea eax,[ebp-0x30c]
push eax
lea eax,[edi+0x1]
push eax
mov eax,[ebp-0x308]
push eax
call dword 0xdb40
call dword 0xe918
mov eax,[ebp-0x318]
mov edx,[ebp-0x30c]
sub edx,[eax+0x4]
inc edx
mov eax,[ebp-0x318]
mov [eax],edx
inc edi
add esi,byte +0x8
dec ebx
jnz 0xeade
mov ebx,[ebp-0x310]
dec ebx
test ebx,ebx
jl 0xeb65
inc ebx
lea eax,[ebp-0x2fc]
lea edx,[ebp-0x100]
mov ecx,[eax]
mov [edx],ecx
add edx,byte +0x4
add eax,byte +0x8
dec ebx
jnz 0xeb58
push ebp
mov ebx,[ebp-0x310]
dec ebx
mov eax,ebx
call dword 0xe9c0
pop ecx
test al,al
jz 0xeba3
lea eax,[ebp-0x314]
push eax
lea eax,[ebp-0x100]
push eax
mov eax,[ebp-0x308]
push eax
call dword 0xdb48
call dword 0xe918
mov eax,[ebp-0x314]
call dword 0xec44
push ebp
mov eax,ebx
call dword 0xe9f0
pop ecx
test al,al
jnz 0xeb65
mov eax,[ebp-0x304]
push eax
call dword 0xd6d0
call dword 0xe918
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret
push ebx
push esi
push ecx
mov ebx,eax
movzx esi,word [ebx]
cmp si,byte +0x14
jnc 0xebe3
push ebx
call dword 0xd6d0
call dword 0xe918
jmp short 0xec3f
cmp si,0x100
jnz 0xebf9
mov word [ebx],0x0
lea eax,[ebx+0x8]
call dword 0x3a1c
jmp short 0xec3f
cmp si,0x101
jnz 0xec0a
mov eax,ebx
call dword [dword 0x46d97c]
jmp short 0xec3f
test si,0x2000
jz 0xec1a
mov eax,ebx
call dword 0xea4c
jmp short 0xec3f
mov edx,esp
mov eax,esi
call dword 0x10624
test al,al
jz 0xec33
mov edx,ebx
mov eax,[esp]
mov ecx,[eax]
call dword [ecx+0x24]
jmp short 0xec3f
push ebx
call dword 0xd6d0
push ebx
call dword 0xd6c8
pop edx
pop esi
pop ebx
ret
nop
test word [eax],0xbfe8
jnz 0xec51
mov word [eax],0x0
ret
call dword 0xebc8
ret
nop
push eax
call dword 0xec44
pop eax
ret
push ebp
mov ebp,esp
push ebx
mov ecx,[ebp+0x8]
add ecx,0xfffffd00
mov edx,[ecx+eax*8+0x4]
add edx,[ecx+eax*8]
mov ebx,[ebp+0x8]
cmp edx,[ebx+eax*4-0x100]
setg dl
dec eax
test dl,dl
jz 0xec8a
test eax,eax
jnl 0xec6d
mov eax,edx
pop ebx
pop ebp
ret
nop
push ebp
mov ebp,esp
push ebx
push esi
mov dl,0x1
mov ecx,[ebp+0x8]
inc dword [ecx+eax*4-0x100]
mov ecx,[ebp+0x8]
mov ecx,[ecx+eax*8-0x2fc]
mov ebx,ecx
mov esi,[ebp+0x8]
add ebx,[esi+eax*8-0x300]
mov esi,[ebp+0x8]
cmp ebx,[esi+eax*4-0x100]
jg 0xece5
test eax,eax
jnz 0xeccb
xor edx,edx
jmp short 0xece5
mov edx,[ebp+0x8]
mov edx,[ebp+0x8]
mov [edx+eax*4-0x100],ecx
mov edx,[ebp+0x8]
push edx
dec eax
call dword 0xec90
pop ecx
mov edx,eax
mov eax,edx
pop esi
pop ebx
pop ebp
ret
nop
push ebp
mov ebp,esp
add esp,0xfffffce0
push ebx
push esi
push edi
mov [ebp-0x308],ecx
mov ebx,edx
mov [ebp-0x304],eax
test byte [ebx+0x1],0x20
jnz 0xed16
mov eax,0x80070057
call dword 0xe918
movzx eax,word [ebx]
mov edx,eax
and dx,0xfff
cmp dx,byte +0xc
jnz dword 0xee9d
test ah,0x40
jz 0xed3c
mov eax,[ebx+0x8]
mov eax,[eax]
mov [ebp-0x314],eax
jmp short 0xed45
mov eax,[ebx+0x8]
mov [ebp-0x314],eax
mov eax,[ebp-0x314]
movzx eax,word [eax]
mov [ebp-0x310],eax
mov ebx,[ebp-0x310]
dec ebx
test ebx,ebx
jl 0xedca
inc ebx
xor edi,edi
lea esi,[ebp-0x300]
mov eax,esi
mov [ebp-0x320],eax
mov eax,[ebp-0x320]
add eax,byte +0x4
push eax
lea eax,[edi+0x1]
push eax
mov eax,[ebp-0x314]
push eax
call dword 0xdb38
call dword 0xe918
lea eax,[ebp-0x30c]
push eax
lea eax,[edi+0x1]
push eax
mov eax,[ebp-0x314]
push eax
call dword 0xdb40
call dword 0xe918
mov eax,[ebp-0x320]
mov edx,[ebp-0x30c]
sub edx,[eax+0x4]
inc edx
mov eax,[ebp-0x320]
mov [eax],edx
inc edi
add esi,byte +0x8
dec ebx
jnz 0xed68
lea eax,[ebp-0x300]
push eax
mov eax,[ebp-0x310]
push eax
push byte +0xc
call dword 0xdb30
mov esi,eax
test esi,esi
jnz 0xedea
call dword 0xe670
mov eax,[ebp-0x304]
call dword 0xec44
mov eax,[ebp-0x304]
mov word [eax],0x200c
mov eax,[ebp-0x304]
mov [eax+0x8],esi
mov ebx,[ebp-0x310]
dec ebx
test ebx,ebx
jl 0xee2e
inc ebx
lea eax,[ebp-0x2fc]
lea edx,[ebp-0x100]
mov ecx,[eax]
mov [edx],ecx
add edx,byte +0x4
add eax,byte +0x8
dec ebx
jnz 0xee21
push ebp
mov ebx,[ebp-0x310]
dec ebx
mov eax,ebx
call dword 0xec60
pop ecx
test al,al
jz 0xee8e
lea eax,[ebp-0x318]
push eax
lea eax,[ebp-0x100]
push eax
mov eax,[ebp-0x314]
push eax
call dword 0xdb48
call dword 0xe918
lea eax,[ebp-0x31c]
push eax
lea eax,[ebp-0x100]
push eax
push esi
call dword 0xdb48
call dword 0xe918
mov eax,[ebp-0x318]
mov edx,eax
mov eax,[ebp-0x31c]
call dword [ebp-0x308]
push ebp
mov eax,ebx
call dword 0xec90
pop ecx
test al,al
jnz 0xee2e
jmp short 0xeeaf
push ebx
mov eax,[ebp-0x304]
push eax
call dword 0xd6d8
call dword 0xe918
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret
mov eax,eax
call dword 0xef6c
ret
mov eax,eax
push ebx
push esi
push edi
push ecx
mov esi,edx
mov ebx,eax
test word [ebx],0xbfe8
jz 0xeed6
mov eax,ebx
call dword 0xebc8
movzx edi,word [esi]
cmp di,byte +0x14
jnc 0xeeed
push esi
push ebx
call dword 0xd6d8
call dword 0xe918
jmp short 0xef66
cmp di,0x100
jnz 0xef0b
mov word [ebx],0x100
xor eax,eax
mov [ebx+0x8],eax
lea eax,[ebx+0x8]
mov edx,[esi+0x8]
call dword 0x3a70
jmp short 0xef66
cmp di,0x101
jnz 0xef25
mov [ebx],di
mov eax,[esi+0x8]
mov [ebx+0x8],eax
mov eax,ebx
call dword [dword 0x46d984]
jmp short 0xef66
test di,0x2000
jz 0xef3c
mov ecx,0x40feb8
mov edx,esi
mov eax,ebx
call dword 0xecec
jmp short 0xef66
mov edx,esp
mov eax,edi
call dword 0x10624
test al,al
jz 0xef5a
push byte +0x0
mov ecx,esi
mov edx,ebx
mov eax,[esp+0x4]
mov ebx,[eax]
call dword [ebx+0x28]
jmp short 0xef66
push esi
push ebx
call dword 0xd6d8
call dword 0xe918
pop edx
pop edi
pop esi
pop ebx
ret
nop
push ebx
push esi
mov ebx,edx
mov esi,eax
cmp esi,ebx
jz 0xefac
test word [ebx],0xbfe8
jnz 0xefa3
test word [esi],0xbfe8
jz 0xef8b
mov eax,esi
call dword 0xebc8
mov eax,[ebx]
mov [esi],eax
mov eax,[ebx+0x4]
mov [esi+0x4],eax
mov eax,[ebx+0x8]
mov [esi+0x8],eax
mov eax,[ebx+0xc]
mov [esi+0xc],eax
jmp short 0xefac
mov edx,ebx
mov eax,esi
call dword 0xeec0
pop esi
pop ebx
ret
nop
push ebp
mov ebp,esp
push ebx
mov ebx,eax
mov eax,ebx
call dword 0x41d0
push eax
push byte +0x0
push dword 0x400
push dword [ebp+0xc]
push dword [ebp+0x8]
mov eax,[0x468b24]
mov eax,[eax]
call eax
mov cx,0x8
mov dx,0x6
call dword 0xe924
pop ebx
pop ebp
ret 0x8
mov eax,eax
push ebp
mov ebp,esp
push ebx
mov ebx,eax
mov eax,ebx
call dword 0x41d0
push eax
push byte +0x0
push dword 0x400
push dword [ebp+0xc]
push dword [ebp+0x8]
mov eax,[0x468cb4]
mov eax,[eax]
call eax
mov cx,0x8
mov dx,0x7
call dword 0xe924
pop ebx
pop ebp
ret 0x8
mov eax,eax
push ebp
mov ebp,esp
xor ecx,ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
mov ebx,edx
mov esi,eax
xor eax,eax
push ebp
push dword 0x4100d8
push dword [fs:eax]
mov [fs:eax],esp
mov eax,ebx
call dword 0x41d0
push eax
push byte +0x0
push dword 0x400
push esi
mov eax,[0x468da8]
mov eax,[eax]
call eax
mov cx,0x8
mov dx,0xb
call dword 0xe924
movzx eax,byte [dword 0x467a0c]
sub al,0x1
jc 0xf0bd
jz 0xf076
dec al
jz 0xf097
jmp short 0xf0b8
lea eax,[ebp-0x8]
mov edx,[ebx]
call dword 0x3ca4
mov eax,[ebp-0x8]
lea edx,[ebp-0x4]
call dword 0x7600
mov edx,[ebp-0x4]
mov eax,ebx
call dword 0x4338
jmp short 0xf0bd
lea eax,[ebp-0x10]
mov edx,[ebx]
call dword 0x3ca4
mov eax,[ebp-0x10]
lea edx,[ebp-0xc]
call dword 0x7578
mov edx,[ebp-0xc]
mov eax,ebx
call dword 0x4338
jmp short 0xf0bd
call dword 0xe580
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x4100df
lea eax,[ebp-0x10]
mov edx,0x4
call dword 0x3a40
ret
jmp dword 0x3384
jmp short 0xf0ca
pop esi
pop ebx
mov esp,ebp
pop ebp
ret
lea eax,[eax+0x0]
push ebp
mov ebp,esp
add esp,byte -0x18
push ebx
push esi
xor ecx,ecx
mov [ebp-0x14],ecx
mov [ebp-0x18],ecx
mov esi,edx
mov ebx,eax
xor eax,eax
push ebp
push dword 0x4101a7
push dword [fs:eax]
mov [fs:eax],esp
lea eax,[ebp-0x10]
push eax
call dword 0xd6c8
xor eax,eax
push ebp
push dword 0x410185
push dword [fs:eax]
mov [fs:eax],esp
push byte +0x8
push byte +0x0
push dword 0x400
push ebx
lea eax,[ebp-0x10]
push eax
mov eax,[0x468dc0]
mov eax,[eax]
call eax
movzx edx,word [ebx]
mov cx,0x100
call dword 0xe924
lea eax,[ebp-0x14]
push eax
lea eax,[ebp-0x18]
mov edx,[ebp-0x8]
call dword 0x42fc
mov eax,[ebp-0x18]
mov ecx,0x7fffffff
mov edx,0x1
call dword 0x4490
mov edx,[ebp-0x14]
mov eax,esi
call dword 0x3ca4
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x41018c
lea eax,[ebp-0x10]
call dword 0xec44
ret
jmp dword 0x3384
jmp short 0xf17c
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x4101ae
lea eax,[ebp-0x18]
mov edx,0x2
call dword 0x41e8
ret
jmp dword 0x3384
jmp short 0xf199
pop esi
pop ebx
mov esp,ebp
pop ebp
ret
push ebp
mov ebp,esp
add esp,byte -0x10
push ebx
push esi
mov esi,edx
mov ebx,eax
lea eax,[ebp-0x10]
push eax
call dword 0xd6c8
xor eax,eax
push ebp
push dword 0x41020a
push dword [fs:eax]
mov [fs:eax],esp
mov edx,ebx
lea eax,[ebp-0x10]
call dword 0xef6c
lea eax,[ebp-0x10]
call dword [dword 0x46d980]
lea edx,[ebp-0x10]
mov eax,esi
call dword 0xf2a0
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x410211
lea eax,[ebp-0x10]
call dword 0xec44
ret
jmp dword 0x3384
jmp short 0xf201
pop esi
pop ebx
mov esp,ebp
pop ebp
ret
nop
push ebp
mov ebp,esp
add esp,byte -0x1c
push ebx
mov [ebp-0x4],edx
mov ebx,eax
mov eax,[ebp-0x4]
test eax,eax
jz 0xf22f
xor edx,edx
mov [eax],edx
lea edx,[ebp-0xc]
movzx eax,word [ebx]
call dword 0x10624
mov [ebp-0x5],al
cmp byte [ebp-0x5],0x0
jz 0xf294
lea eax,[ebp-0x1c]
push eax
call dword 0xd6c8
xor eax,eax
push ebp
push dword 0x41028d
push dword [fs:eax]
mov [fs:eax],esp
push dword 0x100
mov ecx,ebx
lea edx,[ebp-0x1c]
mov eax,[ebp-0xc]
mov ebx,[eax]
call dword [ebx+0x1c]
mov eax,[ebp-0x4]
mov edx,[ebp-0x14]
call dword 0x3a70
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x410294
lea eax,[ebp-0x1c]
call dword 0xec44
ret
jmp dword 0x3384
jmp short 0xf284
movzx eax,byte [ebp-0x5]
pop ebx
mov esp,ebp
pop ebp
ret
lea eax,[eax+0x0]
push ebp
mov ebp,esp
mov ecx,0xe
push byte +0x0
push byte +0x0
dec ecx
jnz 0xf2a8
push ecx
push ebx
push esi
mov ebx,edx
mov esi,eax
xor eax,eax
push ebp
push dword 0x4107cc
push dword [fs:eax]
mov [fs:eax],esp
movzx eax,word [ebx]
movzx edx,ax
cmp edx,byte +0x14
ja dword 0xf509
jmp dword [edx*4+0x4102da]
add eax,[cs:ecx+0x0]
cmp al,[ebx]
inc ecx
add [edx+0x3],ah
inc ecx
add [ebp+0x3],bh
inc ecx
add [edi-0x47ffbefd],dl
add eax,[ecx+0x0]
fld dword [ebx]
inc ecx
add dh,dh
add eax,[ecx+0x0]
adc eax,[ecx+eax*2]
add al,dh
add al,0x41
add [ecx],cl
add eax,0x4380041
inc ecx
add bh,bl
add al,0x41
add al,dh
add al,0x41
add [ecx],cl
add eax,0x5090041
inc ecx
add [ebx+0x4],dl
inc ecx
add [esi+0x4],ch
inc ecx
add [ecx-0x5bffbefc],cl
add al,0x41
add dl,al
add al,0x41
add [ebx+0x46e7e8c6],cl
db 0xff
db 0xff
jmp dword 0xf77d
cmp byte [dword 0x467a00],0x0
jz 0xf350
mov dx,0x100
mov ax,0x1
call dword 0xe4e4
mov eax,esi
mov edx,[dword 0x467a04]
call dword 0x3a70
jmp dword 0xf77d
lea edx,[ebp-0x4]
movsx eax,word [ebx+0x8]
call dword 0x7bfc
mov edx,[ebp-0x4]
mov eax,esi
call dword 0x3a70
jmp dword 0xf77d
lea edx,[ebp-0x8]
mov eax,[ebx+0x8]
call dword 0x7bfc
mov edx,[ebp-0x8]
mov eax,esi
call dword 0x3a70
jmp dword 0xf77d
fld dword [ebx+0x8]
add esp,byte -0xc
fstp tword [esp]
wait lea eax,[ebp-0xc]
call dword 0x926c
mov edx,[ebp-0xc]
mov eax,esi
call dword 0x3a70
jmp dword 0xf77d
fld qword [ebx+0x8]
add esp,byte -0xc
fstp tword [esp]
wait lea eax,[ebp-0x10]
call dword 0x926c
mov edx,[ebp-0x10]
mov eax,esi
call dword 0x3a70
jmp dword 0xf77d
push dword [ebx+0xc]
push dword [ebx+0x8]
lea eax,[ebp-0x14]
call dword 0xefb0
mov edx,[ebp-0x14]
mov eax,esi
call dword 0x3ca4
jmp dword 0xf77d
push dword [ebx+0xc]
push dword [ebx+0x8]
lea eax,[ebp-0x18]
call dword 0xefe8
mov edx,[ebp-0x18]
mov eax,esi
call dword 0x3ca4
jmp dword 0xf77d
lea eax,[ebp-0x1c]
push eax
mov eax,[ebx+0x8]
mov ecx,0x7fffffff
mov edx,0x1
call dword 0x4490
mov edx,[ebp-0x1c]
mov eax,esi
call dword 0x3ca4
jmp dword 0xf77d
lea edx,[ebp-0x20]
movzx eax,word [ebx+0x8]
call dword 0xf020
mov edx,[ebp-0x20]
mov eax,esi
call dword 0x3ca4
jmp dword 0xf77d
lea edx,[ebp-0x24]
movsx eax,byte [ebx+0x8]
call dword 0x7bfc
mov edx,[ebp-0x24]
mov eax,esi
call dword 0x3a70
jmp dword 0xf77d
lea edx,[ebp-0x28]
movzx eax,byte [ebx+0x8]
call dword 0x7bfc
mov edx,[ebp-0x28]
mov eax,esi
call dword 0x3a70
jmp dword 0xf77d
lea edx,[ebp-0x2c]
movzx eax,word [ebx+0x8]
call dword 0x7bfc
mov edx,[ebp-0x2c]
mov eax,esi
call dword 0x3a70
jmp dword 0xf77d
mov eax,[ebx+0x8]
xor edx,edx
push edx
push eax
lea eax,[ebp-0x30]
call dword 0x7ce8
mov edx,[ebp-0x30]
mov eax,esi
call dword 0x3a70
jmp dword 0xf77d
push dword [ebx+0xc]
push dword [ebx+0x8]
lea eax,[ebp-0x34]
call dword 0x7ce8
mov edx,[ebp-0x34]
mov eax,esi
call dword 0x3a70
jmp dword 0xf77d
mov eax,[ebx+0x8]
mov edx,eax
mov eax,esi
call dword 0xf2a0
jmp dword 0xf77d
lea edx,[ebp-0x38]
mov eax,ebx
call dword 0xf0e8
mov edx,[ebp-0x38]
mov eax,esi
call dword 0x3a70
jmp dword 0xf77d
mov edx,eax
sub dx,0x100
jz 0xf519
dec dx
jz 0xf528
jmp short 0xf541
mov eax,esi
mov edx,[ebx+0x8]
call dword 0x3a70
jmp dword 0xf77d
lea edx,[ebp-0x3c]
mov eax,ebx
call dword 0xf1b4
mov edx,[ebp-0x3c]
mov eax,esi
call dword 0x3a70
jmp dword 0xf77d
test ah,0x40
jz dword 0xf755
movzx eax,ax
and eax,0xffffbfff
cmp eax,byte +0x14
ja dword 0xf73f
jmp dword [eax*4+0x410562]
aas
pop es
inc ecx
add [edi],bh
pop es
inc ecx
add [esi-0x2cffbefb],dh
add eax,0x5ef0041
inc ecx
add [edx],dl
push es
inc ecx
add [dword 0x54004106],dh
push es
inc ecx
add [ebx+0x6],dh
inc ecx
add [edi],bh
pop es
inc ecx
add [edi],bh
pop es
inc ecx
add [esi+eax+0x7310041],al
inc ecx
add [edi],bh
pop es
inc ecx
add [edi],bh
pop es
inc ecx
add [edi],bh
pop es
inc ecx
add [ecx-0x41ffbefa],ah
push es
inc ecx
add bl,bl
push es
inc ecx
add al,bh
push es
inc ecx
add [dword 0x8d004107],dl
push ebp
ror byte [ebx-0x40f0f7bd],byte 0x0
call dword 0x7bfc
mov edx,[ebp-0x40]
mov eax,esi
call dword 0x3a70
jmp dword 0xf77d
lea edx,[ebp-0x44]
mov eax,[ebx+0x8]
mov eax,[eax]
call dword 0x7bfc
mov edx,[ebp-0x44]
mov eax,esi
call dword 0x3a70
jmp dword 0xf77d
mov eax,[ebx+0x8]
fld dword [eax]
add esp,byte -0xc
fstp tword [esp]
wait lea eax,[ebp-0x48]
call dword 0x926c
mov edx,[ebp-0x48]
mov eax,esi
call dword 0x3a70
jmp dword 0xf77d
mov eax,[ebx+0x8]
fld qword [eax]
add esp,byte -0xc
fstp tword [esp]
wait lea eax,[ebp-0x4c]
call dword 0x926c
mov edx,[ebp-0x4c]
mov eax,esi
call dword 0x3a70
jmp dword 0xf77d
mov eax,[ebx+0x8]
push dword [eax+0x4]
push dword [eax]
lea eax,[ebp-0x50]
call dword 0xefb0
mov edx,[ebp-0x50]
mov eax,esi
call dword 0x3ca4
jmp dword 0xf77d
mov eax,[ebx+0x8]
push dword [eax+0x4]
push dword [eax]
lea eax,[ebp-0x54]
call dword 0xefe8
mov edx,[ebp-0x54]
mov eax,esi
call dword 0x3ca4
jmp dword 0xf77d
mov eax,esi
mov edx,[ebx+0x8]
mov edx,[edx]
call dword 0x3c44
jmp dword 0xf77d
lea edx,[ebp-0x58]
mov eax,[ebx+0x8]
movzx eax,word [eax]
call dword 0xf020
mov edx,[ebp-0x58]
mov eax,esi
call dword 0x3ca4
jmp dword 0xf77d
lea edx,[ebp-0x5c]
mov eax,[ebx+0x8]
movsx eax,byte [eax]
call dword 0x7bfc
mov edx,[ebp-0x5c]
mov eax,esi
call dword 0x3a70
jmp dword 0xf77d
lea edx,[ebp-0x60]
mov eax,[ebx+0x8]
movzx eax,byte [eax]
call dword 0x7bfc
mov edx,[ebp-0x60]
mov eax,esi
call dword 0x3a70
jmp dword 0xf77d
lea edx,[ebp-0x64]
mov eax,[ebx+0x8]
movzx eax,word [eax]
call dword 0x7bfc
mov edx,[ebp-0x64]
mov eax,esi
call dword 0x3a70
jmp dword 0xf77d
mov eax,[ebx+0x8]
mov eax,[eax]
xor edx,edx
push edx
push eax
lea eax,[ebp-0x68]
call dword 0x7ce8
mov edx,[ebp-0x68]
mov eax,esi
call dword 0x3a70
jmp short 0xf77d
mov eax,[ebx+0x8]
push dword [eax+0x4]
push dword [eax]
lea eax,[ebp-0x6c]
call dword 0x7ce8
mov edx,[ebp-0x6c]
mov eax,esi
call dword 0x3a70
jmp short 0xf77d
mov eax,[ebx+0x8]
mov edx,eax
mov eax,esi
call dword 0xf2a0
jmp short 0xf77d
lea edx,[ebp-0x70]
mov eax,ebx
call dword 0xf0e8
mov edx,[ebp-0x70]
mov eax,esi
call dword 0x3a70
jmp short 0xf77d
mov eax,esi
call dword 0x3a1c
mov edx,eax
mov eax,ebx
call dword 0xf218
test al,al
jnz 0xf77d
lea edx,[ebp-0x74]
mov eax,ebx
call dword 0xf0e8
mov edx,[ebp-0x74]
mov eax,esi
call dword 0x3a70
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x4107d3
lea eax,[ebp-0x74]
mov edx,0x7
call dword 0x3a40
lea eax,[ebp-0x58]
mov edx,0x3
call dword 0x41e8
lea eax,[ebp-0x4c]
mov edx,0xb
call dword 0x3a40
lea eax,[ebp-0x20]
mov edx,0x4
call dword 0x41e8
lea eax,[ebp-0x10]
mov edx,0x4
call dword 0x3a40
ret
jmp dword 0x3384
jmp short 0xf78a
pop esi
pop ebx
mov esp,ebp
pop ebp
ret
lea eax,[eax+0x0]
push ebp
mov ebp,esp
add esp,byte -0x14
push ebx
push esi
xor ecx,ecx
mov [ebp-0x14],ecx
mov esi,edx
mov ebx,eax
xor eax,eax
push ebp
push dword 0x410886
push dword [fs:eax]
mov [fs:eax],esp
lea eax,[ebp-0x10]
push eax
call dword 0xd6c8
xor eax,eax
push ebp
push dword 0x410869
push dword [fs:eax]
mov [fs:eax],esp
push byte +0x8
push byte +0x0
push dword 0x400
push ebx
lea eax,[ebp-0x10]
push eax
mov eax,[0x468dc0]
mov eax,[eax]
call eax
movzx edx,word [ebx]
mov cx,0x8
call dword 0xe924
push esi
lea eax,[ebp-0x14]
mov edx,[ebp-0x8]
call dword 0x42fc
mov eax,[ebp-0x14]
mov ecx,0x7fffffff
mov edx,0x1
call dword 0x4490
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x410870
lea eax,[ebp-0x10]
call dword 0xec44
ret
jmp dword 0x3384
jmp short 0xf860
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x41088d
lea eax,[ebp-0x14]
call dword 0x41d0
ret
jmp dword 0x3384
jmp short 0xf87d
pop esi
pop ebx
mov esp,ebp
pop ebp
ret
nop
push ebp
mov ebp,esp
add esp,byte -0x10
push ebx
push esi
mov esi,edx
mov ebx,eax
lea eax,[ebp-0x10]
push eax
call dword 0xd6c8
xor eax,eax
push ebp
push dword 0x4108ea
push dword [fs:eax]
mov [fs:eax],esp
mov edx,ebx
lea eax,[ebp-0x10]
call dword 0xef6c
lea eax,[ebp-0x10]
call dword [dword 0x46d980]
lea edx,[ebp-0x10]
mov eax,esi
call dword 0xf9c0
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x4108f1
lea eax,[ebp-0x10]
call dword 0xec44
ret
jmp dword 0x3384
jmp short 0xf8e1
pop esi
pop ebx
mov esp,ebp
pop ebp
ret
nop
push ebp
mov ebp,esp
add esp,byte -0x20
push ebx
xor ecx,ecx
mov [ebp-0x20],ecx
mov [ebp-0x4],edx
mov ebx,eax
mov eax,[ebp-0x4]
test eax,eax
jz 0xf914
xor edx,edx
mov [eax],edx
xor eax,eax
push ebp
push dword 0x4109b0
push dword [fs:eax]
mov [fs:eax],esp
lea edx,[ebp-0xc]
movzx eax,word [ebx]
call dword 0x10624
mov [ebp-0x5],al
cmp byte [ebp-0x5],0x0
jz 0xf99a
lea eax,[ebp-0x1c]
push eax
call dword 0xd6c8
xor eax,eax
push ebp
push dword 0x410993
push dword [fs:eax]
mov [fs:eax],esp
push byte +0x8
mov ecx,ebx
lea edx,[ebp-0x1c]
mov eax,[ebp-0xc]
mov ebx,[eax]
call dword [ebx+0x1c]
mov eax,[ebp-0x4]
push eax
lea eax,[ebp-0x20]
mov edx,[ebp-0x14]
call dword 0x42fc
mov eax,[ebp-0x20]
mov ecx,0x7fffffff
mov edx,0x1
call dword 0x4490
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x41099a
lea eax,[ebp-0x1c]
call dword 0xec44
ret
jmp dword 0x3384
jmp short 0xf98a
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x4109b7
lea eax,[ebp-0x20]
call dword 0x41d0
ret
jmp dword 0x3384
jmp short 0xf9a7
movzx eax,byte [ebp-0x5]
pop ebx
mov esp,ebp
pop ebp
ret
push ebp
mov ebp,esp
mov ecx,0xe
push byte +0x0
push byte +0x0
dec ecx
jnz 0xf9c8
push ebx
push esi
mov ebx,edx
mov esi,eax
xor eax,eax
push ebp
push dword 0x410f05
push dword [fs:eax]
mov [fs:eax],esp
movzx eax,word [ebx]
movzx edx,ax
cmp edx,byte +0x14
ja dword 0xfc1b
jmp dword [edx*4+0x4109f9]
dec ebp
or al,[ecx+0x0]
pop ecx
or al,[ecx+0x0]
or dword [edx],0xa9c0041
inc ecx
add [esi-0x28ffbef6],dh
or al,[ecx+0x0]
clc
or al,[ecx+0x0]
adc eax,0x3200410b
or eax,[ecx+0x0]
add cl,[ecx+eax*2]
add [ebx],bl
or al,0x41
add [edx+0xb],cl
inc ecx
add cl,dh
or eax,[ecx+0x0]
add cl,[ecx+eax*2]
add [ebx],bl
or al,0x41
add [ebx],bl
or al,0x41
add [ebp+0xb],ah
inc ecx
add [eax-0x64ffbef5],al
or eax,[ecx+0x0]
mov dh,0xb
inc ecx
add ah,dl
or eax,[ecx+0x0]
mov eax,esi
call dword 0x41d0
jmp dword 0xfe8f
cmp byte [dword 0x467a00],0x0
jz 0xfa6f
mov dx,0x8
mov ax,0x1
call dword 0xe4e4
mov eax,esi
mov edx,[dword 0x467a04]
call dword 0x4338
jmp dword 0xfe8f
lea edx,[ebp-0x4]
movsx eax,word [ebx+0x8]
call dword 0x7bfc
mov edx,[ebp-0x4]
mov eax,esi
call dword 0x4338
jmp dword 0xfe8f
lea edx,[ebp-0x8]
mov eax,[ebx+0x8]
call dword 0x7bfc
mov edx,[ebp-0x8]
mov eax,esi
call dword 0x4338
jmp dword 0xfe8f
fld dword [ebx+0x8]
add esp,byte -0xc
fstp tword [esp]
wait lea eax,[ebp-0xc]
call dword 0x926c
mov edx,[ebp-0xc]
mov eax,esi
call dword 0x4338
jmp dword 0xfe8f
fld qword [ebx+0x8]
add esp,byte -0xc
fstp tword [esp]
wait lea eax,[ebp-0x10]
call dword 0x926c
mov edx,[ebp-0x10]
mov eax,esi
call dword 0x4338
jmp dword 0xfe8f
push dword [ebx+0xc]
push dword [ebx+0x8]
lea eax,[ebp-0x14]
call dword 0xefb0
mov edx,[ebp-0x14]
mov eax,esi
call dword 0x420c
jmp dword 0xfe8f
push dword [ebx+0xc]
push dword [ebx+0x8]
lea eax,[ebp-0x18]
call dword 0xefe8
mov edx,[ebp-0x18]
mov eax,esi
call dword 0x420c
jmp dword 0xfe8f
push esi
mov eax,[ebx+0x8]
mov ecx,0x7fffffff
mov edx,0x1
call dword 0x4490
jmp dword 0xfe8f
lea edx,[ebp-0x1c]
movzx eax,word [ebx+0x8]
call dword 0xf020
mov edx,[ebp-0x1c]
mov eax,esi
call dword 0x420c
jmp dword 0xfe8f
lea edx,[ebp-0x20]
movsx eax,byte [ebx+0x8]
call dword 0x7bfc
mov edx,[ebp-0x20]
mov eax,esi
call dword 0x4338
jmp dword 0xfe8f
lea edx,[ebp-0x24]
movzx eax,byte [ebx+0x8]
call dword 0x7bfc
mov edx,[ebp-0x24]
mov eax,esi
call dword 0x4338
jmp dword 0xfe8f
lea edx,[ebp-0x28]
movzx eax,word [ebx+0x8]
call dword 0x7bfc
mov edx,[ebp-0x28]
mov eax,esi
call dword 0x4338
jmp dword 0xfe8f
mov eax,[ebx+0x8]
xor edx,edx
push edx
push eax
lea eax,[ebp-0x2c]
call dword 0x7ce8
mov edx,[ebp-0x2c]
mov eax,esi
call dword 0x4338
jmp dword 0xfe8f
push dword [ebx+0xc]
push dword [ebx+0x8]
lea eax,[ebp-0x30]
call dword 0x7ce8
mov edx,[ebp-0x30]
mov eax,esi
call dword 0x4338
jmp dword 0xfe8f
mov eax,[ebx+0x8]
mov edx,eax
mov eax,esi
call dword 0xf9c0
jmp dword 0xfe8f
lea edx,[ebp-0x34]
mov eax,ebx
call dword 0xf7dc
mov edx,[ebp-0x34]
mov eax,esi
call dword 0x420c
jmp dword 0xfe8f
mov edx,eax
sub dx,0x100
jz 0xfc2b
dec dx
jz 0xfc3a
jmp short 0xfc53
mov eax,esi
mov edx,[ebx+0x8]
call dword 0x4338
jmp dword 0xfe8f
lea edx,[ebp-0x38]
mov eax,ebx
call dword 0xf894
mov edx,[ebp-0x38]
mov eax,esi
call dword 0x420c
jmp dword 0xfe8f
test ah,0x40
jz dword 0xfe67
movzx eax,ax
and eax,0xffffbfff
cmp eax,byte +0x14
ja dword 0xfe51
jmp dword [eax*4+0x410c74]
push ecx
push cs
inc ecx
add [ecx+0xe],dl
inc ecx
add al,cl
or al,0x41
add ch,ah
or al,0x41
add [ecx],al
or eax,0xd240041
inc ecx
add [edi+0xd],al
inc ecx
add [esi+0xd],ah
inc ecx
add [ebp+0x5100410d],al
push cs
inc ecx
add [ecx+0xe],dl
inc ecx
add [esi+0x4300410d],dl
push cs
inc ecx
add [ecx+0xe],dl
inc ecx
add [ecx+0xe],dl
inc ecx
add [ecx+0xe],dl
inc ecx
add [ebx-0x2fffbef3],dh
or eax,0xded0041
inc ecx
add [edx],cl
push cs
inc ecx
add [edi],ah
push cs
inc ecx
add [ebp+0x438bc455],cl
or [edi],cl
mov edi,0x7f26e800
db 0xff
dec dword [ebx-0x39743bab]
call dword 0x4338
jmp dword 0xfe8f
lea edx,[ebp-0x40]
mov eax,[ebx+0x8]
mov eax,[eax]
call dword 0x7bfc
mov edx,[ebp-0x40]
mov eax,esi
call dword 0x4338
jmp dword 0xfe8f
mov eax,[ebx+0x8]
fld dword [eax]
add esp,byte -0xc
fstp tword [esp]
wait lea eax,[ebp-0x44]
call dword 0x926c
mov edx,[ebp-0x44]
mov eax,esi
call dword 0x4338
jmp dword 0xfe8f
mov eax,[ebx+0x8]
fld qword [eax]
add esp,byte -0xc
fstp tword [esp]
wait lea eax,[ebp-0x48]
call dword 0x926c
mov edx,[ebp-0x48]
mov eax,esi
call dword 0x4338
jmp dword 0xfe8f
mov eax,[ebx+0x8]
push dword [eax+0x4]
push dword [eax]
lea eax,[ebp-0x4c]
call dword 0xefb0
mov edx,[ebp-0x4c]
mov eax,esi
call dword 0x420c
jmp dword 0xfe8f
mov eax,[ebx+0x8]
push dword [eax+0x4]
push dword [eax]
lea eax,[ebp-0x50]
call dword 0xefe8
mov edx,[ebp-0x50]
mov eax,esi
call dword 0x420c
jmp dword 0xfe8f
mov eax,esi
mov edx,[ebx+0x8]
mov edx,[edx]
call dword 0x42fc
jmp dword 0xfe8f
lea edx,[ebp-0x54]
mov eax,[ebx+0x8]
movzx eax,word [eax]
call dword 0xf020
mov edx,[ebp-0x54]
mov eax,esi
call dword 0x420c
jmp dword 0xfe8f
lea edx,[ebp-0x58]
mov eax,[ebx+0x8]
movsx eax,byte [eax]
call dword 0x7bfc
mov edx,[ebp-0x58]
mov eax,esi
call dword 0x4338
jmp dword 0xfe8f
lea edx,[ebp-0x5c]
mov eax,[ebx+0x8]
movzx eax,byte [eax]
call dword 0x7bfc
mov edx,[ebp-0x5c]
mov eax,esi
call dword 0x4338
jmp dword 0xfe8f
lea edx,[ebp-0x60]
mov eax,[ebx+0x8]
movzx eax,word [eax]
call dword 0x7bfc
mov edx,[ebp-0x60]
mov eax,esi
call dword 0x4338
jmp dword 0xfe8f
mov eax,[ebx+0x8]
mov eax,[eax]
xor edx,edx
push edx
push eax
lea eax,[ebp-0x64]
call dword 0x7ce8
mov edx,[ebp-0x64]
mov eax,esi
call dword 0x4338
jmp short 0xfe8f
mov eax,[ebx+0x8]
push dword [eax+0x4]
push dword [eax]
lea eax,[ebp-0x68]
call dword 0x7ce8
mov edx,[ebp-0x68]
mov eax,esi
call dword 0x4338
jmp short 0xfe8f
mov eax,[ebx+0x8]
mov edx,eax
mov eax,esi
call dword 0xf9c0
jmp short 0xfe8f
lea edx,[ebp-0x6c]
mov eax,ebx
call dword 0xf7dc
mov edx,[ebp-0x6c]
mov eax,esi
call dword 0x420c
jmp short 0xfe8f
mov eax,esi
call dword 0x41d0
mov edx,eax
mov eax,ebx
call dword 0xf8f8
test al,al
jnz 0xfe8f
lea edx,[ebp-0x70]
mov eax,ebx
call dword 0xf7dc
mov edx,[ebp-0x70]
mov eax,esi
call dword 0x420c
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x410f0c
lea eax,[ebp-0x70]
mov edx,0x2
call dword 0x41e8
lea eax,[ebp-0x68]
mov edx,0x5
call dword 0x3a40
lea eax,[ebp-0x54]
mov edx,0x3
call dword 0x41e8
lea eax,[ebp-0x48]
mov edx,0x4
call dword 0x3a40
lea eax,[ebp-0x38]
mov edx,0x2
call dword 0x41e8
lea eax,[ebp-0x30]
mov edx,0x5
call dword 0x3a40
lea eax,[ebp-0x1c]
mov edx,0x3
call dword 0x41e8
lea eax,[ebp-0x10]
mov edx,0x4
call dword 0x3a40
ret
jmp dword 0x3384
jmp short 0xfe9c
pop esi
pop ebx
mov esp,ebp
pop ebp
ret
mov eax,eax
push ebx
push esi
push edi
mov ebx,ecx
mov esi,edx
mov edi,eax
test word [edi],0xbfe8
jz 0xff2b
mov eax,edi
call dword 0xebc8
cmp byte [dword 0x467a08],0x0
jz 0xff44
movsx eax,bl
movzx eax,word [eax*2+0x467a1c]
mov [edi],ax
jmp short 0xff49
mov word [edi],0x3
mov [edi+0x8],esi
pop edi
pop esi
pop ebx
ret
push ebp
mov ebp,esp
push ebx
mov ebx,eax
test word [ebx],0xbfe8
jz 0xff64
mov eax,ebx
call dword 0xebc8
mov word [ebx],0x14
mov eax,[ebp+0x8]
mov [ebx+0x8],eax
mov eax,[ebp+0xc]
mov [ebx+0xc],eax
pop ebx
pop ebp
ret 0x8
mov eax,eax
push ebx
push esi
mov ebx,edx
mov esi,eax
test word [esi],0xbfe8
jz 0xff90
mov eax,esi
call dword 0xebc8
mov word [esi],0xb
cmp bl,0x1
cmc
sbb eax,eax
mov [esi+0x8],ax
pop esi
pop ebx
ret
mov eax,eax
push eax
call dword 0xec44
pop eax
mov word [eax],0x5
fstp qword [eax+0x8]
wait ret
lea eax,[eax+0x0]
push eax
call dword 0xec44
pop eax
mov word [eax],0x7
fstp qword [eax+0x8]
wait ret
lea eax,[eax+0x0]
push eax
call dword 0xec44
pop eax
mov word [eax],0x6
fistp qword [eax+0x8]
wait ret
lea eax,[eax+0x0]
push ebx
push esi
mov esi,edx
mov ebx,eax
test word [ebx],0xbfe8
jz 0xfff4
mov eax,ebx
call dword 0xebc8
xor eax,eax
mov [ebx+0x8],eax
mov word [ebx],0x100
lea eax,[ebx+0x8]
mov edx,esi
call dword 0x3a70
pop esi
pop ebx
ret
nop
push ebx
push esi
mov esi,edx
mov ebx,eax
test word [ebx],0xbfe8
jz 0x10020
mov eax,ebx
call dword 0xebc8
xor eax,eax
mov [ebx+0x8],eax
mov word [ebx],0x8
lea eax,[ebx+0x8]
push eax
mov ecx,0x7fffffff
mov edx,0x1
mov eax,esi
call dword 0x4490
pop esi
pop ebx
ret
mov eax,eax
cmp word [eax],byte +0x8
jc 0x10064
push dword [eax+0xc]
push dword [eax+0x8]
push dword [eax+0x4]
push dword [eax]
mov word [eax],0x0
mov edx,esp
call dword 0xef6c
add esp,byte +0x10
ret
lea eax,[eax+0x0]
db 0xff
db 0xff
db 0xff
inc dword [dword 0x45000000]
insd
jo 0x100e8
jns 0x10076
add [eax],al
db 0xff
db 0xff
db 0xff
inc dword [eax+eax]
add [eax],al
dec esi
jnz 0x100ef
insb
add [eax],al
add [eax],al
db 0xff
db 0xff
db 0xff
dec dword [eax]
add [eax],al
add [ebx+0x6d],dl
popad
insb
insb
imul ebp,[esi+0x74],dword 0x0
db 0xff
db 0xff
db 0xff
inc dword [edi]
add [eax],al
add [ecx+0x6e],cl
jz 0x1010d
gs jc 0x100ac
db 0xff
db 0xff
db 0xff
inc dword [esi]
add [eax],al
add [ebx+0x69],dl
outsb
a16 insb
add [gs:eax],al
db 0xff
db 0xff
db 0xff
inc dword [esi]
add [eax],al
add [edi+ebp*2+0x75],al
bound ebp,[ebp+0x0]
add bh,bh
db 0xff
db 0xff
dec dword [eax]
add [eax],al
add [ebx+0x75],al
jc 0x1014a
gs outsb
arpl [ecx+0x0],di
add [eax],al
add bh,bh
db 0xff
db 0xff
inc dword [eax+eax]
add [eax],al
inc esp
popad
jz 0x10151
add [eax],al
add [eax],al
db 0xff
db 0xff
db 0xff
inc dword [esi]
add [eax],al
add [edi+0x6c],cl
gs push ebx
jz 0x10170
add [eax],al
db 0xff
db 0xff
db 0xff
dec dword [eax]
add [eax],al
add [ecx+ebp*2+0x73],al
jo 0x1016e
jz 0x10172
push dword 0x0
db 0xff
db 0xff
db 0xff
inc dword [dword 0x45000000]
jc 0x10191
outsd
jc 0x10122
add [eax],al
db 0xff
db 0xff
db 0xff
inc dword [edi]
add [eax],al
add [edx+0x6f],al
outsd
insb
gs popad
outsb
add bh,bh
db 0xff
db 0xff
inc dword [edi]
add [eax],al
add [esi+0x61],dl
jc 0x101a9
popad
outsb
jz 0x10144
db 0xff
db 0xff
db 0xff
inc dword [edi]
add [eax],al
add [ebp+0x6e],dl
imul ebp,[esi+0x6f],byte +0x77
outsb
add bh,bh
db 0xff
db 0xff
inc dword [edi]
add [eax],al
add [ebp+0x63],al
imul ebp,[ebp+0x61],dword 0xffff006c
db 0xff
inc dword [ebx]
add [eax],al
add [eax+esi],ah
inc esi
add bh,bh
db 0xff
db 0xff
dec dword [eax]
add [eax],al
add [ebx+0x68],dl
outsd
jc 0x101f1
dec ecx
outsb
jz 0x10181
add [eax],al
add bh,bh
db 0xff
db 0xff
inc dword [eax+eax]
add [eax],al
inc edx
jns 0x10203
add [gs:eax],al
add [eax],al
db 0xff
db 0xff
db 0xff
inc dword [eax+eax]
add [eax],al
push edi
outsd
jc 0x10204
add [eax],al
add [eax],al
db 0xff
db 0xff
db 0xff
dec dword [eax]
add [eax],al
add [edi+ebp*2+0x6e],cl
push edi
outsd
jc 0x10218
add [eax],al
add [eax],al
db 0xff
db 0xff
db 0xff
inc dword [dword 0x49000000]
outsb
jz 0x101fa
xor al,0x0
add [eax],al
push ebp
mov ebp,esp
add esp,0xfffffdf8
push ebx
push esi
push edi
xor ecx,ecx
mov [ebp-0x208],ecx
mov esi,edx
mov ebx,eax
xor eax,eax
push ebp
push dword 0x4112ee
push dword [fs:eax]
mov [fs:eax],esp
mov edi,ebx
and di,0xfff
cmp di,byte +0x14
ja 0x10211
mov eax,esi
movzx edx,di
mov edx,[edx*4+0x467a28]
call dword 0x3a70
jmp dword 0x102af
cmp bx,0x100
jnz 0x10229
mov eax,esi
mov edx,0x411304
call dword 0x3a70
jmp dword 0x102af
cmp bx,0x101
jnz 0x1023e
mov eax,esi
mov edx,0x411314
call dword 0x3a70
jmp short 0x102af
lea edx,[ebp-0x4]
mov eax,ebx
call dword 0x10624
test al,al
jz 0x10287
lea eax,[ebp-0x104]
push eax
lea edx,[ebp-0x204]
mov eax,[ebp-0x4]
mov eax,[eax]
call dword 0x2ad0
lea eax,[ebp-0x204]
mov ecx,0x7fffffff
mov edx,0x2
call dword 0x1fec
lea edx,[ebp-0x104]
mov eax,esi
call dword 0x3c80
jmp short 0x102af
lea ecx,[ebp-0x208]
movzx eax,di
mov edx,0x4
call dword 0x7d10
mov ecx,[ebp-0x208]
mov edx,[dword 0x468e38]
mov edx,[edx]
mov eax,esi
call dword 0x3d34
test bh,0x20
jz 0x102c2
mov ecx,[esi]
mov eax,esi
mov edx,0x411320
call dword 0x3d34
test bh,0x40
jz 0x102d5
mov ecx,[esi]
mov eax,esi
mov edx,0x411330
call dword 0x3d34
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x4112f5
lea eax,[ebp-0x208]
call dword 0x3a1c
ret
jmp dword 0x3384
jmp short 0x102e2
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret
db 0xff
db 0xff
db 0xff
inc dword [esi]
add [eax],al
add [ebx+0x74],dl
jc 0x10371
outsb
add [bx+si],al
db 0xff
db 0xff
db 0xff
inc dword [ebx]
add [eax],al
add [ecx+0x6e],al
jns 0x10318
db 0xff
db 0xff
db 0xff
inc dword [esi]
add [eax],al
add [ecx+0x72],al
jc 0x10385
jns 0x10346
add [eax],al
db 0xff
db 0xff
db 0xff
inc dword [esi]
add [eax],al
add [edx+0x79],al
push edx
o16 and [gs:eax],al
add [ebx+0x56],dl
mov esi,edx
mov ebx,eax
mov eax,ebx
call dword 0xec44
mov word [ebx],0xa
mov [ebx+0x8],esi
pop esi
pop ebx
ret
mov edx,0x80020004
call dword 0x10338
ret
nop
pushad
adc eax,[ecx+0x0]
adc [ebx],eax
xor [cs:edx],dh
add al,0x0
add [eax],al
add [eax],al
add [eax],al
db 0xff
db 0xff
db 0xff
jmp dword [edi+ebp*8+0x56080040]
popad
jc 0x103e3
popad
outsb
jz 0x103f1
mov eax,eax
push ebp
mov ebp,esp
push ebx
push esi
mov esi,0x46d98c
push dword 0x46d990
call dword 0x5ab0
xor edx,edx
push ebp
push dword 0x4113e1
push dword [fs:edx]
mov [fs:edx],esp
mov eax,[esi]
call dword 0x49d0
mov ebx,eax
dec ebx
cmp ebx,byte +0x0
jl 0x103c9
mov eax,[esi]
mov eax,[eax+ebx*4]
cmp eax,[dword 0x467a10]
jz 0x103c3
call dword 0x2bf0
dec ebx
cmp ebx,byte -0x1
jnz 0x103b1
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x4113e8
push dword 0x46d990
call dword 0x5ba0
ret
jmp dword 0x3384
jmp short 0x103d6
pop esi
pop ebx
pop ebp
ret
push ebp
mov ebp,esp
call dword 0x105ac
pop ebp
ret 0x4
push ebx
push esi
push edi
push ecx
mov esi,ecx
mov edi,edx
mov ebx,eax
mov edx,esp
movzx eax,word [esi]
call dword 0x10624
test al,al
jz 0x10424
movzx eax,word [ebx+0x4]
push eax
mov ecx,esi
mov edx,edi
mov eax,[esp+0x4]
mov ebx,[eax]
call dword [ebx+0x1c]
jmp short 0x1042b
mov eax,ebx
call dword 0x105a4
pop edx
pop edi
pop esi
pop ebx
ret
push ebp
mov ebp,esp
add esp,byte -0x8
push ebx
push esi
push edi
mov esi,ecx
mov [ebp-0x4],edx
mov ebx,eax
mov edi,[ebp+0x8]
cmp di,[ebx+0x4]
jz 0x10468
lea edx,[ebp-0x8]
movzx eax,word [esi]
call dword 0x10624
test al,al
jz 0x10468
push edi
mov ecx,esi
mov edx,[ebp-0x4]
mov eax,[ebp-0x8]
mov ebx,[eax]
call dword [ebx+0x1c]
jmp short 0x1046f
mov eax,ebx
call dword 0x105a4
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
ret 0x4
push ebp
mov ebp,esp
call dword 0x105ac
pop ebp
ret 0x4
push ebp
mov ebp,esp
push ecx
push ebx
push esi
push edi
mov edi,edx
mov esi,eax
lea eax,[ebp-0x1]
push eax
mov edx,edi
mov eax,esi
mov ebx,[eax]
call dword [ebx+0x38]
movzx eax,byte [ebp-0x1]
mov edx,[ebp+0x8]
lea edx,[edx+edx*2]
add edx,0x467a7c
movzx eax,byte [edx+eax-0x2a]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
ret 0x4
lea eax,[eax+0x0]
push ebx
push esi
push edi
push ebp
push ecx
mov esi,ecx
mov edi,edx
mov ebx,eax
mov ecx,esp
mov edx,esi
mov eax,ebx
mov ebp,[eax]
call dword [ebp+0xc]
test al,al
jz 0x104e8
movzx eax,word [esp]
push eax
mov ecx,esi
mov edx,edi
mov eax,ebx
mov ebx,[eax]
call dword [ebx+0x1c]
jmp short 0x104ef
mov eax,ebx
call dword 0x105a4
pop edx
pop ebp
pop edi
pop esi
pop ebx
ret
lea eax,[eax+0x0]
push ebp
mov ebp,esp
add esp,byte -0x8
call dword 0x2fbc
mov [ebp-0x5],dl
mov [ebp-0x4],eax
push dword 0x46d990
call dword 0x5ab0
xor edx,edx
push ebp
push dword 0x41155b
push dword [fs:edx]
mov [fs:edx],esp
mov eax,[ebp-0x4]
movzx eax,word [eax+0x4]
test ax,ax
jz 0x10543
movzx eax,ax
mov edx,[dword 0x46d98c]
mov ecx,[dword 0x467a10]
mov [edx+eax*4-0x400],ecx
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x411562
push dword 0x46d990
call dword 0x5ba0
ret
jmp dword 0x3384
jmp short 0x10550
movzx edx,byte [ebp-0x5]
and dl,0xfc
mov eax,[ebp-0x4]
call dword 0x2be0
cmp byte [ebp-0x5],0x0
jng 0x1057f
mov eax,[ebp-0x4]
call dword 0x2f64
pop ecx
pop ecx
pop ebp
ret
nop
xor eax,eax
ret
nop
push ebp
mov ebp,esp
mov edx,[ebp+0x8]
movzx eax,word [eax+0x4]
mov [edx],ax
mov al,0x1
pop ebp
ret 0x4
nop
mov word [ecx],0x8
mov al,0x1
ret
call dword 0xe490
ret
mov eax,eax
call dword 0xe580
ret
mov eax,eax
call dword 0xe958
ret
mov eax,eax
push ebp
mov ebp,esp
mov edx,[ebp+0x8]
movzx eax,word [eax+0x4]
mov [edx],ax
mov al,0x1
pop ebp
ret 0x4
nop
call dword 0x105ac
ret
mov eax,eax
push ebp
mov ebp,esp
call dword 0x105b4
pop ebp
ret 0x8
push ebp
mov ebp,esp
or eax,byte -0x1
pop ebp
ret 0x4
mov eax,eax
push ebp
mov ebp,esp
or eax,byte -0x1
pop ebp
ret 0x4
mov eax,eax
push ebp
mov ebp,esp
push ebx
mov ebx,[ebp+0x8]
mov ecx,[ebp+0x10]
mov edx,[ebp+0xc]
mov eax,ebx
call dword 0x2ca4
test al,al
jz 0x10618
xor eax,eax
jmp short 0x1061d
mov eax,0x80004002
pop ebx
pop ebp
ret 0xc
mov eax,eax
push ebp
mov ebp,esp
push ecx
push ebx
push esi
push edi
mov esi,edx
mov ebx,eax
cmp dword [dword 0x46d98c],byte +0x0
jz 0x10646
cmp bx,0x100
jc 0x10646
cmp bx,0x7ff
jna 0x1064a
xor eax,eax
jmp short 0x1064c
mov al,0x1
mov [ebp-0x1],al
cmp byte [ebp-0x1],0x0
jz 0x106d3
push dword 0x46d990
call dword 0x5ab0
xor eax,eax
push ebp
push dword 0x4116cc
push dword [fs:eax]
mov [fs:eax],esp
mov eax,[0x46d98c]
call dword 0x49d0
movzx edi,bx
mov edx,edi
sub edx,0x100
cmp eax,edx
setg [ebp-0x1]
cmp byte [ebp-0x1],0x0
jz 0x106b4
mov eax,[0x46d98c]
mov eax,[eax+edi*4-0x400]
mov [esi],eax
cmp dword [esi],byte +0x0
jz 0x106ab
mov eax,[esi]
cmp eax,[dword 0x467a10]
jnz 0x106af
xor eax,eax
jmp short 0x106b1
mov al,0x1
mov [ebp-0x1],al
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x4116d3
push dword 0x46d990
call dword 0x5ba0
ret
jmp dword 0x3384
jmp short 0x106c1
movzx eax,byte [ebp-0x1]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
ret
lea eax,[eax+0x0]
push ebp
mov ebp,esp
add esp,0xfffffef0
push ebx
push esi
push edi
xor ecx,ecx
mov [ebp-0x10],ecx
mov [ebp-0x8],edx
mov [ebp-0x4],eax
xor eax,eax
push ebp
push dword 0x4117b6
push dword [fs:eax]
mov [fs:eax],esp
mov byte [ebp-0x9],0x0
push dword 0x46d990
call dword 0x5ab0
xor eax,eax
push ebp
push dword 0x411799
push dword [fs:eax]
mov [fs:eax],esp
mov eax,[0x46d98c]
call dword 0x49d8
mov esi,eax
test esi,esi
jl 0x10781
inc esi
xor edi,edi
mov eax,[0x46d98c]
mov ebx,[eax+edi*4]
test ebx,ebx
jz 0x1077d
cmp ebx,[dword 0x467a10]
jz 0x1077d
lea edx,[ebp-0x110]
mov eax,[ebx]
call dword 0x2ad0
lea edx,[ebp-0x110]
lea eax,[ebp-0x10]
call dword 0x3c80
mov eax,[ebp-0x10]
mov edx,[ebp-0x4]
call dword 0x7820
test al,al
jz 0x1077d
mov eax,[ebp-0x8]
mov [eax],ebx
mov byte [ebp-0x9],0x1
jmp short 0x10781
inc edi
dec esi
jnz 0x10734
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x4117a0
push dword 0x46d990
call dword 0x5ba0
ret
jmp dword 0x3384
jmp short 0x1078e
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x4117bd
lea eax,[ebp-0x10]
call dword 0x3a1c
ret
jmp dword 0x3384
jmp short 0x107ad
movzx eax,byte [ebp-0x9]
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret
call dword 0xe9ac
ret
mov eax,eax
push ebp
mov ebp,esp
xor eax,eax
push ebp
push dword 0x41183f
push dword [fs:eax]
mov [fs:eax],esp
inc dword [dword 0x46d988]
jnz 0x10831
call dword 0x10380
push dword 0x46d990
call dword 0x5aa8
mov eax,0x46d968
call dword 0xec58
mov eax,0x467a04
call dword 0x3a1c
mov eax,0x467a28
mov ecx,0x15
mov edx,[dword 0x401094]
call dword 0x465c
mov eax,0x46d98c
mov edx,[dword 0x41135c]
call dword 0x4b98
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x411846
ret
jmp dword 0x3384
jmp short 0x1083e
pop ebp
ret
hlt
mov bh,0x46
add [ebp-0xbffff01],ch
mov bh,0x46
add [esi-0xbffff01],ch
mov bh,0x46
add [edi-0xbffff01],ch
mov bh,0x46
add [eax-0xbffff01],dl
mov bh,0x46
add [ecx-0xbffff01],dl
mov bh,0x46
add [edx-0xbffff01],dl
mov bh,0x46
add [ebx-0xbffff01],dl
mov bh,0x46
add [edi+edi*8-0x480c0000],dl
inc esi
add [ebp-0xbffff01],dl
mov bh,0x46
add [esi-0xbffff01],dl
mov bh,0x46
add [edi-0xbffff01],dl
mov bh,0x46
add [eax-0xbffff01],bl
mov bh,0x46
add [ecx-0xbffff01],bl
mov bh,0x46
add [edx-0xbffff01],bl
mov bh,0x46
add [ebx-0xbffff01],bl
mov bh,0x46
add [edi+edi*8-0x480c0000],bl
inc esi
add [ebp-0xbffff01],bl
mov bh,0x46
add [esi-0xbffff01],bl
mov bh,0x46
add [edi-0xbffff01],bl
mov bh,0x46
add [eax-0xbffff01],al
mov bh,0x46
add [ecx-0xbffff01],al
mov bh,0x46
add [edx-0xbffff01],al
mov bh,0x46
add [ebx-0xbffff01],al
mov bh,0x46
add [edi+edi*8-0x480c0000],al
inc esi
add [ebp-0xbffff01],al
mov bh,0x46
add [esi-0xbffff01],al
mov bh,0x46
add [edi-0xbffff01],al
mov bh,0x46
add [eax-0xbffff01],cl
mov bh,0x46
add [ecx-0xbffff01],cl
mov bh,0x46
add [edx-0xbffff01],cl
mov bh,0x46
add [ebx-0xbffff01],cl
mov bh,0x46
add [edi+edi*8-0x480c0000],cl
inc esi
add [ebp-0xbffff01],cl
mov bh,0x46
add [esi-0xffff01],cl
db 0xff
db 0xff
inc dword [dword 0x46000000]
popad
insb
jnc 0x109ca
add [eax],al
add bh,bh
db 0xff
db 0xff
inc dword [eax+eax]
add [eax],al
push esp
jc 0x109e8
add [gs:eax],al
add [eax],al
db 0xff
db 0xff
db 0xff
inc dword [ecx]
add [eax],al
add [esi],ch
add [eax],al
add [ecx],dh
ror byte [edx+0x448d0150],cl
adc [edx],al
ret
mov eax,eax
push ebx
push esi
push edi
test edx,edx
jz 0x109d2
xor ecx,ecx
mov cl,[eax+0x1]
mov eax,[eax+ecx+0xb]
mov eax,[eax]
mov cl,[eax+0x1]
lea esi,[eax+ecx+0xf]
mov edi,[eax+ecx+0x7]
xor eax,eax
mov cl,[esi]
cmp ecx,[edx-0x4]
jnz 0x109c9
mov bl,[ecx+edx-0x1]
xor bl,[ecx+esi]
test bl,0xdf
jnz 0x109c7
dec ecx
jnz 0x109b6
jmp short 0x109d5
mov cl,[esi]
inc eax
lea esi,[ecx+esi+0x1]
cmp eax,edi
jng 0x109af
or eax,byte -0x1
pop edi
pop esi
pop ebx
ret
lea eax,[eax+0x0]
push ebx
push esi
mov esi,edx
mov ebx,eax
cmp byte [ebx],0x1
jnz 0x109f1
mov eax,esi
call dword 0x7d38
pop esi
pop ebx
ret
mov eax,ebx
call dword 0x10984
cmp dword [eax+0x1],byte +0x0
jnl 0x10a32
mov edx,[dword 0x467a90]
mov eax,esi
call dword 0x7820
test al,al
jz 0x10a13
xor eax,eax
jmp short 0x10a3b
mov edx,[dword 0x467a94]
mov eax,esi
call dword 0x7820
test al,al
jz 0x10a29
or eax,byte -0x1
jmp short 0x10a3b
mov eax,esi
call dword 0x7d38
jmp short 0x10a3b
mov edx,esi
mov eax,ebx
call dword 0x10990
pop esi
pop ebx
ret
mov eax,eax
push ebx
push esi
push edi
test eax,eax
jz 0x10aac
mov ecx,edx
or edx,edx
jz 0x10a58
mov cl,[edx-0x4]
mov ch,[edx]
and ecx,0xdfff
xor ebx,ebx
mov bl,[eax+0x1]
lea esi,[eax+ebx+0x2]
mov bl,[esi+0xa]
movzx edi,word [esi+ebx+0xb]
test edi,edi
jz 0x10a85
lea eax,[esi+ebx+0xd]
mov bx,[eax+0x1a]
and bh,0xdf
cmp ebx,ecx
jz 0x10a9a
mov bh,0x0
dec edi
lea eax,[eax+ebx+0x1b]
jnz 0x10a71
mov eax,[esi+0x4]
test eax,eax
jz 0x10aac
mov eax,[eax]
jmp short 0x10a58
mov ch,[edx]
and ch,0xdf
mov bl,[eax+0x1a]
jmp short 0x10a7c
mov bh,0x0
mov ch,[ebx+edx-0x1]
xor ch,[eax+ebx+0x1a]
test ch,0xdf
jnz 0x10a90
dec ebx
jnz 0x10a9c
pop edi
pop esi
pop ebx
ret
push ebx
push esi
push edi
xor ecx,ecx
mov esi,eax
mov cl,[eax+0x1]
mov edi,edx
xor eax,eax
movzx ecx,word [esi+ecx+0xa]
rep stosd
mov cl,[esi+0x1]
lea esi,[esi+ecx+0x2]
mov cl,[esi+0xa]
movzx eax,word [esi+ecx+0xb]
test eax,eax
jz 0x10af3
lea edi,[esi+ecx+0xd]
movzx ebx,word [edi+0x18]
mov cl,[edi+0x1a]
cmp dword [edx+ebx*4],byte +0x0
jnz 0x10aec
mov [edx+ebx*4],edi
lea edi,[edi+ecx+0x1b]
dec eax
jnz 0x10adc
mov esi,[esi+0x4]
xor ecx,ecx
test esi,esi
jz 0x10b00
mov esi,[esi]
jmp short 0x10ac5
pop edi
pop esi
pop ebx
ret
push ebx
push edi
mov edi,[edx]
mov edi,[edi]
mov bl,0x4
cmp byte [edi],0x7
jz 0x10b1a
xor ecx,ecx
mov cl,[edi+0x1]
mov bl,[edi+ecx+0x2]
mov ecx,[edx+0x4]
cmp byte [edx+0x7],0xfe
mov edx,[edx+0x10]
jc 0x10b31
ja 0x10b35
movsx ecx,cx
add ecx,[eax]
call dword [ecx]
jmp short 0x10b4e
call ecx
jmp short 0x10b4e
and ecx,0xffffff
add ecx,eax
mov al,[ecx]
cmp bl,0x2
jc 0x10b4e
mov ax,[ecx]
cmp bl,0x4
jc 0x10b4e
mov eax,[ecx]
cmp bl,0x4
jnc 0x10b72
cmp bl,0x2
jnc 0x10b68
cmp bl,0x0
movsx eax,al
jz 0x10b72
and eax,0xff
pop edi
pop ebx
ret
movsx eax,ax
jz 0x10b72
and eax,0xffff
pop edi
pop ebx
ret
lea eax,[eax+0x0]
push ebx
push esi
push edi
mov edi,edx
mov esi,[edi]
mov esi,[esi]
mov bl,0x4
cmp byte [esi],0x7
jz 0x10b91
xor ebx,ebx
mov bl,[esi+0x1]
mov bl,[esi+ebx+0x2]
mov edx,[edi+0x10]
cmp edx,0x80000000
jnz 0x10b9e
mov edx,ecx
mov esi,[edi+0x8]
cmp byte [edi+0xb],0xfe
ja 0x10bb6
jc 0x10bb2
movsx esi,si
add esi,[eax]
call dword [esi]
jmp short 0x10bcf
call esi
jmp short 0x10bcf
and esi,0xffffff
add eax,esi
mov [eax],cl
cmp bl,0x2
jc 0x10bcf
mov [eax],cx
cmp bl,0x4
jc 0x10bcf
mov [eax],ecx
pop edi
pop esi
pop ebx
ret
nop
push ebp
mov ebp,esp
push byte +0x0
push ebx
push esi
push edi
mov edi,edx
mov ebx,eax
xor eax,eax
push ebp
push dword 0x411c63
push dword [fs:eax]
mov [fs:eax],esp
mov eax,ebx
call dword 0x10984
mov esi,[eax+0x1]
movzx eax,byte [ebx]
dec al
jz 0x10c09
dec al
jz 0x10c16
sub al,0x7
jz 0x10c16
jmp short 0x10c42
mov eax,edi
call dword 0x7d38
mov ebx,eax
sub ebx,esi
jmp short 0x10c4d
mov ebx,edi
test ebx,ebx
jz 0x10c21
sub ebx,byte +0x4
mov ebx,[ebx]
lea eax,[ebp-0x4]
push eax
mov ecx,ebx
dec ecx
mov edx,0x2
mov eax,edi
call dword 0x3f14
mov eax,[ebp-0x4]
call dword 0x7d38
mov ebx,eax
sub ebx,esi
jmp short 0x10c4d
mov edx,edi
mov eax,ebx
call dword 0x109dc
mov ebx,eax
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x411c6a
lea eax,[ebp-0x4]
call dword 0x3a1c
ret
jmp dword 0x3384
jmp short 0x10c5a
mov eax,ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
ret
mov eax,eax
push esi
push edi
mov esi,edx
mov edx,[esi+0x10]
cmp edx,0x80000000
jnz 0x10c85
mov edx,ecx
mov edi,[esi+0x8]
cmp byte [esi+0xb],0xfe
ja 0x10c9f
jc 0x10c9a
movsx edi,di
add edi,[eax]
call dword [edi]
pop edi
pop esi
ret
call edi
pop edi
pop esi
ret
and edi,0xffffff
add edi,eax
mov eax,[esi]
mov eax,[eax]
mov esi,ecx
xor ecx,ecx
mov cl,[eax+0x1]
mov cl,[eax+ecx+0x2]
lodsb
cmp al,cl
jc 0x10cbd
mov al,cl
stosb
mov cl,al
rep movsb
pop edi
pop esi
ret
lea eax,[eax+0x0]
push ebx
push esi
push edi
add esp,0xffffff00
mov edi,ecx
mov esi,edx
mov ebx,eax
mov eax,esp
mov edx,edi
mov ecx,0xff
call dword 0x3cb8
mov ecx,esp
mov edx,esi
mov eax,ebx
call dword 0x10c74
add esp,0x100
pop edi
pop esi
pop ebx
ret
mov eax,eax
push ebx
push esi
mov esi,edx
mov ebx,eax
mov eax,ebx
mov edx,esi
call dword 0x3a70
pop esi
pop ebx
ret
mov eax,eax
push esi
push edi
mov esi,edx
mov edx,[esi+0x10]
cmp edx,0x80000000
jnz 0x10d21
mov edx,ecx
mov edi,[esi+0x8]
cmp byte [esi+0xb],0xfe
ja 0x10d3b
jc 0x10d36
movsx edi,di
add edi,[eax]
call dword [edi]
pop edi
pop esi
ret
call edi
pop edi
pop esi
ret
and edi,0xffffff
add eax,edi
mov edx,ecx
call dword 0x10cfc
pop edi
pop esi
ret
lea eax,[eax+0x0]
push ebp
mov ebp,esp
push byte +0x0
push ebx
push esi
push edi
mov edi,ecx
mov esi,edx
mov ebx,eax
xor eax,eax
push ebp
push dword 0x411d98
push dword [fs:eax]
mov [fs:eax],esp
lea eax,[ebp-0x4]
mov edx,edi
call dword 0x4338
mov ecx,[ebp-0x4]
mov edx,esi
mov eax,ebx
call dword 0x10dd8
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x411d9f
lea eax,[ebp-0x4]
call dword 0x41d0
ret
jmp dword 0x3384
jmp short 0x10d8f
pop edi
pop esi
pop ebx
pop ecx
pop ebp
ret
lea eax,[eax+0x0]
push ebx
mov ebx,[edx]
mov ebx,[ebx]
movzx ebx,byte [ebx]
sub bl,0x5
jz 0x10dc0
sub bl,0x5
jz 0x10dc7
dec bl
jz 0x10dce
jmp short 0x10dd3
call dword 0x10cc8
pop ebx
ret
call dword 0x10d10
pop ebx
ret
call dword 0x10d50
pop ebx
ret
lea eax,[eax+0x0]
push ebp
mov ebp,esp
add esp,byte -0xc
push ebx
push esi
push edi
xor ebx,ebx
mov [ebp-0xc],ebx
mov edi,ecx
mov ebx,edx
mov esi,eax
xor eax,eax
push ebp
push dword 0x411e9f
push dword [fs:eax]
mov [fs:eax],esp
mov eax,[ebx]
mov eax,[eax]
movzx eax,byte [eax]
sub al,0x5
jz 0x10e0f
sub al,0x5
jz 0x10e0f
dec al
jz 0x10e27
jmp short 0x10e89
lea eax,[ebp-0xc]
mov edx,edi
call dword 0x3ca4
mov ecx,[ebp-0xc]
mov edx,ebx
mov eax,esi
call dword 0x10da8
jmp short 0x10e89
mov eax,[ebx+0x8]
mov edx,eax
and edx,0xff000000
cmp edx,0xff000000
jnz 0x10e4f
mov ebx,eax
and ebx,0xffffff
add ebx,esi
mov eax,ebx
mov edx,edi
call dword 0x420c
jmp short 0x10e89
cmp edx,0xfe000000
jnz 0x10e65
mov edx,[esi]
movsx eax,ax
add edx,eax
mov eax,[edx]
mov [ebp-0x8],eax
jmp short 0x10e68
mov [ebp-0x8],eax
mov [ebp-0x4],esi
mov eax,[ebx+0x10]
cmp eax,0x80000000
jnz 0x10e7f
mov edx,edi
mov eax,[ebp-0x4]
call dword [ebp-0x8]
jmp short 0x10e89
mov ecx,edi
mov edx,eax
mov eax,[ebp-0x4]
call dword [ebp-0x8]
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x411ea6
lea eax,[ebp-0xc]
call dword 0x3a1c
ret
jmp dword 0x3384
jmp short 0x10e96
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret
lea eax,[eax+0x0]
push ebp
mov ebp,esp
add esp,byte -0x8
push ebx
push esi
push edi
mov esi,edx
mov edi,eax
mov ebx,[esi+0x8]
mov eax,[esi]
mov eax,[eax]
call dword 0x10984
movzx eax,byte [eax]
mov edx,ebx
and edx,0xff000000
cmp edx,0xff000000
jnz 0x10f57
mov edx,ebx
and edx,0xffffff
add edx,edi
and eax,byte +0x7f
cmp eax,byte +0x4
ja dword 0x1109b
jmp dword [eax*4+0x411ef9]
or eax,0x1800411f
pop ds
inc ecx
add [ebx],ah
pop ds
inc ecx
add [ebx],bh
pop ds
inc ecx
add [esi+0x1f],al
inc ecx
add bl,bl
insd
or cl,bl
sbb bl,[ebx+0x183e9]
add bl,bl
insd
or ch,bl
sbb bl,[ebx+0x178e9]
add [ebx+0x2890845],cl
mov eax,[ebp+0xc]
mov [edx+0x4],eax
mov ax,[ebp+0x10]
mov [edx+0x8],ax
jmp dword 0x1109b
fld tword [ebp+0x8]
fistp qword [edx]
wait jmp dword 0x1109b
fld tword [ebp+0x8]
fmul dword [dword 0x4120a4]
fistp qword [edx]
wait jmp dword 0x1109b
cmp edx,0xfe000000
jnz 0x10f6d
mov edx,[edi]
movsx ecx,bx
add edx,ecx
mov edx,[edx]
mov [ebp-0x8],edx
jmp short 0x10f70
mov [ebp-0x8],ebx
mov [ebp-0x4],edi
mov edx,[esi+0x10]
cmp edx,0x80000000
jnz dword 0x11019
and eax,byte +0x7f
cmp eax,byte +0x4
ja dword 0x1109b
jmp dword [eax*4+0x411f95]
test eax,0xbe00411f
pop ds
inc ecx
add bl,dl
pop ds
inc ecx
add cl,ch
pop ds
inc ecx
add dh,bh
pop ds
inc ecx
add bl,bl
insd
or [ebx+0x1cd9fcc4],al
and al,0x9b
mov eax,[ebp-0x4]
call dword [ebp-0x8]
jmp dword 0x1109b
fld tword [ebp+0x8]
add esp,byte -0x8
fstp qword [esp]
wait mov eax,[ebp-0x4]
call dword [ebp-0x8]
jmp dword 0x1109b
movzx eax,word [ebp+0x10]
push eax
push dword [ebp+0xc]
push dword [ebp+0x8]
mov eax,[ebp-0x4]
call dword [ebp-0x8]
jmp dword 0x1109b
fld tword [ebp+0x8]
add esp,byte -0x8
fistp qword [esp]
wait mov eax,[ebp-0x4]
call dword [ebp-0x8]
jmp dword 0x1109b
fld tword [ebp+0x8]
fmul dword [dword 0x4120a4]
add esp,byte -0x8
fistp qword [esp]
wait mov eax,[ebp-0x4]
call dword [ebp-0x8]
jmp dword 0x1109b
and eax,byte +0x7f
cmp eax,byte +0x4
ja 0x1109b
jmp dword [eax*4+0x412028]
cmp al,0x20
inc ecx
add [esi+0x20],cl
inc ecx
add [eax+0x20],ah
inc ecx
add [ebx+0x20],dh
inc ecx
add [ebp-0x24ffbee0],al
insd
or [ebx+0x1cd9fcc4],al
and al,0x9b
mov eax,[ebp-0x4]
call dword [ebp-0x8]
jmp short 0x1109b
fld tword [ebp+0x8]
add esp,byte -0x8
fstp qword [esp]
wait mov eax,[ebp-0x4]
call dword [ebp-0x8]
jmp short 0x1109b
movzx eax,word [ebp+0x10]
push eax
push dword [ebp+0xc]
push dword [ebp+0x8]
mov eax,[ebp-0x4]
call dword [ebp-0x8]
jmp short 0x1109b
fld tword [ebp+0x8]
add esp,byte -0x8
fistp qword [esp]
wait mov eax,[ebp-0x4]
call dword [ebp-0x8]
jmp short 0x1109b
fld tword [ebp+0x8]
fmul dword [dword 0x4120a4]
add esp,byte -0x8
fistp qword [esp]
wait mov eax,[ebp-0x4]
call dword [ebp-0x8]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
ret 0xc
add [eax+0x1c],al
inc esi
push ebx
push esi
mov esi,edx
mov ebx,eax
mov eax,ebx
mov edx,esi
call dword 0xef6c
pop esi
pop ebx
ret
mov eax,eax
push esi
push edi
mov esi,edx
mov edx,[esi+0x10]
cmp edx,0x80000000
jnz 0x110cd
mov edx,ecx
mov edi,[esi+0x8]
cmp byte [esi+0xb],0xfe
ja 0x110e7
jc 0x110e2
movsx edi,di
add edi,[eax]
call dword [edi]
pop edi
pop esi
ret
call edi
pop edi
pop esi
ret
and edi,0xffffff
add eax,edi
mov edx,ecx
call dword 0x110a8
pop edi
pop esi
ret
lea eax,[eax+0x0]
push ebx
mov ebx,[edx+0x8]
cmp byte [edx+0xb],0xfe
ja 0x1111d
mov edx,[edx+0x10]
push dword [ecx+0x4]
push dword [ecx]
jc 0x11119
movsx ebx,bx
add ebx,[eax]
call dword [ebx]
pop ebx
ret
call ebx
pop ebx
ret
and ebx,0xffffff
add eax,ebx
mov edx,[ecx]
mov ebx,[ecx+0x4]
mov [eax],edx
mov [eax+0x4],ebx
pop ebx
ret
lea eax,[eax+0x0]
push ebp
mov ebp,esp
cmp byte [edx+0xb],0xfe
mov ecx,[edx+0x8]
ja 0x11158
mov edx,[edx+0x10]
push dword [ebp+0xc]
push dword [ebp+0x8]
jc 0x11154
movsx ecx,cx
add ecx,[eax]
call dword [ecx]
jmp short 0x1116b
call ecx
jmp short 0x1116b
and ecx,0xffffff
add eax,ecx
mov edx,[ebp+0x8]
mov ecx,[ebp+0xc]
mov [eax],edx
mov [eax+0x4],ecx
pop ebp
ret 0x8
nop
push ebx
push esi
add esp,byte -0x8
mov esi,ecx
mov ecx,[edx+0x8]
mov ebx,ecx
and ebx,0xff000000
cmp ebx,0xff000000
jnz 0x1119f
mov ebx,ecx
and ebx,0xffffff
add ebx,eax
mov eax,ebx
mov edx,esi
call dword 0x5288
jmp short 0x111dc
cmp ebx,0xfe000000
jnz 0x111b5
mov ebx,[eax]
movsx ecx,cx
add ebx,ecx
mov ecx,[ebx]
mov [esp],ecx
jmp short 0x111b8
mov [esp],ecx
mov [esp+0x4],eax
mov eax,[edx+0x10]
cmp eax,0x80000000
jnz 0x111d1
mov edx,esi
mov eax,[esp+0x4]
call dword [esp]
jmp short 0x111dc
mov ecx,esi
mov edx,eax
mov eax,[esp+0x4]
call dword [esp]
pop ecx
pop edx
pop esi
pop ebx
ret
lea eax,[eax+0x0]
push ebp
mov ebp,esp
xor eax,eax
push ebp
push dword 0x41222a
push dword [fs:eax]
mov [fs:eax],esp
inc dword [dword 0x46d9a8]
jnz 0x1121c
mov eax,0x467a90
mov ecx,0x2
mov edx,[dword 0x401094]
call dword 0x465c
mov eax,0x467a98
call dword 0x3a1c
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x412231
ret
jmp dword 0x3384
jmp short 0x11229
pop ebp
ret
nop
cmp [edx],ah
inc ecx
add [ebx],al
or dl,[ecx+eax*2+0x6c]
imul esp,[edi+0x6e],dword 0x746e656d
add [eax],eax
add [eax],al
add [edx],al
add [eax],al
add [edx],dh
inc ecx
add [dword 0x654c6174],cl
o16 jz 0x112a3
jnz 0x112ce
jz 0x112c6
o16 jns 0x1126e
jz 0x112c3
push edx
imul esp,[edi+0x68],dword 0x73754a74
jz 0x112d5
o16 jns 0x11277
jz 0x112d2
inc ebx
gs outsb
jz 0x112db
jc 0x1127f
inc ebx
insb
popad
jnc 0x112f0
gs jnc 0x11210
test [edx],ah
inc ecx
add [ebx],al
or [edx+eax*2+0x69],edx
inc esp
imul ecx,[ebp+0x6f],dword 0x16564
add [eax],al
add [ebx],al
add [eax],al
add [eax+0xd004122],al
bound esp,[esp+ecx*2+0x65]
o16 jz 0x112f8
outsd
push edx
imul esp,[edi+0x68],dword 0x64620d74
push edx
imul esp,[edi+0x68],dword 0x4c6f5474
gs o16 jz 0x112cd
bound esp,[edx+edx*2+0x69]
push dword 0x4c6f5474
gs o16 jz 0x11315
outsd
inc ecx
insb
imul esp,[edi+0x6e],dword 0x52646218
imul esp,[edi+0x68],dword 0x4c6f5474
gs o16 jz 0x1132e
gs popad
imul ebp,[fs:esi+0x67],dword 0x796c6e4f
pop es
inc ebx
insb
popad
jnc 0x1135f
gs jnc 0x1127a
db 0xc0
hlt
and al,[ecx+0x0]
add eax,[edx]
xor [cs:ecx],eax
add [eax],al
add [eax],al
push es
add [eax],al
add al,dh
and al,[ecx+0x0]
pop es
jnc 0x1137b
push ebx
push dword 0x5746669
jnc 0x11383
inc ecx
insb
jz 0x1131a
jnc 0x11389
inc ebx
jz 0x1138b
insb
push es
jnc 0x11390
dec esp
gs o16 jz 0x11329
jnc 0x11397
push edx
imul esp,[edi+0x68],dword 0x73730874
dec ebp
imul esp,[esp+0x6c],dword 0x73730865
inc esp
outsd
jnz 0x1139b
insb
gs pop es
inc ebx
insb
popad
jnc 0x113b4
gs jnc 0x112d4
dec eax
and eax,[ecx+0x0]
push es
or edx,[ebx+edx*2+0x68]
imul esp,[esi+0x74],dword 0x74617453
gs add eax,esi
and al,[ecx+0x0]
mov eax,eax
pushad
and eax,[ecx+0x0]
add [esp+edx*2],ecx
dec eax
gs insb
jo 0x113ab
outsd
outsb
jz 0x113d1
js 0x113e2
add al,0x1
add [eax],al
cmp bh,0xff
db 0xff
jg 0x11308
jl 0x1139d
inc ecx
add [ebx],al
or [eax+ecx*2+0x65],edx
insb
jo 0x113d8
jns 0x113f6
add [gs:eax],eax
add [eax],al
add [ecx],al
add [eax],al
add [eax+0x23],bh
inc ecx
add [ecx],cl
push dword 0x79654b74
ja 0x1140b
jc 0x11402
or [eax+0x74],ebp
inc ebx
outsd
outsb
jz 0x1140b
js 0x1141c
pop es
inc ebx
insb
popad
jnc 0x11421
gs jnc 0x11365
and eax,[ecx+0x0]
add [ecx],ecx
push esp
push ebx
push dword 0x4374726f
jnz 0x11433
add eax,[eax]
add [eax],al
add bh,bh
inc dword [eax]
add ah,cl
and eax,[ecx+0x0]
or [esp+edx*2],cl
dec esi
outsd
jz 0x1143c
o16 jns 0x1141b
jna 0x1143d
outsb
jz 0x113db
add [eax],ecx
push es
push ebx
gs outsb
gs jc 0x113ec
push esp
dec edi
bound ebp,[edx+0x65]
arpl [eax+eax+0x4],si
adc [eax+0x0],eax
lea eax,[eax+0x0]
inc eax
and al,0x41
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax+0x24],al
inc ecx
add [eax+eax],cl
add [eax],al
pop eax
js 0x1145f
add [eax],bh
ds inc eax
add [esi+edi+0x40],al
add [eax+0x3e],cl
inc eax
add [esi+edi+0x40],cl
add [eax+0x3e],al
inc eax
add [eax-0x5bffbfc5],cl
cmp eax,[eax+0x0]
loopne 0x11479
inc eax
add [eax*2+0x65727453],cl
popad
insd
inc ebp
jc 0x114bd
outsd
jc 0x113db
inc eax
add [esp+0x41],bl
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
pushfd
and al,0x41
add [eax+eax],cl
add [eax],al
hlt
and eax,[ecx+0x0]
cmp [esi],bh
inc eax
add [esi+edi+0x40],al
add [eax+0x3e],cl
inc eax
add [esi+edi+0x40],cl
add [eax+0x3e],al
inc eax
add [eax-0x5bffbfc5],cl
cmp eax,[eax+0x0]
loopne 0x114d5
inc eax
add [eax],dl
inc ebp
inc esi
imul ebp,[ebp+0x53],dword 0x61657274
insd
inc ebp
jc 0x1151d
outsd
jc 0x1143b
inc eax
add ah,bh
and al,0x41
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add ah,bh
and al,0x41
add [eax+eax],cl
add [eax],al
push eax
and al,0x41
add [eax],bh
ds inc eax
add [esi+edi+0x40],al
add [eax+0x3e],cl
inc eax
add [esi+edi+0x40],cl
add [eax+0x3e],al
inc eax
add [eax-0x5bffbfc5],cl
cmp eax,[eax+0x0]
loopne 0x11535
inc eax
add [dword 0x72434645],cl
gs popad
jz 0x1156a
inc ebp
jc 0x1157a
outsd
jc 0x11496
rcr byte [eax+0x25],byte 0x41
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax+0x25],bl
inc ecx
add [eax+eax],cl
add [eax],al
push eax
and al,0x41
add [eax],bh
ds inc eax
add [esi+edi+0x40],al
add [eax+0x3e],cl
inc eax
add [esi+edi+0x40],cl
add [eax+0x3e],al
inc eax
add [eax-0x5bffbfc5],cl
cmp eax,[eax+0x0]
loopne 0x11591
inc eax
add [ebx],cl
inc ebp
inc esi
dec edi
jo 0x115c3
outsb
inc ebp
jc 0x115d4
outsd
jc 0x11515
and eax,0x41
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
mov al,0x25
inc ecx
add [eax+eax],cl
add [eax],al
hlt
and eax,[ecx+0x0]
cmp [esi],bh
inc eax
add [esi+edi+0x40],al
add [eax+0x3e],cl
inc eax
add [esi+edi+0x40],cl
add [eax+0x3e],al
inc eax
add [eax-0x5bffbfc5],cl
cmp eax,[eax+0x0]
loopne 0x115e9
inc eax
add [ebx],cl
inc ebp
inc esi
imul ebp,[ebp+0x72],dword 0x6f727245
jc 0x115c5
es inc ecx
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],cl
es inc ecx
add [eax+eax],cl
add [eax],al
fs and eax,0x3e380041
inc eax
add [esi+edi+0x40],al
add [eax+0x3e],cl
inc eax
add [esi+edi+0x40],cl
add [eax+0x3e],al
inc eax
add [eax-0x5bffbfc5],cl
cmp eax,[eax+0x0]
loopne 0x11641
inc eax
add [edx],cl
inc ebp
push edx
gs popad
fs inc ebp
jc 0x11683
outsd
jc 0x115a4
pushad
es inc ecx
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax+0x26],ah
inc ecx
add [eax+eax],cl
add [eax],al
fs and eax,0x3e380041
inc eax
add [esi+edi+0x40],al
add [eax+0x3e],cl
inc eax
add [esi+edi+0x40],cl
add [eax+0x3e],al
inc eax
add [eax-0x5bffbfc5],cl
cmp eax,[eax+0x0]
loopne 0x11699
inc eax
add [ebx],cl
inc ebp
push edi
jc 0x116ce
jz 0x116cc
inc ebp
jc 0x116dc
outsd
jc 0x11625
es inc ecx
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax+0xc004126],bh
add [eax],al
add [ebp+0x41],ah
add [eax],bh
ds inc eax
add [esi+edi+0x40],al
add [eax+0x3e],cl
inc eax
add [esi+edi+0x40],cl
add [eax+0x3e],al
inc eax
add [eax-0x5bffbfc5],cl
cmp eax,[eax+0x0]
loopne 0x116f1
inc eax
add [esi],cl
inc ebp
inc ebx
insb
popad
jnc 0x11732
dec esi
outsd
jz 0x11709
outsd
jnz 0x11734
fs nop
adc al,0x27
inc ecx
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [edi],dl
inc ecx
add [eax+eax],cl
add [eax],al
pop eax
js 0x11733
add [eax],bh
ds inc eax
add [esi+edi+0x40],al
add [eax+0x3e],cl
inc eax
add [esi+edi+0x40],cl
add [eax+0x3e],al
inc eax
add [eax-0x5bffbfc5],cl
cmp eax,[eax+0x0]
loopne 0x1174d
inc eax
add [eax*2+0x4e736552],cl
outsd
jz 0x11763
outsd
jnz 0x1178e
lea eax,[fs:eax+0x0]
jo 0x1174d
inc ecx
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax+0x27],dh
inc ecx
add [eax+eax],cl
add [eax],al
pop eax
js 0x1178f
add [eax],bh
ds inc eax
add [esi+edi+0x40],al
add [eax+0x3e],cl
inc eax
add [esi+edi+0x40],cl
add [eax+0x3e],al
inc eax
add [eax-0x5bffbfc5],cl
cmp eax,[eax+0x0]
loopne 0x117a9
inc eax
add [edx],cl
inc ebp
dec esp
imul esi,[ebx+0x74],dword 0x6f727245
jc 0x1170c
enter 0x4127,0x0
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
enter 0x4127,0x0
or al,0x0
add [eax],al
pop eax
js 0x117e7
add [eax],bh
ds inc eax
add [esi+edi+0x40],al
add [eax+0x3e],cl
inc eax
add [esi+edi+0x40],cl
add [eax+0x3e],al
inc eax
add [eax-0x5bffbfc5],cl
cmp eax,[eax+0x0]
loopne 0x11801
inc eax
add [edx],cl
inc ebp
inc edx
imul esi,[ebx+esi*2+0x45],dword 0x726f7272
nop
and [eax],ch
inc ecx
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],ah
sub [ecx+0x0],al
or al,0x0
add [eax],al
pop eax
js 0x1183f
add [eax],bh
ds inc eax
add [esi+edi+0x40],al
add [eax+0x3e],cl
inc eax
add [esi+edi+0x40],cl
add [eax+0x3e],al
inc eax
add [eax-0x5bffbfc5],cl
cmp eax,[eax+0x0]
loopne 0x11859
inc eax
add [eax],dl
inc ebp
push ebx
jz 0x11897
imul ebp,[esi+0x67],dword 0x7473694c
inc ebp
jc 0x118a1
outsd
jc 0x117bf
inc eax
add [eax+0x4128],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax+0xc004128],al
add [eax],al
add [eax+0x78],bl
inc eax
add [eax],bh
ds inc eax
add [esi+edi+0x40],al
add [eax+0x3e],cl
inc eax
add [esi+edi+0x40],cl
add [eax+0x3e],al
inc eax
add [eax-0x5bffbfc5],cl
cmp eax,[eax+0x0]
loopne 0x118b9
inc eax
add [edi],cl
inc ebp
inc ebx
outsd
insd
jo 0x118f6
outsb
gs outsb
jz 0x118d1
jc 0x11900
outsd
jc 0x1186d
sub [ecx+0x0],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
fsubr qword [eax]
inc ecx
add [eax],dl
add [eax],al
add [eax+0x79],dh
inc eax
add [eax],bh
ds inc eax
add [esi+edi+0x40],al
add [eax+0x3e],cl
inc eax
add [esi+edi+0x40],cl
add [eax+0x3e],al
inc eax
add [eax-0x23ffbfc5],cl
lds eax,[eax+0x0]
loopne 0x11915
inc eax
add [edi],cl
inc ebp
dec edi
jnz 0x11955
dec edi
push dx
gs jnc 0x11956
jnz 0x1195b
arpl [ebp+0x73],sp
cmp [ecx],ch
inc ecx
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],bh
sub [ecx+0x0],eax
or al,0x0
add [eax],al
pop eax
js 0x11957
add [eax],bh
ds inc eax
add [esi+edi+0x40],al
add [eax+0x3e],cl
inc eax
add [esi+edi+0x40],cl
add [eax+0x3e],al
inc eax
add [eax-0x5bffbfc5],cl
cmp eax,[eax+0x0]
loopne 0x11971
inc eax
add [ecx],dl
inc ebp
dec ecx
outsb
jna 0x1199f
insb
imul esp,[edi+ecx*2+0x70],dword 0x74617265
imul ebp,[edi+0x6e],dword 0x2998c08b
inc ecx
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax+0x10004129],ch
add [eax],al
add [eax+0x38004010],dh
ds inc eax
add [esi+edi+0x40],al
add [eax+0x3e],cl
inc eax
add [esi+edi+0x40],cl
add [eax+0x3e],al
inc eax
add [eax-0x5bffbfc5],cl
cmp eax,[eax+0x0]
add al,0x4d
inc ecx
add [esi+ecx*2+0x50e80041],ah
inc ecx
add [eax+0x4d],bl
inc ecx
add al,dl
dec ebp
inc ecx
add [dword 0x73694c54],al
jz 0x1193a
sar ah,byte 0x29
inc ecx
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add ah,bh
sub [ecx+0x0],eax
and al,0x0
add [eax],al
mov al,0x10
inc eax
add [eax],bh
ds inc eax
add [esi+edi+0x40],al
add [eax+0x3e],cl
inc eax
add [esi+edi+0x40],cl
add [eax+0x3e],al
inc eax
add [eax-0x5bffbfc5],cl
cmp eax,[eax+0x0]
inc eax
push ecx
inc ecx
add [ebx],cl
push esp
push esp
push dword 0x64616572
dec esp
imul esi,[ebx+0x74],dword 0x412a54
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
push esp
sub al,[ecx+0x0]
or al,0x0
add [eax],al
mov al,0x10
inc eax
add [eax],bh
ds inc eax
add [esi+edi+0x40],al
add [eax+0x3e],cl
inc eax
add [esi+edi+0x40],cl
add [eax+0x3e],al
inc eax
add [eax-0x5bffbfc5],cl
cmp eax,[eax+0x0]
mov ah,0x52
inc ecx
add [dword 0x74694254],al
jnc 0x119e6
shr byte [eax+0x412a],byte 0x0
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
aam 0x2a
inc ecx
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [edx+ebp+0x2ac20041],dh
inc ecx
add [eax+eax],al
add [eax],al
mov al,0x10
inc eax
add [eax],bh
ds inc eax
add [esi+edi+0x40],al
add [eax+0x3e],cl
inc eax
add [esi+edi+0x40],cl
add [eax+0x3e],al
inc eax
add [eax-0x5bffbfc5],cl
cmp eax,[eax+0x0]
push eax
push esp
inc ecx
add [eax+0x55],ah
inc ecx
add [eax+0x55],ch
inc ecx
add [esp+edx*2+0x41],bh
add [edx],al
add bh,bh
db 0xff
db 0xfe
call dword far [esi+edx*2]
inc ecx
add [ebp+edx*2+0x41],ch
add [ebx],cl
push esp
push eax
gs jc 0x11b3b
imul esi,[ebx+0x74],dword 0x8b746e65
rcl ah,byte 0x2a
inc ecx
add [edi],al
or edx,[eax+edx*2+0x65]
jc 0x11b4e
imul esi,[ebx+0x74],dword 0xa8746e65
sub al,[ecx+0x0]
add al,0x11
inc eax
add [eax],al
add [edi],al
inc ebx
insb
popad
jnc 0x11b64
gs jnc 0x11af4
add [ebp-0x7c33ffc0],cl
inc esp
and al,0x4
clc
mov eax,[esp+0x4]
mov eax,[eax]
jmp dword [eax+0xc]
add dword [esp+0x4],byte -0x8
jmp dword 0x14670
add dword [esp+0x4],byte -0x8
jmp dword 0x14690
int3
int3
stc
sub al,[ecx+0x0]
pop es
sub eax,[ecx+0x0]
adc [ebx],ebp
inc ecx
add [ecx],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add al,al
add [eax],al
add [eax],al
add [eax],al
inc esi
sbb eax,0x800412b
add [eax],al
add [eax],al
add [eax],al
add [ebp+0x2b980040],cl
inc ecx
add [ecx],ch
sub eax,[ecx+0x0]
add [eax],al
add [eax],al
test al,0x2b
inc ecx
add ah,dl
sub eax,[ecx+0x0]
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
mov edx,0xc00412b
add [eax],al
add [edx+ebp+0x41],bl
add [eax],bh
ds inc eax
add [eax],ah
push esi
inc ecx
add [eax+0x3e],cl
inc eax
add [esi+edi+0x40],cl
add [eax+0x3e],al
inc eax
add [eax-0x5bffbfc5],cl
cmp eax,[eax+0x0]
push eax
push esp
inc ecx
add [eax+0x55],ah
inc ecx
add [eax+0x55],ch
inc ecx
add [esp+edx*2+0x41],bh
add [eax+0xe004156],dh
add [eax],al
add [eax],al
add [ecx],al
add [eax],al
add [ecx+edx],ah
inc eax
add [eax+eax],al
add [eax],al
adc eax,0x746e4954
gs jc 0x11c28
popad
arpl [ebp+0x64],sp
push eax
gs jc 0x11c3d
imul esi,[ebx+0x74],dword 0xd4746e65
sub eax,[ecx+0x0]
pop es
adc eax,0x746e4954
gs jc 0x11c43
popad
arpl [ebp+0x64],sp
push eax
gs jc 0x11c58
imul esi,[ebx+0x74],dword 0x98746e65
sub eax,[ecx+0x0]
shr byte [edx],1
inc ecx
add [eax],al
add [edi],al
inc ebx
insb
popad
jnc 0x11c6e
gs jnc 0x11bfe
add [eax+0x412c4c],dl
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
nop
sub al,0x41
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [esp+ebp+0x41],ch
add [edx+0x2c],bh
inc ecx
add [eax+eax],cl
add [eax],al
pop esp
sub al,[ecx+0x0]
cmp [esi],bh
inc eax
add [esi+edi+0x40],al
add [eax+0x3e],cl
inc eax
add [esi+edi+0x40],cl
add [eax+0x3e],al
inc eax
add [eax-0x5bffbfc5],cl
cmp eax,[eax+0x0]
adc al,0x58
inc ecx
add [eax+0x55],ah
inc ecx
add [eax+0x55],ch
inc ecx
add [esp+edx*2+0x41],bh
add [eax+0x60004158],al
pop ecx
inc ecx
add [eax-0x77ffbea7],dl
pop ecx
inc ecx
add ah,bl
push edi
inc ecx
add [edx],al
add bh,bh
db 0xff
db 0xfe
call dword far [ecx+ebx*2+0x41]
add [eax+0xf004158],ch
push esp
inc ebx
outsd
insb
insb
arpl [gs:ecx+ebp*2+0x6f],si
outsb
dec ecx
jz 0x11cee
insd
mov eax,eax
nop
sub al,0x41
add [edi],al
andps xmm0,oword [ebx+0x6f]
insb
insb
arpl [gs:ecx+ebp*2+0x6f],si
outsb
dec ecx
jz 0x11d05
insd
dec esp
sub al,0x41
add al,dl
sub al,[ecx+0x0]
add [eax],al
pop es
inc ebx
insb
popad
jnc 0x11d24
gs jnc 0x11cb4
add [ebp+0x2d040040],cl
inc ecx
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [ebp+0x2d680041],ch
inc ecx
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [esi],bh
sub eax,0x2d580041
inc ecx
add [eax],bl
add [eax],al
add [edx+ebp+0x41],bl
add [eax],bh
ds inc eax
add [esi+edi+0x40],al
add [eax+0x3e],cl
inc eax
add [esi+edi+0x40],cl
add [eax+0x3e],al
inc eax
add [eax-0x5bffbfc5],cl
cmp eax,[eax+0x0]
or al,0x5a
inc ecx
add [eax+0x55],ah
inc ecx
add [eax+0x55],ch
inc ecx
add [eax+0x5a],bh
inc ecx
add [esi+ebx*2+0x5e900041],cl
inc ecx
add [esi+ebx*2+0x5e840041],dl
inc ecx
add [eax+0x1000415e],cl
pop ebx
inc ecx
add [ebx+ebx*2+0xe0041],cl
add [eax],al
add [eax],al
add [eax],eax
add [eax],al
xchg eax,esp
adc [eax+0x0],al
adc al,0x0
add [eax],al
add al,0x0
std
db 0xff
cld
db 0xff
sti
db 0xff
db 0xfe
call dword far [eax-0x63ffbea5]
pop ebx
inc ecx
add [eax-0x1bffbea5],ch
pop ebx
inc ecx
add [ebx],cl
push esp
inc ebx
outsd
insb
insb
arpl [gs:ecx+ebp*2+0x6f],si
outsb
push dword 0x700412d
or edx,[ebx+eax*2+0x6f]
insb
insb
arpl [gs:ecx+ebp*2+0x6f],si
outsb
add al,0x2d
inc ecx
add al,dl
sub al,[ecx+0x0]
add [eax],al
pop es
inc ebx
insb
popad
jnc 0x11df8
gs jnc 0x11d88
add [ebp+0x2d900040],cl
inc ecx
add [edi],cl
cmovns edx,[ebx+0x74]
jc 0x11e00
outsb
jnc 0x11ddc
fs popad
jo 0x11e13
gs jc 0x11dc6
adc [eax+0x0],eax
add [edi+ebp],esi
pushfd
jnc 0x11d97
push edx
rcl byte [ecx],1
sahf
cmpsb
add [eax],ah
scasd
cmp eax,0x4307da82
insb
popad
jnc 0x11e2f
gs jnc 0x11dc1
add bh,bh
dec dword [ebx+0x412e10c0]
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax-0x47ffbed2],dl
cs inc ecx
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [edx+0x1800412e],ch
add [eax],al
add [edx+ebp+0x41],bl
add [eax],bh
ds inc eax
add [esi+edi+0x40],al
add [eax+0x3e],cl
inc eax
add [esi+edi+0x40],cl
add [eax+0x3e],al
inc eax
add [eax-0x5bffbfc5],cl
cmp eax,[eax+0x0]
mov eax,0x6000415e
push ebp
inc ecx
add [eax],dl
popad
inc ecx
add al,ch
pop edi
inc ecx
add [ebx+esi+0x40],dl
add [eax+0x54004163],bl
xor eax,[eax+0x0]
mov al,[0xf8004163]
arpl [ecx+0x0],ax
movsb
push dword 0x68d40041
inc ecx
add [eax+0x6a],al
inc ecx
add al,cl
push byte +0x41
add [esp+ebp*2+0x41],ch
add [ebp+ebp*2+0x41],dl
add al,ch
pop esi
inc ecx
add [edi+ebx*2],cl
inc ecx
add [eax],dh
pop edi
inc ecx
add [ebx+esi+0x40],dl
add [ebx+esi+0x40],dl
add [edx+0x63a40041],ch
inc ecx
add [eax],dh
gs inc ecx
add [ebp+0x66900041],bh
inc ecx
add [ebx+esi+0x40],dl
add ah,al
inc cx
add ah,dh
inc cx
add [eax+0x67],cl
inc ecx
add ah,dh
inc ecx
add [eax-0x1fffbe97],cl
imul eax,[ecx+0x0],dword 0x416a78
push cs
add [eax],al
add [eax],al
add [edx],al
add [eax],al
add [eax+edx+0x80040],dl
add [eax],al
mov [dword 0x140041],gs
add [eax],al
or [ebx+edx*2+0x74],dl
jc 0x11f19
outsb
jnc 0x11e44
mov eax,0x700412e
or [ebx+edx*2+0x74],dl
jc 0x11f28
outsb
jnc 0x11ed3
cs inc ecx
add al,dl
sub al,[ecx+0x0]
add [eax],al
pop es
inc ebx
insb
popad
jnc 0x11f45
gs jnc 0x11ed5
add [ebx+0x412edcc0],cl
add [esi],cl
or edx,[ebx+edx*2+0x74]
jc 0x11f4c
outsb
dec ecx
jz 0x11f4d
insd
or [eax],al
add [eax],al
add [eax],eax
add [eax],al
xchg eax,esp
adc [eax+0x0],al
add [eax],al
add [eax],al
lea eax,[eax+0x0]
dec eax
das
inc ecx
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add al,dh
das
inc ecx
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add al,ah
das
inc ecx
add [eax],bh
add [eax],al
add ah,al
sub eax,0x3e380041
inc eax
add [esi+edi+0x40],al
add [eax+0x3e],cl
inc eax
add [esi+edi+0x40],cl
add [eax+0x3e],al
inc eax
add [eax-0x5bffbfc5],cl
cmp eax,[eax+0x0]
int3
insd
inc ecx
add [eax+0x55],ah
inc ecx
add [eax],dl
popad
inc ecx
add al,ch
pop edi
inc ecx
add [eax+esi*2+0x70b80041],al
inc ecx
add [eax+esi*2+0x70c00041],bh
inc ecx
add al,bh
arpl [ecx+0x0],ax
cmp [edx+0x41],dh
add [edx+esi*2+0x73680041],dl
inc ecx
add al,cl
push byte +0x41
add [ebx+esi*2+0x74240041],ah
inc ecx
add [eax],ch
outsb
inc ecx
add [eax],bh
outsb
inc ecx
add [eax],dh
pop edi
inc ecx
add ah,dl
outsb
inc ecx
add [edi+ebp*2],dl
inc ecx
add [eax-0x5bffbe91],al
arpl [ecx+0x0],ax
sbb al,0x71
inc ecx
add [ebp+0x66900041],bh
inc ecx
add [eax+0x71],bl
inc ecx
add [eax+0x71],ch
inc ecx
add ah,dh
inc cx
add [eax+0x67],cl
inc ecx
add ah,dh
inc ecx
add [eax-0x1fffbe97],cl
imul eax,[ecx+0x0],dword 0x416a78
pushfd
outsb
inc ecx
add [eax-0x43ffbe92],bh
jno 0x12014
add [eax],al
jo 0x12018
add ah,bl
jnc 0x1201c
add ah,ch
jnc 0x12020
add [ebx],cl
push esp
push ebx
jz 0x12057
imul ebp,[esi+0x67],dword 0x7473694c
lock das
inc ecx
add [edi],al
or edx,[ebx+edx*2+0x74]
jc 0x12060
outsb
dec esp
imul esi,[ebx+0x74],dword 0x412f48
mov ah,0x2e
inc ecx
add [eax],al
add [edi],al
inc ebx
insb
popad
jnc 0x12080
gs jnc 0x12010
add [ebp+0x30600040],cl
inc ecx
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax+esi+0x41],bh
add [eax+eax],al
add [eax],al
mov al,0x10
inc eax
add [eax],bh
ds inc eax
add [esi+edi+0x40],al
add [eax+0x3e],cl
inc eax
add [esi+edi+0x40],cl
add [eax+0x3e],al
inc eax
add [eax-0x5bffbfc5],cl
cmp eax,[eax+0x0]
loopne 0x12099
inc eax
add ah,bl
jz 0x120a4
add [eax],ch
jnz 0x120a8
add [eax+0x75],al
inc ecx
add [ebx+esi+0x40],dl
add [ebx+esi+0x40],dl
add al,ah
jnz 0x120b8
add [esi+esi*2+0x41],ah
add [edi],al
push esp
push ebx
jz 0x120f3
gs popad
insd
db 0xd0
xor [ecx+0x0],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
in al,dx
xor [ecx+0x0],al
or [eax],al
add [eax],al
adc al,0x30
inc ecx
add [eax],bh
ds inc eax
add [esi+edi+0x40],al
add [eax+0x3e],cl
inc eax
add [esi+edi+0x40],cl
add [eax+0x3e],al
inc eax
add [eax-0x5bffbfc5],cl
cmp eax,[eax+0x0]
loopne 0x12109
inc eax
add ah,bl
jz 0x12114
add [eax],ah
jns 0x12118
add [ecx+edi*2],dh
inc ecx
add ah,dl
js 0x12120
add ah,ah
js 0x12124
add al,ah
jnz 0x12128
add ah,dh
js 0x1212c
add [dword 0x6e614854],cl
fs insb
gs push ebx
jz 0x12169
gs popad
insd
mov eax,eax
dec eax
xor [ecx+0x0],eax
add [eax],al
add [eax],al
add [eax],al
add [eax],al
xor [fs:ecx+0x0],eax
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
jna 0x1214f
inc ecx
add [eax+eax],cl
add [eax],al
test [eax],dh
inc ecx
add [eax],bh
ds inc eax
add [esi+edi+0x40],al
add [eax+0x3e],cl
inc eax
add [esi+edi+0x40],cl
add [eax+0x3e],al
inc eax
add [eax-0x5bffbfc5],cl
cmp eax,[eax+0x0]
adc al,0x7b
inc ecx
add ah,bl
jz 0x1218c
add [eax],ah
jns 0x12190
add [ecx+edi*2],dh
inc ecx
add ah,dl
js 0x12198
add ah,ah
js 0x1219c
add al,ah
jnz 0x121a0
add ah,dh
js 0x121a4
add [esi],cl
add [eax],al
add [eax],al
add [ecx],al
add [eax],al
add [eax+edx+0x80040],dl
add [eax],al
or edx,[esi+eax*2+0x69]
insb
gs push ebx
jz 0x121f1
gs popad
insd
mov eax,eax
db 0xd0
xor [ecx+0x0],eax
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
in al,dx
xor [ecx+0x0],eax
adc [eax],al
add [eax],al
adc al,0x30
inc ecx
add [eax],bh
ds inc eax
add [esi+edi+0x40],al
add [eax+0x3e],cl
inc eax
add [esi+edi+0x40],cl
add [eax+0x3e],al
inc eax
add [eax-0x5bffbfc5],cl
cmp eax,[eax+0x0]
loopne 0x12209
inc eax
add ah,bl
jz 0x12214
add [eax],ch
jnz 0x12218
add [eax+0x75],al
inc ecx
add [eax+0x7b],dl
inc ecx
add [ebx+esi+0x40],dl
add [eax+0x6400417b],cl
jna 0x1222c
add [ebx],dl
push esp
inc ebx
jnz 0x12264
jz 0x12262
insd
dec ebp
gs insd
outsd
jc 0x12273
push ebx
jz 0x1226f
gs popad
insd
dec esp
xor al,[ecx+0x0]
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
insb
xor al,[ecx+0x0]
adc al,0x0
add [eax],al
test [ecx],dh
inc ecx
add [eax],bh
ds inc eax
add [esi+edi+0x40],al
add [eax+0x3e],cl
inc eax
add [esi+edi+0x40],cl
add [eax+0x3e],al
inc eax
add [eax-0x5bffbfc5],cl
cmp eax,[eax+0x0]
sbb al,0x7c
inc ecx
add ah,bl
jz 0x12290
add [edi*2+0x75400041],dl
inc ecx
add [eax+0x7b],dl
inc ecx
add al,al
jnl 0x122a0
add [eax+0x6400417b],cl
jna 0x122a8
add [eax+0x7d],al
inc ecx
add [dword 0x6d654d54],cl
outsd
jc 0x122ed
push ebx
jz 0x122e9
gs popad
insd
mov eax,eax
enter 0x4132,0x0
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
in al,0x32
inc ecx
add [eax],bl
add [eax],al
add [ecx+esi+0x3e380041],al
inc eax
add [esi+edi+0x40],al
add [eax+0x3e],cl
inc eax
add [esi+edi+0x40],cl
add [eax+0x3e],al
inc eax
add [eax-0x5bffbfc5],cl
cmp eax,[eax+0x0]
jz 0x12345
inc ecx
add ah,bl
jz 0x1230c
add [eax],ch
jnz 0x12310
add [eax+0x75],al
inc ecx
add [eax+0x7b],dl
inc ecx
add [edi+edi*2+0x7b880041],ah
inc ecx
add [esi+esi*2+0x41],ah
add [edi],cl
push esp
push edx
gs jnc 0x12359
jnz 0x1235e
arpl [ebp+0x53],sp
jz 0x12363
gs popad
insd
int3
add dword [esp+0x4],byte -0x14
mov eax,[esp+0x4]
mov eax,[eax]
jmp dword [eax+0x8]
add dword [esp+0x4],byte -0x14
mov eax,[esp+0x4]
mov eax,[eax]
jmp dword [eax+0xc]
add dword [esp+0x4],byte -0x14
mov eax,[esp+0x4]
mov eax,[eax]
jmp dword [eax+0x10]
add dword [esp+0x4],byte -0x14
mov eax,[esp+0x4]
mov eax,[eax]
jmp dword [eax+0x14]
add dword [esp+0x4],byte -0x14
mov eax,[esp+0x4]
mov eax,[eax]
jmp dword [eax+0x18]
add dword [esp+0x4],byte -0x14
mov eax,[esp+0x4]
mov eax,[eax]
jmp dword [eax+0x1c]
add dword [esp+0x4],byte -0x14
mov eax,[esp+0x4]
mov eax,[eax]
jmp dword [eax+0x20]
add dword [esp+0x4],byte -0x14
mov eax,[esp+0x4]
mov eax,[eax]
jmp dword [eax+0x24]
add dword [esp+0x4],byte -0x14
mov eax,[esp+0x4]
mov eax,[eax]
jmp dword [eax+0x28]
add dword [esp+0x4],byte -0x14
mov eax,[esp+0x4]
mov eax,[eax]
jmp dword [eax]
add dword [esp+0x4],byte -0x14
mov eax,[esp+0x4]
mov eax,[eax]
jmp dword [eax+0x4]
add dword [esp+0x4],byte -0x14
jmp dword 0x531c
add dword [esp+0x4],byte -0x14
jmp dword 0x5344
add dword [esp+0x4],byte -0x14
jmp dword 0x5358
int3
int3
mov segr6,[ebx]
inc ecx
add [eax-0x5dffbecd],bl
xor eax,[ecx+0x0]
jnc 0x123ef
inc ecx
add [eax-0xaffbecd],al
xor al,[ecx+0x0]
add esi,[ebx]
inc ecx
add [ecx],dl
xor eax,[ecx+0x0]
pop ds
xor eax,[ecx+0x0]
sub eax,0x3b004133
xor eax,[ecx+0x0]
dec ecx
xor eax,[ecx+0x0]
push edi
xor eax,[ecx+0x0]
xor eax,[gs:ecx+0x0]
add [eax],eax
add [eax],al
or al,0x0
add [eax],al
add [eax],al
add [eax],al
rol byte [eax],byte 0x0
add [eax],al
add [eax],al
inc esi
scasb
xor eax,[ecx+0x0]
adc al,0x0
add [eax],al
add [eax],al
add [eax],al
mov eax,eax
push esp
xor al,0x41
add dh,ah
xor eax,[ecx+0x0]
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
xor byte [ecx+eax*2],0x0
sbb [eax],al
add [eax],al
movsb
adc [eax+0x0],eax
cmp [esi],bh
inc eax
add al,dh
bound eax,[eax+0x0]
cld
bound eax,[eax+0x0]
dec esp
ds inc eax
add [eax+0x3e],al
inc eax
add [ebx],cl
inc eax
add [ebx+edi-0x3efbffc0],ah
inc ecx
add [ecx+eax*8],bh
inc ecx
add [ecx+eax*8-0x3df3ffbf],ah
inc ecx
add [eax-0xbffbe3e],dl
ret 0x41
cld
les eax,[ecx+0x0]
or ch,al
inc ecx
add [eax*8-0x3adfffbf],dl
inc ecx
add [eax*8-0x3a57ffbf],ch
inc ecx
add [esi],cl
push esp
push ebx
jz 0x124f7
gs popad
insd
inc ecx
fs popad
jo 0x12501
gs jc 0x12420
fdiv qword [ecx+eax*2]
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add ah,bl
xor al,0x41
add [eax],cl
add [eax],al
add [eax+0x38004010],dh
ds inc eax
add [esi+edi+0x40],al
add [eax+0x3e],cl
inc eax
add [esi+edi+0x40],cl
add [eax+0x3e],al
inc eax
add [eax-0x5bffbfc5],cl
cmp eax,[eax+0x0]
pop eax
inc esp
inc ecx
add [esp+edx*2],cl
inc ebx
insb
popad
jnc 0x12556
inc esi
imul ebp,[esi+0x64],dword 0x408d7265
add [eax],bh
xor eax,0x41
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
dec eax
xor eax,0x280041
add [eax],al
mov al,0x10
inc eax
add [eax],bh
ds inc eax
add [esi+edi+0x40],al
add [eax+0x3e],cl
inc eax
add [esi+edi+0x40],cl
add [eax+0x3e],al
inc eax
add [eax-0x5bffbfc5],cl
cmp eax,[eax+0x0]
add al,0x80
inc ecx
add [eax+eax*4],ch
inc ecx
add [ebx+esi+0x40],dl
add [ebx+esi+0x40],dl
add [ebx+esi+0x40],dl
add [esi],al
push esp
inc esi
imul ebp,[ebp+0x72],dword 0x41359c90
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add al,cl
xor eax,0x41
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
fidiv dword [dword 0x8c0041]
add [eax],al
in al,dx
xor al,0x41
add [eax],bh
ds inc eax
add [esi+edi+0x40],al
add [eax+0x3e],cl
inc eax
add [esi+edi+0x40],cl
add [eax+0x3e],al
inc eax
add [eax-0x5bffbfc5],cl
cmp eax,[eax+0x0]
in al,dx
xchg al,[ecx+0x0]
sub al,0x80
inc ecx
add [edi+eax*4+0x41],cl
add [eax+0x58004187],cl
mov eax,[ecx+0x0]
test [eax-0x545bffbf],cl
inc ecx
add [eax+0x30004188],ch
mov [ecx+0x0],eax
jz 0x1256a
inc ecx
add [esp+ebp*4+0x41],bl
add [ecx+ebx*4],dh
inc ecx
add [esi],cl
add [eax],al
add [eax],al
add [ecx],al
add [eax],al
add [eax+edx+0x800040],dl
add [eax],al
pop es
push esp
push edx
gs popad
gs jc 0x1256e
db 0xc0
xor [esi],dh
inc ecx
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],dh
ss inc ecx
add [eax+eax],cl
add [eax],al
pop eax
js 0x1264f
add [eax],bh
ds inc eax
add [esi+edi+0x40],al
add [eax+0x3e],cl
inc eax
add [esi+edi+0x40],cl
add [eax+0x3e],al
inc eax
add [eax-0x5bffbfc5],cl
cmp eax,[eax+0x0]
loopne 0x12669
inc eax
add [edi],al
inc ebp
push esp
push dword 0x64616572
cmp al,0x36
inc ecx
add [edx],cl
push cs
push esp
inc ebx
outsd
insd
jo 0x126b3
outsb
gs outsb
jz 0x12697
popad
insd
gs push eax
ss inc ecx
add [edi],cl
cmovns eax,[ebp+0x73]
imul esp,[edi+0x6e],dword 0x6f4e7265
jz 0x126c8
o16 jns 0x12686
adc [eax+0x0],eax
add [edi],eax
call dword 0xe3a7dfdd
rcl dword [ecx],1
stosb
mov cl,0x0
ror byte [edi-0x4f],byte 0x6f
mov esp,0x616c4307
jnc 0x126ef
gs jnc 0x12681
add bh,bh
dec dword [ebx-0x3f7c3340]
fsubr st1
cmp eax,[edi+0x44830000]
and al,0x4
fmul dword [ebx-0x74fbdbbc]
add bh,bh
pushad
sub [ebx-0x27fbdbbc],al
jmp dword 0x1ad88
add dword [esp+0x4],byte -0x28
jmp dword 0x1ada8
add dword [esp+0x4],byte -0x2c
mov eax,[esp+0x4]
mov eax,[eax]
jmp dword [eax+0x28]
add dword [esp+0x4],byte -0x2c
jmp dword 0x1ad88
add dword [esp+0x4],byte -0x2c
jmp dword 0x1ada8
lea esi,[esi]
inc ecx
add [ebx-0x5affbeca],bl
ss inc ecx
add [ebp-0x50ffbeca],al
ss inc ecx
add [ebp-0x38ffbeca],bh
ss inc ecx
add [edx],al
add [eax],al
add [eax+0x18],bl
mov esp,edx
xchg ch,ah
pop ecx
inc ebp
db 0x8f
int 0x6b
dec edi
db 0x82
inc ecx
push ecx
in eax,dx
db 0xd1
ss inc ecx
add [eax],ch
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add al,al
add [eax],al
add [eax],al
add [eax],al
inc esi
loope 0x12755
inc ecx
add [eax+eax],ch
add [eax],al
add [eax],al
add [eax],al
lea eax,[eax+0x0]
js 0x12765
inc ecx
add ch,ch
ss inc ecx
add [eax],al
add [eax],al
add [eax+0x2c004137],ch
cmp [ecx+0x0],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
mov edx,0x1c004137
cmp [ecx+0x0],al
xor [eax],al
add [eax],al
pop esp
sub al,[ecx+0x0]
sub [ebp+0x3e440041],bh
inc eax
add [esi+esi*4+0x41],ah
add [esi+edi+0x40],cl
add [eax+0x3e],al
inc eax
add [eax-0x5bffbfc5],cl
cmp eax,[eax+0x0]
call dword 0x6001692e
push ebp
inc ecx
add [ecx+edi*4],ch
inc ecx
add [esp+edx*2+0x41],bh
add [edx+edi*4],al
inc ecx
add ah,cl
mov eax,0xba140041
inc ecx
add [ebx+edi*4],cl
inc ecx
add [eax-0x43],al
inc ecx
add [edx+edi*4],ah
inc ecx
add [edx+edi*4],bl
inc ecx
add [eax-0x43],cl
inc ecx
add [ebp+esi*4+0xe0041],bl
add [eax],al
add [eax],al
add [eax],eax
add [eax],al
cmp [esi],dh
inc ecx
add [eax],cl
add [eax],al
add [eax],dl
add ch,bh
db 0xff
cld
db 0xff
sti
db 0xff
db 0xff
db 0xff
cli
db 0xff
stc
db 0xff
clc
push edi
push esi
push ebp
push esp
push ebx
push edx
db 0xff
db 0xfe
push ecx
push eax
db 0xff
mov eax,0xc00041b9
mov ecx,0xb9c40041
inc ecx
add ah,bl
mov ecx,0xba100041
inc ecx
add al,ah
mov ecx,0xb9e80041
inc ecx
add ah,ch
mov ecx,0xb9f80041
inc ecx
add [edx+edi*4-0x4547ffbf],ah
inc ecx
add al,bl
mov esp,0xb9e40041
inc ecx
add al,cl
mov ecx,0xb9b40041
inc ecx
add [eax],al
mov ebp,0x540a0041
inc ebx
outsd
insd
jo 0x12892
outsb
gs outsb
jz 0x127b8
sub al,0x38
inc ecx
add [edi],al
or dl,[ebx+eax*2+0x6f]
insd
jo 0x128a3
outsb
gs outsb
jz 0x128b1
aaa
inc ecx
add al,dl
sub al,[ecx+0x0]
add al,[eax]
pop es
inc ebx
insb
popad
jnc 0x128bb
gs jnc 0x1284d
add [eax],bh
ss inc ecx
add [eax],cl
add [eax],al
call dword far [eax]
add [eax],al
inc byte [eax]
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax+0x4e040000],al
popad
insd
gs cmp al,0x10
inc eax
add [eax+eax],cl
add bh,bh
or al,0x0
add bh,bh
add [eax],eax
add [eax],al
add [eax],al
add [eax+0x0],al
add [eax],eax
add edx,[ecx+0x67]
lea eax,[eax+0x0]
fdivr dword [eax]
inc ecx
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add al,bh
cmp [ecx+0x0],al
adc al,0x0
add [eax],al
mov al,0x10
inc eax
add [eax],bh
ds inc eax
add [esi+edi+0x40],al
add [eax+0x3e],cl
inc eax
add [esi+edi+0x40],cl
add [eax+0x3e],al
inc eax
add [eax-0x5bffbfc5],cl
cmp eax,[eax+0x0]
adc al,0xbe
inc ecx
add [eax],dl
mov esi,0xbe480041
inc ecx
add [eax+0x7c0041be],ch
mov esi,0xbeac0041
inc ecx
add ah,cl
mov ebp,0xbe600041
inc ecx
add [esi+edi*4+0x54100041],dh
inc edx
popad
jnc 0x12967
arpl [ecx+0x63],ax
jz 0x1296c
outsd
outsb
dec esp
imul ebp,[esi+0x6b],dword 0x5800408d
cmp [ecx+0x0],eax
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
mov esp,0x4139
add [eax],al
add [eax],al
add [eax],al
add [eax-0x57ffbec7],ah
cmp [ecx+0x0],eax
push esp
add [eax],al
add [edi+esi],ch
inc ecx
add [eax],ch
mov ebp,0x3e440041
inc eax
add [esi+esi*4+0x41],ah
add [esi+edi+0x40],cl
add [eax+0x3e],al
inc eax
add [eax-0x5bffbfc5],cl
cmp eax,[eax+0x0]
add al,0xbf
inc ecx
add [eax+0x55],ah
inc ecx
add [ecx+edi*4],ch
inc ecx
add [esp+edx*2+0x41],bh
add [edx+edi*4],al
inc ecx
add [edi+edi*4+0x41],ch
add [edx+edi*4],dl
inc ecx
add [ebx+edi*4],cl
inc ecx
add [eax-0x43],al
inc ecx
add [edx+edi*4],ah
inc ecx
add [edx+edi*4],bl
inc ecx
add [eax-0x43],cl
inc ecx
add al,al
mov esi,0xc02c0041
inc ecx
add al,dl
mov edi,0xbf640041
inc ecx
add [edi+edi*4-0x4097ffbf],dl
inc ecx
add [edi+edi*4+0x10041],dh
out dx,eax
call dword far [eax+0xc0041bf]
push esp
inc edx
popad
jnc 0x12a17
arpl [ecx+0x63],ax
jz 0x12a1c
outsd
outsb
lea eax,[eax+0x0]
mov esp,0x7004139
or al,0x54
inc edx
popad
jnc 0x12a2c
arpl [ecx+0x63],ax
jz 0x12a31
outsd
outsb
pop eax
cmp [ecx+0x0],eax
sub [eax],bh
inc ecx
add [edx],al
add [edi],al
inc ebx
insb
popad
jnc 0x12a4d
gs jnc 0x129dd
add [ebx+0x4139e4c0],cl
add [esi],cl
push cs
push esp
dec ecx
gs outsb
jz 0x12a3a
popad
jo 0x12a35
outsb
jz 0x12a65
jns 0x129fd
add [eax],al
add [ecx],al
add [eax],al
add [eax+edx+0x40040],dl
add [eax],al
push ebx
push esi
push edi
mov edi,ecx
mov esi,edx
mov ebx,eax
mov ecx,edi
mov edx,esi
mov eax,ebx
call dword 0x5934
pop edi
pop esi
pop ebx
ret
push ecx
mov [esp],ax
mov [esp+0x2],dx
mov eax,[esp]
pop edx
ret
nop
push ebp
mov ebp,esp
push ebx
push esi
push edi
mov edi,ecx
mov esi,edx
mov ebx,eax
mov eax,[ebp+0xc]
push eax
mov eax,[ebp+0x8]
push eax
mov ecx,edi
mov edx,esi
mov eax,ebx
call dword 0x5918
pop edi
pop esi
pop ebx
pop ebp
ret 0x8
mov eax,eax
push ebp
mov ebp,esp
push ebx
push esi
push edi
mov edi,ecx
mov esi,edx
mov ebx,eax
mov eax,[ebp+0xc]
push eax
mov eax,[ebp+0x8]
push eax
mov ecx,edi
mov edx,esi
mov eax,ebx
call dword 0x5954
pop edi
pop esi
pop ebx
pop ebp
ret 0x8
mov eax,eax
cmp dword [eax],byte -0x1
jnz 0x12a87
cmp dword [eax+0x4],byte -0x1
jz 0x12a8a
xor eax,eax
ret
mov al,0x1
ret
lea eax,[eax+0x0]
fdivr qword [edx]
inc ecx
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add ah,bl
cmp al,[ecx+0x0]
adc al,0x0
add [eax],al
mov al,0x10
inc eax
add [eax],bh
ds inc eax
add [esi+edi+0x40],al
add [eax+0x3e],cl
inc eax
add [esi+edi+0x40],cl
add [eax+0x3e],al
inc eax
add [eax-0x5bffbfc5],cl
cmp eax,[eax+0x0]
js 0x12b16
inc ecx
add [ecx],cl
push esp
push edx
gs inc edi
jc 0x12b53
jnz 0x12b56
mov eax,eax
xor al,0x3b
inc ecx
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [ebx+edi],dh
inc ecx
add [eax+eax],ah
add [eax],al
mov al,0x10
inc eax
add [eax],bh
ds inc eax
add [esi+edi+0x40],al
add [eax+0x3e],cl
inc eax
add [esi+edi+0x40],cl
add [eax+0x3e],al
inc eax
add [eax-0x5bffbfc5],cl
cmp eax,[eax+0x0]
aam 0x3f
inc ecx
add [edx],cl
push esp
push edx
gs inc edi
jc 0x12bab
jnz 0x12bae
jnc 0x12ad0
mov eax,[eax+0xc]
call dword 0x13d24
ret
lea eax,[eax+0x0]
push ebx
push esi
push edi
push ebp
add esp,byte -0x8
mov [esp+0x4],edx
mov [esp],eax
xor ebp,ebp
mov eax,[esp]
mov eax,[eax+0xc]
mov esi,[eax+0x8]
dec esi
test esi,esi
jl 0x12ba2
inc esi
xor edi,edi
mov eax,[esp]
mov eax,[eax+0xc]
mov edx,edi
call dword 0x13e7c
mov ebx,eax
mov edx,ebx
mov eax,[esp+0x4]
call dword 0x2e1c
test al,al
jz 0x12b9e
test ebp,ebp
jz 0x12b9c
mov edx,ebp
mov eax,ebx
call dword 0x2e1c
test al,al
jz 0x12b9e
mov ebp,ebx
inc edi
dec esi
jnz 0x12b6d
mov eax,ebp
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
ret
nop
push ebp
mov ebp,esp
push ecx
push ebx
push esi
push edi
mov [ebp-0x4],ecx
mov edi,edx
mov ebx,[ebp+0x8]
test edi,edi
jz 0x12bcc
mov edx,ebx
mov eax,edi
call dword 0x12b4c
mov esi,eax
jmp short 0x12bce
xor esi,esi
cmp dword [ebp-0x4],byte +0x0
jz 0x12be2
mov edx,ebx
mov eax,[ebp-0x4]
call dword 0x12b4c
mov ebx,eax
jmp short 0x12be4
xor ebx,ebx
test esi,esi
jnz 0x12bf5
test ebx,ebx
jnz 0x12bf0
xor eax,eax
jmp short 0x12c11
mov eax,[ebp-0x4]
jmp short 0x12c11
test ebx,ebx
jnz 0x12bfd
mov eax,edi
jmp short 0x12c11
mov edx,ebx
mov eax,esi
call dword 0x2e1c
test al,al
jz 0x12c0e
mov eax,edi
jmp short 0x12c11
mov eax,[ebp-0x4]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
ret 0x4
lea eax,[eax+0x0]
push ebp
mov ebp,esp
push ecx
push ebx
push esi
push edi
test dl,dl
jz 0x12c2f
add esp,byte -0x10
call dword 0x2f14
mov edi,ecx
mov [ebp-0x1],dl
mov ebx,eax
xor edx,edx
mov eax,ebx
call dword 0x2bc0
mov dl,0x1
mov eax,[0x41294c]
call dword 0x2bc0
mov esi,eax
mov [ebx+0xc],esi
mov eax,esi
mov edx,edi
call dword 0x13d24
mov eax,ebx
cmp byte [ebp-0x1],0x0
jz 0x12c70
call dword 0x2f6c
pop dword [dword fs:0x0]
add esp,byte +0xc
mov eax,ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
ret
push ebx
push esi
call dword 0x2fbc
mov ebx,edx
mov esi,eax
mov edx,ebx
and dl,0xfc
mov eax,esi
call dword 0x2be0
mov eax,[esi+0x4]
call dword 0x2bf0
mov eax,[esi+0x8]
call dword 0x2bf0
mov eax,[esi+0xc]
call dword 0x2bf0
test bl,bl
jng 0x12cb2
mov eax,esi
call dword 0x2f64
pop esi
pop ebx
ret
lea eax,[eax+0x0]
push ebx
push esi
push edi
push ebp
push ecx
mov [esp],edx
mov ebx,eax
mov eax,[ebx+0x4]
test eax,eax
jz 0x12cf2
mov ebp,[eax+0x8]
dec ebp
test ebp,ebp
jl 0x12cf2
inc ebp
xor esi,esi
mov edx,esi
mov eax,[ebx+0x4]
call dword 0x13e7c
mov edi,eax
mov edx,[esp]
mov eax,edi
call dword 0x2ae4
test al,al
jnz 0x12d17
inc esi
dec ebp
jnz 0x12cd4
mov eax,[ebx+0x8]
test eax,eax
jz 0x12d15
mov edx,[esp]
mov ecx,[eax]
call dword [ecx+0x54]
mov esi,eax
test esi,esi
jl 0x12d15
mov edx,esi
mov eax,[ebx+0x8]
mov ecx,[eax]
call dword [ecx+0x18]
mov edi,eax
jmp short 0x12d17
xor edi,edi
mov eax,edi
pop edx
pop ebp
pop edi
pop esi
pop ebx
ret
nop
push ebx
push esi
push edi
push ebp
push ecx
mov ebp,edx
mov edi,eax
mov byte [esp],0x1
mov eax,[edi+0xc]
mov ebx,[eax+0x8]
dec ebx
test ebx,ebx
jl 0x12d56
inc ebx
xor esi,esi
mov eax,[edi+0xc]
mov edx,esi
call dword 0x13e7c
mov edx,eax
mov eax,ebp
call dword 0x2e1c
test al,al
jnz 0x12d5a
inc esi
dec ebx
jnz 0x12d3b
mov byte [esp],0x0
movzx eax,byte [esp]
pop edx
pop ebp
pop edi
pop esi
pop ebx
ret
push ebp
mov ebp,esp
add esp,0xfffffef4
push ebx
push esi
xor ecx,ecx
mov [ebp-0x4],ecx
mov esi,edx
mov ebx,eax
xor eax,eax
push ebp
push dword 0x413e14
push dword [fs:eax]
mov [fs:eax],esp
lea edx,[ebp-0x104]
mov eax,esi
call dword 0x2ad0
lea edx,[ebp-0x104]
lea eax,[ebp-0x4]
call dword 0x3c80
mov edx,[ebp-0x4]
mov eax,ebx
call dword 0x12cb8
test eax,eax
jz 0x12ddf
mov eax,[ebp-0x4]
mov [ebp-0x10c],eax
mov byte [ebp-0x108],0xb
lea eax,[ebp-0x10c]
push eax
push byte +0x0
mov ecx,[dword 0x468d4c]
mov dl,0x1
mov eax,[0x412564]
call dword 0xb548
call dword 0x3464
cmp dword [ebx+0x4],byte +0x0
jnz 0x12df4
mov dl,0x1
mov eax,[0x41294c]
call dword 0x2bc0
mov [ebx+0x4],eax
mov edx,esi
mov eax,[ebx+0x4]
call dword 0x13d24
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x413e1b
lea eax,[ebp-0x4]
call dword 0x3a1c
ret
jmp dword 0x3384
jmp short 0x12e0b
pop esi
pop ebx
mov esp,ebp
pop ebp
ret
lea eax,[eax+0x0]
push ebx
push esi
push edi
mov edi,edx
mov ebx,eax
mov esi,[ebx+0x4]
test esi,esi
jz 0x12e42
mov edx,edi
mov eax,esi
call dword 0x13ed8
test eax,eax
setnl al
jmp short 0x12e44
xor eax,eax
pop edi
pop esi
pop ebx
ret
push ebx
push esi
mov ebx,edx
mov esi,eax
test ebx,ebx
jz 0x12e62
mov eax,esi
call dword 0x4bfc
cmp ebx,eax
jz 0x12e62
xor eax,eax
pop esi
pop ebx
ret
mov al,0x1
pop esi
pop ebx
ret
nop
push ebx
push esi
push edi
mov edi,edx
mov esi,eax
mov eax,[esi+0xc]
mov ebx,[eax+0x8]
dec ebx
cmp ebx,byte +0x0
jl 0x12ea0
mov edx,ebx
mov eax,[esi+0xc]
call dword 0x13e7c
mov edx,edi
call dword 0x12e48
test al,al
jz 0x12e9a
mov edx,ebx
mov eax,[esi+0xc]
call dword 0x13d70
dec ebx
cmp ebx,byte -0x1
jnz 0x12e7b
mov eax,[esi+0x4]
test eax,eax
jz 0x12ed5
mov ebx,[eax+0x8]
dec ebx
cmp ebx,byte +0x0
jl 0x12ed5
mov edx,ebx
mov eax,[esi+0x4]
call dword 0x13e7c
mov edx,edi
call dword 0x12e48
test al,al
jz 0x12ecf
mov edx,ebx
mov eax,[esi+0x4]
call dword 0x13d70
dec ebx
cmp ebx,byte -0x1
jnz 0x12eb0
mov ebx,[esi+0x8]
test ebx,ebx
jz 0x12f10
mov eax,ebx
mov edx,[eax]
call dword [edx+0x14]
dec eax
cmp eax,byte +0x0
jl 0x12f10
mov ebx,eax
mov edx,ebx
mov eax,[esi+0x8]
mov ecx,[eax]
call dword [ecx+0x18]
mov edx,edi
call dword 0x12e48
test al,al
jz 0x12f0a
mov edx,ebx
mov eax,[esi+0x8]
mov ecx,[eax]
call dword [ecx+0x48]
dec ebx
cmp ebx,byte -0x1
jnz 0x12eeb
pop edi
pop esi
pop ebx
ret
push ebx
push esi
push edi
push ebp
push ecx
mov [esp],edx
mov edi,eax
mov eax,[edi+0x20]
cmp eax,[esp]
jz 0x12f57
mov eax,[esp]
mov [edi+0x20],eax
mov eax,[edi+0x4]
mov esi,[eax+0x8]
dec esi
test esi,esi
jl 0x12f57
inc esi
xor ebp,ebp
mov eax,[edi+0x4]
mov edx,ebp
call dword 0x13e7c
mov ebx,eax
mov edx,[esp]
mov eax,ebx
call dword 0x12d20
mov [ebx+0x10],al
inc ebp
dec esi
jnz 0x12f3a
pop edx
pop ebp
pop edi
pop esi
pop ebx
ret
lea eax,[eax+0x0]
push ebx
push esi
push edi
test dl,dl
jz 0x12f6f
add esp,byte -0x10
call dword 0x2f14
mov ebx,edx
mov edi,eax
xor edx,edx
mov eax,edi
call dword 0x2bc0
mov dl,0x1
mov eax,[0x41294c]
call dword 0x2bc0
mov [edi+0x4],eax
lea eax,[edi+0x8]
push eax
call dword 0x5b98
mov ecx,[dword 0x412a5c]
mov dl,0x1
mov eax,[0x413a90]
call dword 0x12c1c
mov esi,eax
mov eax,[edi+0x4]
mov edx,esi
call dword 0x13d24
mov byte [esi+0x10],0x1
mov eax,edi
test bl,bl
jz 0x12fcb
call dword 0x2f6c
pop dword [dword fs:0x0]
add esp,byte +0xc
mov eax,edi
pop edi
pop esi
pop ebx
ret
lea eax,[eax+0x0]
push ebx
push esi
push edi
push ebp
call dword 0x2fbc
mov ebx,edx
mov ebp,eax
lea eax,[ebp+0x8]
push eax
call dword 0x5aa8
mov eax,[ebp+0x4]
test eax,eax
jz 0x1300f
mov esi,[eax+0x8]
dec esi
test esi,esi
jl 0x1300f
inc esi
xor edi,edi
mov eax,[ebp+0x4]
mov edx,edi
call dword 0x13e7c
call dword 0x2bf0
inc edi
dec esi
jnz 0x12ffc
mov eax,[ebp+0x4]
call dword 0x2bf0
mov edx,ebx
and dl,0xfc
mov eax,ebp
call dword 0x2be0
test bl,bl
jng 0x1302e
mov eax,ebp
call dword 0x2f64
pop ebp
pop edi
pop esi
pop ebx
ret
nop
push ebx
push esi
push edi
push ebp
push ecx
mov [esp],edx
mov ebp,eax
xor esi,esi
mov eax,[ebp+0x4]
mov ebx,[eax+0x8]
dec ebx
test ebx,ebx
jl 0x13070
inc ebx
xor edi,edi
mov eax,[ebp+0x4]
mov edx,edi
call dword 0x13e7c
mov edx,[esp]
push edx
mov ecx,esi
mov edx,eax
mov eax,[0x413a90]
call dword 0x12bac
mov esi,eax
inc edi
dec ebx
jnz 0x1304e
mov eax,esi
pop edx
pop ebp
pop edi
pop esi
pop ebx
ret
push ebx
push esi
push edi
push ebp
push ecx
mov [esp],edx
mov ebp,eax
xor edi,edi
mov eax,[ebp+0x4]
mov ebx,[eax+0x8]
dec ebx
test ebx,ebx
jl 0x130b4
inc ebx
xor esi,esi
mov eax,[ebp+0x4]
mov edx,esi
call dword 0x13e7c
cmp byte [eax+0x10],0x0
jz 0x130ac
mov edx,[esp]
call dword 0x12cb8
mov edi,eax
test edi,edi
jnz 0x130b4
inc esi
dec ebx
jnz 0x13092
mov eax,edi
pop edx
pop ebp
pop edi
pop esi
pop ebx
ret
push ebp
mov ebp,esp
add esp,0xfffffef4
xor eax,eax
mov [ebp-0x10c],eax
xor eax,eax
push ebp
push dword 0x41413f
push dword [fs:eax]
mov [fs:eax],esp
lea edx,[ebp-0x108]
mov eax,[ebp+0x8]
mov eax,[eax-0x4]
call dword 0x2ad0
lea eax,[ebp-0x108]
mov [ebp-0x8],eax
mov byte [ebp-0x4],0x4
lea eax,[ebp-0x8]
push eax
push byte +0x0
lea edx,[ebp-0x10c]
mov eax,[0x468e44]
call dword 0x5750
mov ecx,[ebp-0x10c]
mov dl,0x1
mov eax,[0x412564]
call dword 0xb48c
call dword 0x3464
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x414146
lea eax,[ebp-0x10c]
call dword 0x3a1c
ret
jmp dword 0x3384
jmp short 0x13133
mov esp,ebp
pop ebp
ret
mov eax,eax
push ebp
mov ebp,esp
add esp,byte -0x18
push ebx
push esi
push edi
mov [ebp-0x4],ecx
mov [ebp-0xc],edx
mov [ebp-0x8],eax
mov edx,[ebp-0x4]
mov eax,[ebp-0x8]
call dword 0x13034
mov [ebp-0x10],eax
cmp dword [ebp-0x10],byte +0x0
jnz 0x13179
push ebp
call dword 0x130bc
pop ecx
mov edx,[ebp-0xc]
mov eax,[ebp-0x10]
call dword 0x12b40
mov eax,[ebp-0x8]
mov eax,[eax+0x4]
mov eax,[eax+0x8]
dec eax
test eax,eax
jl 0x13210
inc eax
mov [ebp-0x18],eax
mov dword [ebp-0x14],0x0
mov eax,[ebp-0x8]
mov eax,[eax+0x4]
mov edx,[ebp-0x14]
call dword 0x13e7c
mov ebx,eax
cmp ebx,[ebp-0x10]
jz 0x13208
mov eax,[ebx+0x4]
test eax,eax
jz 0x13208
mov esi,[eax+0x8]
dec esi
cmp esi,byte +0x0
jl 0x13208
mov edx,esi
mov eax,[ebx+0x4]
call dword 0x13e7c
mov edi,eax
mov edx,[ebp-0xc]
mov eax,edi
call dword 0x2e1c
test al,al
jz 0x13202
mov edx,edi
mov eax,[ebp-0x8]
call dword 0x13034
cmp eax,[ebp-0x10]
jnz 0x13202
mov edx,esi
mov eax,[ebx+0x4]
call dword 0x13d70
mov eax,[ebp-0x10]
mov eax,[eax+0x4]
mov edx,edi
call dword 0x13d24
dec esi
cmp esi,byte -0x1
jnz 0x131c2
inc dword [ebp-0x14]
dec dword [ebp-0x18]
jnz 0x1319d
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret
nop
add eax,byte +0x8
push eax
call dword 0x5ab0
ret
mov eax,eax
push ebx
mov ebx,edx
mov edx,ebx
call dword 0x13034
test eax,eax
jz 0x13239
mov edx,ebx
call dword 0x12d64
pop ebx
ret
nop
push ebx
push esi
push edi
push ebp
push ecx
mov ebp,edx
mov edi,eax
mov byte [esp],0x1
mov eax,[edi+0x4]
mov ebx,[eax+0x8]
dec ebx
test ebx,ebx
jl 0x13270
inc ebx
xor esi,esi
mov eax,[edi+0x4]
mov edx,esi
call dword 0x13e7c
mov edx,ebp
call dword 0x12e24
test al,al
jnz 0x13274
inc esi
dec ebx
jnz 0x13257
mov byte [esp],0x0
movzx eax,byte [esp]
pop edx
pop ebp
pop edi
pop esi
pop ebx
ret
mov eax,eax
push ebx
push esi
push edi
push ebp
mov ebp,edx
mov edi,eax
mov eax,[edi+0x4]
mov ebx,[eax+0x8]
dec ebx
test ebx,ebx
jl 0x132b2
inc ebx
xor esi,esi
mov eax,[edi+0x4]
mov edx,esi
call dword 0x13e7c
mov eax,[eax+0xc]
mov edx,ebp
call dword 0x13ed8
test eax,eax
jnl 0x132ca
inc esi
dec ebx
jnz 0x13296
mov ecx,ebp
mov dl,0x1
mov eax,[0x413a90]
call dword 0x12c1c
mov edx,eax
mov eax,[edi+0x4]
call dword 0x13d24
pop ebp
pop edi
pop esi
pop ebx
ret
nop
add eax,byte +0x8
push eax
call dword 0x5ba0
ret
mov eax,eax
push ebx
push esi
push edi
push ebp
mov ebp,edx
mov edi,eax
mov eax,[edi+0x4]
mov ebx,[eax+0x8]
dec ebx
cmp ebx,byte +0x0
jl 0x13325
mov eax,[edi+0x4]
mov edx,ebx
call dword 0x13e7c
mov esi,eax
mov edx,ebp
mov eax,esi
call dword 0x12e68
mov eax,[esi+0xc]
cmp dword [eax+0x8],byte +0x0
jnz 0x1331f
mov eax,esi
call dword 0x2bf0
mov eax,[edi+0x4]
mov edx,ebx
call dword 0x13d70
dec ebx
cmp ebx,byte -0x1
jnz 0x132f0
pop ebp
pop edi
pop esi
pop ebx
ret
mov eax,eax
push ebp
mov ebp,esp
add esp,byte -0xc
push ebx
push esi
push edi
test dl,dl
jz 0x13341
add esp,byte -0x10
call dword 0x2f14
mov [ebp-0xc],ecx
mov [ebp-0x5],dl
mov [ebp-0x4],eax
xor edx,edx
mov eax,[ebp-0x4]
call dword 0x2bc0
mov dl,0x1
mov eax,[0x41294c]
call dword 0x2bc0
mov edx,[ebp-0x4]
mov [edx+0x4],eax
mov eax,[0x46d9c0]
call dword 0x13218
xor eax,eax
push ebp
push dword 0x41442b
push dword [fs:eax]
mov [fs:eax],esp
cmp dword [ebp-0xc],byte +0x0
jnz 0x1338f
mov eax,[0x46d9c0]
mov eax,[eax+0x20]
mov [ebp-0xc],eax
mov eax,[0x46d9c0]
mov eax,[eax+0x4]
mov esi,[eax+0x8]
dec esi
test esi,esi
jl 0x133d2
inc esi
xor edi,edi
mov eax,[0x46d9c0]
mov eax,[eax+0x4]
mov edx,edi
call dword 0x13e7c
mov ebx,eax
mov edx,[ebp-0xc]
mov eax,ebx
call dword 0x12d20
test al,al
jz 0x133ce
mov eax,[ebp-0x4]
mov eax,[eax+0x4]
mov edx,ebx
call dword 0x13d24
inc edi
dec esi
jnz 0x133a2
cmp byte [ebp+0x8],0x0
jz 0x13413
mov eax,[0x46d9c0]
mov eax,[eax+0x4]
mov esi,[eax+0x8]
dec esi
test esi,esi
jl 0x13413
inc esi
xor edi,edi
mov eax,[0x46d9c0]
mov eax,[eax+0x4]
mov edx,edi
call dword 0x13e7c
mov ebx,eax
cmp byte [ebx+0x10],0x0
jz 0x1340f
mov eax,[ebp-0x4]
mov eax,[eax+0x4]
mov edx,ebx
call dword 0x13d24
inc edi
dec esi
jnz 0x133eb
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x414432
mov eax,[0x46d9c0]
call dword 0x132d0
ret
jmp dword 0x3384
jmp short 0x13420
mov eax,[ebp-0x4]
cmp byte [ebp-0x5],0x0
jz 0x1344a
call dword 0x2f6c
pop dword [dword fs:0x0]
add esp,byte +0xc
mov eax,[ebp-0x4]
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret 0x4
mov eax,eax
push ebx
push esi
call dword 0x2fbc
mov ebx,edx
mov esi,eax
mov eax,[esi+0x4]
call dword 0x2bf0
mov edx,ebx
and dl,0xfc
mov eax,esi
call dword 0x2be0
test bl,bl
jng 0x13482
mov eax,esi
call dword 0x2f64
pop esi
pop ebx
ret
lea eax,[eax+0x0]
push ebp
mov ebp,esp
add esp,byte -0x8
push ebx
push esi
push edi
mov [ebp-0x4],edx
mov edi,eax
xor eax,eax
mov [ebp-0x8],eax
mov eax,[0x46d9c0]
call dword 0x13218
xor edx,edx
push ebp
push dword 0x4144ff
push dword [fs:edx]
mov [fs:edx],esp
mov eax,[edi+0x4]
mov ebx,[eax+0x8]
dec ebx
test ebx,ebx
jl 0x134e7
inc ebx
xor esi,esi
mov eax,[edi+0x4]
mov edx,esi
call dword 0x13e7c
mov edx,[ebp-0x4]
call dword 0x12cb8
mov [ebp-0x8],eax
cmp dword [ebp-0x8],byte +0x0
jz 0x134e3
call dword 0x3510
jmp short 0x13506
inc esi
dec ebx
jnz 0x134c1
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x414506
mov eax,[0x46d9c0]
call dword 0x132d0
ret
jmp dword 0x3384
jmp short 0x134f4
mov eax,[ebp-0x8]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
ret
mov eax,[eax-0x38]
or eax,eax
jz 0x1351a
mov eax,[eax+0x2]
ret
nop
push ebp
mov ebp,esp
add esp,byte -0xc
push ebx
xor edx,edx
mov [ebp-0xc],edx
mov ebx,eax
xor eax,eax
push ebp
push dword 0x41457c
push dword [fs:eax]
mov [fs:eax],esp
mov [ebp-0x8],ebx
mov byte [ebp-0x4],0xb
lea eax,[ebp-0x8]
push eax
push byte +0x0
lea edx,[ebp-0xc]
mov eax,[0x468e08]
call dword 0x5750
mov ecx,[ebp-0xc]
mov dl,0x1
mov eax,[0x41266c]
call dword 0xb48c
call dword 0x3464
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x414583
lea eax,[ebp-0xc]
call dword 0x3a1c
ret
jmp dword 0x3384
jmp short 0x13573
pop ebx
mov esp,ebp
pop ebp
ret
push ebp
mov ebp,esp
push ecx
push ebx
mov ebx,eax
mov eax,[0x46d9c0]
call dword 0x13218
xor eax,eax
push ebp
push dword 0x4145ce
push dword [fs:eax]
mov [fs:eax],esp
mov edx,ebx
mov eax,[0x46d9c0]
call dword 0x13078
mov [ebp-0x4],eax
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x4145d5
mov eax,[0x46d9c0]
call dword 0x132d0
ret
jmp dword 0x3384
jmp short 0x135c3
mov eax,[ebp-0x4]
pop ebx
pop ecx
pop ebp
ret
push ebx
push esi
mov esi,eax
mov eax,esi
call dword 0x13588
mov ebx,eax
test ebx,ebx
jnz 0x135f4
mov eax,esi
call dword 0x1351c
mov eax,ebx
pop esi
pop ebx
ret
lea eax,[eax+0x0]
push ebp
mov ebp,esp
push ebx
mov ebx,eax
mov eax,[0x46d9c0]
call dword 0x13218
xor eax,eax
push ebp
push dword 0x414661
push dword [fs:eax]
mov [fs:eax],esp
jmp short 0x13639
mov edx,ebx
mov eax,[0x46d9c0]
call dword 0x13224
cmp ebx,[dword 0x412a5c]
jz 0x13649
mov eax,ebx
call dword 0x2b7c
mov ebx,eax
mov edx,ebx
mov eax,[0x46d9c0]
call dword 0x1323c
test al,al
jz 0x1361c
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x414668
mov eax,[0x46d9c0]
call dword 0x132d0
ret
jmp dword 0x3384
jmp short 0x13656
pop ebx
pop ebp
ret
nop
push ebp
mov ebp,esp
push ebx
mov ebx,eax
mov eax,[0x46d9c0]
call dword 0x13218
xor eax,eax
push ebp
push dword 0x4146ae
push dword [fs:eax]
mov [fs:eax],esp
mov edx,ebx
mov eax,[0x46d9c0]
call dword 0x132dc
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x4146b5
mov eax,[0x46d9c0]
call dword 0x132d0
ret
jmp dword 0x3384
jmp short 0x136a3
pop ebx
pop ebp
ret
push ebp
mov ebp,esp
push ebx
mov ebx,eax
mov eax,[0x46d9c0]
call dword 0x13218
xor eax,eax
push ebp
push dword 0x4146fa
push dword [fs:eax]
mov [fs:eax],esp
mov edx,ebx
mov eax,[0x46d9c0]
call dword 0x13280
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x414701
mov eax,[0x46d9c0]
call dword 0x132d0
ret
jmp dword 0x3384
jmp short 0x136ef
pop ebx
pop ebp
ret
push ebp
mov ebp,esp
push ebx
push esi
mov esi,edx
mov ebx,eax
mov eax,[0x46d9c0]
call dword 0x13218
xor eax,eax
push ebp
push dword 0x41474b
push dword [fs:eax]
mov [fs:eax],esp
mov ecx,esi
mov edx,ebx
mov eax,[0x46d9c0]
call dword 0x1314c
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x414752
mov eax,[0x46d9c0]
call dword 0x132d0
ret
jmp dword 0x3384
jmp short 0x13740
pop esi
pop ebx
pop ebp
ret
mov eax,eax
push ebp
mov ebp,esp
push ecx
push ebx
mov ebx,eax
mov eax,[0x46d9c0]
call dword 0x13218
xor eax,eax
push ebp
push dword 0x4147a6
push dword [fs:eax]
mov [fs:eax],esp
mov eax,[0x46d9c0]
mov eax,[eax+0x20]
mov [ebp-0x4],eax
mov edx,ebx
mov eax,[0x46d9c0]
call dword 0x12f14
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x4147ad
mov eax,[0x46d9c0]
call dword 0x132d0
ret
jmp dword 0x3384
jmp short 0x1379b
mov eax,[ebp-0x4]
pop ebx
pop ecx
pop ebp
ret
add [eax+0x41],cl
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
dec eax
inc ecx
add [eax],dl
add [eax],al
add [eax+0x38004010],dh
ds inc eax
add [esi+edi+0x40],al
add [eax+0x3e],cl
inc eax
add [esi+edi+0x40],cl
add [eax+0x3e],al
inc eax
add [eax-0x5bffbfc5],cl
cmp eax,[eax+0x0]
loopne 0x13839
inc eax
add [ecx],cl
push esp
dec ecx
outsb
jz 0x13849
outsd
outsb
jnc 0x1387e
mov eax,eax
push ebp
mov ebp,esp
test dl,dl
jz 0x1381b
add esp,byte -0x10
call dword 0x2f14
mov [eax+0x4],ecx
mov ecx,[ebp+0xc]
mov [eax+0x8],ecx
mov ecx,[ebp+0x8]
mov [eax+0xc],ecx
test dl,dl
jz 0x1383d
call dword 0x2f6c
pop dword [dword fs:0x0]
add esp,byte +0xc
pop ebp
ret 0x8
lea eax,[eax+0x0]
push ebx
push esi
push edi
mov edi,ecx
mov esi,edx
mov ebx,eax
push esi
push edi
mov ecx,ebx
mov dl,0x1
mov eax,[0x4147b4]
call dword 0x1380c
mov edx,eax
mov eax,[0x46d9bc]
call dword 0x141bc
pop edi
pop esi
pop ebx
ret
lea eax,[eax+0x0]
push ebp
mov ebp,esp
push ecx
push ebx
push esi
push edi
mov edi,eax
xor eax,eax
mov [ebp-0x4],eax
mov eax,[0x46d9bc]
call dword 0x14244
mov esi,eax
xor edx,edx
push ebp
push dword 0x4148da
push dword [fs:edx]
mov [fs:edx],esp
mov ebx,[esi+0x8]
dec ebx
cmp ebx,byte +0x0
jl 0x138c2
mov edx,ebx
mov eax,esi
call dword 0x13e7c
cmp edi,[eax+0x4]
jnz 0x138bc
mov eax,[eax+0x8]
mov [ebp-0x4],eax
call dword 0x3510
jmp short 0x138e1
dec ebx
cmp ebx,byte -0x1
jnz 0x138a1
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x4148e1
mov eax,[0x46d9bc]
call dword 0x142a8
ret
jmp dword 0x3384
jmp short 0x138cf
mov eax,[ebp-0x4]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
ret
mov eax,eax
push ebp
mov ebp,esp
push ecx
push ebx
push esi
push edi
mov [ebp-0x4],edx
mov edi,eax
mov esi,[ebp+0x8]
test esi,esi
jl 0x13922
inc esi
lea ebx,[ecx+0x4]
mov edx,edi
mov eax,[ebx]
call dword 0x7820
test al,al
jz 0x1391c
mov al,0x1
mov edx,[ebp-0x4]
mov ecx,[ebx-0x4]
mov [edx],ecx
jmp short 0x13924
add ebx,byte +0x8
dec esi
jnz 0x13903
xor eax,eax
pop edi
pop esi
pop ebx
pop ecx
pop ebp
ret 0x4
push ebp
mov ebp,esp
add esp,byte -0x8
push ebx
push esi
push edi
mov [ebp-0x4],ecx
mov edi,edx
mov esi,[ebp+0x8]
test esi,esi
jl 0x1395f
inc esi
mov ebx,[ebp-0x4]
cmp eax,[ebx]
jnz 0x13959
mov byte [ebp-0x5],0x1
mov eax,edi
mov edx,[ebx+0x4]
call dword 0x3a70
jmp short 0x13963
add ebx,byte +0x8
dec esi
jnz 0x13945
mov byte [ebp-0x5],0x0
movzx eax,byte [ebp-0x5]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
ret 0x4
push ebx
push esi
mov ebx,eax
cmp dword [dword 0x46d9c4],byte +0x0
jnz 0x1398e
mov dl,0x1
mov eax,[0x41294c]
call dword 0x2bc0
mov [0x46d9c4],eax
mov esi,ebx
mov edx,esi
mov eax,[0x46d9c4]
call dword 0x13ed8
test eax,eax
jnl 0x139ac
mov edx,esi
mov eax,[0x46d9c4]
call dword 0x13d24
pop esi
pop ebx
ret
nop
cmp dword [dword 0x46d9c4],byte +0x0
jz 0x139c5
mov edx,eax
mov eax,[0x46d9c4]
call dword 0x14018
ret
mov eax,eax
push ebx
push esi
push edi
mov esi,eax
xor eax,eax
cmp dword [dword 0x46d9c4],byte +0x0
jz 0x13a03
mov edx,[dword 0x46d9c4]
mov ebx,[edx+0x8]
dec ebx
cmp ebx,byte +0x0
jl 0x13a03
mov edx,ebx
mov eax,[0x46d9c4]
call dword 0x13e7c
mov edi,eax
mov eax,esi
call edi
test eax,eax
jnz 0x13a03
dec ebx
cmp ebx,byte -0x1
jnz 0x139e7
pop edi
pop esi
pop ebx
ret
nop
push ebx
mov ebx,eax
cmp dword [dword 0x46d9b0],byte +0x0
jz 0x13a1e
mov eax,ebx
call dword [dword 0x46d9b0]
pop ebx
ret
mov eax,ebx
call dword 0x139c8
test eax,eax
setz al
pop ebx
ret
push ebp
mov ebp,esp
push ecx
push ebx
push esi
push edi
mov esi,ecx
mov ebx,edx
mov edi,eax
test ebx,ebx
jnz 0x13a43
mov ebx,[dword 0x46b7f4]
push byte +0xa
mov eax,edi
call dword 0x3eac
push eax
push ebx
call dword 0x5ac0
test eax,eax
setnz al
test al,al
jz 0x13aa9
push edi
push byte +0xa
mov ecx,ebx
mov dl,0x1
mov eax,[0x41327c]
call dword 0x16e10
mov [ebp-0x4],eax
xor eax,eax
push ebp
push dword 0x414aa0
push dword [fs:eax]
mov [fs:eax],esp
mov edx,[esi]
mov eax,[ebp-0x4]
call dword 0x16838
mov [esi],eax
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x414aa7
mov eax,[ebp-0x4]
call dword 0x2bf0
ret
jmp dword 0x3384
jmp short 0x13a97
mov al,0x1
pop edi
pop esi
pop ebx
pop ecx
pop ebp
ret
nop
push ebx
call dword 0x5888
mov ebx,[eax+0xc]
test ebx,ebx
jnz 0x13ad9
mov dl,0x1
mov eax,[0x41294c]
call dword 0x2bc0
mov ebx,eax
call dword 0x5888
mov [eax+0xc],ebx
call dword 0x5888
mov edx,[eax+0x8]
mov eax,ebx
call dword 0x13d24
mov dl,0x1
mov eax,[0x41294c]
call dword 0x2bc0
mov ebx,eax
call dword 0x5888
mov [eax+0x8],ebx
pop ebx
ret
mov eax,eax
push ebx
push esi
push edi
call dword 0x5888
mov edi,[eax+0x8]
mov ebx,[edi+0x8]
dec ebx
test ebx,ebx
jl 0x13b33
inc ebx
xor esi,esi
mov edx,esi
mov eax,edi
call dword 0x13e7c
mov edx,[eax]
call dword [edx+0xc]
inc esi
dec ebx
jnz 0x13b21
pop edi
pop esi
pop ebx
ret
nop
push ebx
push esi
call dword 0x5888
mov eax,[eax+0x8]
call dword 0x2bf0
call dword 0x5888
mov ebx,[eax+0xc]
mov eax,ebx
call dword 0x13f64
mov esi,eax
call dword 0x5888
mov [eax+0x8],esi
mov edx,[ebx+0x8]
dec edx
mov eax,ebx
call dword 0x13d70
cmp dword [ebx+0x8],byte +0x0
jnz 0x13b8e
call dword 0x5888
xor edx,edx
mov [eax+0xc],edx
mov eax,ebx
call dword 0x2bf0
pop esi
pop ebx
ret
lea eax,[eax+0x0]
push ebp
mov ebp,esp
add esp,0xfffffefc
push ebx
push esi
xor edx,edx
mov [ebp-0x4],edx
mov esi,eax
xor eax,eax
push ebp
push dword 0x414c2a
push dword [fs:eax]
mov [fs:eax],esp
xor ebx,ebx
cmp esi,[dword 0x41372c]
jz 0x13c14
mov eax,[ebp+0x8]
cmp esi,[eax-0x8]
jz 0x13c14
mov eax,[ebp+0x8]
push eax
mov eax,esi
call dword 0x2b7c
call dword 0x13b94
pop ecx
mov ebx,eax
lea edx,[ebp-0x104]
mov eax,esi
call dword 0x2ad0
lea edx,[ebp-0x104]
lea eax,[ebp-0x4]
call dword 0x3c80
mov eax,[ebp-0x4]
push eax
mov eax,esi
call dword 0x4c24
call dword 0x4c74
mov edx,eax
mov eax,[ebp+0x8]
lea ecx,[eax-0x4]
pop eax
call dword 0x13a2c
or bl,al
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x414c31
lea eax,[ebp-0x4]
call dword 0x3a1c
ret
jmp dword 0x3384
jmp short 0x13c21
mov eax,ebx
pop esi
pop ebx
mov esp,ebp
pop ebp
ret
lea eax,[eax+0x0]
push ebp
mov ebp,esp
add esp,byte -0xc
mov [ebp-0x8],edx
mov [ebp-0x4],eax
mov eax,[0x46d9ac]
mov edx,[eax]
call dword [edx+0x14]
xor eax,eax
push ebp
push dword 0x414cea
push dword [fs:eax]
mov [fs:eax],esp
mov eax,[ebp-0x4]
movzx eax,word [eax+0x1c]
and ax,[dword 0x414cfc]
movzx edx,word [dword 0x414d00]
cmp dx,ax
setz [ebp-0xa]
cmp byte [ebp-0xa],0x0
jz 0x13c87
call dword 0x13ab0
xor eax,eax
push ebp
push dword 0x414ccb
push dword [fs:eax]
mov [fs:eax],esp
push ebp
mov eax,[ebp-0x4]
call dword 0x2ac8
call dword 0x13b94
pop ecx
mov [ebp-0x9],al
cmp byte [ebp-0xa],0x0
jz 0x13cb2
call dword 0x13b08
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x414cd2
cmp byte [ebp-0xa],0x0
jz 0x13cca
call dword 0x13b38
ret
jmp dword 0x3384
jmp short 0x13cbf
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x414cf1
mov eax,[0x46d9ac]
mov edx,[eax]
call dword [edx+0x18]
ret
jmp dword 0x3384
jmp short 0x13cdf
movzx eax,byte [ebp-0x9]
mov esp,ebp
pop ebp
ret
add [eax],al
add [ecx],al
add al,[eax]
add [eax],al
add [eax],al
add [ebx+0x56],dl
call dword 0x2fbc
mov ebx,edx
mov esi,eax
mov eax,esi
mov edx,[eax]
call dword [edx+0x8]
test bl,bl
jng 0x13d21
mov eax,esi
call dword 0x2f64
pop esi
pop ebx
ret
push ebx
push esi
push edi
mov edi,edx
mov ebx,eax
mov esi,[ebx+0x8]
cmp esi,[ebx+0xc]
jnz 0x13d39
mov eax,ebx
mov edx,[eax]
call dword [edx]
mov eax,[ebx+0x4]
mov [eax+esi*4],edi
inc dword [ebx+0x8]
test edi,edi
jz 0x13d51
xor ecx,ecx
mov edx,edi
mov eax,ebx
mov ebx,[eax]
call dword [ebx+0x4]
mov eax,esi
pop edi
pop esi
pop ebx
ret
nop
push ebx
mov ebx,eax
xor edx,edx
mov eax,ebx
call dword 0x14074
xor edx,edx
mov eax,ebx
call dword 0x14038
pop ebx
ret
nop
push ebx
push esi
push edi
mov esi,edx
mov ebx,eax
test esi,esi
jl 0x13d80
cmp esi,[ebx+0x8]
jl 0x13d8f
mov edx,[dword 0x468dac]
mov ecx,esi
mov eax,[ebx]
call dword 0x13e08
mov eax,[ebx+0x4]
mov edi,[eax+esi*4]
dec dword [ebx+0x8]
mov eax,[ebx+0x8]
cmp esi,eax
jnl 0x13db9
sub eax,esi
mov ecx,eax
add ecx,ecx
add ecx,ecx
mov eax,[ebx+0x4]
lea edx,[eax+esi*4]
mov eax,[ebx+0x4]
lea eax,[eax+esi*4+0x4]
call dword 0x2050
test edi,edi
jz 0x13dc8
mov cl,0x2
mov edx,edi
mov eax,ebx
mov ebx,[eax]
call dword [ebx+0x4]
pop edi
pop esi
pop ebx
ret
mov eax,[ebp+0x4]
ret
push ebx
push esi
add esp,byte -0x8
mov esi,ecx
mov ebx,edx
call dword 0x13dcc
push eax
mov [esp+0x4],esi
mov byte [esp+0x8],0x0
lea eax,[esp+0x4]
push eax
push byte +0x0
mov ecx,ebx
mov dl,0x1
mov eax,[0x412724]
call dword 0xb48c
jmp dword 0x3464
pop ecx
pop edx
pop esi
pop ebx
ret
nop
push ebp
mov ebp,esp
push byte +0x0
push ebx
push esi
mov esi,ecx
mov ebx,edx
xor eax,eax
push ebp
push dword 0x414e50
push dword [fs:eax]
mov [fs:eax],esp
lea edx,[ebp-0x4]
mov eax,ebx
call dword 0x5750
mov edx,[ebp-0x4]
mov ecx,esi
mov eax,[0x41294c]
call dword 0x13dd0
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x414e57
lea eax,[ebp-0x4]
call dword 0x3a1c
ret
jmp dword 0x3384
jmp short 0x13e47
pop esi
pop ebx
pop ecx
pop ebp
ret
push ebx
mov ebx,eax
mov eax,[ebx+0x8]
cmp eax,[ebx+0xc]
jnz 0x13e6d
mov eax,ebx
mov edx,[eax]
call dword [edx]
mov eax,ebx
pop ebx
ret
lea eax,[eax+0x0]
xor edx,edx
call dword 0x13e7c
ret
push ebx
push esi
mov esi,edx
mov ebx,eax
test esi,esi
jl 0x13e8b
cmp esi,[ebx+0x8]
jl 0x13e9a
mov edx,[dword 0x468dac]
mov ecx,esi
mov eax,[ebx]
call dword 0x13e08
mov eax,[ebx+0x4]
mov eax,[eax+esi*4]
pop esi
pop ebx
ret
nop
mov edx,[eax+0xc]
cmp edx,byte +0x40
jng 0x13eba
mov ecx,edx
test ecx,ecx
jns 0x13eb5
add ecx,byte +0x3
sar ecx,byte 0x2
jmp short 0x13ecb
cmp edx,byte +0x8
jng 0x13ec6
mov ecx,0x10
jmp short 0x13ecb
mov ecx,0x4
add ecx,edx
mov edx,ecx
call dword 0x14038
ret
lea eax,[eax+0x0]
push ebx
xor ecx,ecx
jmp short 0x13ede
inc ecx
cmp ecx,[eax+0x8]
jnl 0x13eeb
mov ebx,[eax+0x4]
cmp edx,[ebx+ecx*4]
jnz 0x13edd
cmp ecx,[eax+0x8]
jnz 0x13ef3
or ecx,byte -0x1
mov eax,ecx
pop ebx
ret
nop
push ebx
push esi
push edi
mov edi,ecx
mov esi,edx
mov ebx,eax
test esi,esi
jl 0x13f0a
cmp esi,[ebx+0x8]
jng 0x13f19
mov edx,[dword 0x468dac]
mov ecx,esi
mov eax,[ebx]
call dword 0x13e08
mov eax,[ebx+0x8]
cmp eax,[ebx+0xc]
jnz 0x13f27
mov eax,ebx
mov edx,[eax]
call dword [edx]
mov eax,[ebx+0x8]
cmp esi,eax
jnl 0x13f48
sub eax,esi
mov ecx,eax
add ecx,ecx
add ecx,ecx
mov eax,[ebx+0x4]
lea edx,[eax+esi*4+0x4]
mov eax,[ebx+0x4]
lea eax,[eax+esi*4]
call dword 0x2050
mov eax,[ebx+0x4]
mov [eax+esi*4],edi
inc dword [ebx+0x8]
test edi,edi
jz 0x13f60
xor ecx,ecx
mov edx,edi
mov eax,ebx
mov ebx,[eax]
call dword [ebx+0x4]
pop edi
pop esi
pop ebx
ret
mov edx,[eax+0x8]
dec edx
call dword 0x13e7c
ret
mov eax,eax
push ebx
push esi
push edi
push ebp
mov esi,ecx
mov edi,edx
mov ebx,eax
cmp esi,edi
jz 0x13fc3
test esi,esi
jl 0x13f87
cmp esi,[ebx+0x8]
jl 0x13f96
mov edx,[dword 0x468dac]
mov ecx,esi
mov eax,[ebx]
call dword 0x13e08
mov edx,edi
mov eax,ebx
call dword 0x13e7c
mov ebp,eax
mov eax,[ebx+0x4]
xor edx,edx
mov [eax+edi*4],edx
mov edx,edi
mov eax,ebx
call dword 0x13d70
xor ecx,ecx
mov edx,esi
mov eax,ebx
call dword 0x13ef8
mov eax,[ebx+0x4]
mov [eax+esi*4],ebp
pop ebp
pop edi
pop esi
pop ebx
ret
push ebx
push esi
push edi
mov edi,ecx
mov esi,edx
mov ebx,eax
test esi,esi
jl 0x13fda
cmp esi,[ebx+0x8]
jl 0x13fe9
mov edx,[dword 0x468dac]
mov ecx,esi
mov eax,[ebx]
call dword 0x13e08
mov edx,[ebx+0x4]
mov eax,[edx+esi*4]
cmp edi,eax
jz 0x14014
mov [edx+esi*4],edi
test eax,eax
jz 0x14005
mov cl,0x2
mov edx,eax
mov eax,ebx
mov esi,[eax]
call dword [esi+0x4]
test edi,edi
jz 0x14014
xor ecx,ecx
mov edx,edi
mov eax,ebx
mov ebx,[eax]
call dword [ebx+0x4]
pop edi
pop esi
pop ebx
ret
push ebx
push esi
mov ebx,eax
mov eax,ebx
call dword 0x13ed8
mov esi,eax
test esi,esi
jl 0x14032
mov edx,esi
mov eax,ebx
call dword 0x13d70
mov eax,esi
pop esi
pop ebx
ret
nop
push ebx
push esi
mov esi,edx
mov ebx,eax
cmp esi,[ebx+0x8]
jl 0x1404b
cmp esi,0x7ffffff
jng 0x1405a
mov edx,[dword 0x468ce0]
mov ecx,esi
mov eax,[ebx]
call dword 0x13e08
cmp esi,[ebx+0xc]
jz 0x14070
mov edx,esi
add edx,edx
add edx,edx
lea eax,[ebx+0x4]
call dword 0x1e94
mov [ebx+0xc],esi
pop esi
pop ebx
ret
nop
push ebx
push esi
push edi
push ebp
mov esi,edx
mov ebx,eax
test esi,esi
jl 0x14088
cmp esi,0x7ffffff
jng 0x14097
mov edx,[dword 0x468c50]
mov ecx,esi
mov eax,[ebx]
call dword 0x13e08
cmp esi,[ebx+0xc]
jng 0x140a5
mov edx,esi
mov eax,ebx
call dword 0x14038
mov eax,[ebx+0x8]
cmp esi,eax
jng 0x140c6
mov edx,[ebx+0x4]
lea edx,[edx+eax*4]
mov ecx,esi
sub ecx,eax
mov eax,ecx
add eax,eax
add eax,eax
xor ecx,ecx
xchg eax,edx
call dword 0x252c
jmp short 0x140dd
mov ebp,eax
dec ebp
mov edi,esi
sub edi,ebp
jg 0x140dd
dec edi
mov edx,ebp
mov eax,ebx
call dword 0x13d70
dec ebp
inc edi
jnz 0x140d0
mov [ebx+0x8],esi
pop ebp
pop edi
pop esi
pop ebx
ret
lea eax,[eax+0x0]
ret
lea eax,[eax+0x0]
push ebx
push esi
test dl,dl
jz 0x140fa
add esp,byte -0x10
call dword 0x2f14
mov ebx,edx
mov esi,eax
xor edx,edx
mov eax,esi
call dword 0x2bc0
lea eax,[esi+0x8]
push eax
call dword 0x5b98
mov dl,0x1
mov eax,[0x41294c]
call dword 0x2bc0
mov [esi+0x4],eax
mov byte [esi+0x20],0x0
mov eax,esi
test bl,bl
jz 0x14138
call dword 0x2f6c
pop dword [dword fs:0x0]
add esp,byte +0xc
mov eax,esi
pop esi
pop ebx
ret
lea eax,[eax+0x0]
push ebp
mov ebp,esp
add esp,byte -0x8
call dword 0x2fbc
mov [ebp-0x5],dl
mov [ebp-0x4],eax
mov eax,[ebp-0x4]
call dword 0x14244
xor eax,eax
push ebp
push dword 0x4151a3
push dword [fs:eax]
mov [fs:eax],esp
mov eax,[ebp-0x4]
mov eax,[eax+0x4]
call dword 0x2bf0
movzx edx,byte [ebp-0x5]
and dl,0xfc
mov eax,[ebp-0x4]
call dword 0x2be0
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x4151aa
mov eax,[ebp-0x4]
call dword 0x142a8
mov eax,[ebp-0x4]
add eax,byte +0x8
push eax
call dword 0x5aa8
ret
jmp dword 0x3384
jmp short 0x1418e
cmp byte [ebp-0x5],0x0
jng 0x141b8
mov eax,[ebp-0x4]
call dword 0x2f64
pop ecx
pop ecx
pop ebp
ret
push ebp
mov ebp,esp
push ecx
push ebx
mov ebx,edx
mov [ebp-0x4],eax
mov eax,[ebp-0x4]
call dword 0x14244
xor eax,eax
push ebp
push dword 0x415238
push dword [fs:eax]
mov [fs:eax],esp
mov eax,[ebp-0x4]
cmp byte [eax+0x20],0x1
jz 0x141f5
mov eax,[ebp-0x4]
mov eax,[eax+0x4]
mov edx,ebx
call dword 0x13ed8
inc eax
jnz 0x14204
mov eax,[ebp-0x4]
mov eax,[eax+0x4]
mov edx,ebx
call dword 0x13d24
jmp short 0x14222
mov eax,[ebp-0x4]
cmp byte [eax+0x20],0x2
jnz 0x14222
mov edx,[dword 0x468c38]
mov eax,[ebp-0x4]
mov eax,[eax+0x4]
mov eax,[eax]
mov ecx,ebx
call dword 0x13e08
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x41523f
mov eax,[ebp-0x4]
call dword 0x142a8
ret
jmp dword 0x3384
jmp short 0x1422f
pop ebx
pop ecx
pop ebp
ret
nop
push ebx
mov ebx,eax
lea eax,[ebx+0x8]
push eax
call dword 0x5ab0
mov eax,[ebx+0x4]
pop ebx
ret
lea eax,[eax+0x0]
push ebp
mov ebp,esp
push ecx
push ebx
mov ebx,edx
mov [ebp-0x4],eax
mov eax,[ebp-0x4]
call dword 0x14244
xor eax,eax
push ebp
push dword 0x41529b
push dword [fs:eax]
mov [fs:eax],esp
mov eax,[ebp-0x4]
mov eax,[eax+0x4]
mov edx,ebx
call dword 0x14018
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x4152a2
mov eax,[ebp-0x4]
call dword 0x142a8
ret
jmp dword 0x3384
jmp short 0x14292
pop ebx
pop ecx
pop ebp
ret
mov eax,eax
add eax,byte +0x8
push eax
call dword 0x5ba0
ret
mov eax,eax
push ebx
push esi
call dword 0x2fbc
mov ebx,edx
mov esi,eax
xor edx,edx
mov eax,esi
call dword 0x14308
mov edx,ebx
and dl,0xfc
mov eax,esi
call dword 0x2be0
test bl,bl
jng 0x142df
mov eax,esi
call dword 0x2f64
pop esi
pop ebx
ret
mov eax,eax
mov ecx,[dword 0x468de8]
mov dl,0x1
mov eax,[0x41277c]
call dword 0xb50c
call dword 0x3464
ret
mov ecx,eax
cmp edx,eax
jnl 0x14304
mov ecx,edx
mov eax,ecx
ret
nop
push ebx
push esi
push edi
push ebp
push ecx
mov esi,edx
mov ebx,eax
cmp esi,[ebx+0x4]
jz dword 0x143a6
test esi,esi
jnl 0x14325
mov eax,ebx
call dword 0x142e4
lea eax,[esi+0x20]
dec eax
test eax,eax
jns 0x14330
add eax,byte +0x1f
sar eax,byte 0x5
mov edi,eax
add edi,edi
add edi,edi
mov eax,[ebx+0x4]
add eax,byte +0x20
dec eax
test eax,eax
jns 0x14347
add eax,byte +0x1f
sar eax,byte 0x5
mov ebp,eax
add ebp,ebp
add ebp,ebp
cmp ebp,edi
jz 0x143a3
xor eax,eax
mov [esp],eax
test edi,edi
jz 0x14373
mov eax,edi
call dword 0x1e60
mov [esp],eax
mov eax,[esp]
xor ecx,ecx
mov edx,edi
call dword 0x252c
test ebp,ebp
jz 0x1439d
cmp dword [esp],byte +0x0
jz 0x14393
mov edx,edi
mov eax,ebp
call dword 0x142fc
mov ecx,eax
mov edx,[esp]
mov eax,[ebx+0x8]
call dword 0x2050
mov edx,ebp
mov eax,[ebx+0x8]
call dword 0x1e7c
mov eax,[esp]
mov [ebx+0x8],eax
mov [ebx+0x4],esi
pop edx
pop ebp
pop edi
pop esi
pop ebx
ret
cmp edx,[eax+0x4]
jnc 0x143c0
mov eax,[eax+0x8]
or cl,cl
jz 0x143bc
bts [eax],edx
ret
btr [eax],edx
ret
cmp edx,byte +0x0
jl dword 0x142e4
push eax
push edx
push ecx
inc edx
call dword 0x14308
pop ecx
pop edx
pop eax
jmp short 0x143b1
ret
push ebx
push esi
push edi
push ecx
mov ebx,eax
mov eax,[ebx+0x4]
add eax,byte +0x20
dec eax
test eax,eax
jns 0x143ec
add eax,byte +0x1f
sar eax,byte 0x5
dec eax
test eax,eax
jl 0x14441
inc eax
mov [esp],eax
xor esi,esi
mov eax,[ebx+0x8]
mov edx,[dword 0x41544c]
cmp edx,[eax+esi*4]
jz 0x1443b
mov eax,[ebx+0x8]
mov edi,[eax+esi*4]
xor eax,eax
mov edx,eax
cmp dl,0x1f
ja 0x1441d
and edx,byte +0x7f
bt edi,edx
jc 0x14436
mov edx,esi
shl edx,byte 0x5
and eax,byte +0x7f
add edx,eax
mov eax,edx
mov edx,[ebx+0x4]
cmp eax,edx
jl 0x14444
mov eax,edx
jmp short 0x14444
inc eax
cmp al,0x20
jnz 0x14410
inc esi
dec dword [esp]
jnz 0x143fa
mov eax,[ebx+0x4]
pop edx
pop edi
pop esi
pop ebx
ret
add [eax],al
add bh,bh
db 0xff
db 0xff
call dword [ebx+0x56]
call dword 0x2fbc
mov ebx,edx
mov esi,eax
mov eax,esi
call dword 0x17600
mov edx,ebx
and dl,0xfc
mov eax,esi
call dword 0x2be0
test bl,bl
jng 0x14479
mov eax,esi
call dword 0x2f64
pop esi
pop ebx
ret
test edx,edx
jz 0x14486
xchg eax,edx
mov ecx,[eax]
call dword [ecx]
ret
xor edx,edx
call dword 0x14490
ret
mov eax,eax
push ebp
mov ebp,esp
add esp,0xfffffeec
push ebx
push esi
xor ecx,ecx
mov [ebp-0x4],ecx
mov esi,edx
mov ebx,eax
xor eax,eax
push ebp
push dword 0x415546
push dword [fs:eax]
mov [fs:eax],esp
test esi,esi
jz 0x144d3
lea edx,[ebp-0x104]
mov eax,[esi]
call dword 0x2ad0
lea edx,[ebp-0x104]
lea eax,[ebp-0x4]
call dword 0x3c80
jmp short 0x144e0
lea eax,[ebp-0x4]
mov edx,0x41555c
call dword 0x3ab4
mov eax,[ebp-0x4]
mov [ebp-0x114],eax
mov byte [ebp-0x110],0xb
lea edx,[ebp-0x104]
mov eax,[ebx]
call dword 0x2ad0
lea eax,[ebp-0x104]
mov [ebp-0x10c],eax
mov byte [ebp-0x108],0x4
lea eax,[ebp-0x114]
push eax
push byte +0x1
mov ecx,[dword 0x468c6c]
mov dl,0x1
mov eax,[0x407eb0]
call dword 0xb548
call dword 0x3464
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x41554d
lea eax,[ebp-0x4]
call dword 0x3a1c
ret
jmp dword 0x3384
jmp short 0x1453d
pop esi
pop ebx
mov esp,ebp
pop ebp
ret
add bh,bh
db 0xff
db 0xff
inc dword [ebx]
add [eax],al
add [esi+0x69],ch
insb
add [edx-0xd518],dl
inc ebx
nop
ret
lea eax,[eax+0x0]
push ebp
mov ebp,esp
add esp,0xfffffefc
push ebx
push esi
push edi
xor ecx,ecx
mov [ebp-0x4],ecx
mov edi,edx
mov ebx,eax
xor eax,eax
push ebp
push dword 0x415601
push dword [fs:eax]
mov [fs:eax],esp
lea edx,[ebp-0x104]
mov eax,[ebx]
call dword 0x2ad0
lea edx,[ebp-0x104]
mov eax,edi
call dword 0x3c80
mov eax,ebx
mov si,0xffff
call dword 0x2dec
test eax,eax
jz 0x145eb
mov eax,ebx
mov si,0xffff
call dword 0x2dec
lea edx,[ebp-0x4]
mov si,0xfffe
call dword 0x2dec
cmp dword [ebp-0x4],byte +0x0
jz 0x145eb
push dword [ebp-0x4]
push dword 0x415618
push dword [edi]
mov eax,edi
mov edx,0x3
call dword 0x3db0
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x415608
lea eax,[ebp-0x4]
call dword 0x3a1c
ret
jmp dword 0x3384
jmp short 0x145f8
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret
add bh,bh
db 0xff
db 0xff
inc dword [ecx]
add [eax],al
add [esi],ch
add [eax],al
add [ebx],dh
rol bl,byte 0x90
push ebx
push esi
mov ebx,eax
mov eax,ebx
call dword 0x2e44
mov eax,ebx
mov si,0xffff
call dword 0x2dec
test eax,eax
jz 0x1465b
mov eax,ebx
mov si,0xffff
call dword 0x2dec
push eax
lea eax,[ebx+0x4]
call dword 0x5270
mov ecx,eax
mov edx,0x415660
pop eax
call dword 0x2ca4
pop esi
pop ebx
ret
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
rol byte [eax],byte 0x0
add [eax],al
add [eax],al
inc esi
push ebp
mov ebp,esp
mov eax,[ebp+0x8]
cmp dword [eax+0x4],byte +0x0
jz 0x14687
mov eax,[eax+0x4]
push eax
mov eax,[eax]
call dword [eax+0x4]
jmp short 0x1468a
or eax,byte -0x1
pop ebp
ret 0x4
mov eax,eax
push ebp
mov ebp,esp
mov eax,[ebp+0x8]
cmp dword [eax+0x4],byte +0x0
jz 0x146a7
mov eax,[eax+0x4]
push eax
mov eax,[eax]
call dword [eax+0x8]
jmp short 0x146aa
or eax,byte -0x1
pop ebp
ret 0x4
mov eax,eax
push ebp
mov ebp,esp
push ebx
mov ebx,[ebp+0x8]
mov ecx,[ebp+0x10]
mov edx,[ebp+0xc]
mov eax,ebx
call dword 0x2ca4
test al,al
jz 0x146cc
xor eax,eax
jmp short 0x146d1
mov eax,0x80004002
pop ebx
pop ebp
ret 0xc
mov eax,eax
push ebp
mov ebp,esp
push ecx
push ebx
push esi
push edi
mov [ebp-0x4],edx
mov edi,eax
mov eax,[ebp-0x4]
test eax,eax
jz 0x146ef
xor edx,edx
mov [eax],edx
mov eax,[ebp-0x4]
call dword 0x5270
test edi,edi
jz 0x14761
mov eax,edi
mov si,0xffff
call dword 0x2dec
mov ebx,eax
test ebx,ebx
jnz 0x14739
mov eax,edi
mov edx,[dword 0x41372c]
call dword 0x2d7c
test al,al
jz 0x14761
test byte [edi+0x1c],0x10
jz 0x14761
mov eax,[ebp-0x4]
call dword 0x5270
push eax
push dword 0x415768
push edi
mov eax,[edi]
call dword [eax+0x28]
jmp short 0x14761
mov eax,edi
mov edx,[dword 0x41372c]
call dword 0x2d7c
test al,al
jz 0x14750
test byte [edi+0x1c],0x10
jz 0x14761
mov eax,[ebp-0x4]
call dword 0x5270
mov edx,eax
mov eax,ebx
call dword 0x146d8
pop edi
pop esi
pop ebx
pop ecx
pop ebp
ret
add [edi],al
call dword 0xe3a800df
rcl dword [ecx],1
stosb
mov cl,0x0
ror byte [edi-0x4f],byte 0x6f
mov esp,0x6aec8b55
add [ebx+0x56],dl
push edi
mov ebx,ecx
mov esi,edx
mov edi,eax
xor eax,eax
push ebp
push dword 0x4157cd
push dword [fs:eax]
mov [fs:eax],esp
lea eax,[ebp-0x4]
call dword 0x5270
mov edx,eax
mov eax,edi
call dword 0x146d8
cmp dword [ebp-0x4],byte +0x0
jz 0x147b7
mov ecx,ebx
mov edx,esi
mov eax,[ebp-0x4]
mov ebx,[eax]
call dword [ebx+0x10]
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x4157d4
lea eax,[ebp-0x4]
call dword 0x5270
ret
jmp dword 0x3384
jmp short 0x147c4
pop edi
pop esi
pop ebx
pop ecx
pop ebp
ret
mov eax,eax
push ebx
push esi
test dl,dl
jz 0x147ea
add esp,byte -0x10
call dword 0x2f14
mov ebx,edx
mov esi,eax
mov edx,ecx
mov eax,esi
mov ecx,[eax]
call dword [ecx+0x10]
mov eax,esi
test bl,bl
jz 0x1480c
call dword 0x2f6c
pop dword [dword fs:0x0]
add esp,byte +0xc
mov eax,esi
pop esi
pop ebx
ret
lea eax,[eax+0x0]
push ebx
push esi
call dword 0x2fbc
mov ebx,edx
mov esi,eax
xor edx,edx
mov eax,esi
mov ecx,[eax]
call dword [ecx+0x10]
mov edx,ebx
and dl,0xfc
mov eax,esi
call dword 0x14450
test bl,bl
jng 0x1483f
mov eax,esi
call dword 0x2f64
pop esi
pop ebx
ret
mov eax,eax
push esi
mov esi,[eax+0x4]
test esi,esi
jz 0x14863
cmp dword [esi+0xc],byte +0x0
jnz 0x14863
test dl,dl
jz 0x1485a
xor edx,edx
jmp short 0x1485c
mov edx,eax
mov eax,esi
mov ecx,[eax]
call dword [ecx+0x1c]
pop esi
ret
lea eax,[eax+0x0]
mov edx,[eax+0x4]
test edx,edx
jz 0x14879
mov edx,[edx+0x8]
xchg eax,edx
call dword 0x13ed8
ret
or eax,byte -0x1
ret
lea eax,[eax+0x0]
push ebx
push esi
add esp,0xffffff00
mov esi,edx
mov ebx,eax
mov edx,esp
mov eax,[ebx]
call dword 0x2ad0
mov edx,esp
mov eax,esi
call dword 0x3c80
add esp,0x100
pop esi
pop ebx
ret
nop
push ebp
mov ebp,esp
add esp,0xfffffeec
push ebx
push esi
push edi
xor ecx,ecx
mov [ebp-0x14],ecx
mov edi,edx
mov ebx,eax
xor eax,eax
push ebp
push dword 0x41593d
push dword [fs:eax]
mov [fs:eax],esp
cmp dword [ebx+0x4],byte +0x0
jz 0x1490d
push edi
lea edx,[ebp-0x14]
mov eax,[ebx+0x4]
mov si,0xfffe
call dword 0x2dec
mov eax,[ebp-0x14]
mov [ebp-0x10],eax
mov byte [ebp-0xc],0xb
mov eax,ebx
call dword 0x14868
mov [ebp-0x8],eax
mov byte [ebp-0x4],0x0
lea edx,[ebp-0x10]
mov ecx,0x1
mov eax,0x415954
call dword 0x8b24
jmp short 0x14927
lea edx,[ebp-0x114]
mov eax,[ebx]
call dword 0x2ad0
lea edx,[ebp-0x114]
mov eax,edi
call dword 0x3c80
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x415944
lea eax,[ebp-0x14]
call dword 0x3a1c
ret
jmp dword 0x3384
jmp short 0x14934
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret
add bh,bh
db 0xff
db 0xff
inc dword [esi]
add [eax],al
add [dword 0x64255b73],ah
pop ebp
add [eax],al
mov eax,[eax+0x4]
ret
push ebx
push esi
mov esi,edx
mov ebx,eax
mov eax,[ebx+0x4]
cmp esi,eax
jz 0x14985
test eax,eax
jz 0x14978
mov edx,ebx
call dword 0x14e30
test esi,esi
jz 0x14985
mov edx,ebx
mov eax,esi
call dword 0x14dc8
pop esi
pop ebx
ret
xor edx,edx
call dword 0x14844
ret
push ebx
push esi
mov esi,edx
mov ebx,eax
mov eax,ebx
call dword 0x14868
test eax,eax
jl 0x149bc
cmp esi,eax
jz 0x149bc
mov edx,[ebx+0x4]
mov edx,[edx+0x8]
mov ecx,esi
xchg eax,edx
call dword 0x13f70
mov dl,0x1
mov eax,ebx
call dword 0x14844
pop esi
pop ebx
ret
nop
push ebx
push esi
test dl,dl
jz 0x149ce
add esp,byte -0x10
call dword 0x2f14
mov ebx,edx
mov esi,eax
mov [esi+0x4],ecx
mov dl,0x1
mov eax,[0x41294c]
call dword 0x2bc0
mov [esi+0x8],eax
xor ecx,ecx
mov edx,esi
mov eax,esi
call dword 0x14778
mov eax,esi
test bl,bl
jz 0x14a04
call dword 0x2f6c
pop dword [dword fs:0x0]
add esp,byte +0xc
mov eax,esi
pop esi
pop ebx
ret
lea eax,[eax+0x0]
push ebx
push esi
call dword 0x2fbc
mov ebx,edx
mov esi,eax
mov dword [esi+0xc],0x1
cmp dword [esi+0x8],byte +0x0
jz 0x14a2b
mov eax,esi
call dword 0x14b24
mov cl,0x1
mov edx,esi
mov eax,esi
call dword 0x14778
mov eax,[esi+0x8]
call dword 0x2bf0
mov edx,ebx
and dl,0xfc
mov eax,esi
call dword 0x14450
test bl,bl
jng 0x14a55
mov eax,esi
call dword 0x2f64
pop esi
pop ebx
ret
push ebx
push ecx
mov ebx,eax
mov ecx,ebx
mov dl,0x1
mov eax,[ebx+0x4]
call dword [eax+0x1c]
mov [esp],eax
mov edx,esp
mov eax,ebx
mov ecx,[eax]
call dword [ecx+0xc]
mov eax,[esp]
pop edx
pop ebx
ret
push ebp
mov ebp,esp
push ecx
push ebx
push esi
push edi
mov esi,edx
mov [ebp-0x4],eax
mov eax,esi
mov edx,[dword 0x412cb8]
call dword 0x2d7c
test al,al
jz 0x14afd
mov eax,[ebp-0x4]
mov edx,[eax]
call dword [edx+0x20]
xor eax,eax
push ebp
push dword 0x415af6
push dword [fs:eax]
mov [fs:eax],esp
mov eax,[ebp-0x4]
call dword 0x14b24
mov eax,esi
call dword 0x14bc8
mov ebx,eax
dec ebx
test ebx,ebx
jl 0x14ae0
inc ebx
xor edi,edi
mov edx,edi
mov eax,esi
call dword 0x14bd0
push eax
mov eax,[ebp-0x4]
call dword 0x14a58
pop edx
mov ecx,[eax]
call dword [ecx+0x8]
inc edi
dec ebx
jnz 0x14ac4
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x415b07
mov eax,[ebp-0x4]
mov edx,[eax]
call dword [edx+0x24]
ret
jmp dword 0x3384
jmp short 0x14aed
mov edx,esi
mov eax,[ebp-0x4]
call dword 0x1447c
pop edi
pop esi
pop ebx
pop ecx
pop ebp
ret
lea eax,[eax+0x0]
inc dword [eax+0xc]
ret
cmp dword [eax+0xc],byte +0x0
jnz 0x14b21
xor edx,edx
mov ecx,[eax]
call dword [ecx+0x1c]
ret
mov eax,eax
push ebp
mov ebp,esp
push ecx
push ebx
mov [ebp-0x4],eax
mov eax,[ebp-0x4]
mov eax,[eax+0x8]
cmp dword [eax+0x8],byte +0x0
jng 0x14b85
mov eax,[ebp-0x4]
mov edx,[eax]
call dword [edx+0x20]
xor eax,eax
push ebp
push dword 0x415b7e
push dword [fs:eax]
mov [fs:eax],esp
jmp short 0x14b5c
mov eax,ebx
call dword 0x13f64
call dword 0x2bf0
mov eax,[ebp-0x4]
mov ebx,[eax+0x8]
cmp dword [ebx+0x8],byte +0x0
jg 0x14b50
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x415b85
mov eax,[ebp-0x4]
mov edx,[eax]
call dword [edx+0x24]
ret
jmp dword 0x3384
jmp short 0x14b75
pop ebx
pop ecx
pop ebp
ret
lea eax,[eax+0x0]
dec dword [eax+0xc]
call dword 0x14b14
ret
lea eax,[eax+0x0]
xor eax,eax
ret
nop
push ebx
mov ebx,ecx
mov eax,ebx
call dword 0x3a1c
pop ebx
ret
push ebp
mov ebp,esp
push ebx
push esi
mov esi,ecx
mov ebx,eax
mov edx,esi
mov eax,ebx
call dword 0x14bd0
mov edx,[ebp+0x8]
mov ecx,[eax]
call dword [ecx+0xc]
pop esi
pop ebx
pop ebp
ret 0x4
mov eax,[eax+0x8]
mov eax,[eax+0x8]
ret
nop
push ebx
push esi
mov esi,edx
mov ebx,eax
mov edx,esi
mov eax,[ebx+0x8]
call dword 0x13e7c
pop esi
pop ebx
ret
nop
push ebp
mov ebp,esp
add esp,0xfffffef8
push ebx
push esi
push edi
xor ecx,ecx
mov [ebp-0x4],ecx
mov [ebp-0x8],ecx
mov edi,edx
mov ebx,eax
xor eax,eax
push ebp
push dword 0x415c92
push dword [fs:eax]
mov [fs:eax],esp
lea edx,[ebp-0x108]
mov eax,[ebx]
call dword 0x2ad0
lea edx,[ebp-0x108]
mov eax,edi
call dword 0x3c80
mov eax,ebx
mov si,0xffff
call dword 0x2dec
test eax,eax
jz 0x14c77
mov eax,ebx
mov si,0xffff
call dword 0x2dec
lea edx,[ebp-0x4]
mov si,0xfffe
call dword 0x2dec
cmp dword [ebp-0x4],byte +0x0
jz 0x14c77
lea edx,[ebp-0x8]
mov eax,ebx
call dword 0x14cac
cmp dword [ebp-0x8],byte +0x0
jz 0x14c77
push dword [ebp-0x4]
push dword 0x415ca8
push dword [ebp-0x8]
mov eax,edi
mov edx,0x3
call dword 0x3db0
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x415c99
lea eax,[ebp-0x8]
mov edx,0x2
call dword 0x3a40
ret
jmp dword 0x3384
jmp short 0x14c84
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret
db 0xff
db 0xff
db 0xff
inc dword [ecx]
add [eax],al
add [esi],ch
add [eax],al
add [ebp-0x75],dl
in al,dx
add esp,byte -0x10
push ebx
push esi
push edi
mov [ebp-0x8],edx
mov [ebp-0x4],eax
mov eax,[ebp-0x8]
mov edx,[ebp-0x4]
mov edx,[edx+0x14]
call dword 0x3a70
mov eax,[ebp-0x4]
mov si,0xffff
call dword 0x2dec
mov [ebp-0x10],eax
mov eax,[ebp-0x8]
cmp dword [eax],byte +0x0
jnz dword 0x14dbf
cmp dword [ebp-0x10],byte +0x0
jz dword 0x14dbf
mov eax,[ebp-0x10]
mov eax,[eax]
call dword 0x2e30
test eax,eax
jz dword 0x14dbf
mov eax,[ebp-0x10]
mov eax,[eax]
call dword 0x2e30
call dword 0x10984
mov ebx,eax
test ebx,ebx
jz dword 0x14dbf
cmp word [ebx+0x8],byte +0x0
jz dword 0x14dbf
movsx eax,word [ebx+0x8]
add eax,eax
add eax,eax
call dword 0x1e60
mov [ebp-0xc],eax
xor eax,eax
push ebp
push dword 0x415daa
push dword [fs:eax]
mov [fs:eax],esp
mov eax,[ebp-0x10]
mov eax,[eax]
call dword 0x2e30
mov edx,[ebp-0xc]
call dword 0x10ab0
movsx edi,word [ebx+0x8]
dec edi
test edi,edi
jl 0x14d94
inc edi
xor ebx,ebx
mov eax,[ebp-0xc]
mov esi,[eax+ebx*4]
mov eax,[esi]
mov eax,[eax]
cmp byte [eax],0x7
jnz 0x14d90
mov eax,[ebp-0xc]
mov edx,[eax+ebx*4]
mov eax,[ebp-0x10]
call dword 0x10b04
cmp eax,[ebp-0x4]
jnz 0x14d90
mov eax,[ebp-0x4]
add eax,byte +0x14
lea edx,[esi+0x1a]
call dword 0x3c80
inc ebx
dec edi
jnz 0x14d60
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x415db1
mov eax,[ebp-0xc]
call dword 0x1e7c
ret
jmp dword 0x3384
jmp short 0x14da1
mov eax,[ebp-0x8]
mov edx,[ebp-0x4]
mov edx,[edx+0x14]
call dword 0x3a70
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret
mov eax,eax
push ebx
push esi
push edi
mov esi,edx
mov ebx,eax
mov eax,esi
mov edx,[ebx+0x4]
call dword 0x2d7c
test al,al
jnz 0x14def
mov edx,[dword 0x468d0c]
xor ecx,ecx
mov eax,[0x41294c]
call dword 0x13e08
mov edx,esi
mov eax,[ebx+0x8]
call dword 0x13d24
mov [esi+0x4],ebx
mov eax,[ebx+0x10]
mov [esi+0x8],eax
inc dword [ebx+0x10]
mov edx,esi
mov eax,ebx
mov ecx,[eax]
call dword [ecx+0x18]
xor ecx,ecx
mov edx,esi
mov eax,ebx
mov edi,[eax]
call dword [edi+0x14]
mov eax,ebx
call dword 0x14b14
xor ecx,ecx
mov edx,esi
mov eax,ebx
call dword 0x14778
pop edi
pop esi
pop ebx
ret
nop
push ebx
push esi
push edi
mov esi,edx
mov ebx,eax
mov cl,0x1
mov edx,esi
mov eax,ebx
mov edi,[eax]
call dword [edi+0x14]
mov eax,[ebx+0x8]
call dword 0x13f64
cmp esi,eax
jnz 0x14e5c
mov eax,[ebx+0x8]
mov edx,[eax+0x8]
dec edx
call dword 0x13d70
jmp short 0x14e66
mov edx,esi
mov eax,[ebx+0x8]
call dword 0x14018
xor eax,eax
mov [esi+0x4],eax
mov cl,0x1
mov edx,esi
mov eax,ebx
call dword 0x14778
mov eax,ebx
call dword 0x14b14
pop edi
pop esi
pop ebx
ret
lea eax,[eax+0x0]
ret
lea eax,[eax+0x0]
ret
lea eax,[eax+0x0]
ret
lea eax,[eax+0x0]
ret
lea eax,[eax+0x0]
push ecx
mov [esp],edx
sub cl,0x1
jc 0x14ea3
dec cl
jz 0x14eac
jmp short 0x14eb4
mov edx,esp
mov ecx,[eax]
call dword [ecx+0xc]
pop edx
ret
mov edx,[esp]
mov ecx,[eax]
call dword [ecx+0x10]
pop edx
ret
mov eax,eax
push ebx
push esi
call dword 0x2fbc
mov ebx,edx
mov esi,eax
xor edx,edx
mov eax,esi
call dword 0x15a44
mov edx,ebx
and dl,0xfc
mov eax,esi
call dword 0x14450
test bl,bl
jng 0x14ee3
mov eax,esi
call dword 0x2f64
pop esi
pop ebx
ret
mov eax,eax
push ebx
push esi
push edi
mov edi,edx
mov ebx,eax
mov eax,ebx
mov edx,[eax]
call dword [edx+0x14]
mov esi,eax
mov ecx,edi
mov edx,esi
mov eax,ebx
mov ebx,[eax]
call dword [ebx+0x60]
mov eax,esi
pop edi
pop esi
pop ebx
ret
lea eax,[eax+0x0]
push ebx
push esi
push edi
mov edi,ecx
mov esi,eax
mov eax,esi
mov ecx,[eax]
call dword [ecx+0x38]
mov ebx,eax
mov ecx,edi
mov edx,ebx
mov eax,esi
mov esi,[eax]
call dword [esi+0x24]
mov eax,ebx
pop edi
pop esi
pop ebx
ret
lea eax,[eax+0x0]
push ebp
mov ebp,esp
add esp,byte -0xc
push ebx
push esi
push edi
xor ecx,ecx
mov [ebp-0xc],ecx
mov [ebp-0x8],edx
mov [ebp-0x4],eax
xor eax,eax
push ebp
push dword 0x415fd7
push dword [fs:eax]
mov [fs:eax],esp
mov eax,[ebp-0x4]
call dword 0x150a0
xor eax,eax
push ebp
push dword 0x415fba
push dword [fs:eax]
mov [fs:eax],esp
mov eax,[ebp-0x8]
mov edx,[eax]
call dword [edx+0x14]
mov esi,eax
dec esi
test esi,esi
jl 0x14fa4
inc esi
xor ebx,ebx
lea ecx,[ebp-0xc]
mov edx,ebx
mov eax,[ebp-0x8]
mov edi,[eax]
call dword [edi+0xc]
mov eax,[ebp-0xc]
push eax
mov edx,ebx
mov eax,[ebp-0x8]
mov ecx,[eax]
call dword [ecx+0x18]
mov ecx,eax
mov eax,[ebp-0x4]
pop edx
mov edi,[eax]
call dword [edi+0x3c]
inc ebx
dec esi
jnz 0x14f7a
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x415fc1
mov eax,[ebp-0x4]
call dword 0x1515c
ret
jmp dword 0x3384
jmp short 0x14fb1
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x415fde
lea eax,[ebp-0xc]
call dword 0x3a1c
ret
jmp dword 0x3384
jmp short 0x14fce
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret
lea eax,[eax+0x0]
push ebp
mov ebp,esp
push ecx
push ebx
push esi
mov ebx,edx
mov [ebp-0x4],eax
mov eax,ebx
mov edx,[dword 0x412dc4]
call dword 0x2d7c
test al,al
jz dword 0x1508f
mov eax,[ebp-0x4]
call dword 0x150a0
xor eax,eax
push ebp
push dword 0x416088
push dword [fs:eax]
mov [fs:eax],esp
mov eax,[ebp-0x4]
mov edx,[eax]
call dword [edx+0x44]
mov esi,ebx
movzx eax,byte [esi+0x4]
mov edx,[ebp-0x4]
mov [edx+0x4],al
movzx eax,byte [esi+0xd]
mov edx,[ebp-0x4]
mov [edx+0xd],al
movzx eax,byte [esi+0xc]
mov edx,[ebp-0x4]
mov [edx+0xc],al
movzx eax,byte [esi+0x5]
mov edx,[ebp-0x4]
mov [edx+0x5],al
mov eax,[ebp-0x4]
add eax,byte +0x8
mov edx,[esi+0x8]
call dword 0x3a70
movzx eax,byte [esi+0xe]
mov edx,[ebp-0x4]
mov [edx+0xe],al
mov edx,esi
mov eax,[ebp-0x4]
mov ecx,[eax]
call dword [ecx+0x40]
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x416099
mov eax,[ebp-0x4]
call dword 0x1515c
ret
jmp dword 0x3384
jmp short 0x1507f
mov edx,ebx
mov eax,[ebp-0x4]
call dword 0x1447c
pop esi
pop ebx
pop ecx
pop ebp
ret
mov eax,eax
push ebx
mov ebx,eax
cmp dword [ebx+0x10],byte +0x0
jnz 0x150b2
mov dl,0x1
mov eax,ebx
mov ecx,[eax]
call dword [ecx+0x30]
inc dword [ebx+0x10]
pop ebx
ret
nop
push ebp
mov ebp,esp
push ebx
push esi
mov eax,[ebp+0x8]
mov eax,[eax-0x4]
mov esi,[eax+0x20]
test esi,esi
jz 0x150f7
mov bl,0x1
mov eax,[ebp+0x8]
mov eax,esi
mov edx,[dword 0x412dc4]
call dword 0x2d7c
test al,al
jz 0x15107
mov eax,[ebp+0x8]
mov edx,esi
mov eax,[ebp+0x8]
mov eax,[eax-0x8]
call dword 0x15170
mov ebx,eax
xor bl,0x1
jmp short 0x15107
mov eax,[ebp+0x8]
mov eax,[eax-0x8]
mov edx,[eax]
call dword [edx+0x14]
test eax,eax
setg bl
mov eax,ebx
pop esi
pop ebx
pop ebp
ret
lea eax,[eax+0x0]
push ebp
mov ebp,esp
add esp,byte -0x8
push ebx
mov [ebp-0x4],edx
mov [ebp-0x8],eax
mov eax,[ebp-0x8]
push eax
push dword 0x4168d8
mov eax,[ebp-0x8]
push eax
push dword 0x416c70
push ebp
call dword 0x150b8
pop ecx
mov ecx,eax
mov edx,0x416154
mov eax,[ebp-0x4]
mov ebx,[eax]
call dword [ebx+0x4]
pop ebx
pop ecx
pop ecx
pop ebp
ret
add [eax],al
db 0xff
db 0xff
db 0xff
inc dword [edi]
add [eax],al
add [ebx+0x74],dl
jc 0x151c1
outsb
jnc 0x1515c
dec dword [eax+0x10]
cmp dword [eax+0x10],byte +0x0
jnz 0x1516c
xor edx,edx
mov ecx,[eax]
call dword [ecx+0x30]
ret
lea eax,[eax+0x0]
push ebp
mov ebp,esp
add esp,byte -0x14
push ebx
push esi
push edi
xor ecx,ecx
mov [ebp-0x10],ecx
mov [ebp-0x14],ecx
mov [ebp-0x8],edx
mov [ebp-0x4],eax
xor eax,eax
push ebp
push dword 0x416205
push dword [fs:eax]
mov [fs:eax],esp
mov byte [ebp-0x9],0x0
mov eax,[ebp-0x4]
mov edx,[eax]
call dword [edx+0x14]
mov ebx,eax
mov eax,[ebp-0x8]
mov edx,[eax]
call dword [edx+0x14]
cmp ebx,eax
jnz 0x151ea
mov esi,ebx
dec esi
test esi,esi
jl 0x151e6
inc esi
xor ebx,ebx
lea ecx,[ebp-0x10]
mov edx,ebx
mov eax,[ebp-0x4]
mov edi,[eax]
call dword [edi+0xc]
mov eax,[ebp-0x10]
push eax
lea ecx,[ebp-0x14]
mov edx,ebx
mov eax,[ebp-0x8]
mov edi,[eax]
call dword [edi+0xc]
mov edx,[ebp-0x14]
pop eax
call dword 0x3e44
jnz 0x151ea
inc ebx
dec esi
jnz 0x151b9
mov byte [ebp-0x9],0x1
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x41620c
lea eax,[ebp-0x14]
mov edx,0x2
call dword 0x3a40
ret
jmp dword 0x3384
jmp short 0x151f7
movzx eax,byte [ebp-0x9]
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret
nop
mov eax,[ebp+0x4]
ret
push ebx
push esi
add esp,byte -0x8
mov esi,ecx
mov ebx,edx
call dword 0x15218
push eax
mov [esp+0x4],esi
mov byte [esp+0x8],0x0
lea eax,[esp+0x4]
push eax
push byte +0x0
mov ecx,ebx
mov dl,0x1
mov eax,[0x4127d4]
call dword 0xb48c
jmp dword 0x3464
pop ecx
pop edx
pop esi
pop ebx
ret
nop
push ebp
mov ebp,esp
push byte +0x0
push ebx
push esi
push edi
mov edi,ecx
mov esi,edx
mov ebx,eax
xor eax,eax
push ebp
push dword 0x41629c
push dword [fs:eax]
mov [fs:eax],esp
lea edx,[ebp-0x4]
mov eax,esi
call dword 0x5750
mov edx,[ebp-0x4]
mov ecx,edi
mov eax,ebx
call dword 0x1521c
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x4162a3
lea eax,[ebp-0x4]
call dword 0x3a1c
ret
jmp dword 0x3384
jmp short 0x15293
pop edi
pop esi
pop ebx
pop ecx
pop ebp
ret
lea eax,[eax+0x0]
push ebp
mov ebp,esp
add esp,byte -0x10
push ebx
push esi
push edi
xor ebx,ebx
mov [ebp-0x10],ebx
mov [ebp-0x4],ebx
mov esi,ecx
mov ebx,edx
mov [ebp-0x8],eax
xor eax,eax
push ebp
push dword 0x416387
push dword [fs:eax]
mov [fs:eax],esp
mov eax,[ebp-0x8]
call dword 0x150a0
xor eax,eax
push ebp
push dword 0x416362
push dword [fs:eax]
mov [fs:eax],esp
lea ecx,[ebp-0x4]
mov edx,ebx
mov eax,[ebp-0x8]
mov edi,[eax]
call dword [edi+0xc]
mov edx,ebx
mov eax,[ebp-0x8]
mov ecx,[eax]
call dword [ecx+0x18]
mov [ebp-0xc],eax
lea ecx,[ebp-0x10]
mov edx,esi
mov eax,[ebp-0x8]
mov edi,[eax]
call dword [edi+0xc]
mov ecx,[ebp-0x10]
mov edx,ebx
mov eax,[ebp-0x8]
mov edi,[eax]
call dword [edi+0x20]
mov edx,esi
mov eax,[ebp-0x8]
mov ecx,[eax]
call dword [ecx+0x18]
mov ecx,eax
mov edx,ebx
mov eax,[ebp-0x8]
mov ebx,[eax]
call dword [ebx+0x24]
mov ecx,[ebp-0x4]
mov edx,esi
mov eax,[ebp-0x8]
mov ebx,[eax]
call dword [ebx+0x20]
mov ecx,[ebp-0xc]
mov edx,esi
mov eax,[ebp-0x8]
mov ebx,[eax]
call dword [ebx+0x24]
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x416369
mov eax,[ebp-0x8]
call dword 0x1515c
ret
jmp dword 0x3384
jmp short 0x15359
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x41638e
lea eax,[ebp-0x10]
call dword 0x3a1c
lea eax,[ebp-0x4]
call dword 0x3a1c
ret
jmp dword 0x3384
jmp short 0x15376
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret
lea eax,[eax+0x0]
mov edx,[eax]
call dword [edx+0x14]
ret
mov eax,eax
xor eax,eax
ret
nop
push ebp
mov ebp,esp
push byte +0x0
push ebx
mov ebx,eax
xor eax,eax
push ebp
push dword 0x4163e9
push dword [fs:eax]
mov [fs:eax],esp
lea edx,[ebp-0x4]
mov eax,ebx
mov ecx,[eax]
call dword [ecx+0x1c]
mov eax,[ebp-0x4]
call dword 0x3eac
call dword 0x8668
mov ebx,eax
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x4163f0
lea eax,[ebp-0x4]
call dword 0x3a1c
ret
jmp dword 0x3384
jmp short 0x153e0
mov eax,ebx
pop ebx
pop ecx
pop ebp
ret
mov eax,eax
push ebp
mov ebp,esp
add esp,byte -0x28
push ebx
push esi
xor ecx,ecx
mov [ebp-0x24],ecx
mov [ebp-0x4],ecx
mov [ebp-0x8],ecx
mov [ebp-0x10],edx
mov [ebp-0xc],eax
xor eax,eax
push ebp
push dword 0x416521
push dword [fs:eax]
mov [fs:eax],esp
mov eax,[ebp-0xc]
mov edx,[eax]
call dword [edx+0x14]
mov [ebp-0x1c],eax
xor eax,eax
mov [ebp-0x18],eax
lea edx,[ebp-0x8]
mov eax,[ebp-0xc]
call dword 0x15cf4
mov esi,[ebp-0x1c]
dec esi
test esi,esi
jl 0x15481
inc esi
mov dword [ebp-0x14],0x0
lea ecx,[ebp-0x24]
mov edx,[ebp-0x14]
mov eax,[ebp-0xc]
mov ebx,[eax]
call dword [ebx+0xc]
mov eax,[ebp-0x24]
mov [ebp-0x28],eax
mov eax,[ebp-0x28]
test eax,eax
jz 0x1546a
sub eax,byte +0x4
mov eax,[eax]
mov edx,[ebp-0x8]
test edx,edx
jz 0x15476
sub edx,byte +0x4
mov edx,[edx]
add edx,eax
add [ebp-0x18],edx
inc dword [ebp-0x14]
dec esi
jnz 0x1544a
mov eax,[ebp-0x10]
mov ecx,[ebp-0x18]
xor edx,edx
call dword 0x3b0c
mov eax,[ebp-0x10]
mov eax,[eax]
mov [ebp-0x20],eax
mov esi,[ebp-0x1c]
dec esi
test esi,esi
jl 0x154fe
inc esi
mov dword [ebp-0x14],0x0
lea ecx,[ebp-0x4]
mov edx,[ebp-0x14]
mov eax,[ebp-0xc]
mov ebx,[eax]
call dword [ebx+0xc]
mov eax,[ebp-0x4]
test eax,eax
jz 0x154c0
sub eax,byte +0x4
mov eax,[eax]
mov ebx,eax
test ebx,ebx
jz 0x154d6
mov edx,[ebp-0x20]
mov eax,[ebp-0x4]
mov ecx,ebx
call dword 0x2050
add [ebp-0x20],ebx
mov eax,[ebp-0x8]
test eax,eax
jz 0x154e2
sub eax,byte +0x4
mov eax,[eax]
mov ebx,eax
test ebx,ebx
jz 0x154f8
mov edx,[ebp-0x20]
mov eax,[ebp-0x8]
mov ecx,ebx
call dword 0x2050
add [ebp-0x20],ebx
inc dword [ebp-0x14]
dec esi
jnz 0x154a6
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x416528
lea eax,[ebp-0x24]
call dword 0x3a1c
lea eax,[ebp-0x8]
mov edx,0x2
call dword 0x3a40
ret
jmp dword 0x3384
jmp short 0x1550b
pop esi
pop ebx
mov esp,ebp
pop ebp
ret
mov eax,eax
push ebp
mov ebp,esp
add esp,byte -0xc
push ebx
push esi
push edi
xor ecx,ecx
mov [ebp-0xc],ecx
mov [ebp-0x4],edx
mov ebx,eax
xor eax,eax
push ebp
push dword 0x4165a8
push dword [fs:eax]
mov [fs:eax],esp
mov eax,ebx
mov edx,[eax]
call dword [edx+0x14]
mov esi,eax
dec esi
test esi,esi
jl 0x1558b
inc esi
mov dword [ebp-0x8],0x0
lea ecx,[ebp-0xc]
mov edx,[ebp-0x8]
mov eax,ebx
mov edi,[eax]
call dword [edi+0xc]
mov edx,[ebp-0xc]
mov ecx,[ebp-0x4]
mov eax,ebx
mov edi,[eax]
call dword [edi+0x34]
test eax,eax
jz 0x15592
inc dword [ebp-0x8]
dec esi
jnz 0x15567
mov dword [ebp-0x8],0xffffffff
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x4165af
lea eax,[ebp-0xc]
call dword 0x3a1c
ret
jmp dword 0x3384
jmp short 0x1559f
mov eax,[ebp-0x8]
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret
lea eax,[eax+0x0]
push ebp
mov ebp,esp
add esp,byte -0x18
push ebx
push esi
xor ecx,ecx
mov [ebp-0x18],ecx
mov [ebp-0x14],ecx
mov [ebp-0x4],ecx
mov [ebp-0x8],edx
mov ebx,eax
xor eax,eax
push ebp
push dword 0x41667f
push dword [fs:eax]
mov [fs:eax],esp
mov eax,ebx
mov edx,[eax]
call dword [edx+0x14]
dec eax
test eax,eax
jl 0x15655
inc eax
mov [ebp-0x10],eax
mov dword [ebp-0xc],0x0
lea ecx,[ebp-0x4]
mov edx,[ebp-0xc]
mov eax,ebx
mov esi,[eax]
call dword [esi+0xc]
mov eax,ebx
call dword 0x15d98
mov edx,eax
lea eax,[ebp-0x14]
call dword 0x3c04
mov eax,[ebp-0x14]
mov edx,[ebp-0x4]
call dword 0xc1e8
mov esi,eax
test esi,esi
jz 0x1564d
lea eax,[ebp-0x18]
push eax
mov ecx,esi
dec ecx
mov edx,0x1
mov eax,[ebp-0x4]
call dword 0x3f14
mov edx,[ebp-0x18]
mov ecx,[ebp-0x8]
mov eax,ebx
mov esi,[eax]
call dword [esi+0x34]
test eax,eax
jz 0x1565c
inc dword [ebp-0xc]
dec dword [ebp-0x10]
jnz 0x155f9
mov dword [ebp-0xc],0xffffffff
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x416686
lea eax,[ebp-0x18]
mov edx,0x2
call dword 0x3a40
lea eax,[ebp-0x4]
call dword 0x3a1c
ret
jmp dword 0x3384
jmp short 0x15669
mov eax,[ebp-0xc]
pop esi
pop ebx
mov esp,ebp
pop ebp
ret
nop
push ebx
push esi
push edi
push ebp
mov ebp,edx
mov edi,eax
mov eax,edi
mov edx,[eax]
call dword [edx+0x14]
mov ebx,eax
dec ebx
test ebx,ebx
jl 0x156ba
inc ebx
xor esi,esi
mov edx,esi
mov eax,edi
mov ecx,[eax]
call dword [ecx+0x18]
cmp ebp,eax
jz 0x156bd
inc esi
dec ebx
jnz 0x156a9
or esi,byte -0x1
mov eax,esi
pop ebp
pop edi
pop esi
pop ebx
ret
push ebp
mov ebp,esp
push ecx
push ebx
push esi
push edi
mov [ebp-0x4],ecx
mov ebx,edx
mov esi,eax
mov ecx,[ebp-0x4]
mov edx,ebx
mov eax,esi
mov edi,[eax]
call dword [edi+0x60]
mov ecx,[ebp+0x8]
mov edx,ebx
mov eax,esi
mov ebx,[eax]
call dword [ebx+0x24]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
ret 0x4
mov eax,eax
push ebp
mov ebp,esp
push ecx
push ebx
mov ebx,eax
push byte +0x20
mov ecx,edx
mov eax,[0x4130fc]
mov dl,0x1
call dword 0x1695c
mov [ebp-0x4],eax
xor eax,eax
push ebp
push dword 0x41673c
push dword [fs:eax]
mov [fs:eax],esp
mov edx,[ebp-0x4]
mov eax,ebx
mov ecx,[eax]
call dword [ecx+0x6c]
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x416743
mov eax,[ebp-0x4]
call dword 0x2bf0
ret
jmp dword 0x3384
jmp short 0x15733
pop ebx
pop ecx
pop ebp
ret
nop
push ebp
mov ebp,esp
add esp,byte -0x8
push ebx
push esi
xor ecx,ecx
mov [ebp-0x4],ecx
mov ebx,edx
mov [ebp-0x8],eax
xor eax,eax
push ebp
push dword 0x4167e5
push dword [fs:eax]
mov [fs:eax],esp
mov eax,[ebp-0x8]
call dword 0x150a0
xor eax,eax
push ebp
push dword 0x4167c8
push dword [fs:eax]
mov [fs:eax],esp
mov eax,ebx
mov edx,[eax]
call dword [edx]
mov esi,eax
mov eax,ebx
call dword 0x164a8
sub esi,eax
lea eax,[ebp-0x4]
mov ecx,esi
xor edx,edx
call dword 0x3b0c
mov edx,[ebp-0x4]
mov ecx,esi
mov eax,ebx
mov ebx,[eax]
call dword [ebx+0xc]
mov edx,[ebp-0x4]
mov eax,[ebp-0x8]
mov ecx,[eax]
call dword [ecx+0x2c]
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x4167cf
mov eax,[ebp-0x8]
call dword 0x1515c
ret
jmp dword 0x3384
jmp short 0x157bf
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x4167ec
lea eax,[ebp-0x4]
call dword 0x3a1c
ret
jmp dword 0x3384
jmp short 0x157dc
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
ret
mov eax,eax
push ebp
mov ebp,esp
add esp,byte -0x8
push ebx
push esi
push edi
xor ebx,ebx
mov [ebp-0x4],ebx
mov esi,ecx
mov ebx,edx
mov [ebp-0x8],eax
xor eax,eax
push ebp
push dword 0x416895
push dword [fs:eax]
mov [fs:eax],esp
cmp esi,ebx
jz 0x1587f
mov eax,[ebp-0x8]
call dword 0x150a0
xor eax,eax
push ebp
push dword 0x416878
push dword [fs:eax]
mov [fs:eax],esp
lea ecx,[ebp-0x4]
mov edx,ebx
mov eax,[ebp-0x8]
mov edi,[eax]
call dword [edi+0xc]
mov edx,ebx
mov eax,[ebp-0x8]
mov ecx,[eax]
call dword [ecx+0x18]
mov edi,eax
mov edx,ebx
mov eax,[ebp-0x8]
mov ecx,[eax]
call dword [ecx+0x48]
push edi
mov ecx,[ebp-0x4]
mov edx,esi
mov eax,[ebp-0x8]
mov ebx,[eax]
call dword [ebx+0x64]
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x41687f
mov eax,[ebp-0x8]
call dword 0x1515c
ret
jmp dword 0x3384
jmp short 0x1586f
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x41689c
lea eax,[ebp-0x4]
call dword 0x3a1c
ret
jmp dword 0x3384
jmp short 0x1588c
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
ret
nop
push ebx
push esi
push edi
push ebp
mov ebp,ecx
mov esi,edx
mov ebx,eax
mov edx,esi
mov eax,ebx
mov ecx,[eax]
call dword [ecx+0x18]
mov edi,eax
mov edx,esi
mov eax,ebx
mov ecx,[eax]
call dword [ecx+0x48]
push edi
mov ecx,ebp
mov edx,esi
mov eax,ebx
mov ebx,[eax]
call dword [ebx+0x64]
pop ebp
pop edi
pop esi
pop ebx
ret
nop
ret
lea eax,[eax+0x0]
push ebp
mov ebp,esp
add esp,byte -0xc
xor ecx,ecx
mov [ebp-0xc],ecx
mov [ebp-0x8],edx
mov [ebp-0x4],eax
xor eax,eax
push ebp
push dword 0x41697c
push dword [fs:eax]
mov [fs:eax],esp
mov eax,[ebp-0x8]
call dword 0x18924
mov eax,[ebp-0x4]
call dword 0x150a0
xor eax,eax
push ebp
push dword 0x416957
push dword [fs:eax]
mov [fs:eax],esp
mov eax,[ebp-0x4]
mov edx,[eax]
call dword [edx+0x44]
jmp short 0x15935
lea edx,[ebp-0xc]
mov eax,[ebp-0x8]
call dword 0x19654
mov edx,[ebp-0xc]
mov eax,[ebp-0x4]
mov ecx,[eax]
call dword [ecx+0x38]
mov eax,[ebp-0x8]
call dword 0x17870
test al,al
jz 0x1591f
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x41695e
mov eax,[ebp-0x4]
call dword 0x1515c
ret
jmp dword 0x3384
jmp short 0x1594e
mov eax,[ebp-0x8]
call dword 0x1892c
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x416983
lea eax,[ebp-0xc]
call dword 0x3a1c
ret
jmp dword 0x3384
jmp short 0x15973
mov esp,ebp
pop ebp
ret
nop
push ebp
mov ebp,esp
push ecx
push ebx
mov ebx,eax
push dword 0xffff
mov ecx,edx
mov eax,[0x4130fc]
mov dl,0x1
call dword 0x1695c
mov [ebp-0x4],eax
xor eax,eax
push ebp
push dword 0x4169d3
push dword [fs:eax]
mov [fs:eax],esp
mov edx,[ebp-0x4]
mov eax,ebx
mov ecx,[eax]
call dword [ecx+0x78]
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x4169da
mov eax,[ebp-0x4]
call dword 0x2bf0
ret
jmp dword 0x3384
jmp short 0x159ca
pop ebx
pop ecx
pop ebp
ret
mov eax,eax
push ebp
mov ebp,esp
push byte +0x0
push ebx
push esi
mov esi,edx
mov ebx,eax
xor eax,eax
push ebp
push dword 0x416a31
push dword [fs:eax]
mov [fs:eax],esp
lea edx,[ebp-0x4]
mov eax,ebx
mov ecx,[eax]
call dword [ecx+0x1c]
mov eax,[ebp-0x4]
test eax,eax
jz 0x15a0f
sub eax,byte +0x4
mov eax,[eax]
mov edx,[ebp-0x4]
mov ecx,eax
mov eax,esi
call dword 0x1670c
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x416a38
lea eax,[ebp-0x4]
call dword 0x3a1c
ret
jmp dword 0x3384
jmp short 0x15a28
pop esi
pop ebx
pop ecx
pop ebp
ret
lea eax,[eax+0x0]
ret
lea eax,[eax+0x0]
push ebx
push esi
mov esi,edx
mov ebx,eax
cmp dword [ebx+0x14],byte +0x0
jz 0x15a58
mov eax,[ebx+0x14]
mov edx,[eax]
call dword [edx+0x10]
lea eax,[ebx+0x14]
mov edx,esi
call dword 0x5288
cmp dword [ebx+0x14],byte +0x0
jz 0x15a72
mov edx,ebx
mov eax,[ebx+0x14]
mov ecx,[eax]
call dword [ecx+0xc]
pop esi
pop ebx
ret
lea eax,[eax+0x0]
push ebp
mov ebp,esp
push byte +0x0
push ebx
push esi
mov esi,edx
mov ebx,eax
xor eax,eax
push ebp
push dword 0x416abb
push dword [fs:eax]
mov [fs:eax],esp
lea eax,[ebp-0x4]
mov edx,esi
call dword 0x3c14
mov edx,[ebp-0x4]
mov eax,ebx
mov ecx,[eax]
call dword [ecx+0x2c]
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x416ac2
lea eax,[ebp-0x4]
call dword 0x3a1c
ret
jmp dword 0x3384
jmp short 0x15ab2
pop esi
pop ebx
pop ecx
pop ebp
ret
nop
push ebp
mov ebp,esp
add esp,byte -0x20
push ebx
push esi
push edi
xor ecx,ecx
mov [ebp-0x20],ecx
mov [ebp-0x18],ecx
mov [ebp-0x14],ecx
mov [ebp-0x4],ecx
mov ebx,edx
mov [ebp-0x8],eax
xor eax,eax
push ebp
push dword 0x416c51
push dword [fs:eax]
mov [fs:eax],esp
mov eax,[ebp-0x8]
call dword 0x150a0
xor edx,edx
push ebp
push dword 0x416c1f
push dword [fs:edx]
mov [fs:edx],esp
mov eax,[ebp-0x8]
mov edx,[eax]
call dword [edx+0x44]
test ebx,ebx
jz dword 0x15c09
lea edx,[ebp-0x14]
mov eax,[ebp-0x8]
call dword 0x15cf4
mov eax,[ebp-0x14]
mov edx,0x416c68
call dword 0x7688
test eax,eax
jnz 0x15b79
jmp short 0x15b6f
mov esi,ebx
jmp short 0x15b3b
inc ebx
movzx eax,byte [ebx]
test al,al
jz 0x15b4a
sub al,0xa
jz 0x15b4a
sub al,0x3
jnz 0x15b3a
mov ecx,ebx
sub ecx,esi
lea eax,[ebp-0x4]
mov edx,esi
call dword 0x3b0c
mov edx,[ebp-0x4]
mov eax,[ebp-0x8]
mov ecx,[eax]
call dword [ecx+0x38]
cmp byte [ebx],0xd
jnz 0x15b69
inc ebx
cmp byte [ebx],0xa
jnz 0x15b6f
inc ebx
cmp byte [ebx],0x0
jnz 0x15b36
jmp dword 0x15c09
mov eax,[0x468eb4]
cmp byte [eax+0xc],0x0
jnz 0x15b8e
mov eax,0x4095e0
mov [ebp-0x10],eax
jmp short 0x15b96
mov eax,0x40d2b4
mov [ebp-0x10],eax
lea edx,[ebp-0x18]
mov eax,[ebp-0x8]
call dword 0x15cf4
mov eax,[ebp-0x18]
mov [ebp-0x1c],eax
mov eax,[ebp-0x1c]
test eax,eax
jz 0x15bb3
sub eax,byte +0x4
mov eax,[eax]
mov [ebp-0xc],eax
jmp short 0x15c04
mov esi,ebx
lea edx,[ebp-0x20]
mov eax,[ebp-0x8]
call dword 0x15cf4
mov eax,[ebp-0x20]
call dword 0x3eac
mov edx,eax
mov eax,ebx
call dword [ebp-0x10]
mov edi,eax
jmp short 0x15bd9
inc ebx
cmp byte [ebx],0x0
jz 0x15be2
cmp edi,ebx
jnz 0x15bd8
mov ecx,ebx
sub ecx,esi
lea eax,[ebp-0x4]
mov edx,esi
call dword 0x3b0c
mov edx,[ebp-0x4]
mov eax,[ebp-0x8]
mov ecx,[eax]
call dword [ecx+0x38]
cmp edi,ebx
jnz 0x15c04
mov eax,[ebp-0xc]
add ebx,eax
cmp byte [ebx],0x0
jnz 0x15bb8
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x416c26
mov eax,[ebp-0x8]
call dword 0x1515c
ret
jmp dword 0x3384
jmp short 0x15c16
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x416c58
lea eax,[ebp-0x20]
call dword 0x3a1c
lea eax,[ebp-0x18]
mov edx,0x2
call dword 0x3a40
lea eax,[ebp-0x4]
call dword 0x3a1c
ret
jmp dword 0x3384
jmp short 0x15c33
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret
add bh,bh
db 0xff
db 0xff
inc dword [edx]
add [eax],al
add [dword 0xc300000a],cl
lea eax,[eax+0x0]
push ebp
mov ebp,esp
add esp,byte -0xc
push ebx
push esi
push edi
xor ecx,ecx
mov [ebp-0xc],ecx
mov [ebp-0x8],edx
mov [ebp-0x4],eax
xor eax,eax
push ebp
push dword 0x416ce6
push dword [fs:eax]
mov [fs:eax],esp
mov eax,[ebp-0x8]
call dword 0x1a22c
mov eax,[ebp-0x4]
mov edx,[eax]
call dword [edx+0x14]
mov ebx,eax
dec ebx
test ebx,ebx
jl 0x15cc8
inc ebx
xor esi,esi
lea ecx,[ebp-0xc]
mov edx,esi
mov eax,[ebp-0x4]
mov edi,[eax]
call dword [edi+0xc]
mov edx,[ebp-0xc]
mov eax,[ebp-0x8]
call dword 0x1a2e8
inc esi
dec ebx
jnz 0x15cac
mov eax,[ebp-0x8]
call dword 0x1a234
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x416ced
lea eax,[ebp-0xc]
call dword 0x3a1c
ret
jmp dword 0x3384
jmp short 0x15cdd
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret
push ebx
push esi
mov esi,edx
mov ebx,eax
test byte [ebx+0x4],0x8
jnz 0x15d0c
mov edx,0x416d24
mov eax,ebx
call dword 0x15d28
mov eax,esi
mov edx,[ebx+0x8]
call dword 0x3a70
pop esi
pop ebx
ret
add [eax],al
add bh,bh
db 0xff
db 0xff
inc dword [edx]
add [eax],al
add [dword 0x5300000a],cl
push esi
mov esi,edx
mov ebx,eax
mov eax,[ebx+0x8]
mov edx,esi
call dword 0x3e44
jnz 0x15d40
test byte [ebx+0x4],0x8
jnz 0x15d4e
or byte [ebx+0x4],0x8
lea eax,[ebx+0x8]
mov edx,esi
call dword 0x3a70
pop esi
pop ebx
ret
lea eax,[eax+0x0]
push ebx
push esi
push edi
push ebp
mov ebp,ecx
mov edi,edx
mov ebx,edi
test ebx,ebx
jz 0x15d67
sub ebx,byte +0x4
mov ebx,[ebx]
mov esi,ebp
test esi,esi
jz 0x15d72
sub esi,byte +0x4
mov esi,[esi]
push esi
mov eax,ebp
call dword 0x3eac
push eax
push ebx
mov eax,edi
call dword 0x3eac
push eax
push byte +0x1
push dword 0x400
call dword 0x5a78
sub eax,byte +0x2
pop ebp
pop edi
pop esi
pop ebx
ret
push ebx
mov ebx,eax
test byte [ebx+0x4],0x4
jnz 0x15daa
mov dl,0x3d
mov eax,ebx
call dword 0x15db0
movzx eax,byte [ebx+0xd]
pop ebx
ret
push ebx
push esi
mov ebx,edx
mov esi,eax
cmp bl,[esi+0xd]
jnz 0x15dc1
test byte [esi+0x4],0x4
jnz 0x15dc8
or byte [esi+0x4],0x4
mov [esi+0xd],bl
pop esi
pop ebx
ret
nop
push ebx
push esi
call dword 0x2fbc
mov ebx,edx
mov esi,eax
xor eax,eax
mov [esi+0x28],eax
mov [esi+0x2c],eax
xor eax,eax
mov [esi+0x30],eax
mov [esi+0x34],eax
mov edx,ebx
and dl,0xfc
mov eax,esi
call dword 0x14eb8
mov eax,[esi+0x1c]
test eax,eax
jz 0x15e0a
mov ecx,eax
mov eax,[esi+0x18]
mov edx,[dword 0x412ed8]
call dword 0x465c
xor eax,eax
mov [esi+0x1c],eax
xor edx,edx
mov eax,esi
mov ecx,[eax]
call dword [ecx+0x28]
test bl,bl
jng 0x15e23
mov eax,esi
call dword 0x2f64
pop esi
pop ebx
ret
mov eax,eax
push ebx
push esi
mov esi,eax
xor ecx,ecx
mov eax,esi
mov ebx,[eax]
call dword [ebx+0x3c]
pop esi
pop ebx
ret
push ebx
push esi
push edi
push ebp
push ecx
mov edi,ecx
mov esi,edx
mov ebx,eax
cmp byte [ebx+0x24],0x0
jnz 0x15e51
mov eax,[ebx+0x1c]
mov [esp],eax
jmp short 0x15e80
mov ecx,esp
mov edx,esi
mov eax,ebx
mov ebp,[eax]
call dword [ebp+0x8c]
test al,al
jz 0x15e80
movzx eax,byte [ebx+0x25]
sub al,0x1
jc 0x15e91
dec al
jz 0x15e71
jmp short 0x15e80
mov edx,[dword 0x468b90]
xor ecx,ecx
mov eax,ebx
call dword 0x15254
push edi
mov ecx,esi
mov edx,[esp+0x4]
mov eax,ebx
mov ebx,[eax]
call dword [ebx+0x88]
mov eax,[esp]
pop edx
pop ebp
pop edi
pop esi
pop ebx
ret
mov eax,eax
push ebx
cmp dword [eax+0x10],byte +0x0
jnz 0x15eb4
cmp word [eax+0x2a],byte +0x0
jz 0x15eb4
mov ebx,eax
mov edx,eax
mov eax,[ebx+0x2c]
call dword [ebx+0x28]
pop ebx
ret
mov eax,eax
push ebx
cmp dword [eax+0x10],byte +0x0
jnz 0x15ed0
cmp word [eax+0x32],byte +0x0
jz 0x15ed0
mov ebx,eax
mov edx,eax
mov eax,[ebx+0x34]
call dword [ebx+0x30]
pop ebx
ret
mov eax,eax
push ebx
mov ebx,eax
cmp dword [ebx+0x1c],byte +0x0
jz 0x15f10
mov eax,ebx
mov edx,[eax]
call dword [edx+0x84]
mov eax,[ebx+0x18]
mov ecx,[ebx+0x1c]
mov edx,[dword 0x412ed8]
call dword 0x465c
xor eax,eax
mov [ebx+0x1c],eax
xor edx,edx
mov eax,ebx
mov ecx,[eax]
call dword [ecx+0x28]
mov eax,ebx
mov edx,[eax]
call dword [edx+0x80]
pop ebx
ret
mov eax,eax
push ebx
push esi
mov esi,edx
mov ebx,eax
test esi,esi
jl 0x15f23
cmp esi,[ebx+0x1c]
jl 0x15f32
mov edx,[dword 0x468dac]
mov ecx,esi
mov eax,ebx
call dword 0x15254
mov eax,ebx
mov edx,[eax]
call dword [edx+0x84]
mov eax,[ebx+0x18]
lea eax,[eax+esi*8]
mov edx,[dword 0x412ed8]
call dword 0x4748
dec dword [ebx+0x1c]
mov eax,[ebx+0x1c]
cmp esi,eax
jnl 0x15f73
sub eax,esi
mov ecx,eax
add ecx,ecx
add ecx,ecx
add ecx,ecx
mov eax,[ebx+0x18]
lea edx,[eax+esi*8]
mov eax,[ebx+0x18]
lea eax,[eax+esi*8+0x8]
call dword 0x2050
mov eax,ebx
mov edx,[eax]
call dword [edx+0x80]
pop esi
pop ebx
ret
push ebx
push esi
push edi
mov edi,ecx
mov esi,edx
mov ebx,eax
test esi,esi
jl 0x15f92
cmp esi,[ebx+0x1c]
jl 0x15fa1
mov edx,[dword 0x468dac]
mov ecx,esi
mov eax,ebx
call dword 0x15254
test edi,edi
jl 0x15faa
cmp edi,[ebx+0x1c]
jl 0x15fb9
mov edx,[dword 0x468dac]
mov ecx,edi
mov eax,ebx
call dword 0x15254
mov eax,ebx
mov edx,[eax]
call dword [edx+0x84]
mov ecx,edi
mov edx,esi
mov eax,ebx
call dword 0x15fdc
mov eax,ebx
mov edx,[eax]
call dword [edx+0x80]
pop edi
pop esi
pop ebx
ret
push ebx
mov ebx,[eax+0x18]
lea edx,[ebx+edx*8]
mov eax,[eax+0x18]
lea eax,[eax+ecx*8]
mov ecx,[edx]
mov ebx,[eax]
mov [edx],ebx
mov [eax],ecx
mov ecx,[edx+0x4]
mov ebx,[eax+0x4]
mov [edx+0x4],ebx
mov [eax+0x4],ecx
pop ebx
ret
nop
push ebx
push esi
push edi
push ebp
add esp,byte -0x14
mov [esp+0x4],ecx
mov [esp],edx
mov edi,eax
mov byte [esp+0x8],0x0
xor esi,esi
mov eax,[edi+0x1c]
dec eax
mov [esp+0xc],eax
cmp esi,[esp+0xc]
jg 0x1606e
mov ebx,[esp+0xc]
add ebx,esi
shr ebx,1
mov eax,[edi+0x18]
mov edx,[eax+ebx*8]
mov ecx,[esp]
mov eax,edi
mov ebp,[eax]
call dword [ebp+0x34]
mov [esp+0x10],eax
cmp dword [esp+0x10],byte +0x0
jnl 0x1604d
lea esi,[ebx+0x1]
jmp short 0x16068
mov eax,ebx
dec eax
mov [esp+0xc],eax
cmp dword [esp+0x10],byte +0x0
jnz 0x16068
mov byte [esp+0x8],0x1
cmp byte [edi+0x25],0x1
jz 0x16068
mov esi,ebx
cmp esi,[esp+0xc]
jng 0x16025
mov eax,[esp+0x4]
mov [eax],esi
movzx eax,byte [esp+0x8]
add esp,byte +0x14
pop ebp
pop edi
pop esi
pop ebx
ret
lea eax,[eax+0x0]
push ebx
push esi
push edi
mov edi,ecx
mov esi,edx
mov ebx,eax
test esi,esi
jl 0x16096
cmp esi,[ebx+0x1c]
jl 0x160a5
mov edx,[dword 0x468dac]
mov ecx,esi
mov eax,ebx
call dword 0x15254
mov eax,edi
mov edx,[ebx+0x18]
mov edx,[edx+esi*8]
call dword 0x3a70
pop edi
pop esi
pop ebx
ret
mov eax,eax
mov eax,[eax+0x20]
ret
mov eax,[eax+0x1c]
ret
push ebx
push esi
mov esi,edx
mov ebx,eax
test esi,esi
jl 0x160cf
cmp esi,[ebx+0x1c]
jl 0x160de
mov edx,[dword 0x468dac]
mov ecx,esi
mov eax,ebx
call dword 0x15254
mov eax,[ebx+0x18]
mov eax,[eax+esi*8+0x4]
pop esi
pop ebx
ret
push esi
mov edx,[eax+0x20]
cmp edx,byte +0x40
jng 0x160ff
mov esi,edx
test esi,esi
jns 0x160fa
add esi,byte +0x3
sar esi,byte 0x2
jmp short 0x16110
cmp edx,byte +0x8
jng 0x1610b
mov esi,0x10
jmp short 0x16110
mov esi,0x4
add esi,edx
mov edx,esi
mov ecx,[eax]
call dword [ecx+0x28]
pop esi
ret
nop
push ebx
push esi
push ecx
mov esi,edx
mov ebx,eax
cmp byte [ebx+0x24],0x0
jnz 0x16137
mov edx,esi
mov eax,ebx
call dword 0x15530
mov [esp],eax
jmp short 0x16150
mov ecx,esp
mov edx,esi
mov eax,ebx
mov ebx,[eax]
call dword [ebx+0x8c]
test al,al
jnz 0x16150
mov dword [esp],0xffffffff
mov eax,[esp]
pop edx
pop esi
pop ebx
ret
nop
push ebx
push esi
mov esi,eax
push byte +0x0
mov eax,esi
mov ebx,[eax]
call dword [ebx+0x64]
pop esi
pop ebx
ret
push ebp
mov ebp,esp
push ebx
push esi
push edi
mov edi,ecx
mov esi,edx
mov ebx,eax
cmp byte [ebx+0x24],0x0
jz 0x16189
mov edx,[dword 0x468c4c]
xor ecx,ecx
mov eax,ebx
call dword 0x15254
test esi,esi
jl 0x16192
cmp esi,[ebx+0x1c]
jng 0x161a1
mov edx,[dword 0x468dac]
mov ecx,esi
mov eax,ebx
call dword 0x15254
mov eax,[ebp+0x8]
push eax
mov ecx,edi
mov edx,esi
mov eax,ebx
mov ebx,[eax]
call dword [ebx+0x88]
pop edi
pop esi
pop ebx
pop ebp
ret 0x4
mov eax,eax
push ebp
mov ebp,esp
push ebx
push esi
push edi
mov edi,ecx
mov esi,edx
mov ebx,eax
mov eax,ebx
mov edx,[eax]
call dword [edx+0x84]
mov eax,[ebx+0x1c]
cmp eax,[ebx+0x20]
jnz 0x161e1
mov eax,ebx
call dword 0x160e8
mov eax,[ebx+0x1c]
cmp esi,eax
jnl 0x16208
mov edx,[ebx+0x18]
lea edx,[edx+esi*8+0x8]
push edx
mov edx,[ebx+0x18]
lea edx,[edx+esi*8]
sub eax,esi
mov ecx,eax
add ecx,ecx
add ecx,ecx
add ecx,ecx
mov eax,edx
pop edx
call dword 0x2050
mov eax,[ebx+0x18]
lea eax,[eax+esi*8]
mov esi,eax
xor eax,eax
mov [esi],eax
mov eax,[ebp+0x8]
mov [esi+0x4],eax
mov eax,esi
mov edx,edi
call dword 0x3a70
inc dword [ebx+0x1c]
mov eax,ebx
mov edx,[eax]
call dword [edx+0x80]
pop edi
pop esi
pop ebx
pop ebp
ret 0x4
nop
push ebx
push esi
push edi
mov edi,ecx
mov esi,edx
mov ebx,eax
cmp byte [ebx+0x24],0x0
jz 0x16256
mov edx,[dword 0x468c4c]
xor ecx,ecx
mov eax,ebx
call dword 0x15254
test esi,esi
jl 0x1625f
cmp esi,[ebx+0x1c]
jl 0x1626e
mov edx,[dword 0x468dac]
mov ecx,esi
mov eax,ebx
call dword 0x15254
mov eax,ebx
mov edx,[eax]
call dword [edx+0x84]
mov eax,[ebx+0x18]
lea eax,[eax+esi*8]
mov edx,edi
call dword 0x3a70
mov eax,ebx
mov edx,[eax]
call dword [edx+0x80]
pop edi
pop esi
pop ebx
ret
nop
push ebx
push esi
push edi
mov edi,ecx
mov esi,edx
mov ebx,eax
test esi,esi
jl 0x162a6
cmp esi,[ebx+0x1c]
jl 0x162b5
mov edx,[dword 0x468dac]
mov ecx,esi
mov eax,ebx
call dword 0x15254
mov eax,ebx
mov edx,[eax]
call dword [edx+0x84]
mov eax,[ebx+0x18]
mov [eax+esi*8+0x4],edi
mov eax,ebx
mov edx,[eax]
call dword [edx+0x80]
pop edi
pop esi
pop ebx
ret
push ebp
mov ebp,esp
add esp,byte -0x10
push ebx
push esi
mov [ebp-0xc],ecx
mov [ebp-0x8],edx
mov [ebp-0x4],eax
mov ebx,[ebp-0x8]
mov esi,[ebp-0xc]
mov eax,[ebp-0x8]
add eax,[ebp-0xc]
shr eax,1
mov [ebp-0x10],eax
jmp short 0x162f9
inc ebx
mov ecx,[ebp-0x10]
mov edx,ebx
mov eax,[ebp-0x4]
call dword [ebp+0x8]
test eax,eax
jl 0x162f8
jmp short 0x1630b
dec esi
mov ecx,[ebp-0x10]
mov edx,esi
mov eax,[ebp-0x4]
call dword [ebp+0x8]
test eax,eax
jg 0x1630a
cmp esi,ebx
jl 0x1633e
mov ecx,esi
mov edx,ebx
mov eax,[ebp-0x4]
call dword 0x15fdc
cmp ebx,[ebp-0x10]
jnz 0x16334
mov [ebp-0x10],esi
jmp short 0x1633c
cmp esi,[ebp-0x10]
jnz 0x1633c
mov [ebp-0x10],ebx
inc ebx
dec esi
cmp esi,ebx
jnl 0x162f9
cmp esi,[ebp-0x8]
jng 0x16358
mov eax,[ebp+0x8]
push eax
mov ecx,esi
mov edx,[ebp-0x8]
mov eax,[ebp-0x4]
call dword 0x162d4
mov [ebp-0x8],ebx
cmp ebx,[ebp-0xc]
jl 0x162e5
pop esi
pop ebx
mov esp,ebp
pop ebp
ret 0x4
push ebx
push esi
mov esi,edx
mov ebx,eax
mov edx,esi
add edx,edx
add edx,edx
add edx,edx
lea eax,[ebx+0x18]
call dword 0x1e94
mov [ebx+0x20],esi
pop esi
pop ebx
ret
push ebx
push esi
mov ebx,edx
mov esi,eax
cmp bl,[esi+0x24]
jz 0x163a0
test bl,bl
jz 0x1639d
mov eax,esi
mov edx,[eax]
call dword [edx+0x90]
mov [esi+0x24],bl
pop esi
pop ebx
ret
nop
test dl,dl
jz 0x163b1
mov edx,[eax]
call dword [edx+0x84]
ret
mov edx,[eax]
call dword [edx+0x80]
ret
mov eax,eax
push ebx
push esi
push edi
mov edi,edx
mov esi,eax
mov eax,[esi+0x18]
mov ecx,[eax+ecx*8]
mov eax,[esi+0x18]
mov edx,[eax+edi*8]
mov eax,esi
mov ebx,[eax]
call dword [ebx+0x34]
pop edi
pop esi
pop ebx
ret
mov eax,eax
mov edx,0x4173bc
mov ecx,[eax]
call dword [ecx+0x94]
ret
mov eax,eax
push ebx
push esi
mov esi,edx
mov ebx,eax
cmp byte [ebx+0x24],0x0
jnz 0x16420
cmp dword [ebx+0x1c],byte +0x1
jng 0x16420
mov eax,ebx
mov edx,[eax]
call dword [edx+0x84]
push esi
mov ecx,[ebx+0x1c]
dec ecx
xor edx,edx
mov eax,ebx
call dword 0x162d4
mov eax,ebx
mov edx,[eax]
call dword [edx+0x80]
pop esi
pop ebx
ret
nop
push ebx
push esi
push edi
push ebp
mov ebp,ecx
mov edi,edx
cmp byte [eax+0x26],0x0
jz 0x1646b
mov ebx,edi
test ebx,ebx
jz 0x1643d
sub ebx,byte +0x4
mov ebx,[ebx]
mov esi,ebp
test esi,esi
jz 0x16448
sub esi,byte +0x4
mov esi,[esi]
push esi
mov eax,ebp
call dword 0x3eac
push eax
push ebx
mov eax,edi
call dword 0x3eac
push eax
push byte +0x0
push dword 0x400
call dword 0x5a78
sub eax,byte +0x2
jmp short 0x164a2
mov ebx,edi
test ebx,ebx
jz 0x16476
sub ebx,byte +0x4
mov ebx,[ebx]
mov esi,ebp
test esi,esi
jz 0x16481
sub esi,byte +0x4
mov esi,[esi]
push esi
mov eax,ebp
call dword 0x3eac
push eax
push ebx
mov eax,edi
call dword 0x3eac
push eax
push byte +0x1
push dword 0x400
call dword 0x5a78
sub eax,byte +0x2
pop ebp
pop edi
pop esi
pop ebx
ret
nop
add esp,byte -0x8
push byte +0x0
push byte +0x0
mov dl,0x1
mov ecx,[eax]
call dword [ecx+0x18]
mov [esp],eax
mov [esp+0x4],edx
mov eax,[esp]
mov edx,[esp+0x4]
pop ecx
pop edx
ret
nop
push ebp
mov ebp,esp
push dword [ebp+0xc]
push dword [ebp+0x8]
xor edx,edx
mov ecx,[eax]
call dword [ecx+0x18]
pop ebp
ret 0x8
push ebx
add esp,byte -0x10
mov ebx,eax
push byte +0x0
push byte +0x0
mov dl,0x1
mov eax,ebx
mov ecx,[eax]
call dword [ecx+0x18]
mov [esp+0x8],eax
mov [esp+0xc],edx
push byte +0x0
push byte +0x0
mov dl,0x2
mov eax,ebx
mov ecx,[eax]
call dword [ecx+0x18]
mov [esp],eax
mov [esp+0x4],edx
push dword [esp+0xc]
push dword [esp+0xc]
xor edx,edx
mov eax,ebx
mov ecx,[eax]
call dword [ecx+0x18]
mov eax,[esp]
mov edx,[esp+0x4]
add esp,byte +0x10
pop ebx
ret
ret
lea eax,[eax+0x0]
push ebp
mov ebp,esp
push dword [ebp+0xc]
push dword [ebp+0x8]
mov edx,[eax]
call dword [edx+0x8]
pop ebp
ret 0x8
mov eax,eax
push ebp
mov ebp,esp
mov ecx,eax
cmp dword [ebp+0xc],byte -0x1
jnz 0x16556
cmp dword [ebp+0x8],0x80000000
jc 0x1656b
jmp short 0x16558
jl 0x1656b
cmp dword [ebp+0xc],byte +0x0
jnz 0x16569
cmp dword [ebp+0x8],0x7fffffff
jna 0x16582
jmp short 0x1656b
jng 0x16582
mov ecx,[dword 0x468e20]
mov dl,0x1
mov eax,[0x407b8c]
call dword 0xb50c
call dword 0x3464
mov eax,[ebp+0x8]
mov edx,eax
mov eax,ecx
mov ecx,[eax]
call dword [ecx+0x4]
pop ebp
ret 0x8
mov eax,eax
push ebp
mov ebp,esp
add esp,0xfffffef8
lea edx,[ebp-0x108]
mov eax,[ebp+0x8]
mov eax,[eax-0x4]
mov eax,[eax]
call dword 0x2ad0
lea eax,[ebp-0x108]
mov [ebp-0x8],eax
mov byte [ebp-0x4],0x4
lea eax,[ebp-0x8]
push eax
push byte +0x0
mov ecx,[dword 0x468e5c]
mov dl,0x1
mov eax,[0x4123f4]
call dword 0xb548
call dword 0x3464
mov esp,ebp
pop ebp
ret
mov eax,eax
push ebp
mov ebp,esp
add esp,byte -0x20
push ebx
push esi
mov [ebp-0x1a],cx
mov esi,edx
mov [ebp-0x4],eax
lea ebx,[ebp-0x20]
mov eax,[ebp-0x4]
mov [ebp-0xc],eax
mov eax,[eax]
mov eax,[eax+0x18]
mov [ebp-0x10],eax
mov eax,[ebp-0x4]
call dword 0x2ac8
mov [ebx],eax
jmp short 0x16617
mov eax,[ebx]
call dword 0x2b7c
mov [ebx],eax
cmp dword [ebx],byte +0x0
jz 0x16626
mov eax,[ebx]
cmp eax,[dword 0x413014]
jnz 0x1660e
cmp dword [ebx],byte +0x0
jnz 0x16632
push ebp
call dword 0x16594
pop ecx
mov [ebp-0x14],ebx
mov eax,[ebx]
mov eax,[eax+0x18]
mov [ebp-0x18],eax
mov eax,[ebp-0x10]
cmp eax,[ebp-0x18]
jnz 0x1664c
push ebp
call dword 0x16594
pop ecx
mov eax,esi
cdq
push edx
push eax
movzx edx,byte [ebp-0x1a]
mov eax,[ebp-0x4]
mov ecx,[eax]
call dword [ecx+0x18]
pop esi
pop ebx
mov esp,ebp
pop ebp
ret
nop
push ebp
mov ebp,esp
add esp,byte -0x8
push ebx
push esi
mov ebx,edx
mov esi,eax
cmp dword [ebp+0xc],byte -0x1
jnz 0x16681
cmp dword [ebp+0x8],0x80000000
jc 0x16696
jmp short 0x16683
jl 0x16696
cmp dword [ebp+0xc],byte +0x0
jnz 0x16694
cmp dword [ebp+0x8],0x7fffffff
jna 0x166ad
jmp short 0x16696
jng 0x166ad
mov ecx,[dword 0x468e20]
mov dl,0x1
mov eax,[0x407b8c]
call dword 0xb50c
call dword 0x3464
mov eax,[ebp+0x8]
mov edx,eax
movzx ecx,bl
mov eax,esi
mov ebx,[eax]
call dword [ebx+0x14]
cdq
mov [ebp-0x8],eax
mov [ebp-0x4],edx
mov eax,[ebp-0x8]
mov edx,[ebp-0x4]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
ret 0x8
lea eax,[eax+0x0]
push ebx
push esi
push edi
mov ebx,ecx
mov edi,edx
mov esi,eax
test ebx,ebx
jz 0x16707
mov edx,edi
mov ecx,ebx
mov eax,esi
mov esi,[eax]
call dword [esi+0xc]
cmp ebx,eax
jz 0x16707
mov ecx,[dword 0x468e10]
mov dl,0x1
mov eax,[0x4125bc]
call dword 0xb50c
call dword 0x3464
pop edi
pop esi
pop ebx
ret
nop
push ebx
push esi
push edi
mov ebx,ecx
mov edi,edx
mov esi,eax
test ebx,ebx
jz 0x1673f
mov edx,edi
mov ecx,ebx
mov eax,esi
mov esi,[eax]
call dword [esi+0x10]
cmp ebx,eax
jz 0x1673f
mov ecx,[dword 0x468cb8]
mov dl,0x1
mov eax,[0x412614]
call dword 0xb50c
call dword 0x3464
pop edi
pop esi
pop ebx
ret
nop
push ebp
mov ebp,esp
add esp,byte -0x18
push ebx
push esi
push edi
mov edi,edx
mov [ebp-0x4],eax
cmp dword [ebp+0xc],byte +0x0
jnz 0x16775
cmp dword [ebp+0x8],byte +0x0
jnz 0x16775
push byte +0x0
push byte +0x0
mov eax,edi
call dword 0x164c8
mov eax,edi
mov edx,[eax]
call dword [edx]
mov [ebp+0x8],eax
mov [ebp+0xc],edx
mov eax,[ebp+0x8]
mov [ebp-0x10],eax
mov eax,[ebp+0xc]
mov [ebp-0xc],eax
cmp dword [ebp+0xc],byte +0x0
jnz 0x16792
cmp dword [ebp+0x8],0xf000
jna 0x1679d
jmp short 0x16794
jng 0x1679d
mov dword [ebp-0x14],0xf000
jmp short 0x167a3
mov eax,[ebp+0x8]
mov [ebp-0x14],eax
mov eax,[ebp-0x14]
call dword 0x1e60
mov [ebp-0x18],eax
xor eax,eax
push ebp
push dword 0x417820
push dword [fs:eax]
mov [fs:eax],esp
jmp short 0x167fb
mov eax,[ebp-0x14]
cdq
cmp edx,[ebp+0xc]
jnz 0x167ce
cmp eax,[ebp+0x8]
jnc 0x167d5
jmp short 0x167d0
jnl 0x167d5
mov ebx,[ebp-0x14]
jmp short 0x167d8
mov ebx,[ebp+0x8]
mov esi,[ebp-0x18]
mov edx,esi
mov ecx,ebx
mov eax,edi
call dword 0x166d4
mov edx,esi
mov ecx,ebx
mov eax,[ebp-0x4]
call dword 0x1670c
mov eax,ebx
cdq
sub [ebp+0x8],eax
sbb [ebp+0xc],edx
cmp dword [ebp+0xc],byte +0x0
jnz 0x167be
cmp dword [ebp+0x8],byte +0x0
jnz 0x167be
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x417827
mov edx,[ebp-0x14]
mov eax,[ebp-0x18]
call dword 0x1e7c
ret
jmp dword 0x3384
jmp short 0x16814
mov eax,[ebp-0x10]
mov edx,[ebp-0xc]
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret 0x8
mov eax,eax
push ebp
mov ebp,esp
add esp,byte -0x8
push ebx
mov ebx,edx
push dword 0x1000
mov ecx,eax
mov dl,0x1
mov eax,[0x413550]
call dword 0x16fbc
mov [ebp-0x8],eax
xor eax,eax
push ebp
push dword 0x417888
push dword [fs:eax]
mov [fs:eax],esp
mov edx,ebx
mov eax,[ebp-0x8]
call dword 0x19204
mov [ebp-0x4],eax
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x41788f
mov eax,[ebp-0x8]
call dword 0x2bf0
ret
jmp dword 0x3384
jmp short 0x1687f
mov eax,[ebp-0x4]
pop ebx
pop ecx
pop ecx
pop ebp
ret
nop
push ebx
push esi
push edi
test dl,dl
jz 0x168a7
add esp,byte -0x10
call dword 0x2f14
mov esi,ecx
mov ebx,edx
mov edi,eax
xor edx,edx
mov eax,edi
call dword 0x2bc0
mov [edi+0x4],esi
mov eax,edi
test bl,bl
jz 0x168ce
call dword 0x2f6c
pop dword [dword fs:0x0]
add esp,byte +0xc
mov eax,edi
pop edi
pop esi
pop ebx
ret
mov eax,[eax+0x4]
call dword 0x8000
cmp eax,byte -0x1
jnz 0x168e3
xor eax,eax
ret
mov eax,[eax+0x4]
call dword 0x802c
cmp eax,byte -0x1
jnz 0x168f3
xor eax,eax
ret
push ebp
mov ebp,esp
add esp,byte -0x8
push dword [ebp+0xc]
push dword [ebp+0x8]
and edx,byte +0x7f
mov eax,[eax+0x4]
call dword 0x8058
mov [ebp-0x8],eax
mov [ebp-0x4],edx
mov eax,[ebp-0x8]
mov edx,[ebp-0x4]
pop ecx
pop ecx
pop ebp
ret 0x8
lea eax,[eax+0x0]
push ebx
mov ebx,edx
mov ecx,eax
mov eax,ebx
cdq
push edx
push eax
mov eax,ecx
mov edx,[eax]
call dword [edx+0x8]
pop ebx
ret
nop
push ebp
mov ebp,esp
push ebx
mov ebx,eax
push dword [ebp+0xc]
push dword [ebp+0x8]
xor edx,edx
mov eax,ebx
mov ecx,[eax]
call dword [ecx+0x18]
mov eax,[ebx+0x4]
push eax
call dword 0x5bd8
call dword 0xcbfc
pop ebx
pop ebp
ret 0x8
push ebp
mov ebp,esp
push ebx
push esi
test dl,dl
jz 0x1696d
add esp,byte -0x10
call dword 0x2f14
mov ebx,edx
mov esi,eax
movzx eax,word [ebp+0x8]
push eax
push byte +0x0
xor edx,edx
mov eax,esi
call dword 0x169a0
mov eax,esi
test bl,bl
jz 0x16996
call dword 0x2f6c
pop dword [dword fs:0x0]
add esp,byte +0xc
mov eax,esi
pop esi
pop ebx
pop ebp
ret 0x4
mov eax,eax
push ebp
mov ebp,esp
add esp,byte -0x24
push ebx
push esi
push edi
xor ebx,ebx
mov [ebp-0x20],ebx
mov [ebp-0x24],ebx
mov [ebp-0x18],ebx
mov [ebp-0x1c],ebx
test dl,dl
jz 0x169c3
add esp,byte -0x10
call dword 0x2f14
mov esi,ecx
mov [ebp-0x1],dl
mov ebx,eax
mov edi,[ebp+0xc]
xor eax,eax
push ebp
push dword 0x417ae8
push dword [fs:eax]
mov [fs:eax],esp
cmp di,0xffff
jnz 0x16a60
push byte +0x0
push dword 0x80
push byte +0x2
push byte +0x0
push byte +0x0
push dword 0xc0000000
mov eax,esi
call dword 0x3eac
push eax
call dword 0x5a90
mov ecx,eax
xor edx,edx
mov eax,ebx
call dword 0x16898
cmp dword [ebx+0x4],byte +0x0
jnl dword 0x16ac3
lea edx,[ebp-0x18]
mov eax,esi
call dword 0x8300
mov eax,[ebp-0x18]
mov [ebp-0x14],eax
mov byte [ebp-0x10],0xb
call dword 0x5b28
lea edx,[ebp-0x1c]
call dword 0xac3c
mov eax,[ebp-0x1c]
mov [ebp-0xc],eax
mov byte [ebp-0x8],0xb
lea eax,[ebp-0x14]
push eax
push byte +0x1
mov ecx,[dword 0x468ea8]
mov dl,0x1
mov eax,[0x4124b0]
call dword 0xb548
call dword 0x3464
jmp short 0x16ac3
movzx edx,di
mov eax,esi
call dword 0x7fa8
mov ecx,eax
xor edx,edx
mov eax,ebx
call dword 0x16898
cmp dword [ebx+0x4],byte +0x0
jnl 0x16ac3
lea edx,[ebp-0x20]
mov eax,esi
call dword 0x8300
mov eax,[ebp-0x20]
mov [ebp-0x14],eax
mov byte [ebp-0x10],0xb
call dword 0x5b28
lea edx,[ebp-0x24]
call dword 0xac3c
mov eax,[ebp-0x24]
mov [ebp-0xc],eax
mov byte [ebp-0x8],0xb
lea eax,[ebp-0x14]
push eax
push byte +0x1
mov ecx,[dword 0x468ab0]
mov dl,0x1
mov eax,[0x41250c]
call dword 0xb548
call dword 0x3464
lea eax,[ebx+0x8]
mov edx,esi
call dword 0x3a70
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x417aef
lea eax,[ebp-0x24]
mov edx,0x4
call dword 0x3a40
ret
jmp dword 0x3384
jmp short 0x16ada
mov eax,ebx
cmp byte [ebp-0x1],0x0
jz 0x16b06
call dword 0x2f6c
pop dword [dword fs:0x0]
add esp,byte +0xc
mov eax,ebx
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret 0x8
lea eax,[eax+0x0]
push ebx
push esi
call dword 0x2fbc
mov ebx,edx
mov esi,eax
mov eax,[esi+0x4]
test eax,eax
jl 0x16b2c
push eax
call dword 0x5a70
mov edx,ebx
and dl,0xfc
mov eax,esi
call dword 0x2be0
test bl,bl
jng 0x16b43
mov eax,esi
call dword 0x2f64
pop esi
pop ebx
ret
mov eax,eax
mov [eax+0x4],edx
mov [eax+0x8],ecx
ret
nop
push ebx
push esi
push edi
mov ebx,eax
mov edi,[ebx+0xc]
test edi,edi
jl 0x16b80
test ecx,ecx
jl 0x16b80
mov esi,[ebx+0x8]
sub esi,edi
test esi,esi
jng 0x16b80
cmp ecx,esi
jnl 0x16b6f
mov esi,ecx
mov eax,[ebx+0x4]
add eax,edi
mov ecx,esi
call dword 0x2050
add [ebx+0xc],esi
jmp short 0x16b82
xor esi,esi
mov eax,esi
pop edi
pop esi
pop ebx
ret
sub cx,byte +0x1
jc 0x16b97
jz 0x16b9c
dec cx
jz 0x16ba1
jmp short 0x16ba7
mov [eax+0xc],edx
jmp short 0x16ba7
add [eax+0xc],edx
jmp short 0x16ba7
add edx,[eax+0x8]
mov [eax+0xc],edx
mov eax,[eax+0xc]
ret
nop
push ebx
mov ecx,[eax+0x8]
test ecx,ecx
jz 0x16bc0
mov ebx,[eax+0x4]
xchg ebx,edx
mov eax,ebx
call dword 0x1670c
pop ebx
ret
mov eax,eax
push ebp
mov ebp,esp
push ecx
push ebx
mov ebx,eax
push dword 0xffff
mov ecx,edx
mov eax,[0x4130fc]
mov dl,0x1
call dword 0x1695c
mov [ebp-0x4],eax
xor eax,eax
push ebp
push dword 0x417c0f
push dword [fs:eax]
mov [fs:eax],esp
mov edx,[ebp-0x4]
mov eax,ebx
call dword 0x16bac
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x417c16
mov eax,[ebp-0x4]
call dword 0x2bf0
ret
jmp dword 0x3384
jmp short 0x16c06
pop ebx
pop ecx
pop ebp
ret
mov eax,eax
push ebx
push esi
call dword 0x2fbc
mov ebx,edx
mov esi,eax
mov eax,esi
call dword 0x16c48
mov edx,ebx
and dl,0xfc
mov eax,esi
call dword 0x2be0
test bl,bl
jng 0x16c45
mov eax,esi
call dword 0x2f64
pop esi
pop ebx
ret
push ebx
mov ebx,eax
xor edx,edx
mov eax,ebx
call dword 0x16cec
xor eax,eax
mov [ebx+0x8],eax
xor eax,eax
mov [ebx+0xc],eax
pop ebx
ret
push ebx
push esi
push edi
mov edi,edx
mov esi,eax
push byte +0x0
push byte +0x0
mov eax,edi
call dword 0x164c8
mov eax,edi
mov edx,[eax]
call dword [edx]
mov ebx,eax
mov edx,ebx
mov eax,esi
mov ecx,[eax]
call dword [ecx+0x4]
test ebx,ebx
jz 0x16c93
mov edx,[esi+0x4]
mov ecx,ebx
mov eax,edi
call dword 0x166d4
pop edi
pop esi
pop ebx
ret
nop
push ebp
mov ebp,esp
push ecx
push ebx
mov ebx,eax
push byte +0x20
mov ecx,edx
mov eax,[0x4130fc]
mov dl,0x1
call dword 0x1695c
mov [ebp-0x4],eax
xor eax,eax
push ebp
push dword 0x417ce0
push dword [fs:eax]
mov [fs:eax],esp
mov edx,[ebp-0x4]
mov eax,ebx
call dword 0x16c60
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x417ce7
mov eax,[ebp-0x4]
call dword 0x2bf0
ret
jmp dword 0x3384
jmp short 0x16cd7
pop ebx
pop ecx
pop ebp
ret
nop
push ebx
push ecx
mov [esp],edx
mov ebx,eax
mov edx,esp
mov eax,ebx
mov ecx,[eax]
call dword [ecx+0x1c]
mov edx,eax
mov ecx,[ebx+0x8]
mov eax,ebx
call dword 0x16b48
mov eax,[esp]
mov [ebx+0x10],eax
pop edx
pop ebx
ret
lea eax,[eax+0x0]
push ebx
push esi
push edi
mov esi,edx
mov ebx,eax
mov edi,[ebx+0xc]
mov edx,esi
mov eax,ebx
call dword 0x16cec
mov [ebx+0x8],esi
cmp esi,edi
jnl 0x16d3b
mov cx,0x2
xor edx,edx
mov eax,ebx
mov ebx,[eax]
call dword [ebx+0x14]
pop edi
pop esi
pop ebx
ret
nop
push ebx
push ecx
mov ebx,edx
cmp dword [ebx],byte +0x0
jng 0x16d60
mov edx,[ebx]
cmp edx,[eax+0x8]
jz 0x16d60
mov edx,[ebx]
add edx,0x1fff
and edx,0xffffe000
mov [ebx],edx
mov edx,[eax+0x4]
mov [esp],edx
mov ecx,[ebx]
mov edx,[eax+0x10]
cmp ecx,edx
jz 0x16db9
cmp dword [ebx],byte +0x0
jnz 0x16d83
mov eax,[eax+0x4]
call dword 0x1e7c
xor eax,eax
mov [esp],eax
jmp short 0x16db9
test edx,edx
jnz 0x16d93
mov eax,[ebx]
call dword 0x1e60
mov [esp],eax
jmp short 0x16d9c
mov edx,[ebx]
mov eax,esp
call dword 0x1e94
cmp dword [esp],byte +0x0
jnz 0x16db9
mov ecx,[dword 0x468e48]
mov dl,0x1
mov eax,[0x4123f4]
call dword 0xb50c
call dword 0x3464
mov eax,[esp]
pop edx
pop ebx
ret
nop
push ebx
push esi
push edi
push ebp
mov esi,ecx
mov ebp,edx
mov ebx,eax
mov eax,[ebx+0xc]
test eax,eax
jl 0x16e09
test esi,esi
jl 0x16e09
mov edi,eax
add edi,esi
test edi,edi
jng 0x16e09
cmp edi,[ebx+0x8]
jng 0x16df3
cmp edi,[ebx+0x10]
jng 0x16df0
mov edx,edi
mov eax,ebx
call dword 0x16cec
mov [ebx+0x8],edi
mov edx,[ebx+0x4]
add edx,[ebx+0xc]
mov eax,ebp
mov ecx,esi
call dword 0x2050
mov [ebx+0xc],edi
mov eax,esi
jmp short 0x16e0b
xor eax,eax
pop ebp
pop edi
pop esi
pop ebx
ret
push ebp
mov ebp,esp
push ebx
push esi
push edi
test dl,dl
jz 0x16e22
add esp,byte -0x10
call dword 0x2f14
mov esi,ecx
mov ebx,edx
mov edi,eax
xor edx,edx
mov eax,edi
call dword 0x2bc0
mov eax,[ebp+0x8]
push eax
push byte +0x0
mov eax,[ebp+0xc]
call dword 0x3eac
mov ecx,eax
mov edx,esi
mov eax,edi
call dword 0x16f08
mov eax,edi
test bl,bl
jz 0x16e5f
call dword 0x2f6c
pop dword [dword fs:0x0]
add esp,byte +0xc
mov eax,edi
pop edi
pop esi
pop ebx
pop ebp
ret 0x8
push ebp
mov ebp,esp
add esp,byte -0x10
xor eax,eax
mov [ebp-0x10],eax
mov [ebp-0x4],eax
xor eax,eax
push ebp
push dword 0x417efa
push dword [fs:eax]
mov [fs:eax],esp
mov eax,[ebp+0x8]
cmp byte [eax+0x8],0x0
jz 0x16e9d
lea edx,[ebp-0x4]
mov eax,[ebp+0x8]
mov eax,[eax-0x4]
call dword 0x7bfc
jmp short 0x16eab
lea eax,[ebp-0x4]
mov edx,[ebp+0x8]
mov edx,[edx-0x4]
call dword 0x3c14
mov eax,[ebp-0x4]
mov [ebp-0xc],eax
mov byte [ebp-0x8],0xb
lea eax,[ebp-0xc]
push eax
push byte +0x0
lea edx,[ebp-0x10]
mov eax,[0x468c7c]
call dword 0x5750
mov ecx,[ebp-0x10]
mov dl,0x1
mov eax,[0x4126c8]
call dword 0xb48c
call dword 0x3464
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x417f01
lea eax,[ebp-0x10]
call dword 0x3a1c
lea eax,[ebp-0x4]
call dword 0x3a1c
ret
jmp dword 0x3384
jmp short 0x16ee9
mov esp,ebp
pop ebp
ret
lea eax,[eax+0x0]
push ebp
mov ebp,esp
push ecx
push ebx
push esi
push edi
mov [ebp-0x4],ecx
mov esi,edx
mov ebx,eax
mov eax,[ebp+0xc]
push eax
mov eax,[ebp-0x4]
push eax
push esi
call dword 0x5ac0
mov edi,eax
mov [ebx+0x10],edi
test edi,edi
jnz 0x16f34
push ebp
call dword 0x16e68
pop ecx
mov eax,[ebx+0x10]
push eax
push esi
call dword 0x5bb0
mov edi,eax
mov [ebx+0x14],edi
test edi,edi
jnz 0x16f4e
push ebp
call dword 0x16e68
pop ecx
mov eax,[ebx+0x10]
push eax
push esi
call dword 0x5c00
push eax
mov eax,[ebx+0x14]
push eax
call dword 0x5bb8
mov edx,eax
mov eax,ebx
pop ecx
call dword 0x16b48
pop edi
pop esi
pop ebx
pop ecx
pop ebp
ret 0x8
push ebx
push esi
call dword 0x2fbc
mov ebx,edx
mov esi,eax
mov eax,[esi+0x14]
push eax
call dword 0x5ae0
mov edx,ebx
and dl,0xfc
mov eax,esi
call dword 0x2be0
test bl,bl
jng 0x16f9f
mov eax,esi
call dword 0x2f64
pop esi
pop ebx
ret
mov eax,eax
mov ecx,[dword 0x468c9c]
mov dl,0x1
mov eax,[0x4123f4]
call dword 0xb50c
call dword 0x3464
ret
push ebp
mov ebp,esp
push ebx
push esi
push edi
test dl,dl
jz 0x16fce
add esp,byte -0x10
call dword 0x2f14
mov ebx,edx
mov edi,eax
mov esi,[ebp+0x8]
mov [edi+0x4],ecx
mov eax,esi
call dword 0x1e60
mov [edi+0x8],eax
mov [edi+0xc],esi
mov eax,edi
test bl,bl
jz 0x16ffa
call dword 0x2f6c
pop dword [dword fs:0x0]
add esp,byte +0xc
mov eax,edi
pop edi
pop esi
pop ebx
pop ebp
ret 0x4
nop
push ebx
push esi
call dword 0x2fbc
mov ebx,edx
mov esi,eax
mov eax,[esi+0x8]
test eax,eax
jz 0x1701e
mov edx,[esi+0xc]
call dword 0x1e7c
test bl,bl
jng 0x17029
mov eax,esi
call dword 0x2f64
pop esi
pop ebx
ret
mov [eax+0x18],edx
ret
jl 0x16fb2
inc ecx
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax+0x4180],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [edx+0x18004180],bl
add [eax],al
add [eax+0x38004010],dh
ds inc eax
add [esi+edi+0x40],al
add [eax+0x3e],cl
inc eax
add [esi+edi+0x40],cl
add [eax+0x3e],al
inc eax
add [eax-0x5bffbfc5],cl
cmp eax,[eax+0x0]
loopne 0x170b5
inc eax
add [eax+0xe004181],ch
add [eax],al
add [eax],al
add [edx],al
add [eax],al
add [eax+edx+0x100040],dl
add [eax],al
xchg eax,esp
adc [eax+0x0],al
adc al,0x0
add [eax],al
or dl,[eax+edx*2+0x72]
outsd
jo 0x170e7
imul edi,[eax+0x75],dword 0x408d70
hlt
add byte [ecx+0x0],0x0
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add al,bh
add byte [ecx+0x0],0x18
add [eax],al
add [eax],dh
add byte [ecx+0x0],0x38
ds inc eax
add [esi+edi+0x40],al
add [eax+0x3e],cl
inc eax
add [esi+edi+0x40],cl
add [eax+0x3e],al
inc eax
add [eax-0x5bffbfc5],cl
cmp eax,[eax+0x0]
loopne 0x1712d
inc eax
add [eax+0xe004181],bh
push esp
push eax
jc 0x1716c
jo 0x17148
outsb
jz 0x17168
inc esi
imul edi,[eax+0x75],dword 0x8b559070
in al,dx
push ebx
push esi
test dl,dl
jz 0x17119
add esp,byte -0x10
call dword 0x2f14
mov ebx,edx
mov esi,eax
mov [esi+0x4],ecx
mov eax,[ebp+0x14]
mov [esi+0x8],eax
mov eax,[ebp+0x10]
mov [esi+0xc],eax
lea eax,[esi+0x10]
mov edx,[ebp+0xc]
call dword 0x3a70
lea eax,[esi+0x14]
mov edx,[ebp+0x8]
call dword 0x3a70
mov eax,esi
test bl,bl
jz 0x17157
call dword 0x2f6c
pop dword [dword fs:0x0]
add esp,byte +0xc
mov eax,esi
pop esi
pop ebx
pop ebp
ret 0x10
nop
push ebx
push esi
push edi
push ebp
mov edi,eax
xor eax,eax
mov esi,[edi+0x14]
mov ebx,esi
jmp short 0x17170
inc ebx
movzx edx,byte [ebx]
test dl,dl
jz 0x1717c
sub dl,0x2e
jnz 0x1716f
cmp byte [ebx],0x0
jz 0x171a3
mov ebp,ebx
sub ebp,esi
mov ecx,ebp
lea eax,[edi+0x10]
mov edx,esi
call dword 0x3b0c
mov ecx,ebp
inc ecx
lea eax,[edi+0x14]
mov edx,0x1
call dword 0x3f54
mov al,0x1
pop ebp
pop edi
pop esi
pop ebx
ret
mov ecx,edx
mov edx,[eax+0x4]
mov eax,[eax+0xc]
xchg eax,edx
call dword 0x10b78
ret
nop
push ebp
mov ebp,esp
push byte +0x0
push ebx
push esi
mov esi,edx
mov ebx,eax
xor eax,eax
push ebp
push dword 0x41822f
push dword [fs:eax]
mov [fs:eax],esp
lea eax,[ebp-0x4]
call dword 0x5270
test esi,esi
jz 0x1720b
mov eax,[ebx+0xc]
mov eax,[eax]
mov eax,[eax]
call dword 0x10984
add eax,byte +0x5
push eax
lea eax,[ebp-0x4]
call dword 0x5270
mov ecx,eax
mov eax,esi
pop edx
call dword 0xd11c
test al,al
jnz 0x1720b
lea eax,[ebp-0x4]
call dword 0x5270
mov ecx,[ebp-0x4]
mov edx,[ebx+0xc]
mov eax,[ebx+0x4]
call dword 0x11170
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x418236
lea eax,[ebp-0x4]
call dword 0x5270
ret
jmp dword 0x3384
jmp short 0x17226
pop esi
pop ebx
pop ecx
pop ebp
ret
nop
push ebp
mov ebp,esp
add esp,byte -0xc
push ebx
push esi
push edi
xor ecx,ecx
mov [ebp-0x4],ecx
mov ebx,edx
mov esi,eax
xor eax,eax
push ebp
push dword 0x4182e5
push dword [fs:eax]
mov [fs:eax],esp
xor eax,eax
mov [ebp-0x8],eax
test ebx,ebx
jz 0x172cf
mov edi,esi
jmp short 0x172c7
mov [ebp-0xc],ebx
jmp short 0x1726f
inc ebx
movzx eax,byte [ebx]
test al,al
jz 0x1727c
add al,0xd3
sub al,0x2
jnc 0x1726e
mov ecx,ebx
sub ecx,[ebp-0xc]
lea eax,[ebp-0x4]
mov edx,[ebp-0xc]
call dword 0x3b0c
mov edx,[ebp-0x4]
mov eax,edi
call dword 0x1aabc
mov esi,eax
test esi,esi
jnz 0x172af
mov edx,0x418300
mov eax,[ebp-0x4]
call dword 0x7820
test al,al
jz 0x172af
mov esi,edi
test esi,esi
jz 0x172cf
cmp byte [ebx],0x2e
jnz 0x172b9
inc ebx
cmp byte [ebx],0x2d
jnz 0x172bf
inc ebx
cmp byte [ebx],0x3e
jnz 0x172c5
inc ebx
mov edi,esi
cmp byte [ebx],0x0
jnz 0x17269
mov [ebp-0x8],edi
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x4182ec
lea eax,[ebp-0x4]
call dword 0x3a1c
ret
jmp dword 0x3384
jmp short 0x172dc
mov eax,[ebp-0x8]
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret
add [eax],al
db 0xff
db 0xff
db 0xff
inc dword [dword 0x4f000000]
ja 0x17371
gs jc 0x17306
add [eax],al
push ebp
mov ebp,esp
push ebx
mov ebx,eax
mov eax,[ebp+0x8]
mov eax,[eax-0x4]
mov edx,ebx
call dword 0x13ed8
test eax,eax
jnl 0x1733d
mov eax,[ebp+0x8]
mov eax,[eax-0x8]
mov edx,ebx
call dword 0x13ed8
test eax,eax
jl 0x1733d
mov eax,[ebp+0x8]
mov eax,[eax-0x4]
mov edx,ebx
call dword 0x13d24
pop ebx
pop ebp
ret
push ebp
mov ebp,esp
push ebx
mov ebx,eax
mov eax,[ebp+0x8]
mov eax,[eax-0x4]
mov edx,ebx
call dword 0x13ed8
cmp eax,byte -0x1
jz 0x17364
mov edx,[ebp+0x8]
mov edx,[edx-0x4]
xchg eax,edx
call dword 0x13d70
mov eax,[ebp+0x8]
mov eax,[eax-0x8]
mov edx,ebx
call dword 0x13ed8
test eax,eax
jnl 0x17382
mov eax,[ebp+0x8]
mov eax,[eax-0x8]
mov edx,ebx
call dword 0x13d24
pop ebx
pop ebp
ret
lea eax,[eax+0x0]
push ebp
mov ebp,esp
add esp,byte -0x10
push ebx
push esi
push edi
mov eax,[0x46d9ac]
mov edx,[eax]
call dword [edx+0x14]
xor eax,eax
push ebp
push dword 0x418544
push dword [fs:eax]
mov [fs:eax],esp
mov eax,[0x46d9c8]
call dword 0x14244
mov edi,eax
xor eax,eax
push ebp
push dword 0x418525
push dword [fs:eax]
mov [fs:eax],esp
cmp dword [edi+0x8],byte +0x0
jng dword 0x1750d
mov dl,0x1
mov eax,[0x41294c]
call dword 0x2bc0
mov [ebp-0x4],eax
xor eax,eax
push ebp
push dword 0x418506
push dword [fs:eax]
mov [fs:eax],esp
mov dl,0x1
mov eax,[0x41294c]
call dword 0x2bc0
mov [ebp-0x8],eax
xor eax,eax
push ebp
push dword 0x4184b4
push dword [fs:eax]
mov [fs:eax],esp
xor esi,esi
jmp dword 0x17495
mov edx,esi
mov eax,edi
call dword 0x13e7c
mov ebx,eax
mov eax,[ebx+0x10]
call dword 0x139c8
mov [ebp-0xc],eax
cmp dword [ebp-0xc],byte +0x0
jnz 0x17439
mov edx,[ebx+0xc]
mov eax,[ebx+0x4]
call dword 0x10b04
test eax,eax
jz 0x1748a
cmp dword [ebp-0xc],byte +0x0
jz 0x1746e
mov eax,[ebp-0xc]
test byte [eax+0x1c],0x2
jnz 0x17461
mov edx,[ebx+0x14]
mov eax,[ebp-0xc]
call dword 0x1723c
mov [ebp-0x10],eax
mov edx,[ebp-0x10]
mov eax,ebx
mov ecx,[eax]
call dword [ecx]
jmp short 0x1746e
push ebp
mov eax,[ebx+0x4]
call dword 0x17340
pop ecx
inc esi
jmp short 0x17495
push ebp
mov eax,[ebx+0x4]
call dword 0x17308
pop ecx
mov edx,esi
mov eax,edi
call dword 0x13d70
mov eax,ebx
call dword 0x2bf0
jmp short 0x17495
push ebp
mov eax,[ebx+0x4]
call dword 0x17340
pop ecx
inc esi
cmp esi,[edi+0x8]
jl dword 0x1740e
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x4184bb
mov eax,[ebp-0x8]
call dword 0x2bf0
ret
jmp dword 0x3384
jmp short 0x174ab
mov eax,[ebp-0x4]
mov ebx,[eax+0x8]
dec ebx
test ebx,ebx
jl 0x174f0
inc ebx
xor esi,esi
mov edx,esi
mov eax,[ebp-0x4]
call dword 0x13e7c
mov edi,eax
mov eax,edi
mov edx,[dword 0x41372c]
call dword 0x2d7c
test al,al
jz 0x174ec
and word [edi+0x1c],0xff7f
inc esi
dec ebx
jnz 0x174c9
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x41850d
mov eax,[ebp-0x4]
call dword 0x2bf0
ret
jmp dword 0x3384
jmp short 0x174fd
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x41852c
mov eax,[0x46d9c8]
call dword 0x142a8
ret
jmp dword 0x3384
jmp short 0x1751a
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x41854b
mov eax,[0x46d9ac]
mov edx,[eax]
call dword [edx+0x18]
ret
jmp dword 0x3384
jmp short 0x17539
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret
mov eax,eax
push ebp
mov ebp,esp
add esp,byte -0x8
push ebx
push esi
push edi
mov [ebp-0x8],edx
mov [ebp-0x4],eax
cmp dword [dword 0x46d9c8],byte +0x0
jz dword 0x175f6
mov eax,[0x46d9c8]
call dword 0x14244
mov edi,eax
xor eax,eax
push ebp
push dword 0x4185ef
push dword [fs:eax]
mov [fs:eax],esp
mov ebx,[edi+0x8]
dec ebx
cmp ebx,byte +0x0
jl 0x175d7
mov edx,ebx
mov eax,edi
call dword 0x13e7c
mov esi,eax
cmp dword [ebp-0x4],byte +0x0
jz 0x175ac
mov eax,[esi+0x8]
cmp eax,[ebp-0x4]
jnz 0x175d1
cmp dword [ebp-0x8],byte +0x0
jz 0x175c1
mov edx,[esi+0x10]
mov eax,[ebp-0x8]
call dword 0x7820
test al,al
jz 0x175d1
mov edx,ebx
mov eax,edi
call dword 0x13d70
mov eax,esi
call dword 0x2bf0
dec ebx
cmp ebx,byte -0x1
jnz 0x17593
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x4185f6
mov eax,[0x46d9c8]
call dword 0x142a8
ret
jmp dword 0x3384
jmp short 0x175e4
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
ret
lea eax,[eax+0x0]
push ebp
mov ebp,esp
push ecx
push ebx
push esi
push edi
mov [ebp-0x4],eax
cmp dword [dword 0x46d9c8],byte +0x0
jz 0x1767e
mov eax,[0x46d9c8]
call dword 0x14244
mov edi,eax
xor eax,eax
push ebp
push dword 0x418677
push dword [fs:eax]
mov [fs:eax],esp
mov ebx,[edi+0x8]
dec ebx
cmp ebx,byte +0x0
jl 0x1765f
mov edx,ebx
mov eax,edi
call dword 0x13e7c
mov esi,eax
mov eax,[esi+0x4]
cmp eax,[ebp-0x4]
jnz 0x17659
mov edx,ebx
mov eax,edi
call dword 0x13d70
mov eax,esi
call dword 0x2bf0
dec ebx
cmp ebx,byte -0x1
jnz 0x17636
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x41867e
mov eax,[0x46d9c8]
call dword 0x142a8
ret
jmp dword 0x3384
jmp short 0x1766c
pop edi
pop esi
pop ebx
pop ecx
pop ebp
ret
push ebx
mov ebx,eax
mov ecx,ebx
mov dl,0x1
mov eax,[0x4125bc]
call dword 0xb50c
call dword 0x3464
pop ebx
ret
mov eax,[0x468d1c]
call dword 0x17684
ret
nop
push ebx
add esp,byte -0x8
mov ebx,eax
mov [esp],ebx
mov byte [esp+0x4],0xb
push esp
push byte +0x0
mov ecx,[dword 0x468b40]
mov dl,0x1
mov eax,[0x4125bc]
call dword 0xb548
call dword 0x3464
pop ecx
pop edx
pop ebx
ret
push ebx
call dword 0x10bd4
mov ebx,eax
cmp ebx,byte -0x1
jnz 0x176e6
call dword 0x1769c
mov eax,ebx
pop ebx
ret
mov eax,eax
push ebx
push esi
push edi
call dword 0x2fbc
mov ebx,edx
mov esi,eax
mov edx,[esi+0x10]
sub edx,[esi+0x14]
mov eax,[esi+0x4]
mov cx,0x1
mov edi,[eax]
call dword [edi+0x14]
mov edx,ebx
and dl,0xfc
mov eax,esi
call dword 0x17004
test bl,bl
jng 0x17721
mov eax,esi
call dword 0x2f64
pop edi
pop esi
pop ebx
ret
lea eax,[eax+0x0]
push ebx
push esi
mov ebx,edx
mov esi,eax
mov eax,esi
call dword 0x197f4
cmp bl,al
jz 0x17748
dec dword [esi+0x10]
mov eax,esi
call dword 0x19904
call dword 0x1769c
pop esi
pop ebx
ret
nop
push ebp
mov ebp,esp
push ebx
push esi
mov esi,edx
mov ebx,eax
mov edx,[ebx+0x80]
mov eax,esi
call dword 0x7820
test al,al
jz 0x17780
cmp word [ebp+0x12],byte +0x0
jz 0x17780
mov edx,ebx
mov eax,[ebp+0x14]
call dword [ebp+0x10]
lea eax,[ebx+0x80]
call dword 0x3a1c
pop esi
pop ebx
pop ebp
ret 0x10
mov eax,eax
push ebp
mov ebp,esp
add esp,byte -0xc
push ebx
mov ebx,edx
mov [ebp-0x4],eax
mov eax,[ebp-0x4]
mov edx,[eax+0x80]
mov eax,ebx
call dword 0x7820
test al,al
jz dword 0x17866
cmp word [ebp+0x12],byte +0x0
jz dword 0x17866
mov eax,[ebp-0x4]
call dword 0x197f4
cmp al,0xa
jz 0x177e0
mov eax,[ebp-0x4]
dec dword [eax+0x10]
mov eax,[ebp-0x4]
call dword 0x19904
mov eax,[ebp-0x4]
mov byte [eax+0x88],0x1
call dword 0x1769c
mov dl,0x1
mov eax,[0x413200]
call dword 0x2bc0
mov [ebp-0x8],eax
xor eax,eax
push ebp
push dword 0x418852
push dword [fs:eax]
mov [fs:eax],esp
lea edx,[ebp-0xc]
mov ecx,0x4
mov eax,[ebp-0x4]
call dword 0x17c8c
mov edx,[ebp-0xc]
mov eax,[ebp-0x8]
mov ecx,[eax]
call dword [ecx+0x4]
mov eax,[ebp-0x8]
mov edx,[eax+0x4]
mov ecx,[ebp-0xc]
mov eax,[ebp-0x4]
call dword 0x17c8c
mov eax,[ebp-0x4]
mov byte [eax+0x88],0x1
mov edx,[ebp-0x8]
mov eax,[ebp+0x14]
call dword [ebp+0x10]
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x418859
mov eax,[ebp-0x8]
call dword 0x2bf0
ret
jmp dword 0x3384
jmp short 0x17849
mov eax,[ebp-0x4]
add eax,0x80
call dword 0x3a1c
pop ebx
mov esp,ebp
pop ebp
ret 0x10
lea eax,[eax+0x0]
push ebx
mov ebx,eax
mov eax,ebx
call dword 0x197f4
test al,al
setz al
dec dword [ebx+0x10]
pop ebx
ret
push ebx
push ecx
mov byte [esp],0x0
cmp word [eax+0x62],byte +0x0
jz 0x1789e
push esp
mov ebx,eax
mov ecx,edx
mov edx,eax
mov eax,[ebx+0x64]
call dword [ebx+0x60]
movzx eax,byte [esp]
pop edx
pop ebx
ret
lea eax,[eax+0x0]
push ebp
mov ebp,esp
add esp,0xfffffef4
push ebx
push esi
mov [ebp-0x8],ecx
mov [ebp-0x4],edx
mov ebx,eax
mov esi,[ebp+0x8]
cmp word [ebx+0x42],byte +0x0
jz 0x17909
lea eax,[ebp-0x10c]
mov edx,[ebp-0x8]
mov ecx,0xff
call dword 0x3cb8
lea edx,[ebp-0x10c]
mov eax,[ebp-0x4]
mov eax,[eax]
call dword 0x2e74
mov [esi],eax
mov eax,[ebp-0x4]
mov [esi+0x4],eax
cmp dword [esi],byte +0x0
setz [ebp-0x9]
push esi
lea eax,[ebp-0x9]
push eax
mov ecx,[ebp-0x8]
mov edx,ebx
mov eax,[ebx+0x44]
call dword [ebx+0x40]
jmp short 0x1790d
mov byte [ebp-0x9],0x1
cmp byte [ebp-0x9],0x0
jz 0x17928
mov eax,[ebp-0x4]
mov [esi+0x4],eax
mov ecx,[ebp-0x8]
mov edx,[ebp-0x4]
mov eax,ebx
mov ebx,[eax]
call dword [ebx+0x1c]
mov [esi],eax
pop esi
pop ebx
mov esp,ebp
pop ebp
ret 0x4
push ebx
push esi
push edi
add esp,0xfffffef8
mov esi,ecx
mov edi,edx
mov ebx,eax
lea eax,[esp+0x8]
mov edx,esi
mov ecx,0xff
call dword 0x3cb8
lea edx,[esp+0x8]
mov eax,[edi]
call dword 0x2e74
mov [esp],eax
cmp dword [esp],byte +0x0
setz [esp+0x4]
cmp word [ebx+0x3a],byte +0x0
jz 0x1797d
push esp
lea eax,[esp+0x8]
push eax
mov ecx,esi
mov edx,ebx
mov eax,[ebx+0x3c]
call dword [ebx+0x38]
cmp byte [esp+0x4],0x0
jz 0x17989
call dword 0x1769c
mov eax,[esp]
add esp,0x108
pop edi
pop esi
pop ebx
ret
mov eax,eax
push ebp
mov ebp,esp
push ebx
push esi
push edi
mov edi,eax
mov eax,[0x46d9c8]
call dword 0x14244
mov esi,eax
xor edx,edx
push ebp
push dword 0x418a08
push dword [fs:edx]
mov [fs:edx],esp
mov ebx,[esi+0x8]
dec ebx
cmp ebx,byte +0x0
jl 0x179f0
mov edx,ebx
mov eax,esi
call dword 0x13e7c
mov edx,[eax+0x4]
cmp edx,[edi+0x4]
jnz 0x179ea
mov edx,[eax+0xc]
cmp edx,[edi+0xc]
jnz 0x179ea
call dword 0x2bf0
mov edx,ebx
mov eax,esi
call dword 0x13d70
dec ebx
cmp ebx,byte -0x1
jnz 0x179c3
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x418a0f
mov eax,[0x46d9c8]
call dword 0x142a8
ret
jmp dword 0x3384
jmp short 0x179fd
pop edi
pop esi
pop ebx
pop ebp
ret
push ebp
mov ebp,esp
add esp,byte -0x10
push ebx
push esi
push edi
xor edx,edx
mov [ebp-0x4],edx
mov [ebp-0x8],eax
xor eax,eax
push ebp
push dword 0x418b4a
push dword [fs:eax]
mov [fs:eax],esp
mov eax,[ebp-0x8]
mov eax,[eax+0x30]
test eax,eax
jz dword 0x17b34
xor edx,edx
push ebp
push dword 0x418b2d
push dword [fs:edx]
mov [fs:edx],esp
mov eax,[eax+0x8]
dec eax
test eax,eax
jl dword 0x17b17
inc eax
mov [ebp-0x10],eax
xor esi,esi
mov eax,[ebp-0x8]
mov eax,[eax+0x30]
mov edx,esi
call dword 0x13e7c
mov ebx,eax
lea eax,[ebp-0x4]
mov edx,[ebx+0x14]
call dword 0x3ab4
lea edx,[ebp-0x4]
mov eax,[ebp-0x8]
mov ecx,[eax]
call dword [ecx+0x24]
mov eax,[ebx+0x8]
mov edx,[ebp-0x4]
call dword 0x1723c
mov [ebp-0xc],eax
cmp dword [ebp-0xc],byte +0x0
jnz 0x17ab7
mov eax,[ebp-0x8]
cmp word [eax+0x7a],byte +0x0
jz 0x17ab7
lea eax,[ebp-0xc]
push eax
mov edi,[ebp-0x8]
mov ecx,[ebp-0x4]
mov edx,[ebp-0x8]
mov eax,[edi+0x7c]
call dword [edi+0x78]
mov eax,[ebp-0x8]
mov eax,[eax+0x30]
mov edx,esi
call dword 0x13e7c
call dword 0x17998
cmp dword [ebp-0xc],byte +0x0
jnz 0x17b04
mov eax,ebx
call dword 0x17160
test al,al
jz 0x17b04
mov eax,[ebp-0x8]
mov eax,[eax+0x30]
mov edx,esi
call dword 0x13e7c
mov edx,eax
mov eax,[0x46d9c8]
call dword 0x141bc
mov eax,[ebp-0x8]
mov eax,[eax+0x30]
xor ecx,ecx
mov edx,esi
call dword 0x13fc8
jmp short 0x17b0d
mov edx,[ebp-0xc]
mov eax,ebx
mov ecx,[eax]
call dword [ecx]
inc esi
dec dword [ebp-0x10]
jnz dword 0x17a61
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x418b34
mov eax,[ebp-0x8]
call dword 0x17b7c
ret
jmp dword 0x3384
jmp short 0x17b24
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x418b51
lea eax,[ebp-0x4]
call dword 0x3a1c
ret
jmp dword 0x3384
jmp short 0x17b41
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret
push ebx
mov ebx,eax
mov eax,ebx
call dword 0x17c50
cdq
push edx
push eax
mov eax,[ebx+0x4]
call dword 0x164c8
xor eax,eax
mov [ebx+0x10],eax
xor eax,eax
mov [ebx+0x14],eax
pop ebx
ret
lea eax,[eax+0x0]
push ebx
push esi
push edi
mov ebx,eax
mov eax,[ebx+0x30]
test eax,eax
jz 0x17bb3
mov esi,[eax+0x8]
dec esi
test esi,esi
jl 0x17ba6
inc esi
xor edi,edi
mov edx,edi
mov eax,[ebx+0x30]
call dword 0x13e7c
call dword 0x2bf0
inc edi
dec esi
jnz 0x17b93
mov eax,[ebx+0x30]
call dword 0x2bf0
xor eax,eax
mov [ebx+0x30],eax
pop edi
pop esi
pop ebx
ret
nop
push ebx
push esi
push edi
push ebp
add esp,byte -0xc
mov [esp+0x4],ecx
mov [esp],eax
mov eax,edx
call dword 0x2ac8
mov ebp,eax
jmp short 0x17c18
mov eax,ebp
call dword 0x13510
mov esi,eax
test esi,esi
jz 0x17c0f
movsx ebx,word [esi]
dec ebx
test ebx,ebx
jl 0x17c0f
inc ebx
mov dword [esp+0x8],0x0
mov eax,[esp+0x8]
mov eax,[esi+eax*4+0x2]
mov edi,[eax]
mov edx,[esp+0x4]
mov eax,edi
call dword 0x2ae4
test al,al
jnz 0x17c45
inc dword [esp+0x8]
dec ebx
jnz 0x17bef
mov eax,ebp
call dword 0x2b7c
mov ebp,eax
cmp ebp,[dword 0x412a5c]
jnz 0x17bd1
mov eax,[esp]
mov eax,[eax+0x84]
test eax,eax
jz 0x17c3a
mov edx,[esp+0x4]
call dword 0x13488
mov edi,eax
jmp short 0x17c45
mov eax,[esp+0x4]
call dword 0x13588
mov edi,eax
mov eax,edi
add esp,byte +0xc
pop ebp
pop edi
pop esi
pop ebx
ret
nop
push ebx
mov ebx,eax
mov eax,[ebx+0x4]
call dword 0x164a8
mov edx,[ebx+0x14]
sub edx,[ebx+0x10]
sub eax,edx
pop ebx
ret
lea eax,[eax+0x0]
push ebx
mov ebx,eax
mov eax,ebx
call dword 0x197f4
dec dword [ebx+0x10]
pop ebx
ret
nop
push ebx
mov ebx,edx
call dword 0x19904
mov eax,ebx
call dword 0x176a8
pop ebx
ret
lea eax,[eax+0x0]
push esi
push edi
push ebx
mov edi,edx
mov ebx,ecx
mov esi,eax
jmp short 0x17ccd
mov ecx,[esi+0x14]
sub ecx,[esi+0x10]
ja 0x17ca9
mov eax,esi
call dword 0x17cd8
mov ecx,[esi+0x14]
cmp ecx,ebx
jc 0x17caf
mov ecx,ebx
push esi
sub ebx,ecx
mov eax,[esi+0x8]
add eax,[esi+0x10]
add [esi+0x10],ecx
mov esi,eax
mov edx,ecx
shr ecx,byte 0x2
cld
rep movsd
mov ecx,edx
and ecx,byte +0x3
rep movsb
pop esi
or ebx,ebx
jnz 0x17c97
pop ebx
pop edi
pop esi
ret
lea eax,[eax+0x0]
push ebx
push esi
mov ebx,eax
mov edx,[ebx+0x8]
mov ecx,[ebx+0xc]
mov eax,[ebx+0x4]
mov esi,[eax]
call dword [esi+0xc]
mov esi,eax
mov [ebx+0x14],esi
test esi,esi
jnz 0x17d0a
mov ecx,[dword 0x468e10]
mov dl,0x1
mov eax,[0x4125bc]
call dword 0xb50c
call dword 0x3464
xor eax,eax
mov [ebx+0x10],eax
pop esi
pop ebx
ret
mov eax,eax
push ebx
mov ebx,eax
mov eax,ebx
call dword 0x197f4
cmp al,0x9
setz al
pop ebx
ret
lea eax,[eax+0x0]
push ebp
mov ebp,esp
push byte +0x0
push ebx
mov ebx,eax
xor eax,eax
push ebp
push dword 0x418d78
push dword [fs:eax]
mov [fs:eax],esp
lea edx,[ebp-0x4]
mov eax,ebx
call dword 0x19654
mov eax,[ebp-0x4]
test eax,eax
jz 0x17d54
sub eax,byte +0x4
mov eax,[eax]
dec eax
jng 0x17d5c
call dword 0x1769c
mov eax,[ebp-0x4]
movzx ebx,byte [eax]
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x418d7f
lea eax,[ebp-0x4]
call dword 0x3a1c
ret
jmp dword 0x3384
jmp short 0x17d6f
mov eax,ebx
pop ebx
pop ecx
pop ebp
ret
lea eax,[eax+0x0]
push ebp
mov ebp,esp
push byte +0x0
push ebx
mov ebx,eax
xor eax,eax
push ebp
push dword 0x418dd4
push dword [fs:eax]
mov [fs:eax],esp
lea edx,[ebp-0x4]
mov eax,ebx
call dword 0x19710
mov eax,[ebp-0x4]
call dword 0x4358
dec eax
jng 0x17db8
call dword 0x1769c
mov eax,[ebp-0x4]
movzx ebx,word [eax]
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x418ddb
lea eax,[ebp-0x4]
call dword 0x41d0
ret
jmp dword 0x3384
jmp short 0x17dcb
mov eax,ebx
pop ebx
pop ecx
pop ebp
ret
lea eax,[eax+0x0]
push ebp
mov ebp,esp
push ecx
push ebx
push esi
mov [ebp-0x4],edx
mov ebx,eax
mov eax,[ebp-0x4]
mov edx,[eax]
call dword [edx+0x20]
xor eax,eax
push ebp
push dword 0x418e84
push dword [fs:eax]
mov [fs:eax],esp
mov eax,ebx
call dword 0x17870
test al,al
jnz 0x17e5c
mov eax,[ebp-0x4]
call dword 0x14b24
jmp short 0x17e5c
mov eax,ebx
call dword 0x17c68
add al,0xfe
sub al,0x3
jnc 0x17e2e
mov eax,ebx
call dword 0x18874
mov eax,[ebp-0x4]
call dword 0x14a58
mov esi,eax
mov eax,ebx
call dword 0x18924
jmp short 0x17e4a
mov edx,esi
mov eax,ebx
call dword 0x18a90
mov eax,ebx
call dword 0x17870
test al,al
jz 0x17e41
mov eax,ebx
call dword 0x1892c
mov eax,ebx
call dword 0x17870
test al,al
jz 0x17e1a
mov eax,ebx
call dword 0x1892c
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x418e8b
mov eax,[ebp-0x4]
mov edx,[eax]
call dword [edx+0x24]
ret
jmp dword 0x3384
jmp short 0x17e7b
pop esi
pop ebx
pop ecx
pop ebp
ret
xchg eax,esp
mov es,[ecx+0x0]
adc [ebx],eax
cs xor eax,0x436
add [eax],al
add [eax],al
add bh,bh
db 0xff
db 0xff
jmp dword far [eax]
cmp [ecx+0x0],al
pop es
inc ebx
insb
popad
jnc 0x17f22
gs jnc 0x17e3f
inc eax
add [ebp-0x75],dl
in al,dx
push ebx
push esi
mov eax,[ebp+0x8]
mov eax,[eax-0x4]
call dword 0x49d0
mov ebx,eax
dec ebx
test ebx,ebx
jl 0x17ee9
inc ebx
xor esi,esi
mov eax,[ebp+0x8]
mov eax,[eax-0x4]
mov edx,[eax+esi*4]
mov eax,[ebp+0x8]
mov eax,[eax-0x8]
mov eax,[eax+0x34]
call dword 0x13d24
inc esi
dec ebx
jnz 0x17ece
pop esi
pop ebx
pop ebp
ret
lea eax,[eax+0x0]
push ebp
mov ebp,esp
push ebx
push esi
push edi
mov edi,eax
mov eax,edi
call dword 0x1abdc
mov esi,eax
dec esi
test esi,esi
jl 0x17f62
inc esi
xor ebx,ebx
mov edx,ebx
mov eax,edi
call dword 0x1abb0
test byte [eax+0x24],0x4
jz 0x17f5e
mov eax,[ebp+0x8]
mov eax,[eax-0x4]
call dword 0x49d0
inc eax
push eax
mov eax,[ebp+0x8]
add eax,byte -0x4
mov ecx,0x1
mov edx,[dword 0x418e90]
call dword 0x4b8c
add esp,byte +0x4
mov edx,ebx
mov eax,edi
call dword 0x1abb0
push eax
mov eax,[ebp+0x8]
mov eax,[eax-0x4]
call dword 0x49d0
mov edx,[ebp+0x8]
mov edx,[edx-0x4]
pop ecx
mov [edx+eax*4-0x4],ecx
inc ebx
dec esi
jnz 0x17f09
pop edi
pop esi
pop ebx
pop ebp
ret
nop
push ebp
mov ebp,esp
push ecx
push ebx
push esi
push edi
mov [ebp-0x3],dl
mov [ebp-0x2],ax
mov eax,[ebp+0x8]
mov eax,[eax-0x4]
call dword 0x49d0
mov esi,eax
dec esi
test esi,esi
jl 0x17fc9
inc esi
xor ebx,ebx
cmp byte [ebp-0x3],0x0
jz 0x17fab
mov eax,[ebp+0x8]
mov eax,[eax-0x4]
mov edi,[eax+ebx*4]
movzx eax,word [edi+0x1c]
or ax,[ebp-0x2]
mov edx,[ebp+0x8]
mov [edi+0x1c],ax
jmp short 0x17fc5
mov eax,[ebp+0x8]
mov eax,[eax-0x4]
mov edi,[eax+ebx*4]
movzx eax,word [ebp-0x2]
not eax
and ax,[edi+0x1c]
mov edx,[ebp+0x8]
mov [edi+0x1c],ax
inc ebx
dec esi
jnz 0x17f8b
pop edi
pop esi
pop ebx
pop ecx
pop ebp
ret
nop
push ebp
mov ebp,esp
mov eax,[ebp+0x8]
test byte [eax-0x9],0x1
jnz 0x17fe5
mov eax,[ebp+0x8]
cmp dword [eax-0x10],byte +0x0
jz 0x17fe9
xor eax,eax
pop ebp
ret
mov al,0x1
pop ebp
ret
lea eax,[eax+0x0]
push ebp
mov ebp,esp
push ebx
push esi
mov esi,eax
xor ebx,ebx
call dword 0x1ee4
mov edx,[dword 0x407858]
call dword 0x2d7c
test al,al
jz 0x18048
mov eax,[ebp+0x8]
push eax
call dword 0x17fd0
pop ecx
test al,al
jz 0x18022
mov eax,[esi]
call dword 0x2bf0
xor eax,eax
mov [esi],eax
mov eax,[ebp+0x8]
mov eax,[eax-0x8]
xor edx,edx
call dword 0x19afc
call dword 0x1ee4
mov edx,[eax+0x4]
mov eax,[ebp+0x8]
mov eax,[eax-0x8]
mov ecx,[eax]
call dword [ecx+0x10]
mov ebx,eax
mov eax,ebx
pop esi
pop ebx
pop ebp
ret
mov eax,eax
push ebp
mov ebp,esp
push ebx
push esi
push edi
xor eax,eax
push ebp
push dword 0x419136
push dword [fs:eax]
mov [fs:eax],esp
mov eax,[ebp+0x8]
mov edx,[eax-0x18]
mov eax,[ebp+0x8]
mov eax,[eax-0x8]
call dword 0x19c9c
mov ebx,eax
mov eax,[ebp+0x8]
xor edx,edx
mov [eax-0x14],edx
mov eax,[ebp+0x8]
mov eax,[eax-0x8]
cmp word [eax+0x72],byte +0x0
jz 0x180a7
mov eax,[ebp+0x8]
add eax,byte -0x14
push eax
mov eax,[ebp+0x8]
mov esi,[eax-0x8]
mov eax,[ebp+0x8]
mov edx,[eax-0x8]
mov ecx,ebx
mov eax,[esi+0x74]
call dword [esi+0x70]
mov eax,[ebp+0x8]
cmp dword [eax-0x14],byte +0x0
jnz 0x18121
mov eax,ebx
call dword [eax-0xc]
mov edx,[ebp+0x8]
mov [edx-0x14],eax
mov eax,[ebp+0x8]
test byte [eax-0x9],0x4
jz 0x180db
mov eax,[ebp+0x8]
mov eax,[eax-0x14]
or word [eax+0x1c],byte +0x1
mov eax,[ebp+0x8]
mov eax,[eax-0x14]
or word [eax+0x1c],0x200
xor eax,eax
push ebp
push dword 0x41910a
push dword [fs:eax]
mov [fs:eax],esp
mov eax,[ebp+0x8]
mov eax,[eax-0x8]
mov ecx,[eax+0x28]
mov eax,[ebp+0x8]
mov eax,[eax-0x14]
or edx,byte -0x1
mov ebx,[eax]
call dword [ebx+0x2c]
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
jmp short 0x18121
jmp dword 0x30d0
mov eax,[ebp+0x8]
xor edx,edx
mov [eax-0x14],edx
call dword 0x348c
call dword 0x34e0
mov eax,[ebp+0x8]
mov eax,[eax-0x14]
or word [eax+0x1c],byte +0x1
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
jmp short 0x18159
jmp dword 0x30d0
mov eax,[ebp+0x8]
push eax
mov eax,[ebp+0x8]
add eax,byte -0x14
call dword 0x17ff0
pop ecx
test al,al
jnz 0x18154
call dword 0x348c
call dword 0x34e0
pop edi
pop esi
pop ebx
pop ebp
ret
mov eax,eax
push ebp
mov ebp,esp
push ebx
push esi
push edi
xor eax,eax
push ebp
push dword 0x4191d8
push dword [fs:eax]
mov [fs:eax],esp
mov eax,[ebp+0x8]
mov eax,[eax-0x8]
mov edx,[eax+0x2c]
mov eax,[ebp+0x8]
mov eax,[eax-0x14]
mov si,0xfff8
call dword 0x2dec
mov eax,[ebp+0x8]
lea ecx,[eax-0x1c]
mov eax,[ebp+0x8]
mov edx,[eax-0x14]
mov eax,[ebp+0x8]
mov eax,[eax-0x8]
mov ebx,[eax]
call dword [ebx+0x20]
mov eax,[ebp+0x8]
mov eax,[eax-0x14]
test byte [eax+0x1c],0x10
jz 0x181ce
mov eax,[ebp+0x8]
mov eax,[eax-0x1c]
call dword 0x139c8
mov edx,[ebp+0x8]
cmp eax,[edx-0x14]
jnz 0x181ce
mov eax,[ebp+0x8]
mov eax,[eax-0x14]
or word [eax+0x1c],0x200
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
jmp short 0x181fb
jmp dword 0x30d0
mov eax,[ebp+0x8]
push eax
mov eax,[ebp+0x8]
add eax,byte -0x14
call dword 0x17ff0
pop ecx
test al,al
jnz 0x181f6
call dword 0x348c
call dword 0x34e0
pop edi
pop esi
pop ebx
pop ebp
ret
push ebp
mov ebp,esp
push ebx
push esi
push edi
xor eax,eax
push ebp
push dword 0x41927b
push dword [fs:eax]
mov [fs:eax],esp
mov eax,[ebp+0x8]
mov edx,[eax-0x18]
mov eax,[ebp+0x8]
mov eax,[eax-0x8]
call dword 0x19c9c
mov ecx,eax
mov eax,[ebp+0x8]
mov edx,[eax-0x1c]
mov eax,[ebp+0x8]
mov eax,[eax-0x8]
mov ebx,[eax]
call dword [ebx+0x14]
mov edx,[ebp+0x8]
mov [edx-0x14],eax
mov eax,[ebp+0x8]
mov eax,[eax-0x14]
mov si,0xfff2
call dword 0x2dec
mov ebx,eax
mov eax,[ebp+0x8]
mov eax,[eax-0x8]
mov [eax+0x2c],ebx
mov eax,[ebp+0x8]
test ebx,ebx
jnz 0x18271
mov eax,[ebp+0x8]
mov eax,[eax-0x8]
mov eax,[eax+0x18]
mov edx,[ebp+0x8]
mov edx,[edx-0x8]
mov [edx+0x2c],eax
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
jmp short 0x1829e
jmp dword 0x30d0
mov eax,[ebp+0x8]
push eax
mov eax,[ebp+0x8]
add eax,byte -0x14
call dword 0x17ff0
pop ecx
test al,al
jnz 0x18299
call dword 0x348c
call dword 0x34e0
pop edi
pop esi
pop ebx
pop ebp
ret
nop
push ebp
mov ebp,esp
add esp,byte -0x28
push ebx
push esi
push edi
xor ecx,ecx
mov [ebp-0x18],ecx
mov [ebp-0x1c],ecx
mov [ebp-0x4],ecx
mov [ebp-0x10],edx
mov [ebp-0x8],eax
xor eax,eax
push ebp
push dword 0x4194c8
push dword [fs:eax]
mov [fs:eax],esp
lea ecx,[ebp-0x20]
lea edx,[ebp-0x9]
mov eax,[ebp-0x8]
mov ebx,[eax]
call dword [ebx+0x28]
lea edx,[ebp-0x18]
mov eax,[ebp-0x8]
call dword 0x19618
lea edx,[ebp-0x1c]
mov eax,[ebp-0x8]
call dword 0x19618
mov eax,[ebp-0x8]
mov eax,[eax+0x2c]
mov [ebp-0x24],eax
mov eax,[ebp-0x8]
mov eax,[eax+0x1c]
mov [ebp-0x28],eax
xor eax,eax
push ebp
push dword 0x419498
push dword [fs:eax]
mov [fs:eax],esp
mov eax,[ebp-0x10]
mov [ebp-0x14],eax
cmp dword [ebp-0x14],byte +0x0
jnz 0x18332
test byte [ebp-0x9],0x1
jz 0x1832b
push ebp
call dword 0x18200
pop ecx
jmp short 0x18332
push ebp
call dword 0x18050
pop ecx
cmp dword [ebp-0x14],byte +0x0
jz dword 0x18478
xor eax,eax
push ebp
push dword 0x419456
push dword [fs:eax]
mov [fs:eax],esp
push ebp
mov eax,[ebp-0x14]
call dword 0x17ef0
pop ecx
mov eax,[ebp-0x14]
or word [eax+0x1c],byte +0x1
push ebp
mov dl,0x1
movzx eax,word [dword 0x4194dc]
call dword 0x17f68
pop ecx
test byte [ebp-0x9],0x1
jnz 0x18379
push ebp
call dword 0x18160
pop ecx
cmp dword [ebp-0x14],byte +0x0
jnz 0x18391
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
call dword 0x3510
jmp dword 0x1849f
mov eax,[ebp-0x14]
test byte [eax+0x1d],0x2
jz 0x183a3
mov eax,[ebp-0x8]
mov edx,[ebp-0x14]
mov [eax+0x1c],edx
mov eax,[ebp-0x14]
or word [eax+0x1c],byte +0x2
push ebp
mov dl,0x1
movzx eax,word [dword 0x4194e0]
call dword 0x17f68
pop ecx
mov edx,[ebp-0x8]
mov eax,[ebp-0x14]
mov ecx,[eax]
call dword [ecx+0x14]
mov eax,[ebp-0x14]
and word [eax+0x1c],byte -0x3
push ebp
xor edx,edx
movzx eax,word [dword 0x4194e0]
call dword 0x17f68
pop ecx
test byte [ebp-0x9],0x2
jz 0x183f9
mov eax,[ebp-0x8]
mov eax,[eax+0x2c]
mov ecx,[ebp-0x20]
mov edx,[ebp-0x14]
mov si,0xfff9
call dword 0x2dec
test byte [ebp-0x9],0x1
jnz 0x18408
mov eax,[ebp-0x14]
test byte [eax+0x1d],0x2
jz 0x18434
mov eax,[ebp-0x8]
mov eax,[eax+0x34]
mov edx,[ebp-0x14]
call dword 0x13ed8
test eax,eax
jnl 0x1844c
push ebp
mov eax,[ebp-0x14]
call dword 0x17eb4
pop ecx
mov eax,[ebp-0x8]
mov eax,[eax+0x34]
mov edx,[ebp-0x14]
call dword 0x13d24
jmp short 0x1844c
push ebp
mov eax,[ebp-0x14]
call dword 0x17eb4
pop ecx
mov eax,[ebp-0x8]
mov eax,[eax+0x34]
mov edx,[ebp-0x14]
call dword 0x13d24
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
jmp short 0x18478
jmp dword 0x30d0
push ebp
call dword 0x17fd0
pop ecx
test al,al
jz 0x1846e
mov eax,[ebp-0x14]
call dword 0x2bf0
call dword 0x348c
call dword 0x34e0
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x41949f
mov eax,[ebp-0x8]
mov edx,[ebp-0x24]
mov [eax+0x2c],edx
mov eax,[ebp-0x8]
mov edx,[ebp-0x28]
mov [eax+0x1c],edx
ret
jmp dword 0x3384
jmp short 0x18485
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x4194cf
lea eax,[ebp-0x1c]
mov edx,0x2
call dword 0x3a40
lea eax,[ebp-0x4]
mov edx,[dword 0x418e90]
call dword 0x4b98
ret
jmp dword 0x3384
jmp short 0x184ac
mov eax,[ebp-0x14]
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret
add [eax],al
add [ecx],al
add [eax],al
add [edx],al
add [eax],al
add [ebp-0x75],dl
in al,dx
push ecx
push ebx
mov ebx,edx
mov [ebp-0x4],eax
mov eax,[ebp-0x4]
cmp dword [eax+0x30],byte +0x0
jnz 0x18546
mov dl,0x1
mov eax,[0x41294c]
call dword 0x2bc0
mov edx,[ebp-0x4]
mov [edx+0x30],eax
xor eax,eax
push ebp
push dword 0x41953f
push dword [fs:eax]
mov [fs:eax],esp
mov edx,ebx
mov eax,[ebp-0x4]
call dword 0x18554
mov eax,[ebp-0x4]
call dword 0x17a14
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x419550
mov eax,[ebp-0x4]
call dword 0x17b7c
ret
jmp dword 0x3384
jmp short 0x18536
mov edx,ebx
mov eax,[ebp-0x4]
call dword 0x18554
pop ebx
pop ecx
pop ebp
ret
push ebp
mov ebp,esp
add esp,byte -0xc
push ebx
push esi
push edi
mov ebx,edx
mov [ebp-0x4],eax
jmp short 0x1856e
mov edx,ebx
mov eax,[ebp-0x4]
call dword 0x18a90
mov eax,[ebp-0x4]
call dword 0x17870
test al,al
jz 0x18564
mov eax,[ebp-0x4]
call dword 0x1892c
mov eax,[ebp-0x4]
mov eax,[eax+0x2c]
mov [ebp-0x8],eax
mov eax,[ebp-0x4]
mov eax,[eax+0x28]
mov [ebp-0xc],eax
mov eax,ebx
mov si,0xfffb
call dword 0x2dec
mov edx,[ebp-0x4]
mov [edx+0x2c],eax
xor eax,eax
push ebp
push dword 0x419616
push dword [fs:eax]
mov [fs:eax],esp
mov eax,ebx
mov si,0xfffc
call dword 0x2dec
mov edi,eax
mov eax,[ebp-0x4]
mov [eax+0x28],edi
test edi,edi
jnz 0x185e2
mov eax,[ebp-0x4]
mov eax,[eax+0x18]
mov edx,[ebp-0x4]
mov [edx+0x28],eax
jmp short 0x185e2
xor edx,edx
mov eax,[ebp-0x4]
call dword 0x182a4
mov eax,[ebp-0x4]
call dword 0x17870
test al,al
jz 0x185d8
mov eax,[ebp-0x4]
call dword 0x1892c
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x41961d
mov eax,[ebp-0x4]
mov edx,[ebp-0x8]
mov [eax+0x2c],edx
mov eax,[ebp-0x4]
mov edx,[ebp-0xc]
mov [eax+0x28],edx
ret
jmp dword 0x3384
jmp short 0x18603
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret
push ebx
add esp,byte -0xc
mov ebx,eax
mov eax,ebx
call dword 0x197f4
cmp al,0x5
jnz 0x18645
mov edx,esp
mov ecx,0xa
mov eax,ebx
call dword 0x17c8c
jmp short 0x18653
dec dword [ebx+0x10]
mov eax,ebx
call dword 0x1865c
fstp tword [esp]
wait fld tword [esp]
add esp,byte +0xc
pop ebx
ret
nop
push ebx
add esp,byte -0x10
mov ebx,eax
mov eax,ebx
call dword 0x197f4
cmp al,0x15
jnz 0x1867d
mov edx,esp
mov ecx,0x8
mov eax,ebx
call dword 0x17c8c
jmp short 0x18697
dec dword [ebx+0x10]
mov eax,ebx
call dword 0x188e0
mov [esp+0x8],eax
mov [esp+0xc],edx
fild qword [esp+0x8]
fstp qword [esp]
wait fld qword [esp]
add esp,byte +0x10
pop ebx
ret
nop
push ebx
add esp,byte -0xc
mov ebx,eax
mov eax,ebx
call dword 0x197f4
cmp al,0xf
jnz 0x186c1
mov edx,esp
mov ecx,0x4
mov eax,ebx
call dword 0x17c8c
jmp short 0x186db
dec dword [ebx+0x10]
mov eax,ebx
call dword 0x188e0
mov [esp+0x4],eax
mov [esp+0x8],edx
fild qword [esp+0x4]
fstp dword [esp]
wait fld dword [esp]
add esp,byte +0xc
pop ebx
ret
nop
push ebx
add esp,byte -0x10
mov ebx,eax
mov eax,ebx
call dword 0x197f4
cmp al,0x10
jnz 0x18705
mov edx,esp
mov ecx,0x8
mov eax,ebx
call dword 0x17c8c
jmp short 0x18725
dec dword [ebx+0x10]
mov eax,ebx
call dword 0x188e0
mov [esp+0x8],eax
mov [esp+0xc],edx
fild qword [esp+0x8]
fmul dword [dword 0x419730]
fistp qword [esp]
wait fild qword [esp]
add esp,byte +0x10
pop ebx
ret
add [eax],al
add [eax],al
inc eax
sbb al,0x46
push ebx
add esp,byte -0x10
mov ebx,eax
mov eax,ebx
call dword 0x197f4
cmp al,0x11
jnz 0x18755
mov edx,esp
mov ecx,0x8
mov eax,ebx
call dword 0x17c8c
jmp short 0x1876f
dec dword [ebx+0x10]
mov eax,ebx
call dword 0x188e0
mov [esp+0x8],eax
mov [esp+0xc],edx
fild qword [esp+0x8]
fstp qword [esp]
wait fld qword [esp]
add esp,byte +0x10
pop ebx
ret
nop
push ebx
push esi
push ecx
mov esi,edx
mov ebx,eax
mov eax,ebx
call dword 0x197f4
and eax,byte +0x7f
cmp eax,byte +0xd
ja dword 0x1882f
movzx eax,byte [eax+0x4197a0]
jmp dword [eax*4+0x4197ae]
add eax,0x0
add [eax],al
add [edx],eax
add eax,[eax]
add [eax],al
add al,0x2f
cwde
inc ecx
add dh,al
xchg eax,edi
inc ecx
add bh,dh
xchg eax,edi
inc ecx
add [dword 0x13004198],al
cwde
inc ecx
add [ecx],ah
cwde
inc ecx
add [ebx+0x1b9d4],cl
add [eax],al
mov eax,ebx
call dword 0x17c8c
movzx ecx,byte [esp]
mov eax,esi
xor edx,edx
call dword 0x3b0c
mov eax,esi
call dword 0x3f0c
mov edx,eax
movzx ecx,byte [esp]
mov eax,ebx
call dword 0x17c8c
jmp short 0x18834
mov eax,esi
mov edx,0x419840
call dword 0x3a70
jmp short 0x18834
mov eax,esi
mov edx,0x419850
call dword 0x3a70
jmp short 0x18834
mov eax,esi
mov edx,0x419860
call dword 0x3a70
jmp short 0x18834
mov eax,esi
mov edx,0x41986c
call dword 0x3a70
jmp short 0x18834
call dword 0x1769c
pop edx
pop esi
pop ebx
ret
db 0xff
db 0xff
db 0xff
inc dword [dword 0x46000000]
popad
insb
jnc 0x188aa
add [eax],al
add bh,bh
db 0xff
db 0xff
inc dword [eax+eax]
add [eax],al
push esp
jc 0x188c8
add [gs:eax],al
add [eax],al
db 0xff
db 0xff
db 0xff
inc dword [ebx]
add [eax],al
add [esi+0x69],ch
insb
add bh,bh
db 0xff
db 0xff
inc dword [eax+eax]
add [eax],al
dec esi
jnz 0x188db
insb
add [eax],al
add [eax],al
push ebx
add esp,byte -0x8
mov ebx,eax
mov eax,ebx
call dword 0x197f4
sub al,0x2
jz 0x1888f
dec al
jz 0x188a9
dec al
jz 0x188c3
jmp short 0x188d3
lea edx,[esp+0x4]
mov ecx,0x1
mov eax,ebx
call dword 0x17c8c
movsx eax,byte [esp+0x4]
mov [esp],eax
jmp short 0x188d8
lea edx,[esp+0x6]
mov ecx,0x2
mov eax,ebx
call dword 0x17c8c
movsx eax,word [esp+0x6]
mov [esp],eax
jmp short 0x188d8
mov edx,esp
mov ecx,0x4
mov eax,ebx
call dword 0x17c8c
jmp short 0x188d8
call dword 0x1769c
mov eax,[esp]
pop ecx
pop edx
pop ebx
ret
nop
push ebx
add esp,byte -0x8
mov ebx,eax
mov eax,ebx
call dword 0x17c68
cmp al,0x13
jnz 0x18908
mov eax,ebx
call dword 0x197f4
mov edx,esp
mov ecx,0x8
mov eax,ebx
call dword 0x17c8c
jmp short 0x18917
mov eax,ebx
call dword 0x18874
cdq
mov [esp],eax
mov [esp+0x4],edx
mov eax,[esp]
mov edx,[esp+0x4]
pop ecx
pop edx
pop ebx
ret
mov eax,eax
mov dl,0x1
call dword 0x17728
ret
xor edx,edx
call dword 0x17728
ret
push ebx
push esi
push edi
mov edi,ecx
mov esi,edx
mov ebx,eax
movzx eax,byte [dword 0x419970]
mov [esi],al
mov eax,ebx
call dword 0x17c68
and al,0xf0
cmp al,0xf0
jnz 0x1896c
mov eax,ebx
call dword 0x197f4
and al,0xf
mov [esi],al
test byte [esi],0x2
jz 0x1896c
mov eax,ebx
call dword 0x18874
mov [edi],eax
pop edi
pop esi
pop ebx
ret
add [eax],al
add [eax],al
push ebp
mov ebp,esp
add esp,0xfffffedc
push ebx
xor edx,edx
mov [ebp-0x4],edx
mov ebx,eax
xor eax,eax
push ebp
push dword 0x419a65
push dword [fs:eax]
mov [fs:eax],esp
lea eax,[ebp-0x4]
call dword 0x3a1c
mov eax,[ebp+0x8]
mov eax,[eax-0x4]
mov edx,[dword 0x41372c]
call dword 0x2d7c
test al,al
jz 0x189c1
lea eax,[ebp-0x4]
mov edx,[ebp+0x8]
mov edx,[edx-0x4]
mov edx,[edx+0x8]
call dword 0x3ab4
cmp dword [ebp-0x4],byte +0x0
jnz 0x189e8
lea edx,[ebp-0x104]
mov eax,[ebp+0x8]
mov eax,[eax-0x4]
mov eax,[eax]
call dword 0x2ad0
lea edx,[ebp-0x104]
lea eax,[ebp-0x4]
call dword 0x3c80
mov eax,[ebp-0x4]
mov [ebp-0x124],eax
mov byte [ebp-0x120],0xb
mov eax,[0x468bf8]
mov eax,[eax]
mov [ebp-0x11c],eax
mov byte [ebp-0x118],0xb
mov eax,[ebp+0x8]
mov eax,[eax-0x8]
mov [ebp-0x114],eax
mov byte [ebp-0x110],0xb
mov eax,[ebx+0x4]
mov [ebp-0x10c],eax
mov byte [ebp-0x108],0xb
lea eax,[ebp-0x124]
push eax
push byte +0x3
mov ecx,[dword 0x468e1c]
mov dl,0x1
mov eax,[0x4125bc]
call dword 0xb548
call dword 0x3464
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x419a6c
lea eax,[ebp-0x4]
call dword 0x3a1c
ret
jmp dword 0x3384
jmp short 0x18a5c
pop ebx
mov esp,ebp
pop ebp
ret
lea eax,[eax+0x0]
push ebp
mov ebp,esp
mov eax,[ebp+0x8]
mov eax,[eax-0xc]
call dword 0x19904
mov eax,[0x468df0]
call dword 0x17684
pop ebp
ret
mov eax,eax
push ebp
mov ebp,esp
add esp,byte -0x18
push ebx
push esi
push edi
xor ecx,ecx
mov [ebp-0x8],ecx
mov [ebp-0x4],edx
mov [ebp-0xc],eax
xor eax,eax
push ebp
push dword 0x419cd8
push dword [fs:eax]
mov [fs:eax],esp
xor edx,edx
push ebp
push dword 0x419c8a
push dword [fs:edx]
mov [fs:edx],esp
lea edx,[ebp-0x8]
mov eax,[ebp-0xc]
call dword 0x19618
xor edx,edx
push ebp
push dword 0x419c63
push dword [fs:edx]
mov [fs:edx],esp
mov ebx,0x1
mov eax,[ebp-0x8]
test eax,eax
jz 0x18aea
sub eax,byte +0x4
mov eax,[eax]
mov esi,eax
mov eax,[ebp-0x4]
mov [ebp-0x14],eax
mov eax,[ebp-0xc]
mov byte [eax+0x88],0x1
mov [ebp-0x10],ebx
jmp short 0x18b02
inc ebx
cmp esi,ebx
jl 0x18b10
mov eax,[ebp-0x8]
cmp byte [eax+ebx-0x1],0x2e
jnz 0x18b01
mov eax,[ebp-0xc]
add eax,0x80
push eax
mov ecx,ebx
sub ecx,[ebp-0x10]
mov edx,[ebp-0x10]
mov eax,[ebp-0x8]
call dword 0x3f14
cmp esi,ebx
jl dword 0x18bf0
mov eax,[ebp-0x14]
mov eax,[eax]
call dword 0x2e30
mov edx,[ebp-0xc]
mov edx,[edx+0x80]
call dword 0x10a40
mov edi,eax
test edi,edi
jnz 0x18bb0
mov eax,[ebp-0xc]
add eax,0x80
mov edx,[ebp-0x8]
call dword 0x3a70
mov eax,[ebp-0xc]
mov byte [eax+0x88],0x0
mov edx,[ebp-0xc]
mov eax,[ebp-0x14]
mov ecx,[eax]
call dword [ecx+0x4]
mov eax,[ebp-0xc]
mov byte [eax+0x88],0x1
mov eax,[ebp-0xc]
cmp dword [eax+0x80],byte +0x0
jz 0x18b9b
mov eax,[ebp-0xc]
mov edx,[eax+0x80]
mov eax,[ebp-0xc]
call dword 0x17c78
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
jmp dword 0x18cc2
xor eax,eax
mov [ebp-0x18],eax
mov eax,[edi]
mov eax,[eax]
cmp byte [eax],0x7
jnz 0x18bcb
mov edx,edi
mov eax,[ebp-0x14]
call dword 0x10b04
mov [ebp-0x18],eax
mov eax,[ebp-0x18]
mov edx,[dword 0x412a5c]
call dword 0x2d7c
test al,al
jnz 0x18be4
push ebp
call dword 0x18a74
pop ecx
mov eax,[ebp-0x18]
mov [ebp-0x14],eax
inc ebx
jmp dword 0x18afc
mov eax,[ebp-0x14]
mov eax,[eax]
call dword 0x2e30
mov edx,[ebp-0xc]
mov edx,[edx+0x80]
call dword 0x10a40
mov edi,eax
test edi,edi
jz 0x18c1d
mov ecx,edi
mov edx,[ebp-0x14]
mov eax,[ebp-0xc]
call dword 0x18e8c
jmp short 0x18c59
mov eax,[ebp-0xc]
mov byte [eax+0x88],0x0
mov edx,[ebp-0xc]
mov eax,[ebp-0x14]
mov ecx,[eax]
call dword [ecx+0x4]
mov eax,[ebp-0xc]
mov byte [eax+0x88],0x1
mov eax,[ebp-0xc]
cmp dword [eax+0x80],byte +0x0
jz 0x18c59
mov eax,[ebp-0xc]
mov edx,[eax+0x80]
mov eax,[ebp-0xc]
call dword 0x17c78
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
jmp short 0x18c80
jmp dword 0x31fc
add [eax],eax
add [eax],al
pop eax
js 0x18caf
add [esp+ebx*4+0x41],dh
add [ebp-0x18],dl
cli
cld
db 0xff
call dword far [ecx-0x18]
pushad
test al,0xfe
push dword [ebx]
rcr byte [edx+0x59],byte 0x59
mov [fs:eax],edx
jmp short 0x18cc2
jmp dword 0x31fc
add [eax],eax
add [eax],al
pop eax
js 0x18cd6
add [ebx-0x76ffbe64],bl
ret
mov eax,[ebp-0xc]
cmp byte [eax+0x88],0x0
jz 0x18cb8
mov edx,[ebx+0x4]
mov eax,[ebp-0xc]
mov ecx,[eax]
call dword [ecx+0x10]
test al,al
jnz 0x18cbd
call dword 0x348c
call dword 0x34e0
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x419cdf
lea eax,[ebp-0x8]
call dword 0x3a1c
ret
jmp dword 0x3384
jmp short 0x18ccf
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret
mov eax,eax
push ebp
mov ebp,esp
add esp,byte -0x8
push ebx
push esi
push edi
mov edi,ecx
mov esi,edx
mov [ebp-0x4],eax
mov eax,[esi]
mov eax,[eax]
call dword 0x13870
mov ebx,eax
test ebx,ebx
jz 0x18d21
lea edx,[ebp-0x8]
mov eax,edi
call ebx
test al,al
jz 0x18d21
mov ecx,[ebp-0x8]
mov edx,esi
mov eax,[ebp-0x4]
call dword 0x10b78
jmp short 0x18d26
call dword 0x1769c
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
ret
lea eax,[eax+0x0]
push ebp
mov ebp,esp
push ebx
push esi
push edi
mov edi,ecx
mov esi,edx
mov ebx,eax
mov eax,[ebp+0x8]
mov eax,[eax-0x4]
mov eax,[eax+0x18]
push eax
push esi
push byte +0x0
push edi
mov ecx,ebx
mov dl,0x1
mov eax,[0x418030]
call dword 0x17108
mov edx,eax
mov eax,[ebp+0x8]
mov eax,[eax-0x4]
mov eax,[eax+0x30]
call dword 0x13d24
pop edi
pop esi
pop ebx
pop ebp
ret
lea eax,[eax+0x0]
push ebp
mov ebp,esp
xor ecx,ecx
push ecx
push ecx
push ecx
push ecx
xor eax,eax
push ebp
push dword 0x419dbf
push dword [fs:eax]
mov [fs:eax],esp
lea edx,[ebp-0x10]
mov eax,[ebp+0x8]
mov eax,[eax-0x4]
call dword 0x19f20
lea ecx,[ebp-0x10]
mov eax,[ebp+0x8]
mov edx,[eax-0xc]
mov eax,[ebp+0x8]
mov eax,[eax-0x8]
call dword 0x110bc
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x419dc6
lea eax,[ebp-0x10]
call dword 0xec58
ret
jmp dword 0x3384
jmp short 0x18db6
mov esp,ebp
pop ebp
ret
mov eax,eax
push ebp
mov ebp,esp
push byte +0x0
push byte +0x0
xor eax,eax
push ebp
push dword 0x419e7e
push dword [fs:eax]
mov [fs:eax],esp
mov eax,[ebp+0x8]
mov eax,[eax-0x4]
call dword 0x17c68
cmp al,0xd
jnz 0x18e19
mov eax,[ebp+0x8]
mov eax,[eax-0x4]
call dword 0x197f4
lea eax,[ebp-0x4]
call dword 0x5270
mov eax,[ebp+0x8]
mov edx,[eax-0xc]
mov eax,[ebp+0x8]
mov eax,[eax-0x8]
mov ecx,[ebp-0x4]
call dword 0x11170
jmp short 0x18e60
mov eax,[ebp+0x8]
mov eax,[eax-0x4]
mov eax,[eax+0x18]
push eax
mov eax,[ebp+0x8]
mov eax,[eax-0xc]
push eax
push byte +0x0
lea edx,[ebp-0x8]
mov eax,[ebp+0x8]
mov eax,[eax-0x4]
call dword 0x18778
mov eax,[ebp-0x8]
push eax
mov eax,[ebp+0x8]
mov ecx,[eax-0x8]
mov dl,0x1
mov eax,[0x4180a8]
call dword 0x17108
mov edx,eax
mov eax,[ebp+0x8]
mov eax,[eax-0x4]
mov eax,[eax+0x30]
call dword 0x13d24
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x419e85
lea eax,[ebp-0x8]
call dword 0x3a1c
lea eax,[ebp-0x4]
call dword 0x5270
ret
jmp dword 0x3384
jmp short 0x18e6d
pop ecx
pop ecx
pop ebp
ret
lea eax,[eax+0x0]
push ebp
mov ebp,esp
push ecx
mov ecx,0x5
push byte +0x0
push byte +0x0
dec ecx
jnz 0x18e95
xchg ecx,[ebp-0x4]
push ebx
mov [ebp-0xc],ecx
mov [ebp-0x8],edx
mov [ebp-0x4],eax
xor eax,eax
push ebp
push dword 0x41a198
push dword [fs:eax]
mov [fs:eax],esp
mov eax,[ebp-0xc]
cmp dword [eax+0x8],byte +0x0
jnz 0x18f01
mov eax,[ebp-0xc]
mov eax,[eax]
mov eax,[eax]
cmp byte [eax],0x7
jnz 0x18ef7
mov edx,[ebp-0xc]
mov eax,[ebp-0x8]
call dword 0x10b04
mov edx,[dword 0x41372c]
call dword 0x2d7c
test al,al
jz 0x18ef7
mov edx,[ebp-0xc]
mov eax,[ebp-0x8]
call dword 0x10b04
test byte [eax+0x24],0x4
jnz 0x18f01
mov eax,[0x468d78]
call dword 0x17684
mov eax,[ebp-0xc]
mov eax,[eax]
mov ebx,[eax]
movzx eax,byte [ebx]
cmp eax,byte +0x10
ja dword 0x19168
jmp dword [eax*4+0x419f1b]
push dword 0x5f0041a1
lahf
inc ecx
add [ebx-0x26ffbe61],ah
lahf
inc ecx
add [eax],al
mov al,[0xa01f0041]
inc ecx
add [ebx-0x60],bl
inc ecx
add [edi-0x60],dh
inc ecx
add ch,ah
mov al,[0x9fbe0041]
inc ecx
add [edi],bl
mov al,[0xa03d0041]
inc ecx
add [ecx-0x5f],al
inc ecx
add [eax-0x5f],ch
inc ecx
add [eax-0x5f],ch
inc ecx
add [ecx-0x5f],ah
inc ecx
add [edx-0x5f],cl
inc ecx
add [ebx+0x1e8fc45],cl
in eax,dx
db 0xff
db 0xff
cmp al,0x7
jnz 0x18f89
lea edx,[ebp-0x18]
mov eax,[ebp-0x4]
call dword 0x18778
mov ecx,[ebp-0x18]
mov edx,[ebp-0xc]
mov eax,[ebp-0x8]
call dword 0x18ce8
jmp dword 0x19168
mov eax,[ebp-0x4]
call dword 0x18874
mov ecx,eax
mov edx,[ebp-0xc]
mov eax,[ebp-0x8]
call dword 0x10b78
jmp dword 0x19168
mov eax,[ebp-0x4]
call dword 0x17d28
movzx ecx,al
mov edx,[ebp-0xc]
mov eax,[ebp-0x8]
call dword 0x10b78
jmp dword 0x19168
mov eax,[ebp-0x4]
call dword 0x17d88
movzx ecx,ax
mov edx,[ebp-0xc]
mov eax,[ebp-0x8]
call dword 0x10b78
jmp dword 0x19168
lea edx,[ebp-0x1c]
mov eax,[ebp-0x4]
call dword 0x18778
mov edx,[ebp-0x1c]
mov eax,ebx
call dword 0x109dc
mov ecx,eax
mov edx,[ebp-0xc]
mov eax,[ebp-0x8]
call dword 0x10b78
jmp dword 0x19168
mov eax,[ebp-0x4]
call dword 0x18624
add esp,byte -0xc
fstp tword [esp]
wait mov edx,[ebp-0xc]
mov eax,[ebp-0x8]
call dword 0x10eb0
jmp dword 0x19168
lea edx,[ebp-0x20]
mov eax,[ebp-0x4]
call dword 0x19654
mov ecx,[ebp-0x20]
mov edx,[ebp-0xc]
mov eax,[ebp-0x8]
call dword 0x10da8
jmp dword 0x19168
lea edx,[ebp-0x24]
mov eax,[ebp-0x4]
call dword 0x19710
mov ecx,[ebp-0x24]
mov edx,[ebp-0xc]
mov eax,[ebp-0x8]
call dword 0x10dd8
jmp dword 0x19168
mov edx,ebx
mov eax,[ebp-0x4]
call dword 0x19538
mov ecx,eax
mov edx,[ebp-0xc]
mov eax,[ebp-0x8]
call dword 0x10b78
jmp dword 0x19168
mov eax,[ebp-0x4]
call dword 0x17c68
sub al,0xd
jz 0x19089
dec al
jz 0x190a3
jmp short 0x190c5
mov eax,[ebp-0x4]
call dword 0x197f4
xor ecx,ecx
mov edx,[ebp-0xc]
mov eax,[ebp-0x8]
call dword 0x10b78
jmp dword 0x19168
mov eax,[ebp-0x4]
call dword 0x197f4
mov edx,[ebp-0xc]
mov eax,[ebp-0x8]
call dword 0x10b04
mov edx,eax
mov eax,[ebp-0x4]
call dword 0x17de4
jmp dword 0x19168
push ebp
lea edx,[ebp-0x28]
mov eax,[ebp-0x4]
call dword 0x18778
mov ecx,[ebp-0x28]
mov edx,[ebp-0xc]
mov eax,[ebp-0x8]
call dword 0x18d30
pop ecx
jmp dword 0x19168
mov eax,[ebp-0x4]
call dword 0x17c68
cmp al,0xd
jnz 0x1910b
mov eax,[ebp-0x4]
call dword 0x197f4
mov ecx,0x467ac8
mov edx,[ebp-0xc]
mov eax,[ebp-0x8]
call dword 0x110fc
jmp short 0x19168
lea eax,[ebp-0x14]
push eax
lea edx,[ebp-0x2c]
mov eax,[ebp-0x4]
call dword 0x18778
mov ecx,[ebp-0x2c]
mov eax,[ebp-0x4]
mov edx,[eax+0x18]
mov eax,[ebp-0x4]
mov ebx,[eax]
call dword [ebx+0x18]
cmp dword [ebp-0x14],byte +0x0
jz 0x19168
lea ecx,[ebp-0x14]
mov edx,[ebp-0xc]
mov eax,[ebp-0x8]
call dword 0x110fc
jmp short 0x19168
push ebp
call dword 0x18d70
pop ecx
jmp short 0x19168
mov eax,[ebp-0x4]
call dword 0x188e0
push edx
push eax
mov edx,[ebp-0xc]
mov eax,[ebp-0x8]
call dword 0x11134
jmp short 0x19168
push ebp
call dword 0x18dcc
pop ecx
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x41a19f
lea eax,[ebp-0x2c]
mov edx,0x2
call dword 0x3a40
lea eax,[ebp-0x24]
call dword 0x41d0
lea eax,[ebp-0x20]
mov edx,0x3
call dword 0x3a40
ret
jmp dword 0x3384
jmp short 0x19175
pop ebx
mov esp,ebp
pop ebp
ret
push ebp
mov ebp,esp
add esp,byte -0x10
push ebx
push esi
push edi
mov ebx,edx
mov edi,eax
xor esi,esi
mov eax,ebx
mov edx,edi
call dword 0x3a70
jmp short 0x191e0
inc esi
push ebx
mov [ebp-0x10],edi
mov byte [ebp-0xc],0xb
mov [ebp-0x8],esi
mov byte [ebp-0x4],0x0
lea edx,[ebp-0x10]
mov ecx,0x1
mov eax,0x41a1fc
call dword 0x8b24
mov eax,[ebx]
call dword 0x13a08
test al,al
jz 0x191be
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret
add [eax],al
db 0xff
db 0xff
db 0xff
inc dword [dword 0x25000000]
jnc 0x1925e
and eax,0x64
push ebp
mov ebp,esp
add esp,byte -0x30
push ebx
push esi
push edi
xor ecx,ecx
mov [ebp-0x2c],ecx
mov [ebp-0x30],ecx
mov [ebp-0x28],ecx
mov [ebp-0x24],ecx
mov [ebp-0x20],ecx
mov [ebp-0x1c],ecx
mov [ebp-0x8],edx
mov [ebp-0x4],eax
xor eax,eax
push ebp
push dword 0x41a525
push dword [fs:eax]
mov [fs:eax],esp
mov eax,[ebp-0x4]
call dword 0x195f4
xor eax,eax
mov [ebp-0xc],eax
mov eax,[0x46d9ac]
mov edx,[eax]
call dword [edx+0x14]
xor eax,eax
push ebp
push dword 0x41a503
push dword [fs:eax]
mov [fs:eax],esp
xor eax,eax
push ebp
push dword 0x41a4c4
push dword [fs:eax]
mov [fs:eax],esp
lea ecx,[ebp-0x10]
lea edx,[ebp-0x11]
mov eax,[ebp-0x4]
mov ebx,[eax]
call dword [ebx+0x28]
cmp dword [ebp-0x8],byte +0x0
jnz 0x192b1
lea edx,[ebp-0x1c]
mov eax,[ebp-0x4]
call dword 0x19618
mov eax,[ebp-0x1c]
call dword 0x135dc
xor ecx,ecx
mov dl,0x1
call dword [eax+0x2c]
mov [ebp-0xc],eax
lea edx,[ebp-0x20]
mov eax,[ebp-0x4]
call dword 0x19618
mov edx,[ebp-0x20]
mov eax,[ebp-0xc]
mov ecx,[eax]
call dword [ecx+0x18]
jmp short 0x19309
mov eax,[ebp-0x8]
mov [ebp-0xc],eax
lea edx,[ebp-0x24]
mov eax,[ebp-0x4]
call dword 0x19618
mov eax,[ebp-0xc]
test byte [eax+0x1c],0x10
jz 0x192d8
lea edx,[ebp-0x28]
mov eax,[ebp-0x4]
call dword 0x19618
jmp short 0x19309
mov eax,[ebp-0xc]
or word [eax+0x1c],byte +0x1
mov eax,[ebp-0xc]
or word [eax+0x1c],byte +0x2
lea edx,[ebp-0x30]
mov eax,[ebp-0x4]
call dword 0x19618
mov eax,[ebp-0x30]
lea edx,[ebp-0x2c]
call dword 0x191a4
mov edx,[ebp-0x2c]
mov eax,[ebp-0xc]
mov ecx,[eax]
call dword [ecx+0x18]
mov eax,[ebp-0x4]
mov edx,[ebp-0xc]
mov [eax+0x18],edx
push byte +0x1
mov eax,[ebp-0xc]
call dword 0x2ac8
mov ecx,eax
mov dl,0x1
mov eax,[0x413490]
call dword 0x1332c
mov edx,[ebp-0x4]
mov [edx+0x84],eax
xor eax,eax
push ebp
push dword 0x41a469
push dword [fs:eax]
mov [fs:eax],esp
mov eax,[ebp-0x4]
mov edx,[ebp-0xc]
mov [eax+0x1c],edx
call dword 0x5888
mov eax,[eax+0x8]
mov [ebp-0x18],eax
cmp dword [ebp-0x18],byte +0x0
jz 0x19369
mov eax,[ebp-0x4]
mov edx,[ebp-0x18]
mov [eax+0x34],edx
jmp short 0x1937b
mov dl,0x1
mov eax,[0x41294c]
call dword 0x2bc0
mov edx,[ebp-0x4]
mov [edx+0x34],eax
xor eax,eax
push ebp
push dword 0x41a446
push dword [fs:eax]
mov [fs:eax],esp
mov eax,[ebp-0x4]
mov edx,[eax+0x18]
mov eax,[ebp-0x4]
mov eax,[eax+0x34]
call dword 0x13ed8
test eax,eax
jnl 0x193af
mov eax,[ebp-0x4]
mov edx,[eax+0x18]
mov eax,[ebp-0x4]
mov eax,[eax+0x34]
call dword 0x13d24
mov eax,[ebp-0x4]
mov eax,[eax+0x18]
mov edx,[ebp-0x4]
mov [edx+0x28],eax
mov eax,[ebp-0x4]
mov eax,[eax+0x18]
or word [eax+0x1c],byte +0x1
mov eax,[ebp-0x4]
mov eax,[eax+0x18]
or word [eax+0x1c],byte +0x2
mov eax,[ebp-0x4]
mov eax,[eax+0x18]
mov edx,[ebp-0x4]
mov ecx,[eax]
call dword [ecx+0x14]
mov eax,[ebp-0x4]
mov eax,[eax+0x18]
and word [eax+0x1c],byte -0x3
cmp dword [ebp-0x18],byte +0x0
jnz 0x1941f
mov eax,[ebp-0x4]
mov eax,[eax+0x34]
mov ebx,[eax+0x8]
dec ebx
test ebx,ebx
jl 0x1941f
inc ebx
mov dword [ebp-0x10],0x0
mov eax,[ebp-0x4]
mov eax,[eax+0x34]
mov edx,[ebp-0x10]
call dword 0x13e7c
mov edx,[eax]
call dword [edx+0xc]
inc dword [ebp-0x10]
dec ebx
jnz 0x19406
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x41a44d
cmp dword [ebp-0x18],byte +0x0
jnz 0x1943d
mov eax,[ebp-0x4]
mov eax,[eax+0x34]
call dword 0x2bf0
mov eax,[ebp-0x4]
xor edx,edx
mov [eax+0x34],edx
ret
jmp dword 0x3384
jmp short 0x1942c
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x41a470
mov eax,[ebp-0x4]
mov eax,[eax+0x84]
call dword 0x2bf0
ret
jmp dword 0x3384
jmp short 0x1945a
xor eax,eax
push ebp
push dword 0x41a495
push dword [fs:eax]
mov [fs:eax],esp
call dword 0x17388
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
jmp short 0x194ba
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
jmp dword 0x30d0
call dword 0x1ee4
mov edx,[eax+0x4]
mov eax,[ebp-0x4]
mov ecx,[eax]
call dword [ecx+0x10]
test al,al
jnz 0x194b3
call dword 0x348c
call dword 0x34e0
jmp short 0x19470
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
jmp short 0x194eb
jmp dword 0x30d0
xor edx,edx
mov eax,[ebp-0x8]
call dword 0x17554
cmp dword [ebp-0x8],byte +0x0
jnz 0x194e1
mov eax,[ebp-0xc]
call dword 0x2bf0
call dword 0x348c
call dword 0x34e0
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x41a50a
mov eax,[0x46d9ac]
mov edx,[eax]
call dword [edx+0x18]
ret
jmp dword 0x3384
jmp short 0x194f8
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x41a52c
lea eax,[ebp-0x30]
mov edx,0x6
call dword 0x3a40
ret
jmp dword 0x3384
jmp short 0x19517
mov eax,[ebp-0xc]
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret
mov eax,eax
push ebp
mov ebp,esp
add esp,byte -0x8
push ebx
push esi
push edi
xor ecx,ecx
mov [ebp-0x4],ecx
mov ebx,edx
mov [ebp-0x8],eax
xor eax,eax
push ebp
push dword 0x41a5e2
push dword [fs:eax]
mov [fs:eax],esp
xor eax,eax
push ebp
push dword 0x41a5b5
push dword [fs:eax]
mov [fs:eax],esp
mov eax,[ebp-0x8]
call dword 0x197f4
cmp al,0xb
jz 0x19578
call dword 0x1769c
mov eax,ebx
call dword 0x10984
mov eax,[eax+0x1]
mov esi,[eax]
xor ebx,ebx
lea edx,[ebp-0x4]
mov eax,[ebp-0x8]
call dword 0x19618
cmp dword [ebp-0x4],byte +0x0
jz 0x195ab
mov edx,[ebp-0x4]
mov eax,esi
call dword 0x176d4
cmp eax,byte +0x1f
ja 0x19586
bts ebx,eax
jmp short 0x19586
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
jmp short 0x195cc
jmp dword 0x30d0
mov eax,[ebp-0x8]
call dword 0x19808
call dword 0x348c
call dword 0x34e0
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x41a5e9
lea eax,[ebp-0x4]
call dword 0x3a1c
ret
jmp dword 0x3384
jmp short 0x195d9
mov eax,ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
ret
mov eax,eax
push ecx
mov edx,esp
mov ecx,0x4
call dword 0x17c8c
mov eax,[esp]
cmp eax,[dword 0x467ac4]
jz 0x19616
mov eax,[0x468c60]
call dword 0x17684
pop edx
ret
push ebx
push esi
push ecx
mov esi,edx
mov ebx,eax
mov edx,esp
mov ecx,0x1
mov eax,ebx
call dword 0x17c8c
movzx ecx,byte [esp]
mov eax,esi
xor edx,edx
call dword 0x3b0c
mov eax,esi
call dword 0x3f0c
mov edx,eax
movzx ecx,byte [esp]
mov eax,ebx
call dword 0x17c8c
pop edx
pop esi
pop ebx
ret
mov eax,eax
push ebp
mov ebp,esp
add esp,byte -0x8
push ebx
push esi
xor ecx,ecx
mov [ebp-0x8],ecx
mov esi,edx
mov ebx,eax
xor eax,eax
push ebp
push dword 0x41a701
push dword [fs:eax]
mov [fs:eax],esp
mov eax,ebx
call dword 0x17c68
sub al,0x12
jz 0x19682
sub al,0x2
jnz 0x19698
lea edx,[ebp-0x8]
mov eax,ebx
call dword 0x19710
mov edx,[ebp-0x8]
mov eax,esi
call dword 0x3ca4
jmp short 0x196eb
xor eax,eax
mov [ebp-0x4],eax
mov eax,ebx
call dword 0x197f4
sub al,0x6
jz 0x196ae
sub al,0x6
jz 0x196bf
jmp short 0x196d0
lea edx,[ebp-0x4]
mov ecx,0x1
mov eax,ebx
call dword 0x17c8c
jmp short 0x196d5
lea edx,[ebp-0x4]
mov ecx,0x4
mov eax,ebx
call dword 0x17c8c
jmp short 0x196d5
call dword 0x1769c
mov eax,esi
mov edx,[ebp-0x4]
call dword 0x413c
mov edx,[esi]
mov ecx,[ebp-0x4]
mov eax,ebx
call dword 0x17c8c
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x41a708
lea eax,[ebp-0x8]
call dword 0x41d0
ret
jmp dword 0x3384
jmp short 0x196f8
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
ret
mov eax,eax
push ebp
mov ebp,esp
push byte +0x0
push byte +0x0
push byte +0x0
push ebx
push esi
mov esi,edx
mov ebx,eax
xor eax,eax
push ebp
push dword 0x41a7e7
push dword [fs:eax]
mov [fs:eax],esp
mov eax,ebx
call dword 0x17c68
sub al,0x6
jz 0x1973c
sub al,0x6
jnz 0x19752
lea edx,[ebp-0xc]
mov eax,ebx
call dword 0x19654
mov edx,[ebp-0xc]
mov eax,esi
call dword 0x4338
jmp short 0x197c9
xor eax,eax
mov [ebp-0x8],eax
mov eax,ebx
call dword 0x197f4
sub al,0x12
jz 0x19768
sub al,0x2
jz 0x19791
jmp short 0x197c4
lea edx,[ebp-0x8]
mov ecx,0x4
mov eax,ebx
call dword 0x17c8c
mov eax,esi
mov edx,[ebp-0x8]
call dword 0x44dc
mov ecx,[ebp-0x8]
add ecx,ecx
mov edx,[esi]
mov eax,ebx
call dword 0x17c8c
jmp short 0x197c9
lea edx,[ebp-0x8]
mov ecx,0x4
mov eax,ebx
call dword 0x17c8c
lea eax,[ebp-0x4]
mov edx,[ebp-0x8]
call dword 0x413c
mov edx,[ebp-0x4]
mov ecx,[ebp-0x8]
mov eax,ebx
call dword 0x17c8c
mov edx,esi
mov eax,[ebp-0x4]
call dword 0x5648
jmp short 0x197c9
call dword 0x1769c
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x41a7ee
lea eax,[ebp-0xc]
call dword 0x3a1c
lea eax,[ebp-0x4]
call dword 0x3a1c
ret
jmp dword 0x3384
jmp short 0x197d6
pop esi
pop ebx
mov esp,ebp
pop ebp
ret
push ecx
mov edx,esp
mov ecx,0x1
call dword 0x17c8c
movzx eax,byte [esp]
pop edx
ret
nop
push ebp
mov ebp,esp
push byte +0x0
push ebx
mov ebx,eax
xor eax,eax
push ebp
push dword 0x41a844
push dword [fs:eax]
mov [fs:eax],esp
lea edx,[ebp-0x4]
mov eax,ebx
call dword 0x19618
cmp dword [ebp-0x4],byte +0x0
jnz 0x1981e
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x41a84b
lea eax,[ebp-0x4]
call dword 0x3a1c
ret
jmp dword 0x3384
jmp short 0x1983b
pop ebx
pop ecx
pop ebp
ret
nop
push ebp
mov ebp,esp
push ebx
mov ebx,[ebp+0x8]
add ebx,byte -0x4
jmp short 0x19863
mov eax,[ebx]
call dword 0x19904
mov eax,[ebx]
call dword 0x17870
test al,al
jz 0x1985c
mov eax,[ebx]
call dword 0x1892c
pop ebx
pop ebp
ret
push ebp
mov ebp,esp
push ecx
push ebx
mov ebx,eax
lea edx,[ebp-0x4]
mov eax,[ebp+0x8]
mov eax,[eax-0x4]
mov ecx,0x4
call dword 0x17c8c
mov edx,[ebp-0x4]
imul edx,ebx
mov eax,[ebp+0x8]
mov eax,[eax-0x4]
call dword 0x19d10
pop ebx
pop ecx
pop ebp
ret
nop
push ebp
mov ebp,esp
push ebx
mov ebx,[ebp+0x8]
add ebx,byte -0x4
jmp short 0x198ef
mov eax,[ebx]
call dword 0x17c68
add al,0xfe
sub al,0x3
jnc 0x198c8
mov eax,[ebx]
call dword 0x19904
mov eax,[ebx]
mov edx,0x1
call dword 0x19d10
jmp short 0x198dd
mov eax,[ebx]
call dword 0x19ab4
mov eax,[ebx]
call dword 0x17870
test al,al
jz 0x198d6
mov eax,[ebx]
call dword 0x1892c
mov eax,[ebx]
call dword 0x17870
test al,al
jz 0x198b4
mov eax,[ebx]
call dword 0x1892c
pop ebx
pop ebp
ret
push ebp
mov ebp,esp
add esp,byte -0x8
xor edx,edx
mov [ebp-0x8],edx
mov [ebp-0x4],eax
xor eax,eax
push ebp
push dword 0x41aaa9
push dword [fs:eax]
mov [fs:eax],esp
mov eax,[ebp-0x4]
call dword 0x197f4
and eax,byte +0x7f
cmp eax,byte +0x15
ja dword 0x19a93
jmp dword [eax*4+0x41a93b]
xchg eax,ebx
stosb
inc ecx
add [eax-0x5bffbe57],bl
test eax,0xa9b60041
inc ecx
add al,cl
test eax,0xa9da0041
inc ecx
add ah,ch
test eax,0xa9ec0041
inc ecx
add [ebx-0x6cffbe56],dl
stosb
inc ecx
add ah,bh
test eax,0xaa0d0041
inc ecx
add [edi],dl
stosb
inc ecx
add [ebx+0x250041aa],dl
stosb
inc ecx
add [esi],ch
stosb
inc ecx
add [dword 0x4c0041aa],bh
stosb
inc ecx
add [ebx-0x56],bl
inc ecx
add [ecx-0x56],ch
inc ecx
add [eax-0x56],bh
inc ecx
add [esi-0x16ffbe56],al
sti
add [eax],al
add [ebp-0x18],dl
mov dl,0xfe
db 0xff
call dword far [ecx-0x17]
out dx,eax
add [eax],al
add [edx+0x1],bh
mov eax,[ebp-0x4]
call dword 0x19d10
jmp dword 0x19a93
mov edx,0x2
mov eax,[ebp-0x4]
call dword 0x19d10
jmp dword 0x19a93
mov edx,0x4
mov eax,[ebp-0x4]
call dword 0x19d10
jmp dword 0x19a93
mov edx,0xa
mov eax,[ebp-0x4]
call dword 0x19d10
jmp dword 0x19a93
lea edx,[ebp-0x8]
mov eax,[ebp-0x4]
call dword 0x19618
jmp dword 0x19a93
push ebp
mov eax,0x1
call dword 0x19878
pop ecx
jmp dword 0x19a93
mov eax,[ebp-0x4]
call dword 0x19808
jmp short 0x19a93
push ebp
mov eax,0x1
call dword 0x19878
pop ecx
jmp short 0x19a93
push ebp
call dword 0x198a8
pop ecx
jmp short 0x19a93
mov edx,0x4
mov eax,[ebp-0x4]
call dword 0x19d10
jmp short 0x19a93
mov edx,0x8
mov eax,[ebp-0x4]
call dword 0x19d10
jmp short 0x19a93
mov edx,0x8
mov eax,[ebp-0x4]
call dword 0x19d10
jmp short 0x19a93
push ebp
mov eax,0x2
call dword 0x19878
pop ecx
jmp short 0x19a93
mov edx,0x8
mov eax,[ebp-0x4]
call dword 0x19d10
jmp short 0x19a93
push ebp
mov eax,0x1
call dword 0x19878
pop ecx
jmp short 0x19a93
mov edx,0x8
mov eax,[ebp-0x4]
call dword 0x19d10
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x41aab0
lea eax,[ebp-0x8]
call dword 0x3a1c
ret
jmp dword 0x3384
jmp short 0x19aa0
pop ecx
pop ecx
pop ebp
ret
push ebp
mov ebp,esp
push byte +0x0
push ebx
mov ebx,eax
xor eax,eax
push ebp
push dword 0x41aaf1
push dword [fs:eax]
mov [fs:eax],esp
lea edx,[ebp-0x4]
mov eax,ebx
call dword 0x19618
mov eax,ebx
call dword 0x19904
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x41aaf8
lea eax,[ebp-0x4]
call dword 0x3a1c
ret
jmp dword 0x3384
jmp short 0x19ae8
pop ebx
pop ecx
pop ebp
ret
push ebp
mov ebp,esp
add esp,byte -0x10
push ebx
push esi
xor ecx,ecx
mov [ebp-0x10],ecx
mov [ebp-0xc],ecx
mov ebx,eax
xor eax,eax
push ebp
push dword 0x41ab94
push dword [fs:eax]
mov [fs:eax],esp
test dl,dl
jz 0x19b4a
lea ecx,[ebp-0x8]
lea edx,[ebp-0x1]
mov eax,ebx
mov esi,[eax]
call dword [esi+0x28]
lea edx,[ebp-0xc]
mov eax,ebx
call dword 0x19618
lea edx,[ebp-0x10]
mov eax,ebx
call dword 0x19618
jmp short 0x19b4a
mov eax,ebx
call dword 0x19ab4
mov eax,ebx
call dword 0x17870
test al,al
jz 0x19b43
mov eax,ebx
call dword 0x1892c
jmp short 0x19b67
mov dl,0x1
mov eax,ebx
call dword 0x19afc
mov eax,ebx
call dword 0x17870
test al,al
jz 0x19b5e
mov eax,ebx
call dword 0x1892c
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x41ab9b
lea eax,[ebp-0x10]
mov edx,0x2
call dword 0x3a40
ret
jmp dword 0x3384
jmp short 0x19b86
pop esi
pop ebx
mov esp,ebp
pop ebp
ret
lea eax,[eax+0x0]
push ebp
mov ebp,esp
add esp,byte -0x10
push ebx
push esi
push edi
xor ebx,ebx
mov [ebp-0x4],ebx
mov edi,ecx
mov esi,edx
mov ebx,eax
xor eax,eax
push ebp
push dword 0x41ac49
push dword [fs:eax]
mov [fs:eax],esp
lea eax,[ebp-0x4]
mov edx,esi
call dword 0x3ab4
xor eax,eax
mov [ebp-0x8],eax
mov esi,[ebx+0x1c]
test esi,esi
jz 0x19be9
mov edx,[ebp-0x4]
mov eax,esi
call dword 0x1aabc
mov [ebp-0x8],eax
cmp dword [ebp-0x8],byte +0x0
jnz 0x19c33
cmp word [ebx+0x5a],byte +0x0
jz 0x19c06
push edi
lea eax,[ebp-0x8]
push eax
mov ecx,[ebp-0x4]
mov edx,ebx
mov eax,[ebx+0x5c]
call dword [ebx+0x58]
cmp dword [ebp-0x8],byte +0x0
jnz 0x19c33
mov eax,[ebp-0x4]
mov [ebp-0x10],eax
mov byte [ebp-0xc],0xb
lea eax,[ebp-0x10]
push eax
push byte +0x0
mov ecx,[dword 0x468bd8]
mov dl,0x1
mov eax,[0x4125bc]
call dword 0xb548
call dword 0x3464
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x41ac50
lea eax,[ebp-0x4]
call dword 0x3a1c
ret
jmp dword 0x3384
jmp short 0x19c40
mov eax,[ebp-0x8]
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret
mov eax,eax
push ebx
cmp word [eax+0x52],byte +0x0
jz 0x19c70
mov ecx,edx
mov ebx,eax
mov edx,eax
mov eax,[ebx+0x54]
call dword [ebx+0x50]
pop ebx
ret
mov eax,eax
push ebx
push esi
push edi
mov esi,ecx
mov ebx,edx
cmp word [eax+0x4a],byte +0x0
jz 0x19c8f
push esi
mov edi,eax
mov ecx,ebx
mov edx,eax
mov eax,[edi+0x4c]
call dword [edi+0x48]
mov edx,[esi]
mov eax,ebx
mov ecx,[eax]
call dword [ecx+0x18]
pop edi
pop esi
pop ebx
ret
push ebx
push esi
push ecx
mov esi,edx
mov ebx,eax
mov ecx,esi
mov edx,[ebx+0x18]
mov eax,ebx
call dword 0x17bb8
mov [esp],eax
cmp dword [esp],byte +0x0
jnz 0x19cd5
cmp dword [ebx+0x1c],byte +0x0
jz 0x19cd5
mov eax,[ebx+0x1c]
cmp eax,[ebx+0x18]
jz 0x19cd5
mov ecx,esi
mov edx,[ebx+0x1c]
mov eax,ebx
call dword 0x17bb8
mov [esp],eax
cmp word [ebx+0x6a],byte +0x0
jz 0x19ce7
push esp
mov ecx,esi
mov edx,ebx
mov eax,[ebx+0x6c]
call dword [ebx+0x68]
cmp dword [esp],byte +0x0
jz 0x19cff
mov edx,[dword 0x41372c]
mov eax,[esp]
call dword 0x2e1c
test al,al
jnz 0x19d06
mov eax,esi
call dword 0x1351c
mov eax,[esp]
pop edx
pop esi
pop ebx
ret
lea eax,[eax+0x0]
push ebx
push esi
add esp,0xffffff00
mov ebx,edx
mov esi,eax
test ebx,ebx
jng 0x19d4f
cmp ebx,0x100
jng 0x19d3e
mov edx,esp
mov ecx,0x100
mov eax,esi
call dword 0x17c8c
sub ebx,0x100
jmp short 0x19d4b
mov edx,esp
mov ecx,ebx
mov eax,esi
call dword 0x17c8c
xor ebx,ebx
test ebx,ebx
jg 0x19d20
add esp,0x100
pop esi
pop ebx
ret
push ebp
mov ebp,esp
add esp,byte -0x1c
push ebx
xor edx,edx
mov [ebp-0x4],edx
mov [ebp-0x8],edx
mov ebx,eax
xor eax,eax
push ebp
push dword 0x41af01
push dword [fs:eax]
mov [fs:eax],esp
mov eax,[ebp+0x8]
mov eax,[eax-0x4]
mov dl,0xa
call dword 0x17728
xor eax,eax
mov [ebp-0x10],eax
mov dl,0x1
mov eax,[0x413200]
call dword 0x2bc0
mov [ebp-0xc],eax
xor eax,eax
push ebp
push dword 0x41aedc
push dword [fs:eax]
mov [fs:eax],esp
mov dl,0x1
mov eax,[0x413200]
call dword 0x2bc0
mov [ebp-0x10],eax
lea edx,[ebp-0x18]
mov eax,[ebp+0x8]
mov eax,[eax-0x4]
mov ecx,0x4
call dword 0x17c8c
mov eax,[ebp-0x18]
cdq
push edx
push eax
mov eax,[ebp-0xc]
call dword 0x1652c
mov eax,[ebp-0xc]
mov edx,[eax+0x4]
mov eax,[ebp+0x8]
mov eax,[eax-0x4]
mov ecx,[ebp-0x18]
call dword 0x17c8c
push dword 0x400
mov ecx,[ebp-0xc]
mov dl,0x1
mov eax,[0x413550]
call dword 0x16fbc
mov [ebp-0x14],eax
xor eax,eax
push ebp
push dword 0x41aeb7
push dword [fs:eax]
mov [fs:eax],esp
lea edx,[ebp-0x4]
mov eax,[ebp-0x14]
call dword 0x19654
lea edx,[ebp-0x18]
mov ecx,0x4
mov eax,[ebp-0x14]
call dword 0x17c8c
mov eax,[ebp-0x18]
cdq
push edx
push eax
mov eax,[ebp-0x10]
call dword 0x1652c
mov eax,[ebp-0x10]
mov edx,[eax+0x4]
mov ecx,[ebp-0x18]
mov eax,[ebp-0x14]
call dword 0x17c8c
lea edx,[ebp-0x1c]
mov eax,[ebp-0x4]
call dword 0x106e0
test al,al
jz 0x19e73
lea eax,[ebp-0x8]
call dword 0x5270
mov ecx,eax
mov edx,0x41af10
mov eax,[ebp-0x1c]
call dword 0xd11c
test al,al
jnz 0x19e8a
mov ecx,[dword 0x468e10]
mov dl,0x1
mov eax,[0x4125bc]
call dword 0xb50c
call dword 0x3464
mov eax,[ebp-0x1c]
movzx eax,word [eax+0x4]
mov [ebx],ax
mov edx,ebx
mov ecx,[ebp-0x10]
mov eax,[ebp-0x8]
mov ebx,[eax]
call dword [ebx+0xc]
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x41aebe
mov eax,[ebp-0x14]
call dword 0x2bf0
ret
jmp dword 0x3384
jmp short 0x19eae
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x41aee3
mov eax,[ebp-0x10]
call dword 0x2bf0
mov eax,[ebp-0xc]
call dword 0x2bf0
ret
jmp dword 0x3384
jmp short 0x19ecb
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x41af08
lea eax,[ebp-0x8]
call dword 0x5270
lea eax,[ebp-0x4]
call dword 0x3a1c
ret
jmp dword 0x3384
jmp short 0x19ef0
pop ebx
mov esp,ebp
pop ebp
ret
add [eax],al
add [esi],ah
mov al,[0x5e42d60b]
sub cl,[ebx+edi*4+0x1]
aas
sbb al,0x8f
xor [edx-0x1374aa72],ah
xor ecx,ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
mov ebx,edx
mov [ebp-0x4],eax
xor eax,eax
push ebp
push dword 0x41b132
push dword [fs:eax]
mov [fs:eax],esp
mov eax,ebx
call dword 0xec44
mov eax,[ebp-0x4]
call dword 0x17c68
and eax,byte +0x7f
cmp eax,byte +0x15
ja dword 0x1a0f5
jmp dword [eax*4+0x41af62]
mov edx,0xf50041af
mov al,0x41
add dh,dl
scasd
inc ecx
add cl,dh
scasd
inc ecx
add [eax+esi*4],cl
inc ecx
add [eax+esi*4],ah
inc ecx
add [eax-0xaffbe50],cl
mov al,0x41
add [esi-0x49ffbe50],dh
mov al,0x41
add ah,cl
mov al,0x41
add ch,dh
mov al,0x41
add [eax-0x45ffbe50],cl
scasd
inc ecx
add ch,dh
mov al,0x41
add [eax],bh
mov al,0x41
add [eax-0x50],ah
inc ecx
add [eax+esi*4+0x41],dh
add [edi-0x1dffbe50],bl
mov al,0x41
add [edi+0x4c0041b0],bl
mov al,0x41
add [ebx+0x32e8fc45],cl
clc
db 0xff
db 0xff
cmp al,0xd
jz dword 0x1a10c
mov eax,ebx
call dword 0x107c8
jmp dword 0x1a10c
mov eax,[ebp-0x4]
call dword 0x18874
mov edx,eax
movsx edx,dl
mov eax,ebx
mov cl,0xff
call dword 0xff14
jmp dword 0x1a10c
mov eax,[ebp-0x4]
call dword 0x18874
mov edx,eax
movsx edx,dx
mov eax,ebx
mov cl,0xfe
call dword 0xff14
jmp dword 0x1a10c
mov eax,[ebp-0x4]
call dword 0x18874
mov edx,eax
mov eax,ebx
mov cl,0xfc
call dword 0xff14
jmp dword 0x1a10c
mov eax,[ebp-0x4]
call dword 0x18624
mov eax,ebx
call dword 0xffa4
jmp dword 0x1a10c
mov eax,[ebp-0x4]
call dword 0x186a0
mov eax,ebx
call dword 0xffa4
jmp dword 0x1a10c
mov eax,[ebp-0x4]
call dword 0x1865c
mov eax,ebx
call dword 0xffa4
jmp dword 0x1a10c
mov eax,[ebp-0x4]
call dword 0x186e4
mov eax,ebx
call dword 0xffcc
jmp dword 0x1a10c
mov eax,[ebp-0x4]
call dword 0x18734
mov eax,ebx
call dword 0xffb8
jmp dword 0x1a10c
lea edx,[ebp-0x8]
mov eax,[ebp-0x4]
call dword 0x19654
mov edx,[ebp-0x8]
mov eax,ebx
call dword 0xffe0
jmp short 0x1a10c
lea edx,[ebp-0xc]
mov eax,[ebp-0x4]
call dword 0x19710
mov edx,[ebp-0xc]
mov eax,ebx
call dword 0x1000c
jmp short 0x1a10c
mov eax,[ebp-0x4]
call dword 0x197f4
cmp al,0x9
setz dl
mov eax,ebx
call dword 0xff7c
jmp short 0x1a10c
push ebp
lea eax,[ebp-0x1c]
call dword 0x19d58
pop ecx
lea edx,[ebp-0x1c]
mov eax,ebx
call dword 0xef6c
jmp short 0x1a10c
mov eax,[ebp-0x4]
call dword 0x188e0
push edx
push eax
mov eax,ebx
call dword 0xff50
jmp short 0x1a10c
mov ecx,[dword 0x468e10]
mov dl,0x1
mov eax,[0x4125bc]
call dword 0xb50c
call dword 0x3464
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x41b139
lea eax,[ebp-0x1c]
call dword 0xec58
lea eax,[ebp-0xc]
call dword 0x41d0
lea eax,[ebp-0x8]
call dword 0x3a1c
ret
jmp dword 0x3384
jmp short 0x1a119
pop ebx
mov esp,ebp
pop ebp
ret
mov eax,eax
push esi
push edi
push ebx
mov esi,edx
mov ebx,ecx
mov edi,eax
jmp short 0x1a181
mov ecx,[edi+0xc]
sub ecx,[edi+0x10]
ja 0x1a15d
mov eax,edi
call dword 0x1a18c
mov ecx,[edi+0xc]
cmp ecx,ebx
jc 0x1a163
mov ecx,ebx
sub ebx,ecx
push edi
mov eax,[edi+0x8]
add eax,[edi+0x10]
add [edi+0x10],ecx
mov edi,eax
mov edx,ecx
shr ecx,byte 0x2
cld
rep movsd
mov ecx,edx
and ecx,byte +0x3
rep movsb
pop edi
or ebx,ebx
jnz 0x1a14b
pop ebx
pop edi
pop esi
ret
lea eax,[eax+0x0]
push ebx
mov ebx,eax
mov edx,[ebx+0x8]
mov ecx,[ebx+0x10]
mov eax,[ebx+0x4]
call dword 0x1670c
xor eax,eax
mov [ebx+0x10],eax
pop ebx
ret
test dl,dl
jz 0x1a1b0
mov dl,0x9
call dword 0x1a33c
ret
mov dl,0x8
call dword 0x1a33c
ret
push ebx
push ecx
mov [esp],edx
mov ebx,eax
cmp dword [esp],byte -0x80
jl 0x1a1e5
cmp dword [esp],byte +0x7f
jg 0x1a1e5
mov dl,0x2
mov eax,ebx
call dword 0x1a33c
mov edx,esp
mov ecx,0x1
mov eax,ebx
call dword 0x1a140
pop edx
pop ebx
ret
cmp dword [esp],0xffff8000
jl 0x1a210
cmp dword [esp],0x7fff
jg 0x1a210
mov dl,0x3
mov eax,ebx
call dword 0x1a33c
mov edx,esp
mov ecx,0x2
mov eax,ebx
call dword 0x1a140
jmp short 0x1a227
mov dl,0x4
mov eax,ebx
call dword 0x1a33c
mov edx,esp
mov ecx,0x4
mov eax,ebx
call dword 0x1a140
pop edx
pop ebx
ret
mov eax,eax
mov dl,0x1
call dword 0x1a33c
ret
xor edx,edx
call dword 0x1a33c
ret
push ebx
push esi
push edi
add esp,byte -0x8
mov edi,ecx
mov esi,edx
mov ebx,eax
mov eax,esi
mov edx,edi
call dword 0x3e44
jz 0x1a28c
mov [esp+0x4],edi
mov eax,[esp+0x4]
test eax,eax
jz 0x1a264
sub eax,byte +0x4
mov eax,[eax]
mov [esp],eax
mov dl,0x14
mov eax,ebx
call dword 0x1a33c
mov edx,esp
mov ecx,0x4
mov eax,ebx
call dword 0x1a140
mov edx,edi
mov ecx,[esp]
mov eax,ebx
call dword 0x1a140
jmp short 0x1a2df
mov eax,esi
test eax,eax
jz 0x1a297
sub eax,byte +0x4
mov eax,[eax]
mov [esp],eax
cmp dword [esp],0xff
jg 0x1a2bc
mov dl,0x6
mov eax,ebx
call dword 0x1a33c
mov edx,esp
mov ecx,0x1
mov eax,ebx
call dword 0x1a140
jmp short 0x1a2d3
mov dl,0xc
mov eax,ebx
call dword 0x1a33c
mov edx,esp
mov ecx,0x4
mov eax,ebx
call dword 0x1a140
mov edx,esi
mov ecx,[esp]
mov eax,ebx
call dword 0x1a140
pop ecx
pop edx
pop edi
pop esi
pop ebx
ret
lea eax,[eax+0x0]
push ebp
mov ebp,esp
push byte +0x0
push ebx
push esi
mov esi,edx
mov ebx,eax
xor eax,eax
push ebp
push dword 0x41b32d
push dword [fs:eax]
mov [fs:eax],esp
lea edx,[ebp-0x4]
mov eax,esi
call dword 0x5700
mov ecx,[ebp-0x4]
mov edx,esi
mov eax,ebx
call dword 0x1a23c
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x41b334
lea eax,[ebp-0x4]
call dword 0x3a1c
ret
jmp dword 0x3384
jmp short 0x1a324
pop esi
pop ebx
pop ecx
pop ebp
ret
lea eax,[eax+0x0]
push ecx
mov [esp],dl
mov edx,esp
mov ecx,0x1
call dword 0x1a140
pop edx
ret
mov eax,eax
push dword 0x46d9cc
call dword 0x5b98
push dword 0x41b380
push byte +0x0
push byte -0x1
push byte +0x0
call dword 0x5a88
mov [0x46d9b4],eax
cmp dword [dword 0x46d9b4],byte +0x0
jnz 0x1a37d
call dword 0xcb58
ret
add [eax],al
add [eax],al
add [eax],al
push dword 0x46d9cc
call dword 0x5aa8
mov eax,[0x46d9b4]
push eax
call dword 0x5a70
ret
mov eax,eax
mov eax,[0x46d9b4]
push eax
call dword 0x5bd0
ret
push ebx
mov ebx,eax
push ebx
mov eax,[0x46d9b4]
push eax
call dword 0x5c18
test eax,eax
jnz 0x1a3c0
call dword 0x1a39c
pop ebx
ret
mov eax,eax
push ebp
mov ebp,esp
add esp,byte -0x14
push ebx
push esi
push edi
mov ebx,eax
call dword 0x5af8
mov edx,[dword 0x468eac]
cmp eax,[edx]
jz 0x1a407
call dword 0x5af8
mov [ebp-0x14],eax
mov byte [ebp-0x10],0x0
lea eax,[ebp-0x14]
push eax
push byte +0x0
mov ecx,[dword 0x468d30]
mov dl,0x1
mov eax,[0x4135e4]
call dword 0xb548
call dword 0x3464
test ebx,ebx
jng 0x1a414
mov eax,ebx
call dword 0x1a3a8
jmp short 0x1a419
call dword 0x1a39c
xor eax,eax
mov [ebp-0xc],eax
push dword 0x46d9cc
call dword 0x5ab0
xor eax,eax
push ebp
push dword 0x41b589
push dword [fs:eax]
mov [fs:eax],esp
mov eax,[ebp-0xc]
push eax
push dword 0x467ad0
call dword 0x5ad8
mov [ebp-0xc],eax
xor eax,eax
push ebp
push dword 0x41b56a
push dword [fs:eax]
mov [fs:eax],esp
cmp dword [ebp-0xc],byte +0x0
jz 0x1a464
mov eax,[ebp-0xc]
cmp dword [eax+0x8],byte +0x0
jg 0x1a468
xor eax,eax
jmp short 0x1a46a
mov al,0x1
mov [ebp-0x1],al
cmp byte [ebp-0x1],0x0
jz dword 0x1a554
jmp dword 0x1a547
xor edx,edx
mov eax,[ebp-0xc]
call dword 0x13e7c
mov [ebp-0x8],eax
xor edx,edx
mov eax,[ebp-0xc]
call dword 0x13d70
push dword 0x46d9cc
call dword 0x5ba0
xor eax,eax
push ebp
push dword 0x41b50d
push dword [fs:eax]
mov [fs:eax],esp
xor eax,eax
push ebp
push dword 0x41b4ce
push dword [fs:eax]
mov [fs:eax],esp
mov eax,[ebp-0x8]
mov ebx,[eax]
mov eax,[ebx+0xc]
call dword [ebx+0x8]
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
jmp short 0x1a4f5
jmp dword 0x30d0
mov eax,[ebp-0x8]
cmp byte [eax+0x4],0x0
jnz 0x1a4eb
call dword 0x1f24
mov edx,[ebp-0x8]
mov edx,[edx]
mov [edx+0x10],eax
jmp short 0x1a4f0
call dword 0x348c
call dword 0x34e0
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x41b514
push dword 0x46d9cc
call dword 0x5ab0
ret
jmp dword 0x3384
jmp short 0x1a502
mov eax,[ebp-0x8]
cmp byte [eax+0x4],0x0
jnz 0x1a52b
mov eax,[ebp-0x8]
mov eax,[eax+0x8]
push eax
call dword 0x5be8
jmp short 0x1a547
mov eax,[ebp-0x8]
mov eax,[eax]
mov edx,0x18
call dword 0x1e7c
mov edx,0xc
mov eax,[ebp-0x8]
call dword 0x1e7c
mov eax,[ebp-0xc]
cmp dword [eax+0x8],byte +0x0
jg dword 0x1a47c
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x41b571
mov eax,[ebp-0xc]
call dword 0x2bf0
ret
jmp dword 0x3384
jmp short 0x1a561
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x41b590
push dword 0x46d9cc
call dword 0x5ba0
ret
jmp dword 0x3384
jmp short 0x1a57e
movzx eax,byte [ebp-0x1]
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret
nop
push ebx
push esi
push edi
test dl,dl
jz 0x1a5ab
add esp,byte -0x10
call dword 0x2f14
mov esi,ecx
mov ebx,edx
mov edi,eax
movzx eax,byte [dword 0x41b5e4]
mov [edi+0x24],al
test esi,esi
jz 0x1a5c8
mov edx,edi
mov eax,esi
call dword 0x1a758
mov eax,edi
test bl,bl
jz 0x1a5dd
call dword 0x2f6c
pop dword [dword fs:0x0]
add esp,byte +0xc
mov eax,edi
pop edi
pop esi
pop ebx
ret
add [ecx],al
add [eax],al
add [ebx+0x56],dl
push ecx
call dword 0x2fbc
mov [esp],dl
mov ebx,eax
mov eax,ebx
call dword 0x1a850
cmp dword [ebx+0x14],byte +0x0
jz 0x1a62d
jmp short 0x1a618
mov edx,[esi+0x8]
dec edx
mov eax,esi
call dword 0x13e7c
mov cl,0x1
mov edx,ebx
mov esi,[eax]
call dword [esi+0x10]
mov esi,[ebx+0x14]
test esi,esi
jz 0x1a625
cmp dword [esi+0x8],byte +0x0
jg 0x1a604
lea eax,[ebx+0x14]
call dword 0xd0e8
mov eax,ebx
call dword 0x1a7f4
mov eax,[ebx+0x4]
test eax,eax
jz 0x1a642
mov edx,ebx
call dword 0x1a7bc
movzx edx,byte [esp]
and dl,0xfc
mov eax,ebx
call dword 0x14450
cmp byte [esp],0x0
jng 0x1a65d
mov eax,ebx
call dword 0x2f64
pop edx
pop esi
pop ebx
ret
lea eax,[eax+0x0]
test byte [eax+0x1c],0x8
jnz 0x1a66f
call dword 0x1a850
ret
push ebx
push esi
mov esi,edx
mov ebx,eax
mov eax,[ebx+0x4]
test eax,eax
jz 0x1a682
cmp eax,[esi+0x4]
jz 0x1a6b8
cmp dword [ebx+0x14],byte +0x0
jnz 0x1a697
mov dl,0x1
mov eax,[0x41294c]
call dword 0x2bc0
mov [ebx+0x14],eax
mov edx,esi
mov eax,[ebx+0x14]
call dword 0x13ed8
test eax,eax
jnl 0x1a6b8
mov edx,esi
mov eax,[ebx+0x14]
call dword 0x13d24
mov edx,ebx
mov eax,esi
call dword 0x1a670
or word [ebx+0x1c],0x100
pop esi
pop ebx
ret
lea eax,[eax+0x0]
push ebx
push esi
mov esi,edx
mov ebx,eax
mov eax,esi
call dword 0x18874
mov [ebx+0x18],ax
pop esi
pop ebx
ret
push ebx
push esi
mov esi,edx
mov ebx,eax
mov eax,esi
call dword 0x18874
mov [ebx+0x1a],ax
pop esi
pop ebx
ret
movzx eax,word [eax+0x18]
xchg eax,edx
call dword 0x1a1b8
ret
nop
movzx eax,word [eax+0x1a]
xchg eax,edx
call dword 0x1a1b8
ret
nop
push ebx
push esi
mov esi,edx
mov ebx,eax
cmp dword [ebx+0x10],byte +0x0
jnz 0x1a71f
mov dl,0x1
mov eax,[0x41294c]
call dword 0x2bc0
mov [ebx+0x10],eax
mov edx,esi
mov eax,[ebx+0x10]
call dword 0x13d24
mov [esi+0x4],ebx
pop esi
pop ebx
ret
nop
push ebx
mov ebx,eax
xor eax,eax
mov [edx+0x4],eax
mov eax,[ebx+0x10]
call dword 0x14018
mov eax,[ebx+0x10]
cmp dword [eax+0x8],byte +0x0
jnz 0x1a753
call dword 0x2bf0
xor eax,eax
mov [ebx+0x10],eax
pop ebx
ret
lea eax,[eax+0x0]
push ebx
push esi
push edi
mov ebx,edx
mov edi,eax
mov edx,edi
mov eax,ebx
mov si,0xfff5
call dword 0x2dec
mov eax,[ebx+0x4]
test eax,eax
jz 0x1a77a
mov edx,ebx
call dword 0x1a7bc
mov eax,[ebx+0x8]
push eax
xor ecx,ecx
mov edx,ebx
mov eax,edi
mov esi,[eax]
call dword [esi+0x20]
mov edx,ebx
mov eax,edi
call dword 0x1a704
mov dl,0x1
mov eax,ebx
call dword 0x1ac90
test byte [edi+0x1c],0x10
jz 0x1a7ac
mov cl,0x1
mov dl,0x1
mov eax,ebx
call dword 0x1ac40
xor ecx,ecx
mov edx,ebx
mov eax,edi
mov ebx,[eax]
call dword [ebx+0x10]
pop edi
pop esi
pop ebx
ret
nop
push ebx
push esi
push edi
mov ebx,edx
mov esi,eax
push byte +0x0
mov ecx,[ebx+0x8]
mov edx,ebx
mov eax,esi
mov edi,[eax]
call dword [edi+0x20]
mov cl,0x1
mov edx,ebx
mov eax,esi
mov edi,[eax]
call dword [edi+0x10]
xor edx,edx
mov eax,ebx
call dword 0x1ac90
mov edx,ebx
mov eax,esi
call dword 0x1a730
pop edi
pop esi
pop ebx
ret
mov eax,eax
push ebx
push esi
push edi
mov esi,eax
jmp short 0x1a83e
mov eax,ebx
call dword 0x13f64
mov edi,eax
test byte [edi+0x1d],0x1
jnz 0x1a821
movzx eax,word [dword 0x41b84c]
and ax,[esi+0x1c]
movzx edx,word [dword 0x41b84c]
cmp dx,ax
jnz 0x1a82c
mov edx,edi
mov eax,esi
call dword 0x1a7bc
jmp short 0x1a835
mov edx,edi
mov eax,esi
call dword 0x1a730
mov dl,0x1
mov eax,edi
mov ecx,[eax]
call dword [ecx-0x4]
mov ebx,[esi+0x10]
test ebx,ebx
jnz 0x1a7fb
pop edi
pop esi
pop ebx
ret
add [eax],al
add [eax],dl
add al,[eax]
add [ebx+0x56],dl
push edi
mov ebx,eax
test byte [ebx+0x1c],0x8
jnz 0x1a885
or word [ebx+0x1c],byte +0x8
mov eax,[ebx+0x10]
test eax,eax
jz 0x1a885
mov esi,[eax+0x8]
dec esi
test esi,esi
jl 0x1a885
inc esi
xor edi,edi
mov edx,edi
mov eax,[ebx+0x10]
call dword 0x13e7c
call dword 0x1a850
inc edi
dec esi
jnz 0x1a872
pop edi
pop esi
pop ebx
ret
lea eax,[eax+0x0]
push ebx
mov ebx,eax
mov eax,[ebx+0x14]
test eax,eax
jz 0x1a8ae
call dword 0x14018
mov eax,[ebx+0x14]
cmp dword [eax+0x8],byte +0x0
jnz 0x1a8ae
call dword 0x2bf0
xor eax,eax
mov [ebx+0x14],eax
pop ebx
ret
push ebx
push esi
mov esi,edx
mov ebx,eax
mov edx,esi
mov eax,ebx
call dword 0x1a88c
mov edx,ebx
mov eax,esi
call dword 0x1a88c
pop esi
pop ebx
ret
nop
push ebx
push esi
push edi
push ebp
push ecx
mov [esp],cl
mov edi,edx
mov esi,eax
cmp byte [esp],0x1
jnz 0x1a8eb
test edi,edi
jz 0x1a8eb
mov edx,edi
mov eax,esi
call dword 0x1a8b0
mov eax,[esi+0x10]
test eax,eax
jz 0x1a923
mov ebx,[eax+0x8]
dec ebx
test ebx,ebx
jl 0x1a923
mov edx,ebx
mov eax,[esi+0x10]
call dword 0x13e7c
movzx ecx,byte [esp]
mov edx,edi
mov ebp,[eax]
call dword [ebp+0x10]
dec ebx
mov eax,[esi+0x10]
cmp ebx,[eax+0x8]
jl 0x1a91f
mov eax,[esi+0x10]
mov ebx,[eax+0x8]
dec ebx
test ebx,ebx
jnl 0x1a8fa
pop edx
pop ebp
pop edi
pop esi
pop ebx
ret
lea eax,[eax+0x0]
push ebp
mov ebp,esp
push ecx
push ebx
push esi
push edi
mov esi,edx
mov ebx,eax
xor eax,eax
mov [ebp-0x4],eax
mov eax,[esi+0x20]
test eax,eax
jz 0x1a949
mov eax,[eax+0x18]
mov [ebp-0x4],eax
push ebx
push dword 0x41b6c4
push ebx
push dword 0x41b6ec
movzx eax,word [ebx+0x18]
cmp ax,[ebp-0x4]
setnz cl
mov edx,0x41b9a0
mov eax,esi
mov edi,[eax]
call dword [edi+0x4]
push ebx
push dword 0x41b6d8
push ebx
push dword 0x41b6f8
movzx eax,word [ebp-0x2]
cmp ax,[ebx+0x1a]
setnz cl
mov edx,0x41b9b0
mov eax,esi
mov ebx,[eax]
call dword [ebx+0x4]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
ret
add [eax],al
add bh,bh
db 0xff
db 0xff
inc dword [eax+eax]
add [eax],al
dec esp
gs o16 jz 0x1a9a5
add [eax],al
add bh,bh
db 0xff
db 0xff
inc dword [ebx]
add [eax],al
add [edi+ebp*2+0x70],dl
add [ebx],dh
rol bl,byte 0x90
push ebp
mov ebp,esp
pop ebp
ret 0x8
nop
xor eax,eax
ret
nop
ret
lea eax,[eax+0x0]
push ebx
push esi
mov esi,edx
mov ebx,eax
mov eax,esi
mov edx,[ebx+0x8]
call dword 0x3a70
pop esi
pop ebx
ret
nop
mov eax,[eax+0x4]
ret
ret
lea eax,[eax+0x0]
xor eax,eax
ret
nop
ret
lea eax,[eax+0x0]
push ebx
mov ebx,eax
or word [ebx+0x1c],byte +0x40
pop ebx
ret
mov eax,eax
push ebx
mov ebx,eax
and word [ebx+0x1c],byte -0x41
pop ebx
ret
mov eax,eax
push ebx
mov ebx,eax
and word [ebx+0x1c],byte -0x2
pop ebx
ret
mov eax,eax
ret
lea eax,[eax+0x0]
xchg eax,edx
call dword 0x184e4
ret
nop
xchg eax,edx
mov ecx,[eax]
call dword [ecx+0x10]
ret
nop
push ebp
mov ebp,esp
add esp,byte -0xc
push ebx
push esi
push edi
mov [ebp-0x4],ecx
mov edi,edx
mov ebx,eax
mov esi,[ebp+0x8]
test edi,edi
jz 0x1aa7f
mov edx,esi
mov eax,[ebp-0x4]
call dword 0x7820
test al,al
jnz 0x1aa7f
cmp ebx,[edi+0x4]
jnz 0x1aa7f
mov edx,esi
mov eax,ebx
call dword 0x1aabc
test eax,eax
jz 0x1aa7f
mov [ebp-0xc],esi
mov byte [ebp-0x8],0xb
lea eax,[ebp-0xc]
push eax
push byte +0x0
mov ecx,[dword 0x468cfc]
mov dl,0x1
mov eax,[0x412834]
call dword 0xb548
call dword 0x3464
test byte [ebx+0x1c],0x10
jz 0x1aa99
cmp dword [ebx+0x4],byte +0x0
jz 0x1aa99
push esi
mov ecx,[ebp-0x4]
mov edx,edi
mov eax,[ebx+0x4]
mov ebx,[eax]
call dword [ebx+0x20]
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret 0x4
mov eax,eax
push esi
mov esi,eax
mov eax,edx
mov edx,esi
mov si,0xfff4
call dword 0x2dec
pop esi
ret
mov eax,eax
ret
lea eax,[eax+0x0]
push ebx
push esi
push edi
push ebp
push ecx
mov [esp],edx
mov edi,eax
cmp dword [esp],byte +0x0
jz 0x1aaff
cmp dword [edi+0x10],byte +0x0
jz 0x1aaff
mov eax,[edi+0x10]
mov ebx,[eax+0x8]
dec ebx
test ebx,ebx
jl 0x1aaff
inc ebx
xor ebp,ebp
mov eax,[edi+0x10]
mov edx,ebp
call dword 0x13e7c
mov esi,eax
mov eax,[esi+0x8]
mov edx,[esp]
call dword 0x7820
test al,al
jnz 0x1ab01
inc ebp
dec ebx
jnz 0x1aae0
xor esi,esi
mov eax,esi
pop edx
pop ebp
pop edi
pop esi
pop ebx
ret
lea eax,[eax+0x0]
push ebx
push esi
push edi
add esp,byte -0x8
mov esi,edx
mov ebx,eax
mov eax,[ebx+0x8]
mov edx,esi
call dword 0x3e44
jz 0x1ab93
test esi,esi
jz 0x1ab55
xor edx,edx
mov eax,esi
call dword 0x7ae4
test al,al
jnz 0x1ab55
mov [esp],esi
mov byte [esp+0x4],0xb
push esp
push byte +0x0
mov ecx,[dword 0x468c90]
mov dl,0x1
mov eax,[0x412834]
call dword 0xb548
call dword 0x3464
mov edi,[ebx+0x4]
test edi,edi
jz 0x1ab6b
push esi
mov ecx,[ebx+0x8]
mov edx,ebx
mov eax,edi
mov edi,[eax]
call dword [edi+0x20]
jmp short 0x1ab78
push esi
mov ecx,[ebx+0x8]
xor edx,edx
mov eax,ebx
mov edi,[eax]
call dword [edi+0x20]
xor edx,edx
mov eax,ebx
call dword 0x1ac90
mov edx,esi
mov eax,ebx
call dword 0x1ab9c
mov dl,0x1
mov eax,ebx
call dword 0x1ac90
pop ecx
pop edx
pop edi
pop esi
pop ebx
ret
lea eax,[eax+0x0]
push ebx
push esi
mov esi,edx
mov ebx,eax
lea eax,[ebx+0x8]
mov edx,esi
call dword 0x3a70
pop esi
pop ebx
ret
nop
push ebx
push esi
mov esi,edx
mov ebx,eax
cmp dword [ebx+0x10],byte +0x0
jnz 0x1abce
mov edx,[dword 0x468dac]
mov ecx,esi
mov eax,[0x41294c]
call dword 0x13e08
mov edx,esi
mov eax,[ebx+0x10]
call dword 0x13e7c
pop esi
pop ebx
ret
nop
mov edx,[eax+0x10]
test edx,edx
jz 0x1abe7
mov eax,[edx+0x8]
ret
xor eax,eax
ret
mov eax,eax
push ebx
push esi
push edi
mov esi,edx
mov ebx,eax
mov eax,[ebx+0x4]
test eax,eax
jz 0x1ac39
mov eax,[eax+0x10]
mov edx,ebx
call dword 0x13ed8
test eax,eax
jl 0x1ac39
mov edx,[ebx+0x4]
mov edi,[edx+0x10]
mov edx,[edi+0x8]
test esi,esi
jnl 0x1ac17
xor esi,esi
cmp edx,esi
jg 0x1ac1e
mov esi,edx
dec esi
cmp eax,esi
jz 0x1ac39
mov edx,edi
xchg eax,edx
call dword 0x13d70
mov eax,[ebx+0x4]
mov eax,[eax+0x10]
mov ecx,ebx
mov edx,esi
call dword 0x13ef8
pop edi
pop esi
pop ebx
ret
lea eax,[eax+0x0]
push ebx
push esi
push edi
push ebp
push ecx
mov [esp],cl
mov ebx,edx
mov esi,eax
test bl,bl
jz 0x1ac57
or word [esi+0x1c],byte +0x10
jmp short 0x1ac5c
and word [esi+0x1c],byte -0x11
cmp byte [esp],0x0
jz 0x1ac89
mov eax,esi
call dword 0x1abdc
mov ebp,eax
dec ebp
test ebp,ebp
jl 0x1ac89
inc ebp
xor edi,edi
mov edx,edi
mov eax,esi
call dword 0x1abb0
mov cl,0x1
mov edx,ebx
call dword 0x1ac40
inc edi
dec ebp
jnz 0x1ac73
pop edx
pop ebp
pop edi
pop esi
pop ebx
ret
nop
push ebx
push esi
push edi
add esp,0xffffff00
mov ebx,edx
mov edi,eax
mov esi,[edi+0x4]
test esi,esi
jz 0x1accc
mov eax,esp
mov edx,[edi+0x8]
mov ecx,0xff
call dword 0x3cb8
mov edx,esp
mov eax,esi
call dword 0x2ec4
test eax,eax
jz 0x1accc
test bl,bl
jz 0x1acc8
mov [eax],edi
jmp short 0x1accc
xor edx,edx
mov [eax],edx
add esp,0x100
pop edi
pop esi
pop ebx
ret
mov eax,eax
push ebx
push esi
push edi
mov edi,edx
mov esi,eax
mov edx,esi
mov eax,edi
mov ecx,[eax]
call dword [ecx+0x38]
mov ebx,eax
test bl,bl
jz 0x1acf7
mov edx,esi
mov eax,edi
mov ecx,[eax]
call dword [ecx+0x40]
mov eax,ebx
pop edi
pop esi
pop ebx
ret
lea eax,[eax+0x0]
push ebx
push esi
push edi
mov edi,edx
mov esi,eax
mov edx,esi
mov eax,edi
mov ecx,[eax]
call dword [ecx+0x38]
mov ebx,eax
test bl,bl
jz 0x1ad1f
mov edx,esi
mov eax,edi
mov ecx,[eax]
call dword [ecx+0x3c]
mov eax,ebx
pop edi
pop esi
pop ebx
ret
lea eax,[eax+0x0]
push ebx
cmp dword [eax+0x20],byte +0x0
jz 0x1ad39
mov eax,[eax+0x20]
mov ebx,[eax]
call dword [ebx+0x1c]
pop ebx
ret
call dword 0x2e38
pop ebx
ret
push ebp
mov ebp,esp
pop ebp
ret 0x4
nop
push ebp
mov ebp,esp
push ebx
push esi
push edi
mov edi,[ebp+0x10]
mov esi,[ebp+0xc]
mov ebx,[ebp+0x8]
cmp dword [ebx+0x20],byte +0x0
jnz 0x1ad77
mov ecx,edi
mov edx,esi
mov eax,ebx
call dword 0x2ca4
test al,al
jz 0x1ad70
xor eax,eax
jmp short 0x1ad81
mov eax,0x80004002
jmp short 0x1ad81
push edi
push esi
mov eax,[ebx+0x20]
push eax
mov eax,[eax]
call dword [eax]
pop edi
pop esi
pop ebx
pop ebp
ret 0xc
push ebp
mov ebp,esp
mov eax,[ebp+0x8]
cmp dword [eax+0x20],byte +0x0
jnz 0x1ad99
or eax,byte -0x1
jmp short 0x1ada2
mov eax,[eax+0x20]
push eax
mov eax,[eax]
call dword [eax+0x4]
pop ebp
ret 0x4
mov eax,eax
push ebp
mov ebp,esp
mov eax,[ebp+0x8]
cmp dword [eax+0x20],byte +0x0
jnz 0x1adb9
or eax,byte -0x1
jmp short 0x1adc2
mov eax,[eax+0x20]
push eax
mov eax,[eax]
call dword [eax+0x8]
pop ebp
ret 0x4
mov eax,eax
ret
lea eax,[eax+0x0]
push ebx
push esi
push edi
test dl,dl
jz 0x1addb
add esp,byte -0x10
call dword 0x2f14
mov esi,ecx
mov ebx,edx
mov edi,eax
xor edx,edx
mov eax,edi
call dword 0x2bc0
mov edx,esi
mov eax,edi
mov ecx,[eax]
call dword [ecx]
mov eax,edi
test bl,bl
jz 0x1ae07
call dword 0x2f6c
pop dword [dword fs:0x0]
add esp,byte +0xc
mov eax,edi
pop edi
pop esi
pop ebx
ret
lea eax,[eax+0x0]
ret
lea eax,[eax+0x0]
push ebx
push esi
call dword 0x2fbc
mov ebx,edx
mov esi,eax
mov eax,[esi+0x10]
test eax,eax
jz 0x1ae2d
mov edx,esi
call dword 0x1b04c
mov edx,ebx
and dl,0xfc
mov eax,esi
call dword 0x2be0
test bl,bl
jng 0x1ae44
mov eax,esi
call dword 0x2f64
pop esi
pop ebx
ret
nop
push ebx
cmp word [eax+0xa],byte +0x0
jz 0x1ae5b
mov ebx,eax
mov edx,[eax+0x10]
mov eax,[ebx+0xc]
call dword [ebx+0x8]
pop ebx
ret
lea eax,[eax+0x0]
push ebx
push esi
mov ebx,eax
mov eax,[ebx+0x10]
call dword 0x1b08c
mov eax,[ebx+0x10]
mov si,0xffef
call dword 0x2dec
pop esi
pop ebx
ret
nop
push ebx
push esi
mov esi,edx
mov ebx,eax
mov eax,[ebx+0x10]
cmp esi,eax
jz 0x1aea4
test eax,eax
jz 0x1ae94
mov edx,ebx
call dword 0x1b04c
mov [ebx+0x10],esi
test esi,esi
jz 0x1aea4
mov edx,ebx
mov eax,esi
call dword 0x1b040
pop esi
pop ebx
ret
nop
mov al,0x1
ret
nop
push ebp
mov ebp,esp
pop ebp
ret 0x8
nop
mov eax,[eax+0x10]
mov edx,[eax]
call dword [edx+0x44]
ret
lea eax,[eax+0x0]
push ebx
push esi
test dl,dl
jz 0x1aece
add esp,byte -0x10
call dword 0x2f14
mov ebx,edx
mov esi,eax
xor edx,edx
mov eax,esi
call dword 0x1a59c
mov dl,0x1
mov eax,[0x41294c]
call dword 0x2bc0
mov [esi+0x50],eax
mov eax,esi
test bl,bl
jz 0x1aeff
call dword 0x2f6c
pop dword [dword fs:0x0]
add esp,byte +0xc
mov eax,esi
pop esi
pop ebx
ret
push ebx
push esi
push edi
call dword 0x2fbc
mov ebx,edx
mov edi,eax
mov edx,ebx
and dl,0xfc
mov eax,edi
call dword 0x1a5e8
mov eax,[edi+0x30]
test eax,eax
jz 0x1af2a
mov edx,edi
call dword 0x1a8b0
cmp dword [edi+0x50],byte +0x0
jz 0x1af4b
jmp short 0x1af42
mov eax,esi
call dword 0x13f64
mov edx,eax
mov eax,edi
call dword 0x1b04c
mov esi,[edi+0x50]
cmp dword [esi+0x8],byte +0x0
jg 0x1af32
lea eax,[edi+0x50]
call dword 0xd0e8
test bl,bl
jng 0x1af5e
mov eax,edi
call dword 0x2f64
pop edi
pop esi
pop ebx
ret
mov eax,eax
xor eax,eax
ret
nop
ret
lea eax,[eax+0x0]
push ebx
push esi
push edi
mov ebx,ecx
mov esi,edx
mov edi,eax
mov ecx,ebx
mov edx,esi
mov eax,edi
call dword 0x1a8cc
cmp bl,0x1
jnz 0x1af8f
cmp esi,[edi+0x30]
jnz 0x1af8f
xor eax,eax
mov [edi+0x30],eax
pop edi
pop esi
pop ebx
ret
nop
ret
lea eax,[eax+0x0]
push ebx
cmp word [eax+0x42],byte +0x0
jz 0x1afae
mov ebx,eax
mov edx,eax
mov eax,[ebx+0x44]
call dword [ebx+0x40]
mov al,0x1
pop ebx
ret
xor eax,eax
pop ebx
ret
mov eax,eax
push ebx
cmp word [eax+0x4a],byte +0x0
jz 0x1afca
mov ebx,eax
mov edx,eax
mov eax,[ebx+0x4c]
call dword [ebx+0x48]
mov al,0x1
pop ebx
ret
xor eax,eax
pop ebx
ret
mov eax,eax
push ebp
mov ebp,esp
push ebx
push esi
push edi
mov ebx,eax
mov eax,[ebp+0x8]
cmp eax,[ebx+0x40]
jnz 0x1afe8
mov eax,[ebp+0xc]
cmp eax,[ebx+0x44]
jz 0x1b022
mov eax,[ebx+0x50]
mov esi,[eax+0x8]
dec esi
test esi,esi
jl 0x1b00f
inc esi
xor edi,edi
push dword [ebp+0xc]
push dword [ebp+0x8]
mov edx,edi
mov eax,[ebx+0x50]
call dword 0x13e7c
mov edx,[eax]
call dword [edx+0x10]
inc edi
dec esi
jnz 0x1aff6
mov eax,[ebp+0x8]
mov [ebx+0x40],eax
mov eax,[ebp+0xc]
mov [ebx+0x44],eax
mov eax,ebx
mov edx,[eax]
call dword [edx+0x30]
pop edi
pop esi
pop ebx
pop ebp
ret 0x8
lea eax,[eax+0x0]
push ebx
cmp word [eax+0x3a],byte +0x0
jz 0x1b03e
mov ebx,eax
mov edx,eax
mov eax,[ebx+0x3c]
call dword [ebx+0x38]
pop ebx
ret
mov [edx+0x10],eax
mov eax,[eax+0x50]
call dword 0x13d24
ret
push ebx
push esi
push edi
push ebp
mov ebp,edx
mov edi,eax
mov eax,[edi+0x50]
mov esi,[eax+0x8]
dec esi
test esi,esi
jl 0x1b085
inc esi
xor ebx,ebx
mov eax,[edi+0x50]
mov edx,ebx
call dword 0x13e7c
cmp ebp,eax
jnz 0x1b081
xor eax,eax
mov [ebp+0x10],eax
mov eax,[edi+0x50]
mov edx,ebx
call dword 0x13d70
jmp short 0x1b085
inc ebx
dec esi
jnz 0x1b062
pop ebp
pop edi
pop esi
pop ebx
ret
mov eax,eax
push ebx
push esi
mov esi,edx
mov ebx,eax
mov eax,[ebx+0x30]
cmp esi,eax
jz 0x1b0b4
test eax,eax
jz 0x1b0a4
mov edx,ebx
call dword 0x1a8b0
mov eax,esi
mov [ebx+0x30],eax
test eax,eax
jz 0x1b0b4
mov edx,ebx
call dword 0x1a670
pop esi
pop ebx
ret
nop
push ebp
mov ebp,esp
push ebx
push esi
push edi
test dl,dl
jz 0x1b0ca
add esp,byte -0x10
call dword 0x2f14
mov esi,ecx
mov ebx,edx
mov edi,eax
xor edx,edx
mov eax,edi
call dword 0x2bc0
mov [edi+0xc],esi
movzx eax,byte [ebp+0x8]
mov [edi+0x10],al
mov eax,edi
test bl,bl
jz 0x1b0f8
call dword 0x2f6c
pop dword [dword fs:0x0]
add esp,byte +0xc
mov eax,edi
pop edi
pop esi
pop ebx
pop ebp
ret 0x4
lea eax,[eax+0x0]
push ebx
push esi
call dword 0x2fbc
mov ebx,edx
mov esi,eax
cmp byte [esi+0x10],0x1
jnz 0x1b122
mov eax,[esi+0xc]
call dword 0x2bf0
xor eax,eax
mov [esi+0xc],eax
mov edx,ebx
and dl,0xfc
mov eax,esi
call dword 0x2be0
test bl,bl
jng 0x1b139
mov eax,esi
call dword 0x2f64
pop esi
pop ebx
ret
push ebp
mov ebp,esp
push ebx
push esi
push edi
mov edx,[ebp+0xc]
mov eax,[ebp+0x8]
xor ecx,ecx
push ebp
push dword 0x41c18b
push dword [fs:ecx]
mov [fs:ecx],esp
test edx,edx
jnz 0x1b169
mov ebx,0x80030009
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
jmp short 0x1b19a
mov eax,[eax+0xc]
mov ecx,[ebp+0x10]
mov ebx,[eax]
call dword [ebx+0xc]
cmp dword [ebp+0x14],byte +0x0
jz 0x1b17f
mov edx,[ebp+0x14]
mov [edx],eax
xor ebx,ebx
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
jmp short 0x1b19a
jmp dword 0x30d0
mov ebx,0x1
call dword 0x34e0
mov eax,ebx
pop edi
pop esi
pop ebx
pop ebp
ret 0x10
nop
push ebp
mov ebp,esp
push ebx
push esi
push edi
mov edx,[ebp+0xc]
mov eax,[ebp+0x8]
xor ecx,ecx
push ebp
push dword 0x41c1f3
push dword [fs:ecx]
mov [fs:ecx],esp
test edx,edx
jnz 0x1b1d1
mov ebx,0x80030009
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
jmp short 0x1b202
mov eax,[eax+0xc]
mov ecx,[ebp+0x10]
mov ebx,[eax]
call dword [ebx+0x10]
cmp dword [ebp+0x14],byte +0x0
jz 0x1b1e7
mov edx,[ebp+0x14]
mov [edx],eax
xor ebx,ebx
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
jmp short 0x1b202
jmp dword 0x30d0
mov ebx,0x80030103
call dword 0x34e0
mov eax,ebx
pop edi
pop esi
pop ebx
pop ebp
ret 0x10
nop
push ebp
mov ebp,esp
add esp,byte -0x8
push ebx
push esi
push edi
mov ebx,[ebp+0x14]
mov esi,[ebp+0x8]
xor eax,eax
push ebp
push dword 0x41c276
push dword [fs:eax]
mov [fs:eax],esp
test ebx,ebx
jl 0x1b232
cmp ebx,byte +0x2
jng 0x1b241
mov ebx,0x80030001
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
jmp short 0x1b285
mov eax,[esi+0xc]
mov ecx,ebx
mov edx,[ebp+0xc]
mov ebx,[eax]
call dword [ebx+0x14]
cdq
mov [ebp-0x8],eax
mov [ebp-0x4],edx
mov eax,[ebp+0x18]
test eax,eax
jz 0x1b26a
mov eax,[ebp+0x18]
mov edx,[ebp-0x8]
mov [eax],edx
mov edx,[ebp-0x4]
mov [eax+0x4],edx
xor ebx,ebx
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
jmp short 0x1b285
jmp dword 0x30d0
mov ebx,0x80030009
call dword 0x34e0
mov eax,ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
ret 0x14
push ebp
mov ebp,esp
push ebx
push esi
push edi
mov ebx,[ebp+0x8]
xor eax,eax
push ebp
push dword 0x41c2d9
push dword [fs:eax]
mov [fs:eax],esp
push dword [ebp+0x10]
push dword [ebp+0xc]
mov eax,[ebx+0xc]
call dword 0x1652c
mov eax,[ebx+0xc]
mov edx,[eax]
call dword [edx]
cmp edx,[ebp+0x10]
jnz 0x1b2c4
cmp eax,[ebp+0xc]
jz 0x1b2cd
mov ebx,0x80004005
jmp short 0x1b2cf
xor ebx,ebx
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
jmp short 0x1b2e8
jmp dword 0x30d0
mov ebx,0x8000ffff
call dword 0x34e0
mov eax,ebx
pop edi
pop esi
pop ebx
pop ebp
ret 0xc
lea eax,[eax+0x0]
push ebp
mov ebp,esp
add esp,byte -0x28
push ebx
push esi
push edi
mov eax,[ebp+0xc]
call dword 0x52e4
xor eax,eax
push ebp
push dword 0x41c4e7
push dword [fs:eax]
mov [fs:eax],esp
xor eax,eax
mov [ebp-0x4],eax
mov dword [ebp-0x18],0x0
mov dword [ebp-0x14],0x0
mov dword [ebp-0x20],0x0
mov dword [ebp-0x1c],0x0
xor eax,eax
push ebp
push dword 0x41c4c0
push dword [fs:eax]
mov [fs:eax],esp
cmp dword [ebp+0x14],byte +0x0
jnz 0x1b353
cmp dword [ebp+0x10],0x100000
jna 0x1b35e
jmp short 0x1b355
jng 0x1b35e
mov dword [ebp-0xc],0x100000
jmp short 0x1b364
mov eax,[ebp+0x10]
mov [ebp-0xc],eax
mov eax,[ebp-0xc]
call dword 0x1e60
mov [ebp-0x8],eax
xor eax,eax
push ebp
push dword 0x41c4af
push dword [fs:eax]
mov [fs:eax],esp
jmp dword 0x1b457
cmp dword [ebp+0x14],byte +0x0
jnz 0x1b393
cmp dword [ebp+0x10],0x7fffffff
jna 0x1b39c
jmp short 0x1b395
jng 0x1b39c
mov esi,0x7fffffff
jmp short 0x1b39f
mov esi,[ebp+0x10]
test esi,esi
jng dword 0x1b457
cmp esi,[ebp-0xc]
jng 0x1b3b4
mov eax,[ebp-0xc]
mov [ebp-0x10],eax
jmp short 0x1b3b7
mov [ebp-0x10],esi
mov edx,[ebp-0x8]
mov eax,[ebp+0x8]
mov eax,[eax+0xc]
mov ecx,[ebp-0x10]
mov ebx,[eax]
call dword [ebx+0xc]
mov ebx,eax
test ebx,ebx
jnz 0x1b3e0
call dword 0x3510
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
jmp dword 0x1b4d1
mov eax,ebx
cdq
add [ebp-0x18],eax
adc [ebp-0x14],edx
mov dword [ebp-0x28],0x0
mov dword [ebp-0x24],0x0
lea eax,[ebp-0x28]
push eax
push ebx
mov eax,[ebp-0x8]
push eax
mov eax,[ebp+0xc]
push eax
mov eax,[eax]
call dword [eax+0x10]
mov [ebp-0x4],eax
mov eax,[ebp-0x28]
mov edx,[ebp-0x24]
add [ebp-0x20],eax
adc [ebp-0x1c],edx
cmp dword [ebp-0x4],byte +0x0
jnz 0x1b42c
mov eax,[ebp-0x28]
cmp ebx,eax
jz 0x1b42c
mov dword [ebp-0x4],0x80004005
cmp dword [ebp-0x4],byte +0x0
jz 0x1b444
call dword 0x3510
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
jmp dword 0x1b4d1
sub esi,ebx
mov eax,ebx
cdq
sub [ebp+0x10],eax
sbb [ebp+0x14],edx
test esi,esi
jg dword 0x1b3a7
cmp dword [ebp+0x14],byte +0x0
jnz 0x1b469
cmp dword [ebp+0x10],byte +0x0
ja dword 0x1b382
jmp short 0x1b46f
jg dword 0x1b382
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x41c4b6
mov eax,[ebp-0x8]
call dword 0x1e7c
mov eax,[ebp+0x1c]
test eax,eax
jz 0x1b499
mov eax,[ebp+0x1c]
mov edx,[ebp-0x20]
mov [eax],edx
mov edx,[ebp-0x1c]
mov [eax+0x4],edx
mov eax,[ebp+0x18]
test eax,eax
jz 0x1b4ae
mov eax,[ebp+0x18]
mov edx,[ebp-0x18]
mov [eax],edx
mov edx,[ebp-0x14]
mov [eax+0x4],edx
ret
jmp dword 0x3384
jmp short 0x1b47c
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
jmp short 0x1b4d1
jmp dword 0x30d0
mov dword [ebp-0x4],0x8000ffff
call dword 0x34e0
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x41c4ee
lea eax,[ebp+0xc]
call dword 0x5270
ret
jmp dword 0x3384
jmp short 0x1b4de
mov eax,[ebp-0x4]
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret 0x18
mov eax,eax
push ebp
mov ebp,esp
xor eax,eax
pop ebp
ret 0x8
lea eax,[eax+0x0]
push ebp
mov ebp,esp
mov eax,0x80030102
pop ebp
ret 0x4
push ebp
mov ebp,esp
mov eax,0x80030001
pop ebp
ret 0x18
push ebp
mov ebp,esp
mov eax,0x80030001
pop ebp
ret 0x18
push ebp
mov ebp,esp
push ebx
push esi
push edi
mov ebx,[ebp+0xc]
mov edi,[ebp+0x8]
xor esi,esi
xor eax,eax
push ebp
push dword 0x41c58f
push dword [fs:eax]
mov [fs:eax],esp
test ebx,ebx
jz 0x1b585
mov dword [ebx+0x4],0x2
mov eax,[edi+0xc]
mov edx,[eax]
call dword [edx]
mov [ebx+0x8],eax
mov [ebx+0xc],edx
xor eax,eax
mov [ebx+0x10],eax
xor eax,eax
mov [ebx+0x14],eax
xor eax,eax
mov [ebx+0x18],eax
xor eax,eax
mov [ebx+0x1c],eax
xor eax,eax
mov [ebx+0x20],eax
xor eax,eax
mov [ebx+0x24],eax
mov dword [ebx+0x2c],0x1
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
jmp short 0x1b59e
jmp dword 0x30d0
mov esi,0x8000ffff
call dword 0x34e0
mov eax,esi
pop edi
pop esi
pop ebx
pop ebp
ret 0xc
nop
push ebp
mov ebp,esp
mov eax,[ebp+0xc]
test eax,eax
jz 0x1b5b6
xor edx,edx
mov [eax],edx
mov eax,0x80004001
pop ebp
ret 0x8
nop
push ebp
mov ebp,esp
push ebx
push esi
push edi
mov eax,[0x46d9bc]
call dword 0x14244
mov edi,eax
xor eax,eax
push ebp
push dword 0x41c615
push dword [fs:eax]
mov [fs:eax],esp
mov ebx,[edi+0x8]
dec ebx
test ebx,ebx
jl 0x1b5fd
inc ebx
xor esi,esi
mov edx,esi
mov eax,edi
call dword 0x13e7c
call dword 0x2bf0
inc esi
dec ebx
jnz 0x1b5eb
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x41c61c
mov eax,[0x46d9bc]
call dword 0x142a8
ret
jmp dword 0x3384
jmp short 0x1b60a
mov eax,[0x46d9bc]
call dword 0x2bf0
pop edi
pop esi
pop ebx
pop ebp
ret
nop
call dword 0x1366c
ret
mov eax,eax
push ebp
mov ebp,esp
xor eax,eax
push eax
push dword [ebp+0x14]
push dword [ebp+0x10]
push dword [ebp+0xc]
mov edx,esp
mov eax,[ecx+0x4]
call dword [ecx]
add esp,byte +0xc
pop eax
pop ebp
ret 0x10
mov eax,eax
add eax,byte +0x5
sub edx,eax
mov eax,edx
ret
push ebp
mov ebp,esp
push ebx
push esi
push edi
mov edi,0x46d9e8
cmp dword [edi],byte +0x0
jnz 0x1b6d8
push byte +0x40
push dword 0x1000
push dword 0x1000
push byte +0x0
call dword 0x5c08
mov esi,eax
mov eax,[0x46d9e4]
mov [esi],eax
lea edx,[esi+0x4]
mov eax,0x467ad4
mov ecx,0x2
call dword 0x2050
mov edx,0x41c634
lea eax,[esi+0x5]
call dword 0x1b654
mov [esi+0x6],eax
lea ebx,[esi+0xa]
mov byte [ebx],0xe8
lea edx,[esi+0x4]
mov eax,ebx
call dword 0x1b654
mov [ebx+0x1],eax
mov eax,[edi]
mov [ebx+0x5],eax
mov [edi],ebx
add ebx,byte +0xd
mov eax,ebx
sub eax,esi
cmp eax,0xffc
jl 0x1b6ad
mov [dword 0x46d9e4],esi
mov eax,[edi]
mov ebx,[edi]
mov edx,[ebx+0x5]
mov [edi],edx
mov edx,[ebp+0x8]
mov [ebx+0x5],edx
mov edx,[ebp+0xc]
mov [ebx+0x9],edx
pop edi
pop esi
pop ebx
pop ebp
ret 0x8
test eax,eax
jz 0x1b706
mov edx,[dword 0x46d9e8]
mov [eax+0x5],edx
mov [0x46d9e8],eax
ret
nop
push esp
push eax
push ebp
jz 0x1b776
insb
push edi
imul ebp,[esi+0x64],dword 0x776f
add [eax],al
push ebp
mov ebp,esp
add esp,byte -0x28
push ebx
mov eax,[0x46b7f4]
mov [0x467ae8],eax
lea eax,[ebp-0x28]
push eax
mov eax,[0x467afc]
push eax
mov eax,[0x46b7f4]
push eax
call dword 0x5fb0
cmp eax,byte +0x1
sbb eax,eax
inc eax
test al,al
jz 0x1b752
mov edx,0x406ed8
cmp edx,[ebp-0x24]
jz 0x1b771
test al,al
jz 0x1b767
mov eax,[0x46b7f4]
push eax
mov eax,[0x467afc]
push eax
call dword 0x6378
push dword 0x467ad8
call dword 0x6230
push dword 0x80000000
push byte +0x0
push byte +0x0
push byte +0x0
push byte +0x0
push byte +0x0
push byte +0x0
mov eax,[0x46b7f4]
push eax
push byte +0x0
mov ecx,0x41c7c8
mov edx,[dword 0x467afc]
mov eax,0x80
call dword 0x63a8
mov ebx,eax
cmp word [ebp+0xa],byte +0x0
jz 0x1b7bc
push dword [ebp+0xc]
push dword [ebp+0x8]
call dword 0x1b65c
push eax
push byte -0x4
push ebx
call dword 0x6308
mov eax,ebx
pop ebx
mov esp,ebp
pop ebp
ret 0x8
add [eax],al
add [eax],al
add [eax],al
add [ebx+0x56],dl
mov esi,eax
push byte -0x4
push esi
call dword 0x60f8
mov ebx,eax
push esi
call dword 0x5f00
cmp ebx,0x406ed8
jz 0x1b7ef
mov eax,ebx
call dword 0x1b6f4
pop esi
pop ebx
ret
mov eax,eax
push ebp
mov ebp,esp
xor eax,eax
push ebp
push dword 0x41c898
push dword [fs:eax]
mov [fs:eax],esp
inc dword [dword 0x46d9b8]
jnz 0x1b88a
mov eax,[0x46b7f4]
call dword 0x1366c
mov eax,[0x46d9ac]
mov edx,[eax]
call dword [edx+0x14]
call dword 0x1b5c0
xor edx,edx
xor eax,eax
call dword 0x17554
mov eax,0x46d9c8
call dword 0xd0e8
call dword 0x5888
lea eax,[eax+0xc]
call dword 0xd0e8
mov eax,0x46d9c0
call dword 0xd0e8
mov eax,0x46d9ac
call dword 0x5270
mov eax,0x41c62c
call dword 0x5108
mov eax,0x467ad0
call dword 0xd0e8
call dword 0x1a384
mov eax,0x46d9c4
call dword 0xd0e8
mov eax,0x46d9ac
call dword 0x5270
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x41c89f
ret
jmp dword 0x3384
jmp short 0x1b897
pop ebp
ret
lea eax,[eax+0x0]
lock enter 0x41,0x0
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add ah,bh
enter 0x41,0x8
add [eax],al
add [eax+0x38004010],dh
ds inc eax
add [esi+edi+0x40],al
add [eax+0x3e],cl
inc eax
add [esi+edi+0x40],cl
add [eax+0x3e],al
inc eax
add [eax-0x5bffbfc5],cl
cmp eax,[eax+0x0]
enter 0x41c9,0x0
push esp
xor eax,[eax+0x0]
or al,0xca
inc ecx
add al,bh
leave
inc ecx
add [esp+edx*2],cl
dec edi
jc 0x1b965
gs jc 0x1b969
fs dec esp
imul esi,[ebx+0x74],dword 0x5800408d
leave
inc ecx
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [ecx+ecx*8+0x41],ah
add [eax],cl
add [eax],al
add [eax+ecx*8+0x3e380041],ah
inc eax
add [esi+edi+0x40],al
add [eax+0x3e],cl
inc eax
add [esi+edi+0x40],cl
add [eax+0x3e],al
inc eax
add [eax-0x5bffbfc5],cl
cmp eax,[eax+0x0]
enter 0x41c9,0x0
sub al,0xca
inc ecx
add [edx+ecx*8],cl
inc ecx
add al,bh
leave
inc ecx
add [esi],al
push esp
push ebx
jz 0x1b9ca
arpl [ebx-0x70],bp
mov edx,[eax]
call dword [edx+0x4]
ret
mov eax,eax
push ebx
mov ebx,edx
mov edx,ebx
mov ecx,[eax]
call dword [ecx]
mov eax,ebx
pop ebx
ret
lea eax,[eax+0x0]
push ebx
push esi
test dl,dl
jz 0x1b992
add esp,byte -0x10
call dword 0x2f14
mov ebx,edx
mov esi,eax
xor edx,edx
mov eax,esi
call dword 0x2bc0
mov dl,0x1
mov eax,[0x41294c]
call dword 0x2bc0
mov [esi+0x4],eax
mov eax,esi
test bl,bl
jz 0x1b9c3
call dword 0x2f6c
pop dword [dword fs:0x0]
add esp,byte +0xc
mov eax,esi
pop esi
pop ebx
ret
push ebx
push esi
call dword 0x2fbc
mov ebx,edx
mov esi,eax
mov eax,[esi+0x4]
call dword 0x2bf0
mov edx,ebx
and dl,0xfc
mov eax,esi
call dword 0x2be0
test bl,bl
jng 0x1b9f2
mov eax,esi
call dword 0x2f64
pop esi
pop ebx
ret
lea eax,[eax+0x0]
mov edx,[eax+0x4]
mov ecx,[edx+0x8]
dec ecx
mov eax,edx
mov edx,ecx
call dword 0x13e7c
ret
lea eax,[eax+0x0]
push ebx
push esi
mov ebx,eax
mov eax,ebx
mov edx,[eax]
call dword [edx+0x8]
mov esi,eax
mov eax,[ebx+0x4]
mov edx,[eax+0x8]
dec edx
call dword 0x13d70
mov eax,esi
pop esi
pop ebx
ret
mov eax,eax
mov eax,[eax+0x4]
call dword 0x13d24
ret
lea eax,[eax+0x0]
cmp al,0xca
inc ecx
add [edi],cl
or eax,0x6c654849
jo 0x1ba97
gs insb
arpl [gs:edi+ebp*2+0x72],si
and al,0x11
inc eax
add [ecx],al
pop eax
xchg eax,ebx
cld
mov al,0xe
pop edi
rcl dword [ecx],cl
mov [0x4fc000b9],eax
jns 0x1ba0c
cmp cl,[ecx]
dec eax
gs insb
jo 0x1baaf
outsb
jz 0x1bacf
jnc 0x1ba6d
add bh,bh
dec dword [ebx+0x41ca74c0]
add [edi],cl
or ecx,[ecx+0x48]
gs insb
jo 0x1bacf
jns 0x1baf1
jz 0x1bae5
insd
and al,0x11
inc eax
add [ecx],al
push ebx
xchg eax,ebx
cld
mov al,0xe
pop edi
rcl dword [ecx],cl
mov [0x4fc000b9],eax
jns 0x1ba42
cmp cl,[ecx]
dec eax
gs insb
jo 0x1bae5
outsb
jz 0x1bb05
jnc 0x1baa7
add bh,bh
jmp dword far [eax+0xf0041ca]
adc [ecx+0x43],ecx
jnz 0x1bb21
jz 0x1bb1f
insd
dec eax
gs insb
jo 0x1bb0c
imul esp,[ebp+0x77],dword 0x11247265
inc eax
add [ecx],al
fs xchg eax,ebx
cld
mov al,0xe
pop edi
rcl dword [ecx],cl
mov [0x4fc000b9],eax
jns 0x1ba7c
cmp cl,[ecx]
dec eax
gs insb
jo 0x1bb1f
outsb
jz 0x1bb3f
jnc 0x1bae4
add bh,bh
dec dword [ebx+0x41cae4c0]
add [edi],cl
adc ecx,[ecx+0x45]
js 0x1bb5e
gs outsb
fs dec eax
gs insb
jo 0x1bb4a
imul esp,[ebp+0x77],dword 0xcaa47265
inc ecx
add [ecx],al
xchg ax,bx
cld
mov al,0xe
pop edi
rcl dword [ecx],cl
mov [0x4fc000b9],eax
jns 0x1baba
cmp cl,[ecx]
dec eax
gs insb
jo 0x1bb5d
outsb
jz 0x1bb7d
jnc 0x1bb1d
add bh,bh
jmp dword far [eax-0x35]
inc ecx
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax-0x35],ch
inc ecx
add [eax+eax],cl
add [eax],al
pop eax
js 0x1bb87
add [eax],bh
ds inc eax
add [esi+edi+0x40],al
add [eax+0x3e],cl
inc eax
add [esi+edi+0x40],cl
add [eax+0x3e],al
inc eax
add [eax-0x5bffbfc5],cl
cmp eax,[eax+0x0]
loopne 0x1bba1
inc eax
add [eax*2+0x706c6548],dl
push ebx
jns 0x1bbe4
jz 0x1bbd8
insd
inc ebp
js 0x1bbda
gs jo 0x1bbee
imul ebp,[edi+0x6e],dword 0xcc00408d
add eax,byte -0x24
jmp dword 0x1cbd8
add eax,byte -0x24
jmp dword 0x1cbdc
add eax,byte -0x24
jmp dword 0x1cbf0
add dword [esp+0x4],byte -0x24
jmp dword 0x531c
add dword [esp+0x4],byte -0x24
jmp dword 0x5344
add dword [esp+0x4],byte -0x24
jmp dword 0x5358
add eax,byte -0x28
jmp dword 0x1ca98
add eax,byte -0x28
jmp dword 0x1c2c4
add eax,byte -0x28
jmp dword 0x1c600
add eax,byte -0x28
jmp dword 0x1c8a8
add eax,byte -0x28
jmp dword 0x1c8b0
add eax,byte -0x28
jmp dword 0x1c990
add eax,byte -0x28
jmp dword 0x1c9dc
add dword [esp+0x4],byte -0x28
jmp dword 0x531c
add dword [esp+0x4],byte -0x28
jmp dword 0x5344
add dword [esp+0x4],byte -0x28
jmp dword 0x5358
add eax,byte -0x2c
jmp dword 0x1bf94
add dword [esp+0x4],byte -0x2c
jmp dword 0x531c
add dword [esp+0x4],byte -0x2c
jmp dword 0x5344
add dword [esp+0x4],byte -0x2c
jmp dword 0x5358
int3
int3
int3
cdq
retf
inc ecx
add [ebx-0x52ffbe35],ah
retf
inc ecx
add [ecx-0x76ffbe35],al
retf
inc ecx
add [ecx-0x10ffbe35],dl
retf
inc ecx
add cl,bh
retf
inc ecx
add [ebx],al
int3
inc ecx
add [edi-0x38ffbe35],bh
retf
inc ecx
add bh,cl
retf
inc ecx
add bh,dl
retf
inc ecx
add bh,bl
retf
inc ecx
add bh,ah
retf
inc ecx
add [edi+0x150041cb],dh
int3
inc ecx
add [edi],bl
int3
inc ecx
add [ecx],ch
int3
inc ecx
add [dword 0x40041cc],cl
add [eax],al
add [dword 0xa6b0cdb],al
ret
dec ebx
inc ecx
cdq
db 0xc4
int1
sbb al,0xd1
xchg eax,ebp
cmp [esi+0x36],bl
int3
inc ecx
add [eax+eax],ah
add [eax],al
add [eax],al
add [eax],al
outsb
xor eax,ebp
dec eax
loop 0x1bd1d
push es
inc esp
mov al,[0xfb15f98e]
movsd
leave
aam 0x4e
int3
inc ecx
add [eax],ch
add [eax],al
add [eax],al
add [eax],al
add [ebx-0x6d],dl
cld
mov al,0xe
pop edi
rcl dword [ecx],cl
mov [0x4fc000b9],eax
jns 0x1bc7e
cmp cl,[esi-0x34]
inc ecx
add [eax],ch
add [eax],al
add [eax],al
add [eax],al
add [eax+0x204cf9ea],cl
mov ebp,0xbeb94045
pop ds
and edi,[edx+0x765c3311]
int3
inc ecx
add [eax+eax],ch
add [eax],al
add [eax],al
add [eax],al
mov eax,eax
dec eax
int 0x41
add [esi+0x41cc],al
add [eax],al
add [eax-0x33],cl
inc ecx
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [edx-0x33],ah
inc ecx
add [eax],dh
add [eax],al
add [ecx+edx+0x3e380040],ah
inc eax
add al,dh
bound eax,[eax+0x0]
cld
bound eax,[eax+0x0]
dec esp
ds inc eax
add [eax+0x3e],al
inc eax
add [ebx],cl
inc eax
add [ebx+edi-0x30e3ffc0],ah
inc ecx
add [esi],cl
add [eax],al
add [eax],al
add [edx],al
add [eax],al
add [eax],bh
retf 0x41
or al,0x0
add [eax],al
xchg eax,esp
adc [eax+0x0],al
and [eax],al
add [eax],al
or al,0x54
dec eax
gs insb
jo 0x1bdb6
popad
outsb
popad
gs jc 0x1bd00
mov esp,0x41cd
add [eax],al
add [eax],al
add [eax],al
add [ebp+ecx*8+0x41],bh
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
into
int 0x41
add [eax+eax],cl
add [eax],al
mov al,0x10
inc eax
add [eax],bh
ds inc eax
add [esi+edi+0x40],al
add [eax+0x3e],cl
inc eax
add [esi+edi+0x40],cl
add [eax+0x3e],al
inc eax
add [eax-0x5bffbfc5],cl
cmp eax,[eax+0x0]
loopne 0x1bdf5
inc eax
add [esi],cl
add [eax],al
add [eax],al
add [ecx],al
add [eax],al
add [edx+ecx*8+0x40041],ah
add [eax],al
andps xmm1,oword [eax+0x65]
insb
jo 0x1be2b
imul esp,[ebp+0x77],dword 0x6f4e7265
gs mov eax,eax
hlt
mov bh,0x46
add [edi-0xbffff01],cl
mov bh,0x46
add [eax-0x1],dh
add [eax],al
hlt
mov bh,0x46
add [ecx-0x1],dh
add [eax],al
hlt
mov bh,0x46
add [edx-0x1],dh
add [eax],al
hlt
mov bh,0x46
add [ebx-0x1],dh
add [eax],al
cmp dword [dword 0x46d9f0],byte +0x0
jnz 0x1be30
mov dl,0x1
mov eax,[0x41ccfc]
call dword 0x1beb8
mov edx,eax
test edx,edx
jz 0x1be26
sub edx,byte -0x24
mov eax,0x46d9f0
call dword 0x5288
ret
lea eax,[eax+0x0]
push ebp
mov ebp,esp
push ebx
mov ebx,eax
test ebx,ebx
jz 0x1be42
xor eax,eax
mov [ebx],eax
call dword 0x1be08
mov eax,ebx
mov edx,[dword 0x46d9f0]
mov ecx,0x41ce64
call dword 0x52b4
cmp dword [ebx],byte +0x0
setnz al
pop ebx
pop ebp
ret
add [eax],al
push ebx
xchg eax,ebx
cld
mov al,0xe
pop edi
rcl dword [ecx],cl
mov [0x4fc000b9],eax
jns 0x1be20
cmp dl,[ebx+0x56]
push edi
test dl,dl
jz 0x1be83
add esp,byte -0x10
call dword 0x2f14
mov esi,ecx
mov ebx,edx
mov edi,eax
xor edx,edx
mov eax,edi
call dword 0x2bc0
lea eax,[edi+0x4]
mov edx,esi
call dword 0x5288
mov eax,edi
test bl,bl
jz 0x1beb1
call dword 0x2f6c
pop dword [dword fs:0x0]
add esp,byte +0xc
mov eax,edi
pop edi
pop esi
pop ebx
ret
nop
push ebx
push esi
test dl,dl
jz 0x1bec6
add esp,byte -0x10
call dword 0x2f14
mov ebx,edx
mov esi,eax
xor edx,edx
mov eax,esi
call dword 0x2bc0
mov dl,0x1
mov eax,[0x41294c]
call dword 0x2bc0
mov [esi+0x10],eax
mov dl,0x1
mov eax,[0x41294c]
call dword 0x2bc0
mov [esi+0x14],eax
lea eax,[esi+0x20]
call dword 0x3a1c
mov dword [esi+0x18],0x1
mov eax,esi
test bl,bl
jz 0x1bf15
call dword 0x2f6c
pop dword [dword fs:0x0]
add esp,byte +0xc
mov eax,esi
pop esi
pop ebx
ret
mov eax,eax
push ebx
push esi
push edi
push ebp
call dword 0x2fbc
mov ebx,edx
mov ebp,eax
mov eax,[ebp+0x10]
mov edi,[eax+0x8]
dec edi
test edi,edi
jl 0x1bf57
inc edi
mov esi,[ebp+0x10]
mov edx,[esi+0x8]
dec edx
mov eax,esi
call dword 0x13e7c
mov esi,eax
mov eax,[esi+0x4]
mov edx,[eax]
call dword [edx+0x2c]
mov eax,esi
call dword 0x2bf0
dec edi
jnz 0x1bf35
cmp dword [ebp+0xc],byte +0x0
jz 0x1bf65
lea eax,[ebp+0xc]
call dword 0x5270
mov eax,[ebp+0x14]
call dword 0x2bf0
mov eax,[ebp+0x10]
call dword 0x2bf0
mov edx,ebx
and dl,0xfc
mov eax,ebp
call dword 0x2be0
test bl,bl
jng 0x1bf8c
mov eax,ebp
call dword 0x2f64
pop ebp
pop edi
pop esi
pop ebx
ret
lea eax,[eax+0x0]
push ebp
mov ebp,esp
add esp,byte -0x8
push ebx
push esi
push edi
xor ebx,ebx
mov [ebp-0x4],ebx
mov [ebp-0x8],ecx
mov edi,edx
mov ebx,eax
xor eax,eax
push ebp
push dword 0x41d034
push dword [fs:eax]
mov [fs:eax],esp
mov ecx,edi
mov dl,0x1
mov eax,[0x41cd70]
call dword 0x1be74
mov esi,eax
mov eax,[ebx+0x18]
mov [esi+0x8],eax
mov edx,esi
mov eax,[ebx+0x10]
call dword 0x13d24
mov edx,[ebx+0x18]
mov eax,edi
mov ecx,[eax]
call dword [ecx+0x24]
lea eax,[ebp-0x4]
call dword 0x5270
mov ecx,eax
mov edx,0x41d044
mov eax,edi
call dword 0xd0f8
test al,al
jz 0x1c005
mov edx,esi
mov eax,[ebx+0x14]
call dword 0x13d24
inc dword [ebx+0x18]
mov eax,[ebp-0x8]
mov edx,ebx
test edx,edx
jz 0x1c014
sub edx,byte -0x8
mov ecx,0x41d054
call dword 0x52b4
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x41d03b
lea eax,[ebp-0x4]
call dword 0x5270
ret
jmp dword 0x3384
jmp short 0x1c02b
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
ret
add [eax],al
xchg ax,bx
cld
mov al,0xe
pop edi
rcl dword [ecx],cl
mov [0x4fc000b9],eax
jns 0x1c000
cmp al,[dword 0xa6b0cdb]
ret
dec ebx
inc ecx
cdq
db 0xc4
int1
sbb al,0xd1
xchg eax,ebp
cmp [esi+0x53],bl
push esi
push edi
mov edi,eax
mov eax,[edi+0x10]
mov ebx,[eax+0x8]
dec ebx
test ebx,ebx
jl 0x1c08d
inc ebx
xor esi,esi
mov eax,[edi+0x10]
mov edx,esi
call dword 0x13e7c
mov eax,[eax+0x4]
mov edx,[eax]
call dword [edx+0x28]
inc esi
dec ebx
jnz 0x1c077
pop edi
pop esi
pop ebx
ret
lea eax,[eax+0x0]
push ebp
mov ebp,esp
add esp,byte -0x14
push ebx
push esi
xor edx,edx
mov [ebp-0x14],edx
mov [ebp-0x4],edx
mov [ebp-0x8],eax
xor eax,eax
push ebp
push dword 0x41d1ec
push dword [fs:eax]
mov [fs:eax],esp
mov dl,0x1
mov eax,[0x412efc]
call dword 0x2bc0
mov [ebp-0xc],eax
xor eax,eax
push ebp
push dword 0x41d1a1
push dword [fs:eax]
mov [fs:eax],esp
mov eax,[ebp-0x8]
mov eax,[eax+0x10]
mov esi,[eax+0x8]
dec esi
test esi,esi
jl 0x1c122
inc esi
mov dword [ebp-0x10],0x0
mov eax,[ebp-0x8]
mov eax,[eax+0x10]
mov edx,[ebp-0x10]
call dword 0x13e7c
mov ebx,eax
mov eax,[ebx+0x4]
mov edx,[eax]
call dword [edx+0x18]
test al,al
jz 0x1c11c
lea edx,[ebp-0x14]
mov eax,[ebx+0x4]
mov ecx,[eax]
call dword [ecx+0xc]
mov edx,[ebp-0x14]
mov ecx,ebx
mov eax,[ebp-0xc]
mov ebx,[eax]
call dword [ebx+0x3c]
inc dword [ebp-0x10]
dec esi
jnz 0x1c0e8
mov eax,[ebp-0xc]
mov edx,[eax]
call dword [edx+0x14]
dec eax
jnz 0x1c144
xor edx,edx
mov eax,[ebp-0xc]
mov ecx,[eax]
call dword [ecx+0x18]
mov edx,[eax+0x4]
lea eax,[ebp-0x4]
call dword 0x5288
jmp short 0x1c18b
mov eax,[ebp-0xc]
mov edx,[eax]
call dword [edx+0x14]
test eax,eax
jng 0x1c18b
mov eax,[ebp-0x8]
cmp dword [eax+0xc],byte +0x0
jz 0x1c18b
mov eax,[ebp-0xc]
mov edx,[eax]
call dword [edx+0x90]
mov eax,[ebp-0x8]
mov eax,[eax+0xc]
mov edx,[ebp-0xc]
mov ecx,[eax]
call dword [ecx+0x10]
mov [ebp-0x10],eax
mov edx,[ebp-0x10]
mov eax,[ebp-0xc]
mov ecx,[eax]
call dword [ecx+0x18]
mov edx,[eax+0x4]
lea eax,[ebp-0x4]
call dword 0x5288
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x41d1a8
mov eax,[ebp-0xc]
call dword 0x2bf0
ret
jmp dword 0x3384
jmp short 0x1c198
cmp dword [ebp-0x4],byte +0x0
jz 0x1c1b8
mov eax,[ebp-0x4]
mov edx,[eax]
call dword [edx+0x1c]
jmp short 0x1c1ce
mov ecx,0x41cde0
mov dl,0x1
mov eax,[0x41cb1c]
call dword 0xb50c
call dword 0x3464
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x41d1f3
lea eax,[ebp-0x14]
call dword 0x3a1c
lea eax,[ebp-0x4]
call dword 0x5270
ret
jmp dword 0x3384
jmp short 0x1c1db
pop esi
pop ebx
mov esp,ebp
pop ebp
ret
lea eax,[eax+0x0]
push ebp
mov ebp,esp
add esp,byte -0x10
push ebx
push esi
push edi
xor ebx,ebx
mov [ebp-0x4],ebx
mov [ebp-0xc],ecx
mov [ebp-0x8],edx
mov edi,eax
xor eax,eax
push ebp
push dword 0x41d2a0
push dword [fs:eax]
mov [fs:eax],esp
mov byte [ebp-0xd],0x0
cmp dword [ebp-0xc],byte +0x0
jz 0x1c235
lea eax,[edi+0x20]
mov edx,[ebp-0xc]
call dword 0x3a70
mov eax,[edi+0x10]
mov ebx,[eax+0x8]
dec ebx
test ebx,ebx
jl 0x1c28a
inc ebx
xor esi,esi
mov eax,[edi+0x10]
mov edx,esi
call dword 0x13e7c
mov eax,[eax+0x4]
push eax
lea eax,[ebp-0x4]
call dword 0x5270
mov ecx,eax
mov edx,0x41d2b4
pop eax
call dword 0xd0f8
test al,al
jz 0x1c286
movzx eax,word [ebp+0xc]
push eax
mov eax,[ebp+0x8]
push eax
mov ecx,[ebp-0xc]
mov edx,[ebp-0x8]
mov eax,[ebp-0x4]
mov ebx,[eax]
call dword [ebx+0x40]
mov [ebp-0xd],al
jmp short 0x1c28a
inc esi
dec ebx
jnz 0x1c243
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x41d2a7
lea eax,[ebp-0x4]
call dword 0x5270
ret
jmp dword 0x3384
jmp short 0x1c297
movzx eax,byte [ebp-0xd]
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret 0x8
and al,0x22
jpo 0x1c2d2
scasb
push ds
adc eax,[ebx-0x46]
salc
cmp al,0x32
clc
div dword [eax-0x7b]
push ebp
mov ebp,esp
add esp,byte -0x30
push ebx
push esi
push edi
xor ebx,ebx
mov [ebp-0x30],ebx
mov [ebp-0x4],ebx
mov ebx,ecx
mov [ebp-0xc],edx
mov [ebp-0x8],eax
xor eax,eax
push ebp
push dword 0x41d55b
push dword [fs:eax]
mov [fs:eax],esp
test ebx,ebx
jz 0x1c2fc
mov eax,[ebp-0x8]
add eax,byte +0x20
mov edx,ebx
call dword 0x3a70
mov eax,[ebp-0x8]
mov eax,[eax+0x10]
cmp dword [eax+0x8],byte +0x0
jng dword 0x1c53d
mov dl,0x1
mov eax,[0x41294c]
call dword 0x2bc0
mov [ebp-0x20],eax
xor edx,edx
push ebp
push dword 0x41d536
push dword [fs:edx]
mov [fs:edx],esp
mov eax,[ebp-0x8]
mov eax,[eax+0x10]
mov eax,[eax+0x8]
dec eax
test eax,eax
jl 0x1c373
inc eax
mov [ebp-0x24],eax
mov dword [ebp-0x10],0x0
mov eax,[ebp-0x8]
mov eax,[eax+0x10]
mov edx,[ebp-0x10]
call dword 0x13e7c
mov ebx,eax
mov eax,[ebx+0x4]
mov edx,[ebp-0xc]
mov ecx,[eax]
call dword [ecx+0x10]
test eax,eax
jng 0x1c36b
mov edx,ebx
mov eax,[ebp-0x20]
call dword 0x13d24
inc dword [ebp-0x10]
dec dword [ebp-0x24]
jnz 0x1c342
mov eax,[ebp-0x20]
mov eax,[eax+0x8]
test eax,eax
jnz 0x1c3ad
mov eax,[ebp-0xc]
call dword 0x3eac
mov [ebp-0x2c],eax
mov byte [ebp-0x28],0x6
lea eax,[ebp-0x2c]
push eax
push byte +0x0
mov ecx,0x41cde8
mov dl,0x1
mov eax,[0x41cb1c]
call dword 0xb548
call dword 0x3464
jmp dword 0x1c520
dec eax
jnz 0x1c3ca
xor edx,edx
mov eax,[ebp-0x20]
call dword 0x13e7c
mov eax,[eax+0x4]
mov edx,[ebp-0xc]
mov ecx,[eax]
call dword [ecx+0x20]
jmp dword 0x1c520
mov dl,0x1
mov eax,[0x412efc]
call dword 0x2bc0
mov [ebp-0x18],eax
xor eax,eax
push ebp
push dword 0x41d519
push dword [fs:eax]
mov [fs:eax],esp
mov eax,[ebp-0x20]
mov eax,[eax+0x8]
dec eax
test eax,eax
jl dword 0x1c491
inc eax
mov [ebp-0x24],eax
mov dword [ebp-0x10],0x0
mov edx,[ebp-0x10]
mov eax,[ebp-0x20]
call dword 0x13e7c
mov ebx,eax
mov eax,[ebx+0x4]
mov edx,[ebp-0xc]
mov ecx,[eax]
call dword [ecx+0x14]
mov [ebp-0x1c],eax
cmp dword [ebp-0x1c],byte +0x0
jz 0x1c485
xor eax,eax
push ebp
push dword 0x41d47e
push dword [fs:eax]
mov [fs:eax],esp
mov eax,[ebp-0x1c]
mov edx,[eax]
call dword [edx+0x14]
mov esi,eax
dec esi
test esi,esi
jl 0x1c468
inc esi
mov dword [ebp-0x14],0x0
lea ecx,[ebp-0x30]
mov edx,[ebp-0x14]
mov eax,[ebp-0x1c]
mov edi,[eax]
call dword [edi+0xc]
mov edx,[ebp-0x30]
mov ecx,ebx
mov eax,[ebp-0x18]
mov edi,[eax]
call dword [edi+0x3c]
inc dword [ebp-0x14]
dec esi
jnz 0x1c447
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x41d485
mov eax,[ebp-0x1c]
call dword 0x2bf0
ret
jmp dword 0x3384
jmp short 0x1c475
inc dword [ebp-0x10]
dec dword [ebp-0x24]
jnz dword 0x1c401
mov eax,[ebp-0x8]
cmp dword [eax+0xc],byte +0x0
jz 0x1c4df
mov eax,[ebp-0x18]
mov edx,[eax]
call dword [edx+0x90]
mov eax,[ebp-0x8]
mov eax,[eax+0xc]
mov edx,[ebp-0x18]
mov ecx,[eax]
call dword [ecx+0xc]
mov ebx,eax
test ebx,ebx
jl 0x1c503
mov edx,ebx
mov eax,[ebp-0x18]
mov ecx,[eax]
call dword [ecx+0x18]
mov esi,eax
lea ecx,[ebp-0x4]
mov edx,ebx
mov eax,[ebp-0x18]
mov ebx,[eax]
call dword [ebx+0xc]
mov eax,[esi+0x4]
mov edx,[ebp-0x4]
mov ecx,[eax]
call dword [ecx+0x20]
jmp short 0x1c503
xor edx,edx
mov eax,[ebp-0x18]
mov ecx,[eax]
call dword [ecx+0x18]
mov esi,eax
lea ecx,[ebp-0x4]
xor edx,edx
mov eax,[ebp-0x18]
mov ebx,[eax]
call dword [ebx+0xc]
mov eax,[esi+0x4]
mov edx,[ebp-0x4]
mov ecx,[eax]
call dword [ecx+0x20]
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x41d520
mov eax,[ebp-0x18]
call dword 0x2bf0
ret
jmp dword 0x3384
jmp short 0x1c510
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x41d53d
mov eax,[ebp-0x20]
call dword 0x2bf0
ret
jmp dword 0x3384
jmp short 0x1c52d
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x41d562
lea eax,[ebp-0x30]
call dword 0x3a1c
lea eax,[ebp-0x4]
call dword 0x3a1c
ret
jmp dword 0x3384
jmp short 0x1c54a
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret
lea eax,[eax+0x0]
push ebp
mov ebp,esp
push byte +0x0
push byte +0x0
push ebx
push esi
mov esi,edx
mov ebx,eax
xor eax,eax
push ebp
push dword 0x41d5e0
push dword [fs:eax]
mov [fs:eax],esp
mov eax,[ebp+0x8]
mov edx,[eax-0x8]
mov eax,[ebp+0x8]
mov eax,[eax-0x4]
mov eax,[eax+0x14]
call dword 0x13e7c
mov edx,[eax+0x4]
lea eax,[ebp-0x4]
call dword 0x5288
lea eax,[ebp-0x8]
mov edx,[ebp-0x4]
mov ecx,0x41d5f0
call dword 0x52b4
mov eax,[ebp-0x8]
mov ecx,esi
mov edx,ebx
mov ebx,[eax]
call dword [ebx+0x3c]
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x41d5e7
lea eax,[ebp-0x8]
call dword 0x5270
lea eax,[ebp-0x4]
call dword 0x5270
ret
jmp dword 0x3384
jmp short 0x1c5cf
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
ret
add [eax],al
add [esi-0x6d],ah
cld
mov al,0xe
pop edi
rcl dword [ecx],cl
mov [0x4fc000b9],eax
jns 0x1c5ac
cmp dl,[ebp-0x75]
in al,dx
add esp,byte -0x34
push ebx
push esi
push edi
xor ebx,ebx
mov [ebp-0x34],ebx
mov [ebp-0x30],ebx
mov [ebp-0x2c],ebx
mov [ebp-0x28],ebx
mov [ebp-0xc],ebx
mov [ebp-0x10],ebx
mov [ebp-0x18],ecx
mov [ebp-0x14],edx
mov [ebp-0x4],eax
xor eax,eax
push ebp
push dword 0x41d879
push dword [fs:eax]
mov [fs:eax],esp
xor eax,eax
mov [ebp-0x1c],eax
cmp dword [ebp-0x18],byte +0x0
jz 0x1c64d
mov eax,[ebp-0x4]
add eax,byte +0x20
mov edx,[ebp-0x18]
call dword 0x3a70
mov eax,[ebp-0x4]
mov eax,[eax+0x14]
mov eax,[eax+0x8]
test eax,eax
jnz 0x1c672
mov ecx,0x41cdf0
mov dl,0x1
mov eax,[0x41cb1c]
call dword 0xb50c
call dword 0x3464
jmp short 0x1c6c0
mov ebx,eax
dec ebx
test ebx,ebx
jl 0x1c6c0
inc ebx
xor esi,esi
mov eax,[ebp-0x4]
mov eax,[eax+0x14]
mov edx,esi
call dword 0x13e7c
mov edx,[eax+0x4]
lea eax,[ebp-0xc]
call dword 0x5288
lea eax,[ebp-0x28]
mov edx,[ebp-0xc]
mov ecx,0x41d888
call dword 0x52b4
mov eax,[ebp-0x28]
mov ecx,[ebp-0x18]
mov edx,[ebp-0x14]
mov edi,[eax]
call dword [edi+0x38]
test al,al
jz 0x1c6bc
inc dword [ebp-0x1c]
mov [ebp-0x8],esi
inc esi
dec ebx
jnz 0x1c67c
cmp dword [ebp-0x1c],byte +0x0
jnz 0x1c6dc
mov ecx,0x41cdf8
mov dl,0x1
mov eax,[0x41cb1c]
call dword 0xb50c
call dword 0x3464
cmp dword [ebp-0x1c],byte +0x1
jnz 0x1c6f4
push ebp
mov edx,[ebp-0x18]
mov eax,[ebp-0x14]
call dword 0x1c56c
pop ecx
jmp dword 0x1c838
mov eax,[ebp-0x4]
cmp dword [eax+0xc],byte +0x0
jz dword 0x1c82b
lea eax,[ebp-0x10]
mov edx,[ebp-0x4]
mov edx,[edx+0xc]
mov ecx,0x41d898
call dword 0x52b4
cmp dword [ebp-0x10],byte +0x0
jz dword 0x1c81c
mov dl,0x1
mov eax,[0x412efc]
call dword 0x2bc0
mov [ebp-0x20],eax
xor edx,edx
push ebp
push dword 0x41d815
push dword [fs:edx]
mov [fs:edx],esp
mov eax,[ebp-0x4]
mov eax,[eax+0x14]
mov ebx,[eax+0x8]
dec ebx
test ebx,ebx
jl 0x1c7ac
inc ebx
xor esi,esi
mov eax,[ebp-0x4]
mov eax,[eax+0x14]
mov edx,esi
call dword 0x13e7c
mov [ebp-0x24],eax
lea eax,[ebp-0xc]
mov edx,[ebp-0x24]
mov edx,[edx+0x4]
call dword 0x5288
lea eax,[ebp-0x2c]
mov edx,[ebp-0xc]
mov ecx,0x41d888
call dword 0x52b4
mov eax,[ebp-0x2c]
mov ecx,[ebp-0x18]
mov edx,[ebp-0x14]
mov edi,[eax]
call dword [edi+0x38]
test al,al
jz 0x1c7a8
lea edx,[ebp-0x30]
mov eax,[ebp-0x24]
mov eax,[eax+0x4]
mov ecx,[eax]
call dword [ecx+0xc]
mov edx,[ebp-0x30]
mov ecx,[ebp-0x24]
mov eax,[ebp-0x20]
mov edi,[eax]
call dword [edi+0x3c]
inc esi
dec ebx
jnz 0x1c74c
mov edx,[ebp-0x20]
mov eax,[ebp-0x10]
mov ecx,[eax]
call dword [ecx+0x14]
test eax,eax
jl 0x1c7f2
mov edx,eax
mov eax,[ebp-0x20]
mov ecx,[eax]
call dword [ecx+0x18]
mov ebx,eax
lea eax,[ebp-0xc]
mov edx,[ebx+0x4]
call dword 0x5288
lea eax,[ebp-0x34]
mov edx,[ebp-0xc]
mov ecx,0x41d888
call dword 0x52b4
mov eax,[ebp-0x34]
mov ecx,[ebp-0x18]
mov edx,[ebp-0x14]
mov ebx,[eax]
call dword [ebx+0x3c]
jmp short 0x1c7ff
push ebp
mov edx,[ebp-0x18]
mov eax,[ebp-0x14]
call dword 0x1c56c
pop ecx
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x41d838
mov eax,[ebp-0x20]
call dword 0x2bf0
ret
jmp dword 0x3384
jmp short 0x1c80c
push ebp
mov edx,[ebp-0x18]
mov eax,[ebp-0x14]
call dword 0x1c56c
pop ecx
jmp short 0x1c838
push ebp
mov edx,[ebp-0x18]
mov eax,[ebp-0x14]
call dword 0x1c56c
pop ecx
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x41d880
lea eax,[ebp-0x34]
call dword 0x5270
lea eax,[ebp-0x30]
call dword 0x3a1c
lea eax,[ebp-0x2c]
mov edx,[dword 0x41cae0]
mov ecx,0x2
call dword 0x465c
lea eax,[ebp-0x10]
call dword 0x5270
lea eax,[ebp-0xc]
call dword 0x5270
ret
jmp dword 0x3384
jmp short 0x1c845
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret
add [esi-0x6d],ah
cld
mov al,0xe
pop edi
rcl dword [ecx],cl
mov [0x4fc000b9],eax
jns 0x1c844
cmp dh,ah
push dword 0xca3bf653
sub al,0x48
stosd
sar byte [edi],cl
ret 0x803f
sbb eax,0xf7e7e88b
db 0xff
inc ebx
mov eax,eax
push ebp
mov ebp,esp
push byte +0x0
push byte +0x0
push byte +0x0
push ebx
push esi
push edi
mov ebx,ecx
mov [ebp-0xc],edx
mov edi,eax
xor eax,eax
push ebp
push dword 0x41d96f
push dword [fs:eax]
mov [fs:eax],esp
test ebx,ebx
jz 0x1c8df
lea eax,[edi+0x20]
mov edx,ebx
call dword 0x3a70
mov eax,[edi+0x14]
cmp dword [eax+0x8],byte +0x0
jnz 0x1c8fe
mov ecx,0x41ce00
mov dl,0x1
mov eax,[0x41cb1c]
call dword 0xb50c
call dword 0x3464
mov eax,[edi+0x14]
mov ebx,[eax+0x8]
dec ebx
test ebx,ebx
jl 0x1c951
inc ebx
xor esi,esi
mov eax,[edi+0x14]
mov edx,esi
call dword 0x13e7c
mov edx,[eax+0x4]
lea eax,[ebp-0x4]
call dword 0x5288
lea eax,[ebp-0x8]
mov edx,[ebp-0x4]
mov ecx,0x41d980
call dword 0x52b4
mov edx,[ebp-0xc]
mov eax,[ebp-0x8]
mov ecx,[eax]
call dword [ecx+0x30]
test al,al
jz 0x1c94d
mov edx,[ebp-0xc]
mov eax,[ebp-0x8]
mov ecx,[eax]
call dword [ecx+0x34]
jmp short 0x1c951
inc esi
dec ebx
jnz 0x1c90c
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x41d976
lea eax,[ebp-0x8]
call dword 0x5270
lea eax,[ebp-0x4]
call dword 0x5270
ret
jmp dword 0x3384
jmp short 0x1c95e
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret
add [eax],al
add [esi-0x6d],ah
cld
mov al,0xe
pop edi
rcl dword [ecx],cl
mov [0x4fc000b9],eax
jns 0x1c93c
cmp dl,[ebp-0x75]
in al,dx
push ecx
push ebx
mov [ebp-0x4],edx
mov ebx,eax
mov eax,[ebp-0x4]
call dword 0x52e4
xor eax,eax
push ebp
push dword 0x41d9d1
push dword [fs:eax]
mov [fs:eax],esp
lea eax,[ebx+0xc]
mov edx,[ebp-0x4]
call dword 0x5288
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x41d9d8
lea eax,[ebp-0x4]
call dword 0x5270
ret
jmp dword 0x3384
jmp short 0x1c9c8
pop ebx
pop ecx
pop ebp
ret
push ebp
mov ebp,esp
push ecx
push ebx
push esi
push edi
mov [ebp-0x4],ecx
mov edi,edx
mov ebx,eax
mov esi,[ebp+0xc]
mov eax,[ebp-0x4]
call dword 0x3e9c
xor eax,eax
push ebp
push dword 0x41da86
push dword [fs:eax]
mov [fs:eax],esp
cmp dword [ebp-0x4],byte +0x0
jz 0x1ca14
lea eax,[ebx+0x20]
mov edx,[ebp-0x4]
call dword 0x3a70
mov eax,esi
dec ax
jz 0x1ca2d
dec ax
jz 0x1ca4b
dec ax
jz 0x1ca54
sub ax,byte +0x5
jz 0x1ca3c
jmp short 0x1ca5d
mov ecx,[ebp-0x4]
mov edx,[ebp+0x8]
mov eax,ebx
call dword 0x1c600
jmp short 0x1ca6e
mov ecx,[ebp-0x4]
mov edx,[ebp+0x8]
mov eax,ebx
call dword 0x1c600
jmp short 0x1ca6e
mov eax,ebx
call dword 0x1c064
jmp short 0x1ca6e
mov eax,ebx
call dword 0x1c094
jmp short 0x1ca6e
push esi
mov eax,[ebp+0x8]
push eax
mov ecx,[ebp-0x4]
mov edx,edi
mov eax,ebx
call dword 0x1c1fc
mov bl,0x1
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x41da8d
lea eax,[ebp-0x4]
call dword 0x3a1c
ret
jmp dword 0x3384
jmp short 0x1ca7d
mov eax,ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
ret 0x8
nop
push ebp
mov ebp,esp
add esp,byte -0x20
push ebx
xor ebx,ebx
mov [ebp-0x4],ebx
mov [ebp-0x8],ebx
mov ebx,ecx
mov [ebp-0x10],edx
mov [ebp-0xc],eax
xor eax,eax
push ebp
push dword 0x41dbb5
push dword [fs:eax]
mov [fs:eax],esp
mov byte [ebp-0x11],0x0
mov byte [ebp-0x19],0x0
test ebx,ebx
jz 0x1cad6
mov eax,[ebp-0xc]
add eax,byte +0x20
mov edx,ebx
call dword 0x3a70
mov eax,[ebp-0xc]
mov eax,[eax+0x10]
mov eax,[eax+0x8]
dec eax
test eax,eax
jl dword 0x1cb97
inc eax
mov [ebp-0x20],eax
mov dword [ebp-0x18],0x0
mov eax,[ebp-0xc]
mov eax,[eax+0x10]
mov edx,[ebp-0x18]
call dword 0x13e7c
mov edx,[eax+0x4]
lea eax,[ebp-0x4]
call dword 0x5288
xor eax,eax
push ebp
push dword 0x41db84
push dword [fs:eax]
mov [fs:eax],esp
lea eax,[ebp-0x8]
call dword 0x5270
mov ecx,eax
mov edx,0x41dbc8
mov eax,[ebp-0x4]
call dword 0xd0f8
test al,al
jz 0x1cb4a
mov eax,[ebp-0x8]
mov edx,[eax]
call dword [edx+0x40]
mov [ebp-0x19],al
xor edx,edx
mov eax,[ebp-0x8]
mov ecx,[eax]
call dword [ecx+0x44]
mov edx,[ebp-0x10]
mov eax,[ebp-0x4]
mov ecx,[eax]
call dword [ecx+0x10]
test eax,eax
jng 0x1cb64
mov byte [ebp-0x11],0x1
call dword 0x3510
jmp short 0x1cb97
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x41db8b
cmp dword [ebp-0x8],byte +0x0
jz 0x1cb83
movzx edx,byte [ebp-0x19]
mov eax,[ebp-0x8]
mov ecx,[eax]
call dword [ecx+0x44]
ret
jmp dword 0x3384
jmp short 0x1cb71
inc dword [ebp-0x18]
dec dword [ebp-0x20]
jnz dword 0x1caf3
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x41dbbc
lea eax,[ebp-0x8]
call dword 0x5270
lea eax,[ebp-0x4]
call dword 0x5270
ret
jmp dword 0x3384
jmp short 0x1cba4
movzx eax,byte [ebp-0x11]
pop ebx
mov esp,ebp
pop ebp
ret
add [eax],al
add [ecx],cl
pop dword [ecx+0x69]
dec ecx
pop esi
cdq
dec eax
sahf
adc ebx,[edi+0x7549c1e3]
mov ax,[eax+0x1c]
ret
push ebx
push esi
mov esi,edx
mov ebx,eax
mov eax,esi
mov edx,[ebx+0x20]
call dword 0x3a70
pop esi
pop ebx
ret
nop
push ebx
push esi
push edi
push ebp
mov ebp,edx
mov esi,eax
mov eax,[esi+0x14]
mov ebx,[eax+0x8]
dec ebx
cmp ebx,byte +0x0
jl 0x1cc25
mov edx,ebx
mov eax,[esi+0x14]
call dword 0x13e7c
cmp ebp,[eax+0x8]
jnz 0x1cc1f
mov edx,ebx
mov eax,[esi+0x14]
call dword 0x13d70
jmp short 0x1cc25
dec ebx
cmp ebx,byte -0x1
jnz 0x1cc04
mov eax,[esi+0x10]
mov ebx,[eax+0x8]
dec ebx
cmp ebx,byte +0x0
jl 0x1cc5b
mov edx,ebx
mov eax,[esi+0x10]
call dword 0x13e7c
mov edi,eax
cmp ebp,[edi+0x8]
jnz 0x1cc55
mov edx,ebx
mov eax,[esi+0x10]
call dword 0x13d70
mov eax,edi
call dword 0x2bf0
jmp short 0x1cc5b
dec ebx
cmp ebx,byte -0x1
jnz 0x1cc31
pop ebp
pop edi
pop esi
pop ebx
ret
push ebp
mov ebp,esp
xor eax,eax
push ebp
push dword 0x41dc91
push dword [fs:eax]
mov [fs:eax],esp
inc dword [dword 0x46d9ec]
jnz 0x1cc83
mov eax,0x46d9f0
call dword 0x5270
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x41dc98
ret
jmp dword 0x3384
jmp short 0x1cc90
pop ebp
ret
mov eax,eax
push ebp
mov ebp,esp
push ecx
push ebx
push esi
push edi
mov [ebp-0x4],ecx
mov edi,edx
mov ebx,eax
mov eax,[ebp-0x4]
call dword 0x3e9c
xor eax,eax
push ebp
push dword 0x41dd59
push dword [fs:eax]
mov [fs:eax],esp
xor esi,esi
movzx eax,bl
cmp byte [eax+0x46da1c],0x0
jnz 0x1cd43
cmp dword [dword 0x46da18],byte +0x0
jz 0x1cd24
test bl,bl
jnz 0x1cd0c
cmp byte [dword 0x46da24],0x0
jnz 0x1cd0c
mov ecx,0x41dd70
mov edx,[dword 0x46da04]
mov al,0x4
call dword 0x1cc9c
mov [0x46da04],eax
cmp byte [dword 0x46da24],0x0
jnz 0x1cd0c
lea eax,[ebp-0x4]
call dword 0x3a1c
mov eax,[ebp-0x4]
call dword 0x3eac
push eax
mov eax,[0x46da18]
push eax
call dword 0x5b50
mov esi,eax
jmp short 0x1cd26
xor esi,esi
test esi,esi
jnz 0x1cd2e
mov esi,edi
jmp short 0x1cd39
test bl,bl
jz 0x1cd39
mov byte [dword 0x46da24],0x1
movzx eax,bl
mov byte [eax+0x46da1c],0x1
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x41dd60
lea eax,[ebp-0x4]
call dword 0x3a1c
ret
jmp dword 0x3384
jmp short 0x1cd50
mov eax,esi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
ret
db 0xff
db 0xff
db 0xff
dec dword [edi]
add [eax],al
add [edi+0x65],al
jz 0x1cdc1
outsd
outsb
imul esi,[edi+ebp*2+0x72],dword 0x6f666e49
inc ecx
add [ebp-0x75],dl
in al,dx
push ebx
mov ebx,[ebp+0x8]
cmp byte [dword 0x46da1c],0x0
jnz 0x1cdb0
mov ecx,0x41ddf4
mov edx,[dword 0x46d9f4]
xor eax,eax
call dword 0x1cc9c
mov [0x46d9f4],eax
push ebx
call dword [dword 0x46d9f4]
jmp short 0x1cde7
or eax,byte -0x1
mov edx,ebx
add edx,byte -0x4c
sub edx,byte +0x2
jc 0x1cdcf
jz 0x1cdd3
dec edx
jz 0x1cdd7
dec edx
sub edx,byte +0x2
jnc 0x1cddc
mov eax,0x1
jmp short 0x1cddc
xor eax,eax
jmp short 0x1cddc
xor ebx,ebx
jmp short 0x1cddc
mov ebx,0x1
cmp eax,byte -0x1
jnz 0x1cde7
push ebx
call dword 0x60d8
pop ebx
pop ebp
ret 0x4
db 0xff
db 0xff
db 0xff
call dword [eax]
add [eax],al
add [edi+0x65],al
jz 0x1ce4b
jns 0x1ce6d
jz 0x1ce61
insd
dec ebp
gs jz 0x1ce73
imul esp,[ebx+0x73],dword 0x0
push ebp
mov ebp,esp
push ebx
push esi
push edi
mov edi,[ebp+0xc]
mov ebx,[ebp+0x8]
cmp byte [dword 0x46da1e],0x0
jnz 0x1ce40
mov ecx,0x41de88
mov edx,[dword 0x46d9fc]
mov al,0x2
call dword 0x1cc9c
mov [0x46d9fc],eax
push edi
push ebx
call dword [dword 0x46d9fc]
mov esi,eax
jmp short 0x1ce75
xor esi,esi
mov eax,edi
and eax,byte +0x3
test al,al
jnz 0x1ce70
cmp dword [ebx+0x8],byte +0x0
jng 0x1ce75
cmp dword [ebx+0xc],byte +0x0
jng 0x1ce75
push byte +0x0
call dword [dword 0x46d9f4]
cmp eax,[ebx]
jng 0x1ce75
push byte +0x1
call dword [dword 0x46d9f4]
cmp eax,[ebx+0x4]
jng 0x1ce75
mov esi,0x12340042
mov eax,esi
pop edi
pop esi
pop ebx
pop ebp
ret 0x8
add [eax],al
db 0xff
db 0xff
db 0xff
dec dword [edi]
add [eax],al
add [ebp+0x6f],cl
outsb
imul esi,[edi+ebp*2+0x72],dword 0x6d6f7246
push edx
arpl [gs:eax+eax+0x55],si
mov ebp,esp
add esp,byte -0x2c
push ebx
push esi
mov ebx,[ebp+0xc]
mov esi,[ebp+0x8]
cmp byte [dword 0x46da1d],0x0
jnz 0x1ced0
mov ecx,0x41df1c
mov edx,[dword 0x46d9f8]
mov al,0x1
call dword 0x1cc9c
mov [0x46d9f8],eax
push ebx
push esi
call dword [dword 0x46d9f8]
jmp short 0x1cf0a
mov eax,ebx
and eax,byte +0x3
test al,al
jz 0x1cee0
mov eax,0x12340042
jmp short 0x1cf0a
push esi
call dword 0x6170
test eax,eax
jz 0x1cef6
lea eax,[ebp-0x2c]
push eax
push esi
call dword 0x6108
jmp short 0x1cf00
lea eax,[ebp-0x10]
push eax
push esi
call dword 0x6110
push ebx
lea eax,[ebp-0x10]
push eax
call dword 0x1ce08
pop esi
pop ebx
mov esp,ebp
pop ebp
ret 0x8
add [eax],al
db 0xff
db 0xff
db 0xff
call dword [ecx]
add [eax],al
add [ebp+0x6f],cl
outsb
imul esi,[edi+ebp*2+0x72],dword 0x6d6f7246
push edi
imul ebp,[esi+0x64],dword 0x776f
add [ebp-0x75],dl
in al,dx
push ebx
push esi
push edi
mov edi,[ebp+0x10]
cmp byte [dword 0x46da1f],0x0
jnz 0x1cf6a
mov ecx,0x41dfb4
mov edx,[dword 0x46da00]
mov al,0x3
call dword 0x1cc9c
mov [0x46da00],eax
push edi
push dword [ebp+0xc]
push dword [ebp+0x8]
call dword [dword 0x46da00]
mov ebx,eax
jmp short 0x1cfa0
xor ebx,ebx
mov eax,edi
and eax,byte +0x3
test al,al
jnz 0x1cf9b
mov esi,[ebp+0x8]
test esi,esi
jl 0x1cfa0
push byte +0x0
call dword [dword 0x46d9f4]
cmp esi,eax
jnl 0x1cfa0
cmp dword [ebp+0xc],byte +0x0
jl 0x1cfa0
push byte +0x1
call dword [dword 0x46d9f4]
cmp eax,[ebp+0xc]
jng 0x1cfa0
mov ebx,0x12340042
mov eax,ebx
pop edi
pop esi
pop ebx
pop ebp
ret 0xc
add [eax],al
add bh,bh
db 0xff
db 0xff
call dword [eax]
add [eax],al
add [ebp+0x6f],cl
outsb
imul esi,[edi+ebp*2+0x72],dword 0x6d6f7246
push eax
outsd
imul ebp,[esi+0x74],dword 0x0
push ebp
mov ebp,esp
add esp,byte -0x10
push ebx
push esi
push edi
mov esi,[ebp+0xc]
mov edi,[ebp+0x8]
cmp byte [dword 0x46da20],0x0
jnz 0x1d003
mov ecx,0x41e084
mov edx,[dword 0x46da04]
mov al,0x4
call dword 0x1cc9c
mov [0x46da04],eax
push esi
push edi
call dword [dword 0x46da04]
mov ebx,eax
jmp short 0x1d071
xor ebx,ebx
cmp edi,0x12340042
jnz 0x1d071
test esi,esi
jz 0x1d071
cmp dword [esi],byte +0x28
jc 0x1d071
push byte +0x0
lea eax,[ebp-0x10]
push eax
push byte +0x0
push byte +0x30
call dword 0x6350
test eax,eax
jz 0x1d071
xor eax,eax
mov [esi+0x4],eax
xor eax,eax
mov [esi+0x8],eax
push byte +0x0
call dword [dword 0x46d9f4]
mov [esi+0xc],eax
push byte +0x1
call dword [dword 0x46d9f4]
mov [esi+0x10],eax
push esi
lea edi,[esi+0x14]
lea esi,[ebp-0x10]
movsd
movsd
movsd
movsd
pop esi
mov dword [esi+0x24],0x1
cmp dword [esi],byte +0x48
jc 0x1d06f
push dword 0x41e094
lea eax,[esi+0x28]
push eax
call dword 0x5c28
mov bl,0x1
mov eax,ebx
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret 0x8
db 0xff
db 0xff
db 0xff
dec dword [esi]
add [eax],al
add [edi+0x65],al
jz 0x1d0d5
outsd
outsb
imul esi,[edi+ebp*2+0x72],dword 0x6f666e49
add [eax],al
inc esp
dec ecx
push ebx
push eax
dec esp
inc ecx
pop ecx
add [ebp-0x75],dl
in al,dx
add esp,byte -0x10
push ebx
push esi
push edi
mov esi,[ebp+0xc]
mov edi,[ebp+0x8]
cmp byte [dword 0x46da21],0x0
jnz 0x1d0d7
mov ecx,0x41e158
mov edx,[dword 0x46da08]
mov al,0x5
call dword 0x1cc9c
mov [0x46da08],eax
push esi
push edi
call dword [dword 0x46da08]
mov ebx,eax
jmp short 0x1d145
xor ebx,ebx
cmp edi,0x12340042
jnz 0x1d145
test esi,esi
jz 0x1d145
cmp dword [esi],byte +0x28
jc 0x1d145
push byte +0x0
lea eax,[ebp-0x10]
push eax
push byte +0x0
push byte +0x30
call dword 0x6350
test eax,eax
jz 0x1d145
xor eax,eax
mov [esi+0x4],eax
xor eax,eax
mov [esi+0x8],eax
push byte +0x0
call dword [dword 0x46d9f4]
mov [esi+0xc],eax
push byte +0x1
call dword [dword 0x46d9f4]
mov [esi+0x10],eax
push esi
lea edi,[esi+0x14]
lea esi,[ebp-0x10]
movsd
movsd
movsd
movsd
pop esi
mov dword [esi+0x24],0x1
cmp dword [esi],byte +0x48
jc 0x1d143
push dword 0x41e168
lea eax,[esi+0x28]
push eax
call dword 0x5c28
mov bl,0x1
mov eax,ebx
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret 0x8
db 0xff
db 0xff
db 0xff
dec dword [edi]
add [eax],al
add [edi+0x65],al
jz 0x1d1a9
outsd
outsb
imul esi,[edi+ebp*2+0x72],dword 0x6f666e49
inc ecx
add [ecx+ecx*2+0x53],al
push eax
dec esp
inc ecx
pop ecx
add [ebp-0x75],dl
in al,dx
add esp,byte -0x10
push ebx
push esi
push edi
mov esi,[ebp+0xc]
mov edi,[ebp+0x8]
cmp byte [dword 0x46da22],0x0
jnz 0x1d1ab
mov ecx,0x41e22c
mov edx,[dword 0x46da0c]
mov al,0x6
call dword 0x1cc9c
mov [0x46da0c],eax
push esi
push edi
call dword [dword 0x46da0c]
mov ebx,eax
jmp short 0x1d219
xor ebx,ebx
cmp edi,0x12340042
jnz 0x1d219
test esi,esi
jz 0x1d219
cmp dword [esi],byte +0x28
jc 0x1d219
push byte +0x0
lea eax,[ebp-0x10]
push eax
push byte +0x0
push byte +0x30
call dword 0x6350
test eax,eax
jz 0x1d219
xor eax,eax
mov [esi+0x4],eax
xor eax,eax
mov [esi+0x8],eax
push byte +0x0
call dword [dword 0x46d9f4]
mov [esi+0xc],eax
push byte +0x1
call dword [dword 0x46d9f4]
mov [esi+0x10],eax
push esi
lea edi,[esi+0x14]
lea esi,[ebp-0x10]
movsd
movsd
movsd
movsd
pop esi
mov dword [esi+0x24],0x1
cmp dword [esi],byte +0x48
jc 0x1d217
push dword 0x41e23c
lea eax,[esi+0x28]
push eax
call dword 0x5c28
mov bl,0x1
mov eax,ebx
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret 0x8
db 0xff
db 0xff
db 0xff
dec dword [edi]
add [eax],al
add [edi+0x65],al
jz 0x1d27d
outsd
outsb
imul esi,[edi+ebp*2+0x72],dword 0x6f666e49
push edi
add [ecx+ecx*2+0x53],al
push eax
dec esp
inc ecx
pop ecx
add [ebp-0x75],dl
in al,dx
add esp,byte -0x2c
push ebx
push esi
push edi
mov edi,[ebp+0xc]
mov esi,[ebp+0x8]
cmp byte [dword 0x46da23],0x0
jnz 0x1d28a
mov ecx,0x41e360
mov edx,[dword 0x46da10]
mov al,0x7
call dword 0x1cc9c
mov [0x46da10],eax
mov eax,[ebp+0x14]
push eax
mov eax,[ebp+0x10]
push eax
push edi
push esi
call dword [dword 0x46da10]
mov ebx,eax
jmp dword 0x1d34c
xor ebx,ebx
cmp dword [ebp+0x10],byte +0x0
jz dword 0x1d34c
xor eax,eax
mov [ebp-0x1c],eax
xor eax,eax
mov [ebp-0x18],eax
push byte +0x0
call dword [dword 0x46d9f4]
mov [ebp-0x14],eax
push byte +0x1
call dword [dword 0x46d9f4]
mov [ebp-0x10],eax
test esi,esi
jz 0x1d31f
lea eax,[ebp-0x2c]
push eax
push esi
call dword 0x5ce0
mov [ebp-0xc],eax
lea eax,[ebp-0x8]
push eax
push esi
call dword 0x5cf0
test eax,eax
jz 0x1d34c
mov eax,[ebp-0x4]
neg eax
push eax
mov eax,[ebp-0x8]
neg eax
push eax
lea eax,[ebp-0x1c]
push eax
call dword 0x61f8
lea eax,[ebp-0x2c]
push eax
lea eax,[ebp-0x1c]
push eax
lea eax,[ebp-0x1c]
push eax
call dword 0x6148
test eax,eax
jz 0x1d303
test edi,edi
jz 0x1d339
push edi
lea eax,[ebp-0x1c]
push eax
lea eax,[ebp-0x1c]
push eax
call dword 0x6148
test eax,eax
jnz 0x1d339
cmp dword [ebp-0xc],byte +0x1
jnz 0x1d34c
mov bl,0x1
jmp short 0x1d34c
test edi,edi
jz 0x1d339
push edi
lea eax,[ebp-0x1c]
push eax
lea eax,[ebp-0x1c]
push eax
call dword 0x6148
test eax,eax
jnz 0x1d339
mov bl,0x1
jmp short 0x1d34c
mov eax,[ebp+0x14]
push eax
lea eax,[ebp-0x1c]
push eax
push esi
push dword 0x12340042
call dword [ebp+0x10]
mov ebx,eax
mov eax,ebx
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret 0x10
add bh,bh
db 0xff
db 0xff
call dword [ebx]
add [eax],al
add [ebp+0x6e],al
jnz 0x1d3d1
inc esp
imul esi,[ebx+0x70],dword 0x4d79616c
outsd
outsb
imul esi,[edi+ebp*2+0x72],dword 0xd4680073
jecxz 0x1d3b9
add al,ch
retf 0xfe87
jmp dword [ebx+0x46da18]
mov dword [dword 0x46d9f4],0x41dd80

mov dword [dword 0x46d9f8],0x41de98

mov dword [dword 0x46d9fc],0x41de08

mov dword [dword 0x46da00],0x41df30

mov dword [dword 0x46da04],0x41dfc8

mov dword [dword 0x46da08],0x41e09c

mov dword [dword 0x46da0c],0x41e170

mov dword [dword 0x46da10],0x41e244

ret
push ebp
push ebx
inc ebp
push edx
xor esi,[edx]
cs inc esp
dec esp
dec esp
add [eax],al
push ebp
mov ebp,esp
xor eax,eax
push ebp
push dword 0x41e405
push dword [fs:eax]
mov [fs:eax],esp
inc dword [dword 0x46da14]
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x41e40c
ret
jmp dword 0x3384
jmp short 0x1d404
pop ebp
ret
mov eax,eax
jmp dword [dword 0x46eda0]
mov eax,eax
jmp dword [dword 0x46ed9c]
mov eax,eax
jmp dword [dword 0x46ed98]
mov eax,eax
jmp dword [dword 0x46ed94]
mov eax,eax
jmp dword [dword 0x46ed90]
mov eax,eax
jmp dword [dword 0x46ed8c]
mov eax,eax
jmp dword [dword 0x46ed88]
mov eax,eax
jmp dword [dword 0x46ed84]
mov eax,eax
jmp dword [dword 0x46ed80]
mov eax,eax
jmp dword [dword 0x46ed7c]
mov eax,eax
jmp dword [dword 0x46ed78]
mov eax,eax
jmp dword [dword 0x46ed74]
mov eax,eax
jmp dword [dword 0x46ed70]
mov eax,eax
jmp dword [dword 0x46ed6c]
mov eax,eax
jmp dword [dword 0x46ed68]
mov eax,eax
jmp dword [dword 0x46ed64]
mov eax,eax
jmp dword [dword 0x46ed60]
mov eax,eax
jmp dword [dword 0x46ed5c]
mov eax,eax
jmp dword [dword 0x46ed58]
mov eax,eax
jmp dword [dword 0x46ed54]
mov eax,eax
jmp dword [dword 0x46ed50]
mov eax,eax
hlt
mov bh,0x46
add [edi+edi*8+0x0],dh
add ah,dh
mov bh,0x46
add [ebp-0x1],dh
add [eax],al
hlt
mov bh,0x46
add [esi-0x1],dh
add [eax],al
hlt
mov bh,0x46
add [edi-0x1],dh
add [eax],al
hlt
mov bh,0x46
add [eax-0x1],bh
add [eax],al
hlt
mov bh,0x46
add [ecx-0x1],bh
add [eax],al
hlt
mov bh,0x46
add [edx-0x1],bh
add [eax],al
hlt
mov bh,0x46
add [ebx-0x1],bh
add [eax],al
hlt
mov bh,0x46
add [edi+edi*8+0x0],bh
add ah,dh
mov bh,0x46
add [ebp-0x1],bh
add [eax],al
hlt
mov bh,0x46
add [esi-0x1],bh
add [eax],al
hlt
mov bh,0x46
add [edi-0x1],bh
add [eax],al
hlt
mov bh,0x46
add [eax-0x1],ah
add [eax],al
hlt
mov bh,0x46
add [ecx-0x1],ah
add [eax],al
hlt
mov bh,0x46
add [edx-0x1],ah
add [eax],al
hlt
mov bh,0x46
add [ebx-0x1],ah
add [eax],al
hlt
mov bh,0x46
add [edi+edi*8+0x0],ah
add ah,dh
mov bh,0x46
add [ebp-0x1],ah
add [eax],al
hlt
mov bh,0x46
add [esi-0x1],ah
add [eax],al
hlt
mov bh,0x46
add [edi-0x1],ah
add [eax],al
hlt
mov bh,0x46
add [eax-0x1],ch
add [eax],al
hlt
mov bh,0x46
add [ecx-0x1],ch
add [eax],al
hlt
mov bh,0x46
add [edx-0x1],ch
add [eax],al
hlt
mov bh,0x46
add [ebx-0x1],ch
add [eax],al
hlt
mov bh,0x46
add [edi+edi*8+0x0],ch
add ah,dh
mov bh,0x46
add [ebp-0x1],ch
add [eax],al
hlt
mov bh,0x46
add [esi-0x1],ch
add [eax],al
hlt
mov bh,0x46
add [edi-0x1],ch
add [eax],al
hlt
mov bh,0x46
add [eax-0x1],dl
add [eax],al
hlt
mov bh,0x46
add [ecx-0x1],dl
add [eax],al
hlt
mov bh,0x46
add [edx-0x1],dl
add [eax],al
hlt
mov bh,0x46
add [ebx-0x1],dl
add [eax],al
hlt
mov bh,0x46
add [edi+edi*8+0x0],dl
add ah,dh
mov bh,0x46
add [ebp-0x1],dl
add [eax],al
hlt
mov bh,0x46
add [esi-0x1],dl
add [eax],al
hlt
mov bh,0x46
add [edi-0x1],dl
add [eax],al
hlt
mov bh,0x46
add [eax-0x1],bl
add [eax],al
hlt
mov bh,0x46
add [ecx-0x1],bl
add [eax],al
hlt
mov bh,0x46
add [edx-0x1],bl
add [eax],al
hlt
mov bh,0x46
add [ebx-0x1],bl
add [eax],al
hlt
mov bh,0x46
add [edi+edi*8+0x0],bl
add ah,dh
mov bh,0x46
add [ebp-0x1],bl
add [eax],al
hlt
mov bh,0x46
add [esi-0x1],bl
add [eax],al
hlt
mov bh,0x46
add [edi-0x1],bl
add [eax],al
hlt
mov bh,0x46
add [eax-0x1],al
add [eax],al
hlt
mov bh,0x46
add [ecx-0x1],al
add [eax],al
hlt
mov bh,0x46
add [edx-0x1],al
add [eax],al
hlt
mov bh,0x46
add [ebx-0x1],al
add [eax],al
hlt
mov bh,0x46
add [edi+edi*8+0x0],al
add ah,dh
mov bh,0x46
add [ebp-0x1],al
add [eax],al
hlt
mov bh,0x46
add [esi-0x1],al
add [eax],al
hlt
mov bh,0x46
add [edi-0x1],al
add [eax],al
hlt
mov bh,0x46
add [eax-0x1],cl
add [eax],al
hlt
mov bh,0x46
add [ecx-0x1],cl
add [eax],al
hlt
mov bh,0x46
add [edx-0x1],cl
add [eax],al
hlt
mov bh,0x46
add [ebx-0x1],cl
add [eax],al
hlt
mov bh,0x46
add [edi+edi*8+0x0],cl
add ah,dh
mov bh,0x46
add [ebp-0x1],cl
add [eax],al
hlt
mov bh,0x46
add [esi-0x1],cl
add [eax],al
hlt
mov bh,0x46
add [edi-0x1],cl
add [eax],al
hlt
mov bh,0x46
add [eax],dh
inc dword [eax]
add ah,dh
mov bh,0x46
add [ecx],dh
inc dword [eax]
add ah,dh
mov bh,0x46
add [edx],dh
inc dword [eax]
add ah,dh
mov bh,0x46
add [ebx],dh
inc dword [eax]
add ah,dh
mov bh,0x46
add [edi+edi*8],dh
add [eax],al
hlt
mov bh,0x46
add [dword 0xf40000ff],dh
mov bh,0x46
add [esi],dh
inc dword [eax]
add ah,dh
mov bh,0x46
add [edi],dh
inc dword [eax]
add ah,dh
mov bh,0x46
add [eax],bh
inc dword [eax]
add ah,dh
mov bh,0x46
add [ecx],bh
inc dword [eax]
add ah,dh
mov bh,0x46
add [edx],bh
inc dword [eax]
add ah,dh
mov bh,0x46
add [ebx],bh
inc dword [eax]
add ah,dh
mov bh,0x46
add [edi+edi*8],bh
add [eax],al
hlt
mov bh,0x46
add [dword 0xff0000ff],bh
db 0xff
db 0xff
inc dword [ecx]
add [eax],al
add [eax],dh
add [eax],al
add bh,bh
db 0xff
db 0xff
inc dword [ecx]
add [eax],al
add [ecx],dh
add [eax],al
add [ebp-0x75],dl
in al,dx
xor eax,eax
push ebp
push dword 0x41e75c
push dword [fs:eax]
mov [fs:eax],esp
inc dword [dword 0x46da28]
jnz 0x1d74e
mov eax,0x467b00
mov ecx,0x2
mov edx,[dword 0x401094]
call dword 0x465c
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x41e763
ret
jmp dword 0x3384
jmp short 0x1d75b
pop ebp
ret
lea eax,[eax+0x0]
mov ah,0xe7
inc ecx
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [edi+0xc0041],dh
add [eax],al
pop eax
js 0x1d7d3
add [eax],bh
ds inc eax
add [esi+edi+0x40],al
add [eax+0x3e],cl
inc eax
add [esi+edi+0x40],cl
add [eax+0x3e],al
inc eax
add [eax-0x5bffbfc5],cl
cmp eax,[eax+0x0]
loopne 0x1d7ed
inc eax
add [edx],dl
inc ebp
push edx
imul esi,[gs:bp+di+0x74],dword 0x78457972

arpl [ebp+0x70],sp
jz 0x1d82e
outsd
outsb
nop
adc al,0xe8
inc ecx
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax+ebp*8],dl
inc ecx
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [esi],ah
call dword 0x1dd82f
add [eax],al
mov al,0x10
inc eax
add [eax],bh
ds inc eax
add [esi+edi+0x40],al
add [eax+0x3e],cl
inc eax
add [esi+edi+0x40],cl
add [eax+0x3e],al
inc eax
add [eax-0x5bffbfc5],cl
cmp eax,[eax+0x0]
fsub to st0
inc ecx
add [esi],cl
add [eax],al
add [eax],al
add [ecx],al
add [eax],al
add [eax+edx+0x100040],dl
add [eax],al
or [edx+edx*2+0x65],edx
imul esi,[bp+di+0x74],dword 0x83537972
db 0xc4
clc
mov ebx,eax
mov [esp],ebx
mov byte [esp+0x4],0xb
push esp
push byte +0x0
mov ecx,[dword 0x468c1c]
mov dl,0x1
mov eax,[0x41e768]
call dword 0xb548
call dword 0x3464
pop ecx
pop edx
pop ebx
ret
push ebx
mov ebx,eax
test ebx,ebx
jz 0x1d86c
cmp byte [ebx],0x5c
jnz 0x1d86c
xor eax,eax
pop ebx
ret
mov al,0x1
pop ebx
ret
cmp eax,byte +0x1
jnz 0x1d878
mov al,0x1
ret
cmp eax,byte +0x2
jnz 0x1d881
mov al,0x2
jmp short 0x1d895
cmp eax,byte +0x4
jnz 0x1d88a
mov al,0x3
jmp short 0x1d895
cmp eax,byte +0x3
jnz 0x1d893
mov al,0x4
jmp short 0x1d895
xor eax,eax
ret
mov eax,eax
push ebx
push esi
test dl,dl
jz 0x1d8a6
add esp,byte -0x10
call dword 0x2f14
mov ebx,edx
mov esi,eax
mov edx,0x80000001
mov eax,esi
call dword 0x1d938
mov dword [esi+0x18],0xf003f
mov byte [esi+0xc],0x1
mov eax,esi
test bl,bl
jz 0x1d8d6
call dword 0x2f6c
pop dword [dword fs:0x0]
add esp,byte +0xc
mov eax,esi
pop esi
pop ebx
ret
nop
push ebx
push esi
call dword 0x2fbc
mov ebx,edx
mov esi,eax
mov eax,esi
call dword 0x1d908
mov edx,ebx
and dl,0xfc
mov eax,esi
call dword 0x2be0
test bl,bl
jng 0x1d905
mov eax,esi
call dword 0x2f64
pop esi
pop ebx
ret
push ebx
mov ebx,eax
mov eax,[ebx+0x4]
test eax,eax
jz 0x1d934
cmp byte [ebx+0xc],0x0
jnz 0x1d91e
push eax
call dword 0x5a58
mov eax,[ebx+0x4]
push eax
call dword 0x5a50
xor eax,eax
mov [ebx+0x4],eax
lea eax,[ebx+0x10]
call dword 0x3a1c
pop ebx
ret
mov eax,eax
push ebx
push esi
mov esi,edx
mov ebx,eax
mov eax,[ebx+0x8]
cmp esi,eax
jz 0x1d95f
cmp byte [ebx+0x14],0x0
jz 0x1d955
push eax
call dword 0x5a50
mov byte [ebx+0x14],0x0
mov [ebx+0x8],esi
mov eax,ebx
call dword 0x1d908
pop esi
pop ebx
ret
mov eax,eax
push ebx
push esi
push edi
mov edi,ecx
mov esi,edx
mov ebx,eax
mov eax,ebx
call dword 0x1d908
mov [ebx+0x4],esi
lea eax,[ebx+0x10]
mov edx,edi
call dword 0x3a70
pop edi
pop esi
pop ebx
ret
lea eax,[eax+0x0]
mov ecx,[eax+0x4]
test ecx,ecx
jz 0x1d993
test dl,dl
jnz 0x1d997
mov eax,[eax+0x8]
ret
mov eax,ecx
ret
mov eax,eax
push ebp
mov ebp,esp
add esp,byte -0xc
push ebx
push esi
push edi
xor ecx,ecx
mov [ebp-0x4],ecx
mov ebx,edx
mov esi,eax
xor eax,eax
push ebp
push dword 0x41eb4d
push dword [fs:eax]
mov [fs:eax],esp
lea eax,[ebp-0x4]
mov edx,ebx
call dword 0x3ab4
mov eax,[ebp-0x4]
call dword 0x1d85c
mov ebx,eax
test bl,bl
jnz 0x1d9e6
lea eax,[ebp-0x4]
mov ecx,0x1
mov edx,0x1
call dword 0x3f54
xor eax,eax
mov [ebp-0xc],eax
mov edi,[esi+0x18]
and edi,0x300
lea eax,[ebp-0xc]
push eax
mov eax,edi
or eax,0x20019
push eax
push byte +0x0
mov eax,[ebp-0x4]
call dword 0x3eac
push eax
mov edx,ebx
mov eax,esi
call dword 0x1d988
push eax
call dword 0x5a60
test eax,eax
setz [ebp-0x5]
cmp byte [ebp-0x5],0x0
jz 0x1da64
or edi,0x20019
mov [esi+0x18],edi
cmp dword [esi+0x4],byte +0x0
setnz al
test al,bl
jz 0x1da52
push dword [esi+0x10]
push dword 0x41eb68
push dword [ebp-0x4]
lea eax,[ebp-0x4]
mov edx,0x3
call dword 0x3db0
mov ecx,[ebp-0x4]
mov edx,[ebp-0xc]
mov eax,esi
call dword 0x1d964
jmp dword 0x1db37
lea eax,[ebp-0xc]
push eax
mov eax,edi
or eax,0x20009
push eax
push byte +0x0
mov eax,[ebp-0x4]
call dword 0x3eac
push eax
mov edx,ebx
mov eax,esi
call dword 0x1d988
push eax
call dword 0x5a60
test eax,eax
setz [ebp-0x5]
cmp byte [ebp-0x5],0x0
jz 0x1dad1
or edi,0x20009
mov [esi+0x18],edi
cmp dword [esi+0x4],byte +0x0
setnz al
test al,bl
jz 0x1dac2
push dword [esi+0x10]
push dword 0x41eb68
push dword [ebp-0x4]
lea eax,[ebp-0x4]
mov edx,0x3
call dword 0x3db0
mov ecx,[ebp-0x4]
mov edx,[ebp-0xc]
mov eax,esi
call dword 0x1d964
jmp short 0x1db37
lea eax,[ebp-0xc]
push eax
mov eax,edi
or eax,byte +0x1
push eax
push byte +0x0
mov eax,[ebp-0x4]
call dword 0x3eac
push eax
mov edx,ebx
mov eax,esi
call dword 0x1d988
push eax
call dword 0x5a60
test eax,eax
setz [ebp-0x5]
cmp byte [ebp-0x5],0x0
jz 0x1db37
or edi,byte +0x1
mov [esi+0x18],edi
cmp dword [esi+0x4],byte +0x0
setnz al
test al,bl
jz 0x1db2a
push dword [esi+0x10]
push dword 0x41eb68
push dword [ebp-0x4]
lea eax,[ebp-0x4]
mov edx,0x3
call dword 0x3db0
mov ecx,[ebp-0x4]
mov edx,[ebp-0xc]
mov eax,esi
call dword 0x1d964
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x41eb54
lea eax,[ebp-0x4]
call dword 0x3a1c
ret
jmp dword 0x3384
jmp short 0x1db44
movzx eax,byte [ebp-0x5]
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret
add bh,bh
db 0xff
db 0xff
inc dword [ecx]
add [eax],al
add [eax+eax+0x0],bl
add [ebx+0x56],dl
push edi
push ebp
push ecx
mov ebp,ecx
mov edi,edx
mov esi,eax
mov eax,ebp
xor ecx,ecx
mov edx,0x8
call dword 0x252c
lea eax,[ebp+0x4]
push eax
push byte +0x0
lea eax,[esp+0x8]
push eax
push byte +0x0
mov eax,edi
call dword 0x3eac
push eax
mov eax,[esi+0x4]
push eax
call dword 0x5a68
test eax,eax
setz bl
mov eax,[esp]
call dword 0x1d870
mov [ebp+0x0],al
mov eax,ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
ret
nop
push ebx
push esi
add esp,byte -0x8
mov esi,edx
mov ebx,eax
mov ecx,esp
mov edx,esi
mov eax,ebx
call dword 0x1db6c
test al,al
jz 0x1dbda
mov eax,[esp+0x4]
jmp short 0x1dbdd
or eax,byte -0x1
pop ecx
pop edx
pop esi
pop ebx
ret
mov eax,eax
push ebx
push esi
push edi
push ebp
push ecx
mov edi,ecx
mov ebp,edx
mov esi,eax
mov edx,ebp
mov eax,esi
call dword 0x1dbbc
mov ebx,eax
test ebx,ebx
jng 0x1dc4d
mov eax,edi
mov ecx,ebx
xor edx,edx
call dword 0x3b0c
push ebx
lea eax,[esp+0x4]
push eax
mov eax,[edi]
call dword 0x3eac
mov ecx,eax
mov edx,ebp
mov eax,esi
call dword 0x1dc5c
cmp byte [esp],0x1
jz 0x1dc2d
cmp byte [esp],0x2
jnz 0x1dc44
mov eax,[edi]
call dword 0x3eac
call dword 0x83cc
mov edx,eax
mov eax,edi
call dword 0x413c
jmp short 0x1dc54
mov eax,ebp
call dword 0x1d830
jmp short 0x1dc54
mov eax,edi
call dword 0x3a1c
pop edx
pop ebp
pop edi
pop esi
pop ebx
ret
mov eax,eax
push ebp
mov ebp,esp
add esp,byte -0xc
push ebx
push esi
push edi
mov edi,ecx
mov esi,edx
mov ebx,eax
xor eax,eax
mov [ebp-0x4],eax
lea eax,[ebp+0xc]
push eax
push edi
lea eax,[ebp-0x4]
push eax
push byte +0x0
mov eax,esi
call dword 0x3eac
push eax
mov eax,[ebx+0x4]
push eax
call dword 0x5a68
test eax,eax
jz 0x1dcb4
mov [ebp-0xc],esi
mov byte [ebp-0x8],0xb
lea eax,[ebp-0xc]
push eax
push byte +0x0
mov ecx,[dword 0x468ec0]
mov dl,0x1
mov eax,[0x41e768]
call dword 0xb548
call dword 0x3464
mov ebx,[ebp+0xc]
mov eax,[ebp-0x4]
call dword 0x1d870
mov edx,[ebp+0x8]
mov [edx],al
mov eax,ebx
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret 0x8
nop
db 0xff
db 0xff
db 0xff
inc dword [ecx]
add [eax],al
add [eax],dh
add [eax],al
add bh,bh
db 0xff
db 0xff
inc dword [ecx]
add [eax],al
add [ecx],dh
add [eax],al
add [ebp-0x75],dl
in al,dx
xor eax,eax
push ebp
push dword 0x41ed24
push dword [fs:eax]
mov [fs:eax],esp
inc dword [dword 0x46da2c]
jnz 0x1dd16
mov eax,0x467b08
mov ecx,0x2
mov edx,[dword 0x401094]
call dword 0x465c
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x41ed2b
ret
jmp dword 0x3384
jmp short 0x1dd23
pop ebp
ret
lea eax,[eax+0x0]
xor al,0xed
inc ecx
add [ecx],al
push es
push esp
inc ebx
outsd
insb
outsd
jc 0x1dd41
add [eax],al
add [eax+0x7fffffff],al
lea eax,[eax+0x0]
xchg eax,esp
in eax,dx
inc ecx
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [ebp+ebp*8+0xc0041],dl
add [eax],al
pop eax
js 0x1ddb3
add [eax],bh
ds inc eax
add [esi+edi+0x40],al
add [eax+0x3e],cl
inc eax
add [esi+edi+0x40],cl
add [eax+0x3e],al
inc eax
add [eax-0x5bffbfc5],cl
cmp eax,[eax+0x0]
loopne 0x1ddcd
inc eax
add [edi],cl
inc ebp
dec ecx
outsb
jna 0x1ddfb
insb
imul esp,[edi+eax*2+0x72],dword 0x69687061
arpl ax,si
in eax,dx
inc ecx
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add al,dh
in eax,dx
inc ecx
add [eax+eax],cl
add [eax],al
pop eax
js 0x1de0f
add [eax],bh
ds inc eax
add [esi+edi+0x40],al
add [eax+0x3e],cl
inc eax
add [esi+edi+0x40],cl
add [eax+0x3e],al
inc eax
add [eax-0x5bffbfc5],cl
cmp eax,[eax+0x0]
loopne 0x1de29
inc eax
add [eax],bl
inc ebp
dec ecx
outsb
jna 0x1de57
insb
imul esp,[edi+eax*2+0x72],dword 0x69687061
arpl [edi+0x70],cx
gs jc 0x1de66
jz 0x1de70
outsd
outsb
lea eax,[eax+0x0]
adc dh,ch
inc ecx
add [ebx],al
or dl,[esi+eax*2+0x6f]
outsb
jz 0x1de68
imul esi,[ebx+0x68],dword 0x1
add [edx],al
add [eax],al
add [esi+ebp*8],cl
inc ecx
add [ecx],cl
o16 jo 0x1de71
gs popaw
jnz 0x1de9e
jz 0x1de3e
o16 jo 0x1de8d
popad
jc 0x1dea3
popad
bound ebp,[ebp+0x7]
o16 jo 0x1de88
imul edi,[eax+0x65],dword 0x72470864
popad
jo 0x1deb4
imul esp,[ebx+0x73],dword 0x41ee5490
add [edx],cl
or [esi+eax*2+0x6f],edx
outsb
jz 0x1deaa
popad
insd
gs nop
fs out dx,al
inc ecx
add [ecx],al
or al,0x54
inc esi
outsd
outsb
jz 0x1deaf
push dword 0x65737261
jz 0x1de74
add [eax],al
add [eax],al
inc dword [eax]
add [eax],al
nop
sub dh,0x41
add [ebx],al
or dl,[esi+eax*2+0x6f]
outsb
jz 0x1dedb
jz 0x1df03
insb
add [gs:eax],eax
add [eax],al
add [ebx],al
add [eax],al
add [esi+ebp*8+0x41],bh
add [esi],al
o16 jnc 0x1dedf
outsd
insb
or [fs:esi+0x73],ah
dec ecx
jz 0x1df07
insb
imul esp,[ebx+0xb],dword 0x6e557366
gs jc 0x1df1e
imul ebp,[esi+0x65],dword 0x5373660b
jz 0x1df2d
imul ebp,[ebx+0x65],dword 0x874754f
inc edi
jc 0x1df26
jo 0x1df2f
imul esp,[ebx+0x73],dword 0xeed0c08b
inc ecx
add [esi],al
or edx,[esi+eax*2+0x6f]
outsb
jz 0x1df2b
jz 0x1df53
insb
gs jnc 0x1dedf
jl 0x1dece
inc ecx
add [ebx+0x41eee8c0],cl
add [ebx],al
or [eax+edx*2+0x65],edx
outsb
push ebx
jz 0x1df6a
insb
add [gs:eax],eax
add [eax],al
add [eax],cl
add [eax],al
add ah,ah
out dx,al
inc ecx
add [edi],al
jo 0x1df76
push ebx
outsd
insb
imul esp,[esi+eax+0x70],dword 0x73614473
push dword 0x44737005
outsd
jz 0x1df1f
jo 0x1df8b
inc esp
popad
jnc 0x1df84
inc esp
outsd
jz 0x1df2c
jo 0x1df95
inc esp
popad
jnc 0x1df8e
inc esp
outsd
jz 0x1df6e
outsd
jz 0x1df34
jo 0x1dfa2
inc ebx
insb
gs popad
jc 0x1df42
jo 0x1dfaa
dec ecx
outsb
jnc 0x1dfa4
gs inc esi
jc 0x1dfa1
insd
or esi,[gs:eax+0x73]
push ebp
jnc 0x1dfad
jc 0x1df9d
jz 0x1dfc5
insb
or esi,[gs:eax+0x73]
inc ecx
insb
jz 0x1dfba
jc 0x1dfc5
popad
jz 0x1dfbf
or [edi+0x72],al
popad
jo 0x1dfc8
imul esp,[ebx+0x73],dword 0x41ef6890
add [ebx],al
or [eax+edx*2+0x65],dl
outsb
dec ebp
outsd
add [gs:eax],eax
add [eax],al
add [edi],cl
add [eax],al
add [edi+ebp*8+0x41],ah
add [edi],al
jo 0x1dfef
inc edx
insb
popad
arpl [ebx+0x7],bp
jo 0x1dff7
push edi
push dword 0x5657469
jo 0x1dfff
dec esi
outsd
jo 0x1df9b
jo 0x1e005
dec esi
outsd
jz 0x1dfa2
jo 0x1e00b
inc ebx
outsd
jo 0x1e01b
or [eax+0x6d],esi
dec esi
outsd
jz 0x1dfec
outsd
jo 0x1e025
or eax,0x654d6d70
jc 0x1e01a
gs push eax
gs outsb
dec esi
outsd
jz 0x1dfc7
jo 0x1e02a
dec ebp
popad
jnc 0x1e02c
push eax
gs outsb
dec esi
outsd
jz 0x1dfd5
jo 0x1e037
dec ebp
gs jc 0x1e035
gs dec esi
outsd
jz 0x1e023
gs outsb
or al,0x70
insd
dec ebp
popad
jnc 0x1e047
dec esi
outsd
jz 0x1e030
gs outsb
pop es
jo 0x1e052
dec ebp
gs jc 0x1e050
or dh,[gs:eax+0x6d]
dec esi
outsd
jz 0x1e03e
gs jc 0x1e05b
gs push es
jo 0x1e065
dec ebp
popad
jnc 0x1e067
or [eax+0x6d],esi
dec esi
outsd
jz 0x1e050
popad
jnc 0x1e071
add eax,0x6f586d70
jc 0x1e015
jo 0x1e07c
dec esi
outsd
jz 0x1e06b
outsd
jc 0x1e01e
inc edi
jc 0x1e07a
jo 0x1e083
imul esp,[ebx+0x73],dword 0xf024c08b
inc ecx
add [ebx],al
or edx,[edx+eax*2+0x72]
jnz 0x1e09e
push dword 0x6c797453
add [gs:eax],eax
add [eax],al
add [edi],al
add [eax],al
add [eax],ah
lock inc ecx
add [edi],al
db 0x62
jnc 0x1e095
outsd
insb
imul esp,[edi+eax+0x62],dword 0x656c4373
popad
jc 0x1e05b
db 0x62
jnc 0x1e09a
outsd
jc 0x1e0be
jpe 0x1e0c6
outsb
jz 0x1e0bb
insb
or ah,[edx+0x73]
push esi
gs jc 0x1e0d6
imul esp,[ebx+0x61],dword 0x73620b6c
inc esi
inc esp
imul esp,[ecx+0x67],dword 0x6c616e6f
or esp,[edx+0x73]
inc edx
inc esp
imul esp,[ecx+0x67],dword 0x6c616e6f
pop es
db 0x62
jnc 0x1e0c5
jc 0x1e0f3
jnc 0x1e0f9
or esp,[edx+0x73]
inc esp
imul esp,[ecx+0x67],dword 0x736f7243
jnc 0x1e09b
inc edi
jc 0x1e0f7
jo 0x1e100
imul esp,[ebx+0x73],dword 0x41f0e890
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],dl
int1
inc ecx
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add ah,dh
lock inc ecx
add ah,bh
lock inc ecx
add [eax],bl
add [eax],al
add [edx+ebp+0x41],bl
add [eax],bh
ds inc eax
add [esi+edi+0x40],al
add [eax+0x3e],cl
inc eax
add [esi+edi+0x40],cl
add [eax+0x3e],al
inc eax
add [eax-0x5bffbfc5],cl
cmp eax,[eax+0x0]
push eax
push esp
inc ecx
add [eax+0x55],ah
inc ecx
add [eax+0x55],ch
inc ecx
add [esp+edx*2+0x41],bh
add [ecx],al
add ch,bh
db 0xff
cld
push es
inc edx
add [edi],cl
push esp
inc edi
jc 0x1e162
jo 0x1e16b
imul esp,[ebx+0x73],dword 0x656a624f
arpl [eax+edx-0xf],si
inc ecx
add [edi],al
andps xmm0,oword [edi+0x72]
popad
jo 0x1e180
imul esp,[ebx+0x73],dword 0x656a624f
arpl [eax+ebp*8-0x10],si
inc ecx
add al,dl
sub al,[ecx+0x0]
add [eax],al
or [edi+0x72],al
popad
jo 0x1e199
imul esp,[ebx+0x73],dword 0xc08b0000
cmp al,0xf1
inc ecx
add [edi],cl
cmovns eax,[ebx+0x68]
popad
outsb
gs dec esi
outsd
jz 0x1e1b2
imul sp,[ebp+0x72],word 0x1124
inc eax
add [ecx],al
and [ebx],esp
mov dh,0x1f
cmpsd
inc esp
rcl byte [ecx],1
sahf
xchg eax,ebx
add [eax],ah
scasd
cmp eax,0x4708da82
jc 0x1e1c7
jo 0x1e1d0
imul esp,[ebx+0x73],dword 0xffff0001
nop
mov esp,0x41f1
add [eax],al
add [eax],al
add [eax],al
add al,cl
int1
inc ecx
add ah,ch
int1
inc ecx
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add dl,bl
int1
inc ecx
add dl,ah
int1
inc ecx
add [eax+eax],ah
add [eax],al
pushfd
lock inc ecx
add [eax],bh
ds inc eax
add [esi+edi+0x40],al
add [eax+0x3e],cl
inc eax
add [esi+edi+0x40],cl
add [eax+0x3e],al
inc eax
add [eax-0x5bffbfc5],cl
cmp eax,[eax+0x0]
sbb [edx],cl
inc edx
add [eax+0x55],ah
inc ecx
add [eax+0x55],ch
inc ecx
add [edx+ecx+0x42],bl
add [esi],cl
add [eax],al
add [eax],al
add [ecx],al
add [eax],al
add [eax],bh
int1
inc ecx
add [eax],ah
add [eax],al
add [ecx],al
add ch,bh
inc dword [eax+0xa]
inc edx
add [dword 0x6e6f4654],al
jz 0x1e1d5
int1
inc ecx
add [edi],al
add eax,0x6e6f4654
jz 0x1e1b0
int1
inc ecx
add [ecx+esi*8],cl
inc ecx
add [eax],cl
add [eax],cl
inc edi
jc 0x1e262
jo 0x1e26b
imul esp,[ebx+0x73],dword 0xee600008
inc ecx
add [eax-0x77ffbdf1],al
cmovc eax,[eax]
add [eax],eax
add [eax],al
add [eax],al
add [eax-0x80000000],al
add [eax],al
pop es
inc ebx
push dword 0x65737261
jz 0x1e25b
in eax,dx
inc ecx
add [eax],bl
add [eax],al
call dword far [eax+0x100420b]
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax+0x43050001],al
outsd
insb
outsd
jc 0x1e287
adc [eax+0x0],al
cmp [esi],cl
inc edx
add [eax+0xe],al
inc edx
add [ecx],al
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax+0x48060002],al
imul esp,[gs:edi+0x68],dword 0x41ee5074
add [eax+0xe],ch
inc edx
add [eax+0x100420e],al
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax+0x4e040003],al
popad
insd
gs cmp al,0x10
inc eax
add [eax-0x47ffbdf1],dh
cmovc eax,[eax]
add [eax],eax
add [eax],al
add [eax],al
add [eax+0x0],al
add al,0x0
or ecx,[edi+0x72]
imul esp,[ebp+0x6e],dword 0x69746174
outsd
outsb
or al,0xee
inc ecx
add [eax+0xf],dl
inc edx
add [eax+0xf],bl
inc edx
add [ecx],al
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax],al
add eax,0x69500500
jz 0x1e332
push dword 0x40103c
fmul qword [esi]
inc edx
add al,bh
push cs
inc edx
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax+0x53040006],al
imul edi,[edx+0x65],dword 0x41eecc
sbb [edi],cl
inc edx
add [edi+ecx],ah
inc edx
add [ecx],al
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax+0x53050007],al
jz 0x1e386
insb
gs nop
pop esp
rep inc ecx
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [ebx+esi*8+0x41],dh
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax-0xd],ch
inc ecx
add [eax+eax],bl
add [eax],al
pushfd
lock inc ecx
add [eax],bh
ds inc eax
add [esi+edi+0x40],al
add [eax+0x3e],cl
inc eax
add [esi+edi+0x40],cl
add [eax+0x3e],al
inc eax
add [eax-0x5bffbfc5],cl
cmp eax,[eax+0x0]
and al,0x10
inc edx
add [eax+0x55],ah
inc ecx
add [eax+0x55],ch
inc ecx
add [eax+edx+0x42],cl
add [esp+edx*2],al
push eax
gs outsb
lea eax,[eax+0x0]
jz 0x1e365
inc ecx
add [edi],al
add al,0x54
push eax
gs outsb
pop esp
rep inc ecx
add [ecx+esi*8],cl
inc ecx
add [eax+eax],al
or [edi+0x72],al
popad
jo 0x1e3f2
imul esp,[ebx+0x73],dword 0xed300004
inc ecx
add [ecx+edx+0x42],ch
add [ecx+edx+0x42],dh
add [ecx],al
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax],al
add [eax],al
add eax,0x6f6c6f43
jc 0x1e414
out dx,eax
inc ecx
add [eax],bl
add [eax],al
push dword [edx+edx]
inc edx
add [ecx],al
add [eax],al
add [eax],al
add [eax],al
add byte [eax+eax],0x0
add [ecx],al
add [ecx*2-0x1b9a9b91],al
out dx,al
inc ecx
add [eax+0x12],cl
inc edx
add [eax+0x12],dl
inc edx
add [ecx],al
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax],al
add al,[eax]
add eax,0x6c797453
gs cmp al,0x10
inc eax
add [eax+0x12],bh
inc edx
add [eax+0x1004212],al
add [eax],al
add [eax],al
add [eax],al
add byte [ecx],0x0
add [eax],al
add eax,[eax]
add eax,0x74646957
push dword 0xf45cc08b
inc ecx
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [esp+esi*8+0x41],dh
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax-0xc],ch
inc ecx
add [eax],bl
add [eax],al
add [eax+esi*8+0x3e380041],bl
inc eax
add [esi+edi+0x40],al
add [eax+0x3e],cl
inc eax
add [esi+edi+0x40],cl
add [eax+0x3e],al
inc eax
add [eax-0x5bffbfc5],cl
cmp eax,[eax+0x0]
in al,dx
adc al,[edx+0x0]
pushad
push ebp
inc ecx
add [eax+0x55],ch
inc ecx
add [ebx+edx],dl
inc edx
add [esi],al
push esp
inc edx
jc 0x1e4e2
jnc 0x1e4d7
nop
jz 0x1e466
inc ecx
add [edi],al
push es
push esp
inc edx
jc 0x1e4ef
jnc 0x1e4e4
pop esp
hlt
inc ecx
add [ecx+esi*8],cl
inc ecx
add [edx],al
add [eax],cl
inc edi
jc 0x1e4eb
jo 0x1e4f4
imul esp,[ebx+0x73],dword 0xed300002
inc ecx
add [esp+edx+0x42],cl
add [esp+edx+0x42],dl
add [ecx],al
add [eax],al
add [eax],al
add [eax],al
cmp bh,0xff
inc dword [eax]
add [eax],al
add eax,0x6f6c6f43
jc 0x1e4d2
lock inc ecx
add [eax+0x15],ch
inc edx
add [eax+0x15],dh
inc edx
add [ecx],al
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax],al
add [eax],eax
add eax,0x6c797453
lea eax,[gs:eax+0x0]
and ch,dh
inc ecx
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [ebp+esi*8+0x41],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],bh
cmc
inc ecx
add [eax+0x0],bl
add [eax],al
pop esp
sub al,[ecx+0x0]
cmp [esi],bh
inc eax
add [esi+edi+0x40],al
add [eax+0x3e],cl
inc eax
add [esi+edi+0x40],cl
add [eax+0x3e],al
inc eax
add [eax-0x5bffbfc5],cl
cmp eax,[eax+0x0]
push dword 0x60004216
push ebp
inc ecx
add [eax+0x55],ch
inc ecx
add [esp+edx*2+0x41],bh
add [eax-0x7bffbde4],bl
sbb al,0x42
add [ebx+ebx+0x54070042],dh
inc ebx
popad
outsb
jna 0x1e5a0
jnc 0x1e585
cmc
inc ecx
add [edi],al
pop es
push esp
inc ebx
popad
outsb
jna 0x1e5ad
jnc 0x1e56e
cmc
inc ecx
add al,dl
sub al,[ecx+0x0]
add al,0x0
or [edi+0x72],al
popad
jo 0x1e5c5
imul esp,[ebx+0x73],dword 0xf4700004
inc ecx
add [eax+eax],dl
add bh,bh
push dword 0x100421a
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax+0x42050000],al
jc 0x1e5f5
jnc 0x1e5ea
cmp al,0x10
inc eax
add [eax],ah
add [eax],al
jmp dword [eax]
add [eax],al
inc dword [ecx]
add [eax],al
add [eax],al
add [eax],al
and byte [eax],0x0
int3
add [ecx],al
add [eax],cl
inc ebx
outsd
jo 0x1e61a
dec ebp
outsd
gs call dword 0xc02279b
add [eax],al
dec dword [edx+ebx+0x42]
add [ecx],al
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax+0x46040002],al
outsd
outsb
jz 0x1e635
rep inc ecx
add [eax],dl
add [eax],al
call dword far [edx+ebx+0x42]
add [ecx],al
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax+0x50030003],al
gs outsb
mov eax,eax
call dword 0x30227de
push cs
push esp
push eax
jc 0x1e65d
jc 0x1e656
jnc 0x1e666
push ebx
jz 0x1e657
add [gs:bx+si],eax
add [eax],al
add [edx],al
add [eax],al
add ah,ah
cmc
inc ecx
add [edx],cl
jo 0x1e67b
push ebx
jz 0x1e66c
jc 0x1e681
imul ebp,[esi+0x67],dword 0x52737009
jnz 0x1e684
outsb
imul ebp,[esi+0x67],dword 0x45737008
outsb
imul ebp,[fs:esi+0x67],dword 0x61724708
jo 0x1e691
imul esp,[ebx+0x73],dword 0x41f630
or [esi],cl
push esp
push eax
jc 0x1e6a5
jc 0x1e69e
jnc 0x1e6ae
inc ebp
jna 0x1e6a3
outsb
jz 0x1e641
push es
or [esi],al
push ebx
gs outsb
gs jc 0x1e652
push esp
dec edi
bound ebp,[edx+0x65]
arpl [eax+eax+0x5],si
push ebx
jz 0x1e6b8
gs push cs
push esp
push eax
jc 0x1e6cd
jc 0x1e6c6
jnc 0x1e6d6
push ebx
jz 0x1e6c7
add [gs:bp+di],cl
push eax
gs jc 0x1e6d1
gs outsb
jz 0x1e6b6
outsd
outsb
gs add al,0x42
jns 0x1e6ed
add [gs:ecx],cl
push edx
fs jc 0x1e6e2
ja 0x1e6d1
outsd
ja 0x1e68d
inc edx
outsd
outsd
insb
gs popad
outsb
adc al,[ecx]
push edx
add eax,0x63655254
jz 0x1e699
add ecx,[ebp+0x73]
push es
jnc 0x1e712
jc 0x1e709
outsb
add [si],al
adc [eax+0x0],eax
in al,0xf5
inc ecx
add [eax+edx+0x40],dl
add [eax],al
adc [eax+0x0],al
add [eax],al
add [eax],al
xchg eax,esp
adc [eax+0x0],al
nop
int3
add eax,byte -0x24
push eax
mov eax,[eax]
mov eax,[eax+0x54]
xchg eax,[esp]
ret
add eax,byte -0x24
push eax
mov eax,[eax]
mov eax,[eax+0x58]
xchg eax,[esp]
ret
add dword [esp+0x4],byte -0x24
mov eax,[esp+0x4]
mov eax,[eax]
jmp dword [eax+0xc]
add dword [esp+0x4],byte -0x24
jmp dword 0x14670
add dword [esp+0x4],byte -0x24
jmp dword 0x14690
int3
int3
int3
xlatb
test byte [ecx+0x0],0xe5
test byte [ecx+0x0],0xef
test byte [ecx+0x0],0xbd
test byte [ecx+0x0],0xca
test byte [ecx+0x0],0x1
add [eax],al
add [ebx+0x7ab8cd12],ah
es aam 0x11
sbb edx,byte +0x0
ror byte [edi+0x60],byte 0xb2
db 0xdd
cld
test byte [ecx+0x0],0x24
add [eax],al
add [eax],al
add [eax],al
add [edi+esi*8+0x41],bh
add [eax],dl
test dword [ecx+0x0],0x0
add [eax],al
add [eax],al
cld
test dword [ecx+0x0],0x0
add [eax],al
add [eax],al
in al,0xf7
inc ecx
add ah,ch
test dword [ecx+0x0],0x28
dec esp
sub eax,[ecx+0x0]
cmp [esi],bh
inc eax
add [eax],ah
push esi
inc ecx
add [eax+0x3e],cl
inc eax
add [esi+edi+0x40],cl
add [eax+0x3e],al
inc eax
add [eax-0x5bffbfc5],cl
cmp eax,[eax+0x0]
push eax
push esp
inc ecx
add [eax+0x55],ah
inc ecx
add [eax+0x31],bh
inc edx
add [esp+edx*2+0x41],bh
add [eax+0x8004156],dh
xor [edx+0x0],eax
push esp
xor eax,[eax+0x0]
les esi,[ecx]
inc edx
add [ebx+esi+0x40],dl
add [ebx+esi+0x40],dl
add [eax],dl
xor eax,[edx+0x0]
adc al,0x33
inc edx
add [ebx+esi+0x40],dl
add [ebx+esi+0x33540042],bl
inc eax
add [eax],al
xor al,0x42
add [eax],ah
xor al,0x42
add [ebx+esi+0x40],dl
add [eax],dh
xor al,0x42
add al,dl
xor [edx+0x0],al
sbb al,0x33
inc edx
add [eax+0x54004233],ch
xor eax,[eax+0x0]
push esp
xor eax,[eax+0x0]
push esp
xor eax,[eax+0x0]
push esp
xor eax,[eax+0x0]
add al,0x34
inc edx
add [ecx],al
add ch,bh
push dword [eax+0x33]
inc edx
add [eax],cl
push esp
inc edi
jc 0x1e852
jo 0x1e85b
imul esp,[ebx-0x73],dword 0xf7fc0040
inc ecx
add [edi],al
or [edi+eax*2+0x72],dl
popad
jo 0x1e86c
imul esp,[ebx+0x7c],dword 0xd00041f7
sub eax,[ecx+0x0]
add [eax],al
or [edi+0x72],al
popad
jo 0x1e87e
imul esp,[ebx+0x73],dword 0xcc900000
add eax,byte -0x28
jmp dword 0x22b00
add eax,byte -0x28
jmp dword 0x22b18
add dword [esp+0x4],byte -0x28
mov eax,[esp+0x4]
mov eax,[eax]
jmp dword [eax+0xc]
add dword [esp+0x4],byte -0x28
jmp dword 0x14670
add dword [esp+0x4],byte -0x28
jmp dword 0x14690
int3
int3
int3
sub eax,0x3b0041f8
clc
inc ecx
add [ebp-0x8],al
inc ecx
add [dword 0x250041f8],bl
clc
inc ecx
add [ecx],al
add [eax],al
add [ebx+0x7ab8cd12],ah
es aam 0x11
sbb edx,byte +0x0
ror byte [edi+0x60],byte 0xb2
fst qword [edx-0x8]
inc ecx
add [eax],ch
add [eax],al
add [eax],al
add [eax],al
add [ebx+0x41f8d4c0],cl
add [esi-0x8],ah
inc ecx
add [eax],al
add [eax],al
add ah,ah
clc
inc ecx
add [ecx+edi*8],dl
inc ecx
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add dh,dh
clc
inc ecx
add [ecx+edi*8],al
inc ecx
add [eax+eax],ch
add [eax],al
dec esp
sub eax,[ecx+0x0]
cmp [esi],bh
inc eax
add [eax],ah
push esi
inc ecx
add [eax+0x3e],cl
inc eax
add [esi+edi+0x40],cl
add [eax+0x3e],al
inc eax
add [eax-0x5bffbfc5],cl
cmp eax,[eax+0x0]
jo 0x1e90b
inc edx
add [eax-0x3bffbdc7],ah
cmp eax,0x3b300042
inc edx
add [eax+0xe004156],dh
add [eax],al
add [eax],al
add [ecx],al
add [eax],al
add [eax],bh
int1
inc ecx
add [eax],bl
add [eax],al
add [edx],al
add ch,bh
db 0xff
cld
dec dword [ebx+edi+0x3bb00042]
inc edx
add [eax],cl
push esp
push eax
imul esp,[ebx+0x74],dword 0x8d657275
inc eax
add [ecx+edi*8],dl
inc ecx
add [edi],al
or [eax+edx*2+0x69],dl
arpl [ebp+esi*2+0x72],si
gs aam 0xf8
inc ecx
add al,dl
sub eax,[ecx+0x0]
add [eax],al
or [edi+0x72],al
popad
jo 0x1e996
imul esp,[ebx+0x73],dword 0x80900000
stc
inc ecx
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [ecx+edi*8+0x80041],al
add [eax],al
mov al,0x10
inc eax
add [eax],bh
ds inc eax
add [esi+edi+0x40],al
add [eax+0x3e],cl
inc eax
add [esi+edi+0x40],cl
add [eax+0x3e],al
inc eax
add [eax-0x5bffbfc5],cl
cmp eax,[eax+0x0]
loopne 0x1e9b9
inc eax
add [ebx+esi+0x40],dl
add [esp+edx*2],cl
push ebx
push dword 0x64657261
dec ecx
insd
popad
lea eax,[gs:bx+si+0x0]
loopne 0x1e98f
inc ecx
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add ah,ah
stc
inc ecx
add [eax+eax],ah
add [eax],al
xor al,0xf9
inc ecx
add [eax],bh
ds inc eax
add [esi+edi+0x40],al
add [eax+0x3e],cl
inc eax
add [esi+edi+0x40],cl
add [eax+0x3e],al
inc eax
add [eax-0x5bffbfc5],cl
cmp eax,[eax+0x0]
inc eax
ds inc edx
add [esi+edi+0x42],bh
add [esi],cl
push esp
dec ebp
gs jz 0x1ea4b
imul bp,[ebp+0x49],word 0x616d
gs xchg eax,eax
inc eax
cli
inc ecx
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax+0x41fa],bh
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax+0x300041fa],ch
add [eax],al
add [eax],dh
test dword [ecx+0x0],0x403e38
and [esi+0x41],dl
add [eax+0x3e],cl
inc eax
add [esi+edi+0x40],cl
add [eax+0x3e],al
inc eax
add [eax-0x5bffbfc5],cl
cmp eax,[eax+0x0]
enter 0x423e,0x0
pushad
push ebp
inc ecx
add [eax+0x31],bh
inc edx
add al,bh
ds inc edx
add [eax+0x8004156],dh
xor [edx+0x0],eax
mov [edi],segr7
inc edx
add ah,al
xor [edx+0x0],eax
sbb al,0x40
inc edx
add [eax+eax*2],ah
inc edx
add [eax+0x14004240],cl
xor eax,[edx+0x0]
adc al,0x41
inc edx
add ah,dh
inc ecx
inc edx
add [ebp+eax*2+0x34000042],dl
inc edx
add [eax-0x7bffbdba],al
inc esi
inc edx
add ah,bl
inc edi
inc edx
add [eax+0x1c00423e],al
xor eax,[edx+0x0]
mov al,0x44
inc edx
add [eax+0x41],bh
inc edx
add [eax+0x45],bh
inc edx
add [eax],dh
dec edx
inc edx
add [edx+ecx*2+0x4ae80042],dh
inc edx
add [ecx],cl
push esp
dec ebp
gs jz 0x1eb0f
imul bp,[ebp-0x75],word 0xb8c0
cli
inc ecx
add [edi],al
or [ebp+ecx*2+0x65],edx
jz 0x1eb20
imul bp,[ebp+0x40],word 0x41fa
add al,bh
test dword [ecx+0x0],0x47080000
jc 0x1eb32
jo 0x1eb3b
imul esp,[ebx+0x73],dword 0xfb240000
inc ecx
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],ch
sti
inc ecx
add [eax+eax+0x0],dh
add [ecx+edi*8],dh
inc ecx
add [eax],bh
ds inc eax
add [esi+edi+0x40],al
add [eax+0x3e],cl
inc eax
add [esi+edi+0x40],cl
add [eax+0x3e],al
inc eax
add [eax-0x5bffbfc5],cl
cmp eax,[eax+0x0]
jo 0x1eb71
inc edx
add ah,cl
dec edi
inc edx
add [esp+edx*2],cl
inc edx
imul esi,[ebp+ebp*2+0x61],dword 0x616d4970
lea eax,[gs:bx+si+0x0]
test bl,bh
inc ecx
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [esp+edi*8],al
inc ecx
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add al,bh
sti
inc ecx
add [eax+eax],bh
add [eax],al
xor bh,dh
inc ecx
add [eax],bh
ds inc eax
add [eax],ah
push esi
inc ecx
add [eax+0x3e],cl
inc eax
add [esi+edi+0x40],cl
add [eax+0x3e],al
inc eax
add [eax-0x5bffbfc5],cl
cmp eax,[eax+0x0]
pop esp
pop edx
inc edx
add [eax+0x55],ah
inc ecx
add [eax+0x31],bh
inc edx
add [eax-0x4fffbda6],bl
push esi
inc ecx
add [eax+0x5c],bh
inc edx
add al,bh
pop esp
inc edx
add ah,al
xor [edx+0x0],eax
lodsb
pop edi
inc edx
add [eax+0x60],ah
inc edx
add [eax+0x14004260],ah
xor eax,[edx+0x0]
cld
pushad
inc edx
add al,ch
fs inc edx
add al,dh
insb
inc edx
add [eax+0x2000426d],cl
xor al,0x42
add [esi+ebp*2+0x42],bl
add [eax+0x6e],bh
inc edx
add ah,dh
pop ecx
inc edx
add [ebx+esi],bl
inc edx
add [eax-0x3bffbdcd],ch
arpl [edx+0x0],ax
cmp [ecx+0x42],dh
add [eax+0x63],al
inc edx
add [eax+0x71],al
inc edx
add al,ah
jno 0x1ec2d
add [eax],dl
pushad
inc edx
add [eax+0x60],dh
inc edx
add [ebx+ebp*2+0x54070042],dh
inc edx
imul esi,[ebp+ebp*2+0x61],dword 0x41fc0470
add [edi],al
pop es
push esp
inc edx
imul esi,[ebp+ebp*2+0x61],dword 0x41fb8470
add al,bh
test dword [ecx+0x0],0x47080000
jc 0x1ec7c
jo 0x1ec85
imul esp,[ebx+0x73],dword 0xc08b0000
jo 0x1ec22
inc ecx
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [esp+edi*8+0x41],dh
add [eax],bl
add [eax],al
add [ecx+edi*8],dh
inc ecx
add [eax],bh
ds inc eax
add [esi+edi+0x40],al
add [eax+0x3e],cl
inc eax
add [esi+edi+0x40],cl
add [eax+0x3e],al
inc eax
add [eax-0x5bffbfc5],cl
cmp eax,[eax+0x0]
inc esp
jc 0x1ecb1
add [edx+esi*2+0x42],dh
add [edx],cl
push esp
dec ecx
arpl [edi+0x6e],bp
dec ecx
insd
popad
gs xchg eax,eax
int3
cld
inc ecx
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax-0x3],al
inc ecx
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [edi*8+0x340041],dh
add [eax],al
xor bh,dh
inc ecx
add [eax],bh
ds inc eax
add [eax],ah
push esi
inc ecx
add [eax+0x3e],cl
inc eax
add [esi+edi+0x40],cl
add [eax+0x3e],al
inc eax
add [eax-0x5bffbfc5],cl
cmp eax,[eax+0x0]
loopne 0x1ed3c
inc edx
add [eax+0x55],ah
inc ecx
add [eax+0x31],bh
inc edx
add [eax],dl
jnc 0x1ed19
add [eax+0x8004156],dh
xor [edx+0x0],eax
jo 0x1ed55
inc edx
add ah,al
xor [edx+0x0],eax
mov ah,0x73
inc edx
add al,ah
jnc 0x1ed31
add [eax],dl
xor eax,[edx+0x0]
adc al,0x33
inc edx
add ah,dh
jnc 0x1ed3d
add [ebx+esi+0x76f40042],bl
inc edx
add [eax],al
xor al,0x42
add [edi+esi*2],ch
inc edx
add [eax],dh
ja 0x1ed51
add [eax],dh
xor al,0x42
add [edx+esi*2+0x331c0042],cl
inc edx
add [eax+0x34004233],ch
jnz 0x1ed65
add [eax+0x77],cl
inc edx
add [eax+0x77],dh
inc edx
add [edi+esi*2+0x770c0042],al
inc edx
add [dword 0x6f634954],al
outsb
mov eax,eax
inc eax
std
inc ecx
add [edi],al
add eax,0x6f634954
outsb
int3
cld
inc ecx
add al,bh
test dword [ecx+0x0],0x47080000
jc 0x1edb6
jo 0x1edbf
imul esp,[ebx+0x73],dword 0xc0850000
jz 0x1ed6e
cmp eax,[dword 0x46da30]
jz 0x1ed6e
push eax
call dword 0x5cc0
ret
nop
mov esp,0x41fd
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [ebp+edi*8-0x23bffbf],bh
inc ecx
add [eax+eax],ah
add [eax],al
mov al,0x10
inc eax
add [eax],bh
ds inc eax
add [esi+edi+0x40],al
add [eax+0x3e],cl
inc eax
add [esi+edi+0x40],cl
add [eax+0x3e],al
inc eax
add [eax-0x5bffbfc5],cl
cmp eax,[eax+0x0]
xchg eax,esp
inc byte [ecx+0x0]
add [eax],eax
db 0xff
push eax
add [edx+0x0],al
adc [edx+edx*2+0x65],dl
jnc 0x1ee39
jnz 0x1ee3e
arpl [ebp+0x4d],sp
popad
outsb
popad
gs jc 0x1ed63
inc eax
add [esi+edi*8],ah
inc ecx
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [esi+edi*8],ah
inc ecx
add [esi+edi*8],ch
inc ecx
add [eax+eax],ah
add [eax],al
jo 0x1edff
inc ecx
add [eax],bh
ds inc eax
add [esi+edi+0x40],al
add [eax+0x3e],cl
inc eax
add [esi+edi+0x40],cl
add [eax+0x3e],al
inc eax
add [eax-0x5bffbfc5],cl
cmp eax,[eax+0x0]
xchg eax,esp
inc byte [ecx+0x0]
add [eax],eax
db 0xff
jmp dword [eax+0x1]
inc edx
add [dword 0x75724254],dl
jnc 0x1ee9b
push edx
gs jnc 0x1eea6
jnz 0x1eeab
arpl [ebp+0x4d],sp
popad
outsb
popad
gs jc 0x1edce
ror byte [ecx+0x31c289d1],byte 0xc0
rol ax,byte 0x5
xor al,[edx]
inc edx
dec ecx
jnz 0x1ee4a
ret
lea eax,[eax+0x0]
push ebx
push esi
test dl,dl
jz 0x1ee66
add esp,byte -0x10
call dword 0x2f14
mov ebx,edx
mov esi,eax
mov [esi+0x20],cx
lea eax,[esi+0x8]
push eax
call dword 0x5b98
mov eax,esi
test bl,bl
jz 0x1ee8c
call dword 0x2f6c
pop dword [dword fs:0x0]
add esp,byte +0xc
mov eax,esi
pop esi
pop ebx
ret
lea eax,[eax+0x0]
push ebx
push esi
call dword 0x2fbc
mov ebx,edx
mov esi,eax
lea eax,[esi+0x8]
push eax
call dword 0x5aa8
test bl,bl
jng 0x1eeb3
mov eax,esi
call dword 0x2f64
pop esi
pop ebx
ret
mov eax,eax
add eax,byte +0x8
push eax
call dword 0x5ab0
ret
mov eax,eax
add eax,byte +0x8
push eax
call dword 0x5ba0
ret
mov eax,eax
push ebp
mov ebp,esp
add esp,byte -0x8
push ebx
push esi
mov ebx,edx
mov [ebp-0x4],eax
mov eax,[ebp-0x4]
movzx edx,word [eax+0x20]
mov eax,ebx
call dword 0x1ee44
mov esi,eax
mov eax,[ebp-0x4]
call dword 0x1eeb8
xor edx,edx
push ebp
push dword 0x41ffa4
push dword [fs:edx]
mov [fs:edx],esp
mov eax,[ebp-0x4]
mov eax,[eax+0x4]
mov [ebp-0x8],eax
jmp short 0x1ef16
mov eax,[ebp-0x8]
mov eax,[eax]
mov [ebp-0x8],eax
cmp dword [ebp-0x8],byte +0x0
jz 0x1ef3d
mov eax,[ebp-0x8]
cmp si,[eax+0xc]
jnz 0x1ef0e
mov eax,[ebp-0x4]
movzx ecx,word [eax+0x20]
mov edx,ebx
mov eax,[ebp-0x8]
add eax,byte +0x10
call dword 0x76f0
test al,al
jz 0x1ef0e
cmp dword [ebp-0x8],byte +0x0
jnz 0x1ef88
mov eax,[ebp-0x4]
movzx eax,word [eax+0x20]
add eax,byte +0x10
call dword 0x1e60
mov [ebp-0x8],eax
mov eax,[ebp-0x8]
mov edx,[ebp-0x4]
mov edx,[edx+0x4]
mov [eax],edx
xor edx,edx
mov [eax+0x4],edx
mov edx,[ebx]
mov [eax+0x8],edx
mov [eax+0xc],si
mov edx,[ebp-0x4]
movzx ecx,word [edx+0x20]
lea edx,[eax+0x10]
mov eax,ebx
call dword 0x2050
mov eax,[ebp-0x4]
mov edx,[ebp-0x8]
mov [eax+0x4],edx
mov eax,[ebp-0x8]
inc dword [eax+0x4]
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x41ffab
mov eax,[ebp-0x4]
call dword 0x1eec4
ret
jmp dword 0x3384
jmp short 0x1ef9b
mov eax,[ebp-0x8]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
ret
push ebp
mov ebp,esp
add esp,byte -0x10
push esi
mov [ebp-0x8],edx
mov [ebp-0x4],eax
cmp dword [ebp-0x8],byte +0x0
jz dword 0x1f070
mov eax,[ebp-0x8]
mov [ebp-0x10],eax
mov eax,[ebp-0x4]
call dword 0x1eeb8
xor ecx,ecx
push ebp
push dword 0x42003c
push dword [fs:ecx]
mov [fs:ecx],esp
mov eax,[ebp-0x10]
dec dword [eax+0x4]
mov eax,[ebp-0x10]
cmp dword [eax+0x4],byte +0x0
setz [ebp-0x9]
cmp byte [ebp-0x9],0x0
jz 0x1f026
mov eax,[ebp-0x4]
mov eax,[eax+0x4]
cmp eax,[ebp-0x8]
jnz 0x1f018
mov eax,[ebp-0x8]
mov eax,[eax]
mov edx,[ebp-0x4]
mov [edx+0x4],eax
jmp short 0x1f026
mov eax,edx
mov edx,[eax]
cmp edx,[ebp-0x8]
jnz 0x1f016
mov edx,[ebp-0x8]
mov edx,[edx]
mov [eax],edx
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x420043
mov eax,[ebp-0x4]
call dword 0x1eec4
ret
jmp dword 0x3384
jmp short 0x1f033
cmp byte [ebp-0x9],0x0
jz 0x1f070
mov eax,[ebp-0x10]
mov eax,[eax+0x8]
test eax,eax
jz 0x1f059
push eax
call dword 0x5cc0
mov edx,[ebp-0x8]
mov eax,[ebp-0x4]
mov si,0xffff
call dword 0x2dec
mov eax,[ebp-0x8]
call dword 0x1e7c
pop esi
mov esp,ebp
pop ebp
ret
lea eax,[eax+0x0]
push ebp
mov ebp,esp
add esp,byte -0x8
push ebx
push esi
push edi
mov [ebp-0x8],ecx
mov ebx,edx
mov [ebp-0x4],eax
mov eax,[ebp-0x4]
call dword 0x1eeb8
xor eax,eax
push ebp
push dword 0x4200e1
push dword [fs:eax]
mov [fs:eax],esp
mov edi,[ebx+0x10]
mov edx,[ebp-0x8]
mov eax,[ebp-0x4]
call dword 0x1eed0
mov esi,eax
mov [ebx+0x10],esi
cmp edi,esi
jz 0x1f0c1
mov eax,ebx
mov si,0xfffd
call dword 0x2dec
mov edx,edi
mov eax,[ebp-0x4]
call dword 0x1efb4
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x4200e8
mov eax,[ebp-0x4]
call dword 0x1eec4
ret
jmp dword 0x3384
jmp short 0x1f0d8
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
ret
nop
ret
lea eax,[eax+0x0]
push ebp
mov ebp,esp
push ecx
push ebx
push esi
push edi
mov edi,ecx
mov esi,edx
mov [ebp-0x4],eax
mov eax,[ebp-0x4]
call dword 0x1eeb8
xor eax,eax
push ebp
push dword 0x420150
push dword [fs:eax]
mov [fs:eax],esp
mov ebx,[esi+0x10]
cmp edi,ebx
jz 0x1f13a
inc dword [edi+0x4]
mov [esi+0x10],edi
mov eax,esi
mov si,0xfffd
call dword 0x2dec
mov edx,ebx
mov eax,[ebp-0x4]
call dword 0x1efb4
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x420157
mov eax,[ebp-0x4]
call dword 0x1eec4
ret
jmp dword 0x3384
jmp short 0x1f147
pop edi
pop esi
pop ebx
pop ecx
pop ebp
ret
lea eax,[eax+0x0]
cmp byte [edx+0x1d],0x0
jz 0x1f16e
lea eax,[edx+0x18]
call dword 0xd0e8
ret
nop
push ebp
mov ebp,esp
push ecx
push ebx
push esi
push edi
mov [ebp-0x4],eax
mov eax,[ebp-0x4]
call dword 0x1eeb8
xor eax,eax
push ebp
push dword 0x4201d0
push dword [fs:eax]
mov [fs:eax],esp
mov eax,[ebp-0x4]
mov ebx,[eax+0x4]
test ebx,ebx
jz 0x1f1ba
mov esi,ebx
mov edi,[esi+0x8]
test edi,edi
jz 0x1f1b4
cmp dword [esi+0x14],byte +0x0
jnl 0x1f1b4
push edi
call dword 0x5cc0
xor eax,eax
mov [esi+0x8],eax
mov ebx,[ebx]
test ebx,ebx
jnz 0x1f19a
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x4201d7
mov eax,[ebp-0x4]
call dword 0x1eec4
ret
jmp dword 0x3384
jmp short 0x1f1c7
pop edi
pop esi
pop ebx
pop ecx
pop ebp
ret
lea eax,[eax+0x0]
push ebp
mov ebp,esp
add esp,byte -0x8
push ebx
push esi
xor eax,eax
mov [ebp-0x4],eax
mov eax,[0x46da88]
call dword 0x14244
mov [ebp-0x8],eax
xor eax,eax
push ebp
push dword 0x42027d
push dword [fs:eax]
mov [fs:eax],esp
jmp short 0x1f228
mov edx,[ebp-0x4]
mov eax,[ebp-0x8]
call dword 0x13e7c
mov ebx,eax
mov eax,ebx
call dword 0x2086c
inc dword [ebp-0x4]
mov eax,ebx
call dword 0x20b54
mov eax,[ebp-0x8]
mov eax,[eax+0x8]
cmp eax,[ebp-0x4]
jg 0x1f20a
mov eax,[0x46da80]
call dword 0x1f170
mov eax,[0x46da84]
call dword 0x1f170
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x420284
mov ebx,[ebp-0x4]
dec ebx
test ebx,ebx
jl 0x1f272
inc ebx
xor esi,esi
mov edx,esi
mov eax,[ebp-0x8]
call dword 0x13e7c
call dword 0x20a24
inc esi
dec ebx
jnz 0x1f25f
mov eax,[0x46da88]
call dword 0x142a8
ret
jmp dword 0x3384
jmp short 0x1f254
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
ret
mov eax,eax
db 0xff
db 0xff
db 0xff
inc dword [edi]
add [eax],al
add [ebx+0x6c],ah
inc edx
insb
popad
arpl [ebx+0x0],bp
db 0xff
db 0xff
db 0xff
dec dword [eax]
add [eax],al
add [ebx+0x6c],ah
dec ebp
popad
jc 0x1f319
outsd
outsb
add [eax],al
add [eax],al
db 0xff
db 0xff
db 0xff
inc dword [edi]
add [eax],al
add [ebx+0x6c],ah
inc edi
jc 0x1f322
gs outsb
add bh,bh
db 0xff
db 0xff
inc dword [edi]
add [eax],al
add [ebx+0x6c],ah
dec edi
insb
imul esi,[esi+0x65],dword 0xffffff00
inc dword [esi]
add [eax],al
add [ebx+0x6c],ah
dec esi
popad
jna 0x1f357
add [eax],al
db 0xff
db 0xff
db 0xff
dec dword [eax]
add [eax],al
add [ebx+0x6c],ah
push eax
jnz 0x1f35f
jo 0x1f35b
add [gs:eax],al
add [eax],al
db 0xff
db 0xff
db 0xff
inc dword [esi]
add [eax],al
add [ebx+0x6c],ah
push esp
gs popad
insb
add [eax],al
db 0xff
db 0xff
db 0xff
inc dword [esi]
add [eax],al
add [ebx+0x6c],ah
inc edi
jc 0x1f372
jns 0x1f313
add bh,bh
db 0xff
db 0xff
dec dword [eax]
add [eax],al
add [ebx+0x6c],ah
push ebx
imul ebp,[esi+esi*2+0x65],dword 0x72
add bh,bh
db 0xff
db 0xff
inc dword [dword 0x63000000]
insb
push edx
add [fs:eax],al
add bh,bh
db 0xff
db 0xff
inc dword [esi]
add [eax],al
add [ebx+0x6c],ah
dec esp
imul ebp,[ebp+0x65],dword 0xffff0000
db 0xff
dec dword [eax]
add [eax],al
add [ebx+0x6c],ah
pop ecx
gs insb
insb
outsd
ja 0x1f359
add [eax],al
add bh,bh
db 0xff
db 0xff
inc dword [esi]
add [eax],al
add [ebx+0x6c],ah
inc edx
insb
jnz 0x1f3cf
add [eax],al
db 0xff
db 0xff
db 0xff
dec dword [ecx]
add [eax],al
add [ebx+0x6c],ah
inc esi
jnz 0x1f3dc
push dword 0x616973
add [eax],al
db 0xff
db 0xff
db 0xff
inc dword [esi]
add [eax],al
add [ebx+0x6c],ah
inc ecx
jno 0x1f402
popad
add [eax],al
db 0xff
db 0xff
db 0xff
inc dword [edi]
add [eax],al
add [ebx+0x6c],ah
push edi
push dword 0x657469
db 0xff
db 0xff
db 0xff
dec dword [eax+eax]
add [eax],al
arpl [ebp+ecx*2+0x6f],bp
outsb
gs jns 0x1f3f7
jc 0x1f417
gs outsb
add [eax],al
add [eax],al
db 0xff
db 0xff
db 0xff
dec dword [ecx]
add [eax],al
add [ebx+0x6c],ah
push ebx
imul edi,[ecx+0x42],byte +0x6c
jnz 0x1f42e
add [eax],al
add bh,bh
db 0xff
db 0xff
inc dword [edi]
add [eax],al
add [ebx+0x6c],ah
inc ebx
jc 0x1f43e
popad
insd
add bh,bh
db 0xff
db 0xff
dec dword [ecx]
add [eax],al
add [ebx+0x6c],ah
dec ebp
fs inc edi
jc 0x1f44d
jns 0x1f3ee
add [eax],al
db 0xff
db 0xff
db 0xff
dec dword [esi]
add [eax],al
add [ebx+0x6c],ah
inc ecx
arpl [ecx+ebp*2+0x76],si
gs inc edx
outsd
jc 0x1f468
gs jc 0x1f407
add bh,bh
db 0xff
db 0xff
dec dword [edi]
add [eax],al
add [ebx+0x6c],ah
inc ecx
arpl [ecx+ebp*2+0x76],si
gs inc ebx
popad
jo 0x1f490
imul ebp,[edi+0x6e],dword 0xffffff00
dec dword [esi]
add [eax],al
add [ebx+0x6c],ah
inc ecx
jo 0x1f49d
push edi
outsd
jc 0x1f49c
push ebx
jo 0x1f495
arpl [ebp+0x0],sp
add bh,bh
db 0xff
db 0xff
dec dword [eax+eax]
add [eax],al
arpl [edx+eax*2+0x61],bp
arpl [ebx+0x67],bp
jc 0x1f4b8
jnz 0x1f4b9
add [fs:eax],al
add [eax],al
db 0xff
db 0xff
db 0xff
dec dword [ecx]
add [eax],al
add [ebx+0x6c],ah
inc edx
jz 0x1f4cb
inc esi
popad
arpl [ebp+0x0],sp
add [eax],al
db 0xff
db 0xff
db 0xff
dec dword [esi]
add [eax],al
add [ebx+0x6c],ah
inc edx
jz 0x1f4df
dec eax
imul esp,[edi+0x68],dword 0x6867696c
jz 0x1f47b
add bh,bh
db 0xff
db 0xff
dec dword [ebx]
add [eax],al
add [ebx+0x6c],ah
inc edx
jz 0x1f4f7
push ebx
push dword 0x776f6461
add bh,bh
db 0xff
db 0xff
dec dword [ecx]
add [eax],al
add [ebx+0x6c],ah
inc edx
jz 0x1f50b
push esp
gs js 0x1f515
add [eax],al
add bh,bh
db 0xff
db 0xff
dec dword [dword 0x63000000]
insb
inc ebx
popad
jo 0x1f526
imul ebp,[edi+0x6e],dword 0x74786554
add [eax],al
add bh,bh
db 0xff
db 0xff
dec dword [ecx]
add [eax],al
add [ebx+0x6c],ah
inc esp
gs popaw
jnz 0x1f538
jz 0x1f4ce
add [eax],al
db 0xff
db 0xff
db 0xff
call dword [edi]
add [eax],al
add [ebx+0x6c],ah
inc edi
jc 0x1f53e
imul esp,[fs:ebp+0x6e],dword 0x74634174
imul esi,[esi+0x65],dword 0x74706143
imul ebp,[edi+0x6e],dword 0xffffff00
call dword far [ecx]
add [eax],al
add [ebx+0x6c],ah
inc edi
jc 0x1f55e
imul esp,[fs:ebp+0x6e],dword 0x616e4974
arpl [ecx+ebp*2+0x76],si
gs inc ebx
popad
jo 0x1f582
imul ebp,[edi+0x6e],dword 0xff000000
db 0xff
db 0xff
dec dword [edx]
add [eax],al
add [ebx+0x6c],ah
inc edi
jc 0x1f582
jns 0x1f577
gs js 0x1f59a
add [eax],al
db 0xff
db 0xff
db 0xff
dec dword [ebx]
add [eax],al
add [ebx+0x6c],ah
dec eax
imul esp,[edi+0x68],dword 0x6867696c
jz 0x1f53c
db 0xff
db 0xff
db 0xff
dec dword [edi]
add [eax],al
add [ebx+0x6c],ah
dec eax
imul esp,[edi+0x68],dword 0x6867696c
jz 0x1f5a4
gs js 0x1f5c7
add bh,bh
db 0xff
db 0xff
dec dword [edx]
add [eax],al
add [ebx+0x6c],ah
dec eax
outsd
jz 0x1f5ae
imul esp,[edi+0x68],dword 0xff000074
db 0xff
db 0xff
call dword [eax]
add [eax],al
add [ebx+0x6c],ah
dec ecx
outsb
popad
arpl [ecx+ebp*2+0x76],si
gs inc edx
outsd
jc 0x1f5e2
gs jc 0x1f581
add [eax],al
add bh,bh
db 0xff
db 0xff
call dword [ecx]
add [eax],al
add [ebx+0x6c],ah
dec ecx
outsb
popad
arpl [ecx+ebp*2+0x76],si
gs inc ebx
popad
jo 0x1f60e
imul ebp,[edi+0x6e],dword 0xff000000
db 0xff
db 0xff
call dword [dword 0x63000000]
insb
dec ecx
outsb
popad
arpl [ecx+ebp*2+0x76],si
gs inc ebx
popad
jo 0x1f62a
imul ebp,[edi+0x6e],dword 0x74786554
add [eax],al
add bh,bh
db 0xff
db 0xff
dec dword [eax]
add [eax],al
add [ebx+0x6c],ah
dec ecx
outsb
outsw
inc edx
imul eax,[eax],byte +0x0
add [eax],al
db 0xff
db 0xff
db 0xff
dec dword [edx]
add [eax],al
add [ebx+0x6c],ah
dec ecx
outsb
outsw
push esp
gs js 0x1f65a
add [eax],al
db 0xff
db 0xff
db 0xff
inc dword [esi]
add [eax],al
add [ebx+0x6c],ah
dec ebp
gs outsb
jnz 0x1f5f7
add bh,bh
db 0xff
db 0xff
dec dword [ecx]
add [eax],al
add [ebx+0x6c],ah
dec ebp
gs outsb
jnz 0x1f649
popad
jc 0x1f60a
add [eax],al
db 0xff
db 0xff
db 0xff
dec dword [edi]
add [eax],al
add [ebx+0x6c],ah
dec ebp
gs outsb
jnz 0x1f663
imul esp,[edi+0x68],dword 0x6867696c
jz 0x1f624
db 0xff
db 0xff
db 0xff
dec dword [edx]
add [eax],al
add [ebx+0x6c],ah
dec ebp
gs outsb
jnz 0x1f687
gs js 0x1f6aa
add [eax],al
db 0xff
db 0xff
db 0xff
inc dword [esi]
add [eax],al
add [ebx+0x6c],ah
dec esi
outsd
outsb
add [gs:eax],al
db 0xff
db 0xff
db 0xff
dec dword [ebx]
add [eax],al
add [ebx+0x6c],ah
push ebx
arpl [edx+0x6f],si
insb
insb
inc edx
popad
jc 0x1f65c
db 0xff
db 0xff
db 0xff
dec dword [eax+eax]
add [eax],al
arpl [ebx+esi+0x44],bp
inc esp
imul edx,[ebx+0x68],byte +0x61
fs outsd
ja 0x1f671
add [eax],al
add bh,bh
db 0xff
db 0xff
dec dword [ecx]
add [eax],al
add [ebx+0x6c],ah
xor eax,[esp+ecx*2+0x69]
push dword 0x74
db 0xff
db 0xff
db 0xff
dec dword [eax]
add [eax],al
add [ebx+0x6c],ah
push edi
imul ebp,[esi+0x64],dword 0x776f
add [eax],al
db 0xff
db 0xff
db 0xff
dec dword [dword 0x63000000]
insb
push edi
imul ebp,[esi+0x64],dword 0x7246776f
popad
insd
add [gs:eax],al
add bh,bh
db 0xff
db 0xff
dec dword [eax+eax]
add [eax],al
arpl [edi+edx*2+0x69],bp
outsb
fs outsd
ja 0x1f719
gs js 0x1f73c
add [eax],al
add [eax],al
test eax,eax
jnl 0x1f6db
and eax,0xff
push eax
call dword 0x60c0
ret
push byte +0x33
mov ecx,0x467b44
call dword 0x1392c
ret
lea eax,[eax+0x0]
push byte +0x33
mov ecx,0x467b44
call dword 0x138ec
ret
lea eax,[eax+0x0]
push ebx
cmp word [eax+0xa],byte +0x0
jz 0x1f70e
mov ebx,eax
mov edx,eax
mov eax,[ebx+0xc]
call dword [ebx+0x8]
pop ebx
ret
mov edx,[eax+0x14]
test edx,edx
jz 0x1f71d
push edx
call dword 0x5ab0
ret
mov eax,eax
mov edx,[eax+0x14]
test edx,edx
jz 0x1f72d
push edx
call dword 0x5ba0
ret
mov eax,eax
db 0xff
db 0xff
db 0xff
dec dword [eax+eax]
add [eax],al
inc ecx
dec esi
push ebx
dec ecx
pop edi
inc ebx
dec eax
inc ecx
push edx
push ebx
inc ebp
push esp
add [eax],al
add [eax],al
db 0xff
db 0xff
db 0xff
dec dword [edi]
add [eax],al
add [ebp+eax*2+0x46],al
inc ecx
push ebp
dec esp
push esp
pop edi
inc ebx
dec eax
inc ecx
push edx
push ebx
inc ebp
push esp
add bh,bh
db 0xff
db 0xff
dec dword [esi]
add [eax],al
add [ebx+0x59],dl
dec ebp
inc edx
dec edi
dec esp
pop edi
inc ebx
dec eax
inc ecx
push edx
push ebx
inc ebp
push esp
add [eax],al
db 0xff
db 0xff
db 0xff
dec dword [ebx]
add [eax],al
add [ebp+0x41],cl
inc ebx
pop edi
inc ebx
dec eax
inc ecx
push edx
push ebx
inc ebp
push esp
add bh,bh
db 0xff
db 0xff
call dword [eax]
add [eax],al
add [ebx+0x48],dl
dec ecx
inc esi
push esp
dec edx
dec ecx
push ebx
pop edi
inc ebx
dec eax
inc ecx
push edx
push ebx
inc ebp
push esp
add [eax],al
add [eax],al
db 0xff
db 0xff
db 0xff
dec dword [edi]
add [eax],al
add [eax+0x41],cl
dec esi
inc edi
inc ebp
push ebp
dec esp
pop edi
inc ebx
dec eax
inc ecx
push edx
push ebx
inc ebp
push esp
add bh,bh
db 0xff
db 0xff
dec dword [dword 0x4a000000]
dec edi
dec eax
inc ecx
inc edx
pop edi
inc ebx
dec eax
inc ecx
push edx
push ebx
inc ebp
push esp
add [eax],al
add bh,bh
db 0xff
db 0xff
dec dword [esi]
add [eax],al
add [edi+0x42],al
xor dh,[ebx]
xor [edx],esi
pop edi
inc ebx
dec eax
inc ecx
push edx
push ebx
inc ebp
push esp
add [eax],al
db 0xff
db 0xff
db 0xff
call dword [ebx]
add [eax],al
add [ebx+0x48],al
dec ecx
dec esi
inc ebp
push ebx
inc ebp
inc edx
dec ecx
inc edi
xor eax,0x4148435f
push edx
push ebx
inc ebp
push esp
add bh,bh
db 0xff
db 0xff
dec dword [dword 0x47000000]
push edx
inc ebp
inc ebp
dec ebx
pop edi
inc ebx
dec eax
inc ecx
push edx
push ebx
inc ebp
push esp
add [eax],al
add bh,bh
db 0xff
db 0xff
dec dword [edi]
add [eax],al
add [ebp+edx*2+0x52],dl
dec ebx
dec ecx
push ebx
dec eax
pop edi
inc ebx
dec eax
inc ecx
push edx
push ebx
inc ebp
push esp
add bh,bh
db 0xff
db 0xff
dec dword [esi]
add [eax],al
add [eax+0x45],cl
inc edx
push edx
inc ebp
push edi
pop edi
inc ebx
dec eax
inc ecx
push edx
push ebx
inc ebp
push esp
add [eax],al
db 0xff
db 0xff
db 0xff
dec dword [esi]
add [eax],al
add [ecx+0x52],al
inc ecx
inc edx
dec ecx
inc ebx
pop edi
inc ebx
dec eax
inc ecx
push edx
push ebx
inc ebp
push esp
add [eax],al
db 0xff
db 0xff
db 0xff
dec dword [esi]
add [eax],al
add [edx+0x41],al
dec esp
push esp
dec ecx
inc ebx
pop edi
inc ebx
dec eax
inc ecx
push edx
push ebx
inc ebp
push esp
add [eax],al
db 0xff
db 0xff
db 0xff
dec dword [edi]
add [eax],al
add [edx+0x55],dl
push ebx
push ebx
dec ecx
inc ecx
dec esi
pop edi
inc ebx
dec eax
inc ecx
push edx
push ebx
inc ebp
push esp
add bh,bh
db 0xff
db 0xff
dec dword [eax+eax]
add [eax],al
push esp
dec eax
inc ecx
dec ecx
pop edi
inc ebx
dec eax
inc ecx
push edx
push ebx
inc ebp
push esp
add [eax],al
add [eax],al
db 0xff
db 0xff
db 0xff
call dword [edx]
add [eax],al
add [ebp+0x41],al
push ebx
push esp
inc ebp
push ebp
push edx
dec edi
push eax
inc ebp
pop edi
inc ebx
dec eax
inc ecx
push edx
push ebx
inc ebp
push esp
add [eax],al
db 0xff
db 0xff
db 0xff
dec dword [ebx]
add [eax],al
add [edi+0x45],cl
dec ebp
pop edi
inc ebx
dec eax
inc ecx
push edx
push ebx
inc ebp
push esp
add [edx+0x11],ch
mov ecx,0x467ce4
call dword 0x1392c
ret
lea eax,[eax+0x0]
push byte +0x11
mov ecx,0x467ce4
call dword 0x138ec
ret
lea eax,[eax+0x0]
push ebx
push esi
push edi
add esp,byte -0x60
mov ebx,edx
mov esi,eax
push esi
mov edi,ebx
mov esi,0x467b10
mov ecx,0xc
rep movsd
pop esi
test esi,esi
jz dword 0x1f9bc
push esp
push byte +0x3c
push esi
call dword 0x5d28
test eax,eax
jz dword 0x1f9bc
mov eax,[esp]
mov [ebx+0x4],eax
cmp dword [esp+0x10],0x2bc
jl 0x1f94b
or byte [ebx+0xd],0x1
cmp byte [esp+0x14],0x1
jnz 0x1f956
or byte [ebx+0xd],0x2
cmp byte [esp+0x15],0x1
jnz 0x1f961
or byte [ebx+0xd],0x4
cmp byte [esp+0x16],0x1
jnz 0x1f96c
or byte [ebx+0xd],0x8
movzx eax,byte [esp+0x17]
mov [ebx+0xe],al
lea eax,[esp+0x3c]
lea edx,[esp+0x1c]
mov ecx,0x20
call dword 0x26a8
lea edx,[esp+0x3c]
lea eax,[ebx+0xf]
mov cl,0x1f
call dword 0x241c
movzx eax,byte [esp+0x1b]
and al,0xf
dec al
jz 0x1f9a9
dec al
jnz 0x1f9af
mov byte [ebx+0xc],0x1
jmp short 0x1f9b3
mov byte [ebx+0xc],0x2
jmp short 0x1f9b3
mov byte [ebx+0xc],0x0
mov [ebx],esi
mov eax,[esp+0xc]
mov [ebx+0x8],eax
add esp,byte +0x60
pop edi
pop esi
pop ebx
ret
nop
push ebx
push esi
test dl,dl
jz 0x1f9d2
add esp,byte -0x10
call dword 0x2f14
mov ebx,edx
mov esi,eax
xor eax,eax
mov [0x467b10],eax
mov edx,0x467b10
mov eax,[0x46da7c]
call dword 0x1eed0
mov [esi+0x10],eax
mov dword [esi+0x18],0xff000008
mov eax,[0x46da38]
mov [esi+0x1c],eax
mov eax,esi
test bl,bl
jz 0x1fa13
call dword 0x2f6c
pop dword [dword fs:0x0]
add esp,byte +0xc
mov eax,esi
pop esi
pop ebx
ret
push ebx
push esi
call dword 0x2fbc
mov ebx,edx
mov esi,eax
mov edx,[esi+0x10]
mov eax,[0x46da7c]
call dword 0x1efb4
test bl,bl
jng 0x1fa3b
mov eax,esi
call dword 0x2f64
pop esi
pop ebx
ret
mov eax,eax
push ebx
mov ebx,eax
mov eax,ebx
call dword 0x1f6fc
cmp dword [ebx+0x20],byte +0x0
jz 0x1fa58
mov eax,[ebx+0x20]
mov edx,[eax]
call dword [edx+0xc]
pop ebx
ret
mov eax,eax
push ebp
mov ebp,esp
add esp,byte -0x8
push ebx
mov [ebp-0x8],edx
mov [ebp-0x4],eax
mov eax,[ebp-0x8]
mov edx,[dword 0x41f170]
call dword 0x2d7c
test al,al
jz dword 0x1fb1e
mov eax,[ebp-0x4]
call dword 0x1f710
xor eax,eax
push ebp
push dword 0x420b17
push dword [fs:eax]
mov [fs:eax],esp
mov ebx,[ebp-0x8]
mov eax,ebx
call dword 0x1f710
xor eax,eax
push ebp
push dword 0x420afa
push dword [fs:eax]
mov [fs:eax],esp
mov ecx,[ebx+0x10]
mov edx,[ebp-0x4]
mov eax,[0x46da7c]
call dword 0x1f0f4
mov edx,[ebx+0x18]
mov eax,[ebp-0x4]
call dword 0x1fb98
mov eax,[ebp-0x4]
mov eax,[eax+0x1c]
cmp eax,[ebx+0x1c]
jz 0x1fae4
mov eax,ebx
call dword 0x1fedc
mov edx,eax
mov eax,[ebp-0x4]
call dword 0x1fef8
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x420b01
mov eax,[ebp-0x8]
call dword 0x1f720
ret
jmp dword 0x3384
jmp short 0x1faf1
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x420b29
mov eax,[ebp-0x4]
call dword 0x1f720
ret
jmp dword 0x3384
jmp short 0x1fb0e
mov edx,[ebp-0x8]
mov eax,[ebp-0x4]
call dword 0x1447c
pop ebx
pop ecx
pop ecx
pop ebp
ret
mov eax,eax
push esi
push edi
mov eax,[eax+0x10]
lea esi,[eax+0x10]
mov edi,edx
mov ecx,0xc
rep movsd
xor eax,eax
mov [edx],eax
pop edi
pop esi
ret
push ebp
mov ebp,esp
push ecx
push ebx
mov ebx,edx
mov [ebp-0x4],eax
mov eax,[ebp-0x4]
call dword 0x1f710
xor eax,eax
push ebp
push dword 0x420b8d
push dword [fs:eax]
mov [fs:eax],esp
mov ecx,ebx
mov edx,[ebp-0x4]
mov eax,[0x46da7c]
call dword 0x1f078
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x420b94
mov eax,[ebp-0x4]
call dword 0x1f720
ret
jmp dword 0x3384
jmp short 0x1fb84
pop ebx
pop ecx
pop ebp
ret
push esi
cmp edx,[eax+0x18]
jz 0x1fbaa
mov [eax+0x18],edx
mov si,0xfffd
call dword 0x2dec
pop esi
ret
push ebx
mov ebx,eax
movzx eax,byte [ebx+0xe]
cmp al,[dword 0x467b1e]
jnz 0x1fbce
mov eax,0x467b1f
lea edx,[ebx+0xf]
movzx ecx,byte [eax]
inc ecx
call dword 0x24bc
jz 0x1fbd2
xor eax,eax
pop ebx
ret
mov al,0x1
pop ebx
ret
mov eax,eax
push ebp
mov ebp,esp
add esp,byte -0x50
push ebx
push esi
push edi
xor edx,edx
mov [ebp-0x50],edx
mov [ebp-0x4c],edx
mov [ebp-0x48],edx
mov [ebp-0x44],edx
mov ebx,eax
xor eax,eax
push ebp
push dword 0x420df4
push dword [fs:eax]
mov [fs:eax],esp
mov eax,[ebx+0x10]
mov [ebp-0x4],eax
mov eax,[ebp-0x4]
cmp dword [eax+0x8],byte +0x0
jnz dword 0x1fdd3
mov eax,[0x46da7c]
call dword 0x1eeb8
xor edx,edx
push ebp
push dword 0x420dcc
push dword [fs:edx]
mov [fs:edx],esp
mov eax,[ebp-0x4]
cmp dword [eax+0x8],byte +0x0
jnz dword 0x1fdb4
mov eax,[ebp-0x4]
mov eax,[eax+0x14]
mov [ebp-0x40],eax
xor eax,eax
mov [ebp-0x3c],eax
mov eax,[ebp-0x4]
mov eax,[eax+0x18]
mov [ebp-0x38],eax
mov [ebp-0x34],eax
mov eax,[ebp-0x4]
test byte [eax+0x1d],0x1
jz 0x1fc63
mov dword [ebp-0x30],0x2bc
jmp short 0x1fc6a
mov dword [ebp-0x30],0x190
mov eax,[ebp-0x4]
test byte [eax+0x1d],0x2
setnz al
mov [ebp-0x2c],al
mov eax,[ebp-0x4]
test byte [eax+0x1d],0x4
setnz al
mov [ebp-0x2b],al
mov eax,[ebp-0x4]
test byte [eax+0x1d],0x8
setnz al
mov [ebp-0x2a],al
mov eax,[ebp-0x4]
movzx eax,byte [eax+0x1e]
cmp al,0x1
jnz 0x1fcb1
cmp byte [dword 0x467b1e],0x1
jz 0x1fcb1
movzx eax,byte [dword 0x467b1e]
mov [ebp-0x29],al
jmp short 0x1fcb4
mov [ebp-0x29],al
lea eax,[ebp-0x44]
mov edx,[ebp-0x4]
add edx,byte +0x1f
call dword 0x3c80
mov esi,[ebp-0x44]
test esi,esi
jz 0x1fcce
sub esi,byte +0x4
mov esi,[esi]
mov edi,0x420e0c
test edi,edi
jz 0x1fcdc
sub edi,byte +0x4
mov edi,[edi]
push edi
mov eax,0x420e0c
call dword 0x3eac
push eax
push esi
lea eax,[ebp-0x48]
mov edx,[ebp-0x4]
add edx,byte +0x1f
call dword 0x3c80
mov eax,[ebp-0x48]
call dword 0x3eac
push eax
push byte +0x1
push dword 0x400
call dword 0x5a78
sub eax,byte +0x2
test eax,eax
jnz 0x1fd2d
lea eax,[ebp-0x4c]
mov edx,0x467b1f
call dword 0x3c80
mov edx,[ebp-0x4c]
lea eax,[ebp-0x24]
call dword 0x848c
jmp short 0x1fd46
lea eax,[ebp-0x50]
mov edx,[ebp-0x4]
add edx,byte +0x1f
call dword 0x3c80
mov edx,[ebp-0x50]
lea eax,[ebp-0x24]
call dword 0x848c
mov eax,[0x468ea4]
cmp dword [eax],byte +0x1
jnz 0x1fd6c
call dword 0x267fc
cmp al,0x80
jnz 0x1fd6c
mov eax,[ebp-0x4]
add eax,byte +0x10
call dword 0x1fbac
test al,al
jz 0x1fd6c
mov byte [ebp-0x29],0x80
mov byte [ebp-0x26],0x0
cmp dword [ebp-0x34],byte +0x0
jz 0x1fd7c
mov byte [ebp-0x28],0x7
jmp short 0x1fd80
mov byte [ebp-0x28],0x0
mov byte [ebp-0x27],0x0
mov eax,ebx
call dword 0x1ff50
dec al
jz 0x1fd95
dec al
jz 0x1fd9b
jmp short 0x1fda1
mov byte [ebp-0x25],0x2
jmp short 0x1fda5
mov byte [ebp-0x25],0x1
jmp short 0x1fda5
mov byte [ebp-0x25],0x0
lea eax,[ebp-0x40]
push eax
call dword 0x5c88
mov edx,[ebp-0x4]
mov [edx+0x8],eax
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x420dd3
mov eax,[0x46da7c]
call dword 0x1eec4
ret
jmp dword 0x3384
jmp short 0x1fdc1
mov eax,[ebp-0x4]
mov ebx,[eax+0x8]
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x420dfb
lea eax,[ebp-0x50]
mov edx,0x4
call dword 0x3a40
ret
jmp dword 0x3384
jmp short 0x1fde6
mov eax,ebx
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret
db 0xff
db 0xff
db 0xff
inc dword [edi]
add [eax],al
add [ebp+0x66],al
popad
jnz 0x1fe7e
jz 0x1fe14
push ebx
push esi
add esp,byte -0x30
mov esi,edx
mov ebx,eax
mov edx,esp
mov eax,esi
call dword 0x1f904
mov edx,esp
mov eax,ebx
call dword 0x1fb48
add esp,byte +0x30
pop esi
pop ebx
ret
lea eax,[eax+0x0]
mov eax,[eax+0x10]
mov eax,[eax+0x14]
ret
nop
push ebx
push esi
add esp,byte -0x30
mov esi,edx
mov ebx,eax
mov edx,esp
mov eax,ebx
call dword 0x1fb30
mov [esp+0x4],esi
mov edx,esp
mov eax,ebx
call dword 0x1fb48
add esp,byte +0x30
pop esi
pop ebx
ret
lea eax,[eax+0x0]
push ebx
push esi
mov esi,edx
mov ebx,eax
mov eax,esi
mov edx,[ebx+0x10]
add edx,byte +0x1f
call dword 0x3c80
pop esi
pop ebx
ret
mov eax,eax
push ebx
push esi
add esp,0xfffffed0
mov esi,edx
mov ebx,eax
test esi,esi
jz 0x1fed1
mov edx,esp
mov eax,ebx
call dword 0x1fb30
lea eax,[esp+0xf]
xor ecx,ecx
mov edx,0x20
call dword 0x252c
lea eax,[esp+0x30]
mov edx,esi
mov ecx,0xff
call dword 0x3cb8
lea edx,[esp+0x30]
lea eax,[esp+0xf]
mov cl,0x1f
call dword 0x241c
mov edx,esp
mov eax,ebx
call dword 0x1fb48
add esp,0x130
pop esi
pop ebx
ret
mov eax,eax
push ebx
mov ebx,eax
mov eax,[ebx+0x1c]
push eax
push byte +0x48
mov eax,ebx
call dword 0x1fe38
push eax
call dword 0x5bc0
neg eax
pop ebx
ret
mov eax,eax
push ebx
push esi
mov esi,edx
mov ebx,eax
push byte +0x48
mov eax,[ebx+0x1c]
push eax
push esi
call dword 0x5bc0
mov edx,eax
neg edx
mov eax,ebx
call dword 0x1fe40
pop esi
pop ebx
ret
mov eax,[eax+0x10]
movzx edx,byte [eax+0x1d]
mov eax,edx
ret
mov eax,eax
push ebx
add esp,byte -0x34
mov [esp],dl
mov ebx,eax
lea edx,[esp+0x4]
mov eax,ebx
call dword 0x1fb30
movzx eax,byte [esp]
mov [esp+0x11],al
lea edx,[esp+0x4]
mov eax,ebx
call dword 0x1fb48
add esp,byte +0x34
pop ebx
ret
mov eax,[eax+0x10]
movzx eax,byte [eax+0x1c]
ret
push ebx
push esi
add esp,byte -0x30
mov ebx,edx
mov esi,eax
mov edx,esp
mov eax,esi
call dword 0x1fb30
mov [esp+0xc],bl
mov edx,esp
mov eax,esi
call dword 0x1fb48
add esp,byte +0x30
pop esi
pop ebx
ret
lea eax,[eax+0x0]
mov eax,[eax+0x10]
movzx eax,byte [eax+0x1e]
ret
push ebx
push esi
add esp,byte -0x30
mov ebx,edx
mov esi,eax
mov edx,esp
mov eax,esi
call dword 0x1fb30
mov [esp+0xe],bl
mov edx,esp
mov eax,esi
call dword 0x1fb48
add esp,byte +0x30
pop esi
pop ebx
ret
lea eax,[eax+0x0]
mov eax,[eax+0x10]
mov eax,[eax+0x18]
ret
nop
push ebx
push esi
add esp,byte -0x30
mov esi,edx
mov ebx,eax
mov edx,esp
mov eax,ebx
call dword 0x1fb30
mov [esp+0x8],esi
mov edx,esp
mov eax,ebx
call dword 0x1fb48
add esp,byte +0x30
pop esi
pop ebx
ret
lea eax,[eax+0x0]
push ebx
push esi
test dl,dl
jz 0x1ffee
add esp,byte -0x10
call dword 0x2f14
mov ebx,edx
mov esi,eax
mov edx,0x467d74
mov eax,[0x46da80]
call dword 0x1eed0
mov [esi+0x10],eax
mov byte [esi+0x18],0x4
mov eax,esi
test bl,bl
jz 0x2001d
call dword 0x2f6c
pop dword [dword fs:0x0]
add esp,byte +0xc
mov eax,esi
pop esi
pop ebx
ret
mov eax,eax
push ebx
push esi
call dword 0x2fbc
mov ebx,edx
mov esi,eax
mov edx,[esi+0x10]
mov eax,[0x46da80]
call dword 0x1efb4
test bl,bl
jng 0x20047
mov eax,esi
call dword 0x2f64
pop esi
pop ebx
ret
mov eax,eax
push ebp
mov ebp,esp
add esp,byte -0x8
push ebx
mov [ebp-0x8],edx
mov [ebp-0x4],eax
mov eax,[ebp-0x8]
mov edx,[dword 0x41f310]
call dword 0x2d7c
test al,al
jz dword 0x200f3
mov eax,[ebp-0x4]
call dword 0x1f710
xor eax,eax
push ebp
push dword 0x4210ec
push dword [fs:eax]
mov [fs:eax],esp
mov ebx,[ebp-0x8]
mov eax,ebx
call dword 0x1f710
xor eax,eax
push ebp
push dword 0x4210cf
push dword [fs:eax]
mov [fs:eax],esp
mov ecx,[ebx+0x10]
mov edx,[ebp-0x4]
mov eax,[0x46da80]
call dword 0x1f0f4
movzx edx,byte [ebx+0x18]
mov eax,[ebp-0x4]
call dword 0x20234
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x4210d6
mov eax,[ebp-0x8]
call dword 0x1f720
ret
jmp dword 0x3384
jmp short 0x200c6
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x4210fe
mov eax,[ebp-0x4]
call dword 0x1f720
ret
jmp dword 0x3384
jmp short 0x200e3
mov edx,[ebp-0x8]
mov eax,[ebp-0x4]
call dword 0x1447c
pop ebx
pop ecx
pop ecx
pop ebp
ret
nop
push esi
push edi
mov eax,[eax+0x10]
lea esi,[eax+0x10]
mov edi,edx
movsd
movsd
movsd
movsd
xor eax,eax
mov [edx],eax
pop edi
pop esi
ret
lea eax,[eax+0x0]
push ebp
mov ebp,esp
push ecx
push ebx
mov ebx,edx
mov [ebp-0x4],eax
mov eax,[ebp-0x4]
call dword 0x1f710
xor eax,eax
push ebp
push dword 0x421161
push dword [fs:eax]
mov [fs:eax],esp
mov ecx,ebx
mov edx,[ebp-0x4]
mov eax,[0x46da80]
call dword 0x1f078
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x421168
mov eax,[ebp-0x4]
call dword 0x1f720
ret
jmp dword 0x3384
jmp short 0x20158
pop ebx
pop ecx
pop ebp
ret
mov eax,[eax+0x10]
mov eax,[eax+0x14]
ret
nop
push ebx
push esi
add esp,byte -0x10
mov esi,edx
mov ebx,eax
mov edx,esp
mov eax,ebx
call dword 0x20104
mov [esp+0x4],esi
mov edx,esp
mov eax,ebx
call dword 0x2011c
add esp,byte +0x10
pop esi
pop ebx
ret
lea eax,[eax+0x0]
push ebp
mov ebp,esp
add esp,byte -0x14
mov eax,[eax+0x10]
mov [ebp-0x4],eax
mov eax,[ebp-0x4]
cmp dword [eax+0x8],byte +0x0
jnz 0x20229
mov eax,[0x46da80]
call dword 0x1eeb8
xor eax,eax
push ebp
push dword 0x421222
push dword [fs:eax]
mov [fs:eax],esp
mov eax,[ebp-0x4]
cmp dword [eax+0x8],byte +0x0
jnz 0x2020a
mov eax,[ebp-0x4]
movzx eax,byte [eax+0x1c]
movzx eax,word [eax*2+0x467d84]
mov [ebp-0x14],eax
mov eax,[ebp-0x4]
mov eax,[eax+0x18]
mov [ebp-0x10],eax
mov eax,[ebp-0x4]
mov eax,[eax+0x14]
call dword 0x1f6cc
mov [ebp-0x8],eax
lea eax,[ebp-0x14]
push eax
call dword 0x5ca0
mov edx,[ebp-0x4]
mov [edx+0x8],eax
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x421229
mov eax,[0x46da80]
call dword 0x1eec4
ret
jmp dword 0x3384
jmp short 0x20217
mov eax,[ebp-0x4]
mov eax,[eax+0x8]
mov esp,ebp
pop ebp
ret
nop
push esi
cmp dl,[eax+0x18]
jz 0x20246
mov [eax+0x18],dl
mov si,0xfffd
call dword 0x2dec
pop esi
ret
mov eax,[eax+0x10]
movzx eax,byte [eax+0x1c]
ret
push ebx
push esi
add esp,byte -0x10
mov ebx,edx
mov esi,eax
mov edx,esp
mov eax,esi
call dword 0x20104
mov [esp+0xc],bl
mov edx,esp
mov eax,esi
call dword 0x2011c
add esp,byte +0x10
pop esi
pop ebx
ret
lea eax,[eax+0x0]
mov eax,[eax+0x10]
mov eax,[eax+0x18]
ret
nop
push ebx
push esi
add esp,byte -0x10
mov esi,edx
mov ebx,eax
test esi,esi
jl 0x202a3
mov edx,esp
mov eax,ebx
call dword 0x20104
mov [esp+0x8],esi
mov edx,esp
mov eax,ebx
call dword 0x2011c
add esp,byte +0x10
pop esi
pop ebx
ret
lea eax,[eax+0x0]
push ebx
push esi
test dl,dl
jz 0x202ba
add esp,byte -0x10
call dword 0x2f14
mov ebx,edx
mov esi,eax
mov edx,0x467d98
mov eax,[0x46da84]
call dword 0x1eed0
mov [esi+0x10],eax
mov eax,esi
test bl,bl
jz 0x202e5
call dword 0x2f6c
pop dword [dword fs:0x0]
add esp,byte +0xc
mov eax,esi
pop esi
pop ebx
ret
mov eax,eax
push ebx
push esi
call dword 0x2fbc
mov ebx,edx
mov esi,eax
mov edx,[esi+0x10]
mov eax,[0x46da84]
call dword 0x1efb4
test bl,bl
jng 0x2030f
mov eax,esi
call dword 0x2f64
pop esi
pop ebx
ret
mov eax,eax
push ebp
mov ebp,esp
add esp,byte -0x8
push ebx
mov [ebp-0x8],edx
mov [ebp-0x4],eax
mov eax,[ebp-0x8]
mov edx,[dword 0x41f410]
call dword 0x2d7c
test al,al
jz 0x203ab
mov eax,[ebp-0x4]
call dword 0x1f710
xor eax,eax
push ebp
push dword 0x4213a4
push dword [fs:eax]
mov [fs:eax],esp
mov ebx,[ebp-0x8]
mov eax,ebx
call dword 0x1f710
xor eax,eax
push ebp
push dword 0x421387
push dword [fs:eax]
mov [fs:eax],esp
mov ecx,[ebx+0x10]
mov edx,[ebp-0x4]
mov eax,[0x46da84]
call dword 0x1f0f4
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x42138e
mov eax,[ebp-0x8]
call dword 0x1f720
ret
jmp dword 0x3384
jmp short 0x2037e
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x4213b6
mov eax,[ebp-0x4]
call dword 0x1f720
ret
jmp dword 0x3384
jmp short 0x2039b
mov edx,[ebp-0x8]
mov eax,[ebp-0x4]
call dword 0x1447c
pop ebx
pop ecx
pop ecx
pop ebp
ret
nop
push esi
push edi
mov eax,[eax+0x10]
lea esi,[eax+0x10]
mov edi,edx
movsd
movsd
movsd
movsd
xor eax,eax
mov [edx],eax
xor eax,eax
mov [edx+0x8],eax
pop edi
pop esi
ret
mov eax,eax
push ebp
mov ebp,esp
push ecx
push ebx
mov ebx,edx
mov [ebp-0x4],eax
mov eax,[ebp-0x4]
call dword 0x1f710
xor eax,eax
push ebp
push dword 0x42141d
push dword [fs:eax]
mov [fs:eax],esp
mov ecx,ebx
mov edx,[ebp-0x4]
mov eax,[0x46da84]
call dword 0x1f078
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x421424
mov eax,[ebp-0x4]
call dword 0x1f720
ret
jmp dword 0x3384
jmp short 0x20414
pop ebx
pop ecx
pop ebp
ret
push esi
push edi
add esp,byte -0x10
mov esi,0x467d98
mov edi,esp
movsd
movsd
movsd
movsd
mov [esp+0x8],edx
mov edx,esp
call dword 0x203d8
add esp,byte +0x10
pop edi
pop esi
ret
lea eax,[eax+0x0]
mov eax,[eax+0x10]
mov eax,[eax+0x14]
ret
nop
push ebx
push esi
add esp,byte -0x10
mov esi,edx
mov ebx,eax
mov edx,esp
mov eax,ebx
call dword 0x203bc
mov [esp+0x4],esi
cmp byte [esp+0xc],0x1
jnz 0x20476
mov byte [esp+0xc],0x0
mov edx,esp
mov eax,ebx
call dword 0x203d8
add esp,byte +0x10
pop esi
pop ebx
ret
lea eax,[eax+0x0]
push ebp
mov ebp,esp
add esp,byte -0x10
mov eax,[eax+0x10]
mov [ebp-0x4],eax
mov eax,[ebp-0x4]
cmp dword [eax+0x8],byte +0x0
jnz dword 0x2055d
mov eax,[0x46da84]
call dword 0x1eeb8
xor edx,edx
push ebp
push dword 0x421556
push dword [fs:edx]
mov [fs:edx],esp
mov eax,[ebp-0x4]
cmp dword [eax+0x8],byte +0x0
jnz 0x2053e
mov eax,[ebp-0x4]
mov eax,[eax+0x18]
test eax,eax
jz 0x204ea
mov dword [ebp-0x10],0x3
mov dl,0x1
mov ecx,[eax]
call dword [ecx+0x70]
mov eax,[ebp-0x4]
mov eax,[eax+0x18]
mov edx,[eax]
call dword [edx+0x68]
mov [ebp-0x8],eax
jmp short 0x20521
xor eax,eax
mov [ebp-0x8],eax
mov eax,[ebp-0x4]
movzx eax,byte [eax+0x1c]
mov edx,eax
sub dl,0x1
jc 0x20501
jz 0x20508
jmp short 0x20511
xor eax,eax
mov [ebp-0x10],eax
jmp short 0x20521
mov dword [ebp-0x10],0x1
jmp short 0x20521
mov dword [ebp-0x10],0x2
and eax,byte +0x7f
sub eax,byte +0x2
mov [ebp-0x8],eax
mov eax,[ebp-0x4]
mov eax,[eax+0x14]
call dword 0x1f6cc
mov [ebp-0xc],eax
lea eax,[ebp-0x10]
push eax
call dword 0x5c60
mov edx,[ebp-0x4]
mov [edx+0x8],eax
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x42155d
mov eax,[0x46da84]
call dword 0x1eec4
ret
jmp dword 0x3384
jmp short 0x2054b
mov eax,[ebp-0x4]
mov eax,[eax+0x8]
mov esp,ebp
pop ebp
ret
nop
mov eax,[eax+0x10]
movzx eax,byte [eax+0x1c]
ret
push ebx
push esi
add esp,byte -0x10
mov ebx,edx
mov esi,eax
mov edx,esp
mov eax,esi
call dword 0x203bc
mov eax,ebx
mov [esp+0xc],al
cmp al,0x1
jnz 0x20594
mov dword [esp+0x4],0xffffff
mov edx,esp
mov eax,esi
call dword 0x203d8
add esp,byte +0x10
pop esi
pop ebx
ret
nop
push ebx
push esi
push edi
test dl,dl
jz 0x205b3
add esp,byte -0x10
call dword 0x2f14
mov ebx,edx
mov edi,eax
xor edx,edx
mov eax,edi
call dword 0x2bc0
lea eax,[edi+0x38]
push eax
call dword 0x5b98
mov dl,0x1
mov eax,[0x41f170]
call dword 0x1f9c4
mov esi,eax
mov [edi+0xc],esi
mov [esi+0xc],edi
mov dword [esi+0x8],0x421d84
lea eax,[edi+0x38]
mov [esi+0x14],eax
mov dl,0x1
mov eax,[0x41f310]
call dword 0x1ffe0
mov esi,eax
mov [edi+0x10],esi
mov [esi+0xc],edi
mov dword [esi+0x8],0x421da4
lea eax,[edi+0x38]
mov [esi+0x14],eax
mov dl,0x1
mov eax,[0x41f410]
call dword 0x202ac
mov esi,eax
mov [edi+0x14],esi
mov [esi+0xc],edi
mov dword [esi+0x8],0x421dc4
lea eax,[edi+0x38]
mov [esi+0x14],eax
mov dword [edi+0x20],0xcc0020
movzx eax,byte [dword 0x421664]
mov [edi+0x8],al
mov edx,edi
mov eax,[0x46da88]
call dword 0x141bc
mov eax,edi
test bl,bl
jz 0x2065e
call dword 0x2f6c
pop dword [dword fs:0x0]
add esp,byte +0xc
mov eax,edi
pop edi
pop esi
pop ebx
ret
add [eax],al
add [eax],al
push ebx
push esi
call dword 0x2fbc
mov ebx,edx
mov esi,eax
mov edx,esi
mov eax,[0x46da88]
call dword 0x14258
xor edx,edx
mov eax,esi
call dword 0x20bb8
mov eax,[esi+0xc]
call dword 0x2bf0
mov eax,[esi+0x10]
call dword 0x2bf0
mov eax,[esi+0x14]
call dword 0x2bf0
lea eax,[esi+0x38]
push eax
call dword 0x5aa8
mov edx,ebx
and dl,0xfc
mov eax,esi
call dword 0x14450
test bl,bl
jng 0x206c0
mov eax,esi
call dword 0x2f64
pop esi
pop ebx
ret
nop
push ebp
mov ebp,esp
push ecx
push ebx
push esi
push edi
mov [ebp-0x4],ecx
mov esi,edx
mov ebx,eax
mov edi,[ebp+0x8]
mov eax,ebx
mov edx,[eax]
call dword [edx+0x10]
movzx edx,byte [dword 0x421744]
mov eax,ebx
call dword 0x20c0c
movzx edx,byte [dword 0x421748]
mov eax,[ebp-0x4]
call dword 0x20c0c
mov edx,[ebx+0x20]
push edx
mov edx,[edi+0xc]
sub edx,[edi+0x4]
push edx
mov edx,[edi+0x8]
sub edx,[edi]
push edx
mov edx,[edi+0x4]
push edx
mov edx,[edi]
push edx
mov edx,[ebp-0x4]
mov edx,[edx+0x4]
push edx
mov edx,[esi+0xc]
sub edx,[esi+0x4]
push edx
mov edx,[esi+0x8]
mov eax,[esi]
sub edx,eax
push edx
mov edx,[esi+0x4]
push edx
push eax
mov eax,[ebx+0x4]
push eax
call dword 0x5e40
mov eax,ebx
mov edx,[eax]
call dword [edx+0xc]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
ret 0x4
or eax,[eax]
add [eax],al
or [eax],eax
add [eax],al
push ebp
mov ebp,esp
add esp,byte -0x14
push ebx
push esi
push edi
mov [ebp-0x4],ecx
mov edi,edx
mov ebx,eax
mov esi,[ebp+0x8]
test esi,esi
jz dword 0x207ea
mov eax,esi
mov edx,[eax]
call dword [edx+0x1c]
test al,al
jnz 0x207ea
mov eax,ebx
mov edx,[eax]
call dword [edx+0x10]
movzx edx,byte [dword 0x4217f4]
mov eax,ebx
call dword 0x20c0c
mov eax,[ebx+0x14]
call dword 0x2044c
call dword 0x1f6cc
push eax
mov eax,[ebx+0x4]
push eax
call dword 0x5de0
mov eax,[ebx+0xc]
mov eax,[eax+0x18]
call dword 0x1f6cc
push eax
mov eax,[ebx+0x4]
push eax
call dword 0x5e20
mov eax,esi
mov edx,[eax]
call dword [edx+0x20]
add eax,[ebp-0x4]
push eax
lea eax,[ebp-0x14]
push eax
mov eax,esi
mov edx,[eax]
call dword [edx+0x2c]
mov ecx,eax
add ecx,edi
mov edx,[ebp-0x4]
mov eax,edi
call dword 0x12a2c
lea ecx,[ebp-0x14]
mov edx,ebx
mov eax,esi
mov esi,[eax]
call dword [esi+0x14]
mov eax,ebx
mov edx,[eax]
call dword [edx+0xc]
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret 0x4
add [ecx],al
add [eax],al
add [ebx+0x56],dl
mov esi,edx
mov ebx,eax
mov eax,ebx
mov edx,[eax]
call dword [edx+0x10]
movzx edx,byte [dword 0x421830]
mov eax,ebx
call dword 0x20c0c
mov eax,[ebx+0x14]
call dword 0x20488
push eax
push esi
mov eax,[ebx+0x4]
push eax
call dword 0x5f88
mov eax,ebx
mov edx,[eax]
call dword [edx+0xc]
pop esi
pop ebx
ret
or [eax],eax
add [eax],al
push ebx
push esi
push edi
mov edi,ecx
mov esi,edx
mov ebx,eax
mov eax,ebx
mov edx,[eax]
call dword [edx+0x10]
movzx edx,byte [dword 0x421868]
mov eax,ebx
call dword 0x20c0c
push edi
push esi
mov eax,[ebx+0x4]
push eax
call dword 0x5d80
mov eax,ebx
mov edx,[eax]
call dword [edx+0xc]
pop edi
pop esi
pop ebx
ret
or eax,0x53000000
mov ebx,eax
push dword 0x46da64
call dword 0x5ab0
inc dword [ebx+0x50]
push dword 0x46da64
call dword 0x5ba0
lea eax,[ebx+0x38]
push eax
call dword 0x5ab0
pop ebx
ret
lea eax,[eax+0x0]
push ebx
push esi
push edi
mov edi,ecx
mov esi,edx
mov ebx,eax
movzx edx,byte [dword 0x4218bc]
mov eax,ebx
call dword 0x20c0c
push byte +0x0
push edi
push esi
mov eax,[ebx+0x4]
push eax
call dword 0x5d90
pop edi
pop esi
pop ebx
ret
add [eax],eax
add [eax],al
push ebp
mov ebp,esp
push ebx
push esi
push edi
mov edi,ecx
mov esi,edx
mov ebx,eax
mov eax,ebx
mov edx,[eax]
call dword [edx+0x10]
movzx edx,byte [dword 0x421904]
mov eax,ebx
call dword 0x20c0c
mov eax,[ebp+0x8]
push eax
mov eax,[ebp+0xc]
push eax
push edi
push esi
mov eax,[ebx+0x4]
push eax
call dword 0x5db8
mov eax,ebx
mov edx,[eax]
call dword [edx+0xc]
pop edi
pop esi
pop ebx
pop ebp
ret 0x8
add [eax],al
or eax,0x53000000
push esi
push edi
mov esi,ecx
mov edi,edx
mov ebx,eax
test esi,esi
jz 0x2093c
mov eax,ebx
mov edx,[eax]
call dword [edx+0x10]
movzx edx,byte [dword 0x421940]
mov eax,ebx
call dword 0x20c0c
mov ecx,edi
mov edx,ebx
mov eax,esi
mov esi,[eax]
call dword [esi+0x14]
mov eax,ebx
mov edx,[eax]
call dword [edx+0xc]
pop edi
pop esi
pop ebx
ret
sldt [eax]
add [ebx+0x56],dl
push edi
push ebp
mov edi,ecx
mov ebp,edx
mov esi,eax
movzx edx,byte [dword 0x421988]
mov eax,esi
call dword 0x20c0c
xor eax,eax
mov [edi],eax
xor eax,eax
mov [edi+0x4],eax
mov ebx,ebp
test ebx,ebx
jz 0x20970
sub ebx,byte +0x4
mov ebx,[ebx]
push edi
push ebx
mov eax,ebp
call dword 0x3eac
push eax
mov eax,[esi+0x4]
push eax
call dword 0x5d58
pop ebp
pop edi
pop esi
pop ebx
ret
add eax,[eax]
add [eax],al
push ebx
push esi
add esp,byte -0x8
mov esi,edx
mov ebx,eax
mov ecx,esp
mov edx,esi
mov eax,ebx
call dword 0x20944
mov eax,[esp]
pop ecx
pop edx
pop esi
pop ebx
ret
push ebx
push esi
add esp,byte -0x8
mov esi,edx
mov ebx,eax
mov ecx,esp
mov edx,esi
mov eax,ebx
call dword 0x20944
mov eax,[esp+0x4]
pop ecx
pop edx
pop esi
pop ebx
ret
lea eax,[eax+0x0]
push ebp
mov ebp,esp
push ecx
push ebx
mov ebx,eax
push dword 0x46da64
call dword 0x5ab0
xor eax,eax
push ebp
push dword 0x421a14
push dword [fs:eax]
mov [fs:eax],esp
cmp dword [ebx+0x50],byte +0x0
setz [ebp-0x1]
cmp byte [ebp-0x1],0x0
jz 0x209fc
mov eax,ebx
call dword 0x2086c
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x421a1b
push dword 0x46da64
call dword 0x5ba0
ret
jmp dword 0x3384
jmp short 0x20a09
movzx eax,byte [ebp-0x1]
pop ebx
pop ecx
pop ebp
ret
nop
push ebx
mov ebx,eax
lea eax,[ebx+0x38]
push eax
call dword 0x5ba0
push dword 0x46da64
call dword 0x5ab0
dec dword [ebx+0x50]
push dword 0x46da64
call dword 0x5ba0
pop ebx
ret
lea eax,[eax+0x0]
push esi
mov esi,eax
mov eax,[esi+0xc]
mov ecx,[eax]
call dword [ecx+0x8]
pop esi
ret
lea eax,[eax+0x0]
mov eax,[eax+0x10]
mov ecx,[eax]
call dword [ecx+0x8]
ret
lea eax,[eax+0x0]
mov eax,[eax+0x14]
mov ecx,[eax]
call dword [ecx+0x8]
ret
lea eax,[eax+0x0]
push ebx
push esi
mov esi,edx
mov ebx,eax
movzx edx,byte [dword 0x421a98]
mov eax,ebx
call dword 0x20c0c
push esi
mov eax,[ebx+0x4]
push eax
call dword 0x5ce8
pop esi
pop ebx
ret
add [eax],al
add [ecx],al
add [eax],al
add [esi+0x57],dl
add esp,byte -0x8
mov esi,edx
lea edi,[esp]
movsd
movsd
mov ecx,[esp+0x4]
mov edx,[esp]
call dword 0x20894
pop ecx
pop edx
pop edi
pop esi
ret
lea eax,[eax+0x0]
push ebx
push esi
push edi
mov edi,ecx
mov esi,edx
mov ebx,eax
movzx edx,byte [dword 0x421ae4]
mov eax,ebx
call dword 0x20c0c
push edi
push esi
mov eax,[ebx+0x4]
push eax
call dword 0x5d38
pop edi
pop esi
pop ebx
ret
add [eax],al
add [eax],eax
add [eax],al
push ebp
mov ebp,esp
push ebx
push esi
push edi
mov edi,ecx
mov esi,edx
mov ebx,eax
mov eax,ebx
mov edx,[eax]
call dword [edx+0x10]
movzx edx,byte [dword 0x421b2c]
mov eax,ebx
call dword 0x20c0c
mov eax,[ebp+0x8]
call dword 0x1f6cc
push eax
push edi
push esi
mov eax,[ebx+0x4]
push eax
call dword 0x5e08
mov eax,ebx
mov edx,[eax]
call dword [edx+0xc]
pop edi
pop esi
pop ebx
pop ebp
ret 0x4
add [dword 0x53000000],al
mov ebx,eax
mov eax,ebx
mov edx,[eax]
call dword [edx+0x10]
movzx edx,byte [dword 0x421b50]
mov eax,ebx
call dword 0x20c0c
mov eax,[ebx+0x4]
pop ebx
ret
add [eax],al
add [edi],cl
add [eax],al
add [ebx+0x56],dl
mov ebx,eax
mov esi,[ebx+0x4]
test esi,esi
jz 0x20bac
movzx eax,byte [dword 0x421bb0]
not eax
and al,[ebx+0x8]
movzx edx,byte [ebx+0x8]
cmp dl,al
jz 0x20bac
mov eax,[0x46da3c]
push eax
push esi
call dword 0x5dd0
mov eax,[0x46da40]
push eax
mov eax,[ebx+0x4]
push eax
call dword 0x5dd0
mov eax,[0x46da44]
push eax
mov eax,[ebx+0x4]
push eax
call dword 0x5dd0
movzx eax,byte [dword 0x421bb0]
not eax
and al,[ebx+0x8]
mov [ebx+0x8],al
pop esi
pop ebx
ret
add [esi],cl
add [eax],al
add bl,al
lea eax,[eax+0x0]
push ebx
push esi
add esp,byte -0x8
mov esi,edx
mov ebx,eax
mov eax,[ebx+0x4]
cmp esi,eax
jz 0x20c07
test eax,eax
jz 0x20bf2
mov eax,ebx
call dword 0x20b54
mov edx,esp
mov eax,ebx
call dword 0x20a74
mov eax,[esp]
mov [ebx+0x18],eax
mov eax,[esp+0x4]
mov [ebx+0x1c],eax
xor eax,eax
mov [ebx+0x4],eax
and byte [ebx+0x8],0xfe
test esi,esi
jz 0x20c07
or byte [ebx+0x8],0x1
mov [ebx+0x4],esi
lea edx,[ebx+0x18]
mov eax,ebx
call dword 0x20a9c
pop ecx
pop edx
pop esi
pop ebx
ret
push ebx
push esi
push ecx
mov [esp],dl
mov esi,eax
movzx ebx,byte [esi+0x8]
not ebx
and bl,[esp]
movzx eax,byte [dword 0x421c80]
cmp al,bl
jz 0x20c7b
test bl,0x1
jz 0x20c51
mov eax,esi
mov edx,[eax]
call dword [edx+0x14]
cmp dword [esi+0x4],byte +0x0
jnz 0x20c51
mov ecx,[dword 0x468c00]
mov dl,0x1
mov eax,[0x4128ec]
call dword 0xb50c
call dword 0x3464
test bl,0x2
jz 0x20c5d
mov eax,esi
call dword 0x20cac
test bl,0x4
jz 0x20c69
mov eax,esi
call dword 0x20cd8
test bl,0x8
jz 0x20c75
mov eax,esi
call dword 0x20d08
or bl,[esi+0x8]
mov [esi+0x8],bl
pop edx
pop esi
pop ebx
ret
add [eax],al
add [eax],al
add [ebx+0x66],dl
cmp dword [eax+0x32],byte +0x0
jz 0x20c96
mov ebx,eax
mov edx,eax
mov eax,[ebx+0x34]
call dword [ebx+0x30]
pop ebx
ret
push ebx
cmp word [eax+0x2a],byte +0x0
jz 0x20caa
mov ebx,eax
mov edx,eax
mov eax,[ebx+0x2c]
call dword [ebx+0x28]
pop ebx
ret
push ebx
mov ebx,eax
mov eax,[ebx+0xc]
call dword 0x1fbd8
push eax
mov eax,[ebx+0x4]
push eax
call dword 0x5dd0
mov eax,[ebx+0xc]
mov eax,[eax+0x18]
call dword 0x1f6cc
push eax
mov eax,[ebx+0x4]
push eax
call dword 0x5e20
pop ebx
ret
push ebx
mov ebx,eax
mov eax,[ebx+0x10]
call dword 0x2019c
push eax
mov eax,[ebx+0x4]
push eax
call dword 0x5dd0
mov eax,[ebx+0x10]
movzx eax,byte [eax+0x18]
movzx eax,word [eax*2+0x467da8]
push eax
mov eax,[ebx+0x4]
push eax
call dword 0x5e10
pop ebx
ret
push ebx
mov ebx,eax
mov eax,[ebx+0x14]
call dword 0x20488
push eax
call dword 0x5e48
mov eax,[ebx+0x14]
call dword 0x20488
push eax
mov eax,[ebx+0x4]
push eax
call dword 0x5dd0
mov eax,[ebx+0x14]
call dword 0x20568
test al,al
jnz 0x20d5b
mov eax,[ebx+0x14]
call dword 0x2044c
call dword 0x1f6cc
push eax
mov eax,[ebx+0x4]
push eax
call dword 0x5de0
push byte +0x2
mov eax,[ebx+0x4]
push eax
call dword 0x5de8
pop ebx
ret
mov eax,[ebx+0x14]
call dword 0x2044c
call dword 0x1f6cc
not eax
push eax
mov eax,[ebx+0x4]
push eax
call dword 0x5de0
push byte +0x1
mov eax,[ebx+0x4]
push eax
call dword 0x5de8
pop ebx
ret
lea eax,[eax+0x0]
push ebx
mov ebx,eax
test byte [ebx+0x8],0x2
jz 0x20da0
and byte [ebx+0x8],0xfd
mov eax,[0x46da44]
push eax
mov eax,[ebx+0x4]
push eax
call dword 0x5dd0
pop ebx
ret
mov eax,eax
push ebx
mov ebx,eax
test byte [ebx+0x8],0x4
jz 0x20dc0
and byte [ebx+0x8],0xfb
mov eax,[0x46da3c]
push eax
mov eax,[ebx+0x4]
push eax
call dword 0x5dd0
pop ebx
ret
mov eax,eax
push ebx
mov ebx,eax
test byte [ebx+0x8],0x8
jz 0x20de0
and byte [ebx+0x8],0xf7
mov eax,[0x46da40]
push eax
mov eax,[ebx+0x4]
push eax
call dword 0x5dd0
pop ebx
ret
mov eax,eax
push ebx
mov ebx,eax
mov ecx,ebx
mov dl,0x1
mov eax,[0x41eda4]
call dword 0xb50c
call dword 0x3464
pop ebx
ret
push ebx
mov ebx,eax
mov ecx,ebx
mov dl,0x1
mov eax,[0x41ed48]
call dword 0xb50c
call dword 0x3464
pop ebx
ret
mov eax,[0x468bc0]
call dword 0x20dfc
ret
nop
mov eax,[0x468bd0]
call dword 0x20dfc
ret
nop
mov eax,[0x468d60]
call dword 0x20dfc
ret
nop
push ebp
mov ebp,esp
push byte +0x0
xor eax,eax
push ebp
push dword 0x421e82
push dword [fs:eax]
mov [fs:eax],esp
lea edx,[ebp-0x4]
mov eax,[0x468b20]
call dword 0x5750
mov ecx,[ebp-0x4]
mov dl,0x1
mov eax,[0x412890]
call dword 0xb450
call dword 0x3464
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x421e89
lea eax,[ebp-0x4]
call dword 0x3a1c
ret
jmp dword 0x3384
jmp short 0x20e79
pop ecx
pop ebp
ret
push ebp
mov ebp,esp
add esp,0xfffffefc
push ebx
xor eax,eax
mov [ebp-0x104],eax
xor eax,eax
push ebp
push dword 0x421f28
push dword [fs:eax]
mov [fs:eax],esp
call dword 0x5b28
mov ebx,eax
test ebx,ebx
jz 0x20f0a
push byte +0x0
push dword 0x100
lea eax,[ebp-0x100]
push eax
push dword 0x400
push ebx
push byte +0x0
push dword 0x1000
call dword 0x5ac8
test eax,eax
jz 0x20f0a
lea eax,[ebp-0x104]
lea edx,[ebp-0x100]
mov ecx,0x100
call dword 0x3c8c
mov ecx,[ebp-0x104]
mov dl,0x1
mov eax,[0x412890]
call dword 0xb450
call dword 0x3464
jmp short 0x20f0f
call dword 0x20e38
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x421f2f
lea eax,[ebp-0x104]
call dword 0x3a1c
ret
jmp dword 0x3384
jmp short 0x20f1c
pop ebx
mov esp,ebp
pop ebp
ret
push ebx
mov ebx,eax
test ebx,ebx
jnz 0x20f40
call dword 0x20e8c
mov eax,ebx
pop ebx
ret
push ebp
mov ebp,esp
add esp,byte -0x34
push ebx
push esi
push edi
mov esi,edx
lea edi,[ebp-0xc]
movsd
movsd
mov ebx,ecx
mov [ebp-0x4],eax
push byte +0x0
call dword 0x5c70
mov [ebp-0x18],eax
push byte +0x0
call dword 0x5c70
mov [ebp-0x1c],eax
xor eax,eax
push ebp
push dword 0x422092
push dword [fs:eax]
mov [fs:eax],esp
lea eax,[ebp-0x34]
push eax
push byte +0x18
mov eax,[ebp-0x4]
push eax
call dword 0x5d28
test bl,bl
jz 0x20fa6
push byte +0x0
push byte +0x1
push byte +0x1
mov eax,[ebp-0x8]
push eax
mov eax,[ebp-0xc]
push eax
call dword 0x5c58
mov [ebp-0x10],eax
jmp short 0x21008
push byte +0x0
call dword 0x5fe0
mov [ebp-0x14],eax
cmp dword [ebp-0x14],byte +0x0
jnz 0x20fbb
call dword 0x20e8c
xor eax,eax
push ebp
push dword 0x422001
push dword [fs:eax]
mov [fs:eax],esp
mov eax,[ebp-0x8]
push eax
mov eax,[ebp-0xc]
push eax
mov eax,[ebp-0x14]
push eax
call dword 0x5c68
mov [ebp-0x10],eax
cmp dword [ebp-0x10],byte +0x0
jnz 0x20fe8
call dword 0x20e8c
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x422008
mov eax,[ebp-0x14]
push eax
push byte +0x0
call dword 0x6250
ret
jmp dword 0x3384
jmp short 0x20ff5
cmp dword [ebp-0x10],byte +0x0
jz 0x21072
mov eax,[ebp-0x4]
push eax
mov eax,[ebp-0x18]
push eax
call dword 0x5dd0
mov ebx,eax
mov eax,[ebp-0x10]
push eax
mov eax,[ebp-0x1c]
push eax
call dword 0x5dd0
mov esi,eax
push dword 0xcc0020
mov eax,[ebp-0x2c]
push eax
mov eax,[ebp-0x30]
push eax
push byte +0x0
push byte +0x0
mov eax,[ebp-0x18]
push eax
mov eax,[ebp-0x8]
push eax
mov eax,[ebp-0xc]
push eax
push byte +0x0
push byte +0x0
mov eax,[ebp-0x1c]
push eax
call dword 0x5e40
test ebx,ebx
jz 0x21064
push ebx
mov eax,[ebp-0x18]
push eax
call dword 0x5dd0
test esi,esi
jz 0x21072
push esi
mov eax,[ebp-0x1c]
push eax
call dword 0x5dd0
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x422099
mov eax,[ebp-0x18]
push eax
call dword 0x5cb0
mov eax,[ebp-0x1c]
push eax
call dword 0x5cb0
ret
jmp dword 0x3384
jmp short 0x2107f
mov eax,[ebp-0x10]
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret
nop
mov edx,eax
dec dx
jz 0x210b7
sub dx,byte +0x3
jz 0x210b7
sub dx,byte +0x4
jnz 0x210c1
mov ecx,eax
mov eax,0x1
shl eax,cl
ret
xor eax,eax
ret
push ebx
dec ecx
mov ebx,eax
imul ebx,edx
add ebx,ecx
not ecx
and ebx,ecx
mov ecx,0x8
mov eax,ebx
cdq
idiv ecx
mov ebx,eax
mov eax,ebx
pop ebx
ret
lea eax,[eax+0x0]
push ebp
mov ebp,esp
add esp,byte -0x24
push ebx
push esi
push edi
mov [ebp-0x8],ecx
mov [ebp-0x4],edx
mov edi,eax
mov esi,[ebp+0x14]
mov ebx,[ebp+0x18]
mov byte [ebp-0x9],0x1
mov eax,[0x468ea4]
cmp dword [eax],byte +0x2
jnz dword 0x211b3
cmp ebx,[ebp+0x2c]
jnz dword 0x211b3
cmp esi,[ebp+0x28]
jnz dword 0x211b3
push byte +0x1
push byte +0x1
mov eax,[ebp+0x24]
push eax
call dword 0x5c68
call dword 0x20f34
mov [ebp-0x14],eax
mov eax,[ebp-0x14]
push eax
mov eax,[ebp+0x10]
push eax
call dword 0x5dd0
mov [ebp-0x14],eax
xor eax,eax
push ebp
push dword 0x4221ac
push dword [fs:eax]
mov [fs:eax],esp
push dword 0xccaa0029
mov eax,[ebp+0x8]
push eax
mov eax,[ebp+0xc]
push eax
mov eax,[ebp-0x14]
push eax
mov eax,[ebp+0x1c]
push eax
mov eax,[ebp+0x20]
push eax
mov eax,[ebp+0x24]
push eax
mov eax,[ebp+0x28]
push eax
mov eax,[ebp+0x2c]
push eax
mov eax,[ebp-0x8]
push eax
mov eax,[ebp-0x4]
push eax
push edi
call dword 0x5d88
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x422360
mov eax,[ebp-0x14]
push eax
mov eax,[ebp+0x10]
push eax
call dword 0x5dd0
mov [ebp-0x14],eax
mov eax,[ebp-0x14]
push eax
call dword 0x5cc0
ret
jmp dword 0x3384
jmp short 0x21192
xor eax,eax
mov [ebp-0x24],eax
push byte +0x0
call dword 0x5c70
call dword 0x20f34
mov [ebp-0x10],eax
xor eax,eax
push ebp
push dword 0x422359
push dword [fs:eax]
mov [fs:eax],esp
push esi
push ebx
mov eax,[ebp+0x24]
push eax
call dword 0x5c68
call dword 0x20f34
mov [ebp-0x14],eax
mov eax,[ebp-0x14]
push eax
mov eax,[ebp-0x10]
push eax
call dword 0x5dd0
mov [ebp-0x18],eax
push byte +0x0
mov eax,[0x46da30]
push eax
mov eax,[ebp+0x24]
push eax
call dword 0x5dd8
mov [ebp-0x24],eax
push byte +0x0
mov eax,[ebp-0x24]
push eax
mov eax,[ebp+0x24]
push eax
call dword 0x5dd8
cmp dword [ebp-0x24],byte +0x0
jz 0x21235
push byte -0x1
mov eax,[ebp-0x24]
push eax
mov eax,[ebp-0x10]
push eax
call dword 0x5dd8
mov [ebp-0x24],eax
jmp short 0x21249
push byte -0x1
mov eax,[0x46da30]
push eax
mov eax,[ebp-0x10]
push eax
call dword 0x5dd8
mov [ebp-0x24],eax
mov eax,[ebp-0x10]
push eax
call dword 0x5da8
push dword 0xcc0020
push esi
push ebx
mov eax,[ebp+0x8]
push eax
mov eax,[ebp+0xc]
push eax
mov eax,[ebp+0x10]
push eax
push esi
push ebx
push byte +0x0
push byte +0x0
mov eax,[ebp-0x10]
push eax
call dword 0x5e40
push dword 0x440328
push esi
push ebx
mov eax,[ebp+0x1c]
push eax
mov eax,[ebp+0x20]
push eax
mov eax,[ebp+0x24]
push eax
push esi
push ebx
push byte +0x0
push byte +0x0
mov eax,[ebp-0x10]
push eax
call dword 0x5e40
push byte +0x0
push edi
call dword 0x5e20
mov [ebp-0x1c],eax
push dword 0xffffff
push edi
call dword 0x5de0
mov [ebp-0x20],eax
push dword 0x8800c6
push esi
push ebx
mov eax,[ebp+0x8]
push eax
mov eax,[ebp+0xc]
push eax
mov eax,[ebp+0x10]
push eax
mov eax,[ebp+0x28]
push eax
mov eax,[ebp+0x2c]
push eax
mov eax,[ebp-0x8]
push eax
mov eax,[ebp-0x4]
push eax
push edi
call dword 0x5e40
push dword 0x660046
push esi
push ebx
push byte +0x0
push byte +0x0
mov eax,[ebp-0x10]
push eax
mov eax,[ebp+0x28]
push eax
mov eax,[ebp+0x2c]
push eax
mov eax,[ebp-0x8]
push eax
mov eax,[ebp-0x4]
push eax
push edi
call dword 0x5e40
mov eax,[ebp-0x1c]
push eax
push edi
call dword 0x5e20
mov eax,[ebp-0x20]
push eax
push edi
call dword 0x5de0
cmp dword [ebp-0x18],byte +0x0
jz 0x21324
mov eax,[ebp-0x18]
push eax
mov eax,[ebp-0x10]
push eax
call dword 0x5dd0
mov eax,[ebp-0x14]
push eax
call dword 0x5cc0
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x422360
cmp dword [ebp-0x24],byte +0x0
jz 0x2134f
push byte +0x0
mov eax,[ebp-0x24]
push eax
mov eax,[ebp-0x10]
push eax
call dword 0x5dd8
mov eax,[ebp-0x10]
push eax
call dword 0x5cb0
ret
jmp dword 0x3384
jmp short 0x2133a
movzx eax,byte [ebp-0x9]
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret 0x28
lea eax,[eax+0x0]
push ebx
push esi
push edi
mov esi,eax
mov edi,esi
mov edx,0xff
lea eax,[edi+edx*4]
lea ecx,[edx+edx*2]
lea ecx,[esi+ecx]
movzx ebx,byte [ecx+0x2]
mov [eax+0x2],bl
movzx ebx,byte [ecx+0x1]
mov [eax+0x1],bl
movzx ecx,byte [ecx]
mov [eax],cl
mov byte [eax+0x3],0x0
dec edx
test edx,edx
jnz 0x2137c
mov byte [edi+0x3],0x0
pop edi
pop esi
pop ebx
ret
lea eax,[eax+0x0]
push ebx
push esi
push edi
add esp,byte -0x8
mov [esp],edx
mov esi,eax
mov [esp+0x4],esi
mov edi,[esp]
mov edi,[edi]
dec edi
test edi,edi
jng 0x213ee
mov ecx,0x1
mov eax,[esp+0x4]
lea eax,[eax+ecx*4]
lea edx,[ecx+ecx*2]
lea edx,[esi+edx]
movzx ebx,byte [eax+0x2]
mov [edx+0x2],bl
movzx ebx,byte [eax+0x1]
mov [edx+0x1],bl
movzx eax,byte [eax]
mov [edx],al
inc ecx
dec edi
jnz 0x213ca
mov eax,[esp]
cmp dword [eax],0x100
jnl 0x21421
mov eax,[esp]
mov edx,0x100
sub edx,[eax]
lea edx,[edx+edx*2]
mov eax,[esp]
mov eax,[eax]
lea eax,[eax+eax*2]
lea eax,[esi+eax]
xor ecx,ecx
call dword 0x252c
mov eax,[esp]
mov dword [eax],0x100
pop ecx
pop edx
pop edi
pop esi
pop ebx
ret
nop
push ebp
mov ebp,esp
add esp,byte -0xc
mov [ebp-0x8],edx
mov [ebp-0x4],eax
mov eax,[0x468dd4]
movzx eax,byte [eax]
mov [ebp-0xc],eax
mov edx,[ebp-0x4]
mov ecx,[ebp-0x8]
dec ecx
js 0x21477
cmp dword [ebp-0xc],byte +0x2
jng 0x2145e
mov eax,[edx+ecx*4]
bswap eax
shr eax,byte 0x8
mov [edx+ecx*4],eax
dec ecx
jns 0x2144e
jmp short 0x21477
push ebx
xor ebx,ebx
mov eax,[edx+ecx*4]
mov bh,al
mov bl,ah
shr eax,byte 0x10
shl ebx,byte 0x8
mov bl,al
mov [edx+ecx*4],ebx
dec ecx
jns 0x2145f
pop ebx
mov esp,ebp
pop ebp
ret
nop
push ebp
mov ebp,esp
add esp,0xfffffbf8
push ebx
mov word [ebp-0x408],0x300

mov word [ebp-0x406],0x10

lea edx,[ebp-0x404]
mov ecx,0x40
call dword 0x2050
push byte +0x0
call dword 0x5fe0
mov [ebp-0x4],eax
xor eax,eax
push ebp
push dword 0x422579
push dword [fs:eax]
mov [fs:eax],esp
push byte +0x68
mov eax,[ebp-0x4]
push eax
call dword 0x5d08
mov ebx,eax
cmp ebx,byte +0x10
jl dword 0x21560
lea eax,[ebp-0x404]
push eax
push byte +0x8
push byte +0x0
mov eax,[ebp-0x4]
push eax
call dword 0x5d50
cmp dword [ebp-0x3e8],0xc0c0c0

jnz 0x21542
lea eax,[ebp-0x3e8]
push eax
push byte +0x1
mov eax,ebx
sub eax,byte +0x8
push eax
mov eax,[ebp-0x4]
push eax
call dword 0x5d50
movzx eax,word [ebp-0x406]
lea eax,[ebp+eax*4-0x420]
push eax
push byte +0x7
sub ebx,byte +0x7
push ebx
mov eax,[ebp-0x4]
push eax
call dword 0x5d50
lea eax,[ebp-0x3e4]
push eax
push byte +0x1
push byte +0x7
mov eax,[ebp-0x4]
push eax
call dword 0x5d50
jmp short 0x21560
movzx eax,word [ebp-0x406]
lea eax,[ebp+eax*4-0x424]
push eax
push byte +0x8
sub ebx,byte +0x8
push ebx
mov eax,[ebp-0x4]
push eax
call dword 0x5d50
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x422580
mov eax,[ebp-0x4]
push eax
push byte +0x0
call dword 0x6250
ret
jmp dword 0x3384
jmp short 0x2156d
lea eax,[ebp-0x408]
push eax
call dword 0x5c98
pop ebx
mov esp,ebp
pop ebp
ret
lea eax,[eax+0x0]
push ebp
mov ebp,esp
add esp,byte -0x8
push ebx
mov ebx,eax
mov byte [ebp-0x1],0x0
cmp dword [dword 0x46da30],byte +0x0
jz 0x21621
push byte +0x0
call dword 0x5fe0
mov [ebp-0x8],eax
xor edx,edx
push ebp
push dword 0x42261a
push dword [fs:edx]
mov [fs:edx],esp
push byte +0x68
mov eax,[ebp-0x8]
push eax
call dword 0x5d08
cmp eax,byte +0x10
jl 0x21601
lea eax,[ebx+0x4]
push eax
push byte +0x8
push byte +0x0
mov eax,[0x46da30]
push eax
call dword 0x5d30
movzx eax,word [ebx+0x2]
lea eax,[ebx+eax*4-0x1c]
push eax
push byte +0x8
push byte +0x8
mov eax,[0x46da30]
push eax
call dword 0x5d30
mov byte [ebp-0x1],0x1
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x422621
mov eax,[ebp-0x8]
push eax
push byte +0x0
call dword 0x6250
ret
jmp dword 0x3384
jmp short 0x2160e
movzx eax,byte [ebp-0x1]
pop ebx
pop ecx
pop ecx
pop ebp
ret
mov eax,eax
push ebx
push esi
push edi
add esp,0xfffffbfc
mov edi,eax
xor esi,esi
mov word [esp],0x300
test edi,edi
jz 0x2167b
push byte +0x0
call dword 0x5c70
mov ebx,eax
push edi
push ebx
call dword 0x5dd0
mov edi,eax
lea eax,[esp+0x4]
push eax
push dword 0x100
push byte +0x0
push ebx
call dword 0x5cf8
mov [esp+0x2],ax
push edi
push ebx
call dword 0x5dd0
push ebx
call dword 0x5cb0
jmp short 0x2168f
mov [esp+0x2],cx
mov eax,edx
lea edx,[esp+0x4]
add ecx,ecx
add ecx,ecx
call dword 0x2050
cmp word [esp+0x2],byte +0x0
jz 0x216c2
cmp word [esp+0x2],byte +0x10
jnz 0x216aa
mov eax,esp
call dword 0x21594
test al,al
jnz 0x216b8
movzx edx,word [esp+0x2]
lea eax,[esp+0x4]
call dword 0x21428
mov eax,esp
push eax
call dword 0x5c98
mov esi,eax
mov eax,esi
add esp,0x404
pop edi
pop esi
pop ebx
ret
mov eax,eax
push ebx
push esi
push edi
push ecx
mov edi,ecx
mov esi,edx
mov ebx,eax
xor eax,eax
mov [esp],eax
test ebx,ebx
jz 0x21719
push esp
push byte +0x4
push ebx
call dword 0x5d28
test eax,eax
jz 0x21719
cmp dword [esp],byte +0x0
jz 0x21719
lea eax,[edi+0x1]
cmp eax,[esp]
jnl 0x21701
mov [esp],eax
push esi
mov eax,[esp+0x4]
push eax
push byte +0x0
push ebx
call dword 0x5d30
mov eax,esi
mov edx,[esp]
call dword 0x21428
mov eax,[esp]
pop edx
pop edi
pop esi
pop ebx
ret
lea eax,[eax+0x0]
push ebp
mov ebp,esp
add esp,byte -0x14
push ebx
push esi
push edi
mov [ebp-0x8],ecx
mov ebx,edx
mov [ebp-0x4],eax
mov eax,[ebp-0x4]
shr dword [eax+0x8],1
mov edx,[ebp-0x4]
movzx edx,word [edx+0xe]
mov eax,[ebp-0x4]
mov eax,[eax+0x4]
mov ecx,0x20
call dword 0x210c4
mov edx,[ebp-0x4]
imul dword [edx+0x8]
mov edx,[ebp-0x4]
mov [edx+0x14],eax
mov eax,[ebp-0x4]
movzx eax,word [eax+0xe]
call dword 0x210a4
mov esi,eax
push byte +0x0
call dword 0x5fe0
mov [ebp-0x10],eax
cmp dword [ebp-0x10],byte +0x0
jnz 0x21781
call dword 0x20e38
xor edx,edx
push ebp
push dword 0x4228d1
push dword [fs:edx]
mov [fs:edx],esp
mov edi,[ebp-0x4]
mov eax,edi
add eax,byte +0x28
mov edx,esi
add edx,edx
add edx,edx
add eax,edx
mov [ebp-0x14],eax
push byte +0x0
mov eax,[ebp-0x4]
push edi
mov eax,[ebp-0x14]
push eax
push byte +0x4
mov eax,[ebp-0x4]
push eax
mov eax,[ebp-0x10]
push eax
call dword 0x5c80
call dword 0x20f34
mov [ebp-0xc],eax
xor eax,eax
push ebp
push dword 0x4227f7
push dword [fs:eax]
mov [fs:eax],esp
mov edx,[ebp+0x8]
xor ecx,ecx
mov eax,[ebp-0xc]
call dword 0x20f44
mov [ebx],eax
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x4227fe
mov eax,[ebp-0xc]
push eax
call dword 0x5cc0
ret
jmp dword 0x3384
jmp short 0x217ed
mov eax,[ebp-0x4]
mov eax,[eax+0x14]
add [ebp-0x14],eax
mov eax,[ebp-0x4]
mov bx,0x1
mov [eax+0xe],bx
mov eax,[ebp-0x4]
movzx edx,bx
mov eax,[ebp-0x4]
mov eax,[eax+0x4]
mov ecx,0x20
call dword 0x210c4
mov edx,[ebp-0x4]
imul dword [edx+0x8]
mov edx,[ebp-0x4]
mov [edx+0x14],eax
mov eax,[ebp-0x4]
mov dword [eax+0x20],0x2
mov eax,[ebp-0x4]
mov dword [eax+0x24],0x2
mov eax,[ebp-0x4]
add eax,byte +0x28
xor edx,edx
mov [eax],edx
mov dword [eax+0x4],0xffffff
push byte +0x0
mov ebx,[ebp-0x4]
push ebx
mov eax,[ebp-0x14]
push eax
push byte +0x4
mov eax,[ebp-0x4]
push ebx
mov eax,[ebp-0x10]
push eax
call dword 0x5c80
call dword 0x20f34
mov [ebp-0xc],eax
xor eax,eax
push ebp
push dword 0x4228b1
push dword [fs:eax]
mov [fs:eax],esp
mov edx,[ebp+0x8]
mov cl,0x1
mov eax,[ebp-0xc]
call dword 0x20f44
mov edx,[ebp-0x8]
mov [edx],eax
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x4228b8
mov eax,[ebp-0xc]
push eax
call dword 0x5cc0
ret
jmp dword 0x3384
jmp short 0x218a7
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x4228d8
mov eax,[ebp-0x10]
push eax
push byte +0x0
call dword 0x6250
ret
jmp dword 0x3384
jmp short 0x218c5
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret 0x4
lea eax,[eax+0x0]
test eax,eax
jnz 0x218ed
mov eax,0x7fffffff
ret
mov eax,eax
push ebp
mov ebp,esp
add esp,byte -0x8
push ebx
push esi
push edi
mov [ebp-0x4],eax
movzx ecx,byte [edx]
mov eax,[ebp+0x8]
mov eax,[eax+0x8]
mov eax,[eax]
sub ecx,eax
movzx ebx,byte [edx+0x1]
mov edx,[ebp+0x8]
mov edx,[edx+0x8]
sub ebx,[edx+0x4]
mov esi,[ebp-0x4]
movzx esi,byte [esi]
mov edx,[ebp+0x8]
mov edx,[edx+0x8]
sub esi,eax
mov eax,[ebp-0x4]
movzx eax,byte [eax+0x1]
mov edx,[ebp+0x8]
mov edx,[edx+0x8]
sub eax,[edx+0x4]
mov [ebp-0x8],eax
mov eax,ecx
cdq
xor eax,edx
sub eax,edx
mov edi,eax
mov eax,esi
cdq
xor eax,edx
sub eax,edx
cmp edi,eax
jg 0x21971
test ecx,ecx
jng 0x21953
cmp esi,ecx
jl 0x21971
mov eax,ebx
cdq
xor eax,edx
sub eax,edx
mov ecx,eax
mov eax,[ebp-0x8]
cdq
xor eax,edx
sub eax,edx
cmp ecx,eax
jg 0x21971
test ebx,ebx
jng 0x21975
cmp ebx,[ebp-0x8]
jng 0x21975
xor eax,eax
jmp short 0x21977
mov al,0x1
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
ret
mov eax,eax
push ebp
mov ebp,esp
add esp,byte -0x70
push ebx
push esi
push edi
mov [ebp-0xc],ecx
mov [ebp-0x8],edx
mov [ebp-0x4],eax
mov ebx,[ebp+0xc]
mov eax,[ebp-0xc]
shl eax,byte 0x4
mov [ebp-0x14],eax
mov eax,[ebp-0x14]
call dword 0x1e48
mov [ebp-0x10],eax
xor edx,edx
push ebp
push dword 0x422c79
push dword [fs:edx]
mov [fs:edx],esp
mov edx,[ebp-0x10]
mov ecx,[ebp-0x14]
mov eax,[ebp-0x4]
mov esi,[eax]
call dword [esi+0xc]
mov eax,[ebx]
or eax,[ebx+0x4]
jnz 0x219e7
push byte +0xb
call dword 0x60d8
mov edx,[ebp+0x8]
mov [edx],eax
push byte +0xc
call dword 0x60d8
mov edx,[ebp+0x8]
mov [edx+0x4],eax
jmp short 0x219f4
mov eax,[ebp+0x8]
mov edx,[ebx]
mov [eax],edx
mov edx,[ebx+0x4]
mov [eax+0x4],edx
push byte +0x0
call dword 0x5fe0
mov [ebp-0x28],eax
cmp dword [ebp-0x28],byte +0x0
jnz 0x21a09
call dword 0x20e38
xor edx,edx
push ebp
push dword 0x422a69
push dword [fs:edx]
mov [fs:edx],esp
push byte +0xe
mov eax,[ebp-0x28]
push eax
call dword 0x5d08
mov ebx,eax
push byte +0xc
mov eax,[ebp-0x28]
push eax
call dword 0x5d08
imul bx,ax
mov eax,ebx
cmp ax,byte +0x8
jna 0x21a44
mov dword [ebp-0x1c],0x7fffffff
jmp short 0x21a50
mov ecx,eax
mov eax,0x1
shl eax,cl
mov [ebp-0x1c],eax
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x422a70
mov eax,[ebp-0x28]
push eax
push byte +0x0
call dword 0x6250
ret
jmp dword 0x3384
jmp short 0x21a5d
xor eax,eax
mov [ebp-0x24],eax
mov eax,[ebp-0x10]
movzx eax,word [eax+0x2]
call dword 0x218e4
mov [ebp-0x20],eax
mov edi,[ebp-0xc]
dec edi
test edi,edi
jng 0x21ad8
mov esi,0x1
mov eax,esi
add eax,eax
mov edx,[ebp-0x10]
movzx eax,word [edx+eax*8+0x2]
call dword 0x218e4
mov ebx,eax
cmp ebx,[ebp-0x1c]
jg 0x21ad4
cmp ebx,[ebp-0x20]
jl 0x21ad4
push ebp
mov eax,esi
add eax,eax
mov edx,[ebp-0x10]
lea edx,[edx+eax*8]
mov eax,[ebp-0x24]
add eax,eax
mov ecx,[ebp-0x10]
lea eax,[ecx+eax*8]
call dword 0x218f0
pop ecx
test al,al
jz 0x21ad4
mov [ebp-0x24],esi
mov [ebp-0x20],ebx
inc esi
dec edi
jnz 0x21a91
mov eax,[ebp-0x24]
add eax,eax
mov edx,[ebp-0x10]
lea eax,[edx+eax*8]
mov [ebp-0x40],eax
mov eax,[ebp-0x40]
movzx eax,byte [eax]
mov edx,[ebp+0x8]
mov [edx],eax
mov eax,[ebp-0x40]
movzx eax,byte [eax+0x1]
mov edx,[ebp+0x8]
mov [edx+0x4],eax
mov eax,[ebp-0x40]
mov eax,[eax+0x8]
call dword 0x1e48
mov [ebp-0x2c],eax
xor eax,eax
push ebp
push dword 0x422c59
push dword [fs:eax]
mov [fs:eax],esp
mov eax,[ebp-0x40]
mov edx,[eax+0xc]
mov eax,[ebp-0x14]
add eax,[ebp+0x10]
sub edx,eax
mov cx,0x1
mov eax,[ebp-0x4]
mov ebx,[eax]
call dword [ebx+0x14]
mov eax,[ebp-0x40]
mov ecx,[eax+0x8]
mov ebx,[ebp-0x2c]
mov edx,ebx
mov eax,[ebp-0x4]
mov esi,[eax]
call dword [esi+0xc]
mov eax,[ebp+0x8]
push eax
lea ecx,[ebp-0x38]
lea edx,[ebp-0x34]
mov eax,ebx
call dword 0x21724
lea eax,[ebp-0x70]
push eax
push byte +0x18
mov eax,[ebp-0x38]
push eax
call dword 0x5d28
lea eax,[ebp-0x58]
push eax
push byte +0x18
mov eax,[ebp-0x34]
push eax
call dword 0x5d28
mov ebx,[ebp-0x64]
imul ebx,[ebp-0x68]
movzx eax,word [ebp-0x60]
imul ebx,eax
mov eax,[ebp-0x4c]
imul dword [ebp-0x50]
movzx edx,word [ebp-0x48]
imul edx
mov [ebp-0x3c],eax
mov eax,[ebp-0x3c]
add eax,ebx
mov [ebp-0x18],eax
mov eax,[ebp-0x18]
call dword 0x1e48
mov [ebp-0x30],eax
xor eax,eax
push ebp
push dword 0x422c36
push dword [fs:eax]
mov [fs:eax],esp
mov edi,[ebp-0x30]
mov esi,[ebp-0x30]
add esi,ebx
push edi
push ebx
mov eax,[ebp-0x38]
push eax
call dword 0x5cd0
push esi
mov eax,[ebp-0x3c]
push eax
mov eax,[ebp-0x34]
push eax
call dword 0x5cd0
mov eax,[ebp-0x34]
push eax
call dword 0x5cc0
mov eax,[ebp-0x38]
push eax
call dword 0x5cc0
push esi
push edi
movzx eax,byte [ebp-0x46]
push eax
movzx eax,byte [ebp-0x48]
push eax
mov eax,[ebp+0x8]
mov eax,[eax+0x4]
push eax
mov eax,[ebp+0x8]
mov eax,[eax]
push eax
mov eax,[0x46b7f4]
push eax
call dword 0x5eb0
mov edx,[ebp-0x8]
mov [edx],eax
mov eax,[ebp-0x8]
cmp dword [eax],byte +0x0
jnz 0x21c1d
call dword 0x20e8c
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x422c3d
mov edx,[ebp-0x18]
mov eax,[ebp-0x30]
call dword 0x1e7c
ret
jmp dword 0x3384
jmp short 0x21c2a
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x422c60
mov eax,[ebp-0x40]
mov edx,[eax+0x8]
mov eax,[ebp-0x2c]
call dword 0x1e7c
ret
jmp dword 0x3384
jmp short 0x21c4a
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x422c80
mov edx,[ebp-0x14]
mov eax,[ebp-0x10]
call dword 0x1e7c
ret
jmp dword 0x3384
jmp short 0x21c6d
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret 0xc
lea eax,[eax+0x0]
xor ecx,ecx
mov edx,eax
add eax,byte +0x14
jmp short 0x21c9b
xor cx,[edx]
add edx,byte +0x2
cmp edx,eax
jl 0x21c95
mov eax,ecx
ret
mov eax,eax
push ebx
push esi
push edi
add esp,byte -0x54
mov esi,ecx
mov ebx,edx
xor edx,edx
mov [esp+0x18],edx
push esp
push byte +0x54
push eax
call dword 0x5d28
test eax,eax
jnz 0x21cc8
call dword 0x20e14
jmp short 0x21d07
cmp eax,byte +0x40
jl 0x21ce5
cmp dword [esp+0x18],byte +0x28
jc 0x21ce5
push esi
mov edi,ebx
lea esi,[esp+0x1c]
mov ecx,0xa
rep movsd
pop esi
jmp short 0x21d07
mov eax,ebx
xor ecx,ecx
mov edx,0x28
call dword 0x252c
mov dword [ebx],0x28
mov eax,[esp+0x4]
mov [ebx+0x4],eax
mov eax,[esp+0x8]
mov [ebx+0x8],eax
mov eax,esi
sub eax,byte +0x2
jz 0x21d1d
dec eax
sub eax,byte +0xe
jc 0x21d25
sub eax,0xf0
jc 0x21d30
jmp short 0x21d3b
mov word [ebx+0xe],0x1
jmp short 0x21d49
mov word [ebx+0xe],0x4
mov [ebx+0x20],esi
jmp short 0x21d49
mov word [ebx+0xe],0x8
mov [ebx+0x20],esi
jmp short 0x21d49
movzx eax,word [esp+0x12]
imul word [esp+0x10]
mov [ebx+0xe],ax
mov word [ebx+0xc],0x1
mov eax,[ebx+0x20]
cmp eax,[ebx+0x24]
jnc 0x21d5a
mov [ebx+0x24],eax
cmp dword [ebx+0x14],byte +0x0
jnz 0x21d81
movzx edx,word [ebx+0xe]
mov eax,[ebx+0x4]
mov ecx,0x20
call dword 0x210c4
mov ecx,eax
mov eax,[ebx+0x8]
cdq
xor eax,edx
sub eax,edx
imul ecx,eax
mov [ebx+0x14],ecx
add esp,byte +0x54
pop edi
pop esi
pop ebx
ret
push ebp
mov ebp,esp
add esp,byte -0x28
push ebx
push esi
mov esi,ecx
mov ebx,edx
lea edx,[ebp-0x28]
mov ecx,[ebp+0x8]
call dword 0x21ca4
movzx eax,word [ebp-0x1a]
cmp ax,byte +0x8
jna 0x21dba
mov dword [ebx],0x28
test byte [ebp-0x18],0x3
jz 0x21de0
add dword [ebx],byte +0xc
jmp short 0x21de0
mov edx,[ebp-0x8]
test edx,edx
jnz 0x21dd5
mov ecx,eax
mov eax,0x1
shl eax,cl
add eax,eax
add eax,eax
add eax,byte +0x28
mov [ebx],eax
jmp short 0x21de0
mov eax,edx
add eax,eax
add eax,eax
add eax,byte +0x28
mov [ebx],eax
mov eax,[ebp-0x14]
mov [esi],eax
pop esi
pop ebx
mov esp,ebp
pop ebp
ret 0x4
lea eax,[eax+0x0]
push byte +0x0
call dword 0x21d88
ret
push ebp
mov ebp,esp
add esp,byte -0xc
push ebx
push esi
push edi
mov ebx,ecx
mov edi,edx
mov esi,eax
mov edx,ebx
mov ecx,[ebp+0x8]
mov eax,esi
call dword 0x21ca4
xor eax,eax
mov [ebp-0x8],eax
push byte +0x0
call dword 0x5c70
mov [ebp-0xc],eax
xor eax,eax
push ebp
push dword 0x422e95
push dword [fs:eax]
mov [fs:eax],esp
test edi,edi
jz 0x21e4c
push byte +0x0
push edi
mov eax,[ebp-0xc]
push eax
call dword 0x5dd8
mov [ebp-0x8],eax
mov eax,[ebp-0xc]
push eax
call dword 0x5da8
push byte +0x0
push ebx
mov eax,[ebp+0xc]
push eax
mov eax,[ebx+0x8]
push eax
push byte +0x0
push esi
mov eax,[ebp-0xc]
push eax
call dword 0x5d00
test eax,eax
setnz [ebp-0x1]
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x422e9c
cmp dword [ebp-0x8],byte +0x0
jz 0x21e8b
push byte +0x0
mov eax,[ebp-0x8]
push eax
mov eax,[ebp-0xc]
push eax
call dword 0x5dd8
mov eax,[ebp-0xc]
push eax
call dword 0x5cb0
ret
jmp dword 0x3384
jmp short 0x21e76
movzx eax,byte [ebp-0x1]
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret 0x8
lea eax,[eax+0x0]
push ebp
mov ebp,esp
push ebx
mov ebx,[ebp+0x8]
push ebx
push byte +0x0
call dword 0x21df8
pop ebx
pop ebp
ret 0x4
ret
lea eax,[eax+0x0]
test eax,eax
jnz 0x21ecd
call dword 0x21ec0
ret
mov eax,eax
push ebp
mov ebp,esp
add esp,byte -0x54
push ebx
push esi
push edi
mov [ebp-0x1],cl
mov esi,edx
mov ebx,eax
lea eax,[ebp-0x2a]
xor ecx,ecx
mov edx,0x6
call dword 0x252c
lea eax,[ebp-0x54]
xor ecx,ecx
mov edx,0x10
call dword 0x252c
lea eax,[ebp-0x44]
push eax
push esi
call dword 0x6010
call dword 0x21ec4
xor edx,edx
push ebp
push dword 0x4230c0
push dword [fs:edx]
mov [fs:edx],esp
push byte +0x2
lea ecx,[ebp-0x10]
lea edx,[ebp-0x8]
mov eax,[ebp-0x38]
call dword 0x21d88
push byte -0x1
lea ecx,[ebp-0x14]
lea edx,[ebp-0xc]
mov eax,[ebp-0x34]
call dword 0x21d88
xor eax,eax
mov [ebp-0x18],eax
xor eax,eax
mov [ebp-0x1c],eax
xor eax,eax
mov [ebp-0x20],eax
xor eax,eax
mov [ebp-0x24],eax
xor edx,edx
push ebp
push dword 0x423099
push dword [fs:edx]
mov [fs:edx],esp
mov eax,[ebp-0x8]
call dword 0x1e48
mov [ebp-0x18],eax
mov eax,[ebp-0x10]
call dword 0x1e48
mov [ebp-0x1c],eax
mov eax,[ebp-0xc]
call dword 0x1e48
mov [ebp-0x20],eax
mov eax,[ebp-0x14]
call dword 0x1e48
mov [ebp-0x24],eax
mov eax,[ebp-0x1c]
push eax
push byte +0x2
mov ecx,[ebp-0x18]
xor edx,edx
mov eax,[ebp-0x38]
call dword 0x21df8
mov eax,[ebp-0x24]
push eax
push byte -0x1
mov ecx,[ebp-0x20]
xor edx,edx
mov eax,[ebp-0x34]
call dword 0x21df8
cmp byte [ebp-0x1],0x0
jz 0x21fd3
mov eax,[ebp-0xc]
add eax,byte +0x16
add eax,[ebp-0x14]
add eax,[ebp-0x10]
mov [ebp-0x30],eax
lea edx,[ebp-0x30]
mov ecx,0x4
mov eax,ebx
mov esi,[eax]
call dword [esi+0x10]
mov word [ebp-0x28],0x1
mov word [ebp-0x26],0x1
lea edx,[ebp-0x2a]
mov ecx,0x6
mov eax,ebx
mov esi,[eax]
call dword [esi+0x10]
mov esi,[ebp-0x20]
mov eax,esi
movzx edx,byte [eax+0x4]
mov [ebp-0x54],dl
movzx edx,byte [eax+0x8]
mov [ebp-0x53],dl
movzx edx,word [eax+0xc]
imul dx,[eax+0xe]
mov [ebp-0x52],dx
mov eax,[ebp-0xc]
add eax,[ebp-0x14]
add eax,[ebp-0x10]
mov [ebp-0x4c],eax
mov dword [ebp-0x48],0x16
lea edx,[ebp-0x54]
mov ecx,0x10
mov eax,ebx
mov edi,[eax]
call dword [edi+0x10]
mov eax,esi
mov edx,[eax+0x8]
add [eax+0x8],edx
mov edx,[ebp-0x20]
mov ecx,[ebp-0xc]
mov eax,ebx
mov esi,[eax]
call dword [esi+0x10]
mov edx,[ebp-0x24]
mov ecx,[ebp-0x14]
mov eax,ebx
mov esi,[eax]
call dword [esi+0x10]
mov edx,[ebp-0x1c]
mov ecx,[ebp-0x10]
mov eax,ebx
mov ebx,[eax]
call dword [ebx+0x10]
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x4230a0
mov edx,[ebp-0xc]
mov eax,[ebp-0x20]
call dword 0x1e7c
mov edx,[ebp-0x14]
mov eax,[ebp-0x24]
call dword 0x1e7c
mov edx,[ebp-0x8]
mov eax,[ebp-0x18]
call dword 0x1e7c
mov edx,[ebp-0x10]
mov eax,[ebp-0x1c]
call dword 0x1e7c
ret
jmp dword 0x3384
jmp short 0x2206c
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x4230c7
mov eax,[ebp-0x34]
push eax
call dword 0x5cc0
mov eax,[ebp-0x38]
push eax
call dword 0x5cc0
ret
jmp dword 0x3384
jmp short 0x220ad
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret
mov eax,eax
push ebx
push esi
test dl,dl
jz 0x220de
add esp,byte -0x10
call dword 0x2f14
mov ebx,edx
mov esi,eax
xor edx,edx
mov eax,esi
call dword 0x2bc0
mov eax,esi
test bl,bl
jz 0x22100
call dword 0x2f6c
pop dword [dword fs:0x0]
add esp,byte +0xc
mov eax,esi
pop esi
pop ebx
ret
lea eax,[eax+0x0]
push ebx
mov byte [eax+0x20],0x1
cmp word [eax+0x12],byte +0x0
jz 0x2211e
mov ebx,eax
mov edx,eax
mov eax,[ebx+0x14]
call dword [ebx+0x10]
pop ebx
ret
push ebp
mov ebp,esp
push ebx
mov eax,[ebp+0x8]
mov eax,[eax-0x4]
cmp dword [eax+0x20],byte +0x0
jz 0x22167
mov eax,[ebp+0x8]
mov eax,[eax-0x4]
mov ebx,[eax+0x20]
mov eax,ebx
mov edx,[dword 0x41f730]
call dword 0x2d7c
test al,al
jz 0x22162
mov eax,[ebp+0x8]
mov edx,ebx
mov eax,[ebp+0x8]
mov eax,[eax-0x8]
mov ecx,[eax]
call dword [ecx+0x18]
test al,al
jz 0x22162
xor eax,eax
jmp short 0x22174
mov al,0x1
pop ebx
pop ebp
ret
mov eax,[ebp+0x8]
mov eax,[eax-0x8]
mov edx,[eax]
call dword [edx+0x1c]
xor al,0x1
pop ebx
pop ebp
ret
nop
push ebp
mov ebp,esp
add esp,byte -0x8
push ebx
mov [ebp-0x4],edx
mov [ebp-0x8],eax
mov eax,[ebp-0x8]
push eax
mov eax,[eax]
mov eax,[eax+0x30]
push eax
mov eax,[ebp-0x8]
push eax
mov eax,[eax]
mov eax,[eax+0x44]
push eax
push ebp
call dword 0x22120
pop ecx
mov ecx,eax
mov edx,0x4231bc
mov eax,[ebp-0x4]
mov ebx,[eax]
call dword [ebx+0x8]
pop ebx
pop ecx
pop ecx
pop ebp
ret
db 0xff
db 0xff
db 0xff
inc dword [eax+eax]
add [eax],al
inc esp
popad
jz 0x22221
add [eax],al
add [eax],al
push ebp
mov ebp,esp
add esp,byte -0xc
push ebx
push esi
push edi
mov esi,edx
mov ebx,eax
test esi,esi
jz 0x221e9
mov eax,ebx
call dword 0x2ac8
mov edi,eax
mov eax,esi
call dword 0x2ac8
cmp edi,eax
jz 0x221ed
xor eax,eax
jmp short 0x221ef
mov al,0x1
mov [ebp-0x1],al
mov eax,ebx
mov edx,[eax]
call dword [edx+0x1c]
test al,al
jnz 0x22208
mov eax,esi
mov edx,[eax]
call dword [edx+0x1c]
test al,al
jz 0x2222c
mov eax,ebx
mov edx,[eax]
call dword [edx+0x1c]
test al,al
jz 0x2221e
mov eax,esi
mov edx,[eax]
call dword [edx+0x1c]
test al,al
jnz 0x22222
xor eax,eax
jmp short 0x22224
mov al,0x1
mov [ebp-0x1],al
jmp dword 0x22302
cmp byte [ebp-0x1],0x0
jz dword 0x22302
mov dl,0x1
mov eax,[0x413200]
call dword 0x2bc0
mov [ebp-0x8],eax
xor eax,eax
push ebp
push dword 0x4232fb
push dword [fs:eax]
mov [fs:eax],esp
mov edx,[ebp-0x8]
mov eax,ebx
mov ecx,[eax]
call dword [ecx+0x44]
mov dl,0x1
mov eax,[0x413200]
call dword 0x2bc0
mov [ebp-0xc],eax
xor eax,eax
push ebp
push dword 0x4232de
push dword [fs:eax]
mov [fs:eax],esp
mov edx,[ebp-0xc]
mov eax,esi
mov ecx,[eax]
call dword [ecx+0x44]
mov eax,[ebp-0x8]
mov edx,[eax]
call dword [edx]
push edx
push eax
mov eax,[ebp-0xc]
mov edx,[eax]
call dword [edx]
cmp edx,[esp+0x4]
jnz 0x2229d
cmp eax,[esp]
pop edx
pop eax
jnz 0x222bf
mov eax,[ebp-0x8]
mov edx,[eax]
call dword [edx]
mov ecx,eax
mov eax,[ebp-0xc]
mov edx,[eax+0x4]
mov eax,[ebp-0x8]
mov eax,[eax+0x4]
call dword 0x76f0
test al,al
jnz 0x222c3
xor eax,eax
jmp short 0x222c5
mov al,0x1
mov [ebp-0x1],al
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x4232e5
mov eax,[ebp-0xc]
call dword 0x2bf0
ret
jmp dword 0x3384
jmp short 0x222d5
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x423302
mov eax,[ebp-0x8]
call dword 0x2bf0
ret
jmp dword 0x3384
jmp short 0x222f2
movzx eax,byte [ebp-0x1]
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret
lea eax,[eax+0x0]
xor eax,eax
ret
nop
movzx eax,byte [eax+0x21]
ret
lea eax,[eax+0x0]
push ebp
mov ebp,esp
push ecx
push esi
mov esi,eax
push byte +0x20
mov ecx,edx
mov eax,[0x4130fc]
mov dl,0x1
call dword 0x1695c
mov [ebp-0x4],eax
xor eax,eax
push ebp
push dword 0x423364
push dword [fs:eax]
mov [fs:eax],esp
mov edx,[ebp-0x4]
mov eax,esi
mov ecx,[eax]
call dword [ecx+0x54]
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x42336b
mov eax,[ebp-0x4]
call dword 0x2bf0
ret
jmp dword 0x3384
jmp short 0x2235b
pop esi
pop ecx
pop ebp
ret
nop
push ebp
mov ebp,esp
push ebx
cmp word [eax+0x1a],byte +0x0
jz 0x22395
movzx ebx,byte [ebp+0x14]
push ebx
movzx ebx,byte [ebp+0x10]
push ebx
mov ebx,[ebp+0xc]
push ebx
mov ebx,[ebp+0x8]
push ebx
mov ebx,eax
mov eax,[ebx+0x1c]
call dword [ebx+0x18]
pop ebx
pop ebp
ret 0x10
mov eax,eax
push esi
mov esi,eax
mov eax,esi
mov ecx,[eax]
call dword [ecx+0x54]
pop esi
ret
push ebp
mov ebp,esp
push ecx
push esi
mov esi,eax
push dword 0xffff
mov ecx,edx
mov eax,[0x4130fc]
mov dl,0x1
call dword 0x1695c
mov [ebp-0x4],eax
xor eax,eax
push ebp
push dword 0x4233f3
push dword [fs:eax]
mov [fs:eax],esp
mov edx,[ebp-0x4]
mov eax,esi
mov ecx,[eax]
call dword [ecx+0x58]
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x4233fa
mov eax,[ebp-0x4]
call dword 0x2bf0
ret
jmp dword 0x3384
jmp short 0x223ea
pop esi
pop ecx
pop ebp
ret
mov eax,eax
ret
lea eax,[eax+0x0]
push ebx
push esi
mov esi,ecx
mov ebx,eax
mov eax,ebx
mov ecx,[eax]
call dword [ecx+0x40]
mov edx,esi
mov eax,ebx
mov ecx,[eax]
call dword [ecx+0x34]
pop esi
pop ebx
ret
lea eax,[eax+0x0]
cmp dl,[eax+0x21]
jz 0x2242f
mov [eax+0x21],dl
mov edx,eax
mov ecx,[eax]
call dword [ecx+0x10]
ret
push esi
mov esi,eax
mov eax,esi
mov ecx,[eax]
call dword [ecx+0x58]
pop esi
ret
inc eax
xor al,0x42
add [esi],cl
or edx,[esi+eax*2+0x69]
insb
gs inc esi
outsd
jc 0x224b8
popad
jz 0x2245e
add [eax],al
add [edx],al
add [eax],al
add [eax+edx+0x40040],dl
add [eax],al
xchg eax,esp
adc [eax+0x0],al
or [eax],al
add [eax],al
lea eax,[eax+0x0]
mov ah,0x34
inc edx
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add ah,al
xor al,0x42
add [eax],dl
add [eax],al
add [ecx+ebp+0x41],cl
add [eax],bh
ds inc eax
add [esi+edi+0x40],al
add [eax+0x3e],cl
inc eax
add [esi+edi+0x40],cl
add [eax+0x3e],al
inc eax
add [eax-0x5bffbfc5],cl
cmp eax,[eax+0x0]
or al,0x36
inc edx
add [esi+ecx*2+0x50e80041],ah
inc ecx
add [eax+0x4d],bl
inc ecx
add al,dl
dec ebp
inc ecx
add [eax],dl
push esp
inc esi
imul ebp,[ebp+0x46],dword 0x616d726f
jz 0x22544
dec esp
imul esi,[ebx+0x74],dword 0x5500408d
mov ebp,esp
xor ecx,ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
test dl,dl
jz 0x224ef
add esp,byte -0x10
call dword 0x2f14
mov ebx,edx
mov esi,eax
xor eax,eax
push ebp
push dword 0x4235b5
push dword [fs:eax]
mov [fs:eax],esp
xor edx,edx
mov eax,esi
call dword 0x2bc0
push byte +0x0
mov eax,[0x41f9f4]
push eax
lea edx,[ebp-0x4]
mov eax,[0x468cc0]
call dword 0x5750
mov ecx,[ebp-0x4]
mov edx,0x4235e4
mov eax,esi
call dword 0x22658
push byte +0x0
mov eax,[0x41f9f4]
push eax
lea edx,[ebp-0x8]
mov eax,[0x468b30]
call dword 0x5750
mov ecx,[ebp-0x8]
mov edx,0x4235f0
mov eax,esi
call dword 0x22658
push byte +0x0
mov eax,[0x41fc80]
push eax
lea edx,[ebp-0xc]
mov eax,[0x468b2c]
call dword 0x5750
mov ecx,[ebp-0xc]
mov edx,0x4235fc
mov eax,esi
call dword 0x22658
push byte +0x0
mov eax,[0x41fb38]
push eax
lea edx,[ebp-0x10]
mov eax,[0x468b28]
call dword 0x5750
mov ecx,[ebp-0x10]
mov edx,0x423608
mov eax,esi
call dword 0x22658
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x4235bc
lea eax,[ebp-0x10]
mov edx,0x4
call dword 0x3a40
ret
jmp dword 0x3384
jmp short 0x225a7
mov eax,esi
test bl,bl
jz 0x225d1
call dword 0x2f6c
pop dword [dword fs:0x0]
add esp,byte +0xc
mov eax,esi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret
add [eax],al
add bh,bh
db 0xff
db 0xff
inc dword [ebx]
add [eax],al
add [edi+0x6d],dh
o16 add bh,bh
db 0xff
db 0xff
inc dword [ebx]
add [eax],al
add [ebp+0x6d],ah
o16 add bh,bh
db 0xff
db 0xff
inc dword [ebx]
add [eax],al
add [ecx+0x63],ch
outsd
add bh,bh
db 0xff
db 0xff
inc dword [ebx]
add [eax],al
add [edx+0x6d],ah
jo 0x2260c
push ebx
push esi
push edi
push ebp
call dword 0x2fbc
mov ebx,edx
mov edi,eax
mov ebp,[edi+0x8]
dec ebp
test ebp,ebp
jl 0x2263c
inc ebp
xor esi,esi
mov edx,esi
mov eax,edi
call dword 0x13e7c
mov edx,[dword 0x42343c]
call dword 0x4994
inc esi
dec ebp
jnz 0x22624
mov edx,ebx
and dl,0xfc
mov eax,edi
call dword 0x13d04
test bl,bl
jng 0x22653
mov eax,edi
call dword 0x2f64
pop ebp
pop edi
pop esi
pop ebx
ret
push ebp
mov ebp,esp
add esp,byte -0xc
push ebx
push esi
push edi
xor ebx,ebx
mov [ebp-0xc],ebx
mov [ebp-0x8],ecx
mov [ebp-0x4],edx
mov edi,eax
xor eax,eax
push ebp
push dword 0x4236db
push dword [fs:eax]
mov [fs:eax],esp
mov edx,[dword 0x42343c]
mov eax,0x10
call dword 0x4980
mov esi,eax
mov ebx,esi
lea edx,[ebp-0xc]
mov eax,[ebp-0x4]
call dword 0x787c
mov edx,[ebp-0xc]
lea eax,[ebx+0x4]
call dword 0x3a70
mov eax,[ebp+0x8]
mov [ebx],eax
lea eax,[ebx+0x8]
mov edx,[ebp-0x8]
call dword 0x3a70
mov eax,[ebp+0xc]
mov [ebx+0xc],eax
mov edx,esi
mov eax,edi
call dword 0x13d24
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x4236e2
lea eax,[ebp-0xc]
call dword 0x3a1c
ret
jmp dword 0x3384
jmp short 0x226d2
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret 0x8
nop
push ebp
mov ebp,esp
add esp,0xfffffef8
push ebx
push esi
push edi
xor ecx,ecx
mov [ebp-0x8],ecx
mov [ebp-0x4],edx
mov edi,eax
xor eax,eax
push ebp
push dword 0x42376a
push dword [fs:eax]
mov [fs:eax],esp
mov ebx,[edi+0x8]
dec ebx
cmp ebx,byte +0x0
jl 0x22752
mov edx,ebx
mov eax,edi
call dword 0x13e7c
mov esi,[eax]
lea edx,[ebp-0x108]
mov eax,esi
call dword 0x2ad0
lea edx,[ebp-0x108]
lea eax,[ebp-0x8]
call dword 0x3c80
mov eax,[ebp-0x8]
mov edx,[ebp-0x4]
call dword 0x3e44
jz 0x22754
dec ebx
cmp ebx,byte -0x1
jnz 0x22719
xor esi,esi
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x423771
lea eax,[ebp-0x8]
call dword 0x3a1c
ret
jmp dword 0x3384
jmp short 0x22761
mov eax,esi
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret
mov eax,eax
enter 0x4237,0x0
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
enter 0x4237,0x0
or al,0x0
add [eax],al
mov al,0x10
inc eax
add [eax],bh
ds inc eax
add [esi+edi+0x40],al
add [eax+0x3e],cl
inc eax
add [esi+edi+0x40],cl
add [eax+0x3e],al
inc eax
add [eax-0x5bffbfc5],cl
cmp eax,[eax+0x0]
pop esp
cmp [edx+0x0],al
adc [ebx+eax*2+0x6c],edx
imul esi,[eax+0x62],dword 0x6472616f
inc esi
outsd
jc 0x22844
popad
jz 0x2284d
mov eax,eax
push ebx
push esi
test dl,dl
jz 0x227ea
add esp,byte -0x10
call dword 0x2f14
mov ebx,edx
mov esi,eax
mov dl,0x1
mov eax,[0x41294c]
call dword 0x2bc0
mov [esi+0x4],eax
mov dl,0x1
mov eax,[0x41294c]
call dword 0x2bc0
mov [esi+0x8],eax
mov ecx,[dword 0x41f9f4]
mov dx,0x3
mov eax,esi
call dword 0x22888
mov ecx,[dword 0x41f9f4]
mov dx,0xe
mov eax,esi
call dword 0x22888
mov ecx,[dword 0x41fb38]
mov dx,0x2
mov eax,esi
call dword 0x22888
mov eax,esi
test bl,bl
jz 0x22854
call dword 0x2f6c
pop dword [dword fs:0x0]
add esp,byte +0xc
mov eax,esi
pop esi
pop ebx
ret
lea eax,[eax+0x0]
push ebx
push esi
call dword 0x2fbc
mov ebx,edx
mov esi,eax
mov eax,[esi+0x4]
call dword 0x2bf0
mov eax,[esi+0x8]
call dword 0x2bf0
test bl,bl
jng 0x22882
mov eax,esi
call dword 0x2f64
pop esi
pop ebx
ret
lea eax,[eax+0x0]
push ebp
mov ebp,esp
add esp,byte -0x8
push ebx
push esi
push edi
mov ebx,edx
mov [ebp-0x4],eax
mov eax,[ebp-0x4]
mov eax,[eax+0x4]
mov edx,ecx
call dword 0x13d24
mov [ebp-0x8],eax
xor eax,eax
push ebp
push dword 0x4238cc
push dword [fs:eax]
mov [fs:eax],esp
movzx edx,bx
mov eax,[ebp-0x4]
mov eax,[eax+0x8]
call dword 0x13d24
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
jmp short 0x228e9
jmp dword 0x30d0
mov eax,[ebp-0x4]
mov eax,[eax+0x4]
mov edx,[ebp-0x8]
call dword 0x13d70
call dword 0x348c
call dword 0x34e0
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
ret
cmp dword [dword 0x467dcc],byte +0x0
jnz 0x2290a
mov dl,0x1
mov eax,[0x423468]
call dword 0x224d8
mov [0x467dcc],eax
mov eax,[0x467dcc]
ret
cmp dword [dword 0x467dc8],byte +0x0
jnz 0x2292a
mov dl,0x1
mov eax,[0x42377c]
call dword 0x227dc
mov [0x467dc8],eax
mov eax,[0x467dc8]
ret
push ebx
push esi
test dl,dl
jz 0x2293e
add esp,byte -0x10
call dword 0x2f14
mov ebx,edx
mov esi,eax
xor edx,edx
mov eax,esi
call dword 0x2bc0
call dword 0x228f0
call dword 0x22910
mov eax,esi
test bl,bl
jz 0x2296a
call dword 0x2f6c
pop dword [dword fs:0x0]
add esp,byte +0xc
mov eax,esi
pop esi
pop ebx
ret
nop
push ebx
push esi
call dword 0x2fbc
mov ebx,edx
mov esi,eax
mov eax,[esi+0xc]
call dword 0x2bf0
mov edx,ebx
and dl,0xfc
mov eax,esi
call dword 0x14450
test bl,bl
jng 0x2299a
mov eax,esi
call dword 0x2f64
pop esi
pop ebx
ret
lea eax,[eax+0x0]
push ebx
push esi
mov esi,edx
mov ebx,eax
mov eax,esi
call dword 0x2ac8
mov edx,eax
mov eax,[ebx+0xc]
call dword 0x2d7c
test al,al
jz 0x229c8
mov edx,[ebx+0xc]
mov eax,esi
mov ecx,[eax]
call dword [ecx+0x8]
pop esi
pop ebx
ret
mov edx,esi
mov eax,ebx
call dword 0x14560
pop esi
pop ebx
ret
push ebx
push esi
push edi
mov edi,edx
mov ebx,eax
mov esi,[ebx+0xc]
mov eax,esi
mov edx,edi
call dword 0x2d7c
test al,al
jnz 0x22a32
mov eax,esi
call dword 0x2bf0
xor eax,eax
mov [ebx+0xc],eax
mov dl,0x1
mov eax,edi
call dword [eax+0x48]
mov esi,eax
mov [ebx+0xc],esi
mov [esi+0x14],ebx
mov eax,ebx
mov dx,0xfffd
call dword 0x2e04
mov [esi+0x10],eax
mov [esi+0x1c],ebx
mov eax,ebx
mov dx,0xfffc
call dword 0x2e04
mov [esi+0x18],eax
mov edx,ebx
mov eax,ebx
mov si,0xfffd
call dword 0x2dec
pop edi
pop esi
pop ebx
ret
mov eax,eax
push ebx
mov ebx,eax
mov edx,[dword 0x41fb38]
mov eax,ebx
call dword 0x229d4
mov eax,[ebx+0xc]
pop ebx
ret
lea eax,[eax+0x0]
push ebp
mov ebp,esp
push ecx
push ebx
push esi
push edi
mov esi,edx
mov ebx,eax
xor eax,eax
mov [ebp-0x4],eax
test esi,esi
jz 0x22aad
mov eax,esi
call dword 0x2ac8
mov dl,0x1
call dword [eax+0x48]
mov [ebp-0x4],eax
mov edx,esi
mov eax,[ebp-0x4]
mov ecx,[eax]
call dword [ecx+0x8]
mov eax,[ebp-0x4]
mov [eax+0x14],ebx
push eax
mov eax,ebx
mov dx,0xfffd
call dword 0x2e04
mov edx,eax
pop eax
mov [eax+0x10],edx
mov eax,[ebp-0x4]
mov [eax+0x1c],ebx
push eax
mov eax,ebx
mov dx,0xfffc
call dword 0x2e04
mov edx,eax
pop eax
mov [eax+0x18],edx
xor eax,eax
push ebp
push dword 0x423ae0
push dword [fs:eax]
mov [fs:eax],esp
mov eax,[ebx+0xc]
call dword 0x2bf0
mov eax,[ebp-0x4]
mov [ebx+0xc],eax
mov edx,ebx
mov eax,ebx
mov si,0xfffd
call dword 0x2dec
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
jmp short 0x22af7
jmp dword 0x30d0
mov eax,[ebp-0x4]
call dword 0x2bf0
call dword 0x348c
call dword 0x34e0
pop edi
pop esi
pop ebx
pop ecx
pop ebp
ret
lea eax,[eax+0x0]
push ebx
push esi
mov esi,edx
mov ebx,eax
mov eax,ebx
call dword 0x22a38
mov edx,esi
mov ecx,[eax]
call dword [ecx+0x54]
pop esi
pop ebx
ret
nop
push esi
push edi
mov edi,edx
mov esi,eax
mov eax,esi
call dword 0x22a38
mov edx,edi
mov ecx,[eax]
call dword [ecx+0x58]
pop edi
pop esi
ret
nop
push ebx
push esi
mov ebx,edx
mov esi,eax
test ebx,ebx
jnz 0x22b46
xor edx,edx
mov eax,esi
call dword 0x22a50
pop esi
pop ebx
ret
mov eax,ebx
mov edx,[dword 0x41f888]
call dword 0x2d7c
test al,al
jz 0x22b63
mov edx,[ebx+0xc]
mov eax,esi
call dword 0x22a50
jmp short 0x22b88
mov eax,ebx
mov edx,[dword 0x41f730]
call dword 0x2d7c
test al,al
jz 0x22b7f
mov edx,ebx
mov eax,esi
call dword 0x22a50
jmp short 0x22b88
mov edx,ebx
mov eax,esi
call dword 0x1447c
pop esi
pop ebx
ret
nop
push ebx
mov ebx,eax
cmp word [ebx+0x12],byte +0x0
jz 0x22b9e
mov edx,ebx
mov eax,[ebx+0x14]
call dword [ebx+0x10]
cmp dword [ebx+0x18],byte +0x0
jz 0x22bac
mov eax,[ebx+0x18]
mov edx,[eax]
call dword [edx+0xc]
pop ebx
ret
mov eax,eax
push ebp
mov ebp,esp
push ebx
cmp word [eax+0x22],byte +0x0
jz 0x22bd5
movzx ebx,byte [ebp+0x14]
push ebx
movzx ebx,byte [ebp+0x10]
push ebx
mov ebx,[ebp+0xc]
push ebx
mov ebx,[ebp+0x8]
push ebx
mov ebx,eax
mov eax,[ebx+0x24]
call dword [ebx+0x20]
pop ebx
pop ebp
ret 0x10
mov eax,eax
push ebp
mov ebp,esp
add esp,byte -0x48
push ebx
push esi
push edi
xor ecx,ecx
mov [ebp-0x48],ecx
mov esi,edx
mov ebx,eax
xor eax,eax
push ebp
push dword 0x423ce2
push dword [fs:eax]
mov [fs:eax],esp
lea edx,[ebp-0x44]
mov ecx,0x1
mov eax,esi
mov edi,[eax]
call dword [edi+0xc]
movzx ecx,byte [ebp-0x44]
lea edx,[ebp-0x43]
mov eax,esi
mov edi,[eax]
call dword [edi+0xc]
lea eax,[ebp-0x48]
lea edx,[ebp-0x44]
call dword 0x3c80
mov edx,[ebp-0x48]
mov eax,[0x467dcc]
call dword 0x226ec
xor edx,edx
mov [ebp-0x4],edx
test eax,eax
jz 0x22c7b
mov dl,0x1
call dword [eax+0x48]
mov [ebp-0x4],eax
xor eax,eax
push ebp
push dword 0x423c64
push dword [fs:eax]
mov [fs:eax],esp
mov edx,esi
mov eax,[ebp-0x4]
mov ecx,[eax]
call dword [ecx+0x30]
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
jmp short 0x22c7b
jmp dword 0x30d0
mov eax,[ebp-0x4]
call dword 0x2bf0
call dword 0x348c
call dword 0x34e0
mov eax,[ebx+0xc]
call dword 0x2bf0
mov eax,[ebp-0x4]
mov [ebx+0xc],eax
cmp dword [ebp-0x4],byte +0x0
jz 0x22cbf
mov eax,[ebp-0x4]
mov [eax+0x14],ebx
push eax
mov eax,ebx
mov dx,0xfffd
call dword 0x2e04
mov edx,eax
pop eax
mov [eax+0x10],edx
mov eax,[ebp-0x4]
mov [eax+0x1c],ebx
push eax
mov eax,ebx
mov dx,0xfffc
call dword 0x2e04
mov edx,eax
pop eax
mov [eax+0x18],edx
mov edx,ebx
mov eax,ebx
mov si,0xfffd
call dword 0x2dec
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x423ce9
lea eax,[ebp-0x48]
call dword 0x3a1c
ret
jmp dword 0x3384
jmp short 0x22cd9
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret
push ebx
push esi
push edi
add esp,0xfffffec0
mov esi,edx
mov ebx,eax
mov edi,[ebx+0xc]
test edi,edi
jz 0x22d1e
lea edx,[esp+0x40]
mov eax,[edi]
call dword 0x2ad0
lea edx,[esp+0x40]
mov eax,esp
mov cl,0x3f
call dword 0x241c
jmp short 0x22d22
mov byte [esp],0x0
movzx ecx,byte [esp]
inc ecx
mov edx,esp
mov eax,esi
mov edi,[eax]
call dword [edi+0x10]
mov eax,[ebx+0xc]
test eax,eax
jz 0x22d3e
mov edx,esi
mov ecx,[eax]
call dword [ecx+0x44]
add esp,0x140
pop edi
pop esi
pop ebx
ret
push ebp
mov ebp,esp
push ebx
push esi
mov eax,[ebp+0x8]
mov eax,[eax-0x4]
mov esi,[eax+0x20]
test esi,esi
jz 0x22db1
mov bl,0x1
mov eax,[ebp+0x8]
mov eax,esi
mov edx,[dword 0x41f888]
call dword 0x2d7c
test al,al
jz 0x22dbe
mov eax,[ebp+0x8]
mov ebx,esi
mov eax,[ebp+0x8]
mov eax,[eax-0x8]
mov eax,[eax+0xc]
cmp eax,[ebx+0xc]
jz 0x22da7
mov eax,[ebp+0x8]
mov eax,[eax-0x8]
mov esi,[eax+0xc]
test esi,esi
jz 0x22dab
cmp dword [ebx+0xc],byte +0x0
jz 0x22dab
mov edx,[ebx+0xc]
mov eax,[ebp+0x8]
mov eax,esi
mov ecx,[eax]
call dword [ecx+0x18]
test al,al
jz 0x22dab
xor eax,eax
jmp short 0x22dad
mov al,0x1
mov ebx,eax
jmp short 0x22dbe
mov eax,[ebp+0x8]
mov eax,[eax-0x8]
cmp dword [eax+0xc],byte +0x0
setnz bl
mov eax,ebx
pop esi
pop ebx
pop ebp
ret
push ebp
mov ebp,esp
add esp,byte -0x8
push ebx
mov [ebp-0x4],edx
mov [ebp-0x8],eax
mov eax,[ebp-0x8]
push eax
push dword 0x423bdc
mov eax,[ebp-0x8]
push eax
push dword 0x423cf0
push ebp
call dword 0x22d48
pop ecx
mov ecx,eax
mov edx,0x423e08
mov eax,[ebp-0x4]
mov ebx,[eax]
call dword [ebx+0x8]
pop ebx
pop ecx
pop ecx
pop ebp
ret
add [eax],al
db 0xff
db 0xff
db 0xff
inc dword [eax+eax]
add [eax],al
inc esp
popad
jz 0x22e6d
add [eax],al
add [eax],al
push esi
xor edx,edx
mov esi,[eax+0xc]
test esi,esi
jz 0x22e23
mov eax,esi
mov edx,[eax]
call dword [edx+0x2c]
mov edx,eax
mov eax,edx
pop esi
ret
nop
push esi
xor edx,edx
mov esi,[eax+0xc]
test esi,esi
jz 0x22e3b
mov eax,esi
mov edx,[eax]
call dword [edx+0x20]
mov edx,eax
mov eax,edx
pop esi
ret
nop
push ebx
push esi
call dword 0x2fbc
mov ebx,edx
mov esi,eax
mov eax,[esi+0x8]
test eax,eax
jz 0x22e58
push eax
call dword 0x5cb8
mov eax,[esi+0x14]
call dword 0x1ed5c
mov edx,ebx
and dl,0xfc
mov eax,esi
call dword 0x2be0
test bl,bl
jng 0x22e77
mov eax,esi
call dword 0x2f64
pop esi
pop ebx
ret
mov eax,eax
ret
lea eax,[eax+0x0]
push ebx
push esi
test dl,dl
jz 0x22e8e
add esp,byte -0x10
call dword 0x2f14
mov ebx,edx
mov esi,eax
xor edx,edx
mov eax,esi
call dword 0x220d0
mov byte [esi+0x2c],0x1
mov byte [esi+0x21],0x1
xor edx,edx
mov eax,esi
mov ecx,[eax]
call dword [ecx+0x8]
mov eax,esi
test bl,bl
jz 0x22ec1
call dword 0x2f6c
pop dword [dword fs:0x0]
add esp,byte +0xc
mov eax,esi
pop esi
pop ebx
ret
mov eax,eax
push ebx
push esi
call dword 0x2fbc
mov ebx,edx
mov esi,eax
mov eax,[esi+0x28]
call dword 0x23f50
mov edx,ebx
and dl,0xfc
mov eax,esi
call dword 0x14450
test bl,bl
jng 0x22ef2
mov eax,esi
call dword 0x2f64
pop esi
pop ebx
ret
lea eax,[eax+0x0]
push ebx
push esi
push edi
mov esi,edx
mov ebx,eax
test esi,esi
jz 0x22f14
mov eax,esi
mov edx,[dword 0x41f9f4]
call dword 0x2d7c
test al,al
jz 0x22f7f
xor edi,edi
mov eax,[ebx+0x28]
test eax,eax
jz 0x22f25
mov edi,[eax+0x14]
call dword 0x23f50
test esi,esi
jz 0x22f3a
mov eax,esi
mov edx,[eax+0x28]
mov [ebx+0x28],edx
movzx eax,byte [eax+0x2c]
mov [ebx+0x2c],al
jmp short 0x22f4d
mov dl,0x1
mov eax,[0x41f994]
call dword 0x2bc0
mov [ebx+0x28],eax
mov byte [ebx+0x2c],0x1
mov eax,[ebx+0x28]
call dword 0x23f4c
mov eax,ebx
mov edx,[eax]
call dword [edx+0x24]
cmp edi,eax
jz 0x22f6b
mov eax,ebx
mov edx,[eax]
call dword [edx+0x24]
test eax,eax
jnz 0x22f6f
xor eax,eax
jmp short 0x22f71
mov al,0x1
mov [ebx+0x22],al
mov edx,ebx
mov eax,ebx
mov ecx,[eax]
call dword [ecx+0x10]
jmp short 0x22f88
mov edx,esi
mov eax,ebx
call dword 0x1447c
pop edi
pop esi
pop ebx
ret
push ebx
push esi
push edi
push ebp
add esp,byte -0x14
mov [esp],ecx
mov edi,edx
mov ebx,eax
cmp dword [ebx+0x28],byte +0x0
jz 0x23014
mov eax,ebx
mov edx,[eax]
call dword [edx+0x24]
mov esi,eax
xor ebp,ebp
test esi,esi
jz 0x22fce
push byte -0x1
push esi
mov eax,edi
call dword 0x20b30
push eax
call dword 0x5dd8
mov ebp,eax
mov eax,edi
call dword 0x20b30
push eax
call dword 0x5da8
mov eax,[esp]
push esi
push edi
mov esi,eax
lea edi,[esp+0xc]
movsd
movsd
movsd
movsd
pop edi
pop esi
dec dword [esp+0xc]
dec dword [esp+0x10]
lea eax,[esp+0x4]
push eax
mov eax,[ebx+0x28]
mov eax,[eax+0x8]
push eax
mov eax,edi
call dword 0x20b30
push eax
call dword 0x5da0
test esi,esi
jz 0x23014
push byte -0x1
push ebp
mov eax,edi
call dword 0x20b30
push eax
call dword 0x5dd8
add esp,byte +0x14
pop ebp
pop edi
pop esi
pop ebx
ret
cmp dword [eax+0x28],byte +0x0
setz al
ret
push ebx
add esp,byte -0x64
mov ebx,eax
cmp dword [ebx+0x28],byte +0x0
jnz 0x23037
mov eax,ebx
call dword 0x231cc
mov ebx,[ebx+0x28]
cmp word [ebx+0x18],byte +0x0
jnz 0x2306c
mov eax,[ebx+0x8]
test eax,eax
jnz 0x2304d
mov eax,[ebx+0x20]
jmp short 0x23080
push esp
push byte +0x64
push eax
call dword 0x5d18
imul eax,[esp+0x54],byte +0x64
push eax
mov eax,[esp+0x50]
push eax
mov eax,[ebx+0x10]
push eax
call dword 0x5bc0
jmp short 0x23080
push dword 0x9ec
mov eax,[0x46da38]
push eax
mov eax,[ebx+0x10]
push eax
call dword 0x5bc0
add esp,byte +0x64
pop ebx
ret
lea eax,[eax+0x0]
push ebx
push esi
push edi
add esp,0xfffffbfc
mov ebx,eax
xor edi,edi
mov eax,[ebx+0x28]
test eax,eax
jz 0x23105
cmp dword [eax+0x8],byte +0x0
jz 0x23105
cmp dword [eax+0x14],byte +0x0
jnz 0x230ff
push byte +0x0
push byte +0x0
mov eax,[eax+0x8]
push eax
call dword 0x5d20
mov esi,eax
test esi,esi
jz 0x23105
cmp esi,0x100
jng 0x230c9
and esi,0xff
mov eax,[ebx+0x28]
mov eax,[eax+0x14]
call dword 0x1ed5c
mov word [esp],0x300
mov [esp+0x2],si
lea eax,[esp+0x4]
push eax
push esi
mov eax,[ebx+0x28]
mov eax,[eax+0x8]
push eax
call dword 0x5d20
mov eax,esp
push eax
call dword 0x5c98
mov edx,[ebx+0x28]
mov [edx+0x14],eax
mov eax,[ebx+0x28]
mov edi,[eax+0x14]
mov eax,edi
add esp,0x404
pop edi
pop esi
pop ebx
ret
lea eax,[eax+0x0]
push ebx
add esp,byte -0x64
mov ebx,eax
cmp dword [ebx+0x28],byte +0x0
jnz 0x23127
mov eax,ebx
call dword 0x231cc
mov ebx,[ebx+0x28]
cmp word [ebx+0x18],byte +0x0
jnz 0x2315c
mov eax,[ebx+0x8]
test eax,eax
jnz 0x2313d
mov eax,[ebx+0x1c]
jmp short 0x23170
push esp
push byte +0x64
push eax
call dword 0x5d18
imul eax,[esp+0x50],byte +0x64
push eax
mov eax,[esp+0x4c]
push eax
mov eax,[ebx+0xc]
push eax
call dword 0x5bc0
jmp short 0x23170
push dword 0x9ec
mov eax,[0x46da38]
push eax
mov eax,[ebx+0xc]
push eax
call dword 0x5bc0
add esp,byte +0x64
pop ebx
ret
lea eax,[eax+0x0]
push ebx
push esi
mov esi,edx
mov ebx,eax
mov edx,esi
mov eax,ebx
call dword 0x236f8
test al,al
jz 0x23196
mov edx,esi
mov eax,ebx
call dword 0x23260
jmp short 0x231b0
mov eax,esi
mov edx,[eax]
call dword [edx]
push eax
mov eax,esi
call dword 0x164a8
pop ecx
sub ecx,eax
mov edx,esi
mov eax,ebx
call dword 0x23330
mov eax,ebx
mov edx,[eax]
call dword [edx+0x24]
test eax,eax
setnz al
mov [ebx+0x22],al
mov edx,ebx
mov eax,ebx
mov ecx,[eax]
call dword [ecx+0x10]
pop esi
pop ebx
ret
nop
push ebx
push esi
mov ebx,eax
mov eax,[ebx+0x28]
call dword 0x23f50
mov dl,0x1
mov eax,[0x41f994]
call dword 0x2bc0
mov esi,eax
mov [ebx+0x28],esi
mov eax,esi
call dword 0x23f4c
pop esi
pop ebx
ret
nop
push ebx
push esi
push edi
push ecx
mov esi,edx
mov ebx,eax
mov edx,esp
mov ecx,0x4
mov eax,esi
mov edi,[eax]
call dword [edi+0xc]
cmp dword [esp],byte +0x4
jg 0x2321b
xor edx,edx
mov eax,ebx
mov ecx,[eax]
call dword [ecx+0x8]
jmp short 0x23242
mov edx,esi
mov eax,ebx
call dword 0x236f8
test al,al
jz 0x23233
mov edx,esi
mov eax,ebx
call dword 0x23260
jmp short 0x23242
mov ecx,[esp]
sub ecx,byte +0x4
mov edx,esi
mov eax,ebx
call dword 0x23330
mov eax,ebx
mov edx,[eax]
call dword [edx+0x24]
test eax,eax
setnz al
mov [ebx+0x22],al
mov edx,ebx
mov eax,ebx
mov ecx,[eax]
call dword [ecx+0x10]
pop edx
pop edi
pop esi
pop ebx
ret
nop
push ebp
mov ebp,esp
add esp,byte -0x68
push ebx
push esi
push edi
mov edi,edx
mov esi,eax
mov eax,esi
call dword 0x231cc
lea edx,[ebp-0x68]
mov ecx,0x64
mov eax,edi
call dword 0x166d4
cmp dword [ebp-0x40],0x464d4520
jz 0x23291
call dword 0x20e2c
mov eax,[ebp-0x38]
call dword 0x1e60
mov [ebp-0x4],eax
mov ebx,[esi+0x28]
xor eax,eax
push ebp
push dword 0x424320
push dword [fs:eax]
mov [fs:eax],esp
mov edx,[ebp-0x4]
lea eax,[ebp-0x68]
mov ecx,0x64
call dword 0x2050
mov ecx,[ebp-0x38]
sub ecx,byte +0x64
mov edx,[ebp-0x4]
add edx,byte +0x64
mov eax,edi
call dword 0x166d4
mov eax,[ebp-0x4]
push eax
mov eax,[ebp-0x38]
push eax
call dword 0x5e00
mov edi,eax
mov [ebx+0x8],edi
test edi,edi
jnz 0x232eb
call dword 0x20e2c
mov word [ebx+0x18],0x0
mov eax,[ebp-0x48]
sub eax,[ebp-0x50]
mov [ebx+0xc],eax
mov eax,[ebp-0x44]
sub eax,[ebp-0x4c]
mov [ebx+0x10],eax
mov byte [esi+0x2c],0x1
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x424327
mov edx,[ebp-0x38]
mov eax,[ebp-0x4]
call dword 0x1e7c
ret
jmp dword 0x3384
jmp short 0x23314
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret
mov eax,eax
push ebp
mov ebp,esp
add esp,0xffffff68
push ebx
push esi
push edi
mov [ebp-0x8],ecx
mov [ebp-0x4],edx
mov esi,eax
mov eax,esi
call dword 0x231cc
lea edx,[ebp-0x22]
mov ecx,0x16
mov eax,[ebp-0x4]
mov ebx,[eax]
call dword [ebx+0xc]
cmp dword [ebp-0x22],0x9ac6cdd7
jnz 0x23372
lea eax,[ebp-0x22]
call dword 0x21c8c
cmp ax,[ebp-0xe]
jz 0x23377
call dword 0x20e2c
sub dword [ebp-0x8],byte +0x16
mov eax,[ebp-0x8]
call dword 0x1e60
mov [ebp-0xc],eax
mov ebx,[esi+0x28]
xor eax,eax
push ebp
push dword 0x42449f
push dword [fs:eax]
mov [fs:eax],esp
mov edx,[ebp-0xc]
mov ecx,[ebp-0x8]
mov eax,[ebp-0x4]
mov edi,[eax]
call dword [edi+0xc]
mov eax,[esi+0x28]
movzx edx,word [ebp-0x14]
mov [eax+0x18],dx
cmp word [ebp-0x14],byte +0x0
jnz 0x233bd
mov word [ebp-0x14],0x60
movzx eax,word [ebp-0x14]
push eax
push dword 0x9ec
movsx eax,word [ebp-0x18]
movsx edx,word [ebp-0x1c]
sub eax,edx
push eax
call dword 0x5bc0
mov [ebx+0xc],eax
movzx eax,word [ebp-0x14]
push eax
push dword 0x9ec
movsx eax,word [ebp-0x16]
movsx edx,word [ebp-0x1a]
sub eax,edx
push eax
call dword 0x5bc0
mov [ebx+0x10],eax
mov dword [ebp-0x32],0x8
xor eax,eax
mov [ebp-0x2e],eax
xor eax,eax
mov [ebp-0x2a],eax
xor eax,eax
mov [ebp-0x26],eax
lea eax,[ebp-0x32]
push eax
push byte +0x0
mov eax,[ebp-0xc]
push eax
mov eax,[ebp-0x8]
push eax
call dword 0x5e30
mov edi,eax
mov [ebx+0x8],edi
test edi,edi
jnz 0x2342e
call dword 0x20e2c
lea eax,[ebp-0x96]
push eax
push byte +0x64
mov eax,[ebx+0x8]
push eax
call dword 0x5d18
mov dword [ebp-0x32],0x8
mov eax,[ebp-0x76]
mov [ebp-0x2e],eax
mov eax,[ebp-0x72]
mov [ebp-0x2a],eax
xor eax,eax
mov [ebp-0x26],eax
mov eax,[ebx+0x8]
push eax
call dword 0x5cb8
lea eax,[ebp-0x32]
push eax
push byte +0x0
mov eax,[ebp-0xc]
push eax
mov eax,[ebp-0x8]
push eax
call dword 0x5e30
mov edi,eax
mov [ebx+0x8],edi
test edi,edi
jnz 0x23482
call dword 0x20e2c
mov byte [esi+0x2c],0x0
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x4244a6
mov edx,[ebp-0x8]
mov eax,[ebp-0xc]
call dword 0x1e7c
ret
jmp dword 0x3384
jmp short 0x23493
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret
lea eax,[eax+0x0]
push ebp
mov ebp,esp
add esp,byte -0x10
push ebx
xor ecx,ecx
mov [ebp-0xc],ecx
mov [ebp-0x10],ecx
mov ebx,edx
mov [ebp-0x4],eax
xor eax,eax
push ebp
push dword 0x424559
push dword [fs:eax]
mov [fs:eax],esp
mov eax,[ebp-0x4]
movzx eax,byte [eax+0x2c]
mov [ebp-0x5],al
xor eax,eax
push ebp
push dword 0x424537
push dword [fs:eax]
mov [fs:eax],esp
lea edx,[ebp-0x10]
mov eax,ebx
call dword 0x82b8
mov eax,[ebp-0x10]
lea edx,[ebp-0xc]
call dword 0xc220
mov eax,[ebp-0xc]
mov edx,0x424570
call dword 0x3e44
jnz 0x23515
mov eax,[ebp-0x4]
mov byte [eax+0x2c],0x0
mov edx,ebx
mov eax,[ebp-0x4]
call dword 0x223a8
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x42453e
mov eax,[ebp-0x4]
movzx edx,byte [ebp-0x5]
mov [eax+0x2c],dl
ret
jmp dword 0x3384
jmp short 0x2352c
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x424560
lea eax,[ebp-0x10]
mov edx,0x2
call dword 0x3a40
ret
jmp dword 0x3384
jmp short 0x2354b
pop ebx
mov esp,ebp
pop ebp
ret
add [eax],al
add bh,bh
db 0xff
db 0xff
inc dword [eax+eax]
add [eax],al
cs ja 0x235e0
o16 add [eax],al
add [eax],al
cmp dword [eax+0x28],byte +0x0
jz 0x23590
cmp byte [eax+0x2c],0x0
jz 0x2358b
call dword 0x2385c
jmp short 0x23590
call dword 0x238e8
ret
lea eax,[eax+0x0]
push ebx
push esi
add esp,byte -0x64
mov esi,edx
mov ebx,eax
cmp dword [ebx+0x28],byte +0x0
jnz 0x235aa
mov eax,ebx
call dword 0x231cc
mov eax,[ebx+0x28]
cmp word [eax+0x18],byte +0x0
jnz 0x235e5
mov edx,[eax+0x8]
test edx,edx
jnz 0x235c0
mov [eax+0x20],esi
jmp short 0x235ff
push esp
push byte +0x64
push edx
call dword 0x5d18
mov eax,[esp+0x4c]
push eax
imul eax,[esp+0x58],byte +0x64
push eax
push esi
call dword 0x5bc0
mov edx,eax
mov eax,ebx
call dword 0x23608
jmp short 0x235ff
mov eax,[0x46da38]
push eax
push dword 0x9ec
push esi
call dword 0x5bc0
mov edx,eax
mov eax,ebx
call dword 0x23608
add esp,byte +0x64
pop esi
pop ebx
ret
lea eax,[eax+0x0]
push ebx
push esi
mov esi,edx
mov ebx,eax
cmp dword [ebx+0x28],byte +0x0
jnz 0x2361b
mov eax,ebx
call dword 0x231cc
mov eax,[ebx+0x28]
xor edx,edx
mov [eax+0x20],edx
cmp esi,[eax+0x10]
jz 0x2363e
mov eax,ebx
call dword 0x23758
mov eax,[ebx+0x28]
mov [eax+0x10],esi
mov edx,ebx
mov eax,ebx
mov ecx,[eax]
call dword [ecx+0x10]
pop esi
pop ebx
ret
lea eax,[eax+0x0]
push ebx
push esi
mov esi,edx
mov ebx,eax
cmp dword [ebx+0x28],byte +0x0
jnz 0x23657
mov eax,ebx
call dword 0x231cc
mov eax,[ebx+0x28]
xor edx,edx
mov [eax+0x1c],edx
cmp esi,[eax+0xc]
jz 0x2367a
mov eax,ebx
call dword 0x23758
mov eax,[ebx+0x28]
mov [eax+0xc],esi
mov edx,ebx
mov eax,ebx
mov ecx,[eax]
call dword [ecx+0x10]
pop esi
pop ebx
ret
lea eax,[eax+0x0]
ret
lea eax,[eax+0x0]
push ebx
push esi
add esp,byte -0x64
mov esi,edx
mov ebx,eax
cmp dword [ebx+0x28],byte +0x0
jnz 0x2369a
mov eax,ebx
call dword 0x231cc
mov eax,[ebx+0x28]
cmp word [eax+0x18],byte +0x0
jnz 0x236d5
mov edx,[eax+0x8]
test edx,edx
jnz 0x236b0
mov [eax+0x1c],esi
jmp short 0x236ef
push esp
push byte +0x64
push edx
call dword 0x5d18
mov eax,[esp+0x48]
push eax
imul eax,[esp+0x54],byte +0x64
push eax
push esi
call dword 0x5bc0
mov edx,eax
mov eax,ebx
call dword 0x23644
jmp short 0x236ef
mov eax,[0x46da38]
push eax
push dword 0x9ec
push esi
call dword 0x5bc0
mov edx,eax
mov eax,ebx
call dword 0x23644
add esp,byte +0x64
pop esi
pop ebx
ret
lea eax,[eax+0x0]
push ebx
push esi
push edi
add esp,byte -0x64
mov ebx,edx
mov eax,ebx
mov edx,[eax]
call dword [edx]
mov esi,eax
mov eax,ebx
call dword 0x164a8
sub esi,eax
cmp esi,byte +0x64
jng 0x23734
mov edx,esp
mov ecx,0x64
mov eax,ebx
mov edi,[eax]
call dword [edi+0xc]
mov cx,0x1
mov edx,0xffffff9c
mov eax,ebx
mov ebx,[eax]
call dword [ebx+0x14]
cmp esi,byte +0x64
jng 0x23749
cmp dword [esp],byte +0x1
jnz 0x23749
cmp dword [esp+0x28],0x464d4520
jz 0x2374d
xor eax,eax
jmp short 0x2374f
mov al,0x1
add esp,byte +0x64
pop edi
pop esi
pop ebx
ret
mov eax,eax
push ebx
push esi
push edi
mov ebx,eax
mov eax,[ebx+0x28]
test eax,eax
jnz 0x2376d
mov eax,ebx
call dword 0x231cc
jmp short 0x237d7
cmp dword [eax+0x4],byte +0x1
jng 0x237d7
mov dl,0x1
mov eax,[0x41f994]
call dword 0x2bc0
mov esi,eax
mov eax,[ebx+0x28]
mov edi,[eax+0x8]
test edi,edi
jz 0x23796
push byte +0x0
push edi
call dword 0x5c50
mov [esi+0x8],eax
mov eax,[ebx+0x28]
mov eax,[eax+0x10]
mov [esi+0x10],eax
mov eax,[ebx+0x28]
mov eax,[eax+0xc]
mov [esi+0xc],eax
mov eax,[ebx+0x28]
movzx eax,word [eax+0x18]
mov [esi+0x18],ax
mov eax,[ebx+0x28]
mov eax,[eax+0x1c]
mov [esi+0x1c],eax
mov eax,[ebx+0x28]
mov eax,[eax+0x20]
mov [esi+0x20],eax
mov eax,[ebx+0x28]
call dword 0x23f50
mov eax,esi
mov [ebx+0x28],eax
call dword 0x23f4c
pop edi
pop esi
pop ebx
ret
nop
push ebx
push esi
push edi
push ecx
mov ebx,edx
mov esi,eax
cmp dword [esi+0x28],byte +0x0
jz 0x23857
xor eax,eax
mov [esp],eax
mov edx,esp
mov ecx,0x4
mov eax,ebx
mov edi,[eax]
call dword [edi+0x10]
mov eax,ebx
call dword 0x164a8
sub eax,byte +0x4
mov [esp],eax
cmp byte [esi+0x2c],0x0
jz 0x2381b
mov edx,ebx
mov eax,esi
call dword 0x2385c
jmp short 0x23824
mov edx,ebx
mov eax,esi
call dword 0x238e8
xor ecx,ecx
mov edx,[esp]
mov eax,ebx
mov esi,[eax]
call dword [esi+0x14]
mov eax,ebx
mov edx,[eax]
call dword [edx]
sub eax,[esp]
mov [esp],eax
mov edx,esp
mov ecx,0x4
mov eax,ebx
mov esi,[eax]
call dword [esi+0x10]
mov cx,0x2
xor edx,edx
mov eax,ebx
mov ebx,[eax]
call dword [ebx+0x14]
pop edx
pop edi
pop esi
pop ebx
ret
push ebp
mov ebp,esp
add esp,byte -0x8
push ebx
push esi
mov esi,edx
mov ebx,eax
mov eax,[ebx+0x28]
test eax,eax
jz 0x238df
push byte +0x0
push byte +0x0
mov eax,[eax+0x8]
push eax
call dword 0x5d10
mov [ebp-0x8],eax
cmp dword [ebp-0x8],byte +0x0
jz 0x238df
mov eax,[ebp-0x8]
call dword 0x1e60
mov [ebp-0x4],eax
xor eax,eax
push ebp
push dword 0x4248d8
push dword [fs:eax]
mov [fs:eax],esp
mov eax,[ebp-0x4]
push eax
mov eax,[ebp-0x8]
push eax
mov eax,[ebx+0x28]
mov eax,[eax+0x8]
push eax
call dword 0x5d10
mov edx,[ebp-0x4]
mov ecx,[ebp-0x8]
mov eax,esi
call dword 0x1670c
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x4248df
mov edx,[ebp-0x8]
mov eax,[ebp-0x4]
call dword 0x1e7c
ret
jmp dword 0x3384
jmp short 0x238cc
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
ret
lea eax,[eax+0x0]
push ebp
mov ebp,esp
add esp,byte -0x24
push ebx
push esi
mov esi,edx
mov ebx,eax
cmp dword [ebx+0x28],byte +0x0
jz dword 0x23a2a
lea eax,[ebp-0x22]
xor ecx,ecx
mov edx,0x16
call dword 0x252c
mov ebx,[ebx+0x28]
mov dword [ebp-0x22],0x9ac6cdd7
movzx eax,word [ebx+0x18]
test ax,ax
jnz 0x23928
mov word [ebp-0x14],0x60
jmp short 0x2392c
mov [ebp-0x14],ax
push dword 0x9ec
movzx eax,word [ebp-0x14]
push eax
mov eax,[ebx+0xc]
push eax
call dword 0x5bc0
mov [ebp-0x18],ax
push dword 0x9ec
movzx eax,word [ebp-0x14]
push eax
mov eax,[ebx+0x10]
push eax
call dword 0x5bc0
mov [ebp-0x16],ax
lea eax,[ebp-0x22]
call dword 0x21c8c
mov [ebp-0xe],ax
push byte +0x0
call dword 0x5fe0
mov [ebp-0xc],eax
xor eax,eax
push ebp
push dword 0x424a23
push dword [fs:eax]
mov [fs:eax],esp
mov eax,[ebp-0xc]
push eax
push byte +0x8
push byte +0x0
push byte +0x0
mov eax,[ebx+0x8]
push eax
call dword 0x5d68
mov [ebp-0x8],eax
mov eax,[ebp-0x8]
call dword 0x1e60
mov [ebp-0x4],eax
xor eax,eax
push ebp
push dword 0x424a03
push dword [fs:eax]
mov [fs:eax],esp
mov eax,[ebp-0xc]
push eax
push byte +0x8
mov eax,[ebp-0x4]
push eax
mov eax,[ebp-0x8]
push eax
mov eax,[ebx+0x8]
push eax
call dword 0x5d68
cmp eax,[ebp-0x8]
jnc 0x239ce
call dword 0x20e8c
lea edx,[ebp-0x22]
mov ecx,0x16
mov eax,esi
call dword 0x1670c
mov edx,[ebp-0x4]
mov ecx,[ebp-0x8]
mov eax,esi
call dword 0x1670c
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x424a0a
mov edx,[ebp-0x8]
mov eax,[ebp-0x4]
call dword 0x1e7c
ret
jmp dword 0x3384
jmp short 0x239f7
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x424a2a
mov eax,[ebp-0xc]
push eax
push byte +0x0
call dword 0x6250
ret
jmp dword 0x3384
jmp short 0x23a17
pop esi
pop ebx
mov esp,ebp
pop ebp
ret
push ebp
mov ebp,esp
add esp,byte -0x64
push ebx
push esi
push edi
mov ebx,eax
push byte +0xe
call dword 0x5fc8
mov edi,eax
test edi,edi
jnz 0x23a52
mov eax,[0x468d40]
call dword 0x20dfc
mov eax,ebx
call dword 0x231cc
mov esi,[ebx+0x28]
push byte +0x0
push edi
call dword 0x5c50
mov [esi+0x8],eax
lea eax,[ebp-0x64]
push eax
push byte +0x64
mov eax,[esi+0x8]
push eax
call dword 0x5d18
mov eax,[ebp-0x44]
sub eax,[ebp-0x4c]
mov [esi+0xc],eax
mov eax,[ebp-0x40]
sub eax,[ebp-0x48]
mov [esi+0x10],eax
mov word [esi+0x18],0x0
mov byte [ebx+0x2c],0x1
mov eax,ebx
mov edx,[eax]
call dword [edx+0x24]
test eax,eax
setnz al
mov [ebx+0x22],al
mov edx,ebx
mov eax,ebx
mov ecx,[eax]
call dword [ecx+0x10]
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret 0x4
nop
push ebp
mov ebp,esp
push ebx
push esi
push edi
mov edi,ecx
mov ebx,eax
mov esi,[ebx+0x28]
test esi,esi
jz 0x23ade
mov word [edx],0xe
mov eax,[ebp+0x8]
xor edx,edx
mov [eax],edx
push byte +0x0
mov eax,[esi+0x8]
push eax
call dword 0x5c50
mov [edi],eax
pop edi
pop esi
pop ebx
pop ebp
ret 0x4
lea eax,[eax+0x0]
push ebx
push esi
push edi
add esp,byte -0x64
mov edi,ecx
mov esi,edx
mov ebx,eax
cmp dword [ebx+0x28],byte +0x0
jnz 0x23b01
mov eax,ebx
call dword 0x231cc
mov eax,[ebx+0x28]
cmp word [eax+0x18],byte +0x0
jnz 0x23b59
mov edx,[eax+0x8]
test edx,edx
jnz 0x23b1a
mov [eax+0x1c],esi
mov [eax+0x20],edi
jmp short 0x23b8d
push esp
push byte +0x64
push edx
call dword 0x5d18
mov eax,[esp+0x48]
push eax
imul eax,[esp+0x54],byte +0x64
push eax
push esi
call dword 0x5bc0
mov edx,eax
mov eax,ebx
call dword 0x23644
mov eax,[esp+0x4c]
push eax
imul eax,[esp+0x58],byte +0x64
push eax
push edi
call dword 0x5bc0
mov edx,eax
mov eax,ebx
call dword 0x23608
jmp short 0x23b8d
mov eax,[0x46da38]
push eax
push dword 0x9ec
push esi
call dword 0x5bc0
mov edx,eax
mov eax,ebx
call dword 0x23644
mov eax,[0x46da38]
push eax
push dword 0x9ec
push edi
call dword 0x5bc0
mov edx,eax
mov eax,ebx
call dword 0x23608
add esp,byte +0x64
pop edi
pop esi
pop ebx
ret
loopne 0x23be1
inc edx
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [esp+ecx*2],cl
inc edx
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add al,bh
dec ebx
inc edx
add [eax+eax+0x0],ah
add ah,dl
hlt
inc ecx
add [eax],bh
ds inc eax
add [esi+edi+0x40],al
add [eax+0x3e],cl
inc eax
add [esi+edi+0x40],cl
add [eax+0x3e],al
inc eax
add [eax-0x5bffbfc5],cl
cmp eax,[eax+0x0]
xchg eax,esp
dec ebp
inc edx
add [eax+0x55],ah
inc ecx
add [eax+0x55],ch
inc ecx
add [esp+edx*2+0x41],bh
add [eax-0x7bffbde4],bl
sbb al,0x42
add [eax+0x4e],ah
inc edx
add [dword 0x74694254],cl
insd
popad
jo 0x23c44
popad
outsb
jna 0x23c66
jnc 0x23b92
ror byte [esp+ecx*2],byte 0x42
add [edi],al
or eax,0x74694254
insd
popad
jo 0x23c59
popad
outsb
jna 0x23c7b
jnc 0x23bfc
dec ebx
inc edx
add [eax-0xb],al
inc ecx
add [eax+eax],al
or [edi+0x72],al
popad
jo 0x23c93
imul esp,[ebx+0x73],dword 0x8b550000
in al,dx
add esp,byte -0xc
mov eax,[0x467dd0]
call dword 0x14244
mov [ebp-0x8],eax
xor eax,eax
push ebp
push dword 0x424cce
push dword [fs:eax]
mov [fs:eax],esp
mov eax,[ebp-0x8]
mov eax,[eax+0x8]
dec eax
cmp eax,byte +0x0
jl 0x23cb6
mov [ebp-0x4],eax
mov edx,[ebp-0x4]
mov eax,[ebp-0x8]
call dword 0x13e7c
mov [ebp-0xc],eax
mov eax,[ebp-0xc]
call dword 0x209c8
test al,al
jz 0x23cad
xor eax,eax
push ebp
push dword 0x424ca6
push dword [fs:eax]
mov [fs:eax],esp
mov eax,[ebp-0xc]
call dword 0x23dc0
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x424cad
mov eax,[ebp-0xc]
call dword 0x20a24
ret
jmp dword 0x3384
jmp short 0x23c9d
dec dword [ebp-0x4]
cmp dword [ebp-0x4],byte -0x1
jnz 0x23c60
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x424cd5
mov eax,[0x467dd0]
call dword 0x142a8
ret
jmp dword 0x3384
jmp short 0x23cc3
mov esp,ebp
pop ebp
ret
lea eax,[eax+0x0]
push ebp
mov ebp,esp
push ecx
push ebx
push esi
mov [ebp-0x4],eax
cmp dword [ebp-0x4],byte +0x0
jz 0x23d53
mov eax,[0x467dd0]
call dword 0x14244
mov esi,eax
xor ecx,ecx
push ebp
push dword 0x424d4c
push dword [fs:ecx]
mov [fs:ecx],esp
mov ebx,[esi+0x8]
dec ebx
cmp ebx,byte +0x0
jl 0x23d34
mov edx,ebx
mov eax,esi
call dword 0x13e7c
mov edx,[eax+0x58]
test edx,edx
jz 0x23d2e
mov edx,[edx+0x28]
mov edx,[edx+0x8]
cmp edx,[ebp-0x4]
jnz 0x23d2e
call dword 0x23dc0
dec ebx
cmp ebx,byte -0x1
jnz 0x23d0e
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x424d53
mov eax,[0x467dd0]
call dword 0x142a8
ret
jmp dword 0x3384
jmp short 0x23d41
pop esi
pop ebx
pop ecx
pop ebp
ret
push ebx
push esi
push edi
test dl,dl
jz 0x23d67
add esp,byte -0x10
call dword 0x2f14
mov esi,ecx
mov ebx,edx
mov edi,eax
xor edx,edx
mov eax,edi
call dword 0x205a4
mov [edi+0x58],esi
mov eax,edi
test bl,bl
jz 0x23d8e
call dword 0x2f6c
pop dword [dword fs:0x0]
add esp,byte +0xc
mov eax,edi
pop edi
pop esi
pop ebx
ret
push ebx
push esi
call dword 0x2fbc
mov ebx,edx
mov esi,eax
mov eax,esi
call dword 0x23dc0
mov edx,ebx
and dl,0xfc
mov eax,esi
call dword 0x20668
test bl,bl
jng 0x23dbd
mov eax,esi
call dword 0x2f64
pop esi
pop ebx
ret
push ebp
mov ebp,esp
push ecx
push ebx
mov [ebp-0x4],eax
mov eax,[ebp-0x4]
cmp dword [eax+0x4],byte +0x0
jz dword 0x23e5b
mov eax,[ebp-0x4]
call dword 0x2086c
xor edx,edx
push ebp
push dword 0x424e54
push dword [fs:edx]
mov [fs:edx],esp
mov eax,[ebp-0x4]
mov eax,[eax+0x5c]
test eax,eax
jz 0x23e02
push eax
mov eax,[ebp-0x4]
mov eax,[eax+0x4]
push eax
call dword 0x5dd0
mov eax,[ebp-0x4]
mov eax,[eax+0x60]
test eax,eax
jz 0x23e1b
push byte -0x1
push eax
mov eax,[ebp-0x4]
mov eax,[eax+0x4]
push eax
call dword 0x5dd8
mov eax,[ebp-0x4]
mov ebx,[eax+0x4]
xor edx,edx
mov eax,[ebp-0x4]
call dword 0x20bb8
push ebx
call dword 0x5cb0
mov edx,[ebp-0x4]
mov eax,[0x467dd0]
call dword 0x14258
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x424e5b
mov eax,[ebp-0x4]
call dword 0x20a24
ret
jmp dword 0x3384
jmp short 0x23e4b
pop ebx
pop ecx
pop ebp
ret
nop
push ebp
mov ebp,esp
push ecx
push ebx
push esi
mov [ebp-0x4],eax
mov eax,[ebp-0x4]
cmp dword [eax+0x58],byte +0x0
jz dword 0x23f46
mov eax,[ebp-0x4]
call dword 0x2086c
xor eax,eax
push ebp
push dword 0x424f3f
push dword [fs:eax]
mov [fs:eax],esp
mov eax,[ebp-0x4]
mov eax,[eax+0x58]
call dword 0x25188
mov eax,[ebp-0x4]
mov eax,[eax+0x58]
mov eax,[eax+0x28]
mov eax,[eax+0x8]
call dword 0x23cdc
mov eax,[ebp-0x4]
mov eax,[eax+0x58]
call dword 0x25288
push byte +0x0
call dword 0x5c70
mov ebx,eax
mov eax,[ebp-0x4]
mov eax,[eax+0x58]
mov eax,[eax+0x28]
mov esi,[eax+0x8]
test esi,esi
jz 0x23edb
push esi
push ebx
call dword 0x5dd0
mov edx,[ebp-0x4]
mov [edx+0x5c],eax
jmp short 0x23ee3
mov eax,[ebp-0x4]
xor edx,edx
mov [eax+0x5c],edx
mov eax,[ebp-0x4]
mov eax,[eax+0x58]
mov eax,[eax+0x28]
mov esi,[eax+0x10]
test esi,esi
jz 0x23f0a
push byte -0x1
push esi
push ebx
call dword 0x5dd8
mov edx,[ebp-0x4]
mov [edx+0x60],eax
push ebx
call dword 0x5da8
jmp short 0x23f12
mov eax,[ebp-0x4]
xor edx,edx
mov [eax+0x60],edx
mov edx,ebx
mov eax,[ebp-0x4]
call dword 0x20bb8
mov edx,[ebp-0x4]
mov eax,[0x467dd0]
call dword 0x141bc
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x424f46
mov eax,[ebp-0x4]
call dword 0x20a24
ret
jmp dword 0x3384
jmp short 0x23f36
pop esi
pop ebx
pop ecx
pop ebp
ret
nop
inc dword [eax+0x4]
ret
push ebx
mov ebx,eax
test ebx,ebx
jz 0x23f6d
dec dword [ebx+0x4]
cmp dword [ebx+0x4],byte +0x0
jnz 0x23f6d
mov eax,ebx
mov edx,[eax]
call dword [edx]
mov eax,ebx
call dword 0x2bf0
pop ebx
ret
nop
push ebx
push esi
call dword 0x2fbc
mov ebx,edx
mov esi,eax
mov eax,[esi+0x14]
test eax,eax
jz 0x23f95
call dword 0x23cdc
mov eax,[esi+0x14]
push eax
call dword 0x5cc0
xor eax,eax
mov [esi+0x14],eax
mov eax,esi
mov edx,[eax]
call dword [edx]
mov eax,[esi+0x64]
test eax,eax
jz 0x23fa8
push eax
call dword 0x5a70
lea eax,[esi+0x6c]
call dword 0xd0e8
mov edx,ebx
and dl,0xfc
mov eax,esi
call dword 0x2be0
test bl,bl
jng 0x23fc7
mov eax,esi
call dword 0x2f64
pop esi
pop ebx
ret
mov eax,eax
push ebx
mov ebx,eax
mov eax,[ebx+0x8]
test eax,eax
jz 0x23fe9
call dword 0x23cdc
mov eax,[ebx+0x8]
cmp eax,[ebx+0x14]
jz 0x23fe9
push eax
call dword 0x5cc0
mov eax,[ebx+0xc]
test eax,eax
jz 0x24003
call dword 0x23cdc
mov eax,[ebx+0xc]
push eax
call dword 0x5cc0
xor eax,eax
mov [ebx+0xc],eax
mov eax,[ebx+0x10]
call dword 0x1ed5c
xor eax,eax
mov [ebx+0x8],eax
xor eax,eax
mov [ebx+0x10],eax
pop ebx
ret
nop
push ebp
mov ebp,esp
add esp,0xfffffbf0
push ebx
push esi
mov [ebp-0x4],edx
mov esi,eax
test esi,esi
jz dword 0x240ce
cmp word [ecx+0x26],byte +0x8
ja dword 0x240ce
lea edx,[ebp-0x410]
mov ecx,0xff
mov eax,[ebp-0x4]
call dword 0x216d0
mov ebx,eax
test ebx,ebx
jz 0x240ce
push byte +0x0
call dword 0x5fe0
mov [ebp-0x8],eax
mov eax,[ebp-0x8]
push eax
call dword 0x5c70
mov [ebp-0xc],eax
push esi
mov eax,[ebp-0xc]
push eax
call dword 0x5dd0
mov [ebp-0x10],eax
xor eax,eax
push ebp
push dword 0x4250c7
push dword [fs:eax]
mov [fs:eax],esp
lea eax,[ebp-0x410]
push eax
push ebx
push byte +0x0
mov eax,[ebp-0xc]
push eax
call dword 0x5df8
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x4250ce
mov eax,[ebp-0x10]
push eax
mov eax,[ebp-0xc]
push eax
call dword 0x5dd0
mov eax,[ebp-0xc]
push eax
call dword 0x5cb0
mov eax,[ebp-0x8]
push eax
push byte +0x0
call dword 0x6250
ret
jmp dword 0x3384
jmp short 0x240a5
pop esi
pop ebx
mov esp,ebp
pop ebp
ret
test byte [eax+0x28],0x3
jz 0x2411c
cmp dword [eax+0x40],byte +0x0
jnz 0x2411c
movzx edx,word [eax+0x26]
cmp dx,byte +0x10
jnz 0x24101
mov dword [eax+0x40],0xf800
mov dword [eax+0x44],0x7e0
mov dword [eax+0x48],0x1f
jmp short 0x2411c
cmp dx,byte +0x20
jnz 0x2411c
mov dword [eax+0x40],0xff0000
mov dword [eax+0x44],0xff00
mov dword [eax+0x48],0xff
ret
lea eax,[eax+0x0]
push ebp
mov ebp,esp
add esp,0xffffff68
push ebx
push esi
push edi
mov [ebp-0xc],ecx
mov [ebp-0x8],edx
mov [ebp-0x4],eax
xor eax,eax
mov [ebp-0x10],eax
mov eax,[ebp+0xc]
cmp dword [eax+0x18],byte +0x0
jz 0x2415d
mov eax,[ebp+0xc]
cmp dword [eax+0x1c],byte +0x0
jz dword 0x24775
mov eax,[ebp+0xc]
cmp dword [eax+0x20],byte +0x0
jz dword 0x24775
mov eax,[ebp+0xc]
cmp dword [eax+0x18],byte +0x0
jnz 0x24180
mov eax,[ebp+0xc]
cmp dword [eax+0x4],byte +0x0
jz dword 0x24775
mov eax,[ebp+0xc]
cmp dword [eax+0x8],byte +0x0
jz dword 0x24775
mov eax,[ebp-0x4]
call dword 0x23cdc
xor eax,eax
mov [ebp-0x70],eax
cmp dword [ebp-0x4],byte +0x0
jz 0x241af
lea eax,[ebp-0x88]
push eax
push byte +0x54
mov eax,[ebp-0x4]
push eax
call dword 0x5d28
cmp eax,byte +0x18
jnl 0x241af
call dword 0x20e14
push byte +0x0
call dword 0x5fe0
call dword 0x20f34
mov [ebp-0x18],eax
mov eax,[ebp-0x18]
push eax
call dword 0x5c70
call dword 0x20f34
mov [ebp-0x1c],eax
xor edx,edx
push ebp
push dword 0x42576e
push dword [fs:edx]
mov [fs:edx],esp
mov eax,[ebp+0xc]
cmp dword [eax+0x18],byte +0x28
jnc 0x24244
mov eax,[ebp+0xc]
movzx eax,word [eax+0x10]
mov edx,[ebp+0xc]
or ax,[edx+0x12]
cmp ax,byte +0x1
jnz 0x24220
push byte +0x0
push byte +0x1
push byte +0x1
mov eax,[ebp+0xc]
mov eax,[eax+0x8]
push eax
mov eax,[ebp+0xc]
mov eax,[eax+0x4]
push eax
call dword 0x5c58
call dword 0x20f34
mov [ebp-0x10],eax
jmp dword 0x2447f
mov eax,[ebp+0xc]
mov eax,[eax+0x8]
push eax
mov eax,[ebp+0xc]
mov eax,[eax+0x4]
push eax
mov eax,[ebp-0x18]
push eax
call dword 0x5c68
call dword 0x20f34
mov [ebp-0x10],eax
jmp dword 0x2447f
mov eax,0x42c
call dword 0x1e60
mov [ebp-0x24],eax
xor edx,edx
push ebp
push dword 0x425478
push dword [fs:edx]
mov [fs:edx],esp
mov eax,[ebp+0xc]
mov dword [eax+0x18],0x28
mov eax,[ebp+0xc]
mov word [eax+0x24],0x1
mov eax,[ebp+0xc]
cmp word [eax+0x26],byte +0x0
jnz 0x2429f
push byte +0xc
mov eax,[ebp-0x18]
push eax
call dword 0x5d08
mov ebx,eax
push byte +0xe
mov eax,[ebp-0x18]
push eax
call dword 0x5d08
imul bx,ax
mov eax,[ebp+0xc]
mov [eax+0x26],bx
mov eax,[ebp+0xc]
mov edx,[ebp-0x24]
lea esi,[eax+0x18]
mov edi,edx
mov ecx,0xa
rep movsd
mov eax,[ebp+0xc]
mov eax,[eax+0x1c]
mov edx,[ebp+0xc]
mov [edx+0x4],eax
mov eax,[ebp+0xc]
mov eax,[eax+0x20]
mov edx,[ebp+0xc]
mov [edx+0x8],eax
mov eax,[ebp+0xc]
cmp word [eax+0x26],byte +0x8
ja dword 0x2439e
mov eax,[ebp+0xc]
cmp word [eax+0x26],byte +0x1
jnz 0x24309
cmp dword [ebp-0x4],byte +0x0
jz 0x242ed
cmp dword [ebp-0x74],byte +0x0
jnz 0x24309
mov eax,[ebp-0x24]
xor edx,edx
mov [eax+0x28],edx
mov eax,[ebp-0x24]
add eax,byte +0x28
add eax,byte +0x4
mov dword [eax],0xffffff
jmp dword 0x243db
cmp dword [ebp-0xc],byte +0x0
jz 0x24327
mov eax,[ebp-0x24]
lea edx,[eax+0x28]
mov ecx,0xff
mov eax,[ebp-0xc]
call dword 0x216d0
jmp dword 0x243db
cmp dword [ebp-0x4],byte +0x0
jz dword 0x243db
mov eax,[ebp-0x4]
push eax
mov eax,[ebp-0x1c]
push eax
call dword 0x5dd0
mov [ebp-0x14],eax
cmp dword [ebp-0x70],byte +0x0
jna 0x2436c
cmp dword [ebp-0x74],byte +0x0
jz 0x2436c
mov eax,[ebp-0x24]
add eax,byte +0x28
push eax
push dword 0x100
push byte +0x0
mov eax,[ebp-0x1c]
push eax
call dword 0x5cf8
mov edx,[ebp+0xc]
mov [edx+0x38],eax
jmp short 0x2438f
push byte +0x0
mov eax,[ebp-0x24]
push eax
push byte +0x0
mov eax,[ebp+0xc]
mov eax,[eax+0x20]
cdq
xor eax,edx
sub eax,edx
push eax
push byte +0x0
mov eax,[ebp-0x4]
push eax
mov eax,[ebp-0x1c]
push eax
call dword 0x5d00
mov eax,[ebp-0x14]
push eax
mov eax,[ebp-0x1c]
push eax
call dword 0x5dd0
jmp short 0x243db
mov eax,[ebp+0xc]
movzx eax,word [eax+0x26]
cmp ax,byte +0x10
jz 0x243b4
mov edx,[ebp+0xc]
cmp ax,byte +0x20
jnz 0x243db
mov eax,[ebp+0xc]
test byte [eax+0x28],0x3
jz 0x243db
mov eax,[ebp+0xc]
call dword 0x240d4
mov eax,[ebp-0x24]
lea edx,[eax+0x28]
mov eax,[ebp+0xc]
add eax,byte +0x40
mov ecx,0xc
call dword 0x2050
push byte +0x0
push byte +0x0
lea eax,[ebp-0x28]
push eax
push byte +0x0
mov eax,[ebp-0x24]
push eax
mov eax,[ebp-0x18]
push eax
call dword 0x5c78
call dword 0x20f34
mov [ebp-0x10],eax
cmp dword [ebp-0x28],byte +0x0
jnz 0x24405
call dword 0x20e8c
cmp dword [ebp-0x4],byte +0x0
jz 0x24462
mov eax,[ebp+0xc]
mov eax,[eax+0x1c]
cmp eax,[ebp-0x84]
jnz 0x24462
mov eax,[ebp+0xc]
mov eax,[eax+0x20]
cmp eax,[ebp-0x80]
jnz 0x24462
mov eax,[ebp+0xc]
cmp word [eax+0x26],byte +0x8
jna 0x24462
push byte +0x0
mov eax,[ebp-0x24]
push eax
mov eax,[ebp-0x28]
push eax
mov eax,[ebp+0xc]
mov eax,[eax+0x20]
cdq
xor eax,edx
sub eax,edx
push eax
push byte +0x0
mov eax,[ebp-0x4]
push eax
mov eax,[ebp-0x1c]
push eax
call dword 0x5d00
call dword 0x3510
call dword 0x3510
jmp dword 0x24775
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x42547f
mov eax,[ebp-0x24]
call dword 0x1e7c
ret
jmp dword 0x3384
jmp short 0x2446f
mov eax,[ebp-0x10]
call dword 0x20f34
mov eax,[ebp-0x10]
push eax
mov eax,[ebp-0x1c]
push eax
call dword 0x5dd0
call dword 0x20f34
mov [ebp-0x14],eax
xor eax,eax
push ebp
push dword 0x42571f
push dword [fs:eax]
mov [fs:eax],esp
xor eax,eax
push ebp
push dword 0x42570e
push dword [fs:eax]
mov [fs:eax],esp
xor eax,eax
mov [ebp-0x34],eax
xor ebx,ebx
cmp dword [ebp-0xc],byte +0x0
jz 0x244e0
push byte +0x0
mov eax,[ebp-0xc]
push eax
mov eax,[ebp-0x1c]
push eax
call dword 0x5dd8
mov [ebp-0x34],eax
mov eax,[ebp-0x1c]
push eax
call dword 0x5da8
xor eax,eax
push ebp
push dword 0x4256ec
push dword [fs:eax]
mov [fs:eax],esp
cmp dword [ebp+0x8],byte +0x0
jz dword 0x245ad
mov eax,[ebp+0x8]
mov eax,[eax+0x14]
call dword 0x20488
push eax
mov eax,[ebp+0xc]
mov eax,[eax+0x8]
push eax
lea eax,[ebp-0x98]
push eax
mov ecx,[ebp+0xc]
mov ecx,[ecx+0x4]
xor edx,edx
xor eax,eax
call dword 0x12a2c
lea eax,[ebp-0x98]
push eax
mov eax,[ebp-0x1c]
push eax
call dword 0x5f88
mov eax,[ebp+0x8]
mov eax,[eax+0xc]
mov eax,[eax+0x18]
call dword 0x1f6cc
push eax
mov eax,[ebp-0x1c]
push eax
call dword 0x5e20
mov eax,[ebp+0x8]
mov eax,[eax+0x14]
call dword 0x2044c
call dword 0x1f6cc
push eax
mov eax,[ebp-0x1c]
push eax
call dword 0x5de0
mov eax,[ebp+0xc]
cmp word [eax+0x26],byte +0x1
jnz 0x245cd
mov eax,[ebp+0xc]
cmp dword [eax+0x14],byte +0x0
jz 0x245cd
mov eax,[ebp+0x8]
mov eax,[eax+0xc]
mov eax,[eax+0x18]
call dword 0x1f6cc
mov [ebp-0x30],eax
mov eax,[ebp+0x8]
mov eax,[eax+0x14]
call dword 0x2044c
call dword 0x1f6cc
mov [ebp-0x2c],eax
lea eax,[ebp-0x30]
push eax
push byte +0x2
push byte +0x0
mov eax,[ebp-0x1c]
push eax
call dword 0x5df8
jmp short 0x245cd
push dword 0xff0062
mov eax,[ebp+0xc]
mov eax,[eax+0x8]
push eax
mov eax,[ebp+0xc]
mov eax,[eax+0x4]
push eax
push byte +0x0
push byte +0x0
mov eax,[ebp-0x1c]
push eax
call dword 0x5d98
cmp dword [ebp-0x4],byte +0x0
jz dword 0x246c9
mov eax,[ebp-0x18]
push eax
call dword 0x5c70
call dword 0x20f34
mov [ebp-0x20],eax
xor eax,eax
push ebp
push dword 0x4256c2
push dword [fs:eax]
mov [fs:eax],esp
mov eax,[ebp-0x4]
push eax
mov eax,[ebp-0x20]
push eax
call dword 0x5dd0
call dword 0x20f34
mov esi,eax
cmp dword [ebp-0x8],byte +0x0
jz 0x2462a
push byte +0x0
mov eax,[ebp-0x8]
push eax
mov eax,[ebp-0x20]
push eax
call dword 0x5dd8
mov ebx,eax
mov eax,[ebp-0x20]
push eax
call dword 0x5da8
cmp dword [ebp+0x8],byte +0x0
jz 0x24662
mov eax,[ebp+0x8]
mov eax,[eax+0xc]
mov eax,[eax+0x18]
call dword 0x1f6cc
push eax
mov eax,[ebp-0x20]
push eax
call dword 0x5e20
mov eax,[ebp+0x8]
mov eax,[eax+0x14]
call dword 0x2044c
call dword 0x1f6cc
push eax
mov eax,[ebp-0x20]
push eax
call dword 0x5de0
push dword 0xcc0020
push byte +0x0
push byte +0x0
mov eax,[ebp-0x20]
push eax
mov eax,[ebp+0xc]
mov eax,[eax+0x8]
push eax
mov eax,[ebp+0xc]
mov eax,[eax+0x4]
push eax
push byte +0x0
push byte +0x0
mov eax,[ebp-0x1c]
push eax
call dword 0x5c48
cmp dword [ebp-0x8],byte +0x0
jz 0x2469c
push byte -0x1
push ebx
mov eax,[ebp-0x20]
push eax
call dword 0x5dd8
push esi
mov eax,[ebp-0x20]
push eax
call dword 0x5dd0
call dword 0x20f34
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x4256c9
mov eax,[ebp-0x20]
push eax
call dword 0x5cb0
ret
jmp dword 0x3384
jmp short 0x246b8
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x4256f3
cmp dword [ebp-0xc],byte +0x0
jz 0x246eb
push byte -0x1
mov eax,[ebp-0x34]
push eax
mov eax,[ebp-0x1c]
push eax
call dword 0x5dd8
ret
jmp dword 0x3384
jmp short 0x246d6
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x425715
mov eax,[ebp-0x14]
push eax
mov eax,[ebp-0x1c]
push eax
call dword 0x5dd0
ret
jmp dword 0x3384
jmp short 0x24700
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
jmp short 0x24737
jmp dword 0x30d0
mov eax,[ebp-0x10]
push eax
call dword 0x5cc0
call dword 0x348c
call dword 0x34e0
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x425775
mov eax,[ebp-0x1c]
push eax
call dword 0x5cb0
mov eax,[ebp-0x18]
push eax
push byte +0x0
call dword 0x6250
cmp dword [ebp-0x10],byte +0x0
jz 0x2476d
mov eax,[ebp+0xc]
push eax
push byte +0x54
mov eax,[ebp-0x10]
push eax
call dword 0x5d28
ret
jmp dword 0x3384
jmp short 0x24744
mov eax,[ebp-0x10]
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret 0x8
lea eax,[eax+0x0]
push ebx
push esi
add esp,0xfffffbf8
mov ebx,eax
xor esi,esi
test ebx,ebx
jz 0x247da
xor eax,eax
mov [esp],eax
push esp
push byte +0x4
push ebx
call dword 0x5d28
test eax,eax
jz 0x247da
cmp dword [esp],byte +0x0
jz 0x247da
mov word [esp+0x4],0x300
movzx eax,word [esp]
mov [esp+0x6],ax
lea eax,[esp+0x8]
push eax
mov eax,[esp+0x4]
push eax
push byte +0x0
push ebx
call dword 0x5d30
lea eax,[esp+0x4]
push eax
call dword 0x5c98
mov esi,eax
mov eax,esi
add esp,0x408
pop esi
pop ebx
ret
lea eax,[eax+0x0]
push ebp
mov ebp,esp
add esp,byte -0x70
push ebx
push esi
push edi
mov edi,ecx
mov esi,edx
mov ebx,eax
xor eax,eax
mov [ebp-0x4],eax
test ebx,ebx
jz dword 0x249ea
lea eax,[ebp-0x70]
push eax
push byte +0x54
push ebx
call dword 0x5d28
test eax,eax
jz dword 0x249ea
mov eax,ebx
call dword 0x23cdc
xor eax,eax
mov [ebp-0x8],eax
xor eax,eax
mov [ebp-0x10],eax
xor eax,eax
push ebp
push dword 0x4259e3
push dword [fs:eax]
mov [fs:eax],esp
push byte +0x0
call dword 0x5fe0
call dword 0x20f34
mov [ebp-0x8],eax
mov eax,[ebp-0x8]
push eax
call dword 0x5c70
call dword 0x20f34
mov [ebp-0x10],eax
push byte +0x0
push byte +0x1
push byte +0x1
mov eax,[ebp-0x68]
push eax
mov eax,[ebp-0x6c]
push eax
call dword 0x5c58
mov [ebp-0x4],eax
cmp dword [ebp-0x4],byte +0x0
jz dword 0x249b5
mov eax,[ebp-0x4]
push eax
mov eax,[ebp-0x10]
push eax
call dword 0x5dd0
mov [ebp-0x1c],eax
cmp edi,0x1fffffff
jnz 0x248ab
push byte +0x42
mov eax,[ebp-0x68]
push eax
mov eax,[ebp-0x6c]
push eax
push byte +0x0
push byte +0x0
mov eax,[ebp-0x10]
push eax
call dword 0x5d98
jmp dword 0x249a2
mov eax,[ebp-0x8]
push eax
call dword 0x5c70
call dword 0x20f34
mov [ebp-0xc],eax
xor eax,eax
push ebp
push dword 0x42599b
push dword [fs:eax]
mov [fs:eax],esp
cmp dword [ebp-0x5c],byte +0x0
jz 0x248ee
mov byte [ebp-0x11],0x1
xor eax,eax
mov [ebp-0x58],eax
lea eax,[ebp-0x70]
push eax
push byte +0x0
mov ecx,esi
mov edx,esi
mov eax,ebx
call dword 0x24120
mov ebx,eax
jmp short 0x248f2
mov byte [ebp-0x11],0x0
push ebx
mov eax,[ebp-0xc]
push eax
call dword 0x5dd0
mov [ebp-0x18],eax
test esi,esi
jz 0x2492d
push byte +0x0
push esi
mov eax,[ebp-0xc]
push eax
call dword 0x5dd8
mov eax,[ebp-0xc]
push eax
call dword 0x5da8
push byte +0x0
push esi
mov eax,[ebp-0x10]
push eax
call dword 0x5dd8
mov eax,[ebp-0x10]
push eax
call dword 0x5da8
push edi
mov eax,[ebp-0xc]
push eax
call dword 0x5de0
mov esi,eax
push dword 0xcc0020
push byte +0x0
push byte +0x0
mov eax,[ebp-0xc]
push eax
mov eax,[ebp-0x68]
push eax
mov eax,[ebp-0x6c]
push eax
push byte +0x0
push byte +0x0
mov eax,[ebp-0x10]
push eax
call dword 0x5c48
push esi
mov eax,[ebp-0xc]
push eax
call dword 0x5de0
cmp dword [ebp-0x18],byte +0x0
jz 0x24978
mov eax,[ebp-0x18]
push eax
mov eax,[ebp-0xc]
push eax
call dword 0x5dd0
cmp byte [ebp-0x11],0x0
jz 0x24984
push ebx
call dword 0x5cc0
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x4259a2
mov eax,[ebp-0xc]
push eax
call dword 0x5cb0
ret
jmp dword 0x3384
jmp short 0x24991
cmp dword [ebp-0x1c],byte +0x0
jz 0x249b5
mov eax,[ebp-0x1c]
push eax
mov eax,[ebp-0x10]
push eax
call dword 0x5dd0
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x4259ea
cmp dword [ebp-0x10],byte +0x0
jz 0x249d1
mov eax,[ebp-0x10]
push eax
call dword 0x5cb0
cmp dword [ebp-0x8],byte +0x0
jz 0x249e2
mov eax,[ebp-0x8]
push eax
push byte +0x0
call dword 0x6250
ret
jmp dword 0x3384
jmp short 0x249c2
mov eax,[ebp-0x4]
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret
push ebx
push esi
push edi
test dl,dl
jz 0x24a03
add esp,byte -0x10
call dword 0x2f14
mov ebx,edx
mov edi,eax
xor edx,edx
mov eax,edi
call dword 0x220d0
mov dword [edi+0x34],0x20000000
mov dl,0x1
mov eax,[0x41fad8]
call dword 0x2bc0
mov esi,eax
mov [edi+0x28],esi
mov eax,esi
call dword 0x23f4c
cmp byte [dword 0x467b40],0x0
jz 0x24a41
mov dl,0x1
mov eax,edi
mov ecx,[eax]
call dword [ecx+0x70]
mov eax,edi
test bl,bl
jz 0x24a56
call dword 0x2f6c
pop dword [dword fs:0x0]
add esp,byte +0xc
mov eax,edi
pop edi
pop esi
pop ebx
ret
push ebx
push esi
call dword 0x2fbc
mov ebx,edx
mov esi,eax
mov eax,esi
call dword 0x25178
mov eax,[esi+0x28]
call dword 0x23f50
mov eax,[esi+0x2c]
call dword 0x2bf0
mov edx,ebx
and dl,0xfc
mov eax,esi
call dword 0x14450
test bl,bl
jng 0x24a95
mov eax,esi
call dword 0x2f64
pop esi
pop ebx
ret
push ebp
mov ebp,esp
add esp,byte -0x58
push ebx
push esi
mov ebx,edx
mov [ebp-0x4],eax
test ebx,ebx
jz 0x24abe
mov eax,ebx
mov edx,[dword 0x41fb38]
call dword 0x2d7c
test al,al
jz dword 0x24b81
mov eax,[ebp-0x4]
call dword 0x25178
push dword 0x46da4c
call dword 0x5ab0
xor eax,eax
push ebp
push dword 0x425b5a
push dword [fs:eax]
mov [fs:eax],esp
test ebx,ebx
jz 0x24b1f
mov esi,ebx
mov eax,[esi+0x28]
call dword 0x23f4c
mov eax,[ebp-0x4]
mov eax,[eax+0x28]
call dword 0x23f50
mov eax,[esi+0x28]
mov edx,[ebp-0x4]
mov [edx+0x28],eax
movzx eax,byte [esi+0x21]
mov edx,[ebp-0x4]
mov [edx+0x21],al
mov eax,[esi+0x34]
mov edx,[ebp-0x4]
mov [edx+0x34],eax
movzx eax,byte [esi+0x38]
mov edx,[ebp-0x4]
mov [edx+0x38],al
jmp short 0x24b42
lea eax,[ebp-0x58]
xor ecx,ecx
mov edx,0x54
call dword 0x252c
lea eax,[ebp-0x58]
push eax
push byte +0x0
push byte +0x0
xor ecx,ecx
xor edx,edx
mov eax,[ebp-0x4]
call dword 0x253e8
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x425b61
push dword 0x46da4c
call dword 0x5ba0
ret
jmp dword 0x3384
jmp short 0x24b4f
mov eax,[ebp-0x4]
mov edx,[eax]
call dword [edx+0x24]
test eax,eax
setnz al
mov edx,[ebp-0x4]
mov [edx+0x22],al
mov edx,[ebp-0x4]
mov eax,[ebp-0x4]
mov ecx,[eax]
call dword [ecx+0x10]
jmp short 0x24b8b
mov edx,ebx
mov eax,[ebp-0x4]
call dword 0x1447c
pop esi
pop ebx
mov esp,ebp
pop ebp
ret
lea eax,[eax+0x0]
push ebp
mov ebp,esp
add esp,byte -0x5c
push ebx
push esi
push edi
mov esi,[ebp+0x8]
lea edi,[ebp-0x5c]
push ecx
mov ecx,0x15
rep movsd
pop ecx
mov esi,ecx
mov edi,edx
mov ebx,eax
mov eax,ebx
call dword 0x25178
xor eax,eax
mov [ebp-0x4],eax
xor eax,eax
mov [ebp-0x8],eax
xor eax,eax
push ebp
push dword 0x425c24
push dword [fs:eax]
mov [fs:eax],esp
cmp esi,[dword 0x46da30]
jnz 0x24bde
mov [ebp-0x8],esi
jmp short 0x24be8
mov eax,esi
call dword 0x24784
mov [ebp-0x8],eax
lea eax,[ebp-0x5c]
push eax
mov eax,[ebx+0x2c]
push eax
mov ecx,[ebp-0x8]
mov edx,esi
mov eax,edi
call dword 0x24120
mov [ebp-0x4],eax
lea eax,[ebp-0x5c]
push eax
mov eax,[ebx+0x28]
movzx eax,byte [eax+0x70]
push eax
push byte +0x0
mov ecx,[ebp-0x8]
mov edx,[ebp-0x4]
mov eax,ebx
call dword 0x253e8
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
jmp short 0x24c4a
jmp dword 0x30d0
mov eax,[ebp-0x8]
call dword 0x1ed5c
cmp dword [ebp-0x4],byte +0x0
jz 0x24c40
mov eax,[ebp-0x4]
push eax
call dword 0x5cc0
call dword 0x348c
call dword 0x34e0
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret 0x4
nop
push ebx
mov ebx,eax
mov eax,ebx
call dword 0x24f48
mov eax,[ebx+0x28]
xor edx,edx
mov [eax+0x50],edx
xor edx,edx
mov [eax+0x54],edx
add eax,byte +0x6c
call dword 0xd0e8
pop ebx
ret
lea eax,[eax+0x0]
mov byte [eax+0x31],0x0
call dword 0x22108
ret
mov eax,eax
push ebx
push esi
push edi
add esp,byte -0x54
mov ebx,eax
mov dl,0x1
mov eax,[0x413200]
call dword 0x2bc0
mov esi,eax
mov edx,esi
mov eax,ebx
mov ecx,[eax]
call dword [ecx+0x58]
mov eax,esi
mov edx,[eax]
call dword [edx]
push edx
push eax
mov eax,esi
call dword 0x1652c
mov eax,[ebx+0x28]
push esi
lea esi,[eax+0x18]
lea edi,[esp+0x4]
mov ecx,0x15
rep movsd
pop esi
xor eax,eax
mov [esp+0x14],eax
mov eax,ebx
call dword 0x25178
lea eax,[ebx+0x2c]
call dword 0xd0e8
push esp
mov eax,[ebx+0x28]
movzx eax,byte [eax+0x70]
push eax
push esi
xor ecx,ecx
xor edx,edx
mov eax,ebx
call dword 0x253e8
add esp,byte +0x54
pop edi
pop esi
pop ebx
ret
mov eax,eax
push ebp
mov ebp,esp
add esp,byte -0x1c
push ebx
push esi
push edi
mov edi,ecx
mov [ebp-0x4],edx
mov ebx,eax
mov esi,[ebx+0x28]
movzx edx,byte [dword 0x425f44]
mov eax,[ebp-0x4]
call dword 0x20c0c
mov eax,ebx
call dword 0x25288
xor eax,eax
mov [ebp-0x8],eax
mov byte [ebp-0x9],0x0
mov eax,[esi+0x10]
test eax,eax
jz 0x24d53
push byte -0x1
push eax
mov eax,[ebp-0x4]
mov eax,[eax+0x4]
push eax
call dword 0x5dd8
mov [ebp-0x8],eax
mov eax,[ebp-0x4]
mov eax,[eax+0x4]
push eax
call dword 0x5da8
mov byte [ebp-0x9],0x1
push byte +0xc
mov eax,[ebp-0x4]
mov eax,[eax+0x4]
push eax
call dword 0x5d08
push eax
push byte +0xe
mov eax,[ebp-0x4]
mov eax,[eax+0x4]
push eax
call dword 0x5d08
mov edx,eax
pop eax
imul edx
cmp eax,byte +0x8
jg 0x24d89
movzx edx,word [esi+0x2a]
movzx ecx,word [esi+0x28]
imul edx,ecx
cmp eax,edx
jl 0x24d8d
xor eax,eax
jmp short 0x24d8f
mov al,0x1
test al,al
jz 0x24dcb
lea eax,[ebp-0x11]
push eax
mov eax,[ebp-0x4]
mov eax,[eax+0x4]
push eax
call dword 0x5cd8
push byte +0x4
mov eax,[ebp-0x4]
mov eax,[eax+0x4]
push eax
call dword 0x5e18
lea eax,[ebp-0x11]
push eax
mov eax,[ebp-0xd]
push eax
mov eax,[ebp-0x11]
push eax
mov eax,[ebp-0x4]
mov eax,[eax+0x4]
push eax
call dword 0x5df0
jmp short 0x24de6
mov eax,ebx
call dword 0x25084
test al,al
jnz 0x24de6
push byte +0x3
mov eax,[ebp-0x4]
call dword 0x20b30
push eax
call dword 0x5e18
xor eax,eax
push ebp
push dword 0x425f36
push dword [fs:eax]
mov [fs:eax],esp
mov eax,ebx
mov edx,[eax]
call dword [edx+0x28]
test al,al
jz 0x24e06
mov eax,ebx
call dword 0x25228
mov eax,ebx
call dword 0x24fc8
movzx edx,byte [dword 0x425f44]
call dword 0x20c0c
mov eax,ebx
mov edx,[eax]
call dword [edx+0x28]
test al,al
jz dword 0x24ed2
xor eax,eax
mov [ebp-0x1c],eax
xor eax,eax
mov [ebp-0x18],eax
xor eax,eax
push ebp
push dword 0x425ecb
push dword [fs:eax]
mov [fs:eax],esp
push byte +0x0
call dword 0x5c70
call dword 0x20f34
mov [ebp-0x18],eax
mov eax,[esi+0xc]
push eax
mov eax,[ebp-0x18]
push eax
call dword 0x5dd0
mov [ebp-0x1c],eax
mov eax,[edi+0x8]
sub eax,[edi]
push eax
mov eax,[edi+0xc]
sub eax,[edi+0x4]
push eax
mov eax,ebx
call dword 0x24fc8
mov eax,[eax+0x4]
push eax
push byte +0x0
push byte +0x0
mov eax,[esi+0x1c]
push eax
mov eax,[esi+0x20]
push eax
mov eax,[ebp-0x18]
push eax
push byte +0x0
push byte +0x0
mov ecx,[edi+0x4]
mov edx,[edi]
mov eax,[ebp-0x4]
mov eax,[eax+0x4]
call dword 0x210e4
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x425f10
cmp dword [ebp-0x1c],byte +0x0
jz 0x24ebb
mov eax,[ebp-0x1c]
push eax
mov eax,[ebp-0x18]
push eax
call dword 0x5dd0
cmp dword [ebp-0x18],byte +0x0
jz 0x24eca
mov eax,[ebp-0x18]
push eax
call dword 0x5cb0
ret
jmp dword 0x3384
jmp short 0x24ea8
mov eax,[ebp-0x4]
mov eax,[eax+0x20]
push eax
mov eax,[esi+0x20]
push eax
mov eax,[esi+0x1c]
push eax
push byte +0x0
push byte +0x0
mov eax,ebx
call dword 0x24fc8
mov eax,[eax+0x4]
push eax
mov eax,[edi+0xc]
sub eax,[edi+0x4]
push eax
mov eax,[edi+0x8]
sub eax,[edi]
push eax
mov eax,[edi+0x4]
push eax
mov eax,[edi]
push eax
mov eax,[ebp-0x4]
mov eax,[eax+0x4]
push eax
call dword 0x5e40
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x425f3d
cmp byte [ebp-0x9],0x0
jz 0x24f35
push byte -0x1
mov eax,[ebp-0x8]
push eax
mov eax,[ebp-0x4]
mov eax,[eax+0x4]
push eax
call dword 0x5dd8
ret
jmp dword 0x3384
jmp short 0x24f1d
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret
sldt [eax]
add [ebx+0x56],dl
mov esi,eax
mov ebx,[esi+0x28]
cmp dword [ebx+0x4],byte +0x1
jng 0x24f7c
mov eax,esi
call dword 0x25188
cmp byte [ebx+0x71],0x0
jz 0x24f66
xor eax,eax
jmp short 0x24f69
mov eax,[ebx+0x10]
lea edx,[ebx+0x18]
push edx
mov ecx,eax
mov edx,[ebx+0x8]
mov eax,esi
call dword 0x24b94
pop esi
pop ebx
ret
mov eax,[ebx+0x8]
test eax,eax
jz 0x24fa8
cmp eax,[ebx+0x14]
jz 0x24fa8
mov esi,[ebx+0x14]
test esi,esi
jz 0x24f9e
push esi
call dword 0x5cc0
test eax,eax
jnz 0x24f9e
call dword 0x20e8c
xor eax,eax
mov [ebx+0x14],eax
xor eax,eax
mov [ebx+0x2c],eax
pop esi
pop ebx
ret
nop
mov eax,[eax+0x28]
cmp dword [eax+0x8],byte +0x0
jnz 0x24fc1
cmp dword [eax+0x14],byte +0x0
jnz 0x24fc1
cmp dword [eax+0x6c],byte +0x0
jz 0x24fc4
xor eax,eax
ret
mov al,0x1
ret
nop
push ebx
push esi
mov ebx,eax
cmp dword [ebx+0x2c],byte +0x0
jnz 0x25007
mov eax,ebx
call dword 0x25188
cmp dword [ebx+0x2c],byte +0x0
jnz 0x25007
mov ecx,ebx
mov dl,0x1
mov eax,[0x424b94]
call dword 0x23d58
mov esi,eax
mov [ebx+0x2c],esi
mov [esi+0x2c],ebx
mov eax,[ebx]
mov eax,[eax+0x10]
mov [esi+0x28],eax
mov [esi+0x34],ebx
mov dword [esi+0x30],0x425c54
mov eax,[ebx+0x2c]
pop esi
pop ebx
ret
lea eax,[eax+0x0]
push ebx
mov ebx,eax
mov eax,ebx
call dword 0x25178
mov eax,ebx
call dword 0x25188
mov edx,ebx
mov eax,ebx
call dword 0x24c54
mov eax,[ebx+0x28]
mov eax,[eax+0x8]
pop ebx
ret
mov eax,eax
mov eax,[eax+0x28]
mov edx,[eax+0x8]
test edx,edx
jz 0x25043
cmp edx,[eax+0x14]
jnz 0x2505a
cmp dword [eax+0x14],byte +0x0
jnz 0x25057
cmp dword [eax+0x30],byte +0x0
jnz 0x25053
mov al,0x1
jmp short 0x2505c
xor eax,eax
jmp short 0x2505c
xor eax,eax
ret
mov al,0x1
ret
lea eax,[eax+0x0]
mov ecx,eax
mov eax,[ecx+0x28]
mov eax,[eax+0x20]
cdq
xor eax,edx
sub eax,edx
ret
mov eax,eax
push ebx
mov ebx,eax
mov eax,ebx
call dword 0x25228
mov eax,[ebx+0x28]
mov eax,[eax+0xc]
pop ebx
ret
mov eax,eax
mov eax,[eax+0x28]
add eax,byte +0x18
cmp word [eax+0x10],byte +0x1
jnz 0x25098
cmp word [eax+0x12],byte +0x1
jz 0x2509b
xor eax,eax
ret
mov al,0x1
ret
mov eax,eax
push ebx
mov ebx,eax
mov eax,ebx
call dword 0x25288
mov eax,[ebx+0x28]
mov eax,[eax+0x10]
pop ebx
ret
mov eax,eax
push ebx
mov ebx,eax
mov eax,[ebx+0x34]
cmp eax,0x20000000
jnz 0x250ed
mov eax,ebx
call dword 0x25084
test al,al
jz 0x250d3
mov eax,0xffffff
jmp short 0x250f2
mov eax,ebx
mov edx,[eax]
call dword [edx+0x20]
dec eax
push eax
mov eax,ebx
call dword 0x24fc8
xor edx,edx
pop ecx
call dword 0x20abc
jmp short 0x250f2
call dword 0x1f6cc
or eax,0x2000000
pop ebx
ret
lea eax,[eax+0x0]
mov eax,[eax+0x28]
mov eax,[eax+0x1c]
ret
nop
push ebx
push esi
mov ebx,[eax+0x28]
cmp dword [ebx+0x8],byte +0x0
jz 0x25174
cmp dword [ebx+0x14],byte +0x0
jnz 0x25174
call dword 0x25288
cmp dword [ebx+0x30],byte +0x0
jnz 0x2515c
lea eax,[ebx+0x18]
push eax
push byte +0x54
mov eax,[ebx+0x8]
push eax
call dword 0x5d28
lea eax,[ebx+0x18]
mov edx,eax
add eax,byte +0x18
mov dword [eax],0x28
mov ecx,[edx+0x4]
mov [eax+0x4],ecx
mov ecx,[edx+0x8]
mov [eax+0x8],ecx
mov word [eax+0xc],0x1
movzx ecx,word [edx+0x10]
imul cx,[edx+0x12]
mov [eax+0xe],cx
lea eax,[ebx+0x18]
push eax
push byte +0x0
mov esi,[ebx+0x10]
mov ecx,esi
mov edx,esi
mov eax,[ebx+0x8]
call dword 0x24120
mov [ebx+0x14],eax
pop esi
pop ebx
ret
nop
mov edx,[eax+0x2c]
test edx,edx
jz 0x25186
mov eax,edx
call dword 0x23dc0
ret
nop
push ebp
mov ebp,esp
add esp,byte -0x10
mov [ebp-0x4],eax
mov eax,[ebp-0x4]
mov eax,[eax+0x28]
cmp dword [eax+0x8],byte +0x0
jnz 0x25212
cmp dword [eax+0x14],byte +0x0
jnz 0x25212
cmp dword [eax+0x6c],byte +0x0
jz 0x25212
push byte +0x0
push byte +0x0
mov eax,[eax+0x6c]
call dword 0x164c8
mov eax,[ebp-0x4]
mov edx,[eax+0x10]
mov [ebp-0x10],edx
mov edx,[eax+0x14]
mov [ebp-0xc],edx
xor eax,eax
push ebp
push dword 0x42620b
push dword [fs:eax]
mov [fs:eax],esp
mov eax,[ebp-0x4]
xor edx,edx
mov [eax+0x10],edx
mov [eax+0x14],edx
mov eax,[ebp-0x4]
mov eax,[eax+0x28]
mov edx,[eax+0x6c]
mov eax,[ebp-0x4]
mov ecx,[eax]
call dword [ecx+0x54]
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x426212
mov eax,[ebp-0x4]
mov edx,[ebp-0x10]
mov [eax+0x10],edx
mov edx,[ebp-0xc]
mov [eax+0x14],edx
ret
jmp dword 0x3384
jmp short 0x251fb
mov eax,[ebp-0x4]
mov eax,[eax+0x28]
cmp dword [eax+0x8],byte +0x0
jnz 0x25224
mov edx,[eax+0x14]
mov [eax+0x8],edx
mov esp,ebp
pop ebp
ret
push ebx
push esi
mov ebx,eax
cmp byte [ebx+0x32],0x0
jz 0x25238
cmp byte [ebx+0x31],0x0
jnz 0x25285
mov esi,[ebx+0x28]
mov eax,[esi+0xc]
test eax,eax
jz 0x25255
call dword 0x23cdc
mov eax,[esi+0xc]
push eax
call dword 0x5cc0
xor eax,eax
mov [esi+0xc],eax
mov eax,ebx
call dword 0x25178
mov eax,ebx
call dword 0x25188
mov esi,[ebx+0x28]
mov eax,ebx
call dword 0x250b4
mov ecx,eax
mov edx,[esi+0x10]
mov eax,[esi+0x8]
call dword 0x247e8
mov [esi+0xc],eax
mov byte [ebx+0x32],0x1
mov byte [ebx+0x31],0x1
pop esi
pop ebx
ret
push ebx
push esi
push edi
push ebp
mov edi,eax
mov ebp,[edi+0x28]
cmp byte [edi+0x30],0x0
jnz dword 0x2533b
cmp dword [ebp+0x10],byte +0x0
jnz dword 0x2533b
cmp dword [ebp+0x14],byte +0x0
jz dword 0x2533b
mov eax,[ebp+0x14]
cmp eax,[ebp+0x8]
jnz 0x252bc
call dword 0x23cdc
movzx ecx,word [ebp+0x3e]
mov eax,0x1
shl eax,cl
mov ecx,eax
xor edx,edx
mov eax,[ebp+0x14]
call dword 0x2162c
mov esi,eax
mov [ebp+0x10],esi
test esi,esi
jnz 0x2533b
push byte +0x0
call dword 0x5fe0
call dword 0x20f34
mov esi,eax
cmp byte [ebp+0x71],0x0
jnz 0x25317
push byte +0xc
push esi
call dword 0x5d08
mov ebx,eax
push byte +0xe
push esi
call dword 0x5d08
imul ebx,eax
movzx eax,word [ebp+0x2a]
movzx edx,word [ebp+0x28]
imul edx
cmp ebx,eax
jl 0x25317
xor ebx,ebx
jmp short 0x25319
mov bl,0x1
mov [ebp+0x71],bl
test bl,bl
jz 0x25329
push esi
call dword 0x5c90
mov [ebp+0x10],eax
push esi
push byte +0x0
call dword 0x6250
cmp dword [ebp+0x10],byte +0x0
jnz 0x2533b
mov byte [edi+0x30],0x1
pop ebp
pop edi
pop esi
pop ebx
ret
push ebp
mov ebp,esp
add esp,byte -0x54
push ebx
push esi
mov ebx,ecx
mov esi,eax
cmp dx,byte +0x2
jnz 0x25356
test ebx,ebx
jnz 0x25360
mov eax,[0x468d40]
call dword 0x20dfc
mov eax,esi
call dword 0x25178
lea eax,[ebp-0x54]
xor ecx,ecx
mov edx,0x54
call dword 0x252c
lea eax,[ebp-0x54]
push eax
push byte +0x54
push ebx
call dword 0x5d28
cmp dword [ebp-0x40],byte +0x0
jnz 0x2538d
xor eax,eax
mov [ebp-0x3c],eax
lea eax,[ebp-0x54]
push eax
mov ecx,[ebp+0x8]
mov edx,ebx
mov eax,esi
call dword 0x24b94
mov eax,[esi+0x28]
mov byte [eax+0x70],0x0
mov eax,esi
mov edx,[eax]
call dword [edx+0x24]
test eax,eax
setnz al
mov [esi+0x22],al
mov edx,esi
mov eax,esi
mov ecx,[eax]
call dword [ecx+0x10]
pop esi
pop ebx
mov esp,ebp
pop ebp
ret 0x4
push ebx
push esi
mov ebx,edx
mov esi,eax
mov eax,ebx
mov edx,[eax]
call dword [edx]
push eax
mov eax,ebx
call dword 0x164a8
pop ecx
sub ecx,eax
mov edx,ebx
mov eax,esi
call dword 0x25a80
pop esi
pop ebx
ret
nop
push ebp
mov ebp,esp
add esp,byte -0x8
push ebx
push esi
push edi
mov esi,ecx
mov ebx,edx
mov [ebp-0x4],eax
mov dl,0x1
mov eax,[0x41fad8]
call dword 0x2bc0
mov [ebp-0x8],eax
xor eax,eax
push ebp
push dword 0x426470
push dword [fs:eax]
mov [fs:eax],esp
mov eax,[ebp-0x8]
mov [eax+0x8],ebx
mov eax,[ebp-0x8]
mov [eax+0x10],esi
mov eax,[ebp+0x10]
mov edx,[ebp-0x8]
mov esi,eax
lea edi,[edx+0x18]
mov ecx,0x15
rep movsd
mov eax,[ebp-0x8]
movzx edx,byte [ebp+0xc]
mov [eax+0x70],dl
mov eax,[ebp-0x8]
cmp dword [eax+0x2c],byte +0x0
jz 0x25452
mov eax,[ebp-0x8]
mov eax,[eax+0x8]
mov edx,[ebp-0x8]
mov [edx+0x14],eax
mov eax,[ebp+0x8]
mov edx,[dword 0x413200]
call dword 0x2da0
mov edx,[ebp-0x8]
mov [edx+0x6c],eax
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
jmp short 0x25487
jmp dword 0x30d0
mov eax,[ebp-0x8]
call dword 0x2bf0
call dword 0x348c
call dword 0x34e0
push dword 0x46da4c
call dword 0x5ab0
xor edx,edx
push ebp
push dword 0x4264d0
push dword [fs:edx]
mov [fs:edx],esp
mov eax,[ebp-0x4]
mov eax,[eax+0x28]
call dword 0x23f50
mov edx,[ebp-0x4]
mov eax,[ebp-0x8]
mov [edx+0x28],eax
call dword 0x23f4c
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x4264d7
push dword 0x46da4c
call dword 0x5ba0
ret
jmp dword 0x3384
jmp short 0x254c5
mov eax,[ebp-0x4]
mov byte [eax+0x32],0x0
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
ret 0xc
nop
push ebx
push esi
push edi
push ecx
mov esi,edx
mov ebx,eax
mov edx,esp
mov ecx,0x4
mov eax,esi
mov edi,[eax]
call dword [edi+0xc]
mov ecx,[esp]
mov edx,esi
mov eax,ebx
call dword 0x25a80
pop edx
pop edi
pop esi
pop ebx
ret
nop
push ebp
mov ebp,esp
add esp,0xffffff54
push ebx
push esi
push edi
mov esi,ecx
mov [ebp-0x8],edx
mov [ebp-0x4],eax
xor eax,eax
mov [ebp-0x30],eax
xor eax,eax
mov [ebp-0x28],eax
xor eax,eax
mov [ebp-0x38],eax
lea edx,[ebp-0x20]
mov ecx,0x4
mov eax,[ebp-0x8]
mov ebx,[eax]
call dword [ebx+0xc]
cmp dword [ebp-0x20],byte +0xc
setz [ebp-0x21]
cmp byte [ebp-0x21],0x0
jz 0x25558
mov dword [ebp-0x20],0x28
mov eax,[ebp-0x20]
add eax,byte +0xc
add eax,0x400
call dword 0x1e60
mov [ebp-0x18],eax
mov eax,[ebp-0x18]
mov [ebp-0x3c],eax
xor edx,edx
push ebp
push dword 0x426a31
push dword [fs:edx]
mov [fs:edx],esp
xor edx,edx
push ebp
push dword 0x426a04
push dword [fs:edx]
mov [fs:edx],esp
cmp byte [ebp-0x21],0x0
jz 0x255df
lea edx,[ebp-0x48]
add edx,byte +0x4
mov ecx,0x8
mov eax,[ebp-0x8]
mov ebx,[eax]
call dword [ebx+0xc]
mov ebx,[ebp-0x3c]
mov eax,ebx
xor ecx,ecx
mov edx,0x28
call dword 0x252c
mov eax,ebx
movzx edx,word [ebp-0x44]
mov [eax+0x4],edx
movzx edx,word [ebp-0x42]
mov [eax+0x8],edx
movzx edx,word [ebp-0x40]
mov [eax+0xc],dx
movzx edx,word [ebp-0x3e]
mov [eax+0xe],dx
sub esi,byte +0xc
jmp dword 0x256ac
mov ecx,[ebp-0x20]
sub ecx,byte +0x4
mov edx,[ebp-0x18]
add edx,byte +0x4
mov eax,[ebp-0x8]
mov ebx,[eax]
call dword [ebx+0xc]
sub esi,[ebp-0x20]
mov eax,[ebp-0x3c]
mov eax,[eax+0x10]
cmp eax,byte +0x3
jz dword 0x256ac
test eax,eax
jz dword 0x256ac
mov dl,0x1
mov eax,[0x413200]
call dword 0x2bc0
mov [ebp-0x38],eax
cmp dword [ebp+0x8],byte +0x0
jnz 0x25651
lea eax,[ebp-0xaa]
xor ecx,ecx
mov edx,0xe
call dword 0x252c
mov word [ebp-0xaa],0x4d42

mov eax,[ebp-0x20]
add eax,esi
mov [ebp-0xa8],eax
lea eax,[ebp-0xaa]
mov [ebp+0x8],eax
mov edx,[ebp+0x8]
mov ecx,0xe
mov eax,[ebp-0x38]
mov ebx,[eax]
call dword [ebx+0x10]
lea edx,[ebp-0x20]
mov ecx,0x4
mov eax,[ebp-0x38]
mov ebx,[eax]
call dword [ebx+0x10]
mov ecx,[ebp-0x20]
sub ecx,byte +0x4
mov edx,[ebp-0x18]
add edx,byte +0x4
mov eax,[ebp-0x38]
mov ebx,[eax]
call dword [ebx+0x10]
mov eax,esi
xor edx,edx
push edx
push eax
mov edx,[ebp-0x8]
mov eax,[ebp-0x38]
call dword 0x16744
mov edx,esi
neg edx
mov cx,0x2
mov eax,[ebp-0x38]
mov ebx,[eax]
call dword [ebx+0x14]
mov eax,[ebp-0x38]
mov [ebp-0x8],eax
mov ebx,[ebp-0x3c]
mov eax,[ebp-0x20]
mov [ebx],eax
mov eax,[ebp-0x18]
add eax,[ebp-0x20]
mov [ebp-0x1c],eax
cmp word [ebx+0xc],byte +0x1
jz 0x256c9
call dword 0x20e14
cmp dword [ebp-0x20],byte +0x28
jnz 0x256fc
movzx eax,word [ebx+0xe]
cmp ax,byte +0x10
jz 0x256df
cmp ax,byte +0x20
jnz 0x256fc
cmp dword [ebx+0x10],byte +0x3
jnz 0x256fc
mov edx,[ebp-0x1c]
mov ecx,0xc
mov eax,[ebp-0x8]
call dword 0x166d4
add dword [ebp-0x1c],byte +0xc
sub esi,byte +0xc
cmp dword [ebx+0x20],byte +0x0
jnz 0x2570e
movzx eax,word [ebx+0xe]
call dword 0x210a4
mov [ebx+0x20],eax
mov ecx,[ebx+0x20]
movzx edi,byte [ebp-0x21]
movzx eax,byte [edi+0x467dd4]
imul ecx,eax
mov edx,[ebp-0x1c]
mov eax,[ebp-0x8]
call dword 0x166d4
mov eax,[ebx+0x20]
movzx edx,byte [edi+0x467dd4]
imul edx
sub esi,eax
cmp dword [ebx+0x14],byte +0x0
jz 0x25744
cmp dword [ebx+0x10],byte +0x0
jnz 0x25765
movzx edx,word [ebx+0xe]
mov eax,[ebx+0x4]
mov ecx,0x20
call dword 0x210c4
mov ecx,eax
mov eax,[ebx+0x8]
cdq
xor eax,edx
sub eax,edx
imul ecx,eax
mov [ebx+0x14],ecx
mov eax,[ebx+0x14]
cmp esi,eax
jna 0x2576e
mov esi,eax
cmp byte [ebp-0x21],0x0
jz 0x2577c
mov eax,[ebp-0x1c]
call dword 0x21370
push byte +0x0
call dword 0x5fe0
call dword 0x20f34
mov [ebp-0xc],eax
xor edx,edx
push ebp
push dword 0x42697f
push dword [fs:edx]
mov [fs:edx],esp
mov eax,[ebp-0x3c]
mov eax,[eax+0x10]
test eax,eax
jz 0x257a8
cmp eax,byte +0x3
jnz 0x257b5
cmp byte [dword 0x467b40],0x0
jz dword 0x258ee
xor eax,eax
mov [ebp-0x10],eax
mov eax,esi
call dword 0x1e60
mov [ebp-0x14],eax
xor edx,edx
push ebp
push dword 0x4268e7
push dword [fs:edx]
mov [fs:edx],esp
mov edx,[ebp-0x14]
mov ecx,esi
mov eax,[ebp-0x8]
call dword 0x166d4
mov eax,[ebp-0xc]
push eax
call dword 0x5c70
call dword 0x20f34
mov [ebp-0x10],eax
push byte +0x1
push byte +0x1
mov eax,[ebp-0xc]
push eax
call dword 0x5c68
push eax
mov eax,[ebp-0x10]
push eax
call dword 0x5dd0
mov [ebp-0x2c],eax
xor eax,eax
mov [ebp-0x34],eax
mov eax,[ebp-0x3c]
mov eax,[eax+0x20]
test eax,eax
jna 0x25843
mov ecx,eax
mov edx,[ebp-0x1c]
xor eax,eax
call dword 0x2162c
mov [ebp-0x30],eax
push byte +0x0
mov eax,[ebp-0x30]
push eax
mov eax,[ebp-0x10]
push eax
call dword 0x5dd8
mov [ebp-0x34],eax
mov eax,[ebp-0x10]
push eax
call dword 0x5da8
xor edx,edx
push ebp
push dword 0x4268bb
push dword [fs:edx]
mov [fs:edx],esp
push byte +0x0
mov eax,[ebp-0x18]
push eax
mov edx,[ebp-0x14]
push edx
push byte +0x4
push eax
mov eax,[ebp-0x10]
push eax
call dword 0x5c80
mov [ebp-0x28],eax
cmp dword [ebp-0x28],byte +0x0
jnz 0x25885
call dword 0x5b28
test eax,eax
jnz 0x25880
call dword 0x20e14
jmp short 0x25885
call dword 0xcb58
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x4268c2
cmp dword [ebp-0x34],byte +0x0
jz 0x258a7
push byte -0x1
mov eax,[ebp-0x34]
push eax
mov eax,[ebp-0x10]
push eax
call dword 0x5dd8
mov eax,[ebp-0x2c]
push eax
mov eax,[ebp-0x10]
push eax
call dword 0x5dd0
push eax
call dword 0x5cc0
ret
jmp dword 0x3384
jmp short 0x25892
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x426966
cmp dword [ebp-0x10],byte +0x0
jz 0x258de
mov eax,[ebp-0x10]
push eax
call dword 0x5cb0
mov eax,[ebp-0x14]
call dword 0x1e7c
ret
jmp dword 0x3384
jmp short 0x258cf
push byte +0x0
push byte +0x0
lea eax,[ebp-0x14]
push eax
push byte +0x0
mov eax,[ebp-0x18]
push eax
mov eax,[ebp-0xc]
push eax
call dword 0x5c78
mov [ebp-0x28],eax
cmp dword [ebp-0x28],byte +0x0
jz 0x25914
cmp dword [ebp-0x14],byte +0x0
jnz 0x25929
call dword 0x5b28
test eax,eax
jnz 0x25924
call dword 0x20e14
jmp short 0x25929
call dword 0xcb58
xor eax,eax
push ebp
push dword 0x42694e
push dword [fs:eax]
mov [fs:eax],esp
mov edx,[ebp-0x14]
mov ecx,esi
mov eax,[ebp-0x8]
call dword 0x166d4
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
jmp short 0x25966
jmp dword 0x30d0
mov eax,[ebp-0x28]
push eax
call dword 0x5cc0
call dword 0x348c
call dword 0x34e0
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x426986
mov eax,[ebp-0xc]
push eax
push byte +0x0
call dword 0x6250
ret
jmp dword 0x3384
jmp short 0x25973
mov eax,[ebp-0x3c]
cmp word [eax+0xe],byte +0x8
jna 0x259b2
mov eax,[ebp-0x3c]
cmp dword [eax+0x20],byte +0x0
jna 0x259b2
cmp dword [ebp-0x30],byte +0x0
jnz 0x259b2
mov eax,[ebp-0x3c]
mov ecx,[eax+0x20]
mov edx,[ebp-0x1c]
xor eax,eax
call dword 0x2162c
mov [ebp-0x30],eax
lea eax,[ebp-0x9c]
xor ecx,ecx
mov edx,0x54
call dword 0x252c
lea eax,[ebp-0x9c]
push eax
push byte +0x54
mov eax,[ebp-0x28]
push eax
call dword 0x5d28
mov eax,[ebp-0x3c]
mov eax,[eax+0x18]
mov [ebp-0x6c],eax
mov eax,[ebp-0x3c]
mov eax,[eax+0x1c]
mov [ebp-0x68],eax
mov eax,[ebp-0x3c]
mov eax,[eax+0x20]
mov [ebp-0x64],eax
mov eax,[ebp-0x3c]
mov eax,[eax+0x24]
mov [ebp-0x60],eax
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
jmp short 0x25a1b
jmp dword 0x30d0
mov eax,[ebp-0x38]
call dword 0x2bf0
call dword 0x348c
call dword 0x34e0
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x426a38
mov eax,[ebp-0x18]
call dword 0x1e7c
ret
jmp dword 0x3384
jmp short 0x25a28
lea eax,[ebp-0x9c]
push eax
movzx eax,byte [ebp-0x21]
push eax
mov eax,[ebp-0x38]
push eax
mov ecx,[ebp-0x30]
mov edx,[ebp-0x28]
mov eax,[ebp-0x4]
call dword 0x253e8
mov eax,[ebp-0x4]
mov edx,[eax]
call dword [edx+0x24]
test eax,eax
setnz al
mov edx,[ebp-0x4]
mov [edx+0x22],al
mov edx,[ebp-0x4]
mov eax,[ebp-0x4]
mov ecx,[eax]
call dword [ecx+0x10]
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret 0x4
lea eax,[eax+0x0]
push ebx
push esi
push edi
add esp,byte -0x64
mov esi,ecx
mov edi,edx
mov ebx,eax
mov eax,ebx
call dword 0x25178
test esi,esi
jnz 0x25abd
lea eax,[esp+0xe]
xor ecx,ecx
mov edx,0x54
call dword 0x252c
lea eax,[esp+0xe]
push eax
push byte +0x0
push byte +0x0
xor ecx,ecx
xor edx,edx
mov eax,ebx
call dword 0x253e8
jmp short 0x25ae7
mov edx,esp
mov ecx,0xe
mov eax,edi
call dword 0x166d4
cmp word [esp],0x4d42
jz 0x25ad8
call dword 0x20e14
push esp
mov ecx,esi
sub ecx,byte +0xe
mov edx,edi
mov eax,ebx
call dword 0x25510
add esp,byte +0x64
pop edi
pop esi
pop ebx
ret
mov eax,eax
push ebp
mov ebp,esp
add esp,byte -0x58
push ebx
push esi
push edi
mov edi,edx
mov ebx,eax
mov esi,[ebx+0x28]
cmp edi,[esi+0x8]
jz dword 0x25bab
mov eax,ebx
call dword 0x25178
lea eax,[ebp-0x58]
xor ecx,ecx
mov edx,0x54
call dword 0x252c
test edi,edi
jz 0x25b2f
lea eax,[ebp-0x58]
push eax
push byte +0x54
push edi
call dword 0x5d28
cmp dword [esi+0x4],byte +0x1
jnz 0x25b42
mov eax,[esi+0x10]
mov [ebp-0x4],eax
xor eax,eax
mov [esi+0x10],eax
jmp short 0x25b5f
mov eax,[esi+0x10]
cmp eax,[dword 0x46da30]
jnz 0x25b57
mov eax,[0x46da30]
mov [ebp-0x4],eax
jmp short 0x25b5f
call dword 0x24784
mov [ebp-0x4],eax
xor eax,eax
push ebp
push dword 0x426b8b
push dword [fs:eax]
mov [fs:eax],esp
lea eax,[ebp-0x58]
push eax
push byte +0x0
push byte +0x0
mov ecx,[ebp-0x4]
mov edx,edi
mov eax,ebx
call dword 0x253e8
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
jmp short 0x25ba2
jmp dword 0x30d0
mov eax,[ebp-0x4]
call dword 0x1ed5c
call dword 0x348c
call dword 0x34e0
mov edx,ebx
mov eax,ebx
mov ecx,[eax]
call dword [ecx+0x10]
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret
mov eax,eax
push ebx
push esi
push edi
push ebp
add esp,byte -0x54
mov ebx,edx
mov esi,eax
mov eax,esi
call dword 0x25034
cmp bl,al
jz dword 0x25ce6
mov edi,[esi+0x28]
cmp dword [edi+0x8],byte +0x0
jnz 0x25bf8
cmp dword [edi+0x14],byte +0x0
jnz 0x25bf8
cmp bl,0x1
jnz 0x25bec
xor eax,eax
mov [edi+0x30],eax
jmp dword 0x25ce6
mov dword [edi+0x30],0x28
jmp dword 0x25ce6
test bl,bl
jnz 0x25c65
mov eax,[edi+0x14]
test eax,eax
jz 0x25c0c
cmp eax,[edi+0x8]
jz dword 0x25ce6
mov eax,esi
call dword 0x25178
mov eax,esi
call dword 0x25288
mov eax,esi
call dword 0x25104
cmp dword [edi+0x4],byte +0x1
jnz 0x25c52
mov eax,[edi+0x14]
xor edx,edx
mov [edi+0x14],edx
mov ebp,[edi+0x10]
xor edx,edx
mov [edi+0x10],edx
lea edx,[edi+0x18]
push edx
movzx edx,byte [edi+0x70]
push edx
push byte +0x0
mov ecx,ebp
mov edx,eax
mov eax,esi
call dword 0x253e8
jmp dword 0x25cdd
lea eax,[edi+0x18]
push eax
mov ecx,[edi+0x10]
mov edx,[edi+0x14]
mov eax,esi
call dword 0x24b94
jmp short 0x25cdd
mov eax,[edi+0x8]
test eax,eax
jz 0x25c71
cmp eax,[edi+0x14]
jnz 0x25ce6
mov eax,esi
call dword 0x25178
mov eax,esi
call dword 0x25288
push esi
push edi
lea esi,[edi+0x18]
lea edi,[esp+0x8]
mov ecx,0x15
rep movsd
pop edi
pop esi
xor eax,eax
mov [esp+0x18],eax
cmp dword [edi+0x4],byte +0x1
setz bl
test bl,bl
jz 0x25ca7
mov ebp,[edi+0x10]
jmp short 0x25cb1
mov eax,[edi+0x10]
call dword 0x24784
mov ebp,eax
push esp
push byte +0x0
mov ecx,ebp
mov edx,[edi+0x10]
mov eax,[edi+0x14]
call dword 0x24120
test bl,bl
jz 0x25cca
mov [edi+0x8],eax
jmp short 0x25cdd
push esp
movzx edx,byte [edi+0x70]
push edx
push byte +0x0
mov ecx,ebp
mov edx,eax
mov eax,esi
call dword 0x253e8
mov edx,esi
mov eax,esi
mov ecx,[eax]
call dword [ecx+0x10]
add esp,byte +0x54
pop ebp
pop edi
pop esi
pop ebx
ret
mov eax,eax
push ebx
push esi
push edi
mov edi,edx
mov esi,eax
mov eax,[esi+0x28]
mov edx,[eax+0x1c]
mov ecx,edi
mov eax,esi
mov ebx,[eax]
call dword [ebx+0x64]
pop edi
pop esi
pop ebx
ret
mov eax,eax
push ebx
push esi
push edi
add esp,byte -0x54
mov ebx,edx
mov edi,eax
mov esi,[edi+0x28]
lea eax,[esi+0x30]
cmp word [eax+0xc],byte +0x1
jnz 0x25d2a
cmp word [eax+0xe],byte +0x1
jz 0x25d2e
xor eax,eax
jmp short 0x25d30
mov al,0x1
cmp bl,al
jz 0x25d81
mov eax,edi
call dword 0x25188
push esi
push edi
add esi,byte +0x18
lea edi,[esp+0x8]
mov ecx,0x15
rep movsd
pop edi
pop esi
xor eax,eax
mov [esp+0x18],eax
movzx eax,bl
mov [esp+0x24],ax
mov [esp+0x26],ax
mov [esp+0x10],ax
mov [esp+0x12],ax
push esp
mov ecx,[esi+0x10]
mov edx,[esi+0x8]
mov eax,edi
call dword 0x24b94
mov edx,edi
mov eax,edi
mov ecx,[eax]
call dword [ecx+0x10]
add esp,byte +0x54
pop edi
pop esi
pop ebx
ret
push ebp
mov ebp,esp
add esp,byte -0x58
push ebx
push esi
push edi
mov edi,edx
mov ebx,eax
mov eax,[ebx+0x28]
cmp edi,[eax+0x10]
jz dword 0x25e55
mov esi,eax
test edi,edi
jnz 0x25dbc
cmp dword [esi+0x4],byte +0x1
jnz 0x25dbc
mov eax,[esi+0x10]
call dword 0x1ed5c
xor eax,eax
mov [esi+0x10],eax
jmp short 0x25e38
mov eax,ebx
call dword 0x25178
mov eax,ebx
call dword 0x25188
push esi
push edi
add esi,byte +0x18
lea edi,[ebp-0x58]
mov ecx,0x15
rep movsd
pop edi
pop esi
lea eax,[ebp-0x58]
push eax
push byte +0x0
mov edx,[esi+0x10]
mov eax,[esi+0x8]
mov ecx,edi
call dword 0x24120
mov [ebp-0x4],eax
xor eax,eax
push ebp
push dword 0x426e20
push dword [fs:eax]
mov [fs:eax],esp
lea eax,[ebp-0x58]
push eax
movzx eax,byte [esi+0x70]
push eax
push byte +0x0
mov ecx,edi
mov edx,[ebp-0x4]
mov eax,ebx
call dword 0x253e8
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
jmp short 0x25e38
jmp dword 0x30d0
mov eax,[ebp-0x4]
push eax
call dword 0x5cc0
call dword 0x348c
call dword 0x34e0
mov eax,[ebx+0x28]
lea ecx,[eax+0x18]
mov eax,[eax+0x14]
mov edx,edi
call dword 0x24018
mov byte [ebx+0x22],0x1
mov edx,ebx
mov eax,ebx
mov ecx,[eax]
call dword [ecx+0x10]
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret
push ebx
push esi
push edi
mov edi,edx
mov esi,eax
mov eax,[esi+0x28]
mov ecx,[eax+0x20]
mov edx,edi
mov eax,esi
mov ebx,[eax]
call dword [ebx+0x64]
pop edi
pop esi
pop ebx
ret
mov eax,eax
mov cl,0x1
call dword 0x25e80
ret
push ebx
push esi
push edi
push ebp
add esp,0xfffffbd4
mov ebx,ecx
mov edi,edx
mov esi,eax
lea eax,[esp+0x10]
xor ecx,ecx
mov edx,0xe
call dword 0x252c
mov word [esp+0x10],0x4d42
mov eax,[esi+0x28]
mov ebp,[eax+0x6c]
test ebp,ebp
jz 0x25ee9
mov eax,ebp
mov edx,[eax]
call dword [edx]
mov [esp],eax
test bl,bl
jz 0x25ecc
mov edx,esp
mov ecx,0x4
mov eax,edi
call dword 0x1670c
mov eax,[esi+0x28]
mov ebx,[eax+0x6c]
mov eax,ebx
mov edx,[eax]
call dword [edx]
mov ecx,eax
mov edx,[ebx+0x4]
mov eax,edi
mov ebx,[eax]
call dword [ebx+0x10]
jmp dword 0x26127
mov eax,esi
call dword 0x25104
mov ebp,[esi+0x28]
xor eax,eax
mov [esp],eax
mov eax,[ebp+0x14]
test eax,eax
jz dword 0x2601d
mov edx,[ebp+0x50]
push edx
lea ecx,[esp+0x4]
lea edx,[esp+0xc]
call dword 0x21d88
cmp byte [ebp+0x70],0x0
jz 0x25f3c
mov dword [esp+0x8],0xc
movzx eax,word [ebp+0x3e]
cmp ax,byte +0x8
ja 0x25f3c
mov ecx,eax
mov eax,0x1
shl eax,cl
lea eax,[eax+eax*2]
add [esp+0x8],eax
mov eax,[esp+0x8]
add eax,byte +0xe
add [esp],eax
lea eax,[esp+0x10]
xor ecx,ecx
mov edx,0xe
call dword 0x252c
mov word [esp+0x10],0x4d42
mov eax,esi
call dword 0x24fc8
movzx edx,byte [dword 0x427134]
call dword 0x20c0c
mov eax,[ebp+0x14]
push eax
mov eax,[esi+0x2c]
mov eax,[eax+0x4]
push eax
call dword 0x5dd0
call dword 0x20f34
mov [esp+0xc],eax
lea eax,[esp+0x2a]
push eax
push dword 0x100
push byte +0x0
mov eax,[esi+0x2c]
mov eax,[eax+0x4]
push eax
call dword 0x5cf8
mov [esp+0x4],eax
mov eax,[esp+0xc]
push eax
mov eax,[esi+0x2c]
mov eax,[eax+0x4]
push eax
call dword 0x5dd0
mov eax,[ebp+0x50]
test eax,eax
jna 0x25fc7
cmp eax,[esp+0x4]
jnc 0x25fc7
mov [esp+0x4],eax
cmp byte [ebp+0x70],0x0
jnz 0x2600b
cmp dword [esp+0x4],byte +0x0
jnz 0x2600b
cmp dword [ebp+0x10],byte +0x0
jz 0x2600b
cmp byte [ebp+0x71],0x0
jnz 0x2600b
lea edx,[esp+0x2a]
mov ecx,0xff
mov eax,[ebp+0x10]
call dword 0x216d0
mov [esp+0x4],eax
cmp word [ebp+0x3e],byte +0x8
jna 0x2600b
mov eax,[esp+0x4]
add eax,eax
add eax,eax
add [esp],eax
add [esp+0x8],eax
mov eax,[esp]
mov [esp+0x12],eax
mov eax,[esp+0x8]
add eax,byte +0xe
mov [esp+0x1a],eax
test bl,bl
jz 0x2602f
mov edx,esp
mov ecx,0x4
mov eax,edi
call dword 0x1670c
cmp dword [esp],byte +0x0
jz dword 0x26127
lea eax,[ebp+0x18]
call dword 0x240d4
cmp dword [esp+0x4],byte +0x0
jz 0x2606f
mov eax,[ebp+0x50]
test eax,eax
jz 0x26055
cmp eax,[esp+0x4]
jz 0x2605c
mov eax,[esp+0x4]
mov [ebp+0x50],eax
cmp byte [ebp+0x70],0x0
jz 0x2606f
lea edx,[esp+0x4]
lea eax,[esp+0x2a]
call dword 0x213ac
cmp byte [ebp+0x70],0x0
jz 0x260c4
lea eax,[ebp+0x30]
mov dword [esp+0x1e],0xc
movzx edx,word [eax+0x4]
mov [esp+0x22],dx
movzx edx,word [eax+0x8]
mov [esp+0x24],dx
mov word [esp+0x26],0x1
movzx eax,word [eax+0xe]
mov [esp+0x28],ax
lea edx,[esp+0x10]
mov ecx,0xe
mov eax,edi
call dword 0x1670c
lea edx,[esp+0x1e]
mov ecx,0xc
mov eax,edi
call dword 0x1670c
jmp short 0x260ff
lea edx,[esp+0x10]
mov ecx,0xe
mov eax,edi
call dword 0x1670c
lea edx,[ebp+0x30]
mov ecx,0x28
mov eax,edi
call dword 0x1670c
cmp word [ebp+0x3e],byte +0x8
jna 0x260ff
test byte [ebp+0x40],0x3
jz 0x260ff
lea edx,[ebp+0x58]
mov ecx,0xc
mov eax,edi
call dword 0x1670c
movzx eax,byte [ebp+0x70]
movzx ecx,byte [eax+0x467dd8]
imul ecx,[esp+0x4]
lea edx,[esp+0x2a]
mov eax,edi
call dword 0x1670c
mov edx,[ebp+0x2c]
mov ecx,[ebp+0x44]
mov eax,edi
call dword 0x1670c
add esp,0x42c
pop ebp
pop edi
pop esi
pop ebx
ret
add [eax],al
add [eax],eax
add [eax],al
xor ecx,ecx
call dword 0x25e80
ret
push ebp
mov ebp,esp
add esp,byte -0x58
push ebx
push esi
push edi
mov [ebp-0x4],ecx
mov ebx,eax
mov word [edx],0x2
mov eax,ebx
call dword 0x25188
mov esi,[ebx+0x28]
push esi
add esi,byte +0x18
lea edi,[ebp-0x58]
mov ecx,0x15
rep movsd
pop esi
xor eax,eax
mov [ebp-0x40],eax
xor eax,eax
mov [ebp-0x44],eax
lea eax,[ebp-0x58]
push eax
mov eax,[ebx+0x2c]
push eax
mov edi,[esi+0x10]
mov ecx,edi
mov edx,edi
mov eax,[esi+0x8]
call dword 0x24120
mov edx,[ebp-0x4]
mov [edx],eax
xor eax,eax
push ebp
push dword 0x4271ba
push dword [fs:eax]
mov [fs:eax],esp
mov eax,[ebx+0x28]
mov eax,[eax+0x10]
call dword 0x24784
mov edx,[ebp+0x8]
mov [edx],eax
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
jmp short 0x261d4
jmp dword 0x30d0
mov eax,[ebp-0x4]
mov eax,[eax]
push eax
call dword 0x5cc0
call dword 0x348c
call dword 0x34e0
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret 0x4
lea eax,[eax+0x0]
push ebx
push esi
push edi
push ebp
add esp,byte -0x54
mov ebp,ecx
mov edi,edx
mov esi,eax
mov ebx,[esi+0x28]
cmp edi,[ebx+0x1c]
jnz 0x261fa
cmp ebp,[ebx+0x20]
jz 0x2623a
mov eax,esi
call dword 0x25188
push esi
push edi
lea esi,[ebx+0x18]
lea edi,[esp+0x8]
mov ecx,0x15
rep movsd
pop edi
pop esi
mov [esp+0x4],edi
mov [esp+0x8],ebp
mov [esp+0x1c],edi
mov [esp+0x20],ebp
push esp
mov ecx,[ebx+0x10]
mov edx,[ebx+0x8]
mov eax,esi
call dword 0x24b94
mov edx,esi
mov eax,esi
mov ecx,[eax]
call dword [ecx+0x10]
add esp,byte +0x54
pop ebp
pop edi
pop esi
pop ebx
ret
mov eax,eax
push ebx
push esi
call dword 0x2fbc
mov ebx,edx
mov esi,eax
mov eax,[esi+0xc]
call dword 0x2bf0
mov edx,ebx
and dl,0xfc
mov eax,esi
call dword 0x2be0
test bl,bl
jng 0x2626e
mov eax,esi
call dword 0x2f64
pop esi
pop ebx
ret
lea eax,[eax+0x0]
push ebx
mov ebx,eax
mov eax,[ebx+0x8]
test eax,eax
jz 0x26284
push eax
call dword 0x5ef0
xor eax,eax
mov [ebx+0x8],eax
pop ebx
ret
nop
push ebx
push esi
push edi
test dl,dl
jz 0x2629b
add esp,byte -0x10
call dword 0x2f14
mov ebx,edx
mov edi,eax
xor edx,edx
mov eax,edi
call dword 0x220d0
mov byte [edi+0x21],0x1
mov dl,0x1
mov eax,[0x41fc24]
call dword 0x2bc0
mov esi,eax
mov [edi+0x28],esi
mov eax,esi
call dword 0x23f4c
mov eax,edi
test bl,bl
jz 0x262d9
call dword 0x2f6c
pop dword [dword fs:0x0]
add esp,byte +0xc
mov eax,edi
pop edi
pop esi
pop ebx
ret
nop
push ebx
push esi
call dword 0x2fbc
mov ebx,edx
mov esi,eax
mov eax,[esi+0x28]
call dword 0x23f50
mov edx,ebx
and dl,0xfc
mov eax,esi
call dword 0x14450
test bl,bl
jng 0x2630a
mov eax,esi
call dword 0x2f64
pop esi
pop ebx
ret
lea eax,[eax+0x0]
push ebx
push esi
push edi
mov ebx,edx
mov esi,eax
test ebx,ebx
jz 0x2632c
mov eax,ebx
mov edx,[dword 0x41fc80]
call dword 0x2d7c
test al,al
jz 0x26360
test ebx,ebx
jz 0x2634a
mov edi,ebx
mov eax,[edi+0x28]
call dword 0x23f4c
mov eax,[esi+0x28]
call dword 0x23f50
mov eax,[edi+0x28]
mov [esi+0x28],eax
jmp short 0x26355
xor ecx,ecx
xor edx,edx
mov eax,esi
call dword 0x265ec
mov edx,esi
mov eax,esi
mov ecx,[eax]
call dword [ecx+0x10]
jmp short 0x26369
mov edx,ebx
mov eax,esi
call dword 0x1447c
pop edi
pop esi
pop ebx
ret
lea eax,[eax+0x0]
push ebx
push esi
push edi
mov edi,ecx
mov esi,edx
mov ebx,eax
movzx edx,byte [dword 0x4273b0]
mov eax,esi
call dword 0x20c0c
push byte +0x3
push byte +0x0
push byte +0x0
push byte +0x0
push byte +0x0
mov eax,ebx
call dword 0x263cc
push eax
mov eax,[edi+0x4]
push eax
mov eax,[edi]
push eax
mov eax,[esi+0x4]
push eax
call dword 0x5f30
pop edi
pop esi
pop ebx
ret
add [eax],al
add [ecx],al
add [eax],al
add [ebx+0x78832840],cl
or [eax],al
jnz 0x263c3
cmp dword [eax+0xc],byte +0x0
jz 0x263c6
xor eax,eax
ret
mov al,0x1
ret
lea eax,[eax+0x0]
push ebx
mov ebx,eax
mov eax,ebx
call dword 0x26408
mov eax,[ebx+0x28]
mov eax,[eax+0x8]
pop ebx
ret
mov eax,eax
mov eax,[eax+0x28]
mov eax,[eax+0x14]
test eax,eax
jnz 0x263f1
push byte +0xc
call dword 0x60d8
ret
mov eax,eax
mov eax,[eax+0x28]
mov eax,[eax+0x10]
test eax,eax
jnz 0x26405
push byte +0xb
call dword 0x60d8
ret
mov eax,eax
push ebx
push esi
add esp,byte -0xc
mov esi,eax
mov ebx,[esi+0x28]
cmp dword [ebx+0x8],byte +0x0
jnz 0x2647a
mov eax,[ebx+0xc]
test eax,eax
jz 0x2647a
push byte +0x0
push byte +0x0
call dword 0x164c8
mov edx,esp
mov ecx,0x6
mov eax,[ebx+0xc]
call dword 0x166d4
movzx eax,word [esp+0x2]
sub ax,byte +0x1
jc 0x26446
jz 0x26451
jmp short 0x2646e
mov eax,[0x46da48]
mov [esp+0x8],eax
jmp short 0x26473
push byte +0x6
lea eax,[esi+0x2c]
push eax
lea eax,[ebx+0x10]
push eax
movzx ecx,word [esp+0x10]
lea edx,[esp+0x14]
mov eax,[ebx+0xc]
call dword 0x21980
jmp short 0x26473
call dword 0x20e20
mov eax,[esp+0x8]
mov [ebx+0x8],eax
add esp,byte +0xc
pop esi
pop ebx
ret
push ebp
mov ebp,esp
add esp,byte -0xc
push ebx
push esi
push edi
mov esi,eax
mov ebx,[esi+0x28]
cmp dword [ebx+0xc],byte +0x0
jnz dword 0x2652a
cmp dword [ebx+0x8],byte +0x0
jnz 0x264a3
call dword 0x20e20
mov dl,0x1
mov eax,[0x413200]
call dword 0x2bc0
mov [ebp-0x4],eax
xor eax,eax
push ebp
push dword 0x42750d
push dword [fs:eax]
mov [fs:eax],esp
mov eax,esi
call dword 0x263cc
cmp eax,[dword 0x46da48]
jnz 0x264f0
lea eax,[ebp-0xa]
xor ecx,ecx
mov edx,0x6
call dword 0x252c
lea edx,[ebp-0xa]
mov ecx,0x6
mov eax,[ebp-0x4]
call dword 0x1670c
jmp short 0x26503
mov eax,esi
call dword 0x263cc
mov edx,eax
xor ecx,ecx
mov eax,[ebp-0x4]
call dword 0x21ed0
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
jmp short 0x26524
jmp dword 0x30d0
mov eax,[ebp-0x4]
call dword 0x2bf0
call dword 0x348c
call dword 0x34e0
mov eax,[ebp-0x4]
mov [ebx+0xc],eax
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret
lea eax,[eax+0x0]
push ebp
mov ebp,esp
add esp,byte -0xc
push ebx
push esi
push edi
mov esi,edx
mov ebx,eax
mov dl,0x1
mov eax,[0x413200]
call dword 0x2bc0
mov [ebp-0x4],eax
xor eax,eax
push ebp
push dword 0x4275c2
push dword [fs:eax]
mov [fs:eax],esp
mov eax,esi
mov edx,[eax]
call dword [edx]
push eax
mov eax,esi
call dword 0x164a8
pop edx
sub edx,eax
mov eax,[ebp-0x4]
mov ecx,[eax]
call dword [ecx+0x4]
mov eax,[ebp-0x4]
mov edx,[eax]
call dword [edx]
mov ecx,eax
mov eax,[ebp-0x4]
mov edx,[eax+0x4]
mov eax,esi
call dword 0x166d4
lea edx,[ebp-0xa]
mov ecx,0x6
mov eax,[ebp-0x4]
call dword 0x166d4
movzx eax,word [ebp-0x8]
sub ax,byte +0x2
jc 0x265ac
call dword 0x20e20
mov ecx,[ebp-0x4]
xor edx,edx
mov eax,ebx
call dword 0x265ec
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
jmp short 0x265d9
jmp dword 0x30d0
mov eax,[ebp-0x4]
call dword 0x2bf0
call dword 0x348c
call dword 0x34e0
mov edx,ebx
mov eax,ebx
mov ecx,[eax]
call dword [ecx+0x10]
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret
lea eax,[eax+0x0]
push ebp
mov ebp,esp
push ecx
push ebx
push esi
push edi
mov edi,ecx
mov esi,edx
mov ebx,eax
mov dl,0x1
mov eax,[0x41fc24]
call dword 0x2bc0
mov [ebp-0x4],eax
xor eax,eax
push ebp
push dword 0x42762c
push dword [fs:eax]
mov [fs:eax],esp
mov eax,[ebp-0x4]
mov [eax+0x8],esi
mov eax,[ebp-0x4]
mov [eax+0xc],edi
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
jmp short 0x26643
jmp dword 0x30d0
mov eax,[ebp-0x4]
call dword 0x2bf0
call dword 0x348c
call dword 0x34e0
mov eax,[ebp-0x4]
call dword 0x23f4c
mov eax,[ebx+0x28]
call dword 0x23f50
mov eax,[ebp-0x4]
mov [ebx+0x28],eax
pop edi
pop esi
pop ebx
pop ecx
pop ebp
ret
nop
push ebp
mov ebp,esp
add esp,byte -0x30
push ebx
mov ebx,edx
mov [ebp-0x4],eax
xor ecx,ecx
mov edx,ebx
mov eax,[ebp-0x4]
call dword 0x265ec
test ebx,ebx
jz 0x266e4
lea eax,[ebp-0x18]
push eax
push ebx
call dword 0x6010
test eax,eax
jz 0x266e4
xor edx,edx
push ebp
push dword 0x4276dd
push dword [fs:edx]
mov [fs:edx],esp
lea eax,[ebp-0x30]
push eax
push byte +0x18
mov eax,[ebp-0x8]
push eax
call dword 0x5d28
test eax,eax
jz 0x266bd
mov eax,[ebp-0x4]
mov eax,[eax+0x28]
mov edx,[ebp-0x2c]
mov [eax+0x10],edx
mov edx,[ebp-0x2c]
mov [eax+0x14],edx
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x4276e4
mov eax,[ebp-0xc]
push eax
call dword 0x5cc0
mov eax,[ebp-0x8]
push eax
call dword 0x5cc0
ret
jmp dword 0x3384
jmp short 0x266ca
mov edx,[ebp-0x4]
mov eax,[ebp-0x4]
mov ecx,[eax]
call dword [ecx+0x10]
pop ebx
mov esp,ebp
pop ebp
ret
mov ecx,[eax+0x28]
cmp dword [ecx+0x8],byte +0x0
jnz 0x26701
mov [eax+0x30],edx
ret
mov eax,[0x468ba0]
call dword 0x20de4
ret
push ebx
mov ebx,[eax+0x28]
cmp dword [ebx+0x8],byte +0x0
jnz 0x2671e
mov [eax+0x2c],edx
mov [eax+0x30],ecx
pop ebx
ret
mov eax,[0x468ba0]
call dword 0x20de4
pop ebx
ret
mov eax,eax
ret
lea eax,[eax+0x0]
mov ecx,[eax+0x28]
cmp dword [ecx+0x8],byte +0x0
jnz 0x2673d
mov [eax+0x2c],edx
ret
mov eax,[0x468ba0]
call dword 0x20de4
ret
push ebx
push esi
mov esi,edx
mov ebx,eax
mov eax,ebx
call dword 0x26480
mov eax,[ebx+0x28]
mov ebx,[eax+0xc]
mov eax,ebx
mov edx,[eax]
call dword [edx]
mov ecx,eax
mov edx,[ebx+0x4]
mov eax,esi
call dword 0x1670c
pop esi
pop ebx
ret
push ebp
mov ebp,esp
mov eax,[0x468ad8]
call dword 0x20de4
pop ebp
ret 0x4
lea eax,[eax+0x0]
push ebp
mov ebp,esp
mov eax,[0x468ad8]
call dword 0x20de4
pop ebp
ret 0x4
lea eax,[eax+0x0]
push ebp
mov ebp,esp
push ecx
push byte +0x0
call dword 0x5fe0
mov [ebp-0x4],eax
xor eax,eax
push ebp
push dword 0x4277dd
push dword [fs:eax]
mov [fs:eax],esp
push byte +0x5a
mov eax,[ebp-0x4]
push eax
call dword 0x5d08
mov [0x46da38],eax
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x4277e4
mov eax,[ebp-0x4]
push eax
push byte +0x0
call dword 0x6250
ret
jmp dword 0x3384
jmp short 0x267d1
mov eax,0x467ddc
mov edx,0xf
call dword 0x2147c
mov [0x46da30],eax
pop ecx
pop ebp
ret
nop
push ebx
push esi
add esp,byte -0x38
mov bl,0x1
push byte +0x0
call dword 0x5fe0
mov esi,eax
test esi,esi
jz 0x26838
mov eax,[0x46da44]
push eax
push esi
call dword 0x5dd0
test eax,eax
jz 0x26830
push esp
push esi
call dword 0x5d60
test eax,eax
jz 0x26830
movzx ebx,byte [esp+0x34]
push esi
push byte +0x0
call dword 0x6250
mov eax,ebx
add esp,byte +0x38
pop esi
pop ebx
ret
push ebp
mov ebp,esp
add esp,0xfffffef8
xor eax,eax
mov [ebp-0x4],eax
xor eax,eax
push ebp
push dword 0x427943
push dword [fs:eax]
mov [fs:eax],esp
push byte +0x48
mov eax,[0x46da38]
push eax
push byte +0x8
call dword 0x5bc0
neg eax
mov [0x467b14],eax
mov eax,[0x468ea4]
cmp dword [eax],byte +0x1
jnz 0x26892
call dword 0x267fc
cmp al,0x80
jnz 0x26892
lea eax,[ebp-0x4]
mov edx,0x427958
call dword 0x3ab4
mov dl,0x1
mov eax,[0x41e7c8]
call dword 0x1d898
mov [ebp-0x8],eax
xor eax,eax
push ebp
push dword 0x4278fb
push dword [fs:eax]
mov [fs:eax],esp
mov edx,0x80000002
mov eax,[ebp-0x8]
call dword 0x1d938
mov edx,0x427968
mov eax,[ebp-0x8]
call dword 0x1d99c
test al,al
jz 0x268e5
lea ecx,[ebp-0x4]
mov edx,0x4279b0
mov eax,[ebp-0x8]
call dword 0x1dbe4
mov eax,[ebp-0x8]
call dword 0x1d908
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x427902
mov eax,[ebp-0x8]
call dword 0x2bf0
ret
jmp dword 0x3384
jmp short 0x268f2
cmp dword [ebp-0x4],byte +0x0
jz 0x2692d
lea eax,[ebp-0x108]
mov edx,[ebp-0x4]
mov ecx,0xff
call dword 0x3cb8
lea edx,[ebp-0x108]
mov eax,0x467b1f
mov cl,0x1f
call dword 0x241c
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x42794a
lea eax,[ebp-0x4]
call dword 0x3a1c
ret
jmp dword 0x3384
jmp short 0x2693a
mov esp,ebp
pop ebp
ret
add [eax],al
db 0xff
db 0xff
db 0xff
inc dword [esi]
add [eax],al
add [ecx+0x68],dl
outsd
insd
popad
add [eax],al
db 0xff
db 0xff
db 0xff
db 0xff
cmp al,0x0
add [eax],al
push ebx
dec edi
inc esi
push esp
push edi
inc ecx
push edx
inc ebp
pop esp
dec ebp
imul esp,[ebx+0x72],dword 0x666f736f
jz 0x269d7
push edi
imul ebp,[esi+0x64],dword 0x2073776f
dec esi
push esp
pop esp
inc ebx
jnz 0x269fb
jc 0x269f0
outsb
jz 0x269e4
gs jc 0x26a04
imul ebp,[edi+0x6e],dword 0x6e6f465c
jz 0x269ed
jnz 0x269fe
jnc 0x26a12
imul esi,[ebp+esi*2+0x74],dword 0x7365
add [eax],al
db 0xff
db 0xff
db 0xff
dec dword [esi]
add [eax],al
add [ebp+0x53],cl
and [ebx+0x68],dl
gs insb
insb
and [esp+ebp*2+0x67],al
and [edx],dh
add [eax],al
or al,0x7a
inc edx
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [edx+edi*2],cl
inc edx
add [eax],ah
add [eax],al
add [eax+0x38004010],dh
ds inc eax
add [esi+edi+0x40],al
add [eax+0x3e],cl
inc eax
add [esi+edi+0x40],cl
add [eax+0x3e],al
inc eax
add [eax-0x5bffbfc5],cl
cmp eax,[eax+0x0]
push esp
jpe 0x26a4d
add [edi],cl
push esp
push eax
popad
jz 0x26a86
gs jc 0x26a83
dec ebp
popad
outsb
popad
gs jc 0x26a70
push esi
test dl,dl
jz 0x26a2a
add esp,byte -0x10
call dword 0x2f14
mov ebx,edx
mov esi,eax
lea eax,[esi+0x8]
push eax
call dword 0x5b98
mov eax,esi
test bl,bl
jz 0x26a4c
call dword 0x2f6c
pop dword [dword fs:0x0]
add esp,byte +0xc
mov eax,esi
pop esi
pop ebx
ret
lea eax,[eax+0x0]
push ebx
push esi
call dword 0x2fbc
mov ebx,edx
mov esi,eax
mov eax,esi
call dword 0x26c4c
lea eax,[esi+0x8]
push eax
call dword 0x5aa8
test bl,bl
jng 0x26a7a
mov eax,esi
call dword 0x2f64
pop esi
pop ebx
ret
lea eax,[eax+0x0]
add eax,byte +0x8
push eax
call dword 0x5ab0
ret
mov eax,eax
add eax,byte +0x8
push eax
call dword 0x5ba0
ret
mov eax,eax
push ebp
mov ebp,esp
add esp,byte -0x8
push ebx
push esi
push edi
mov esi,ecx
mov ebx,edx
mov [ebp-0x4],eax
mov eax,[ebp-0x4]
call dword 0x26a80
xor eax,eax
push ebp
push dword 0x427b39
push dword [fs:eax]
mov [fs:eax],esp
mov eax,[ebp-0x4]
mov eax,[eax+0x4]
mov [ebp-0x8],eax
jmp short 0x26ad1
mov eax,[ebp-0x8]
mov eax,[eax]
mov [ebp-0x8],eax
cmp dword [ebp-0x8],byte +0x0
jz 0x26ae7
mov eax,[ebp-0x8]
cmp ebx,[eax+0x8]
jnz 0x26ac9
mov eax,[ebp-0x8]
cmp esi,[eax+0xc]
jnz 0x26ac9
cmp dword [ebp-0x8],byte +0x0
jnz 0x26b23
mov eax,0x10
call dword 0x1e60
mov [ebp-0x8],eax
mov edi,[ebp-0x8]
mov eax,[ebp-0x4]
mov eax,[eax+0x4]
mov [edi],eax
mov ecx,esi
mov edx,ebx
mov eax,[ebp-0x4]
call dword 0x26b4c
mov [edi+0x4],eax
mov [edi+0x8],ebx
mov [edi+0xc],esi
mov eax,[ebp-0x4]
mov edx,[ebp-0x8]
mov [eax+0x4],edx
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x427b40
mov eax,[ebp-0x4]
call dword 0x26a8c
ret
jmp dword 0x3384
jmp short 0x26b30
mov eax,[ebp-0x8]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
ret
mov eax,eax
push ebp
mov ebp,esp
add esp,byte -0x18
push ebx
push esi
push edi
mov [ebp-0x4],ecx
mov ebx,edx
mov dl,0x1
mov eax,[0x41fb38]
call dword 0x249f4
mov [ebp-0x8],eax
xor eax,eax
push ebp
push dword 0x427c2b
push dword [fs:eax]
mov [fs:eax],esp
mov edx,0x8
mov eax,[ebp-0x8]
mov ecx,[eax]
call dword [ecx+0x40]
mov edx,0x8
mov eax,[ebp-0x8]
mov ecx,[eax]
call dword [ecx+0x34]
mov eax,[ebp-0x8]
call dword 0x24fc8
mov edi,eax
mov eax,[edi+0x14]
xor edx,edx
call dword 0x20570
mov eax,[edi+0x14]
mov edx,ebx
call dword 0x20454
mov eax,[ebp-0x8]
mov edx,[eax]
call dword [edx+0x20]
push eax
lea eax,[ebp-0x18]
push eax
mov eax,[ebp-0x8]
mov edx,[eax]
call dword [edx+0x2c]
mov ecx,eax
xor edx,edx
xor eax,eax
call dword 0x12a2c
lea edx,[ebp-0x18]
mov eax,edi
call dword 0x207f8
xor esi,esi
xor ebx,ebx
mov eax,esi
and eax,0x80000001
jns 0x26beb
dec eax
or eax,byte -0x2
inc eax
mov edx,ebx
and edx,0x80000001
jns 0x26bfa
dec edx
or edx,byte -0x2
inc edx
cmp eax,edx
jnz 0x26c0d
mov eax,[ebp-0x4]
push eax
mov ecx,esi
mov edx,ebx
mov eax,edi
call dword 0x20ae8
inc ebx
cmp ebx,byte +0x9
jnz 0x26bdd
inc esi
cmp esi,byte +0x9
jnz 0x26bdb
mov eax,[ebp-0x8]
call dword 0x24c84
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
jmp short 0x26c42
jmp dword 0x30d0
mov eax,[ebp-0x8]
call dword 0x2bf0
call dword 0x348c
call dword 0x34e0
mov eax,[ebp-0x8]
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret
push ebp
mov ebp,esp
add esp,byte -0xc
push ebx
push esi
mov [ebp-0x4],eax
jmp short 0x26cb9
mov [ebp-0x8],ebx
mov eax,[ebp-0x8]
mov [ebp-0xc],eax
mov eax,[ebp-0x4]
call dword 0x26a80
xor eax,eax
push ebp
push dword 0x427c99
push dword [fs:eax]
mov [fs:eax],esp
mov eax,[ebp-0xc]
mov eax,[eax]
mov edx,[ebp-0x4]
mov [edx+0x4],eax
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x427ca0
mov eax,[ebp-0x4]
call dword 0x26a8c
ret
jmp dword 0x3384
jmp short 0x26c90
mov eax,[ebp-0xc]
mov esi,[eax+0x4]
test esi,esi
jz 0x26cb1
mov eax,esi
call dword 0x2bf0
mov eax,[ebp-0x8]
call dword 0x1e7c
mov eax,[ebp-0x4]
mov ebx,[eax+0x4]
test ebx,ebx
jnz 0x26c59
pop esi
pop ebx
mov esp,ebp
pop ebp
ret
lea eax,[eax+0x0]
push ebx
push esi
mov esi,edx
mov ebx,eax
cmp dword [dword 0x46da8c],byte +0x0
jz 0x26cfd
mov eax,esi
call dword 0x1f6cc
push eax
mov eax,ebx
call dword 0x1f6cc
mov edx,eax
mov eax,[0x46da8c]
pop ecx
call dword 0x26a98
mov eax,[eax+0x4]
pop esi
pop ebx
ret
xor eax,eax
pop esi
pop ebx
ret
mov eax,eax
push ebp
mov ebp,esp
xor eax,eax
push ebp
push dword 0x427dcd
push dword [fs:eax]
mov [fs:eax],esp
inc dword [dword 0x46da34]
jnz dword 0x26dbf
mov eax,[0x46da8c]
call dword 0x2bf0
mov eax,[0x467dcc]
call dword 0x2bf0
mov eax,[0x467dc8]
call dword 0x2bf0
call dword 0x23c30
mov eax,[0x467dd0]
call dword 0x2bf0
mov eax,[0x46da88]
call dword 0x2bf0
mov eax,[0x46da7c]
call dword 0x2bf0
mov eax,[0x46da80]
call dword 0x2bf0
mov eax,[0x46da84]
call dword 0x2bf0
mov eax,[0x46da30]
push eax
call dword 0x5cc0
push dword 0x46da4c
call dword 0x5aa8
push dword 0x46da64
call dword 0x5aa8
mov eax,0x467b44
mov ecx,0x34
mov edx,[dword 0x4139e0]
call dword 0x465c
mov eax,0x467ce4
mov ecx,0x12
mov edx,[dword 0x4139e0]
call dword 0x465c
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x427dd4
ret
jmp dword 0x3384
jmp short 0x26dcc
pop ebp
ret
mov eax,eax
and al,0x7e
inc edx
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [esi+edi*2],ch
inc edx
add [eax+eax],al
add [eax],al
mov al,0x10
inc eax
add [eax],bh
ds inc eax
add [esi+edi+0x40],al
add [eax+0x3e],cl
inc eax
add [esi+edi+0x40],cl
add [eax+0x3e],al
inc eax
add [eax-0x5bffbfc5],cl
cmp eax,[eax+0x0]
loopne 0x26e5d
inc eax
add [esi+edi*2+0x7ea80042],ah
inc edx
add [esi],cl
push esp
push ebx
jns 0x26e9f
arpl [eax+0x72],bp
outsd
dec edi
bound ebp,[edx+0x65]
arpl [eax+edx*4-0x78],si
jng 0x26e81
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax+0x1c00427e],dl
add [eax],al
add al,bl
jnl 0x26ea9
add [eax],bh
ds inc eax
add [esi+edi+0x40],al
add [eax+0x3e],cl
inc eax
add [esi+edi+0x40],cl
add [eax+0x3e],al
inc eax
add [eax-0x5bffbfc5],cl
cmp eax,[eax+0x0]
in al,dx
jng 0x26ec9
add [edi+edi*2],bl
inc edx
add [eax],ch
jg 0x26ed1
add [eax],dl
push esp
inc ebx
jc 0x26efe
jz 0x26f00
arpl [ecx+0x6c],sp
push ebx
arpl [gs:ecx+ebp*2+0x6f],si
outsb
lea eax,[eax+0x0]
ret
lea eax,[eax+0x0]
ret
lea eax,[eax+0x0]
push ebx
push esi
test dl,dl
jz 0x26eba
add esp,byte -0x10
call dword 0x2f14
mov ebx,edx
mov esi,eax
xor edx,edx
mov eax,esi
call dword 0x2bc0
lea eax,[esi+0x4]
push eax
call dword 0x5b98
mov eax,esi
test bl,bl
jz 0x26ee5
call dword 0x2f6c
pop dword [dword fs:0x0]
add esp,byte +0xc
mov eax,esi
pop esi
pop ebx
ret
mov eax,eax
push ebx
push esi
call dword 0x2fbc
mov ebx,edx
mov esi,eax
lea eax,[esi+0x4]
push eax
call dword 0x5aa8
mov edx,ebx
and dl,0xfc
mov eax,esi
call dword 0x2be0
test bl,bl
jng 0x26f17
mov eax,esi
call dword 0x2f64
pop esi
pop ebx
ret
mov eax,eax
add eax,byte +0x4
push eax
call dword 0x5ab0
ret
mov eax,eax
add eax,byte +0x4
push eax
call dword 0x5ba0
ret
mov eax,eax
mov edx,[eax]
call dword [edx]
ret
lea eax,[eax+0x0]
mov edx,[eax]
call dword [edx+0x4]
ret
mov eax,eax
push ebp
mov ebp,esp
push ecx
push ebx
push esi
push edi
mov [ebp-0x4],ecx
mov edi,edx
mov esi,eax
cmp dword [dword 0x46db5c],byte +0x0
jz 0x26f83
mov eax,[ebp+0x8]
push eax
mov eax,[ebp+0xc]
push eax
mov eax,[ebp+0x10]
push eax
mov eax,[ebp+0x14]
push eax
mov eax,[ebp+0x18]
push eax
mov eax,[ebp+0x1c]
push eax
mov eax,[ebp-0x4]
push eax
push edi
push esi
call dword [dword 0x46db5c]
mov ebx,eax
jmp short 0x26fd5
mov ebx,0x80004001
cmp dword [dword 0x46db50],byte +0x0
jna 0x26fd5
push dword 0x427fe0
mov eax,[0x46db50]
push eax
call dword 0x5b50
mov [0x46db5c],eax
cmp dword [dword 0x46db5c],byte +0x0
jz 0x26fd5
mov eax,[ebp+0x8]
push eax
mov eax,[ebp+0xc]
push eax
mov eax,[ebp+0x10]
push eax
mov eax,[ebp+0x14]
push eax
mov eax,[ebp+0x18]
push eax
mov eax,[ebp+0x1c]
push eax
mov eax,[ebp-0x4]
push eax
push edi
push esi
call dword [dword 0x46db5c]
mov ebx,eax
mov eax,ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
ret 0x18
add [edx+esi*2+0x61],al
ja 0x27039
push dword 0x54656d65
gs js 0x27061
inc ebp
js 0x26ff0
push ebp
mov ebp,esp
push ecx
push ebx
push esi
push edi
mov [ebp-0x4],ecx
mov edi,edx
mov esi,eax
cmp dword [dword 0x46db60],byte +0x0
jz 0x2701f
mov eax,[ebp+0x8]
push eax
mov eax,[ebp+0xc]
push eax
mov eax,[ebp-0x4]
push eax
push edi
push esi
call dword [dword 0x46db60]
mov ebx,eax
jmp short 0x2705e
xor ebx,ebx
cmp dword [dword 0x46db50],byte +0x0
jna 0x2705e
push dword 0x428068
mov eax,[0x46db50]
push eax
call dword 0x5b50
mov [0x46db60],eax
cmp dword [dword 0x46db60],byte +0x0
jz 0x2705e
mov eax,[ebp+0x8]
push eax
mov eax,[ebp+0xc]
push eax
mov eax,[ebp-0x4]
push eax
push edi
push esi
call dword [dword 0x46db60]
mov ebx,eax
mov eax,ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
ret 0x8
inc edx
imul ebp,[gs:bp+0x42],dword 0x65666675

jc 0x270d9
fs push eax
popad
imul ebp,[esi+0x74],dword 0x56530000
push edi
mov edi,edx
mov esi,eax
cmp dword [dword 0x46db64],byte +0x0
jz 0x27098
push edi
push esi
call dword [dword 0x46db64]
mov ebx,eax
jmp short 0x270ce
mov ebx,0x80004001
cmp dword [dword 0x46db50],byte +0x0
jna 0x270ce
push dword 0x4280d4
mov eax,[0x46db50]
push eax
call dword 0x5b50
mov [0x46db64],eax
cmp dword [dword 0x46db64],byte +0x0
jz 0x270ce
push edi
push esi
call dword [dword 0x46db64]
mov ebx,eax
mov eax,ebx
pop edi
pop esi
pop ebx
ret
inc ebp
outsb
fs inc edx
jnz 0x27140
gs o16 jc 0x27143
fs push eax
popad
imul ebp,[esi+0x74],dword 0x0
push ebx
push esi
push edi
push ebp
mov ebx,ecx
mov edi,edx
mov esi,eax
cmp dword [dword 0x46db68],byte +0x0
jz 0x27108
push ebx
push edi
push esi
call dword [dword 0x46db68]
mov ebp,eax
jmp short 0x2713f
mov ebp,0x80004001
cmp dword [dword 0x46db50],byte +0x0
jna 0x2713f
push dword 0x428148
mov eax,[0x46db50]
push eax
call dword 0x5b50
mov [0x46db68],eax
cmp dword [dword 0x46db68],byte +0x0
jz 0x2713f
push ebx
push edi
push esi
call dword [dword 0x46db68]
mov ebp,eax
mov eax,ebp
pop ebp
pop edi
pop esi
pop ebx
ret
add [eax],al
inc edx
jnz 0x271b1
gs o16 jc 0x271b4
fs push eax
popad
imul ebp,[esi+0x74],dword 0x41746553
insb
jo 0x271c4
popad
add [eax],al
add [ebp-0x75],dl
in al,dx
mov eax,[0x46db58]
call dword 0x26f34
xor eax,eax
push ebp
push dword 0x428317
push dword [fs:eax]
mov [fs:eax],esp
cmp dword [dword 0x46db54],byte +0x0
jng 0x2718a
dec dword [dword 0x46db54]
cmp dword [dword 0x46db50],byte +0x0
jz dword 0x272ff
cmp dword [dword 0x46db54],byte +0x0
jnz dword 0x272ff
mov eax,[0x46db50]
push eax
call dword 0x5ad0
xor eax,eax
mov [0x46db50],eax
xor eax,eax
mov [0x46da90],eax
xor eax,eax
mov [0x46da94],eax
xor eax,eax
mov [0x46da98],eax
xor eax,eax
mov [0x46da9c],eax
xor eax,eax
mov [0x46daa0],eax
xor eax,eax
mov [0x46daa4],eax
xor eax,eax
mov [0x46daa8],eax
xor eax,eax
mov [0x46daac],eax
xor eax,eax
mov [0x46dab0],eax
xor eax,eax
mov [0x46dab4],eax
xor eax,eax
mov [0x46dab8],eax
xor eax,eax
mov [0x46dabc],eax
xor eax,eax
mov [0x46dac0],eax
xor eax,eax
mov [0x46dac4],eax
xor eax,eax
mov [0x46dac8],eax
xor eax,eax
mov [0x46dacc],eax
xor eax,eax
mov [0x46dad0],eax
xor eax,eax
mov [0x46dad4],eax
xor eax,eax
mov [0x46dad8],eax
xor eax,eax
mov [0x46dadc],eax
xor eax,eax
mov [0x46dae0],eax
xor eax,eax
mov [0x46dae4],eax
xor eax,eax
mov [0x46dae8],eax
xor eax,eax
mov [0x46daec],eax
xor eax,eax
mov [0x46daf0],eax
xor eax,eax
mov [0x46daf4],eax
xor eax,eax
mov [0x46daf8],eax
xor eax,eax
mov [0x46dafc],eax
xor eax,eax
mov [0x46db00],eax
xor eax,eax
mov [0x46db04],eax
xor eax,eax
mov [0x46db08],eax
xor eax,eax
mov [0x46db0c],eax
xor eax,eax
mov [0x46db10],eax
xor eax,eax
mov [0x46db14],eax
xor eax,eax
mov [0x46db18],eax
xor eax,eax
mov [0x46db1c],eax
xor eax,eax
mov [0x46db20],eax
xor eax,eax
mov [0x46db24],eax
xor eax,eax
mov [0x46db28],eax
xor eax,eax
mov [0x46db2c],eax
xor eax,eax
mov [0x46db30],eax
xor eax,eax
mov [0x46db34],eax
xor eax,eax
mov [0x46db38],eax
xor eax,eax
mov [0x46db3c],eax
xor eax,eax
mov [0x46db40],eax
xor eax,eax
mov [0x46db44],eax
xor eax,eax
mov [0x46db48],eax
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x42831e
mov eax,[0x46db58]
call dword 0x26f3c
ret
jmp dword 0x3384
jmp short 0x2730c
pop ebp
ret
push ebp
mov ebp,esp
push ecx
push ebx
mov ebx,0x46db50
mov eax,[0x46db58]
call dword 0x26f34
xor eax,eax
push ebp
push dword 0x4286d3
push dword [fs:eax]
mov [fs:eax],esp
inc dword [dword 0x46db54]
cmp dword [ebx],byte +0x0
jnz dword 0x276b4
push dword 0x4286e4
call dword 0x5ba8
mov [ebx],eax
cmp dword [ebx],byte +0x0
jna dword 0x276b4
push dword 0x4286f0
mov eax,[ebx]
push eax
call dword 0x5b50
mov [0x46da90],eax
push dword 0x428700
mov eax,[ebx]
push eax
call dword 0x5b50
mov [0x46da94],eax
push dword 0x428710
mov eax,[ebx]
push eax
call dword 0x5b50
mov [0x46da98],eax
push dword 0x428724
mov eax,[ebx]
push eax
call dword 0x5b50
mov [0x46da9c],eax
push dword 0x428734
mov eax,[ebx]
push eax
call dword 0x5b50
mov [0x46daa0],eax
push dword 0x428734
mov eax,[ebx]
push eax
call dword 0x5b50
mov [0x46daa4],eax
push dword 0x428754
mov eax,[ebx]
push eax
call dword 0x5b50
mov [0x46daa8],eax
push dword 0x428768
mov eax,[ebx]
push eax
call dword 0x5b50
mov [0x46daac],eax
push dword 0x42877c
mov eax,[ebx]
push eax
call dword 0x5b50
mov [0x46dab0],eax
push dword 0x428790
mov eax,[ebx]
push eax
call dword 0x5b50
mov [0x46dab4],eax
push dword 0x4287ac
mov eax,[ebx]
push eax
call dword 0x5b50
mov [0x46dab8],eax
push dword 0x4287c4
mov eax,[ebx]
push eax
call dword 0x5b50
mov [0x46dabc],eax
push dword 0x4287d4
mov eax,[ebx]
push eax
call dword 0x5b50
mov [0x46dac0],eax
push dword 0x4287e4
mov eax,[ebx]
push eax
call dword 0x5b50
mov [0x46dac4],eax
push dword 0x4287f8
mov eax,[ebx]
push eax
call dword 0x5b50
mov [0x46dac8],eax
push dword 0x428820
mov eax,[ebx]
push eax
call dword 0x5b50
mov [0x46dacc],eax
push dword 0x428830
mov eax,[ebx]
push eax
call dword 0x5b50
mov [0x46dad0],eax
push dword 0x428840
mov eax,[ebx]
push eax
call dword 0x5b50
mov [0x46dad4],eax
push dword 0x428850
mov eax,[ebx]
push eax
call dword 0x5b50
mov [0x46dad8],eax
push dword 0x428860
mov eax,[ebx]
push eax
call dword 0x5b50
mov [0x46dadc],eax
push dword 0x42886c
mov eax,[ebx]
push eax
call dword 0x5b50
mov [0x46dae0],eax
push dword 0x428880
mov eax,[ebx]
push eax
call dword 0x5b50
mov [0x46dae4],eax
push dword 0x428894
mov eax,[ebx]
push eax
call dword 0x5b50
mov [0x46dae8],eax
push dword 0x4288a4
mov eax,[ebx]
push eax
call dword 0x5b50
mov [0x46daec],eax
push dword 0x4288b4
mov eax,[ebx]
push eax
call dword 0x5b50
mov [0x46daf0],eax
push dword 0x4288c4
mov eax,[ebx]
push eax
call dword 0x5b50
mov [0x46daf4],eax
push dword 0x4288d4
mov eax,[ebx]
push eax
call dword 0x5b50
mov [0x46daf8],eax
push dword 0x4288ec
mov eax,[ebx]
push eax
call dword 0x5b50
mov [0x46dafc],eax
push dword 0x4288fc
mov eax,[ebx]
push eax
call dword 0x5b50
mov [0x46db00],eax
push dword 0x428910
mov eax,[ebx]
push eax
call dword 0x5b50
mov [0x46db04],eax
push dword 0x428924
mov eax,[ebx]
push eax
call dword 0x5b50
mov [0x46db08],eax
push dword 0x42893c
mov eax,[ebx]
push eax
call dword 0x5b50
mov [0x46db0c],eax
push dword 0x42894c
mov eax,[ebx]
push eax
call dword 0x5b50
mov [0x46db10],eax
push dword 0x42895c
mov eax,[ebx]
push eax
call dword 0x5b50
mov [0x46db14],eax
push dword 0x42896c
mov eax,[ebx]
push eax
call dword 0x5b50
mov [0x46db18],eax
push dword 0x428980
mov eax,[ebx]
push eax
call dword 0x5b50
mov [0x46db1c],eax
push dword 0x428990
mov eax,[ebx]
push eax
call dword 0x5b50
mov [0x46db20],eax
push dword 0x4289a0
mov eax,[ebx]
push eax
call dword 0x5b50
mov [0x46db24],eax
push dword 0x4289ac
mov eax,[ebx]
push eax
call dword 0x5b50
mov [0x46db28],eax
push dword 0x4289bc
mov eax,[ebx]
push eax
call dword 0x5b50
mov [0x46db2c],eax
push dword 0x4289d8
mov eax,[ebx]
push eax
call dword 0x5b50
mov [0x46db30],eax
push dword 0x4289f4
mov eax,[ebx]
push eax
call dword 0x5b50
mov [0x46db34],eax
push dword 0x428a0c
mov eax,[ebx]
push eax
call dword 0x5b50
mov [0x46db38],eax
push dword 0x428a24
mov eax,[ebx]
push eax
call dword 0x5b50
mov [0x46db3c],eax
push dword 0x428a38
mov eax,[ebx]
push eax
call dword 0x5b50
mov [0x46db40],eax
push dword 0x428a58
mov eax,[ebx]
push eax
call dword 0x5b50
mov [0x46db44],eax
push dword 0x428a74
mov eax,[ebx]
push eax
call dword 0x5b50
mov [0x46db48],eax
cmp dword [ebx],byte +0x0
seta [ebp-0x1]
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x4286da
mov eax,[0x46db58]
call dword 0x26f3c
ret
jmp dword 0x3384
jmp short 0x276c8
movzx eax,byte [ebp-0x1]
pop ebx
pop ecx
pop ebp
ret
add [eax],al
jnz 0x2775e
jz 0x27750
gs insd
fs insb
insb
add [edi+0x70],cl
gs outsb
push esp
push dword 0x44656d65
popad
jz 0x2775e
add [eax],al
add [ebx+0x6c],al
outsd
jnc 0x2776a
push esp
push dword 0x44656d65
popad
jz 0x2776f
add [eax],al
inc esp
jc 0x27774
ja 0x27769
push dword 0x42656d65
popad
arpl [ebx+0x67],bp
jc 0x2778f
jnz 0x27790
add [fs:edx+esi*2+0x61],al
ja 0x2777d
push dword 0x54656d65
gs js 0x277a5
add [eax],al
add [edi+0x65],al
jz 0x2778c
push dword 0x42656d65
popad
arpl [ebx+0x67],bp
jc 0x277b2
jnz 0x277b3
fs inc ebx
outsd
outsb
jz 0x277b0
outsb
jz 0x277a0
arpl [gs:eax+eax+0x0],si
add [edi+0x65],al
jz 0x277ac
push dword 0x50656d65
popad
jc 0x277d4
push ebx
imul edi,[edx+0x65],dword 0x0
inc edi
gs jz 0x277c0
push dword 0x54656d65
gs js 0x277e8
inc ebp
js 0x277eb
gs outsb
jz 0x2777b
add [edi+0x65],al
jz 0x277d4
push dword 0x54656d65
gs js 0x277fc
dec ebp
gs jz 0x277fe
imul esp,[ebx+0x73],dword 0x74654700
push esp
push dword 0x42656d65
popad
arpl [ebx+0x67],bp
jc 0x2780e
jnz 0x2780f
fs push edx
imul ebp,[gs:bx+0x6e],dword 0x0

dec eax
imul esi,[esp+edx*2+0x65],dword 0x68547473
gs insd
gs inc edx
popad
arpl [ebx+0x67],bp
jc 0x2782e
jnz 0x2782f
add [fs:eax],al
inc esp
jc 0x27828
ja 0x2781d
push dword 0x45656d65
add [gs:bx+si],al
add [edx+esi*2+0x61],al
ja 0x2782d
push dword 0x49656d65
arpl [edi+0x6e],bp
add [eax],al
add [ecx+0x73],cl
push esp
push dword 0x50656d65
popad
jc 0x27863
inc esp
imul bp,[gs:esi+0x65],word 0x64
add [ecx+0x73],cl
push esp
push dword 0x42656d65
popad
arpl [ebx+0x67],bp
jc 0x27875
jnz 0x27876
fs push eax
popad
jc 0x27881
imul esp,[ecx+0x6c],dword 0x7254796c
popad
outsb
jnc 0x27888
popad
jc 0x27880
outsb
jz 0x2781e
add [eax],al
inc edi
gs jz 0x27878
push dword 0x43656d65
outsd
insb
outsd
jc 0x2782e
add [eax],al
inc edi
gs jz 0x27888
push dword 0x4d656d65
gs jz 0x278ae
imul esp,[ebx+0x0],dword 0x74654700
push esp
push dword 0x53656d65
jz 0x278bd
imul ebp,[esi+0x67],dword 0x65470000
jz 0x278a8
push dword 0x42656d65
outsd
outsd
insb
add [eax],al
add [eax],al
inc edi
gs jz 0x278b8
push dword 0x49656d65
outsb
jz 0x2786c
inc edi
gs jz 0x278c4
push dword 0x45656d65
outsb
jnz 0x278e5
push esi
popad
insb
jnz 0x278e2
add [eax],al
add [edi+0x65],al
jz 0x278d8
push dword 0x50656d65
outsd
jnc 0x278f5
jz 0x278f7
outsd
outsb
add [eax],al
add [eax],al
inc edi
gs jz 0x278ec
push dword 0x46656d65
outsd
outsb
jz 0x278a1
add [eax],al
add [edi+0x65],al
jz 0x278fc
push dword 0x52656d65
arpl [gs:eax+eax+0x0],si
add [eax],al
inc edi
gs jz 0x2790c
push dword 0x4d656d65
popad
jc 0x27927
imul ebp,[esi+0x73],dword 0x74654700
push esp
push dword 0x49656d65
outsb
jz 0x2791c
imul esi,[ebx+0x74],dword 0x74654700
push esp
push dword 0x50656d65
jc 0x2794e
jo 0x27946
jc 0x27957
jns 0x27934
jc 0x27950
imul ebp,[bp+0x0],dword 0x74655300
push edi
imul ebp,[esi+0x64],dword 0x6854776f
gs insd
add [gs:eax],al
inc edi
gs jz 0x27954
push dword 0x46656d65
imul ebp,[ebp+0x6e],dword 0x656d61
add [eax],al
add [edi+0x65],al
jz 0x27968
push dword 0x53656d65
jns 0x2798e
inc ebx
outsd
insb
outsd
jc 0x27921
add [eax],al
add [edi+0x65],al
jz 0x2797c
push dword 0x53656d65
jns 0x279a2
inc ebx
outsd
insb
outsd
jc 0x27977
jc 0x279ac
jnc 0x279a1
add [eax],al
add [edi+0x65],al
jz 0x27994
push dword 0x53656d65
jns 0x279ba
inc edx
outsd
outsd
insb
add [edi+0x65],al
jz 0x279a4
push dword 0x53656d65
jns 0x279ca
push ebx
imul edi,[edx+0x65],dword 0x74654700
push esp
push dword 0x53656d65
jns 0x279da
inc esi
outsd
outsb
jz 0x2796c
inc edi
gs jz 0x279c4
push dword 0x53656d65
jns 0x279ea
push ebx
jz 0x279ec
imul ebp,[esi+0x67],dword 0x47000000
gs jz 0x279d8
push dword 0x53656d65
jns 0x279fe
dec ecx
outsb
jz 0x2798f
add [ecx+0x73],cl
push esp
push dword 0x41656d65
arpl [ecx+ebp*2+0x76],si
add [gs:eax],al
add [ecx+0x73],cl
inc ecx
jo 0x27a15
push esp
push dword 0x64656d65
add [edi+0x65],al
jz 0x27a07
imul ebp,[esi+0x64],dword 0x6854776f
gs insd
add [gs:eax],al
inc ebp
outsb
popad
bound ebp,[ebp+0x54]
push dword 0x44656d65
imul esp,[ecx+0x6c],dword 0x6554676f
js 0x27a45
jnz 0x27a45
add [gs:eax],al
add [eax],al
dec ecx
jnc 0x27a2f
push dword 0x44656d65
imul esp,[ecx+0x6c],dword 0x6554676f
js 0x27a5d
jnz 0x27a5d
gs inc ebp
outsb
popad
bound ebp,[ebp+0x64]
add [edi+0x65],al
jz 0x27a4c
push dword 0x41656d65
jo 0x27a6f
push eax
jc 0x27a71
jo 0x27a69
jc 0x27a7a
imul esp,[ebp+0x73],dword 0x53000000
gs jz 0x27a64
push dword 0x41656d65
jo 0x27a87
push eax
jc 0x27a89
jo 0x27a81
jc 0x27a92
imul esp,[ebp+0x73],dword 0x47000000
gs jz 0x27a6b
jnz 0x27a9c
jc 0x27a91
outsb
jz 0x27a83
push dword 0x4e656d65
popad
insd
add [gs:edi+0x65],al
jz 0x27a90
push dword 0x44656d65
outsd
arpl [ebp+0x6d],si
gs outsb
jz 0x27aaa
jz 0x27ab4
outsd
outsb
push eax
jc 0x27abf
jo 0x27ab7
jc 0x27ac8
jns 0x27a56
add [eax],al
inc esp
jc 0x27abc
ja 0x27ab1
push dword 0x50656d65
popad
jc 0x27aca
outsb
jz 0x27aaa
popad
arpl [ebx+0x67],bp
jc 0x27add
jnz 0x27ade
add [fs:eax],al
add [ebp+0x6e],al
popad
bound ebp,[ebp+0x54]
push dword 0x6e696d65
add [bx+si],al
add [ebx+0x46db503d],al
add [eax],al
jna 0x27aa8
call dword [dword 0x46db24]
test eax,eax
jz 0x27aa1
call dword [dword 0x46db20]
test eax,eax
jnz 0x27aa5
xor eax,eax
jmp short 0x27aaa
mov al,0x1
ret
xor eax,eax
ret
nop
push ebp
mov ebp,esp
xor eax,eax
push ebp
push dword 0x428af4
push dword [fs:eax]
mov [fs:eax],esp
inc dword [dword 0x46db4c]
jnz 0x27ae6
cmp dword [dword 0x46db54],byte +0x0
jng 0x27adc
call dword 0x27160
cmp dword [dword 0x46db54],byte +0x0
jg 0x27ace
mov eax,[0x46db58]
call dword 0x2bf0
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x428afb
ret
jmp dword 0x3384
jmp short 0x27af3
pop ebp
ret
lea eax,[eax+0x0]
push ebx
push esi
push edi
mov edi,edx
mov esi,eax
cmp dword [dword 0x46db74],byte +0x0
jz 0x27b1c
push edi
push esi
call dword [dword 0x46db74]
mov ebx,eax
jmp short 0x27b6a
cmp dword [dword 0x46db70],byte +0x0
jnz 0x27b34
push dword 0x428b70
call dword 0x5ba8
mov [0x46db70],eax
mov ebx,0x80004001
cmp dword [dword 0x46db70],byte +0x0
jna 0x27b6a
push dword 0x428b7c
mov eax,[0x46db70]
push eax
call dword 0x5b50
mov [0x46db74],eax
cmp dword [dword 0x46db74],byte +0x0
jz 0x27b6a
push edi
push esi
call dword [dword 0x46db74]
mov ebx,eax
mov eax,ebx
pop edi
pop esi
pop ebx
ret
inc esp
push edi
dec ebp
inc ecx
push eax
dec ecx
cs inc esp
dec esp
dec esp
add [eax],al
inc esp
ja 0x27bec
inc ebp
js 0x27bf6
gs outsb
fs inc esi
jc 0x27be9
insd
gs dec ecx
outsb
jz 0x27bfd
inc ebx
insb
imul esp,[ebp+0x6e],dword 0x65724174
popad
add [eax],al
add [eax],al
push ebx
push esi
mov esi,eax
cmp dword [dword 0x46db78],byte +0x0
jz 0x27bb4
push esi
call dword [dword 0x46db78]
mov ebx,eax
jmp short 0x27c01
cmp dword [dword 0x46db70],byte +0x0
jnz 0x27bcc
push dword 0x428c08
call dword 0x5ba8
mov [0x46db70],eax
mov ebx,0x80004001
cmp dword [dword 0x46db70],byte +0x0
jna 0x27c01
push dword 0x428c14
mov eax,[0x46db70]
push eax
call dword 0x5b50
mov [0x46db78],eax
cmp dword [dword 0x46db78],byte +0x0
jz 0x27c01
push esi
call dword [dword 0x46db78]
mov ebx,eax
mov eax,ebx
pop esi
pop ebx
ret
add [eax],al
inc esp
push edi
dec ebp
inc ecx
push eax
dec ecx
cs inc esp
dec esp
dec esp
add [eax],al
inc esp
ja 0x27c84
dec ecx
jnc 0x27c5d
outsd
insd
jo 0x27c8d
jnc 0x27c89
jz 0x27c8b
outsd
outsb
inc ebp
outsb
popad
bound ebp,[ebp+0x64]
add [ecx-0x5f],dl
aam 0x8b
inc esi
add [ebx+0x117c0638],al
mov eax,esp
call dword 0x27b9c
test eax,eax
jnz 0x27c48
cmp dword [esp],byte +0x0
jnz 0x27c4c
xor eax,eax
pop edx
ret
mov al,0x1
pop edx
ret
push ebp
mov ebp,esp
xor eax,eax
push ebp
push dword 0x428c8b
push dword [fs:eax]
mov [fs:eax],esp
inc dword [dword 0x46db6c]
jnz 0x27c7d
cmp dword [dword 0x46db70],byte +0x0
jna 0x27c7d
mov eax,[0x46db70]
push eax
call dword 0x5ad0
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x428c92
ret
jmp dword 0x3384
jmp short 0x27c8a
pop ebp
ret
jmp dword [dword 0x46edb0]
mov eax,eax
jmp dword [dword 0x46edac]
mov eax,eax
jmp dword [dword 0x46eda8]
mov eax,eax
mov al,0x8c
inc edx
add [edi],cl
or al,0x49
push ebx
push dword 0x466c6c65
outsd
insb
gs jc 0x27ce3
adc [eax+0x0],eax
add esi,esp
adc al,0x2
add [eax],al
add [eax],al
add al,al
add [eax],al
add [eax],al
add [eax],al
inc esi
push es
push ebx
push dword 0x6a624f6c
or al,[eax]
db 0xff
dec dword [ebx+0x428ce4c0]
add [edi],cl
or al,0x49
dec ebp
outsd
fs popad
insb
push edi
imul ebp,[esi+0x64],dword 0x1124776f
inc eax
add [ecx],al
push edi
push ss
db 0xdb
mov ah,0xd7
jo 0x27d5c
dec eax
mov segr7,[esi]
outsd
retf
pop edx
pop esp
sbb [edx],al
push es
push ebx
push dword 0x6a624f6c
add [eax],eax
db 0xff
dec dword [ebx+0x428d18c0]
add [edi],cl
or cl,[ecx+0x53]
push dword 0x496c6c65
jz 0x27d88
insd
and al,0x11
inc eax
add [ecx],al
push ds
insd
db 0x82
inc ebx
sbb bh,ah
out dx,al
inc edx
mov esp,0x61e2a155
ret
jpo 0x27d37
push es
push ebx
push dword 0x6a624f6c
add eax,0x48ffff00
lea eax,[edx+0x0]
db 0x0f
cmovns edx,[ebx+0x68]
gs insb
insb
dec ecx
jz 0x27db8
insd
inc ecx
jc 0x27dc9
popad
jns 0x27d7e
adc [eax+0x0],eax
add [ebp-0x59],ebp
ds mov dh,0x85
pop ds
outsd
inc ebp
mov eax,[0x9e15489c]
cli
test [ebx+0x6c685306],ecx
dec edi
bound ebp,[edx+0x7]
add bh,bh
dec dword [ebp-0x727fffc0]
inc edx
add [ecx],dl
push ss
push esp
inc ebx
outsd
insd
fs insb
inc esi
imul ebp,[esp+esi*2+0x65],dword 0x65705372
arpl [ecx+0x72],ax
jc 0x27df8
jns 0x27da1
add [eax],al
add [eax],al
add [eax],al
add bh,bh
db 0xff
db 0xff
inc dword [eax]
add [eax],al
add [esi],al
push ebx
push dword 0x6a624f6c
nop
mov ah,0x8d
inc edx
add [edi],cl
or ecx,[ecx+0x46]
imul ebp,[ebp+0x44],dword 0x6f6c6169
loopne 0x27d4f,cx
inc edx
add [ecx],al
ss push ecx
clc
inc edx
jng 0x27da7
pushfd
inc ebx
test ecx,esi
in al,0x7
pop ebp
adc ebx,[edi-0x38]
push es
push ebx
push dword 0x6a624f6c
pop ss
add bh,bh
dec dword [ebp-0x74aaffc0]
in al,dx
push ecx
push ebx
push esi
push edi
mov [ebp-0x4],ecx
mov edi,edx
mov esi,eax
cmp dword [dword 0x46db80],byte +0x0
jz 0x27e0f
mov eax,[ebp+0x8]
push eax
mov eax,[ebp-0x4]
push eax
push edi
push esi
call dword [dword 0x46db80]
mov ebx,eax
jmp short 0x27e5c
push dword 0x428e68
call dword 0x5b48
mov [0x46db7c],eax
mov ebx,0x80004001
cmp dword [dword 0x46db7c],byte +0x0
jna 0x27e5c
push dword 0x428e74
mov eax,[0x46db7c]
push eax
call dword 0x5b50
mov [0x46db80],eax
cmp dword [dword 0x46db80],byte +0x0
jz 0x27e5c
mov eax,[ebp+0x8]
push eax
mov eax,[ebp-0x4]
push eax
push edi
push esi
call dword [dword 0x46db80]
mov ebx,eax
mov eax,ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
ret 0x4
add [eax],al
jnc 0x27ed2
gs insb
insb
xor esi,[edx]
fs insb
insb
add [ebx+0x48],dl
inc ebx
jc 0x27ede
popad
jz 0x27ee1
dec ecx
jz 0x27ee4
insd
inc esi
jc 0x27ef2
insd
push eax
popad
jc 0x27efb
imul ebp,[esi+0x67],dword 0x656d614e
add [esi+ecx*4+0xb030042],dl
push esp
push esp
gs js 0x27f0f
dec esp
popad
jns 0x27f0e
jnz 0x27f15
add [eax],eax
add [eax],al
add [edx],al
add [eax],al
add [eax+0x500428e],dl
jz 0x27f1d
push esp
outsd
jo 0x27ebd
jz 0x27f23
inc ebx
gs outsb
jz 0x27f21
jc 0x27ec6
jz 0x27f2c
inc edx
outsd
jz 0x27f38
outsd
insd
or [ebx+0x74],dl
fs inc ebx
jz 0x27f3f
insb
jnc 0x27e60
aam 0x8e
inc edx
add [ebx],al
adc [ebp+eax*2+0x6c],edx
insb
imul esi,[eax+0x73],dword 0x6f507369
jnc 0x27f4c
jz 0x27f4e
outsd
outsb
add [eax],eax
add [eax],al
add [ebx],al
add [eax],al
add al,dl
mov es,[edx+0x0]
push es
gs jo 0x27f46
outsd
outsb
gs push cs
gs jo 0x27f4f
popad
jz 0x27f6a
inc ebp
insb
insb
imul esi,[eax+0x73],dword 0x650d7369
jo 0x27f53
outsb
fs inc ebp
insb
insb
imul esi,[eax+0x73],dword 0x650e7369
jo 0x27f73
outsd
jc 0x27f83
inc ebp
insb
insb
imul esi,[eax+0x73],dword 0x53087369
jz 0x27f8f
inc ebx
jz 0x27fa0
insb
jnc 0x27fad
pop dword [edx+0x0]
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
dec eax
nop
inc edx
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax+edx*4],dl
inc edx
add [eax+edx*4],dh
inc edx
add [ecx+eax-0x2ad40000],ah
inc ebx
add [eax],ch
mov ebp,0x3e440041
inc eax
add [esi+esi*4+0x41],ah
add [esi+edi+0x40],cl
add [ecx+ebp],dh
inc esp
add [eax-0x5bffbfc5],cl
cmp eax,[eax+0x0]
movsb
test eax,0x3a6c0044
inc esp
add [eax],dh
sub al,0x44
add [esp+edx*2+0x41],bh
add [eax-0x3f],ah
inc edx
add [eax+0x200042c3],cl
add eax,0x10800044
inc esp
add [eax-0x43],al
inc ecx
add [edx+edi*4],ah
inc ecx
add [edx+edi*4],bl
inc ecx
add [eax-0x43],cl
inc ecx
add ah,ah
mov ecx,0x23580042
inc esp
add [ebx+0x44],dl
add [esp],ah
inc esp
add [eax+0x3],dh
inc esp
add [eax-0x13ffbbf4],cl
or eax,[eax+eax-0x18]
adc eax,0x2b00044
inc esp
add [edx+eax+0x3c040044],dh
inc esp
add [eax],dh
cmp al,0x44
add al,dh
add al,0x44
add [eax-0x13ffbd3e],dl
add al,0x44
add al,dh
adc [eax+eax+0x6c],eax
adc [eax+eax-0x50],eax
adc al,0x44
add [ebx+edx],ch
inc esp
add [esi+0x44],ah
add [esp+edi+0x17a80044],dh
inc esp
add [eax+ebx+0x6f40044],ah
inc esp
add [eax+ebx-0x401fffbc],al
inc edx
add [edx+edi*4+0x42],bh
add [dword 0xeb01200],al
mov al,0x6
mov al,0xc6
inc ebp
db 0xff
mov eax,0xd40042c3
ret
inc edx
add ah,ch
ret
inc edx
add [ecx+eax*8+0x42],bh
add [eax],dh
mov esp,0x540c0042
inc ebx
jnz 0x280ac
jz 0x280aa
insd
dec esp
popad
bound esp,[ebp+0x6c]
lea eax,[eax+0x0]
dec eax
nop
inc edx
add [edi],al
or al,0x54
inc ebx
jnz 0x280c1
jz 0x280bf
insd
dec esp
popad
bound esp,[ebp+0x6c]
jl 0x27fe7
inc edx
add [esi+edx*8],ah
inc ebx
add [dword 0x74530800],cl
fs inc ebx
jz 0x280d9
insb
jnc 0x2806a
add [eax+0x4290b8],dl
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
pop esp
xchg eax,ecx
inc edx
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax-0x6f],dl
inc edx
add [eax+0x30000001],ch
pop dword [edx+0x0]
sub [ebp+0x3e440041],bh
inc eax
add [esi+esi*4+0x41],ah
add [esi+edi+0x40],cl
add [ecx+ebp],dh
inc esp
add [eax-0x5bffbfc5],cl
cmp eax,[eax+0x0]
movsb
test eax,0x3a6c0044
inc esp
add [eax],dh
sub al,0x44
add [esp+edx*2+0x41],bh
add [eax-0x3f],ah
inc edx
add [eax+0x200042c3],cl
add eax,0x10800044
inc esp
add [eax-0x43],al
inc ecx
add [edx+edi*4],ah
inc ecx
add [edx+edi*4],bl
inc ecx
add [eax-0x43],cl
inc ecx
add ah,ah
mov ecx,0x23580042
inc esp
add [ebx+0x44],dl
add [esp],ah
inc esp
add [eax+0x3],dh
inc esp
add [eax-0x13ffbbf4],cl
or eax,[eax+eax-0x18]
adc eax,0x2b00044
inc esp
add [edx+eax+0x3c040044],dh
inc esp
add [eax],dh
cmp al,0x44
add al,dh
add al,0x44
add [eax-0x13ffbd3e],dl
add al,0x44
add al,dh
adc [eax+eax+0x6c],eax
adc [eax+eax-0x50],eax
adc al,0x44
add [ebx+edx],ch
inc esp
add [esi+0x44],ah
add [esp+edi+0x17a80044],dh
inc esp
add [eax+ebx+0x6f40044],ah
inc esp
add [eax+ebx-0x401fffbc],al
inc edx
add [edx+edi*4+0x42],bh
add [esi],al
push esp
dec esp
popad
bound esp,[ebp+0x6c]
nop
pop esp
xchg eax,ecx
inc edx
add [edi],al
push es
push esp
dec esp
popad
bound esp,[ebp+0x6c]
mov eax,0x44004290
nop
inc edx
add [esi],dh
add [eax],cl
push ebx
jz 0x281d6
inc ebx
jz 0x281e7
insb
jnc 0x281a1
add ah,bh
mov bl,0x43
add [ebx+0x0],bl
add bh,bh
or al,0x6
inc esp
add [ecx],al
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax],al
or eax,0x6c410500
imul esp,[edi+0x6e],dword 0x412234
pushfd
add [eax],eax
dec dword [edx+eax*8+0x42]
add [ecx],al
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax],al
push cs
add [ecx],cl
inc ecx
insb
imul esp,[edi+0x6e],dword 0x746e656d
pushfd
mov esp,0x610043
add bh,bh
add byte [ebx],0x44
add [esp+eax+0x44],bl
add [eax+0x3],al
sldt [edi]
inc ecx
outsb
arpl [eax+0x6f],bp
jc 0x28252
add [eax],dl
inc eax
add [ebp+0x60ff0001],bl
add [eax],al
inc byte [ecx]
add [eax],al
add [eax],al
add [eax],al
add byte [ecx],0x0
add [eax],al
adc [eax],al
or [ecx+0x75],al
jz 0x2826d
push ebx
imul edi,[edx+0x65],dword 0x412280
pop edi
add [eax],al
push dword [eax+eax+0x0]
db 0xfe
mov esp,0x4413
add [eax],al
add byte [eax],0x0
add [eax+0x42080011],al
imul eax,[ecx+ebp*2+0x4d],dword 0x4465646f
mov esp,0x12980043
inc esp
add al,cl
adc al,[eax+eax+0x74]
cmp [eax+eax+0x0],eax
add [eax],al
add byte [eax],0x0
add [eax+0x43070012],al
popad
jo 0x282b8
imul ebp,[edi+0x6e],dword 0x41ed30
jo 0x2824d
add bh,bh
cmp [esp+eax*2],dl
add [esp+edx+0x44],al
add [eax-0x80000000],al
adc eax,[eax]
add eax,0x6f6c6f43
jc 0x282ac
mov ebp,0x740043
add bh,bh
insb
ds inc esp
add [ecx],al
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax+0x430b0014],al
outsd
outsb
jnc 0x282fb
jc 0x282ea
imul ebp,[esi+0x74],dword 0x43b3e473
add [esi+0x0],bh
add bh,bh
jng 0x28297
add bh,bh
add [eax],eax
add [eax],al
add [eax],al
add [eax-0xc],al
adc eax,0x72440a00
popad
inc ebx
jnz 0x28321
jnc 0x28320
jc 0x282ab
mov ebx,0x8f0043
add bh,bh
pop dword [eax]
add bh,bh
add [eax],eax
add [eax],al
add [eax],al
add [eax+0x0],al
push ss
add [eax],cl
inc esp
jc 0x28331
dec ebx
imul ebp,[esi+0x64],dword 0x43bb70
pop ebp
add [eax],al
jmp dword [eax+eax+0x0]
inc byte [ecx]
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax],al
pop ss
add [eax],cl
inc esp
jc 0x28354
dec ebp
outsd
ror byte [gs:esi+0x1a20042],1
add bh,bh
insb
ret 0x42
add [eax],eax
add [eax],al
add [eax],al
add [eax+0x0],al
sbb [eax],al
adc [ebp+0x6c],al
insb
imul esi,[eax+0x73],dword 0x6f507369
jnc 0x28388
jz 0x2838a
outsd
outsb
add [eax],dl
inc eax
add [eax+0x0],dl
add dh,bh
push dword 0x94fe0000
cmp [eax+eax+0x0],eax
add [eax],al
add byte [ecx],0x0
add [eax],al
sbb [eax],eax
pop es
inc ebp
outsb
popad
bound ebp,[ebp+0x64]
add al,0xd5
inc ebx
add [eax-0x3f00ffff],bl
ret 0x42
add [eax],eax
add [eax],al
add [eax],al
add [eax-0x80000000],al
sbb al,[eax]
or al,0x46
outsd
arpl [ebp+0x73],si
inc ebx
outsd
outsb
jz 0x283dc
outsd
insb
call dword 0x6802c562
add [eax],al
dec dword [ebx+edx+0x139c0044]
inc esp
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax+0x4604001b],al
outsd
outsb
jz 0x2838c
adc [eax+0x0],al
pushad
add [eax],al
push dword [eax+0x0]
add dh,bh
add [eax],eax
add [eax],al
add [eax],al
add [eax+0x1],al
sbb al,0x0
push cs
push eax
popad
jc 0x2840f
outsb
jz 0x283ef
imul eax,[ecx+ebp*2+0x4d],dword 0x65646f
adc [eax+0x0],al
pop edx
add [eax],al
dec dword [esp+edx+0x10044]
add [eax],al
add [eax],al
add [eax+0x1],al
sbb eax,0x61500b00
jc 0x28438
outsb
jz 0x28419
outsd
insb
outsd
jc 0x283db
adc [eax+0x0],al
pop ecx
add [eax],al
inc esp
adc eax,[eax+eax+0x1]
add [eax],al
add [eax],al
add [eax],al
add byte [ecx],0x0
add [eax],al
push ds
add [edx],cl
push eax
popad
jc 0x2845e
outsb
jz 0x28442
outsd
outsb
jz 0x28400
adc [eax+0x0],al
mov es,[eax]
add bh,bh
or al,0x14
inc esp
add [ecx],al
add [eax],al
add [eax],al
add [eax],al
add byte [ecx],0x0
add [eax],al
pop ds
add [esi],cl
push eax
popad
jc 0x28483
outsb
jz 0x28474
push dword 0x6948776f
outsb
jz 0x28495
push ebp
inc ebx
add [eax+0x4cff0000],al
adc al,[eax+eax+0x1]
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax+0x50090020],al
outsd
jo 0x284bc
jo 0x28496
gs outsb
jnz 0x2844d
adc [eax+0x0],al
mov al,[0xd4ff0001]
ret 0x42
add [eax],eax
add [eax],al
add [eax],al
add [eax+0x1],al
and [eax],eax
or eax,0x776f6853
inc ecx
arpl [ebx+0x65],sp
insb
inc ebx
push dword 0x10007261
inc eax
add [ebp-0x17010000],cl
adc eax,[eax+eax-0x50]
adc eax,[eax+eax+0x0]
add [eax],al
add byte [eax],0x0
add [eax+0x53080022],al
push dword 0x6948776f
outsb
jz 0x28498
adc [eax+0x0],al
mov ah,0xc2
inc edx
add ah,dh
ret 0x42
mov eax,[0xff0001]
add [eax],al
add byte [eax],0x0
add [eax+0x540b0023],al
jc 0x28516
outsb
jnc 0x28528
popad
jc 0x28520
outsb
jz 0x2844e
mov es,[edx+0x0]
sahf
add [eax],eax
db 0xff
cmp al,0xc3
inc edx
add [ecx],al
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax],al
and al,0x0
push es
dec esp
popad
jns 0x2854b
jnz 0x28552
add [eax],dl
inc eax
add [edi+0x0],dl
add bh,bh
mov eax,0xf4004411
cmp [eax+eax+0x0],eax
add [eax],al
add byte [ecx],0x0
add [eax],al
and eax,0x69560700
jnc 0x28566
bound ebp,[ebp+0x0]
adc [eax+0x0],al
lahf
add [eax],eax
call dword far [ebx+eax*8+0x42]
add [ecx],al
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax],al
add [es:eax],cl
push edi
outsd
jc 0x28583
push edi
jc 0x28583
jo 0x284ec
and eax,[ecx+0x0]
adc [ecx],al
add bh,bh
adc [ecx],al
add bh,bh
adc al,0x3a
inc esp
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax+0x4f070027],al
outsb
inc ebx
insb
imul esp,[ebx+0x6b],dword 0x43c82c
and [ecx],al
add bh,bh
and [ecx],al
add bh,bh
add [eax],eax
add [eax],al
add [eax],al
add [eax-0x80000000],al
sub [eax],al
push cs
dec edi
outsb
inc ebx
outsd
outsb
jz 0x285cc
js 0x285dd
push eax
outsd
jo 0x285e2
jo 0x28537
and eax,[ecx+0x0]
sbb [ecx],al
add bh,bh
sbb [ecx],al
add bh,bh
add [eax],eax
add [eax],al
add [eax],al
add [eax-0x80000000],al
sub [eax],eax
or cl,[edi+0x6e]
inc esp
bound ebp,[ebx+eax*2+0x6c]
imul esp,[ebx+0x6b],dword 0x43c2f0
fadd dword [eax]
add bh,bh
fadd dword [eax]
add bh,bh
add [eax],eax
add [eax],al
add [eax],al
add [eax-0x80000000],al
sub al,[eax]
or cl,[edi+0x6e]
inc esp
jc 0x28614
inc esp
jc 0x28626
jo 0x28621
ret 0x43
loopne 0x285be
add bh,bh
loopne 0x285c2
add bh,bh
add [eax],eax
add [eax],al
add [eax],al
add [eax-0x80000000],al
sub eax,[eax]
or cl,[edi+0x6e]
inc esp
jc 0x28639
dec edi
jna 0x28641
jc 0x28576
ret
inc ebx
add al,bh
add [eax],al
db 0xff
clc
add [eax],al
inc dword [ecx]
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax+0x4f09002c],al
outsb
inc ebp
outsb
fs inc esp
outsd
arpl [ebx-0x68],bp
ret
inc ebx
add [eax],cl
add [eax],eax
dec dword [eax]
add [eax],eax
inc dword [ecx]
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax+0x4f09002d],al
outsb
inc ebp
outsb
fs inc esp
jc 0x28685
sub cl,al
inc ebx
add [eax],ch
add [eax],eax
jmp dword far [eax]
add [eax],eax
inc dword [ecx]
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax+0x4f0f002e],al
outsb
dec ebp
outsd
jnz 0x286b9
gs inc ecx
arpl [ecx+ebp*2+0x76],si
popad
jz 0x286b4
dec esp
rol byte [ebx+0x0],byte 0xc0
add [eax],al
inc eax
add [eax],al
inc dword [ecx]
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax+0x4f0b002f],al
outsb
dec ebp
outsd
jnz 0x286e3
gs inc esp
outsd
ja 0x286e3
db 0xc4
rol byte [ebx+0x0],byte 0xc8
add [eax],al
dec eax
add [eax],al
inc dword [ecx]
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax+0x4f0b0030],al
outsb
dec ebp
outsd
jnz 0x28709
gs dec ebp
outsd
jna 0x28700
dec esp
rol byte [ebx+0x0],byte 0xd0
add [eax],al
call eax
add [eax],al
inc dword [ecx]
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax+0x4f090031],al
outsb
dec ebp
outsd
jnz 0x2872f
gs push ebp
jo 0x28688
and eax,[ecx+0x0]
cmp [ecx],al
add bh,bh
cmp [ecx],al
add bh,bh
add [eax],eax
add [eax],al
add [eax],al
add [eax-0x80000000],al
xor al,[eax]
or al,0x4f
outsb
dec ebp
outsd
jnz 0x28753
gs inc ebp
outsb
jz 0x2874a
jc 0x286af
and eax,[ecx+0x0]
xor [ecx],al
add bh,bh
xor [ecx],al
add bh,bh
add [eax],eax
add [eax],al
add [eax],al
add [eax-0x80000000],al
xor eax,[eax]
or al,0x4f
outsb
dec ebp
outsd
jnz 0x2877a
gs dec esp
gs popad
jna 0x28772
pop eax
lds eax,[ebx+0x0]
lock add [eax],al
push eax
add [eax],al
inc dword [ecx]
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax+0x4f0b0034],al
outsb
push ebx
jz 0x2878e
jc 0x287a3
inc esp
outsd
arpl [ebx+0x50],bp
ret
inc ebx
add [eax],al
add [eax],eax
inc dword [eax]
add [eax],eax
inc dword [ecx]
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax+0x4f0b0035],al
outsb
push ebx
jz 0x287b4
jc 0x287c9
inc esp
jc 0x287b9
lea eax,[bx+si+0x0]
pushad
xchg eax,edi
inc edx
add [ebx],al
or eax,0x69644554
jz 0x287ab
push dword 0x61437261
jnc 0x287d4
add [eax],eax
add [eax],al
add [edx],al
add [eax],al
add [edi+edx*4+0x42],bl
add [eax],cl
arpl [gs:esi+0x6f],cx
jc 0x287f0
popad
insb
or esp,[ebp+0x63]
push ebp
jo 0x287fb
gs jc 0x287d1
popad
jnc 0x287f6
or esp,[ebp+0x63]
dec esp
outsd
ja 0x287fd
jc 0x287dd
popad
jnc 0x28802
or [ebx+0x74],dl
fs inc ebx
jz 0x28816
insb
jnc 0x28732
db 0xc0
hlt
xchg eax,edi
inc edx
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],dh
cdq
inc edx
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add ah,ch
cwde
inc edx
add [esi],bl
cdq
inc edx
add [eax+0x2],dh
add [eax],al
sbb al,0xd1
inc ebx
add [eax],ch
mov ebp,0x3e440041
inc eax
add [esi+esi*4+0x41],ah
add [esi+edi+0x40],cl
add [ebp+ecx*8+0x42],bl
add [eax-0x5bffbfc5],cl
cmp eax,[eax+0x0]
inc esp
inc edx
inc esp
add [edi+ebx*4+0x44],bh
add ah,bh
pop eax
inc esp
add [esp+edx*2+0x41],bh
add [edx+edi],dh
inc esp
add [ebx+edx*2],dl
inc esp
add al,bh
inc ebx
inc esp
add [eax+0x40004410],al
mov ebp,0xba240041
inc ecx
add [edx+edi*4],bl
inc ecx
add [eax-0x43],cl
inc ecx
add [eax-0x5fffbd3c],cl
cdq
inc esp
add [edi+ebx*4-0x6107ffbc],ch
inc esp
add [eax+0x3],dh
inc esp
add [esp+edx*4+0x44],ah
add [esp+edx*4-0x6f0fffbc],al
inc esp
add [eax-0x4bffbbfe],dh
add al,[eax+eax+0x4]
cmp al,0x44
add [eax],dh
cmp al,0x44
add al,dh
add al,0x44
add [ebp+eax*8+0x42],ah
add ah,ch
add al,0x44
add al,dh
adc [eax+eax-0x34],eax
test al,0x44
add [eax+0x2c004414],dh
adc eax,[eax+eax+0x1c]
fs inc esp
add [esp+edi-0x6ebbffbc],dh
inc esp
add [edx+edx*4],al
inc esp
add al,bh
mov [eax+eax-0x18],es
xchg eax,ecx
inc esp
add [eax+0x44],dh
inc esp
add [eax],bh
dec esp
inc esp
add [edx+ebx*2+0x44],ah
add [ecx+ecx*8-0x35c3ffbe],al
inc edx
add [edx+ecx*8+0x5afc0042],ch
inc esp
add [eax],ah
pop ebx
inc esp
add [ebx+ebx*2+0x59b80044],dh
inc esp
add [ebx+ecx*8-0x5873ffbe],dl
inc esp
add [eax],dh
xchg eax,ebx
inc esp
add al,ch
imul eax,[eax+eax+0x0],byte -0x59
inc esp
add [eax+0x5000448f],ah
test al,0x44
add [eax+0x44004492],bl
lds eax,[edx+0x0]
add bh,0x42
add [edi+eax*8],bh
inc edx
add al,ch
enter 0x42,0xb0
mov dword [edx+0x0],0x42c760
adc al,0xc8
inc edx
add [eax+ecx*8+0x42],cl
add [eax],cl
add [eax],dh
add [eax],dl
mov al,0x1a
mov al,0xe
mov al,0x11
mov ebp,0x7bb012
mov al,0xff
ror dh,1
inc edx
add [eax],dl
iretd
inc edx
add [edi+ecx*8-0x30bbffbe],cl
inc edx
add [edi+ecx*8+0x42],ch
add al,cl
iretd
inc edx
add [eax],al
rol byte [edx+0x0],1
mov ah,0xcc
inc edx
add [ebx],cl
push esp
inc ebx
jnz 0x28996
jz 0x28994
insd
inc ebp
imul esi,[fs:ebx+ecx*4-0x40],dword 0x429930

pop es
or edx,[ebx+eax*2+0x75]
jnc 0x289ab
outsd
insd
inc ebp
imul esi,[fs:esp+esi*8-0x69],dword 0xd5040042

inc ebx
add [esi],cl
add [eax],cl
push ebx
jz 0x289af
inc ebx
jz 0x289c0
insb
jnc 0x28952
add [eax],al
adc [eax+0x0],al
fadd dword [ecx]
add bh,bh
in al,dx
xchg eax,ebp
inc esp
add [ecx],al
add [eax],al
add [eax],al
add [eax],al
add byte [ecx],0x0
add [eax],al
or eax,0x61540700
db 0x62
push ebx
jz 0x289e2
jo 0x28935
cdq
inc edx
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add ah,al
call dword 0x0:0x42
add [eax],al
add [eax],al
add [eax],al
add [eax],al
mov eax,0x7000429a
add al,[eax]
add [eax+0x28004297],ch
mov ebp,0x3e440041
inc eax
add [esi+esi*4+0x41],ah
add [esi+edi+0x40],cl
add [ebp+ecx*8+0x42],bl
add [eax-0x5bffbfc5],cl
cmp eax,[eax+0x0]
inc esp
inc edx
inc esp
add [edi+ebx*4+0x44],bh
add ah,bh
pop eax
inc esp
add [esp+edx*2+0x41],bh
add [edx+edi],dh
inc esp
add [ebx+edx*2],dl
inc esp
add al,bh
inc ebx
inc esp
add [eax+0x40004410],al
mov ebp,0xba240041
inc ecx
add [edx+edi*4],bl
inc ecx
add [eax-0x43],cl
inc ecx
add [eax-0x5fffbd3c],cl
cdq
inc esp
add [edi+ebx*4-0x6107ffbc],ch
inc esp
add [eax+0x3],dh
inc esp
add [esp+edx*4+0x44],ah
add [esp+edx*4-0x6f0fffbc],al
inc esp
add [eax-0x4bffbbfe],dh
add al,[eax+eax+0x4]
cmp al,0x44
add [eax],dh
cmp al,0x44
add al,dh
add al,0x44
add [ebp+eax*8+0x42],ah
add ah,ch
add al,0x44
add al,dh
adc [eax+eax-0x34],eax
test al,0x44
add [eax+0x2c004414],dh
adc eax,[eax+eax+0x1c]
fs inc esp
add [esp+edi-0x6ebbffbc],dh
inc esp
add [edx+edx*4],al
inc esp
add al,bh
mov [eax+eax-0x18],es
xchg eax,ecx
inc esp
add [eax+0x44],dh
inc esp
add [eax],bh
dec esp
inc esp
add [edx+ebx*2+0x44],ah
add [ecx+ecx*8-0x35c3ffbe],al
inc edx
add [edx+ecx*8+0x5afc0042],ch
inc esp
add [eax],ah
pop ebx
inc esp
add [ebx+ebx*2+0x59b80044],dh
inc esp
add [ebx+ecx*8-0x5873ffbe],dl
inc esp
add [eax],dh
xchg eax,ebx
inc esp
add al,ch
imul eax,[eax+eax+0x0],byte -0x59
inc esp
add [eax+0x5000448f],ah
test al,0x44
add [eax+0x44004492],bl
lds eax,[edx+0x0]
add bh,0x42
add [edi+eax*8],bh
inc edx
add al,ch
enter 0x42,0xb0
mov dword [edx+0x0],0x42c760
adc al,0xc8
inc edx
add [eax+ecx*8+0x42],cl
add [dword 0x69644554],al
jz 0x28a4a
rol ah,byte 0x9a
inc edx
add [edi],al
add eax,0x69644554
jz 0x28a8c
cdq
inc edx
add [ecx+ebx*4],ch
inc edx
add [eax+0x0],cl
or [ebx+0x74],dl
fs inc ebx
jz 0x28b4e
insb
jnc 0x28b1a
add ah,bh
mov bl,0x43
add [ebx+0x0],bl
add bh,bh
or al,0x6
inc esp
add [ecx],al
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax],al
push cs
add [dword 0x67696c41],al
outsb
pushfd
mov esp,0x610043
add bh,bh
add byte [ebx],0x44
add [esp+eax+0x44],bl
add [eax+0x3],al
sldt [edi]
inc ecx
outsb
arpl [eax+0x6f],bp
jc 0x28b95
add [eax],dl
inc eax
add [eax+0x2],bl
add bh,bh
pop eax
add al,[eax]
inc dword [ecx]
add [eax],al
add [eax],al
add [eax],al
add byte [ecx],0x0
add [eax],al
adc [eax],al
or al,[ecx+0x75]
jz 0x28bb0
push ebx
gs insb
arpl [gs:eax+eax+0x10],si
inc eax
add [edi+0x2],dl
add bh,bh
pushad
add [eax],al
inc byte [ecx]
add [eax],al
add [eax],al
add [eax],al
add byte [ecx],0x0
add [eax],al
adc [eax],eax
or [ecx+0x75],al
jz 0x28bd5
push ebx
imul edi,[edx+0x65],dword 0x43cf38
xchg eax,edx
add [eax],eax
db 0xff
mov eax,0x10044a1
add [eax],al
add [eax],al
add [eax],al
or byte [edi],0x0
add [eax],al
adc al,[eax]
or al,[edx+0x65]
jna 0x28bee
insb
inc ebp
gs jnc 0x28b3c
into
inc ebx
add [ebx+0x74ff0001],dl
mov eax,[0x10044]
add [eax],al
add [eax],al
add [eax],al
add al,[eax]
add [eax],al
adc eax,[eax]
or al,[edx+0x65]
jna 0x28c13
insb
dec ecx
outsb
outsb
gs jc 0x28c05
iretd
inc ebx
add [ebp-0x1700ffff],dl
mov eax,[0x10044]
add [eax],al
add [eax],al
add [eax+0x0],al
adc al,0x0
or [edx+0x65],eax
jna 0x28c38
insb
dec ebx
imul ebp,[esi+0x64],dword 0x43ceac
xchg eax,esp
add [eax],eax
push dword [ecx+0x44]
add [ecx],al
add [eax],al
add [ecx],al
add [eax],al
add [ecx],al
add [eax],al
add [dword 0x65420a00],dl
jna 0x28c5c
insb
dec edi
jnz 0x28c6f
gs jc 0x28b92
iretd
inc ebx
add [eax+0x8ff0001],bl
mov [0x10044],al
add [eax],al
add [eax],al
add [eax+0x1],al
push ss
add [edx],cl
inc edx
gs jna 0x28c81
insb
push edi
imul esp,[esp+esi*2+0x68],dword 0x412280
pop edi
add [eax],al
push dword [eax+eax+0x0]
db 0xfe
mov esp,0x4413
add [eax],al
add byte [eax],0x0
add [eax+0x42080017],al
imul eax,[ecx+ebp*2+0x4d],dword 0xc465646f
sub eax,[ebp+0x0]
push esp
add al,[eax]
db 0xff
js 0x28c14
inc edx
add [ecx],al
add [eax],al
add [eax],al
add [eax],al
add byte [ecx],0x0
add [eax],al
sbb [eax],al
or eax,[edx+0x6f]
jc 0x28cc8
gs jc 0x28cba
jz 0x28ce2
insb
gs pop esp
xchg eax,edi
inc edx
add [ebx+0x2],bl
add bh,bh
pushfd
lds eax,[edx+0x0]
add [eax],eax
add [eax],al
add [eax],al
add [eax+0x0],al
sbb [eax],eax
or [ebx+0x68],al
popad
jc 0x28cce
popad
jnc 0x28cf3
xor ch,ch
inc ecx
add [eax+0x0],dh
add bh,bh
cmp [esp+eax*2],dl
add [esp+edx+0x44],al
add [eax-0xfffffb],al
sbb al,[eax]
add eax,0x6f6c6f43
jc 0x28cf3
mov ebp,0x740043
add bh,bh
insb
ds inc esp
add [ecx],al
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax+0x430b001b],al
outsd
outsb
jnc 0x28d42
jc 0x28d31
imul ebp,[esi+0x74],dword 0x40100073
add cl,bl
add [eax],eax
db 0xff
clc
xchg eax,esp
inc esp
add [edx*4+0x44],bl
add [eax-0x80000000],al
sbb al,0x0
add eax,0x336c7443
inc esp
in al,0xb3
inc ebx
add [esi+0x0],bh
add bh,bh
jng 0x28cfe
add bh,bh
add [eax],eax
add [eax],al
add [eax],al
add [eax-0xc],al
sbb eax,0x72440a00
popad
inc ebx
jnz 0x28d88
jnc 0x28d87
jc 0x28d12
mov ebx,0x8f0043
add bh,bh
pop dword [eax]
add bh,bh
add [eax],eax
add [eax],al
add [eax],al
add [eax+0x0],al
push ds
add [eax],cl
inc esp
jc 0x28d98
dec ebx
imul ebp,[esi+0x64],dword 0x43bb70
pop ebp
add [eax],al
jmp dword [eax+eax+0x0]
inc byte [ecx]
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax],al
pop ds
add [eax],cl
inc esp
jc 0x28dbb
dec ebp
outsd
add [gs:eax],dl
inc eax
add [eax+0x0],dl
add dh,bh
push dword 0x94fe0000
cmp [eax+eax+0x0],eax
add [eax],al
add byte [ecx],0x0
add [eax],al
and [eax],al
pop es
inc ebp
outsb
popad
bound ebp,[ebp+0x64]
call dword 0x6802cf77
add [eax],al
dec dword [ebx+edx+0x139c0044]
inc esp
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax+0x46040021],al
outsd
outsb
jz 0x28da1
adc [eax+0x0],al
pop ecx
add al,[eax]
push dword [eax+0x10042c5]
add [eax],al
add [eax],al
add [eax],al
add byte [ecx],0x0
add [eax],al
and al,[eax]
or eax,0x65646948
push ebx
gs insb
arpl [gs:ecx+ebp*2+0x6f],si
outsb
lock int 0x43
add [eax-0x4700ffff],bh
add [eax],eax
inc dword [ecx]
add [eax],al
add [eax],al
add [eax],al
add byte [ebx],0x0
add [eax],al
and eax,[eax]
pop es
dec ecx
insd
gs dec ebp
outsd
gs or dh,0x43
add [ecx+eax+0x1bcff00],bh
add bh,bh
add [eax],eax
add [eax],al
add [eax],al
add [eax-0x80000000],al
and al,0x0
pop es
dec ecx
insd
gs dec esi
popad
insd
gs cmp al,0x10
inc eax
add [eax+0x2],dl
add bh,bh
db 0xc4
lds eax,[edx+0x0]
add [eax],eax
add [eax],al
add [eax],al
add [eax+0x0],al
and eax,0x614d0900
js 0x28e77
gs outsb
jz 0x28e98
add [eax],dl
inc eax
add [edx+0x2],bl
add bh,bh
hlt
lds eax,[edx+0x0]
add [eax],eax
add [eax],al
add [eax],al
add [eax+0x0],al
add [es:edx],cl
dec edi
inc ebp
dec ebp
inc ebx
outsd
outsb
jna 0x28eb8
jc 0x28ec9
add [eax],dl
inc eax
add [eax+0x0],ah
add bh,bh
jo 0x28e5f
add dh,bh
add [eax],eax
add [eax],al
add [eax],al
add [eax+0x1],al
daa
add [esi],cl
push eax
popad
jc 0x28ed9
outsb
jz 0x28eb9
imul eax,[ecx+ebp*2+0x4d],dword 0x65646f
adc [eax+0x0],al
pop edx
add [eax],al
dec dword [esp+edx+0x10044]
add [eax],al
add [eax],al
add [eax+0x0],al
sub [eax],al
or edx,[eax+0x61]
jc 0x28f02
outsb
jz 0x28ee3
outsd
insb
outsd
jc 0x28ea5
adc [eax+0x0],al
fld qword [ecx]
add bh,bh
sub [ebp+0x10044],dl
add [eax],al
add [eax],al
add [eax+0x1],al
sub [eax],eax
or edx,[eax+0x61]
jc 0x28f28
outsb
jz 0x28f09
jz 0x28f34
xor eax,[eax+eax+0x10]
inc eax
add [ecx+0x0],bl
add bh,bh
les edx,[ebx]
inc esp
add [ecx],al
add [eax],al
add [eax],al
add [eax],al
add byte [ecx],0x0
add [eax],al
sub al,[eax]
or dl,[eax+0x61]
jc 0x28f4e
outsb
jz 0x28f32
outsd
outsb
jz 0x28ef0
adc [eax+0x0],al
mov es,[eax]
add bh,bh
or al,0x14
inc esp
add [ecx],al
add [eax],al
add [eax],al
add [eax],al
add byte [ecx],0x0
add [eax],al
sub eax,[eax]
push cs
push eax
popad
jc 0x28f73
outsb
jz 0x28f64
push dword 0x6948776f
outsb
jz 0x28f41
adc [eax+0x0],al
push ebp
add al,[eax]
db 0xff
js 0x28ee8
inc edx
add [ecx],al
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax],al
sub al,0x0
or al,0x50
popad
jnc 0x28faa
ja 0x28fa8
jc 0x28f9f
inc ebx
push dword 0x556c7261
inc ebx
add [eax+0x4cff0000],al
adc al,[eax+eax+0x1]
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax+0x5009002d],al
outsd
jo 0x28fd3
jo 0x28fad
gs outsb
jnz 0x28f64
adc [eax+0x0],al
push esi
add al,[eax]
inc dword [eax]
mov dword [edx+0x0],0x1
add [eax],al
add [eax+0x0],al
add [cs:eax],cl
push edx
gs popad
fs dec edi
outsb
insb
jns 0x28f87
adc [eax+0x0],al
lea eax,[eax]
add bh,bh
call dword 0xb002d3a6
adc eax,[eax+eax+0x0]
add [eax],al
add byte [eax],0x0
add [eax+0x5308002f],al
push dword 0x6948776f
outsb
jz 0x28fd6
mov esp,0x95540043
inc esp
add ah,dl
xchg eax,ebp
inc esp
add [ecx],al
add [eax],al
add [eax],al
add [eax],al
cmp bh,0xff
db 0xff
push dword [eax]
add [eax],cl
push esp
popad
bound ecx,[edi+0x72]
gs jc 0x28fcd
adc [eax+0x0],al
fadd dword [ecx]
add bh,bh
in al,dx
xchg eax,ebp
inc esp
add [ecx],al
add [eax],al
add [eax],al
add [eax],al
add byte [ecx],0x0
add [eax],al
or eax,0x61540700
db 0x62
push ebx
jz 0x2905c
jo 0x29033
mov esp,0x12980043
inc esp
add al,cl
adc al,[eax+eax+0x1]
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax+0x54040031],al
gs js 0x29081
add [eax],dl
inc eax
add [edi+0x0],dl
add bh,bh
mov eax,0xf4004411
cmp [eax+eax+0x0],eax
add [eax],al
add byte [ecx],0x0
add [eax],al
xor al,[eax]
pop es
push esi
imul esi,[ebx+0x69],dword 0xc8656c62
and eax,[ecx+0x0]
pushad
add al,[eax]
jmp dword [eax+0x2]
add bh,bh
add [eax],eax
add [eax],al
add [eax],al
add [eax-0x80000000],al
xor eax,[eax]
or [edi+0x6e],cl
inc ebx
push dword 0x65676e61
enter 0x4123,0x0
adc [ecx],al
add bh,bh
adc [ecx],al
add bh,bh
adc al,0x3a
inc esp
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax+0x4f070034],al
outsb
inc ebx
insb
imul esp,[ebx+0x6b],dword 0x43c82c
and [ecx],al
add bh,bh
and [ecx],al
add bh,bh
add [eax],eax
add [eax],al
add [eax],al
add [eax-0x80000000],al
xor eax,0x6e4f0e00
inc ebx
outsd
outsb
jz 0x290fb
js 0x2910c
push eax
outsd
jo 0x29111
jo 0x29066
and eax,[ecx+0x0]
sbb [ecx],al
add bh,bh
sbb [ecx],al
add bh,bh
add [eax],eax
add [eax],al
add [eax],al
add [eax-0x80000000],al
add [ss:edx],cl
dec edi
outsb
inc esp
bound ebp,[ebx+eax*2+0x6c]
imul esp,[ebx+0x6b],dword 0x43c2f0
fadd dword [eax]
add bh,bh
fadd dword [eax]
add bh,bh
add [eax],eax
add [eax],al
add [eax],al
add [eax-0x80000000],al
aaa
add [edx],cl
dec edi
outsb
inc esp
jc 0x29143
inc esp
jc 0x29155
jo 0x29150
ret 0x43
loopne 0x290ed
add bh,bh
loopne 0x290f1
add bh,bh
add [eax],eax
add [eax],al
add [eax],al
add [eax-0x80000000],al
cmp [eax],al
or cl,[edi+0x6e]
inc esp
jc 0x29168
dec edi
jna 0x29170
jc 0x290a5
ret
inc ebx
add al,bh
add [eax],al
db 0xff
clc
add [eax],al
inc dword [ecx]
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax+0x4f090039],al
outsb
inc ebp
outsb
fs inc esp
outsd
arpl [ebx-0x68],bp
ret
inc ebx
add [eax],cl
add [eax],eax
dec dword [eax]
add [eax],eax
inc dword [ecx]
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax+0x4f09003a],al
outsb
inc ebp
outsb
fs inc esp
jc 0x291b4
enter 0x4123,0x0
lock add [eax],eax
push eax
add [eax],eax
inc dword [ecx]
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax+0x4f07003b],al
outsb
inc ebp
outsb
jz 0x291da
jc 0x2913f
and eax,[ecx+0x0]
clc
add [eax],eax
db 0xff
clc
add [eax],eax
inc dword [ecx]
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax+0x4f06003c],al
outsb
inc ebp
js 0x291ff
jz 0x29178
rol dword [ebx+0x0],byte 0x8
add al,[eax]
dec dword [eax]
add al,[eax]
inc dword [ecx]
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax+0x4f09003d],al
outsb
dec ebx
gs jns 0x291fc
outsd
ja 0x29229
sub al,0xc2
inc ebx
add [eax],dl
add al,[eax]
call dword [eax]
add al,[eax]
inc dword [ecx]
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax+0x4f0a003e],al
outsb
dec ebx
gs jns 0x2922c
jc 0x29243
jnc 0x29253
loopne 0x291a3
inc ebx
add [eax],bl
add al,[eax]
call dword far [eax]
add al,[eax]
inc dword [ecx]
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax+0x4f07003f],al
outsb
dec ebx
gs jns 0x29256
jo 0x2922b
rol dword [ebx+0x0],byte 0x28
add [eax],eax
jmp dword far [eax]
add [eax],eax
inc dword [ecx]
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax+0x4f0f0040],al
outsb
dec ebp
outsd
jnz 0x29296
gs inc ecx
arpl [ecx+ebp*2+0x76],si
popad
jz 0x29291
dec esp
rol byte [ebx+0x0],byte 0xc0
add [eax],al
inc eax
add [eax],al
inc dword [ecx]
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax+0x4f0b0041],al
outsb
dec ebp
outsd
jnz 0x292c0
gs inc esp
outsd
ja 0x292c0
enter 0x4123,0x0
cmp [ecx],al
add bh,bh
cmp [ecx],al
add bh,bh
add [eax],eax
add [eax],al
add [eax],al
add [eax-0x80000000],al
inc edx
add [edi+ecx*2],cl
outsb
dec ebp
outsd
jnz 0x292e6
gs inc ebp
outsb
jz 0x292dd
jc 0x29242
and eax,[ecx+0x0]
xor [ecx],al
add bh,bh
xor [ecx],al
add bh,bh
add [eax],eax
add [eax],al
add [eax],al
add [eax-0x80000000],al
inc ebx
add [edi+ecx*2],cl
outsb
dec ebp
outsd
jnz 0x2930d
gs dec esp
gs popad
jna 0x29305
db 0xc4
rol byte [ebx+0x0],byte 0xc8
add [eax],al
dec eax
add [eax],al
inc dword [ecx]
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax+0x4f0b0044],al
outsb
dec ebp
outsd
jnz 0x29334
gs dec ebp
outsd
jna 0x2932b
dec esp
rol byte [ebx+0x0],byte 0xd0
add [eax],al
call eax
add [eax],al
inc dword [ecx]
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax+0x4f090045],al
outsb
dec ebp
outsd
jnz 0x2935a
gs push ebp
jo 0x29343
lds eax,[ebx+0x0]
lock add [eax],al
push eax
add [eax],al
inc dword [ecx]
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax+0x4f0b0046],al
outsb
push ebx
jz 0x2936b
jc 0x29380
inc esp
outsd
arpl [ebx+0x50],bp
ret
inc ebx
add [eax],al
add [eax],eax
inc dword [eax]
add [eax],eax
inc dword [ecx]
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax+0x4f0b0047],al
outsb
push ebx
jz 0x29391
jc 0x293a6
inc esp
jc 0x29396
mov eax,eax
cmp al,0xa3
inc edx
add [ebx],al
or al,0x54
push ebx
arpl [edx+0x6f],si
insb
insb
push ebx
jz 0x293c1
insb
add [gs:eax],eax
add [eax],al
add [ebx],al
add [eax],al
add [eax],bh
mov [0x73060042],eax
jnc 0x293a9
outsd
outsb
gs or al,0x73
jnc 0x293aa
outsd
jc 0x293ce
jpe 0x293d6
outsb
jz 0x293cb
insb
or dh,[ebx+0x73]
push esi
gs jc 0x293e6
imul esp,[ebx+0x61],dword 0x7373066c
inc edx
outsd
jz 0x293e5
or [ebx+0x74],dl
fs inc ebx
jz 0x293f6
insb
jnc 0x29312
rcl ah,byte 0xa3
inc edx
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
movsd
inc edx
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add ah,dl
movsb
inc edx
add dh,ch
movsb
inc edx
add [edx+eax+0x0],bh
add [eax+0x28004297],ch
mov ebp,0x3e440041
inc eax
add [esi+esi*4+0x41],ah
add [esi+edi+0x40],cl
add [ebp+ecx*8+0x42],bl
add [eax-0x5bffbfc5],cl
cmp eax,[eax+0x0]
enter 0x42d4,0x0
jl 0x29375
inc esp
add ah,bh
pop eax
inc esp
add [esp+edx*2+0x41],bh
add ah,cl
salc
inc edx
add [ebx+edx*2],dl
inc esp
add al,bh
inc ebx
inc esp
add [eax+0x40004410],al
mov ebp,0xba240041
inc ecx
add [edx+edi*4],bl
inc ecx
add [eax-0x43],cl
inc ecx
add [eax],bh
aam 0x42
add [eax-0x53ffbb67],ah
lahf
inc esp
add al,bh
sahf
inc esp
add [eax+0x3],dh
inc esp
add [esp+edx*4+0x44],ah
add [esp+edx*4-0x6f0fffbc],al
inc esp
add [eax-0x4bffbbfe],dh
add al,[eax+eax+0x4]
cmp al,0x44
add [eax],dh
cmp al,0x44
add al,dh
add al,0x44
add [ebp+eax*8+0x42],ah
add ah,ch
add al,0x44
add al,dh
adc [eax+eax-0x34],eax
test al,0x44
add [eax+0x2c004414],dh
adc eax,[eax+eax+0x1c]
fs inc esp
add [esp+edi-0x6ebbffbc],dh
inc esp
add [edx+edx*4],al
inc esp
add al,bh
mov [eax+eax-0x18],es
xchg eax,ecx
inc esp
add [eax+0x44],dh
inc esp
add [eax],bh
dec esp
inc esp
add [edx+ebx*2+0x44],ah
add al,bh
aam 0x42
add [ebp+edx*8+0x42],bl
add [edx+ecx*8+0x5afc0042],ch
inc esp
add [eax],ah
pop ebx
inc esp
add [ebx+ebx*2+0x59b80044],dh
inc esp
add [ebx+ecx*8-0x5873ffbe],dl
inc esp
add [eax],dh
xchg eax,ebx
inc esp
add al,ch
imul eax,[eax+eax+0x0],byte -0x59
inc esp
add [eax+0x5000448f],ah
test al,0x44
add [eax+0x44004492],bl
lds eax,[edx+0x0]
add bh,0x42
add [edi+eax*8],bh
inc edx
add al,ch
enter 0x42,0xb0
mov dword [edx+0x0],0x42c760
adc al,0xc8
inc edx
add [eax+ecx*8+0x42],cl
add [esi+edx*8],ch
inc edx
add [eax+0x40042d6],cl
add [edi-0x47ff7e00],al
dec edx
push dword [eax]
xlatb
inc edx
add [edi+edx*8+0x42],ah
add [edi+edx*8+0x42],ch
add ah,al
salc
inc edx
add [ebx],cl
push esp
inc ebx
jnz 0x29566
jz 0x29564
insd
dec ebp
gs insd
outsd
mov eax,eax
add [ebp+0xb070042],ah
push esp
inc ebx
jnz 0x29579
jz 0x29577
insd
dec ebp
gs insd
outsd
aam 0xa3
inc edx
add [ecx+ebx*4],ch
inc edx
add [esi],cl
add [eax],cl
push ebx
jz 0x2957f
inc ebx
jz 0x29590
insb
jnc 0x29521
add [ebx+0x42a570c0],cl
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [esi+0x42],bh
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax-0x5a],dh
inc edx
add [eax-0x77fffffe],al
mov [0xbd280042],eax
inc ecx
add [esi+edi+0x40],al
add [esi+esi*4+0x41],ah
add [esi+edi+0x40],cl
add [ebp+ecx*8+0x42],bl
add [eax-0x5bffbfc5],cl
cmp eax,[eax+0x0]
enter 0x42d4,0x0
jl 0x29511
inc esp
add ah,bh
pop eax
inc esp
add [esp+edx*2+0x41],bh
add ah,cl
salc
inc edx
add [ebx+edx*2],dl
inc esp
add al,bh
inc ebx
inc esp
add [eax+0x40004410],al
mov ebp,0xba240041
inc ecx
add [edx+edi*4],bl
inc ecx
add [eax-0x43],cl
inc ecx
add [eax],bh
aam 0x42
add [eax-0x53ffbb67],ah
lahf
inc esp
add al,bh
sahf
inc esp
add [eax+0x3],dh
inc esp
add [esp+edx*4+0x44],ah
add [esp+edx*4-0x6f0fffbc],al
inc esp
add [eax-0x4bffbbfe],dh
add al,[eax+eax+0x4]
cmp al,0x44
add [eax],dh
cmp al,0x44
add al,dh
add al,0x44
add [ebp+eax*8+0x42],ah
add ah,ch
add al,0x44
add al,dh
adc [eax+eax-0x34],eax
test al,0x44
add [eax+0x2c004414],dh
adc eax,[eax+eax+0x1c]
fs inc esp
add [esp+edi-0x6ebbffbc],dh
inc esp
add [edx+edx*4],al
inc esp
add al,bh
mov [eax+eax-0x18],es
xchg eax,ecx
inc esp
add [eax+0x44],dh
inc esp
add [eax],bh
dec esp
inc esp
add [edx+ebx*2+0x44],ah
add al,bh
aam 0x42
add [ebp+edx*8+0x42],bl
add [edx+ecx*8+0x5afc0042],ch
inc esp
add [eax],ah
pop ebx
inc esp
add [ebx+ebx*2+0x59b80044],dh
inc esp
add [ebx+ecx*8-0x5873ffbe],dl
inc esp
add [eax],dh
xchg eax,ebx
inc esp
add al,ch
imul eax,[eax+eax+0x0],byte -0x59
inc esp
add [eax+0x5000448f],ah
test al,0x44
add [eax+0x44004492],bl
lds eax,[edx+0x0]
add bh,0x42
add [edi+eax*8],bh
inc edx
add al,ch
enter 0x42,0xb0
mov dword [edx+0x0],0x42c760
adc al,0xc8
inc edx
add [eax+ecx*8+0x42],cl
add [esi+edx*8],ch
inc edx
add [eax+0x50042d6],cl
push esp
dec ebp
gs insd
outsd
mov eax,eax
jl 0x29620
inc edx
add [edi],al
add eax,0x6d654d54
outsd
jo 0x2962a
inc edx
add ah,bh
movsb
inc edx
add [eax+0x0],cl
or [ebx+0x74],dl
fs inc ebx
jz 0x29706
insb
jnc 0x296d2
add ah,bh
mov bl,0x43
add [ebx+0x0],bl
add bh,bh
or al,0x6
inc esp
add [ecx],al
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax],al
push cs
add [dword 0x67696c41],al
outsb
xor al,0x22
inc ecx
add [edx+eax+0x0],dh
jmp esp
salc
inc edx
add [ecx],al
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax],al
str [ecx]
inc ecx
insb
imul esp,[edi+0x6e],dword 0x746e656d
pushfd
mov esp,0x610043
add bh,bh
add byte [ebx],0x44
add [esp+eax+0x44],bl
add [eax+0x3],al
adc [eax],al
pop es
inc ecx
outsb
arpl [eax+0x6f],bp
jc 0x29771
cmp bh,cl
inc ebx
add [edx-0x4700ffff],dl
mov eax,[0x10044]
add [eax],al
add [eax],al
add [eax+0xf],al
adc [eax],eax
or al,[edx+0x65]
jna 0x29782
insb
inc ebp
gs jnc 0x296d0
into
inc ebx
add [ebx+0x74ff0001],dl
mov eax,[0x10044]
add [eax],al
add [eax],al
add [eax],al
add al,[eax]
add [eax],al
adc al,[eax]
or al,[edx+0x65]
jna 0x297a7
insb
dec ecx
outsb
outsb
gs jc 0x29799
iretd
inc ebx
add [ebp-0x1700ffff],dl
mov eax,[0x10044]
add [eax],al
add [eax],al
add [eax+0x0],al
adc eax,[eax]
or [edx+0x65],eax
jna 0x297cc
insb
dec ebx
imul ebp,[esi+0x64],dword 0x43ceac
xchg eax,esp
add [eax],eax
push dword [ecx+0x44]
add [ecx],al
add [eax],al
add [ecx],al
add [eax],al
add [ecx],al
add [eax],al
add [eax+eax],dl
or al,[edx+0x65]
jna 0x297f0
insb
dec edi
jnz 0x29803
gs jc 0x29712
and al,[ecx+0x0]
pop edi
add [eax],al
push dword [eax+eax+0x0]
db 0xfe
mov esp,0x4413
add [eax],al
add byte [eax],0x0
add [eax+0x42080015],al
imul eax,[ecx+ebp*2+0x4d],dword 0xc465646f
sub eax,[ebp+0x0]
push esp
add al,[eax]
db 0xff
js 0x29783
inc edx
add [ecx],al
add [eax],al
add [eax],al
add [eax],al
add byte [ecx],0x0
add [eax],al
push ss
add [ebx],cl
inc edx
outsd
jc 0x29837
gs jc 0x29829
jz 0x29851
insb
gs xor ch,ch
inc ecx
add [eax+0x0],dh
add bh,bh
cmp [esp+eax*2],dl
add [esp+edx+0x44],al
add [eax-0xfffffb],al
pop ss
add [dword 0x6f6c6f43],al
jc 0x2983f
mov ebp,0x740043
add bh,bh
insb
ds inc esp
add [ecx],al
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax+0x430b0018],al
outsd
outsb
jnc 0x2988e
jc 0x2987d
imul ebp,[esi+0x74],dword 0x40100073
add cl,bl
add [eax],eax
db 0xff
clc
xchg eax,esp
inc esp
add [edx*4+0x44],bl
add [eax-0x80000000],al
sbb [eax],eax
add eax,0x336c7443
inc esp
in al,0xb3
inc ebx
add [esi+0x0],bh
add bh,bh
jng 0x2984a
add bh,bh
add [eax],eax
add [eax],al
add [eax],al
add [eax-0xc],al
sbb al,[eax]
or al,[edx+esi*2+0x61]
inc ebx
jnz 0x298d4
jnc 0x298d3
jc 0x2985e
mov ebx,0x8f0043
add bh,bh
pop dword [eax]
add bh,bh
add [eax],eax
add [eax],al
add [eax],al
add [eax+0x0],al
sbb eax,[eax]
or [edx+esi*2+0x61],al
dec ebx
imul ebp,[esi+0x64],dword 0x43bb70
pop ebp
add [eax],al
jmp dword [eax+eax+0x0]
inc byte [ecx]
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax],al
sbb al,0x0
or [edx+esi*2+0x61],al
dec ebp
outsd
add [gs:eax],dl
inc eax
add [eax+0x0],dl
add dh,bh
push dword 0x94fe0000
cmp [eax+eax+0x0],eax
add [eax],al
add byte [ecx],0x0
add [eax],al
sbb eax,0x6e450700
popad
bound ebp,[ebp+0x64]
call dword 0x6802dac3
add [eax],al
dec dword [ebx+edx+0x139c0044]
inc esp
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax+0x4604001e],al
outsd
outsb
jz 0x298ed
adc [eax+0x0],al
pop ecx
add al,[eax]
push dword [eax+0x10042c5]
add [eax],al
add [eax],al
add [eax],al
add byte [ecx],0x0
add [eax],al
pop ds
add [dword 0x65646948],cl
push ebx
gs insb
arpl [gs:ecx+ebp*2+0x6f],si
outsb
lock int 0x43
add [eax-0x4700ffff],bh
add [eax],eax
inc dword [ecx]
add [eax],al
add [eax],al
add [eax],al
add byte [ebx],0x0
add [eax],al
and [eax],al
pop es
dec ecx
insd
gs dec ebp
outsd
gs or dh,0x43
add [ecx+eax+0x1bcff00],bh
add bh,bh
add [eax],eax
add [eax],al
add [eax],al
add [eax-0x80000000],al
and [eax],eax
pop es
dec ecx
insd
gs dec esi
popad
insd
gs mov ah,0x2e
inc ecx
add [eax+0x2],dh
add bh,bh
clc
salc
inc edx
add [ecx],al
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax+0x4c050022],al
imul ebp,[esi+0x65],dword 0x40103c73
add [eax+0x2],dl
add bh,bh
db 0xc4
lds eax,[edx+0x0]
add [eax],eax
add [eax],al
add [eax],al
add [eax+0x0],al
and eax,[eax]
or [ebp+0x61],ecx
js 0x299e3
gs outsb
jz 0x29a04
add [eax],dl
inc eax
add [edx+0x2],bl
add bh,bh
hlt
lds eax,[edx+0x0]
add [eax],eax
add [eax],al
add [eax],al
add [eax+0x0],al
and al,0x0
or cl,[edi+0x45]
dec ebp
inc ebx
outsd
outsb
jna 0x29a24
jc 0x29a35
add [eax],dl
inc eax
add [eax+0x0],ah
add bh,bh
jo 0x299cb
add dh,bh
add [eax],eax
add [eax],al
add [eax],al
add [eax+0x1],al
and eax,0x61500e00
jc 0x29a45
outsb
jz 0x29a25
imul eax,[ecx+ebp*2+0x4d],dword 0x65646f
adc [eax+0x0],al
pop edx
add [eax],al
dec dword [esp+edx+0x10044]
add [eax],al
add [eax],al
add [eax+0x0],al
add [es:ebx],cl
push eax
popad
jc 0x29a6e
outsb
jz 0x29a4f
outsd
insb
outsd
jc 0x29a11
adc [eax+0x0],al
fld qword [ecx]
add bh,bh
sub [ebp+0x10044],dl
add [eax],al
add [eax],al
add [eax+0x1],al
daa
add [ebx],cl
push eax
popad
jc 0x29a94
outsb
jz 0x29a75
jz 0x29aa0
xor eax,[eax+eax+0x10]
inc eax
add [ecx+0x0],bl
add bh,bh
les edx,[ebx]
inc esp
add [ecx],al
add [eax],al
add [eax],al
add [eax],al
add byte [ecx],0x0
add [eax],al
sub [eax],al
or dl,[eax+0x61]
jc 0x29aba
outsb
jz 0x29a9e
outsd
outsb
jz 0x29a5c
adc [eax+0x0],al
mov es,[eax]
add bh,bh
or al,0x14
inc esp
add [ecx],al
add [eax],al
add [eax],al
add [eax],al
add byte [ecx],0x0
add [eax],al
sub [eax],eax
push cs
push eax
popad
jc 0x29adf
outsb
jz 0x29ad0
push dword 0x6948776f
outsb
jz 0x29af1
push ebp
inc ebx
add [eax+0x4cff0000],al
adc al,[eax+eax+0x1]
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax+0x5009002a],al
outsd
jo 0x29b18
jo 0x29af2
gs outsb
jnz 0x29aa9
adc [eax+0x0],al
push esi
add al,[eax]
inc dword [eax]
mov dword [edx+0x0],0x1
add [eax],al
add [eax+0x0],al
sub eax,[eax]
or [edx+0x65],dl
popad
fs dec edi
outsb
insb
jns 0x29b04
mov [0x2750042],eax
add bh,bh
or bh,dl
inc edx
add [ecx],al
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax],al
sub al,0x0
or dl,[ebx+0x63]
jc 0x29b59
insb
insb
inc edx
popad
jc 0x29b63
add [eax],dl
inc eax
add [ebp-0x17010000],cl
adc eax,[eax+eax-0x50]
adc eax,[eax+eax+0x0]
add [eax],al
add byte [eax],0x0
add [eax+0x5308002d],al
push dword 0x6948776f
outsb
jz 0x29b40
mov esp,0x95540043
inc esp
add ah,dl
xchg eax,ebp
inc esp
add [ecx],al
add [eax],al
add [eax],al
add [eax],al
cmp bh,0xff
db 0xff
jmp dword far [esi]
add [eax],cl
push esp
popad
bound ecx,[edi+0x72]
gs jc 0x29b37
adc [eax+0x0],al
fadd dword [ecx]
add bh,bh
in al,dx
xchg eax,ebp
inc esp
add [ecx],al
add [eax],al
add [eax],al
add [eax],al
add byte [ecx],0x0
add [eax],al
or eax,0x61540700
db 0x62
push ebx
jz 0x29bc6
jo 0x29b59
adc [eax+0x0],al
push edi
add [eax],al
db 0xff
mov eax,0xf4004411
cmp [eax+eax+0x0],eax
add [eax],al
add byte [ecx],0x0
add [eax],al
das
add [edi],al
push esi
imul esi,[ebx+0x69],dword 0x656c62
adc [eax+0x0],al
ja 0x29b82
add bh,bh
ja 0x29b86
add bh,bh
add [eax],eax
add [eax],al
add [eax],al
add [eax+0x1],al
xor [eax],al
or edx,[edi+0x61]
outsb
jz 0x29bec
gs jz 0x29c12
jc 0x29c0d
jnc 0x29ba1
adc [eax+0x0],al
js 0x29ba8
add bh,bh
js 0x29bac
add bh,bh
add [eax],eax
add [eax],al
add [eax],al
add [eax+0x0],al
xor [eax],eax
or [edi+0x61],dl
outsb
jz 0x29c14
popad
db 0x62
jnc 0x29bc4
adc [eax+0x0],al
jna 0x29bcb
add bh,bh
sbb al,0xd7
inc edx
add [ecx],al
add [eax],al
add [eax],al
add [eax],al
add byte [ecx],0x0
add [eax],al
xor al,[eax]
or [edi+0x6f],dl
jc 0x29c46
push edi
jc 0x29c46
jo 0x29baf
and eax,[ecx+0x0]
pushad
add al,[eax]
jmp dword [eax+0x2]
add bh,bh
add [eax],eax
add [eax],al
add [eax],al
add [eax-0x80000000],al
xor eax,[eax]
or [edi+0x6e],cl
inc ebx
push dword 0x65676e61
enter 0x4123,0x0
adc [ecx],al
add bh,bh
adc [ecx],al
add bh,bh
adc al,0x3a
inc esp
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax+0x4f070034],al
outsb
inc ebx
insb
imul esp,[ebx+0x6b],dword 0x43c82c
and [ecx],al
add bh,bh
and [ecx],al
add bh,bh
add [eax],eax
add [eax],al
add [eax],al
add [eax-0x80000000],al
xor eax,0x6e4f0e00
inc ebx
outsd
outsb
jz 0x29cb2
js 0x29cc3
push eax
outsd
jo 0x29cc8
jo 0x29c1d
and eax,[ecx+0x0]
sbb [ecx],al
add bh,bh
sbb [ecx],al
add bh,bh
add [eax],eax
add [eax],al
add [eax],al
add [eax-0x80000000],al
add [ss:edx],cl
dec edi
outsb
inc esp
bound ebp,[ebx+eax*2+0x6c]
imul esp,[ebx+0x6b],dword 0x43c2f0
fadd dword [eax]
add bh,bh
fadd dword [eax]
add bh,bh
add [eax],eax
add [eax],al
add [eax],al
add [eax-0x80000000],al
aaa
add [edx],cl
dec edi
outsb
inc esp
jc 0x29cfa
inc esp
jc 0x29d0c
jo 0x29d07
ret 0x43
loopne 0x29ca4
add bh,bh
loopne 0x29ca8
add bh,bh
add [eax],eax
add [eax],al
add [eax],al
add [eax-0x80000000],al
cmp [eax],al
or cl,[edi+0x6e]
inc esp
jc 0x29d1f
dec edi
jna 0x29d27
jc 0x29c5c
ret
inc ebx
add al,bh
add [eax],al
db 0xff
clc
add [eax],al
inc dword [ecx]
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax+0x4f090039],al
outsb
inc ebp
outsb
fs inc esp
outsd
arpl [ebx-0x68],bp
ret
inc ebx
add [eax],cl
add [eax],eax
dec dword [eax]
add [eax],eax
inc dword [ecx]
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax+0x4f09003a],al
outsb
inc ebp
outsb
fs inc esp
jc 0x29d6b
enter 0x4123,0x0
lock add [eax],eax
push eax
add [eax],eax
inc dword [ecx]
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax+0x4f07003b],al
outsb
inc ebp
outsb
jz 0x29d91
jc 0x29cf6
and eax,[ecx+0x0]
clc
add [eax],eax
db 0xff
clc
add [eax],eax
inc dword [ecx]
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax+0x4f06003c],al
outsb
inc ebp
js 0x29db6
jz 0x29d2f
rol dword [ebx+0x0],byte 0x8
add al,[eax]
dec dword [eax]
add al,[eax]
inc dword [ecx]
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax+0x4f09003d],al
outsb
dec ebx
gs jns 0x29db3
outsd
ja 0x29de0
sub al,0xc2
inc ebx
add [eax],dl
add al,[eax]
call dword [eax]
add al,[eax]
inc dword [ecx]
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax+0x4f0a003e],al
outsb
dec ebx
gs jns 0x29de3
jc 0x29dfa
jnc 0x29e0a
loopne 0x29d5a
inc ebx
add [eax],bl
add al,[eax]
call dword far [eax]
add al,[eax]
inc dword [ecx]
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax+0x4f07003f],al
outsb
dec ebx
gs jns 0x29e0d
jo 0x29de2
rol dword [ebx+0x0],byte 0x28
add [eax],eax
jmp dword far [eax]
add [eax],eax
inc dword [ecx]
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax+0x4f0f0040],al
outsb
dec ebp
outsd
jnz 0x29e4d
gs inc ecx
arpl [ecx+ebp*2+0x76],si
popad
jz 0x29e48
dec esp
rol byte [ebx+0x0],byte 0xc0
add [eax],al
inc eax
add [eax],al
inc dword [ecx]
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax+0x4f0b0041],al
outsb
dec ebp
outsd
jnz 0x29e77
gs inc esp
outsd
ja 0x29e77
enter 0x4123,0x0
cmp [ecx],al
add bh,bh
cmp [ecx],al
add bh,bh
add [eax],eax
add [eax],al
add [eax],al
add [eax-0x80000000],al
inc edx
add [edi+ecx*2],cl
outsb
dec ebp
outsd
jnz 0x29e9d
gs inc ebp
outsb
jz 0x29e94
jc 0x29df9
and eax,[ecx+0x0]
xor [ecx],al
add bh,bh
xor [ecx],al
add bh,bh
add [eax],eax
add [eax],al
add [eax],al
add [eax-0x80000000],al
inc ebx
add [edi+ecx*2],cl
outsb
dec ebp
outsd
jnz 0x29ec4
gs dec esp
gs popad
jna 0x29ebc
db 0xc4
rol byte [ebx+0x0],byte 0xc8
add [eax],al
dec eax
add [eax],al
inc dword [ecx]
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax+0x4f0b0044],al
outsb
dec ebp
outsd
jnz 0x29eeb
gs dec ebp
outsd
jna 0x29ee2
dec esp
rol byte [ebx+0x0],byte 0xd0
add [eax],al
call eax
add [eax],al
inc dword [ecx]
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax+0x4f090045],al
outsb
dec ebp
outsd
jnz 0x29f11
gs push ebp
jo 0x29efa
lds eax,[ebx+0x0]
lock add [eax],al
push eax
add [eax],al
inc dword [ecx]
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax+0x4f0b0046],al
outsb
push ebx
jz 0x29f22
jc 0x29f37
inc esp
outsd
arpl [ebx+0x50],bp
ret
inc ebx
add [eax],al
add [eax],eax
inc dword [eax]
add [eax],eax
inc dword [ecx]
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax+0x4f0b0047],al
outsb
push ebx
jz 0x29f48
jc 0x29f5d
inc esp
jc 0x29f4d
lea eax,[bx+si+0x0]
cmp al,0xaf
inc edx
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add al,dl
scasd
inc edx
add [eax+eax],ch
add [eax],al
clc
int3
inc ebx
add [eax],bh
ds inc eax
add [esi+edi+0x40],al
add [eax+0x3e],cl
inc eax
add [esi+edi+0x40],cl
add [eax+0x3e],al
inc eax
add [eax-0x5bffbfc5],cl
cmp eax,[eax+0x0]
adc al,0xbe
inc ecx
add [eax+0x480042d7],dl
mov esi,0xff240041
inc ebx
add [esi+edi*4+0x41],bh
add al,bl
inc dword [ebx+0x0]
int3
mov ebp,0xbe600041
inc ecx
add [esi+edi*4-0x257ffbf],dh
inc ebx
add [edi+edx*8-0x1cfffbe],dh
inc ebx
add [eax+0x1e],al
inc ebp
add al,dh
inc eax
inc esp
add [eax+eax],al
inc esp
add [eax-0x2],bh
inc ebx
add [eax-0x5bffbae2],dl
push ds
inc ebp
add al,dh
inc byte [ebx+0x0]
int3
push ds
inc ebp
add [edi+edi*8+0x43],cl
add ah,ch
xlatb
inc edx
add [eax-0x1],dh
inc ebx
add ah,bl
push ds
inc ebp
add al,bh
inc eax
inc esp
add [eax+eax+0x44],ch
add [eax+eax-0x6bffbc],ch
inc ebx
add al,dh
push ds
inc ebp
add ah,dh
push ds
inc ebp
add [eax+0x1c0043ff],bh
inc byte [ebx+0x0]
inc byte [fs:ebx+0x0]
mov al,0xfe
inc ebx
add [eax+0x6c0043fc],bh
inc dword [ebx+0x0]
nop
inc dword [ebx+0x0]
int3
add [eax+eax+0x11],al
push esp
inc edx
jnz 0x2a049
jz 0x2a046
outsb
inc ecx
arpl [ecx+ebp*2+0x6f],si
outsb
dec esp
imul ebp,[esi+0x6b],dword 0xb030c08b
inc edx
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax-0x4f],al
inc edx
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],dl
mov cl,0x42
add [edx],ch
mov cl,0x42
add [edx+eax+0x0],dl
add [ecx+edx*8],bl
inc ebx
add [eax],ch
mov ebp,0x3e440041
inc eax
add [esi+esi*4+0x41],ah
add [esi+edi+0x40],cl
add [ecx+ebp*2],bh
inc esp
add [eax-0x5bffbfc5],cl
cmp eax,[eax+0x0]
inc esp
inc edx
inc esp
add [edi+ebx*4+0x44],bh
add ah,bh
pop eax
inc esp
add [esp+edx*2+0x41],bh
add [edx+edi],dh
inc esp
add [ebx+edx*2],dl
inc esp
add al,bh
inc ebx
inc esp
add [eax+0x40004410],al
mov ebp,0xba240041
inc ecx
add [edx+edi*4],bl
inc ecx
add [eax-0x43],cl
inc ecx
add [eax-0x28],dl
inc edx
add [eax-0x53ffbb67],ah
lahf
inc esp
add al,bh
sahf
inc esp
add [eax+0x3],dh
inc esp
add [esp+edx*4+0x44],ah
add [esp+edx*4-0x6f0fffbc],al
inc esp
add [eax-0x4bffbbfe],dh
add al,[eax+eax+0x4]
cmp al,0x44
add [eax],dh
cmp al,0x44
add al,dh
add al,0x44
add [eax+edx+0x44],ah
add ah,ch
add al,0x44
add al,dh
adc [eax+eax-0x34],eax
test al,0x44
add [eax+0x2c004414],dh
adc eax,[eax+eax+0x0]
fld dword [edx+0x0]
mov ah,0x3c
inc esp
add [ecx+edx*4+0x44],al
add [edx+edx*4],al
inc esp
add al,bh
mov [eax+eax-0x18],es
xchg eax,ecx
inc esp
add [eax+0x44],dh
inc esp
add [eax],bh
dec esp
inc esp
add [edx+ebx*2+0x44],ah
add [eax],cl
fiadd dword [edx+0x0]
cmp al,0x57
inc esp
add [ebp+edx*2+0x44],ch
add ah,bh
pop edx
inc esp
add [eax],ah
pop ebx
inc esp
add [ebx+ebx*2+0x59b80044],dh
inc esp
add [eax+0x59],bl
inc esp
add [edi-0x6ccfffbc],cl
inc esp
add al,ch
imul eax,[eax+eax+0x0],byte -0x59
inc esp
add [eax+0x5000448f],ah
test al,0x44
add [eax-0x7ffbb6e],bl
fadd dword [edx+0x0]
cld
fadd dword [edx+0x0]
add al,0x0
cmp [ebp-0x10ffec],bh
fcos
js 0x2a0f5
inc edx
add ah,bl
fld dword [edx+0x0]
movsb
fadd dword [edx+0x0]
lock fadd dword [edx+0x0]
push cs
push esp
inc edx
jnz 0x2a1a3
jz 0x2a1a0
outsb
inc ebx
outsd
outsb
jz 0x2a1a9
outsd
insb
lea eax,[eax+0x0]
inc eax
mov cl,0x42
add [edi],al
push cs
push esp
inc edx
jnz 0x2a1ba
jz 0x2a1b7
outsb
inc ebx
outsd
outsb
jz 0x2a1c0
outsd
insb
xor [eax-0x2afbffbe],dh
inc ebx
add [dword 0x74530800],cl
fs inc ebx
jz 0x2a1d3
insb
jnc 0x2a164
add [ebp-0x4e4bffc0],cl
inc edx
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add al,bl
mov dl,0x42
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax-0x35ffbd4e],bl
mov dl,0x42
add [eax+0x2],ah
add [eax],al
in al,0xaf
inc edx
add [eax],ch
mov ebp,0x3e440041
inc eax
add [esi+esi*4+0x41],ah
add [esi+edi+0x40],cl
add [ecx+ebp*2],bh
inc esp
add [eax-0x5bffbfc5],cl
cmp eax,[eax+0x0]
inc esp
inc edx
inc esp
add [edi+ebx*4+0x44],bh
add ah,bh
pop eax
inc esp
add [esp+edx*2+0x41],bh
add [edx+edi],dh
inc esp
add [ebx+edx*2],dl
inc esp
add al,bh
inc ebx
inc esp
add [eax+0x40004410],al
mov ebp,0xba240041
inc ecx
add [edx+edi*4],bl
inc ecx
add [eax-0x43],cl
inc ecx
add [eax-0x26],al
inc edx
add [eax-0x53ffbb67],ah
lahf
inc esp
add al,bh
sahf
inc esp
add [eax+0x3],dh
inc esp
add [esp+edx*4+0x44],ah
add [esp+edx*4-0x6f0fffbc],al
inc esp
add [eax-0x4bffbbfe],dh
add al,[eax+eax+0x4]
cmp al,0x44
add [eax],dh
cmp al,0x44
add al,dh
add al,0x44
add [eax+edx+0x44],ah
add ah,ch
add al,0x44
add al,dh
adc [eax+eax-0x34],eax
test al,0x44
add [eax+0x2c004414],dh
adc eax,[eax+eax+0x0]
fld dword [edx+0x0]
mov ah,0x3c
inc esp
add [ecx+edx*4+0x44],al
add [edx+edx*4],al
inc esp
add al,bh
mov [eax+eax-0x18],es
xchg eax,ecx
inc esp
add [eax+0x44],dh
inc esp
add [eax],bh
dec esp
inc esp
add [edx+ebx*2+0x44],ah
add [ebx+ebx*8+0x42],bl
add [edi+edx*2],bh
inc esp
add [eax-0x3ffbd25],bl
pop edx
inc esp
add [eax],ah
pop ebx
inc esp
add [ebx+ebx*2+0x59b80044],dh
inc esp
add [eax+0x59],bl
inc esp
add [edi-0x6ccfffbc],cl
inc esp
add al,ch
imul eax,[eax+eax+0x0],byte -0x59
inc esp
add [eax+0x5000448f],ah
test al,0x44
add [eax-0x7ffbb6e],bl
fadd dword [edx+0x0]
cld
fadd dword [edx+0x0]
rcr dl,1
inc edx
add [eax],cl
add [dword 0x7b006b0],al
mov al,0x11
mov ebp,0x14bd35
jmp short 0x2a2a7
db 0xc7
dec eax
fild dword [edx+0x0]
cmp ah,bl
inc edx
add [esp+ebx*8-0x244bffbe],bh
inc edx
add [ebx*8-0x22efffbe],bh
inc edx
add [edx+ebx*8-0x2533ffbe],ah
inc edx
add [edi],al
push esp
inc edx
jnz 0x2a343
jz 0x2a340
outsb
mov eax,eax
fdiv dword [edx+0x7070042]
push esp
inc edx
jnz 0x2a352
jz 0x2a34f
outsb
mov ah,0xb1
inc edx
add [ecx+esi*4],bh
inc edx
add [edi],dh
add [eax],cl
push ebx
jz 0x2a353
inc ebx
jz 0x2a364
insb
jnc 0x2a31f
add [eax+0x3c004139],bh
add [eax],al
db 0xfe
and [esp+eax*2],al
add [ecx],al
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax+0x4106000d],al
arpl [ecx+ebp*2+0x6f],si
outsb
cld
mov bl,0x43
add [ebx+0x0],bl
add bh,bh
or al,0x6
inc esp
add [ecx],al
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax],al
push cs
add [dword 0x67696c41],al
outsb
pushfd
mov esp,0x610043
add bh,bh
add byte [ebx],0x44
add [esp+eax+0x44],bl
add [eax+0x3],al
sldt [edi]
inc ecx
outsb
arpl [eax+0x6f],bp
jc 0x2a3cc
and byte [edx],0x41
add [edi+0x0],bl
add bh,bh
jz 0x2a363
add dh,bh
mov esp,0x4413
add [eax],al
add byte [eax],0x0
add [eax+0x42080010],al
imul eax,[ecx+ebp*2+0x4d],dword 0x65646f
adc [eax+0x0],al
pop ecx
add al,[eax]
call dword far [ecx+0x2]
add bh,bh
add [eax],eax
add [eax],al
add [eax],al
add [eax+0x0],al
adc [eax],eax
push es
inc ebx
popad
outsb
arpl [ebp+0x6c],sp
inc esp
mov esp,0x12980043
inc esp
add al,cl
adc al,[eax+eax+0x74]
cmp [eax+eax+0x0],eax
add [eax],al
add byte [eax],0x0
add [eax+0x43070012],al
popad
jo 0x2a430
imul ebp,[edi+0x6e],dword 0x43bd44
jz 0x2a3c5
add bh,bh
insb
ds inc esp
add [ecx],al
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax+0x430b0013],al
outsd
outsb
jnc 0x2a453
jc 0x2a442
imul ebp,[esi+0x74],dword 0x40100073
add [eax+0x2],bl
add bh,bh
and al,0xdb
inc edx
add [ecx],al
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax],al
adc al,0x0
pop es
inc esp
gs popaw
jnz 0x2a472
jz 0x2a3ec
mov bl,0x43
add [esi+0x0],bh
add bh,bh
jng 0x2a411
add bh,bh
add [eax],eax
add [eax],al
add [eax],al
add [eax-0xc],al
adc eax,0x72440a00
popad
inc ebx
jnz 0x2a49b
jnc 0x2a49a
jc 0x2a425
mov ebx,0x8f0043
add bh,bh
pop dword [eax]
add bh,bh
add [eax],eax
add [eax],al
add [eax],al
add [eax+0x0],al
push ss
add [eax],cl
inc esp
jc 0x2a4ab
dec ebx
imul ebp,[esi+0x64],dword 0x43bb70
pop ebp
add [eax],al
jmp dword [eax+eax+0x0]
inc byte [ecx]
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax],al
pop ss
add [eax],cl
inc esp
jc 0x2a4ce
dec ebp
outsd
add [gs:eax],dl
inc eax
add [eax+0x0],dl
add dh,bh
push dword 0x94fe0000
cmp [eax+eax+0x0],eax
add [eax],al
add byte [ecx],0x0
add [eax],al
sbb [eax],al
pop es
inc ebp
outsb
popad
bound ebp,[ebp+0x64]
call dword 0x6802e68a
add [eax],al
dec dword [ebx+edx+0x139c0044]
inc esp
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax+0x46040019],al
outsd
outsb
jz 0x2a47c
mov bl,0x43
add [edx+eax+0x0],bl
call dword far [edx+eax+0x0]
inc dword [ecx]
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax],al
sbb al,[eax]
or ecx,[ebp+0x6f]
fs popad
insb
push edx
gs jnc 0x2a54c
insb
jz 0x2a4da
adc [eax+0x0],al
pushad
add [eax],al
push dword [eax+0x0]
add dh,bh
add [eax],eax
add [eax],al
add [eax],al
add [eax+0x1],al
sbb eax,[eax]
push cs
push eax
popad
jc 0x2a55d
outsb
jz 0x2a53d
imul eax,[ecx+ebp*2+0x4d],dword 0x65646f
adc [eax+0x0],al
pop ecx
add [eax],al
inc esp
adc eax,[eax+eax+0x1]
add [eax],al
add [eax],al
add [eax],al
add byte [ecx],0x0
add [eax],al
sbb al,0x0
or dl,[eax+0x61]
jc 0x2a586
outsb
jz 0x2a56a
outsd
outsb
jz 0x2a528
adc [eax+0x0],al
mov es,[eax]
add bh,bh
or al,0x14
inc esp
add [ecx],al
add [eax],al
add [eax],al
add [eax],al
add byte [ecx],0x0
add [eax],al
sbb eax,0x61500e00
jc 0x2a5ab
outsb
jz 0x2a59c
push dword 0x6948776f
outsb
jz 0x2a5bd
push ebp
inc ebx
add [eax+0x4cff0000],al
adc al,[eax+eax+0x1]
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax+0x5009001e],al
outsd
jo 0x2a5e4
jo 0x2a5be
gs outsb
jnz 0x2a575
adc [eax+0x0],al
lea eax,[eax]
add bh,bh
call dword 0xb002e994
adc eax,[eax+eax+0x0]
add [eax],al
add byte [eax],0x0
add [eax+0x5308001f],al
push dword 0x6948776f
outsb
jz 0x2a5c4
mov esp,0x95540043
inc esp
add ah,dl
xchg eax,ebp
inc esp
add [ecx],al
add [eax],al
add [eax],al
add [eax],al
cmp bh,0xff
db 0xff
jmp dword [eax]
add [eax],cl
push esp
popad
bound ecx,[edi+0x72]
gs jc 0x2a5bb
adc [eax+0x0],al
fadd dword [ecx]
add bh,bh
in al,dx
xchg eax,ebp
inc esp
add [ecx],al
add [eax],al
add [eax],al
add [eax],al
add byte [ecx],0x0
add [eax],al
and [eax],eax
pop es
push esp
popad
db 0x62
push ebx
jz 0x2a64a
jo 0x2a5dd
adc [eax+0x0],al
push edi
add [eax],al
db 0xff
mov eax,0xf4004411
cmp [eax+eax+0x0],eax
add [eax],al
add byte [ecx],0x0
add [eax],al
and al,[eax]
pop es
push esi
imul esi,[ebx+0x69],dword 0x656c62
adc [eax+0x0],al
push ecx
add al,[eax]
jmp dword far [edx+ebx*8]
inc edx
add [ecx],al
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax],al
and eax,[eax]
or [edi+0x6f],dl
jc 0x2a681
push edi
jc 0x2a681
jo 0x2a5ea
and eax,[ecx+0x0]
adc [ecx],al
add bh,bh
adc [ecx],al
add bh,bh
adc al,0x3a
inc esp
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax+0x4f070024],al
outsb
inc ebx
insb
imul esp,[ebx+0x6b],dword 0x43c82c
and [ecx],al
add bh,bh
and [ecx],al
add bh,bh
add [eax],eax
add [eax],al
add [eax],al
add [eax-0x80000000],al
and eax,0x6e4f0e00
inc ebx
outsd
outsb
jz 0x2a6ca
js 0x2a6db
push eax
outsd
jo 0x2a6e0
jo 0x2a65d
ret 0x43
fadd dword [eax]
add bh,bh
fadd dword [eax]
add bh,bh
add [eax],eax
add [eax],al
add [eax],al
add [eax-0x80000000],al
add [es:edx],cl
dec edi
outsb
inc esp
jc 0x2a6ed
inc esp
jc 0x2a6ff
jo 0x2a6fa
ret 0x43
loopne 0x2a697
add bh,bh
loopne 0x2a69b
add bh,bh
add [eax],eax
add [eax],al
add [eax],al
add [eax-0x80000000],al
daa
add [edx],cl
dec edi
outsb
inc esp
jc 0x2a712
dec edi
jna 0x2a71a
jc 0x2a64f
ret
inc ebx
add al,bh
add [eax],al
db 0xff
clc
add [eax],al
inc dword [ecx]
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax+0x4f090028],al
outsb
inc ebp
outsb
fs inc esp
outsd
arpl [ebx-0x68],bp
ret
inc ebx
add [eax],cl
add [eax],eax
dec dword [eax]
add [eax],eax
inc dword [ecx]
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax+0x4f090029],al
outsb
inc ebp
outsb
fs inc esp
jc 0x2a75e
enter 0x4123,0x0
lock add [eax],eax
push eax
add [eax],eax
inc dword [ecx]
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax+0x4f07002a],al
outsb
inc ebp
outsb
jz 0x2a784
jc 0x2a6e9
and eax,[ecx+0x0]
clc
add [eax],eax
db 0xff
clc
add [eax],eax
inc dword [ecx]
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax+0x4f06002b],al
outsb
inc ebp
js 0x2a7a9
jz 0x2a722
rol dword [ebx+0x0],byte 0x8
add al,[eax]
dec dword [eax]
add al,[eax]
inc dword [ecx]
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax+0x4f09002c],al
outsb
dec ebx
gs jns 0x2a7a6
outsd
ja 0x2a7d3
sub al,0xc2
inc ebx
add [eax],dl
add al,[eax]
call dword [eax]
add al,[eax]
inc dword [ecx]
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax+0x4f0a002d],al
outsb
dec ebx
gs jns 0x2a7d6
jc 0x2a7ed
jnc 0x2a7fd
loopne 0x2a74d
inc ebx
add [eax],bl
add al,[eax]
call dword far [eax]
add al,[eax]
inc dword [ecx]
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax+0x4f07002e],al
outsb
dec ebx
gs jns 0x2a800
jo 0x2a7d5
rol dword [ebx+0x0],byte 0x28
add [eax],eax
jmp dword far [eax]
add [eax],eax
inc dword [ecx]
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax+0x4f0f002f],al
outsb
dec ebp
outsd
jnz 0x2a840
gs inc ecx
arpl [ecx+ebp*2+0x76],si
popad
jz 0x2a83b
dec esp
rol byte [ebx+0x0],byte 0xc0
add [eax],al
inc eax
add [eax],al
inc dword [ecx]
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax+0x4f0b0030],al
outsb
dec ebp
outsd
jnz 0x2a86a
gs inc esp
outsd
ja 0x2a86a
enter 0x4123,0x0
cmp [ecx],al
add bh,bh
cmp [ecx],al
add bh,bh
add [eax],eax
add [eax],al
add [eax],al
add [eax-0x80000000],al
xor [eax],eax
or al,0x4f
outsb
dec ebp
outsd
jnz 0x2a890
gs inc ebp
outsb
jz 0x2a887
jc 0x2a7ec
and eax,[ecx+0x0]
xor [ecx],al
add bh,bh
xor [ecx],al
add bh,bh
add [eax],eax
add [eax],al
add [eax],al
add [eax-0x80000000],al
xor al,[eax]
or al,0x4f
outsb
dec ebp
outsd
jnz 0x2a8b7
gs dec esp
gs popad
jna 0x2a8af
db 0xc4
rol byte [ebx+0x0],byte 0xc8
add [eax],al
dec eax
add [eax],al
inc dword [ecx]
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax+0x4f0b0033],al
outsb
dec ebp
outsd
jnz 0x2a8de
gs dec ebp
outsd
jna 0x2a8d5
dec esp
rol byte [ebx+0x0],byte 0xd0
add [eax],al
call eax
add [eax],al
inc dword [ecx]
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax+0x4f090034],al
outsb
dec ebp
outsd
jnz 0x2a904
gs push ebp
jo 0x2a8ed
lds eax,[ebx+0x0]
lock add [eax],al
push eax
add [eax],al
inc dword [ecx]
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax+0x4f0b0035],al
outsb
push ebx
jz 0x2a915
jc 0x2a92a
inc esp
outsd
arpl [ebx+0x50],bp
ret
inc ebx
add [eax],al
add [eax],eax
inc dword [eax]
add [eax],eax
inc dword [ecx]
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax+0x4f0b0036],al
outsb
push ebx
jz 0x2a93b
jc 0x2a950
inc esp
jc 0x2a940
sub al,0xb9
inc edx
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add al,al
mov ecx,0x42
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
lodsb
mov ecx,0x1c0042
add [eax],al
les ebp,[dword 0x3e380041]
inc eax
add [esi+edi+0x40],al
add [eax+0x3e],cl
inc eax
add [esi+edi+0x40],cl
add [eax+0x3e],al
inc eax
add [eax-0x5bffbfc5],cl
cmp eax,[eax+0x0]
mov eax,0x6000415e
push ebp
inc ecx
add [eax],dl
popad
inc ecx
add al,ch
pop edi
inc ecx
add [eax+edx*8+0x63980042],cl
inc ecx
add [eax+edx*8],bl
inc edx
add [eax+0x40004163],ah
rol dword [edx+0x0],cl
rcl al,1
inc edx
add ah,dl
push dword 0x6a400041
inc ecx
add [ebx+edx*8+0x42],dl
add al,dh
rol byte [edx+0x0],cl
push esp
insd
inc ecx
add al,ch
pop esi
inc ecx
add [edi+ebx*2],cl
inc ecx
add [eax],dh
pop edi
inc ecx
add al,ah
rol byte [edx+0x0],cl
push eax
rol byte [edx+0x0],cl
lodsb
db 0x62
inc ecx
add [ebx+0x65300041],ah
inc ecx
add [ebp+0x66900041],bh
inc ecx
add [ecx+edx*8+0x42],al
add ah,al
inc cx
add ah,dh
inc cx
add [eax+0x67],cl
inc ecx
add ah,dh
inc ecx
add [eax-0x1fffbe97],cl
imul eax,[ecx+0x0],dword 0x416a78
or al,0x54
dec ebp
gs insd
outsd
push ebx
jz 0x2aa27
imul ebp,[esi+0x67],dword 0x408d73
sar byte [ecx+0xc070042],byte 0x54
dec ebp
gs insd
outsd
push ebx
jz 0x2aa3c
imul ebp,[esi+0x67],dword 0x42b92c73
add [esi+ebp+0x41],dh
or [ebx+0x74],dl
fs inc ebx
jz 0x2aa51
insb
jnc 0x2a9e2
add [eax-0x2d7ba9ad],dl
jz 0x2a9f2
add esp,byte -0x10
call dword 0x2f14
mov ebx,edx
mov esi,eax
xor edx,edx
mov eax,esi
call dword 0x49948
mov eax,[esi+0x50]
or eax,[dword 0x42ba74]
mov [esi+0x50],eax
mov edx,0x41
mov eax,esi
call dword 0x3f980
mov edx,0x11
mov eax,esi
call dword 0x3f9b4
mov byte [esi+0x19d],0x1
mov byte [esi+0x1a0],0x1
call dword 0x4e314
call dword 0x4e41c
test al,al
jz 0x2aa4e
mov eax,[0x42ba78]
not eax
and eax,[esi+0x50]
mov [esi+0x50],eax
jmp short 0x2aa5a
mov eax,[esi+0x50]
or eax,[dword 0x42ba78]
mov [esi+0x50],eax
mov eax,esi
test bl,bl
jz 0x2aa6f
call dword 0x2f6c
pop dword [dword fs:0x0]
add esp,byte +0xc
mov eax,esi
pop esi
pop ebx
ret
add [eax],cl
add [eax],al
inc eax
add [eax],al
add [ebx+0x56],dl
mov esi,edx
mov ebx,eax
mov edx,esi
mov eax,ebx
call dword 0x40298
pop esi
pop ebx
ret
mov eax,eax
push ebp
mov ebp,esp
add esp,byte -0x54
push ebx
push esi
push edi
xor ebx,ebx
mov [ebp-0x54],ebx
mov [ebp-0x4],ecx
mov edi,edx
mov esi,eax
mov ebx,[ebp+0x8]
xor eax,eax
push ebp
push dword 0x42bb61
push dword [fs:eax]
mov [fs:eax],esp
lea eax,[ebp-0x44]
xor ecx,ecx
mov edx,0x40
call dword 0x252c
mov dword [ebp-0x44],0x40
mov dword [ebp-0x40],0x2001
mov eax,ebx
and eax,0x400
cmp eax,0x400
jnz 0x2aae8
or dword [ebp-0x40],0x200
mov eax,[ebp+0x10]
mov eax,[eax-0x4]
mov eax,[eax+0x190]
mov eax,[eax+0xc]
mov eax,[eax+0x18]
call dword 0x1f6cc
mov [ebp-0x3c],eax
call dword 0x4e314
lea ecx,[ebp-0x50]
mov dl,0x2
call dword 0x4e584
mov eax,[ebp-0x48]
push eax
lea eax,[ebp-0x54]
mov edx,edi
call dword 0x4338
mov eax,[ebp-0x54]
call dword 0x4348
push eax
mov eax,[ebp-0x4]
push eax
push ebx
mov eax,[ebp+0xc]
push eax
lea eax,[ebp-0x44]
push eax
call dword 0x4e314
mov dl,0x3
call dword 0x4e3dc
mov ecx,[ebp-0x4c]
mov edx,esi
call dword 0x26f44
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x42bb68
lea eax,[ebp-0x54]
call dword 0x41d0
ret
jmp dword 0x3384
jmp short 0x2ab58
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret 0x8
lea eax,[eax+0x0]
push ebp
mov ebp,esp
push ecx
push ebx
push esi
push edi
mov [ebp-0x4],ecx
mov edi,edx
mov esi,eax
call dword 0x4e314
call dword 0x4e41c
test al,al
jz 0x2aba5
call dword 0x27c2c
test al,al
jz 0x2aba5
mov eax,[ebp+0x10]
mov eax,[eax-0x4]
test byte [eax+0x1c],0x10
jz 0x2aba9
xor eax,eax
jmp short 0x2abab
mov al,0x1
test al,al
jz 0x2abee
mov eax,[ebp+0x10]
mov eax,[eax-0x4]
mov dl,0x1
call dword 0x53e38
mov ebx,eax
test ebx,ebx
jz 0x2abe8
mov eax,ebx
call dword 0x603d0
call dword 0x606bc
test al,al
jz 0x2abe8
mov eax,ebx
call dword 0x603d0
mov edx,[ebp+0x10]
mov edx,[edx-0x4]
call dword 0x606f4
test al,al
jnz 0x2abec
xor eax,eax
jmp short 0x2abee
mov al,0x1
test al,al
jz 0x2ac0d
mov eax,[ebp+0x10]
push eax
mov eax,[ebp+0xc]
push eax
mov eax,[ebp+0x8]
push eax
mov ecx,[ebp-0x4]
mov edx,edi
mov eax,esi
call dword 0x2aa90
pop ecx
jmp short 0x2ac27
mov eax,[ebp+0x8]
push eax
mov eax,[ebp+0xc]
push eax
mov eax,[ebp-0x4]
push eax
mov eax,edi
call dword 0x3eac
push eax
push esi
call dword 0x5f40
pop edi
pop esi
pop ebx
pop ecx
pop ebp
ret 0x8
nop
push ebp
mov ebp,esp
add esp,byte -0x20
push ebx
push esi
push edi
xor ebx,ebx
mov [ebp-0x8],ebx
mov [ebp-0xc],ebx
mov ebx,ecx
mov [ebp-0x10],edx
mov [ebp-0x4],eax
xor eax,eax
push ebp
push dword 0x42bf21
push dword [fs:eax]
mov [fs:eax],esp
lea edx,[ebp-0x8]
mov eax,[ebp-0x4]
mov ecx,[eax]
call dword [ecx+0x94]
test bh,0x4
jz 0x2ac9a
cmp dword [ebp-0x8],byte +0x0
jz 0x2ac8d
mov eax,[ebp-0x4]
cmp byte [eax+0x1a0],0x0
jz 0x2ac9a
mov eax,[ebp-0x8]
cmp byte [eax],0x26
jnz 0x2ac9a
mov eax,[ebp-0x8]
cmp byte [eax+0x1],0x0
jnz 0x2ac9a
lea eax,[ebp-0x8]
mov edx,0x42bf38
call dword 0x3ce8
mov eax,[ebp-0x4]
cmp byte [eax+0x1a0],0x0
jnz 0x2acac
or ebx,0x800
mov edx,ebx
mov eax,[ebp-0x4]
call dword 0x42c58
mov ebx,eax
mov eax,[ebp-0x4]
mov edx,[eax+0x68]
mov eax,[ebp-0x4]
mov eax,[eax+0x190]
call dword 0x20a4c
mov eax,[ebp-0x4]
cmp byte [eax+0x1a2],0x0
jz dword 0x2ae20
mov eax,[ebp-0x4]
cmp byte [eax+0x19d],0x0
jnz dword 0x2ae20
lea eax,[ebp-0xc]
mov edx,[ebp-0x8]
call dword 0x3ab4
and ebx,byte -0x41
mov eax,[ebp-0x4]
movzx eax,byte [eax+0x1a2]
or ebx,[eax*4+0x467e44]
mov eax,[ebp-0x4]
cmp byte [eax+0x19f],0x0
jz dword 0x2ae0f
mov eax,[ebp-0x4]
movzx eax,byte [eax+0x1a2]
add al,0xfe
sub al,0x2
jnc dword 0x2ae0f
mov eax,[ebp-0x10]
mov esi,eax
lea edi,[ebp-0x20]
movsd
movsd
movsd
movsd
mov eax,[ebp-0x4]
mov eax,[eax+0x190]
mov edx,0x42bf44
call dword 0x2098c
sub [ebp-0x18],eax
mov eax,[ebp-0x4]
mov eax,[eax+0x190]
call dword 0x20b30
mov edi,eax
mov esi,[ebp-0xc]
test esi,esi
jz 0x2ad6d
sub esi,byte +0x4
mov esi,[esi]
mov eax,ebx
or eax,0x400
push eax
lea eax,[ebp-0x20]
push eax
push esi
mov eax,[ebp-0xc]
call dword 0x3eac
push eax
push edi
call dword 0x5f40
mov esi,[ebp-0x14]
sub esi,[ebp-0x1c]
mov eax,[ebp-0x4]
call dword 0x3fc48
cmp esi,eax
jng 0x2ae0f
mov eax,[ebp-0x4]
mov eax,[eax+0x190]
mov eax,[eax+0xc]
call dword 0x1fe38
cmp esi,eax
jng 0x2ae0f
mov edx,[ebp-0x8]
mov eax,0x42bf50
call dword 0x81f8
mov esi,eax
test esi,esi
jnz 0x2add1
mov eax,[ebp-0x8]
test eax,eax
jz 0x2adcf
sub eax,byte +0x4
mov eax,[eax]
mov esi,eax
dec esi
mov edx,esi
mov eax,[ebp-0x8]
call dword 0xbe10
cmp al,0x1
jnz 0x2ade1
dec esi
lea eax,[ebp-0x8]
push eax
mov ecx,esi
mov edx,0x1
mov eax,[ebp-0x8]
call dword 0x3f14
lea eax,[ebp-0xc]
mov ecx,0x42bf44
mov edx,[ebp-0x8]
call dword 0x3d34
cmp dword [ebp-0x8],byte +0x0
jz 0x2ae0f
jmp dword 0x2ad2f
cmp dword [ebp-0x8],byte +0x0
jz 0x2ae20
lea eax,[ebp-0x8]
mov edx,[ebp-0xc]
call dword 0x3ab4
mov eax,[ebp-0x4]
mov edx,[eax]
call dword [edx+0x50]
test al,al
jnz dword 0x2aed7
push byte +0x1
push byte +0x1
mov eax,[ebp-0x10]
push eax
call dword 0x61f8
mov eax,[ebp-0x4]
mov eax,[eax+0x190]
mov eax,[eax+0xc]
mov edx,0xff000014
call dword 0x1fb98
mov eax,[ebp-0x4]
mov eax,[eax+0x190]
call dword 0x20b30
mov edx,eax
mov esi,[ebp-0x8]
mov eax,esi
test eax,eax
jz 0x2ae71
sub eax,byte +0x4
mov eax,[eax]
push ebp
mov ecx,[ebp-0x10]
push ecx
push ebx
mov ecx,eax
mov eax,edx
mov edx,[ebp-0x8]
call dword 0x2ab74
pop ecx
push byte -0x1
push byte -0x1
mov eax,[ebp-0x10]
push eax
call dword 0x61f8
mov eax,[ebp-0x4]
mov eax,[eax+0x190]
mov eax,[eax+0xc]
mov edx,0xff000010
call dword 0x1fb98
mov eax,[ebp-0x4]
mov eax,[eax+0x190]
call dword 0x20b30
mov edx,eax
mov eax,esi
test eax,eax
jz 0x2aec2
sub eax,byte +0x4
mov eax,[eax]
push ebp
mov ecx,[ebp-0x10]
push ecx
push ebx
mov ecx,eax
mov eax,edx
mov edx,[ebp-0x8]
call dword 0x2ab74
pop ecx
jmp short 0x2af06
mov eax,[ebp-0x4]
mov eax,[eax+0x190]
call dword 0x20b30
mov edx,eax
mov eax,[ebp-0x8]
test eax,eax
jz 0x2aef3
sub eax,byte +0x4
mov eax,[eax]
push ebp
mov ecx,[ebp-0x10]
push ecx
push ebx
mov ecx,eax
mov eax,edx
mov edx,[ebp-0x8]
call dword 0x2ab74
pop ecx
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x42bf28
lea eax,[ebp-0xc]
mov edx,0x2
call dword 0x3a40
ret
jmp dword 0x3384
jmp short 0x2af13
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret
add bh,bh
db 0xff
db 0xff
inc dword [ecx]
add [eax],al
add [eax],ah
add [eax],al
add bh,bh
db 0xff
db 0xff
inc dword [ebx]
add [eax],al
add [esi],ch
cs add bh,bh
db 0xff
db 0xff
inc dword [edx]
add [eax],al
add [eax],ah
or [eax],eax
add [ebp-0x75],dl
in al,dx
add esp,byte -0x18
push ebx
push esi
push edi
mov esi,edx
lea edi,[ebp-0x18]
movsd
movsd
movsd
movsd
mov ebx,eax
push byte +0x0
lea eax,[ebp-0x4]
push eax
mov eax,ebx
call dword 0x20b30
lea edx,[ebp-0x18]
mov ecx,0x2
call dword 0x26ff0
mov [ebp-0x8],eax
xor eax,eax
push ebp
push dword 0x42bfcf
push dword [fs:eax]
mov [fs:eax],esp
mov eax,[ebx+0x14]
call dword 0x20488
push eax
lea eax,[ebp-0x18]
push eax
mov eax,[ebp-0x4]
push eax
call dword 0x5f88
lea edx,[ebp-0x18]
mov cl,0xff
mov eax,[ebp-0x8]
call dword 0x270e8
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x42bfd6
or edx,byte -0x1
mov eax,[ebp-0x8]
call dword 0x2707c
ret
jmp dword 0x3384
jmp short 0x2afc3
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret
lea eax,[eax+0x0]
push ebx
push esi
push edi
add esp,byte -0x20
mov edi,eax
call dword 0x4e314
call dword 0x4e41c
test al,al
jz 0x2b005
call dword 0x27c2c
test al,al
jz 0x2b005
test byte [edi+0x1c],0x10
jz 0x2b009
xor ebx,ebx
jmp short 0x2b00b
mov bl,0x1
test bl,bl
jz 0x2b048
mov dl,0x1
mov eax,edi
call dword 0x53e38
mov ebx,eax
test ebx,ebx
jz 0x2b040
mov eax,ebx
call dword 0x603d0
call dword 0x606bc
test al,al
jz 0x2b040
mov eax,ebx
call dword 0x603d0
mov edx,edi
call dword 0x606f4
test al,al
jnz 0x2b044
xor eax,eax
jmp short 0x2b046
mov al,0x1
mov ebx,eax
mov esi,[edi+0x190]
mov edx,esp
mov eax,edi
mov ecx,[eax]
call dword [ecx+0x44]
mov eax,edi
call dword 0x2b2b4
test al,al
jnz 0x2b095
mov edx,[edi+0x70]
mov eax,[esi+0x14]
call dword 0x20454
xor edx,edx
mov eax,[esi+0x14]
call dword 0x20570
test bl,bl
jnz 0x2b086
mov edx,esp
mov eax,esi
call dword 0x207f8
jmp short 0x2b0b3
mov edx,esp
mov eax,[edi+0x190]
call dword 0x2af54
jmp short 0x2b0b3
test bl,bl
jz 0x2b0b3
push byte +0x4
call dword 0x5d48
push eax
lea eax,[esp+0x4]
push eax
mov eax,esi
call dword 0x20b30
push eax
call dword 0x5f88
mov dl,0x1
mov eax,[esi+0x14]
call dword 0x20570
movzx eax,byte [edi+0x19f]
movzx ebx,word [eax*2+0x467e5c]
or bx,byte +0x40
movzx eax,byte [edi+0x19c]
or bx,[eax*2+0x467e54]
movzx ebx,bx
cmp byte [edi+0x19e],0x0
jz 0x2b14a
push edi
lea esi,[esp+0x4]
lea edi,[esp+0x14]
movsd
movsd
movsd
movsd
pop edi
mov ecx,ebx
or ecx,0x400
lea edx,[esp+0x10]
mov eax,edi
mov si,0xffc5
call dword 0x2dec
cmp byte [edi+0x19e],0x2
jnz 0x2b12f
mov eax,[edi+0x4c]
sub eax,[esp+0x1c]
push eax
push byte +0x0
lea eax,[esp+0x8]
push eax
call dword 0x61f8
jmp short 0x2b14a
mov eax,[edi+0x4c]
sub eax,[esp+0x1c]
sar eax,1
jns 0x2b13d
adc eax,byte +0x0
push eax
push byte +0x0
lea eax,[esp+0x8]
push eax
call dword 0x61f8
mov edx,esp
mov ecx,ebx
mov eax,edi
mov si,0xffc5
call dword 0x2dec
add esp,byte +0x20
pop edi
pop esi
pop ebx
ret
push ebx
push esi
mov ebx,eax
mov eax,ebx
call dword 0x42a34
mov eax,ebx
mov si,0xffc6
call dword 0x2dec
pop esi
pop ebx
ret
lea eax,[eax+0x0]
push ebx
push esi
push edi
add esp,byte -0x14
mov ebx,eax
test byte [ebx+0x1c],0x2
jnz dword 0x2b242
cmp byte [ebx+0x19d],0x0
jz dword 0x2b242
lea edx,[esp+0x1]
mov eax,ebx
mov ecx,[eax]
call dword [ecx+0x44]
push byte +0x0
call dword 0x5fe0
mov edi,eax
mov edx,edi
mov eax,[ebx+0x190]
call dword 0x20bb8
movzx eax,byte [ebx+0x19f]
movzx ecx,word [eax*2+0x467e60]
or cx,0x440
movzx ecx,cx
lea edx,[esp+0x1]
mov eax,ebx
mov si,0xffc5
call dword 0x2dec
xor edx,edx
mov eax,[ebx+0x190]
call dword 0x20bb8
push edi
push byte +0x0
call dword 0x6250
mov edi,[ebx+0x40]
movzx eax,byte [ebx+0x19c]
mov [esp],al
mov eax,ebx
mov si,0xffc7
call dword 0x2dec
test al,al
jz 0x2b21a
mov eax,esp
call dword 0x3cb90
cmp byte [esp],0x1
jnz 0x2b229
mov eax,[ebx+0x48]
sub eax,[esp+0x9]
add edi,eax
mov eax,[esp+0x9]
push eax
mov eax,[esp+0x11]
push eax
mov ecx,[ebx+0x44]
mov edx,edi
mov eax,ebx
mov ebx,[eax]
call dword [ebx+0x88]
add esp,byte +0x14
pop edi
pop esi
pop ebx
ret
lea eax,[eax+0x0]
push esi
mov esi,eax
cmp dl,[esi+0x19c]
jz 0x2b267
mov [esi+0x19c],dl
mov eax,esi
mov edx,[eax]
call dword [edx+0x80]
pop esi
ret
lea eax,[eax+0x0]
push esi
mov esi,eax
cmp dl,[esi+0x1a2]
jz 0x2b28e
mov [esi+0x1a2],dl
mov byte [esi+0x19d],0x0
mov eax,esi
mov edx,[eax]
call dword [edx+0x80]
pop esi
ret
push esi
cmp dl,[eax+0x19d]
jz 0x2b2af
mov [eax+0x19d],dl
mov byte [eax+0x1a2],0x0
mov si,0xffc6
call dword 0x2dec
pop esi
ret
lea eax,[eax+0x0]
test byte [eax+0x50],0x40
setnz al
xor al,0x1
ret
mov eax,eax
mov [eax+0x198],edx
test edx,edx
jz 0x2b2d0
xchg eax,edx
call dword 0x1a670
ret
lea eax,[eax+0x0]
push esi
mov esi,eax
cmp dl,[esi+0x1a0]
jz 0x2b2ef
mov [esi+0x1a0],dl
mov eax,esi
mov edx,[eax]
call dword [edx+0x80]
pop esi
ret
lea eax,[eax+0x0]
push ebx
push esi
mov ebx,edx
mov esi,eax
mov eax,esi
call dword 0x2b2b4
cmp bl,al
jz 0x2b32d
test bl,bl
jz 0x2b318
mov eax,[0x42c338]
not eax
and eax,[esi+0x50]
mov [esi+0x50],eax
jmp short 0x2b323
mov eax,[0x42c338]
or eax,[esi+0x50]
mov [esi+0x50],eax
mov eax,esi
mov edx,[eax]
call dword [edx+0x80]
mov byte [esi+0x1a1],0x1
pop esi
pop ebx
ret
add [eax+0x0],al
add [eax],al
push esi
mov esi,eax
cmp dl,[esi+0x19e]
jz 0x2b357
mov [esi+0x19e],dl
mov eax,esi
mov edx,[eax]
call dword [edx+0x80]
pop esi
ret
lea eax,[eax+0x0]
push esi
push edi
mov edi,eax
cmp dl,[edi+0x19f]
jz 0x2b383
mov [edi+0x19f],dl
mov eax,edi
mov si,0xffc6
call dword 0x2dec
mov eax,edi
mov edx,[eax]
call dword [edx+0x80]
pop edi
pop esi
ret
mov eax,eax
push ebx
push esi
push edi
mov ebx,ecx
mov esi,edx
mov edi,eax
mov ecx,ebx
mov edx,esi
mov eax,edi
call dword 0x3f5b4
cmp bl,0x1
jnz 0x2b3b1
cmp esi,[edi+0x198]
jnz 0x2b3b1
xor eax,eax
mov [edi+0x198],eax
pop edi
pop esi
pop ebx
ret
lea eax,[eax+0x0]
push ebx
push esi
mov ebx,eax
mov eax,ebx
mov edx,[eax]
call dword [edx+0x80]
mov eax,ebx
mov si,0xffc6
call dword 0x2dec
pop esi
pop ebx
ret
push esi
mov esi,eax
mov eax,esi
call dword 0x42478
mov eax,esi
mov si,0xffc6
call dword 0x2dec
pop esi
ret
nop
push ebp
mov ebp,esp
push byte +0x0
push ebx
push esi
push edi
mov edi,edx
mov ebx,eax
xor eax,eax
push ebp
push dword 0x42c479
push dword [fs:eax]
mov [fs:eax],esp
cmp dword [ebx+0x198],byte +0x0
jz 0x2b463
mov eax,ebx
mov edx,[eax]
call dword [edx+0x50]
test al,al
jz 0x2b463
cmp byte [ebx+0x1a0],0x0
jz 0x2b463
lea edx,[ebp-0x4]
mov eax,ebx
call dword 0x40298
mov edx,[ebp-0x4]
movzx eax,word [edi+0x4]
call dword 0x53d84
test al,al
jz 0x2b463
mov ebx,[ebx+0x198]
mov eax,ebx
mov si,0xffb6
call dword 0x2dec
test al,al
jz 0x2b463
mov eax,ebx
mov edx,[eax]
call dword [edx+0xd4]
mov dword [edi+0xc],0x1
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x42c480
lea eax,[ebp-0x4]
call dword 0x3a1c
ret
jmp dword 0x3384
jmp short 0x2b470
pop edi
pop esi
pop ebx
pop ecx
pop ebp
ret
mov eax,eax
push ebx
push esi
test dl,dl
jz 0x2b496
add esp,byte -0x10
call dword 0x2f14
mov ebx,edx
mov esi,eax
xor edx,edx
mov eax,esi
call dword 0x43100
mov eax,[0x468c68]
cmp byte [eax],0x0
jz 0x2b4b7
mov eax,[0x42c53c]
mov [esi+0x50],eax
jmp short 0x2b4bf
mov eax,[0x42c540]
mov [esi+0x50],eax
mov edx,0x79
mov eax,esi
call dword 0x3f980
mov edx,0x19
mov eax,esi
call dword 0x3f9b4
mov dl,0x1
mov eax,esi
call dword 0x485ec
xor edx,edx
mov eax,esi
call dword 0x4048c
mov byte [esi+0x254],0x1
mov byte [esi+0x257],0x1
mov byte [esi+0x258],0x1
mov byte [esi+0x259],0x1
mov eax,esi
call dword 0x2bc0c
mov dword [esi+0x268],0xffffffff

mov dword [esi+0x26c],0xffffffff

mov eax,esi
test bl,bl
jz 0x2b535
call dword 0x2f6c
pop dword [dword fs:0x0]
add esp,byte +0xc
mov eax,esi
pop esi
pop ebx
ret
add [eax],al
test al,0x2
or [eax],al
mov eax,0x53000802
push esi
mov esi,edx
mov ebx,eax
push byte +0x0
push esi
push dword 0xc5
mov eax,ebx
call dword 0x4831c
push eax
call dword 0x6278
pop esi
pop ebx
ret
mov eax,eax
cmp dl,[eax+0x257]
jz 0x2b577
mov [eax+0x257],dl
call dword 0x2bbd0
ret
push ebx
mov ebx,eax
cmp dl,[ebx+0x254]
jz 0x2b597
mov [ebx+0x254],dl
mov eax,ebx
call dword 0x2bbd0
mov eax,ebx
call dword 0x44c28
pop ebx
ret
lea eax,[eax+0x0]
cmp dl,[eax+0x25b]
jz 0x2b5af
mov [eax+0x25b],dl
call dword 0x44c28
ret
cmp dl,[eax+0x259]
jz 0x2b5c3
mov [eax+0x259],dl
call dword 0x44c28
ret
push ebx
push esi
mov esi,edx
mov ebx,eax
cmp esi,[ebx+0x250]
jz 0x2b5ef
mov [ebx+0x250],esi
mov eax,ebx
call dword 0x486bc
test al,al
jz 0x2b5ef
mov edx,esi
mov eax,ebx
mov ecx,[eax]
call dword [ecx+0xd8]
pop esi
pop ebx
ret
mov eax,eax
cmp dl,[eax+0x25a]
jz 0x2b607
mov [eax+0x25a],dl
call dword 0x44c28
ret
push ebx
push esi
mov esi,eax
movzx ebx,byte [esi+0x25d]
mov eax,esi
call dword 0x486bc
test al,al
jz 0x2b639
push byte +0x0
push byte +0x0
push dword 0xb8
mov eax,esi
call dword 0x4831c
push eax
call dword 0x6278
test eax,eax
setnz bl
mov eax,ebx
pop esi
pop ebx
ret
mov eax,eax
push ebx
push esi
mov ebx,edx
mov esi,eax
mov eax,esi
call dword 0x486bc
test al,al
jz 0x2b66c
push byte +0x0
movzx eax,bl
push eax
push dword 0xb9
mov eax,esi
call dword 0x4831c
push eax
call dword 0x6278
pop esi
pop ebx
ret
mov [esi+0x25d],bl
pop esi
pop ebx
ret
lea eax,[eax+0x0]
push ebp
mov ebp,esp
push byte +0x0
push ebx
mov ebx,eax
xor eax,eax
push ebp
push dword 0x42c6f4
push dword [fs:eax]
mov [fs:eax],esp
cmp dl,[ebx+0x255]
jz 0x2b6de
mov [ebx+0x255],dl
mov eax,ebx
call dword 0x486bc
test al,al
jz 0x2b6de
push byte +0x0
movzx eax,byte [ebx+0x255]
push eax
push dword 0xcc
mov eax,ebx
call dword 0x4831c
push eax
call dword 0x6278
lea edx,[ebp-0x4]
mov eax,ebx
call dword 0x40298
mov eax,[ebp-0x4]
call dword 0x3eac
mov edx,eax
mov eax,ebx
call dword 0x40274
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x42c6fb
lea eax,[ebp-0x4]
call dword 0x3a1c
ret
jmp dword 0x3384
jmp short 0x2b6eb
pop ebx
pop ecx
pop ebp
ret
nop
push ebx
push esi
mov ebx,edx
mov esi,eax
cmp bl,[esi+0x256]
jz 0x2b737
mov [esi+0x256],bl
mov eax,esi
call dword 0x486bc
test al,al
jz 0x2b737
push byte +0x0
movzx eax,bl
push eax
push dword 0xcf
mov eax,esi
call dword 0x4831c
push eax
call dword 0x6278
pop esi
pop ebx
ret
mov eax,eax
push ebx
push ecx
mov ebx,eax
push byte +0x0
lea eax,[esp+0x4]
push eax
push dword 0xb0
mov eax,ebx
call dword 0x4831c
push eax
call dword 0x6278
mov eax,[esp]
pop edx
pop ebx
ret
nop
push ebx
push esi
mov esi,edx
mov ebx,eax
push esi
push esi
push dword 0xb1
mov eax,ebx
call dword 0x4831c
push eax
call dword 0x6278
pop esi
pop ebx
ret
lea eax,[eax+0x0]
push ebx
add esp,byte -0x8
mov ebx,eax
lea eax,[esp+0x4]
push eax
lea eax,[esp+0x4]
push eax
push dword 0xb0
mov eax,ebx
call dword 0x4831c
push eax
call dword 0x6278
mov eax,[esp+0x4]
sub eax,[esp]
pop ecx
pop edx
pop ebx
ret
lea eax,[eax+0x0]
push ebx
push esi
add esp,byte -0x8
mov esi,edx
mov ebx,eax
lea eax,[esp+0x4]
push eax
lea eax,[esp+0x4]
push eax
push dword 0xb0
mov eax,ebx
call dword 0x4831c
push eax
call dword 0x6278
add esi,[esp]
mov [esp+0x4],esi
mov eax,[esp+0x4]
push eax
mov eax,[esp+0x4]
push eax
push dword 0xb1
mov eax,ebx
call dword 0x4831c
push eax
call dword 0x6278
push byte +0x0
push byte +0x0
push dword 0xb7
mov eax,ebx
call dword 0x4831c
push eax
call dword 0x6278
pop ecx
pop edx
pop esi
pop ebx
ret
nop
push ebx
mov ebx,eax
push dword 0x42c82c
mov eax,ebx
call dword 0x4831c
push eax
call dword 0x6328
pop ebx
ret
add [eax],al
add [eax],al
add [ebx-0x75],dl
fsubr dword [edx-0x1]
push byte +0x0
push dword 0xb1
mov eax,ebx
call dword 0x4831c
push eax
call dword 0x6278
pop ebx
ret
nop
push ebp
mov ebp,esp
add esp,byte -0xc
push ebx
push esi
push edi
mov edi,ecx
mov [ebp-0x4],edx
mov ebx,eax
mov eax,ebx
mov edx,[eax]
call dword [edx+0xe0]
mov esi,eax
mov eax,ebx
mov edx,[eax]
call dword [edx+0xdc]
mov [ebp-0x8],eax
mov eax,ebx
call dword 0x40208
inc eax
call dword 0x8648
mov [ebp-0xc],eax
xor eax,eax
push ebp
push dword 0x42c8d6
push dword [fs:eax]
mov [fs:eax],esp
mov eax,[ebp-0xc]
call dword 0x865c
mov ecx,eax
mov edx,[ebp-0xc]
mov eax,ebx
call dword 0x40218
cmp edi,[ebp-0x8]
jg 0x2b8b0
dec edi
mov [ebp-0x8],edi
mov edx,[ebp-0xc]
add edx,esi
mov ecx,[ebp-0x8]
mov eax,[ebp-0x4]
call dword 0x8458
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x42c8dd
mov eax,[ebp-0xc]
call dword 0x8694
ret
jmp dword 0x3384
jmp short 0x2b8cd
mov eax,[ebp-0x8]
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret
nop
push ebp
mov ebp,esp
add esp,byte -0x8
push ebx
push esi
push edi
mov edi,edx
mov ebx,eax
mov eax,ebx
mov edx,[eax]
call dword [edx+0xe0]
mov [ebp-0x8],eax
mov eax,ebx
mov edx,[eax]
call dword [edx+0xdc]
mov esi,eax
mov eax,edi
mov ecx,esi
xor edx,edx
call dword 0x3b0c
test esi,esi
jz 0x2b97d
mov eax,ebx
call dword 0x40208
inc eax
call dword 0x8648
mov [ebp-0x4],eax
xor eax,eax
push ebp
push dword 0x42c976
push dword [fs:eax]
mov [fs:eax],esp
mov eax,[ebp-0x4]
call dword 0x865c
mov ecx,eax
mov edx,[ebp-0x4]
mov eax,ebx
call dword 0x40218
mov eax,[ebp-0x4]
mov edx,[ebp-0x8]
add eax,edx
mov edx,[edi]
mov ecx,esi
call dword 0x2050
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x42c97d
mov eax,[ebp-0x4]
call dword 0x8694
ret
jmp dword 0x3384
jmp short 0x2b96d
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
ret
push ebx
push esi
mov esi,edx
mov ebx,eax
mov edx,esi
mov eax,ebx
call dword 0x44440
mov ecx,0x42ca34
mov edx,esi
mov eax,ebx
call dword 0x4436c
mov eax,[esi+0x4]
or eax,0xc0
movzx edx,byte [ebx+0x254]
or eax,[edx*4+0x467e3c]
cmp byte [ebx+0x255],0x0
setnz dl
and edx,byte +0x7f
or eax,[edx*4+0x467e64]
movzx edx,byte [ebx+0x256]
or eax,[edx*4+0x467e6c]
movzx edx,byte [ebx+0x25b]
or eax,[edx*4+0x467e74]
movzx edx,byte [ebx+0x259]
or eax,[edx*4+0x467e80]
movzx edx,byte [ebx+0x25a]
or eax,[edx*4+0x467e88]
mov [esi+0x4],eax
mov eax,[0x468c68]
cmp byte [eax],0x0
jz 0x2ba30
cmp byte [ebx+0x1d9],0x0
jz 0x2ba30
cmp byte [ebx+0x254],0x1
jnz 0x2ba30
and dword [esi+0x4],0xff7fffff
or dword [esi+0x8],0x200
pop esi
pop ebx
ret
add [ebp+0x44],al
dec ecx
push esp
add [eax],al
add [eax],al
push ebx
push esi
push edi
add esp,0xffffff74
mov ebx,eax
mov eax,[0x468eb4]
cmp byte [eax+0xc],0x0
jz 0x2ba99
mov eax,[0x468ea4]
cmp dword [eax],byte +0x2
jz 0x2ba99
test byte [edx+0x5],0x8
jz 0x2ba99
mov esi,edx
mov edi,esp
mov ecx,0x23
rep movsd
and dword [esp+0x4],0xfffff7ff
mov edx,esp
mov eax,ebx
call dword 0x4473c
mov eax,[ebx+0x1b4]
test eax,eax
jz 0x2baa0
push byte +0x0
push byte +0x1
push dword 0xcf
push eax
call dword 0x6278
jmp short 0x2baa0
mov eax,ebx
call dword 0x4473c
add esp,0x8c
pop edi
pop esi
pop ebx
ret
mov eax,eax
push ebp
mov ebp,esp
push ecx
mov [ebp-0x4],eax
mov eax,[ebp-0x4]
mov byte [eax+0x25c],0x1
xor eax,eax
push ebp
push dword 0x42caeb
push dword [fs:eax]
mov [fs:eax],esp
mov eax,[ebp-0x4]
call dword 0x4456c
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x42caf2
mov eax,[ebp-0x4]
mov byte [eax+0x25c],0x0
ret
jmp dword 0x3384
jmp short 0x2bae0
mov eax,[ebp-0x4]
mov edx,[eax+0x250]
mov eax,[ebp-0x4]
mov ecx,[eax]
call dword [ecx+0xd8]
mov eax,[ebp-0x4]
movzx edx,byte [eax+0x25d]
mov eax,[ebp-0x4]
call dword 0x2b640
mov eax,[ebp-0x4]
cmp byte [eax+0x255],0x0
jz 0x2bb44
push byte +0x0
mov eax,[ebp-0x4]
movzx eax,byte [eax+0x255]
push eax
push dword 0xcc
mov eax,[ebp-0x4]
call dword 0x4831c
push eax
call dword 0x6278
mov eax,[ebp-0x4]
mov eax,[eax+0x26c]
cmp eax,byte -0x1
jz 0x2bb6c
mov edx,eax
mov eax,[ebp-0x4]
mov ecx,[eax]
call dword [ecx+0xec]
mov eax,[ebp-0x4]
mov dword [eax+0x26c],0xffffffff

mov eax,[ebp-0x4]
mov eax,[eax+0x268]
cmp eax,byte -0x1
jz 0x2bb87
mov edx,eax
mov eax,[ebp-0x4]
mov ecx,[eax]
call dword [ecx+0xe8]
mov eax,[ebp-0x4]
call dword 0x2bbd0
pop ecx
pop ebp
ret
mov eax,eax
push ebx
mov ebx,eax
mov eax,ebx
call dword 0x2b608
mov [ebx+0x25d],al
mov eax,ebx
mov edx,[eax]
call dword [edx+0xdc]
mov [ebx+0x268],eax
mov eax,ebx
mov edx,[eax]
call dword [edx+0xe0]
mov [ebx+0x26c],eax
mov eax,ebx
call dword 0x44958
pop ebx
ret
lea eax,[eax+0x0]
push ebx
mov ebx,eax
cmp byte [ebx+0x257],0x0
jz 0x2bbf9
cmp byte [ebx+0x254],0x1
jnz 0x2bbf9
mov eax,[0x42cc08]
or eax,[ebx+0x50]
mov [ebx+0x50],eax
mov eax,ebx
call dword 0x2bc0c
pop ebx
ret
mov eax,[0x42cc08]
not eax
and eax,[ebx+0x50]
mov [ebx+0x50],eax
pop ebx
ret
add [edx],al
add [eax],al
push ebx
push esi
push edi
add esp,byte -0x70
mov esi,eax
push byte +0x0
call dword 0x5fe0
mov ebx,eax
push esp
push ebx
call dword 0x5d60
mov eax,[esi+0x68]
call dword 0x1fbd8
push eax
push ebx
call dword 0x5dd0
mov edi,eax
lea eax,[esp+0x38]
push eax
push ebx
call dword 0x5d60
push edi
push ebx
call dword 0x5dd0
push ebx
push byte +0x0
call dword 0x6250
mov eax,[0x468c68]
cmp byte [eax],0x0
jz 0x2bc7a
cmp byte [esi+0x1d9],0x0
jz 0x2bc69
mov ebx,0x8
jmp short 0x2bc6e
mov ebx,0x6
push byte +0x6
call dword 0x60d8
imul ebx,eax
jmp short 0x2bca0
mov ebx,[esp]
mov eax,[esp+0x38]
cmp ebx,eax
jng 0x2bc87
mov ebx,eax
push byte +0x6
call dword 0x60d8
add eax,eax
add eax,eax
test ebx,ebx
jns 0x2bc99
add ebx,byte +0x3
sar ebx,byte 0x2
add eax,ebx
mov ebx,eax
mov edx,[esp+0x38]
add edx,ebx
mov eax,esi
call dword 0x3f9b4
add esp,byte +0x70
pop edi
pop esi
pop ebx
ret
push ebx
mov ebx,eax
mov eax,ebx
call dword 0x3fe90
cmp word [ebx+0x262],byte +0x0
jz 0x2bcd6
mov edx,ebx
mov eax,[ebx+0x264]
call dword [ebx+0x260]
pop ebx
ret
push ebp
mov ebp,esp
add esp,byte -0x18
push esi
push edi
mov esi,edx
lea edi,[ebp-0x18]
movsd
movsd
movsd
movsd
push byte +0x0
lea edx,[ebp-0x4]
push edx
lea edx,[ebp-0x18]
mov ecx,0x2
call dword 0x26ff0
mov [ebp-0x8],eax
xor eax,eax
push ebp
push dword 0x42cd4f
push dword [fs:eax]
mov [fs:eax],esp
push byte +0x4
mov eax,[ebp-0x4]
push eax
push dword 0x318
mov eax,[ebp+0x8]
mov eax,[eax-0x4]
call dword 0x4831c
push eax
call dword 0x6278
lea edx,[ebp-0x18]
mov cl,0xff
mov eax,[ebp-0x8]
call dword 0x270e8
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x42cd56
or edx,byte -0x1
mov eax,[ebp-0x8]
call dword 0x2707c
ret
jmp dword 0x3384
jmp short 0x2bd43
pop edi
pop esi
mov esp,ebp
pop ebp
ret
push ebp
mov ebp,esp
add esp,byte -0x1c
push ebx
mov [ebp-0x8],edx
mov [ebp-0x4],eax
mov eax,[ebp-0x8]
mov eax,[eax]
sub eax,byte +0x7
jz 0x2bd8a
sub eax,0xb046
jz dword 0x2be49
sub eax,0xce6
jz 0x2bdb9
jmp dword 0x2bec0
mov eax,[0x468ea4]
cmp dword [eax],byte +0x1
jnz dword 0x2bec0
mov eax,[ebp-0x8]
mov eax,[eax+0x4]
push eax
call dword 0x6180
test eax,eax
jnz dword 0x2bec0
mov eax,[ebp-0x8]
xor edx,edx
mov [eax+0x4],edx
jmp dword 0x2bec0
mov eax,[ebp-0x4]
cmp byte [eax+0x240],0x0
jz dword 0x2bec0
call dword 0x27c2c
test al,al
jz dword 0x2bec0
mov eax,[ebp-0x4]
cmp dword [eax+0x26c],byte -0x1
jnz dword 0x2bec0
mov dl,0x1
mov eax,[ebp-0x4]
call dword 0x53e38
mov ebx,eax
test ebx,ebx
jz dword 0x2bec0
mov eax,ebx
call dword 0x603d0
call dword 0x606bc
test al,al
jz dword 0x2bec0
mov eax,ebx
call dword 0x603d0
mov edx,[ebp-0x4]
call dword 0x606f4
test al,al
jz dword 0x2bec0
mov eax,[ebp-0x4]
xor edx,edx
mov [eax+0x26c],edx
push byte +0x0
push byte +0x0
push dword 0xb04d
mov eax,[ebp-0x4]
call dword 0x4831c
push eax
call dword 0x6210
jmp short 0x2bec0
mov eax,[ebp-0x4]
cmp dword [eax+0x26c],byte +0x0
jnz 0x2bec0
mov eax,[ebp-0x4]
call dword 0x4831c
push eax
call dword 0x5fe0
mov [ebp-0xc],eax
xor eax,eax
push ebp
push dword 0x42ceb9
push dword [fs:eax]
mov [fs:eax],esp
push ebp
lea edx,[ebp-0x1c]
mov eax,[ebp-0x4]
mov ecx,[eax]
call dword [ecx+0x44]
lea edx,[ebp-0x1c]
mov eax,[ebp-0xc]
call dword 0x2bcd8
pop ecx
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x42cec0
mov eax,[ebp-0x4]
mov dword [eax+0x26c],0xffffffff

mov eax,[ebp-0xc]
push eax
mov eax,[ebp-0x4]
call dword 0x4831c
push eax
call dword 0x6250
ret
jmp dword 0x3384
jmp short 0x2be99
mov edx,[ebp-0x8]
mov eax,[ebp-0x4]
call dword 0x4593c
pop ebx
mov esp,ebp
pop ebp
ret
push esi
mov esi,eax
mov eax,esi
mov ecx,[eax]
call dword [ecx-0x10]
mov eax,[0x468c68]
cmp byte [eax],0x0
jz 0x2bf0d
push byte -0x10
mov eax,esi
call dword 0x4831c
push eax
call dword 0x60f8
test al,0x4
jnz 0x2bf0d
push byte +0x0
push byte +0x3
push dword 0xd3
mov eax,esi
call dword 0x4831c
push eax
call dword 0x6278
pop esi
ret
nop
push ebx
push esi
mov esi,edx
mov ebx,eax
mov eax,[0x468c68]
cmp byte [eax],0x0
jz 0x2bf37
cmp byte [ebx+0x254],0x1
jnz 0x2bf37
mov eax,ebx
call dword 0x2bbd0
mov eax,ebx
call dword 0x44c28
mov edx,esi
mov eax,ebx
call dword 0x47904
pop esi
pop ebx
ret
nop
push ebx
mov ebx,eax
mov eax,ebx
call dword 0x47848
test byte [ebx+0x51],0x2
jz 0x2bf67
test byte [ebx+0x1c],0x10
jz 0x2bf60
test byte [ebx+0x1c],0x1
jnz 0x2bf67
mov eax,ebx
call dword 0x2bc0c
pop ebx
ret
lea eax,[eax+0x0]
push esi
cmp word [edx+0x6],0x300
jnz 0x2bf87
cmp byte [eax+0x25c],0x0
jnz 0x2bf87
mov si,0xffb0
call dword 0x2dec
pop esi
ret
lea eax,[eax+0x0]
push ebx
push esi
mov esi,edx
mov ebx,eax
cmp byte [ebx+0x258],0x0
jz 0x2bfbb
test byte [ebx+0x54],0x1
jnz 0x2bfbb
push byte -0x10
mov eax,ebx
call dword 0x4831c
push eax
call dword 0x60f8
test al,0x4
jnz 0x2bfbb
mov eax,ebx
call dword 0x2b830
mov edx,esi
mov eax,ebx
call dword 0x476a0
pop esi
pop ebx
ret
nop
push esi
mov esi,eax
mov eax,esi
call dword 0x49740
mov eax,esi
call dword 0x486bc
test al,al
jz 0x2bff0
push byte -0x10
mov eax,esi
call dword 0x4831c
push eax
call dword 0x60f8
test al,0x4
jz 0x2bffb
mov eax,esi
mov si,0xffb0
call dword 0x2dec
pop esi
ret
lea eax,[eax+0x0]
push ebx
push esi
mov esi,edx
mov ebx,eax
mov eax,ebx
mov edx,[eax]
call dword [edx+0xd4]
mov edx,esi
mov eax,ebx
call dword 0x495a8
pop esi
pop ebx
ret
push ebx
push esi
mov ebx,eax
xor esi,esi
mov eax,[ebx+0x18]
call dword 0x486bc
test al,al
jnz 0x2c037
mov eax,[ebx+0x18]
cmp dword [eax+0x64],byte +0x0
jz 0x2c084
push byte +0x0
push byte +0x0
push dword 0xba
mov eax,[ebx+0x18]
call dword 0x4831c
push eax
call dword 0x6278
mov esi,eax
push byte +0x0
push byte +0x0
mov eax,esi
dec eax
push eax
push dword 0xbb
mov eax,[ebx+0x18]
call dword 0x4831c
push eax
call dword 0x6278
push eax
push dword 0xc1
mov eax,[ebx+0x18]
call dword 0x4831c
push eax
call dword 0x6278
test eax,eax
jnz 0x2c084
dec esi
mov eax,esi
pop esi
pop ebx
ret
lea eax,[eax+0x0]
push ebx
push esi
push edi
add esp,0xfffff004
push eax
mov edi,ecx
mov esi,edx
mov ebx,eax
mov eax,esp
mov word [eax],0x1000
mov eax,esp
push eax
push esi
push dword 0xc4
mov eax,[ebx+0x18]
call dword 0x4831c
push eax
call dword 0x6278
mov ecx,eax
mov edx,esp
mov eax,edi
call dword 0x3b0c
add esp,0x1000
pop edi
pop esi
pop ebx
ret
nop
push ebx
push esi
push edi
mov edi,ecx
mov esi,edx
mov ebx,eax
push byte +0x0
push esi
push dword 0xbb
mov eax,[ebx+0x18]
call dword 0x4831c
push eax
call dword 0x6278
mov esi,eax
test esi,esi
jl 0x2c13f
push byte +0x0
push esi
push dword 0xc1
mov eax,[ebx+0x18]
call dword 0x4831c
push eax
call dword 0x6278
add eax,esi
push eax
push esi
push dword 0xb1
mov eax,[ebx+0x18]
call dword 0x4831c
push eax
call dword 0x6278
mov eax,edi
call dword 0x3eac
push eax
push byte +0x0
push dword 0xc2
mov eax,[ebx+0x18]
call dword 0x4831c
push eax
call dword 0x6278
pop edi
pop esi
pop ebx
ret
nop
push ebp
mov ebp,esp
add esp,byte -0x8
push ebx
push esi
push edi
xor ebx,ebx
mov [ebp-0x4],ebx
mov [ebp-0x8],ecx
mov edi,edx
mov esi,eax
xor eax,eax
push ebp
push dword 0x42d22f
push dword [fs:eax]
mov [fs:eax],esp
test edi,edi
jl dword 0x2c219
push byte +0x0
push edi
push dword 0xbb
mov eax,[esi+0x18]
call dword 0x4831c
push eax
call dword 0x6278
mov ebx,eax
test ebx,ebx
jl 0x2c19d
lea eax,[ebp-0x4]
mov ecx,0x42d248
mov edx,[ebp-0x8]
call dword 0x3d34
jmp short 0x2c1e6
push byte +0x0
dec edi
push edi
push dword 0xbb
mov eax,[esi+0x18]
call dword 0x4831c
push eax
call dword 0x6278
mov ebx,eax
test ebx,ebx
jl 0x2c219
push byte +0x0
push ebx
push dword 0xc1
mov eax,[esi+0x18]
call dword 0x4831c
push eax
call dword 0x6278
test eax,eax
jz 0x2c219
add ebx,eax
lea eax,[ebp-0x4]
mov ecx,[ebp-0x8]
mov edx,0x42d248
call dword 0x3d34
push ebx
push ebx
push dword 0xb1
mov eax,[esi+0x18]
call dword 0x4831c
push eax
call dword 0x6278
mov eax,[ebp-0x4]
call dword 0x3eac
push eax
push byte +0x0
push dword 0xc2
mov eax,[esi+0x18]
call dword 0x4831c
push eax
call dword 0x6278
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x42d236
lea eax,[ebp-0x4]
call dword 0x3a1c
ret
jmp dword 0x3384
jmp short 0x2c226
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
ret
add [eax],al
add bh,bh
db 0xff
db 0xff
inc dword [edx]
add [eax],al
add [dword 0xa],cl
add [eax],al
add [ebx+0x56],dl
push edi
mov edi,edx
mov ebx,eax
push byte +0x0
push edi
push dword 0xbb
mov eax,[ebx+0x18]
call dword 0x4831c
push eax
call dword 0x6278
mov esi,eax
test esi,esi
jl 0x2c2da
push byte +0x0
inc edi
push edi
push dword 0xbb
mov eax,[ebx+0x18]
call dword 0x4831c
push eax
call dword 0x6278
mov edi,eax
test edi,edi
jnl 0x2c2aa
push byte +0x0
push esi
push dword 0xc1
mov eax,[ebx+0x18]
call dword 0x4831c
push eax
call dword 0x6278
mov edi,eax
add edi,esi
push edi
push esi
push dword 0xb1
mov eax,[ebx+0x18]
call dword 0x4831c
push eax
call dword 0x6278
mov eax,[0x467e90]
push eax
push byte +0x0
push dword 0xc2
mov eax,[ebx+0x18]
call dword 0x4831c
push eax
call dword 0x6278
pop edi
pop esi
pop ebx
ret
mov eax,eax
push esi
mov esi,eax
mov eax,[esi+0x18]
mov edx,[eax]
call dword [edx+0xf0]
pop esi
ret
push ebx
push esi
mov ebx,edx
mov esi,eax
mov eax,[esi+0x18]
call dword 0x486bc
test al,al
jz 0x2c33c
push byte +0x0
mov eax,ebx
xor al,0x1
and eax,byte +0x7f
push eax
push byte +0xb
mov eax,[esi+0x18]
call dword 0x4831c
push eax
call dword 0x6278
xor bl,0x1
test bl,bl
jz 0x2c33c
push byte +0x0
xor ecx,ecx
mov edx,0xb019
mov eax,[esi+0x18]
call dword 0x41588
mov eax,[esi+0x18]
call dword 0x40898
pop esi
pop ebx
ret
nop
push ebx
push esi
mov esi,edx
mov ebx,eax
mov edx,esi
mov eax,[ebx+0x18]
call dword 0x40298
pop esi
pop ebx
ret
nop
push ebp
mov ebp,esp
push byte +0x0
push byte +0x0
push byte +0x0
push ebx
push esi
push edi
mov ebx,edx
mov esi,eax
xor eax,eax
push ebp
push dword 0x42d428
push dword [fs:eax]
mov [fs:eax],esp
lea ecx,[ebp-0x4]
mov dl,0x1
mov eax,ebx
call dword 0x796c
mov edi,[ebp-0x4]
mov ebx,edi
test ebx,ebx
jz 0x2c38c
sub ebx,byte +0x4
mov ebx,[ebx]
mov eax,[esi+0x18]
call dword 0x40208
cmp ebx,eax
jz 0x2c39c
mov al,0x1
jmp short 0x2c3b5
lea edx,[ebp-0x8]
mov eax,[esi+0x18]
call dword 0x40298
mov edx,[ebp-0x8]
mov eax,[ebp-0x4]
call dword 0x3e44
setnz al
test al,al
jz 0x2c402
push edi
push byte +0x0
push byte +0xc
mov eax,[esi+0x18]
call dword 0x4831c
push eax
call dword 0x6278
test eax,eax
jnz 0x2c3f1
lea edx,[ebp-0xc]
mov eax,[0x468d94]
call dword 0x5750
mov ecx,[ebp-0xc]
mov dl,0x1
mov eax,[0x4128ec]
call dword 0xb450
call dword 0x3464
push byte +0x0
mov eax,[esi+0x18]
xor ecx,ecx
mov edx,0xb012
call dword 0x41588
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x42d42f
lea eax,[ebp-0xc]
call dword 0x3a1c
lea eax,[ebp-0x8]
call dword 0x3a1c
lea eax,[ebp-0x4]
call dword 0x3a1c
ret
jmp dword 0x3384
jmp short 0x2c40f
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret
mov eax,eax
push ebp
mov ebp,esp
push ecx
push ebx
push esi
test dl,dl
jz 0x2c44a
add esp,byte -0x10
call dword 0x2f14
mov [ebp-0x1],dl
mov ebx,eax
xor edx,edx
mov eax,ebx
call dword 0x2b488
mov edx,0xb9
mov eax,ebx
call dword 0x3f980
mov edx,0x59
mov eax,ebx
call dword 0x3f9b4
xor edx,edx
mov eax,ebx
mov ecx,[eax]
call dword [ecx+0x60]
mov byte [ebx+0x276],0x1
mov byte [ebx+0x277],0x1
mov dl,0x1
mov eax,[0x42b8e0]
call dword 0x2bc0
mov esi,eax
mov [ebx+0x270],esi
mov [esi+0x18],ebx
xor edx,edx
mov eax,ebx
mov ecx,[eax]
call dword [ecx+0xc8]
mov eax,ebx
cmp byte [ebp-0x1],0x0
jz 0x2c4c1
call dword 0x2f6c
pop dword [dword fs:0x0]
add esp,byte +0xc
mov eax,ebx
pop esi
pop ebx
pop ecx
pop ebp
ret
push ebx
push esi
call dword 0x2fbc
mov ebx,edx
mov esi,eax
mov eax,[esi+0x270]
call dword 0x2bf0
mov edx,ebx
and dl,0xfc
mov eax,esi
call dword 0x43244
test bl,bl
jng 0x2c4f5
mov eax,esi
call dword 0x2f64
pop esi
pop ebx
ret
push ebx
push esi
push edi
mov edi,edx
mov ebx,eax
mov edx,edi
mov eax,ebx
call dword 0x2b984
mov eax,ebx
mov si,0xffc7
call dword 0x2dec
and eax,byte +0x7f
lea eax,[eax+eax*2]
lea eax,[eax*4+0x467e94]
movzx edx,byte [ebx+0x274]
mov eax,[eax+edx*4]
mov edx,[edi+0x4]
movzx ecx,byte [ebx+0x276]
mov ecx,[ecx*4+0x467ebc]
not ecx
and edx,ecx
or edx,byte +0x4
or eax,edx
movzx edx,byte [ebx+0x275]
or eax,[edx*4+0x467eac]
mov [edi+0x4],eax
pop edi
pop esi
pop ebx
ret
lea eax,[eax+0x0]
push ebx
push esi
push edi
mov ebx,edx
mov esi,eax
mov eax,[0x468eb4]
cmp byte [eax+0xc],0x0
jz 0x2c5d4
mov eax,[0x468ea4]
cmp dword [eax],byte +0x2
jz 0x2c5d4
test byte [ebx+0x5],0x8
jz 0x2c5d4
mov eax,[ebx+0x4]
and eax,0xfffff7ff
push eax
mov eax,[ebx+0xc]
push eax
mov eax,[ebx+0x10]
push eax
mov eax,[ebx+0x14]
push eax
mov eax,[ebx+0x18]
push eax
mov eax,[ebx+0x1c]
push eax
push byte +0x0
mov eax,[0x46b7f4]
push eax
mov eax,[ebx+0x20]
push eax
mov ecx,0x42d628
lea edx,[ebx+0x4c]
mov eax,[ebx+0x8]
call dword 0x63a8
mov edi,eax
mov [esi+0x1b4],edi
test edi,edi
jz 0x2c60e
push byte +0x0
push byte +0x1
push dword 0xcf
push edi
call dword 0x6278
jmp short 0x2c60e
mov eax,[ebx+0x4]
push eax
mov eax,[ebx+0xc]
push eax
mov eax,[ebx+0x10]
push eax
mov eax,[ebx+0x14]
push eax
mov eax,[ebx+0x18]
push eax
mov eax,[ebx+0x1c]
push eax
push byte +0x0
mov eax,[0x46b7f4]
push eax
mov eax,[ebx+0x20]
push eax
mov ecx,0x42d628
lea edx,[ebx+0x4c]
mov eax,[ebx+0x8]
call dword 0x63a8
mov [esi+0x1b4],eax
mov eax,[ebx]
push eax
push byte +0x0
push byte +0xc
mov eax,[esi+0x1b4]
push eax
call dword 0x6278
pop edi
pop esi
pop ebx
ret
add [eax],al
add [eax],al
add [eax],al
add [ebx+0x56],dl
mov esi,edx
mov ebx,eax
push byte +0x0
push byte +0x0
push dword 0xb0
mov eax,ebx
call dword 0x4831c
push eax
call dword 0x6278
shr eax,byte 0x10
movzx eax,ax
mov [esi],eax
push byte +0x0
mov eax,[esi]
push eax
push dword 0xc9
mov eax,ebx
call dword 0x4831c
push eax
call dword 0x6278
mov [esi+0x4],eax
push byte +0x0
push byte -0x1
push dword 0xbb
mov eax,ebx
call dword 0x4831c
push eax
call dword 0x6278
sub [esi],eax
pop esi
pop ebx
ret
lea eax,[eax+0x0]
push ebx
push esi
mov esi,edx
mov ebx,eax
push byte +0x0
mov eax,[esi+0x4]
push eax
push dword 0xbb
mov eax,ebx
call dword 0x4831c
push eax
call dword 0x6278
add eax,[esi]
mov esi,eax
push esi
push esi
push dword 0xb1
mov eax,ebx
call dword 0x4831c
push eax
call dword 0x6278
pop esi
pop ebx
ret
lea eax,[eax+0x0]
movzx eax,byte [eax+0x274]
ret
push ebx
mov ebx,eax
mov eax,ebx
call dword 0x42a34
xor edx,edx
mov eax,ebx
call dword 0x2b640
pop ebx
ret
lea eax,[eax+0x0]
cmp dl,[eax+0x274]
jz 0x2c6f7
mov [eax+0x274],dl
call dword 0x44c28
ret
push esi
mov esi,eax
mov eax,[esi+0x270]
mov ecx,[eax]
call dword [ecx+0x8]
pop esi
ret
cmp dl,[eax+0x275]
jz 0x2c71b
mov [eax+0x275],dl
call dword 0x44c28
ret
cmp dl,[eax+0x276]
jz 0x2c72f
mov [eax+0x276],dl
call dword 0x44c28
ret
push ebx
push esi
mov esi,edx
mov ebx,eax
mov edx,esi
mov eax,ebx
mov ecx,[eax]
call dword [ecx-0x10]
cmp byte [ebx+0x278],0x0
jz 0x2c74e
or dword [esi+0xc],byte +0x2
jmp short 0x2c752
and dword [esi+0xc],byte -0x3
cmp byte [ebx+0x277],0x0
jnz 0x2c75f
and dword [esi+0xc],byte -0x5
pop esi
pop ebx
ret
mov eax,eax
call dword 0x47574
ret
mov eax,eax
push ebx
push esi
mov esi,edx
mov ebx,eax
mov edx,esi
mov eax,ebx
call dword 0x47298
cmp byte [esi],0xd
jnz 0x2c78c
cmp byte [ebx+0x277],0x0
jnz 0x2c78c
mov byte [esi],0x0
pop esi
pop ebx
ret
nop
push ebx
push esi
mov esi,edx
mov ebx,eax
mov edx,esi
mov eax,ebx
call dword 0x430cc
mov eax,esi
mov edx,[dword 0x42afe4]
call dword 0x2da0
mov [ebx+0x28],eax
pop esi
pop ebx
ret
mov eax,eax
push ebx
mov ebx,eax
mov eax,ebx
call dword 0x50e18
test al,al
jz 0x2c7e2
mov eax,[ebx+0x28]
mov edx,[eax]
call dword [edx+0xd8]
push eax
mov eax,[ebx+0x10]
mov edx,[dword 0x45160c]
call dword 0x2da0
pop edx
cmp dl,[eax+0x69]
jz 0x2c7e6
xor eax,eax
pop ebx
ret
mov al,0x1
pop ebx
ret
mov eax,eax
push ebp
mov ebp,esp
push ecx
push ebx
mov ebx,edx
mov [ebp-0x4],eax
mov eax,[ebp-0x4]
mov edx,[eax]
call dword [edx+0x24]
test al,al
jz 0x2c849
mov eax,[ebp-0x4]
mov eax,[eax+0x28]
mov byte [eax+0x250],0x1
xor edx,edx
push ebp
push dword 0x42d842
push dword [fs:edx]
mov [fs:edx],esp
mov edx,ebx
mov ecx,[eax]
call dword [ecx+0xdc]
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x42d849
mov eax,[ebp-0x4]
mov eax,[eax+0x28]
mov byte [eax+0x250],0x0
ret
jmp dword 0x3384
jmp short 0x2c834
pop ebx
pop ecx
pop ebp
ret
lea eax,[eax+0x0]
push ebx
push esi
test dl,dl
jz 0x2c85e
add esp,byte -0x10
call dword 0x2f14
mov ebx,edx
mov esi,eax
xor edx,edx
mov eax,esi
call dword 0x43100
mov eax,[0x468eb4]
cmp byte [eax+0xc],0x0
jz 0x2c887
mov eax,[0x468ea4]
cmp dword [eax],byte +0x2
jnz 0x2c887
mov byte [esi+0x1b8],0x0
mov eax,esi
test bl,bl
jz 0x2c89c
call dword 0x2f6c
pop dword [dword fs:0x0]
add esp,byte +0xc
mov eax,esi
pop esi
pop ebx
ret
lea eax,[eax+0x0]
push ebx
push esi
push edi
mov ebx,ecx
mov esi,edx
mov edi,eax
mov ecx,ebx
mov edx,esi
mov eax,edi
call dword 0x48f34
mov eax,esi
mov edx,[dword 0x45160c]
call dword 0x2d7c
test al,al
jz 0x2c8e9
test bl,bl
jz 0x2c8db
mov eax,edi
mov edx,[eax]
call dword [edx+0xd8]
test al,al
jnz 0x2c8e9
movzx edx,byte [esi+0x69]
mov eax,edi
mov ecx,[eax]
call dword [ecx+0xdc]
pop edi
pop esi
pop ebx
ret
lea eax,[eax+0x0]
mov eax,[0x42aef0]
ret
mov eax,eax
xor eax,eax
ret
nop
ret
lea eax,[eax+0x0]
push ebx
push esi
push edi
mov edi,edx
mov ebx,eax
mov eax,[edi]
sub eax,0x201
jz 0x2c91e
sub eax,byte +0x2
jz 0x2c91e
sub eax,0xbb0e
jz 0x2c95f
jmp short 0x2c968
test byte [ebx+0x1c],0x10
jnz 0x2c968
mov eax,ebx
mov si,0xffb3
call dword 0x2dec
test al,al
jnz 0x2c968
mov byte [ebx+0x250],0x1
mov eax,ebx
call dword 0x4831c
push eax
call dword 0x62b0
mov byte [ebx+0x250],0x0
mov eax,ebx
mov si,0xffb3
call dword 0x2dec
test al,al
jz 0x2c971
jmp short 0x2c968
cmp byte [ebx+0x250],0x0
jnz 0x2c971
mov edx,edi
mov eax,ebx
call dword 0x4541c
pop edi
pop esi
pop ebx
ret
lea eax,[eax+0x0]
push ebx
push esi
push edi
mov esi,edx
mov ebx,eax
call dword 0x4e314
mov edi,eax
mov eax,ebx
call dword 0x4eb70
test al,al
jz 0x2c9ce
mov eax,[ebx+0x30]
cmp byte [eax+0x240],0x0
jz 0x2c9a9
mov edx,[esi+0x4]
mov eax,ebx
call dword 0x3cfe0
jmp short 0x2c9c2
push byte +0x0
push byte +0x0
push byte +0x0
mov eax,ebx
call dword 0x4831c
mov edx,eax
mov ecx,[esi+0x4]
mov eax,edi
call dword 0x4e51c
push byte +0x5
call dword 0x5d48
mov [esi+0xc],eax
jmp short 0x2c9d7
mov edx,esi
mov eax,ebx
mov ecx,[eax]
call dword [ecx-0x10]
pop edi
pop esi
pop ebx
ret
nop
push ebx
push esi
mov esi,edx
mov ebx,eax
call dword 0x4e314
call dword 0x4e41c
test al,al
jz 0x2c9fa
mov dword [esi+0xc],0x1
pop esi
pop ebx
ret
mov edx,esi
mov eax,ebx
call dword 0x465bc
pop esi
pop ebx
ret
mov eax,eax
push ebx
push esi
mov esi,edx
mov ebx,eax
mov edx,esi
mov eax,ebx
call dword 0x44440
cmp byte [ebx+0x251],0x0
jz 0x2ca27
or dword [esi+0x4],0x2000
pop esi
pop ebx
ret
mov eax,eax
cmp dl,[eax+0x251]
jz 0x2ca3f
mov [eax+0x251],dl
call dword 0x44c28
ret
push ebx
push esi
test dl,dl
jz 0x2ca4e
add esp,byte -0x10
call dword 0x2f14
mov ebx,edx
mov esi,eax
xor edx,edx
mov eax,esi
call dword 0x2c850
mov eax,[0x42daa0]
mov [esi+0x50],eax
mov edx,0x4b
mov eax,esi
call dword 0x3f980
mov edx,0x19
mov eax,esi
call dword 0x3f9b4
mov dl,0x1
mov eax,esi
call dword 0x485ec
mov eax,esi
test bl,bl
jz 0x2ca99
call dword 0x2f6c
pop dword [dword fs:0x0]
add esp,byte +0xc
mov eax,esi
pop esi
pop ebx
ret
add [eax],al
mov al,[0x53000000]
mov ebx,eax
mov dl,0x1
mov eax,ebx
call dword 0x53e38
test eax,eax
jz 0x2cac0
mov edx,[ebx+0x25c]
mov [eax+0x294],edx
mov eax,ebx
call dword 0x41dc0
pop ebx
ret
lea eax,[eax+0x0]
xor eax,eax
ret
nop
push ebx
push esi
push edi
push ebp
mov ebx,edx
mov ebp,eax
mov eax,ebp
call dword 0x486bc
test al,al
jz 0x2cb1d
test bl,bl
jz 0x2caed
mov si,0x1
jmp short 0x2caef
xor esi,esi
push byte -0x10
mov eax,ebp
call dword 0x4831c
push eax
call dword 0x60f8
and eax,byte +0xf
movzx edi,si
cmp eax,edi
jz 0x2cb1d
push byte +0x1
push edi
push dword 0xf4
mov eax,ebp
call dword 0x4831c
push eax
call dword 0x6278
pop ebp
pop edi
pop esi
pop ebx
ret
mov eax,eax
push ebx
mov ebx,eax
mov [ebx+0x258],dl
mov eax,ebx
call dword 0x486bc
test al,al
jz 0x2cb58
mov dl,0x1
mov eax,ebx
call dword 0x53e38
test eax,eax
jz 0x2cb58
mov edx,[eax+0x268]
push edx
xor ecx,ecx
mov edx,0xb007
call dword 0x41588
pop ebx
ret
mov eax,eax
push ebx
push esi
mov esi,edx
mov ebx,eax
mov edx,esi
mov eax,ebx
call dword 0x2ca08
mov ecx,0x42db90
mov edx,esi
mov eax,ebx
call dword 0x4436c
movzx eax,byte [ebx+0x258]
mov eax,[eax*4+0x467ec4]
or [esi+0x4],eax
pop esi
pop ebx
ret
add [eax],al
add [edx+0x55],al
push esp
push esp
dec edi
dec esi
add [eax],al
push ebx
mov ebx,eax
mov eax,ebx
call dword 0x4456c
movzx eax,byte [ebx+0x258]
mov [ebx+0x25a],al
pop ebx
ret
lea eax,[eax+0x0]
push esi
cmp word [edx+0x6],byte +0x0
jnz 0x2cbc5
mov si,0xffeb
call dword 0x2dec
pop esi
ret
nop
push ebx
push esi
push edi
mov edi,edx
mov ebx,eax
cmp word [edi+0x4],byte +0xd
jnz 0x2cbdf
cmp byte [ebx+0x25a],0x0
jnz 0x2cbef
cmp word [edi+0x4],byte +0x1b
jnz 0x2cc25
cmp byte [ebx+0x259],0x0
jz 0x2cc25
mov eax,[edi+0x8]
call dword 0x53cf8
movzx edx,byte [dword 0x42dc34]
cmp dl,al
jnz 0x2cc25
mov eax,ebx
mov si,0xffb6
call dword 0x2dec
test al,al
jz 0x2cc25
mov eax,ebx
mov si,0xffeb
call dword 0x2dec
mov dword [edi+0xc],0x1
jmp short 0x2cc2e
mov edx,edi
mov eax,ebx
call dword 0x47768
pop edi
pop esi
pop ebx
ret
add [eax],al
add [eax],al
add [eax],al
push ebp
mov ebp,esp
push byte +0x0
push ebx
push esi
push edi
mov edi,edx
mov ebx,eax
xor eax,eax
push ebp
push dword 0x42dcae
push dword [fs:eax]
mov [fs:eax],esp
lea edx,[ebp-0x4]
mov eax,ebx
call dword 0x40298
mov edx,[ebp-0x4]
movzx eax,word [edi+0x4]
call dword 0x53d84
test al,al
jz 0x2cc8f
mov eax,ebx
mov si,0xffb6
call dword 0x2dec
test al,al
jz 0x2cc8f
mov eax,ebx
mov si,0xffeb
call dword 0x2dec
mov dword [edi+0xc],0x1
jmp short 0x2cc98
mov edx,edi
mov eax,ebx
call dword 0x47770
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x42dcb5
lea eax,[ebp-0x4]
call dword 0x3a1c
ret
jmp dword 0x3384
jmp short 0x2cca5
pop edi
pop esi
pop ebx
pop ecx
pop ebp
ret
nop
push ebx
push esi
push edi
mov esi,edx
mov ebx,eax
mov edi,[esi+0x8]
mov eax,edi
mov edx,[dword 0x42b168]
call dword 0x2d7c
test al,al
jz 0x2cce4
cmp ebx,edi
setz al
mov [ebx+0x25a],al
jmp short 0x2ccf1
movzx eax,byte [ebx+0x258]
mov [ebx+0x25a],al
movzx edx,byte [ebx+0x25a]
mov eax,ebx
mov ecx,[eax]
call dword [ecx+0xe0]
mov edx,esi
mov eax,ebx
call dword 0x47778
pop edi
pop esi
pop ebx
ret
nop
push ebx
push esi
mov esi,edx
mov ebx,eax
call dword 0x4e314
call dword 0x4e41c
test al,al
jz 0x2cd2e
mov dword [esi+0xc],0x1
pop esi
pop ebx
ret
mov edx,esi
mov eax,ebx
mov ecx,[eax]
call dword [ecx-0x10]
pop esi
pop ebx
ret
mov eax,eax
push ebx
push esi
push edi
mov edi,edx
mov ebx,eax
call dword 0x4e314
mov esi,eax
mov eax,esi
call dword 0x4e41c
test al,al
jz 0x2cd92
mov eax,[ebx+0x30]
cmp byte [eax+0x240],0x0
jz 0x2cd6d
mov edx,[edi+0x4]
mov eax,ebx
call dword 0x3cfe0
jmp short 0x2cd86
push byte +0x0
push byte +0x0
push byte +0x0
mov eax,ebx
call dword 0x4831c
mov edx,eax
mov ecx,[edi+0x4]
mov eax,esi
call dword 0x4e51c
push byte +0x5
call dword 0x5d48
mov [edi+0xc],eax
jmp short 0x2cd9b
mov edx,edi
mov eax,ebx
mov ecx,[eax]
call dword [ecx-0x10]
pop edi
pop esi
pop ebx
ret
nop
push ebp
mov ebp,esp
xor eax,eax
push ebp
push dword 0x42ddd1
push dword [fs:eax]
mov [fs:eax],esp
inc dword [dword 0x46db84]
jnz 0x2cdc3
mov eax,[0x467ecc]
call dword 0x2bf0
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x42ddd8
ret
jmp dword 0x3384
jmp short 0x2cdd0
pop ebp
ret
mov eax,eax
jmp dword [dword 0x46edb8]
mov eax,eax
push esi
push edi
mov edi,eax
jmp short 0x2cdf4
mov [eax],si
add edx,byte +0x2
add eax,byte +0x2
dec ecx
movzx esi,word [edx]
test si,si
jz 0x2ce00
test ecx,ecx
ja 0x2cdea
mov word [eax],0x0
mov eax,edi
pop edi
pop esi
ret
mov eax,eax
push ebx
push esi
push edi
mov edi,ecx
mov esi,edx
mov ebx,eax
mov eax,esi
call dword 0x4348
mov edx,eax
mov ecx,edi
mov eax,ebx
call dword 0x2cde4
pop edi
pop esi
pop ebx
ret
nop
test eax,eax
jz 0x2ce89
test edx,edx
jz 0x2ce89
dec ecx
jl 0x2ce89
push esi
push ebx
mov esi,[edx-0x4]
mov ebx,[eax-0x4]
sub esi,ecx
add edx,ecx
cmp esi,ebx
jl 0x2ce87
test ebx,ebx
jng 0x2ce87
add esp,byte -0xc
add ebx,byte -0x1
add esi,edx
add edx,ebx
mov [esp+0x8],esi
add eax,ebx
sub ecx,edx
neg ebx
mov [esp+0x4],ecx
mov [esp],ebx
movzx ecx,byte [eax]
cmp cl,[edx]
jz 0x2ce9c
cmp cl,[edx+0x1]
jz 0x2ce9f
add edx,byte +0x4
cmp edx,[esp+0x8]
jc 0x2ce8c
add edx,byte -0x2
cmp edx,[esp+0x8]
jc 0x2ce69
add esp,byte +0xc
pop ebx
pop esi
xor eax,eax
ret
cmp cl,[edx-0x2]
jz 0x2ce99
cmp cl,[edx-0x1]
jnz 0x2ce69
add edx,byte +0x1
add edx,byte -0x2
add edx,byte -0x1
mov esi,[esp]
test esi,esi
jz 0x2cec7
movzx ebx,word [eax+esi]
cmp bx,[edx+esi+0x1]
jnz 0x2ce72
cmp esi,byte -0x2
jnl 0x2cec7
movzx ebx,word [eax+esi+0x2]
cmp bx,[edx+esi+0x3]
jnz 0x2ce72
add esi,byte +0x4
jl 0x2cea6
mov eax,[esp+0x4]
add edx,byte +0x2
cmp edx,[esp+0x8]
ja 0x2ce84
add esp,byte +0xc
add eax,edx
pop ebx
pop esi
ret
db 0xff
db 0xff
db 0xff
dec dword [ecx]
add [eax],al
add [ebx+0x6c],ah
push edi
gs
db 0x62
push ebx
outsb
outsd
ja 0x2ceee
add [eax],al
db 0xff
db 0xff
db 0xff
call dword [eax]
add [eax],al
add [ebx+0x6c],ah
push edi
bound eax,[gs:esi+0x6c]
outsd
jc 0x2cf63
insb
push edi
push dword 0x657469
add [eax],al
add bh,bh
db 0xff
db 0xff
call dword [edx]
add [eax],al
add [ebx+0x6c],ah
push edi
bound ecx,[gs:ecx+0x76]
gs outsb
gs jc 0x2cf64
insb
jnz 0x2cf98
push dword 0xffff0000
db 0xff
dec dword [eax+eax]
add [eax],al
arpl [edi+edx*2+0x65],bp
bound ecx,[edi+0x6c]
fs dec esp
popad
arpl [ebp+0x0],sp
add [eax],al
add bh,bh
db 0xff
db 0xff
dec dword [edx]
add [eax],al
add [ebx+0x6c],ah
push edi
bound ecx,[gs:ecx+0x76]
outsd
jc 0x2cfcb
add [eax],al
db 0xff
db 0xff
db 0xff
dec dword [dword 0x63000000]
insb
push edi
gs
db 0x62
inc ebx
outsd
jc 0x2cfd3
push ebx
imul ebp,[ebx+ebp*2+0x0],dword 0xffff0000
db 0xff
dec dword [edx]
add [eax],al
add [ebx+0x6c],ah
push edi
gs
db 0x62
inc edx
imul esp,[gs:edi+0x65],dword 0xffff0000
db 0xff
call dword [ecx]
add [eax],al
add [ebx+0x6c],ah
push edi
gs
db 0x62
inc ecx
outsb
jz 0x2cffa
jno 0x2d008
gs push edi
push dword 0x657469
add [eax],al
db 0xff
db 0xff
db 0xff
dec dword [edx]
add [eax],al
add [ebx+0x6c],ah
push edi
bound edx,[gs:edi+0x68]
gs popad
jz 0x2cfaf
add bh,bh
db 0xff
db 0xff
dec dword [esi]
add [eax],al
add [ebx+0x6c],ah
push edi
gs
db 0x62
inc ecx
insb
imul esp,[ebx+0x65],dword 0x65756c42
add [eax],al
db 0xff
db 0xff
db 0xff
dec dword [edi]
add [eax],al
add [ebx+0x6c],ah
push edi
bound eax,[gs:edi+0x68]
outsd
jnc 0x2d04e
push edi
push dword 0x657469
db 0xff
db 0xff
db 0xff
dec dword [dword 0x63000000]
insb
push edi
bound ecx,[gs:ecx+0x76]
gs outsb
gs jc 0x2cff6
add [eax],al
db 0xff
db 0xff
db 0xff
dec dword [dword 0x63000000]
insb
push edi
gs
db 0x62
push ebx
gs popad
jnc 0x2d072
gs insb
insb
add [eax],al
add bh,bh
db 0xff
db 0xff
call dword [eax]
add [eax],al
add [ebx+0x6c],ah
push edi
bound ecx,[gs:ecx+ebp*2+0x67]
push dword 0x6c655974
insb
outsd
ja 0x2d029
add [eax],al
add bh,bh
db 0xff
db 0xff
dec dword [edi]
add [eax],al
add [ebx+0x6c],ah
push edi
bound edx,[gs:eax+0x61]
jo 0x2d09e
jns 0x2d0a0
push edi
push dword 0xff007069
db 0xff
db 0xff
call dword [eax]
add [eax],al
add [ebx+0x6c],ah
push edi
bound ecx,[gs:esi+0x61]
jna 0x2d0b6
push byte +0x6f
push edi
push dword 0x657469
add [eax],al
add bh,bh
db 0xff
db 0xff
dec dword [dword 0x63000000]
insb
push edi
bound ecx,[gs:ebp+0x6f]
arpl [ebx+0x61],sp
jnc 0x2d0dd
outsb
add [eax],al
add bh,bh
db 0xff
db 0xff
dec dword [esi]
add [eax],al
add [ebx+0x6c],ah
push edi
gs
db 0x62
inc edx
jnz 0x2d0fa
insb
jns 0x2d102
outsd
outsd
add [fs:eax],al
db 0xff
db 0xff
db 0xff
dec dword [edx]
add [eax],al
add [ebx+0x6c],ah
push edi
gs
db 0x62
inc ecx
jpe 0x2d115
jc 0x2d107
add [eax],al
db 0xff
db 0xff
db 0xff
dec dword [esi]
add [eax],al
add [ebx+0x6c],ah
push edi
bound ecx,[gs:ebp+0x69]
outsb
jz 0x2d119
jc 0x2d11d
popad
insd
add [eax],al
db 0xff
db 0xff
db 0xff
dec dword [dword 0x63000000]
insb
push edi
bound ecx,[gs:eax+0x6f]
outsb
gs jns 0x2d133
gs ja 0x2d0d2
add [eax],al
db 0xff
db 0xff
db 0xff
dec dword [edx]
add [eax],al
add [ebx+0x6c],ah
push edi
bound ecx,[gs:ecx+ebp*2+0x6e]
gs outsb
add [eax],al
db 0xff
db 0xff
db 0xff
call dword [ecx]
add [eax],al
add [ebx+0x6c],ah
push edi
bound ecx,[gs:ebp+0x6d]
outsd
outsb
inc ebx
push dword 0x6f666669
outsb
add [eax],al
add bh,bh
db 0xff
db 0xff
call dword [ebx]
add [eax],al
add [ebx+0x6c],ah
push edi
gs
db 0x62
inc edx
insb
popad
outsb
arpl [eax+0x65],bp
fs inc ecx
insb
insd
outsd
outsb
fs add bh,bh
db 0xff
db 0xff
dec dword [ebx]
add [eax],al
add [ebx+0x6c],ah
push edi
gs
db 0x62
inc edx
imul esi,[ebx+0x71],dword 0xff006575
db 0xff
db 0xff
dec dword [esi]
add [eax],al
add [ebx+0x6c],ah
push edi
bound edx,[gs:eax+0x65]
popad
arpl [eax+0x50],bp
jnz 0x2d1af
o16 add [eax],al
db 0xff
db 0xff
db 0xff
dec dword [eax]
add [eax],al
add [ebx+0x6c],ah
push edi
bound edx,[gs:ecx+0x6e]
add [eax],al
add [eax],al
db 0xff
db 0xff
db 0xff
dec dword [ebx]
add [eax],al
add [ebx+0x6c],ah
push edi
bound ebx,[gs:ecx+0x65]
insb
insb
outsd
ja 0x2d174
db 0xff
db 0xff
db 0xff
dec dword [edi]
add [eax],al
add [ebx+0x6c],ah
push edi
bound eax,[gs:ecx+0x72]
imul ecx,[edi+0x72],byte +0x61
outsb
gs add bh,bh
db 0xff
db 0xff
dec dword [eax]
add [eax],al
add [ebx+0x6c],ah
push edi
gs
db 0x62
push edx
add [fs:eax],al
add [eax],al
db 0xff
db 0xff
db 0xff
dec dword [eax+eax]
add [eax],al
arpl [edi+edx*2+0x65],bp
bound eax,[ecx+0x72]
imul edx,[edx+0x65],byte +0x64
add [eax],al
add [eax],al
db 0xff
db 0xff
db 0xff
dec dword [ebx]
add [eax],al
add [ebx+0x6c],ah
push edi
bound ecx,[gs:ebp+0x61]
jc 0x2d238
outsd
outsb
add bh,bh
db 0xff
db 0xff
dec dword [esi]
add [eax],al
add [ebx+0x6c],ah
push edi
bound ecx,[gs:ecx+0x6e]
imul esp,[fs:ecx+0x6e],dword 0x646552
add bh,bh
db 0xff
db 0xff
dec dword [ebx]
add [eax],al
add [ebx+0x6c],ah
push edi
gs
db 0x62
push ebx
popad
insb
insd
outsd
outsb
add bh,bh
db 0xff
db 0xff
dec dword [edx]
add [eax],al
add [ebx+0x6c],ah
push edi
gs
db 0x62
inc ebx
outsd
jc 0x2d26a
insb
add [eax],al
db 0xff
db 0xff
db 0xff
dec dword [ecx]
add [eax],al
add [ebx+0x6c],ah
push edi
bound eax,[gs:edi+0x6f]
insb
add [fs:eax],al
add bh,bh
db 0xff
db 0xff
dec dword [ebx]
add [eax],al
add [ebx+0x6c],ah
push edi
bound edx,[gs:edi+ebp*2+0x6d]
popad
jz 0x2d2a2
add bh,bh
db 0xff
db 0xff
dec dword [eax+eax]
add [eax],al
arpl [edi+edx*2+0x65],bp
db 0x62
inc ebx
jc 0x2d2ad
insd
jnc 0x2d2b6
outsb
add [eax],al
add [eax],al
db 0xff
db 0xff
db 0xff
dec dword [edx]
add [eax],al
add [ebx+0x6c],ah
push edi
gs
db 0x62
inc edx
jc 0x2d2cb
ja 0x2d2cc
add [eax],al
db 0xff
db 0xff
db 0xff
dec dword [esi]
add [eax],al
add [ebx+0x6c],ah
push edi
gs
db 0x62
inc ebx
push dword 0x6c6f636f
popad
jz 0x2d2db
add [eax],al
db 0xff
db 0xff
db 0xff
dec dword [edi]
add [eax],al
add [ebx+0x6c],ah
push edi
gs
db 0x62
push ebx
popad
outsb
fs jns 0x2d2cd
jc 0x2d2fc
ja 0x2d2fd
add bh,bh
db 0xff
db 0xff
call dword [eax]
add [eax],al
add [ebx+0x6c],ah
push edi
bound ecx,[gs:ecx+ebp*2+0x67]
push dword 0x6c615374
insd
outsd
outsb
add [eax],al
add [eax],al
db 0xff
db 0xff
db 0xff
dec dword [edi]
add [eax],al
add [ebx+0x6c],ah
push edi
bound ecx,[gs:ecx+ebp*2+0x67]
push dword 0x726f4374
popad
insb
add bh,bh
db 0xff
db 0xff
dec dword [ebx]
add [eax],al
add [ebx+0x6c],ah
push edi
bound ecx,[gs:edi+0x72]
popad
outsb
gs add bh,bh
db 0xff
db 0xff
dec dword [esi]
add [eax],al
add [ebx+0x6c],ah
push edi
bound ecx,[gs:edi+0x72]
popad
outsb
gs push edx
add [fs:eax],al
db 0xff
db 0xff
db 0xff
dec dword [esi]
add [eax],al
add [ebx+0x6c],ah
push edi
bound eax,[gs:esi+0x69]
jc 0x2d366
db 0x62
jc 0x2d36d
arpl [ebx+0x0],bp
add bh,bh
db 0xff
db 0xff
call dword [eax]
add [eax],al
add [ebx+0x6c],ah
push edi
gs
db 0x62
push ebx
popad
fs insb
gs inc edx
jc 0x2d38d
ja 0x2d38e
add [eax],al
add [eax],al
db 0xff
db 0xff
db 0xff
dec dword [ebx]
add [eax],al
add [ebx+0x6c],ah
push edi
gs
db 0x62
push ebx
imul esp,[ebp+0x6e],dword 0xff00616e
db 0xff
db 0xff
dec dword [ecx]
add [eax],al
add [ebx+0x6c],ah
push edi
bound edx,[gs:eax+0x65]
jc 0x2d3be
add [eax],al
add bh,bh
db 0xff
db 0xff
dec dword [edi]
add [eax],al
add [ebx+0x6c],ah
push edi
bound eax,[gs:ecx+0x72]
imul edx,[ebx+0x61],byte +0x6c
insd
outsd
outsb
add bh,bh
db 0xff
db 0xff
dec dword [esi]
add [eax],al
add [ebx+0x6c],ah
push edi
gs
db 0x62
push edx
outsd
jnc 0x2d3ee
inc edx
jc 0x2d3e7
ja 0x2d3e8
add [eax],al
db 0xff
db 0xff
db 0xff
call dword [edx]
add [eax],al
add [ebx+0x6c],ah
push edi
bound edx,[gs:eax+0x61]
insb
gs inc edi
outsd
insb
gs outsb
jc 0x2d404
add [fs:eax],al
db 0xff
db 0xff
db 0xff
call dword far [ecx]
add [eax],al
add [ebx+0x6c],ah
push edi
bound ecx,[gs:ecx+ebp*2+0x67]
push dword 0x6c6f4774
gs outsb
jc 0x2d421
fs pop ecx
gs insb
insb
outsd
ja 0x2d3ba
add [eax],al
db 0xff
db 0xff
db 0xff
dec dword [edx]
add [eax],al
add [ebx+0x6c],ah
push edi
bound ecx,[gs:edi+0x6c]
imul esi,[esi+0x65],dword 0xffff0000
db 0xff
call dword [eax]
add [eax],al
add [ebx+0x6c],ah
push edi
bound eax,[gs:esi+0x6f]
jc 0x2d446
jnc 0x2d457
inc edi
jc 0x2d44b
gs outsb
add [eax],al
add [eax],al
db 0xff
db 0xff
db 0xff
call dword [eax]
add [eax],al
add [ebx+0x6c],ah
push edi
bound eax,[gs:edi+0x72]
gs outsb
pop ecx
gs insb
insb
outsd
ja 0x2d405
add [eax],al
add bh,bh
db 0xff
db 0xff
dec dword [edi]
add [eax],al
add [ebx+0x6c],ah
push edi
gs
db 0x62
inc ebx
push dword 0x72747261
gs jnz 0x2d491
gs add bh,bh
db 0xff
db 0xff
dec dword [edi]
add [eax],al
add [ebx+0x6c],ah
push edi
bound ecx,[gs:ecx+ebp*2+0x67]
push dword 0x65724774
gs outsb
add bh,bh
db 0xff
db 0xff
dec dword [edi]
add [eax],al
add [ebx+0x6c],ah
push edi
gs
db 0x62
inc ecx
jno 0x2d4bd
popad
insd
popad
jc 0x2d4b6
outsb
gs add bh,bh
db 0xff
db 0xff
dec dword [dword 0x63000000]
insb
push edi
gs
db 0x62
push ebx
gs popad
inc edi
jc 0x2d4c8
gs outsb
add [eax],al
add bh,bh
db 0xff
db 0xff
dec dword [esi]
add [eax],al
add [ebx+0x6c],ah
push edi
bound eax,[gs:edi+0x6f]
insb
gs outsb
push edx
outsd
add [fs:eax],al
db 0xff
db 0xff
db 0xff
dec dword [edx]
add [eax],al
add [ebx+0x6c],ah
push edi
bound ecx,[gs:ebx+0x68]
popad
imul ebp,[ecx+0x0],byte +0x0
db 0xff
db 0xff
db 0xff
dec dword [esi]
add [eax],al
add [ebx+0x6c],ah
push edi
bound ecx,[gs:edi+0x6c]
imul esi,[esi+0x65],dword 0x62617244
add [eax],al
db 0xff
db 0xff
db 0xff
dec dword [edx]
add [eax],al
add [ebx+0x6c],ah
push edi
bound eax,[gs:edi+0x72]
gs outsb
add [eax],al
db 0xff
db 0xff
db 0xff
call dword [eax]
add [eax],al
add [ebx+0x6c],ah
push edi
bound ebx,[gs:ecx+0x65]
insb
insb
outsd
ja 0x2d51b
jc 0x2d53b
gs outsb
add [eax],al
add [eax],al
db 0xff
db 0xff
db 0xff
dec dword [esi]
add [eax],al
add [ebx+0x6c],ah
push edi
bound ecx,[gs:ecx+0x77]
outsb
inc edi
jc 0x2d555
gs outsb
add [eax],al
db 0xff
db 0xff
db 0xff
dec dword [esi]
add [eax],al
add [ebx+0x6c],ah
push edi
bound edx,[gs:eax+0x61]
insb
gs inc edi
jc 0x2d56d
gs outsb
add [eax],al
db 0xff
db 0xff
db 0xff
call dword [dword 0x63000000]
insb
push edi
bound ecx,[gs:ebp+0x65]
imul esi,[fs:ebp+0x6d],dword 0x61757141
insd
popad
jc 0x2d590
outsb
add [gs:eax],al
add bh,bh
db 0xff
db 0xff
call dword [ebx]
add [eax],al
add [ebx+0x6c],ah
push edi
bound ecx,[gs:ebp+0x65]
imul esi,[fs:ebp+0x6d],dword 0x47616553
jc 0x2d5aa
gs outsb
add bh,bh
db 0xff
db 0xff
call dword [edx]
add [eax],al
add [ebx+0x6c],ah
push edi
bound eax,[gs:ecx+0x72]
imul eax,[edi+0x6f],byte +0x6c
gs outsb
push edx
outsd
add [fs:eax],al
db 0xff
db 0xff
db 0xff
dec dword [esi]
add [eax],al
add [ebx+0x6c],ah
push edi
bound eax,[gs:ecx+0x72]
imul ecx,[ebx+0x68],byte +0x61
imul ebp,[ecx+0x0],byte +0x0
db 0xff
db 0xff
db 0xff
call dword [ebx]
add [eax],al
add [ebx+0x6c],ah
push edi
bound eax,[gs:ecx+0x72]
imul ecx,[edi+0x6c],byte +0x69
jna 0x2d5f7
inc edi
jc 0x2d5fa
gs outsb
add bh,bh
db 0xff
db 0xff
dec dword [esi]
add [eax],al
add [ebx+0x6c],ah
push edi
bound eax,[gs:ecx+0x72]
imul esp,[edi+0x72],byte +0x65
gs outsb
add [eax],al
db 0xff
db 0xff
db 0xff
dec dword [esi]
add [eax],al
add [ebx+0x6c],ah
push edi
bound ecx,[gs:ecx+ebp*2+0x6d]
gs inc edi
jc 0x2d629
gs outsb
add [eax],al
db 0xff
db 0xff
db 0xff
dec dword [ecx]
add [eax],al
add [ebx+0x6c],ah
push edi
bound ecx,[gs:ecx+ebp*2+0x6d]
add [gs:eax],al
add bh,bh
db 0xff
db 0xff
call dword [eax]
add [eax],al
add [ebx+0x6c],ah
push edi
gs
db 0x62
push ebx
jo 0x2d65e
imul ebp,[esi+0x67],dword 0x65657247
outsb
add [eax],al
add [eax],al
db 0xff
db 0xff
db 0xff
call dword [esi]
add [eax],al
add [ebx+0x6c],ah
push edi
bound ecx,[gs:ebp+0x65]
imul esi,[fs:ebp+0x6d],dword 0x69727053
outsb
inc edi
jc 0x2d679
gs outsb
add [eax],al
db 0xff
db 0xff
db 0xff
call dword [ecx]
add [eax],al
add [ebx+0x6c],ah
push edi
bound eax,[gs:ecx+0x72]
imul edx,[ebx+0x65],byte +0x61
inc edi
jc 0x2d694
gs outsb
add [eax],al
add bh,bh
db 0xff
db 0xff
call dword [edx]
add [eax],al
add [ebx+0x6c],ah
push edi
bound ecx,[gs:ecx+ebp*2+0x67]
push dword 0x61655374
inc edi
jc 0x2d6b1
gs outsb
add [eax],al
db 0xff
db 0xff
db 0xff
call dword [edx]
add [eax],al
add [ebx+0x6c],ah
push edi
bound edx,[gs:eax+0x61]
insb
gs push esp
jnz 0x2d6d6
jno 0x2d6db
outsd
imul esi,[ebx+0x65],dword 0xffff0000
db 0xff
dec dword [esi]
add [eax],al
add [ebx+0x6c],ah
push edi
bound ecx,[gs:ecx+ebp*2+0x67]
push dword 0x61794374
outsb
add [eax],al
db 0xff
db 0xff
db 0xff
dec dword [esi]
add [eax],al
add [ebx+0x6c],ah
push edi
bound ecx,[gs:ecx+ebp*2+0x67]
push dword 0x756c4274
add [gs:eax],al
db 0xff
db 0xff
db 0xff
call dword [ecx]
add [eax],al
add [ebx+0x6c],ah
push edi
bound ecx,[gs:ecx+ebp*2+0x67]
push dword 0x796b5374
inc edx
insb
jnz 0x2d71a
add [eax],al
add bh,bh
db 0xff
db 0xff
call dword [ebx]
add [eax],al
add [ebx+0x6c],ah
push edi
gs
db 0x62
inc ebx
outsd
jc 0x2d737
inc esi
insb
outsd
ja 0x2d733
jc 0x2d712
insb
jnz 0x2d738
add bh,bh
db 0xff
db 0xff
dec dword [dword 0x63000000]
insb
push edi
bound eax,[gs:ecx+0x72]
imul eax,[edx+0x6c],byte +0x75
add [gs:eax],al
add bh,bh
db 0xff
db 0xff
dec dword [ebx]
add [eax],al
add [ebx+0x6c],ah
push edi
bound ecx,[gs:ecx+0x6e]
imul esp,[fs:edi+0x6f],dword 0xffffff00
call dword [eax+eax]
add [eax],al
arpl [edi+edx*2+0x65],bp
bound ecx,[ebp+0x65]
imul esi,[fs:ebp+0x6d],dword 0x71727554
jnz 0x2d788
imul esi,[ebx+0x65],dword 0x0
db 0xff
db 0xff
db 0xff
dec dword [esi]
add [eax],al
add [ebx+0x6c],ah
push edi
bound edx,[gs:ebp+esi*2+0x72]
jno 0x2d7a7
outsd
imul esi,[ebx+0x65],dword 0xffff0000
db 0xff
dec dword [ecx]
add [eax],al
add [ebx+0x6c],ah
push edi
gs
db 0x62
inc ebx
jns 0x2d7a9
outsb
add [eax],al
add bh,bh
db 0xff
db 0xff
dec dword [edi]
add [eax],al
add [ebx+0x6c],ah
push edi
bound edx,[gs:eax+0x6f]
ja 0x2d7c1
gs jc 0x2d7a2
insb
jnz 0x2d7c8
add bh,bh
db 0xff
db 0xff
dec dword [eax+eax]
add [eax],al
arpl [edi+edx*2+0x65],bp
db 0x62
push ebx
imul edi,[ecx+0x42],byte +0x6c
jnz 0x2d7dd
add [eax],al
add [eax],al
db 0xff
db 0xff
db 0xff
dec dword [esi]
add [eax],al
add [ebx+0x6c],ah
push edi
gs
db 0x62
push edx
outsd
jns 0x2d7ee
insb
inc edx
insb
jnz 0x2d7f7
add [eax],al
db 0xff
db 0xff
db 0xff
dec dword [edi]
add [eax],al
add [ebx+0x6c],ah
push edi
bound ecx,[gs:ebp+0x65]
imul esi,[fs:ebp+0x6d],dword 0x65756c42
add bh,bh
db 0xff
db 0xff
call dword [ecx]
add [eax],al
add [ebx+0x6c],ah
push edi
bound ecx,[gs:ebp+0x69]
fs outsb
imul esp,[edi+0x68],dword 0x756c4274
add [gs:eax],al
add bh,bh
db 0xff
db 0xff
call dword [edx]
add [eax],al
add [ebx+0x6c],ah
push edi
bound eax,[gs:ecx+0x72]
imul edx,[ebp+esi*2+0x72],byte +0x71
jnz 0x2d84e
imul esi,[ebx+0x65],dword 0xffff0000
db 0xff
dec dword [esi]
add [eax],al
add [ebx+0x6c],ah
push edi
gs
db 0x62
inc ebx
popad
gs jz 0x2d839
insb
jnz 0x2d85f
add [eax],al
db 0xff
db 0xff
db 0xff
dec dword [dword 0x63000000]
insb
push edi
bound eax,[gs:ecx+0x72]
imul eax,[ebx+0x79],byte +0x61
outsb
add [eax],al
add bh,bh
db 0xff
db 0xff
dec dword [ecx]
add [eax],al
add [ebx+0x6c],ah
push edi
bound edx,[gs:ebp+0x61]
insb
add [eax],al
add bh,bh
db 0xff
db 0xff
call dword [eax]
add [eax],al
add [ebx+0x6c],ah
push edi
bound eax,[gs:ebp+0x65]
jo 0x2d8ad
imul edi,[ecx+0x42],byte +0x6c
jnz 0x2d8a5
add [eax],al
add [eax],al
db 0xff
db 0xff
db 0xff
dec dword [edi]
add [eax],al
add [ebx+0x6c],ah
push edi
bound eax,[gs:edi+ebp*2+0x64]
gs jc 0x2d89a
insb
jnz 0x2d8c0
add bh,bh
db 0xff
db 0xff
dec dword [ecx]
add [eax],al
add [ebx+0x6c],ah
push edi
gs
db 0x62
inc edx
insb
jnz 0x2d8d2
add [eax],al
add bh,bh
db 0xff
db 0xff
dec dword [ecx]
add [eax],al
add [ebx+0x6c],ah
push edi
bound ecx,[gs:esi+0x61]
jna 0x2d8fa
add [eax],al
add bh,bh
db 0xff
db 0xff
dec dword [edi]
add [eax],al
add [ebx+0x6c],ah
push edi
bound eax,[gs:ecx+0x72]
imul edx,[esi+0x69],byte +0x6f
insb
gs jz 0x2d89c
db 0xff
db 0xff
db 0xff
dec dword [edi]
add [eax],al
add [ebx+0x6c],ah
push edi
bound eax,[gs:ecx+0x72]
imul ecx,[edi+0x72],byte +0x63
push dword 0xff006469
db 0xff
db 0xff
dec dword [eax+eax]
add [eax],al
arpl [edi+edx*2+0x65],bp
bound ecx,[ebp+0x61]
gs a16 outsb
jz 0x2d929
add [eax],al
add [eax],al
db 0xff
db 0xff
db 0xff
call dword [eax]
add [eax],al
add [ebx+0x6c],ah
push edi
bound eax,[gs:ecx+0x72]
imul ecx,[ebp+0x61],byte +0x67
gs outsb
jz 0x2d945
add [eax],al
add [eax],al
db 0xff
db 0xff
db 0xff
call dword [eax+eax]
add [eax],al
arpl [edi+edx*2+0x65],bp
bound ecx,[ebp+0x65]
imul esi,[fs:ebp+0x6d],dword 0x6c6f6956
gs jz 0x2d954
add [fs:eax],al
add [eax],al
db 0xff
db 0xff
db 0xff
call dword [edx]
add [eax],al
add [ebx+0x6c],ah
push edi
bound edx,[gs:eax+0x61]
insb
gs push esi
imul ebp,[edi+0x6c],dword 0x65527465
add [fs:eax],al
db 0xff
db 0xff
db 0xff
dec dword [edi]
add [eax],al
add [ebx+0x6c],ah
push edi
gs
db 0x62
inc edx
insb
jnz 0x2d99a
push esi
imul ebp,[edi+0x6c],dword 0xff007465
db 0xff
db 0xff
call dword [ecx]
add [eax],al
add [ebx+0x6c],ah
push edi
bound ecx,[gs:ebp+0x65]
imul esi,[fs:ebp+0x6d],dword 0x6863724f
imul esp,[eax+eax+0x0],dword 0xffffff00
call dword [ecx]
add [eax],al
add [ebx+0x6c],ah
push edi
bound ecx,[gs:ebp+0x65]
imul esi,[fs:ebp+0x6d],dword 0x70727550
insb
add [gs:eax],al
add bh,bh
db 0xff
db 0xff
dec dword [ebx]
add [eax],al
add [ebx+0x6c],ah
push edi
bound edx,[gs:eax+0x75]
jc 0x2d9f5
insb
gs add bh,bh
db 0xff
db 0xff
dec dword [dword 0x63000000]
insb
push edi
bound eax,[gs:ebp+0x65]
jo 0x2d9ea
imul ebp,[esi+0x6b],dword 0xff000000
db 0xff
db 0xff
dec dword [esi]
add [eax],al
add [ebx+0x6c],ah
push edi
bound ecx,[gs:ecx+ebp*2+0x67]
push dword 0x6e695074
imul eax,[eax],byte +0x0
db 0xff
db 0xff
db 0xff
dec dword [ebx]
add [eax],al
add [ebx+0x6c],ah
push edi
bound edx,[gs:esi+0x69]
outsd
insb
gs jz 0x2d9cc
db 0xff
db 0xff
db 0xff
dec dword [ebx]
add [eax],al
add [ebx+0x6c],ah
push edi
bound ecx,[gs:edi+0x72]
arpl [eax+0x69],bp
fs add bh,bh
db 0xff
db 0xff
dec dword [ecx]
add [eax],al
add [ebx+0x6c],ah
push edi
bound edx,[gs:eax+0x6c]
jnz 0x2da5e
add [eax],al
add bh,bh
db 0xff
db 0xff
dec dword [eax+eax]
add [eax],al
arpl [edi+edx*2+0x65],bp
bound edx,[eax+ebp*2+0x69]
jnc 0x2da7a
insb
add [gs:eax],al
add [eax],al
db 0xff
db 0xff
db 0xff
dec dword [eax+eax]
add [eax],al
arpl [edi+edx*2+0x65],bp
bound ecx,[eax+0x6f]
jz 0x2da6d
imul ebp,[esi+0x6b],dword 0x0
db 0xff
db 0xff
db 0xff
dec dword [ecx]
add [eax],al
add [ebx+0x6c],ah
push edi
bound edx,[gs:eax+0x69]
outsb
imul eax,[eax],byte +0x0
add bh,bh
db 0xff
db 0xff
call dword [ebx]
add [eax],al
add [ebx+0x6c],ah
push edi
bound ecx,[gs:ecx+ebp*2+0x67]
push dword 0x65745374
gs insb
inc edx
insb
jnz 0x2dab8
add bh,bh
db 0xff
db 0xff
call dword [eax+eax]
add [eax],al
arpl [edi+edx*2+0x65],bp
bound ecx,[ebp+0x65]
imul esi,[fs:ebp+0x6d],dword 0x74616c53
gs inc edx
insb
jnz 0x2dad5
add [eax],al
add [eax],al
db 0xff
db 0xff
db 0xff
call dword [ebx]
add [eax],al
add [ebx+0x6c],ah
push edi
bound ecx,[gs:ecx+ebp*2+0x67]
push dword 0x616c5374
jz 0x2daf0
inc edi
jc 0x2daef
jns 0x2da90
db 0xff
db 0xff
db 0xff
dec dword [edx]
add [eax],al
add [ebx+0x6c],ah
push edi
bound edx,[gs:edi+0x68]
imul esi,[ebp+0x0],dword 0xffffff00
dec dword [esi]
add [eax],al
add [ebx+0x6c],ah
push edi
bound ecx,[gs:ecx+ebp*2+0x67]
push dword 0x65726774
jns 0x2dabb
add bh,bh
db 0xff
db 0xff
dec dword [ecx]
add [eax],al
add [ebx+0x6c],ah
push edi
bound eax,[gs:edi+0x72]
popad
jns 0x2dace
add [eax],al
db 0xff
db 0xff
db 0xff
dec dword [esi]
add [eax],al
add [ebx+0x6c],ah
push edi
gs
db 0x62
push ebx
jz 0x2db45
gs insb
inc edx
insb
jnz 0x2db4b
add [eax],al
db 0xff
db 0xff
db 0xff
dec dword [esi]
add [eax],al
add [ebx+0x6c],ah
push edi
gs
db 0x62
push ebx
insb
popad
jz 0x2db5f
inc edx
insb
jnz 0x2db63
add [eax],al
db 0xff
db 0xff
db 0xff
dec dword [esi]
add [eax],al
add [ebx+0x6c],ah
push edi
gs
db 0x62
push ebx
insb
popad
jz 0x2db77
inc edi
jc 0x2db76
jns 0x2db17
add bh,bh
db 0xff
db 0xff
dec dword [edi]
add [eax],al
add [ebx+0x6c],ah
push edi
bound edx,[gs:edi+0x68]
imul esi,[ebp+0x53],dword 0x656b6f6d
add bh,bh
db 0xff
db 0xff
dec dword [ebx]
add [eax],al
add [ebx+0x6c],ah
push edi
gs
db 0x62
push ebx
imul ebp,[esi+esi*2+0x65],dword 0xffff0072
db 0xff
dec dword [eax+eax]
add [eax],al
arpl [edi+edx*2+0x65],bp
bound eax,[ecx+ebp*2+0x6d]
inc edi
jc 0x2dbb8
jns 0x2db59
add [eax],al
add bh,bh
db 0xff
db 0xff
dec dword [esi]
add [eax],al
add [ebx+0x6c],ah
push edi
bound ecx,[gs:ebp+0x69]
jnc 0x2dbe1
jns 0x2dbc1
outsd
jnc 0x2dbd7
add [eax],al
db 0xff
db 0xff
db 0xff
call dword [edx]
add [eax],al
add [ebx+0x6c],ah
push edi
bound eax,[gs:ecx+0x72]
imul edx,[ebx+0x6c],byte +0x61
jz 0x2dbef
inc edx
insb
jnz 0x2dbf3
add [eax],al
db 0xff
db 0xff
db 0xff
call dword [edx]
add [eax],al
add [ebx+0x6c],ah
push edi
bound eax,[gs:ecx+0x72]
imul edx,[ebx+0x6c],byte +0x61
jz 0x2dc0b
jc 0x2dc0a
jns 0x2dbab
add bh,bh
db 0xff
db 0xff
dec dword [esi]
add [eax],al
add [ebx+0x6c],ah
push edi
bound eax,[gs:edi+0x61]
imul ebp,[esi+0x73],dword 0x6f726f62
add [eax],al
db 0xff
db 0xff
db 0xff
dec dword [dword 0x63000000]
insb
push edi
bound eax,[gs:ecx+0x72]
imul eax,[edi+0x72],byte +0x61
jns 0x2dbda
add [eax],al
db 0xff
db 0xff
db 0xff
dec dword [edx]
add [eax],al
add [ebx+0x6c],ah
push edi
gs
db 0x62
inc edx
insb
popad
arpl [ebx+0x0],bp
add [ebp-0x75],dl
in al,dx
xor eax,eax
push ebp
push dword 0x42ec49
push dword [fs:eax]
mov [fs:eax],esp
inc dword [dword 0x46db88]
jnz 0x2dc3b
cmp byte [dword 0x46db90],0x0
jz 0x2dc26
cmp dword [dword 0x46db8c],byte +0x0
jz 0x2dc26
mov eax,[0x46db8c]
push eax
call dword 0x5ad0
mov eax,0x467ed0
mov ecx,0x8a
mov edx,[dword 0x4139e0]
call dword 0x465c
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x42ec50
ret
jmp dword 0x3384
jmp short 0x2dc48
pop ebp
ret
mov eax,eax
mov al,[0x42ec]
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax-0x13],dl
inc edx
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [ebp*8-0x12bdffbe],dh
inc edx
add [eax+0x2c000001],dh
aad 0x43
add [eax],ch
mov ebp,0x3e440041
inc eax
add [esi+esi*4+0x41],ah
add [esi+edi+0x40],cl
add [ecx+ebp],dh
inc esp
add [eax-0x5bffbfc5],cl
cmp eax,[eax+0x0]
add ah,dh
inc edx
add [edx+edi+0x44],ch
add [eax],dh
sub al,0x44
add [esp+edx*2+0x41],bh
add [edx+edi],dh
inc esp
add [ebp+eax+0x5200044],dh
inc esp
add [eax+0x40004410],al
mov ebp,0xba240041
inc ecx
add [edx+edi*4],bl
inc ecx
add [eax-0x43],cl
inc ecx
add [eax-0xd],ch
inc edx
add [eax+0x23],bl
inc esp
add ah,dh
stc
inc edx
add [esp],ah
inc esp
add [eax+0x3],dh
inc esp
add [eax-0x13ffbbf4],cl
or eax,[eax+eax-0x18]
adc eax,0x2b00044
inc esp
add [edx+eax+0x3c040044],dh
inc esp
add [eax],dh
cmp al,0x44
add al,dh
add al,0x44
add [eax+edx+0x44],ah
add ah,ch
add al,0x44
add al,dh
adc [eax+eax+0x6c],eax
adc [eax+eax-0x50],eax
adc al,0x44
add [ebx+edx],ch
inc esp
add [esi+0x44],ah
add [esp+edi+0x17a80044],dh
inc esp
add [eax+ebx+0x6f40044],ah
inc esp
add [eax+ebx-0x9dbffbc],al
inc edx
add [edx],al
add bh,dl
inc esi
push dword [eax]
hlt
inc edx
add ah,ch
test dword [edx+0x0],0x6d495406
popad
lea eax,[gs:bx+si+0x0]
push eax
in eax,dx
inc edx
add [edi],al
push es
push esp
dec ecx
insd
popad
mov al,[gs:word 0x42ec]
add [esi+edx*8],ah
inc ebx
add [edi],ch
add [eax],cl
inc ebp
js 0x2ddda
inc ebx
jz 0x2dddb
insb
jnc 0x2dd8e
add ah,bh
mov bl,0x43
add [ebx+0x0],bl
add bh,bh
or al,0x6
inc esp
add [ecx],al
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax],al
or eax,0x6c410500
imul esp,[edi+0x6e],dword 0x43bc9c
popad
add [eax],al
inc dword [eax-0x63ffbbfd]
add al,0x44
add [eax],al
add [eax],al
add byte [ebx],0x0
add [eax],al
push cs
add [edi],al
inc ecx
outsb
arpl [eax+0x6f],bp
jc 0x2de22
add [eax],dl
inc eax
add [eax+eax+0x0],bl
jmp dword [eax+0x0]
add dh,bh
add [eax],eax
add [eax],al
add [eax],al
add [eax+0x0],al
str [eax]
inc ecx
jnz 0x2de41
outsd
push ebx
imul edi,[edx+0x65],dword 0x401000
test eax,0x58ff0001
clc
inc edx
add [ecx],al
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax],al
adc [eax],al
push es
inc ebx
gs outsb
jz 0x2de57
jc 0x2de38
mov ebp,0x740043
add bh,bh
insb
ds inc esp
add [ecx],al
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax+0x430b0011],al
outsd
outsb
jnc 0x2de87
jc 0x2de76
imul ebp,[esi+0x74],dword 0x43b3e473
add [esi+0x0],bh
add bh,bh
jng 0x2de23
add bh,bh
add [eax],eax
add [eax],al
add [eax],al
add [eax-0xc],al
adc al,[eax]
or al,[edx+esi*2+0x61]
inc ebx
jnz 0x2dead
jnc 0x2deac
jc 0x2de37
mov ebx,0x8f0043
add bh,bh
pop dword [eax]
add bh,bh
add [eax],eax
add [eax],al
add [eax],al
add [eax+0x0],al
adc eax,[eax]
or [edx+esi*2+0x61],al
dec ebx
imul ebp,[esi+0x64],dword 0x43bb70
pop ebp
add [eax],al
jmp dword [eax+eax+0x0]
inc byte [ecx]
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax],al
adc al,0x0
or [edx+esi*2+0x61],al
dec ebp
outsd
add [gs:eax],dl
inc eax
add [eax+0x0],dl
add dh,bh
push dword 0x94fe0000
cmp [eax+eax+0x0],eax
add [eax],al
add byte [ecx],0x0
add [eax],al
adc eax,0x6e450700
popad
bound ebp,[ebp+0x64]
add [eax],dl
inc eax
add [edx-0x5500ffff],ch
add [eax],eax
inc dword [ecx]
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax],al
push ss
add [edx],dl
dec ecx
outsb
arpl [edx+0x65],si
insd
gs outsb
jz 0x2df2c
insb
inc esp
imul esi,[ebx+0x70],dword 0x79616c
adc [eax+0x0],al
mov es,[eax]
add bh,bh
or al,0x14
inc esp
add [ecx],al
add [eax],al
add [eax],al
add [eax],al
add byte [ecx],0x0
add [eax],al
pop ss
add [esi],cl
push eax
popad
jc 0x2df57
outsb
jz 0x2df48
push dword 0x6948776f
outsb
jz 0x2df0d
stc
inc ecx
add [eax+0x70ff0001],bl
clc
inc edx
add [ecx],al
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax+0x50070018],al
imul esp,[ebx+0x74],dword 0x6c657275
push ebp
inc ebx
add [eax+0x4cff0000],al
adc al,[eax+eax+0x1]
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax+0x50090019],al
outsd
jo 0x2dfb2
jo 0x2df8c
gs outsb
jnz 0x2df43
adc [eax+0x0],al
lodsd
add [eax],eax
push dword [eax+0x10042f8]
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax],al
sbb al,[eax]
or al,0x50
jc 0x2dfcf
jo 0x2dfd1
jc 0x2dfd8
imul ebp,[edi+0x6e],dword 0x10006c61
inc eax
add [ebp-0x17010000],cl
adc eax,[eax+eax-0x50]
adc eax,[eax+eax+0x0]
add [eax],al
add byte [eax],0x0
add [eax+0x5308001b],al
push dword 0x6948776f
outsb
jz 0x2df8d
adc [eax+0x0],al
test al,0x1
add bh,bh
cmp al,0x42
add [ecx],al
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax],al
sbb al,0x0
pop es
push ebx
jz 0x2e01c
gs jz 0x2e010
push dword 0x401000
stosd
add [eax],eax
call dword far [eax+0x10042f8]
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax],al
sbb eax,0x72540b00
popad
outsb
jnc 0x2e03f
popad
jc 0x2e037
outsb
jz 0x2dfd5
adc [eax+0x0],al
push edi
add [eax],al
db 0xff
mov eax,0xf4004411
cmp [eax+eax+0x0],eax
add [eax],al
add byte [ecx],0x0
add [eax],al
push ds
add [edi],al
push esi
imul esi,[ebx+0x69],dword 0xc8656c62
and eax,[ecx+0x0]
adc [ecx],al
add bh,bh
adc [ecx],al
add bh,bh
adc al,0x3a
inc esp
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax+0x4f07001f],al
outsb
inc ebx
insb
imul esp,[ebx+0x6b],dword 0x43c82c
and [ecx],al
add bh,bh
and [ecx],al
add bh,bh
add [eax],eax
add [eax],al
add [eax],al
add [eax-0x80000000],al
and [eax],al
push cs
dec edi
outsb
inc ebx
outsd
outsb
jz 0x2e09f
js 0x2e0b0
push eax
outsd
jo 0x2e0b5
jo 0x2e00a
and eax,[ecx+0x0]
sbb [ecx],al
add bh,bh
sbb [ecx],al
add bh,bh
add [eax],eax
add [eax],al
add [eax],al
add [eax-0x80000000],al
and [eax],eax
or cl,[edi+0x6e]
inc esp
bound ebp,[ebx+eax*2+0x6c]
imul esp,[ebx+0x6b],dword 0x43c2f0
fadd dword [eax]
add bh,bh
fadd dword [eax]
add bh,bh
add [eax],eax
add [eax],al
add [eax],al
add [eax-0x80000000],al
and al,[eax]
or cl,[edi+0x6e]
inc esp
jc 0x2e0e7
inc esp
jc 0x2e0f9
jo 0x2e0f4
ret 0x43
loopne 0x2e091
add bh,bh
loopne 0x2e095
add bh,bh
add [eax],eax
add [eax],al
add [eax],al
add [eax-0x80000000],al
and eax,[eax]
or cl,[edi+0x6e]
inc esp
jc 0x2e10c
dec edi
jna 0x2e114
jc 0x2e049
ret
inc ebx
add al,bh
add [eax],al
db 0xff
clc
add [eax],al
inc dword [ecx]
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax+0x4f090024],al
outsb
inc ebp
outsb
fs inc esp
outsd
arpl [ebx-0x68],bp
ret
inc ebx
add [eax],cl
add [eax],eax
dec dword [eax]
add [eax],eax
inc dword [ecx]
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax+0x4f090025],al
outsb
inc ebp
outsb
fs inc esp
jc 0x2e158
sub cl,al
inc ebx
add [eax],ch
add [eax],eax
jmp dword far [eax]
add [eax],eax
inc dword [ecx]
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax+0x4f0f0026],al
outsb
dec ebp
outsd
jnz 0x2e18c
gs inc ecx
arpl [ecx+ebp*2+0x76],si
popad
jz 0x2e187
dec esp
rol byte [ebx+0x0],byte 0xc0
add [eax],al
inc eax
add [eax],al
inc dword [ecx]
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax+0x4f0b0027],al
outsb
dec ebp
outsd
jnz 0x2e1b6
gs inc esp
outsd
ja 0x2e1b6
enter 0x4123,0x0
cmp [ecx],al
add bh,bh
cmp [ecx],al
add bh,bh
add [eax],eax
add [eax],al
add [eax],al
add [eax-0x80000000],al
sub [eax],al
or al,0x4f
outsb
dec ebp
outsd
jnz 0x2e1dc
gs inc ebp
outsb
jz 0x2e1d3
jc 0x2e138
and eax,[ecx+0x0]
xor [ecx],al
add bh,bh
xor [ecx],al
add bh,bh
add [eax],eax
add [eax],al
add [eax],al
add [eax-0x80000000],al
sub [eax],eax
or al,0x4f
outsb
dec ebp
outsd
jnz 0x2e203
gs dec esp
gs popad
jna 0x2e1fb
db 0xc4
rol byte [ebx+0x0],byte 0xc8
add [eax],al
dec eax
add [eax],al
inc dword [ecx]
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax+0x4f0b002a],al
outsb
dec ebp
outsd
jnz 0x2e22a
gs dec ebp
outsd
jna 0x2e221
dec esp
rol byte [ebx+0x0],byte 0xd0
add [eax],al
call eax
add [eax],al
inc dword [ecx]
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax+0x4f09002b],al
outsb
dec ebp
outsd
jnz 0x2e250
gs push ebp
jo 0x2e20d
test byte [ecx+0x0],0xa0
add [eax],eax
jmp dword [eax+0x1ff0001]
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax+0x4f0a002c],al
outsb
push eax
jc 0x2e26f
jc 0x2e268
jnc 0x2e278
pop eax
lds eax,[ebx+0x0]
lock add [eax],al
push eax
add [eax],al
inc dword [ecx]
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax+0x4f0b002d],al
outsb
push ebx
jz 0x2e286
jc 0x2e29b
inc esp
outsd
arpl [ebx+0x50],bp
ret
inc ebx
add [eax],al
add [eax],eax
inc dword [eax]
add [eax],eax
inc dword [ecx]
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax+0x4f0b002e],al
outsb
push ebx
jz 0x2e2ac
jc 0x2e2c1
inc esp
jc 0x2e2b1
lea eax,[bx+si+0x0]
mov al,[0x42f2]
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add ah,ah
repne inc edx
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add al,dl
repne inc edx
add al,bl
repne inc edx
add [eax+eax+0x0],al
add [edi+esi],ch
inc ecx
add [eax],ch
mov ebp,0x3e440041
inc eax
add [esi+esi*4+0x41],ah
add [esi+edi+0x40],cl
add [eax+0x3e],al
inc eax
add [eax-0x5bffbfc5],cl
cmp eax,[eax+0x0]
lodsb
cli
inc edx
add [eax+0x55],ah
inc ecx
add [ecx+edi*4],ch
inc ecx
add [esp+edx*2+0x41],bh
add [edx+edi*4],al
inc ecx
add ah,cl
mov eax,0xba140041
inc ecx
add [ebx+edi*4],cl
inc ecx
add [eax-0x43],al
inc ecx
add [edx+edi*4],ah
inc ecx
add [edx+edi*4],bl
inc ecx
add [eax-0x43],cl
inc ecx
add [edx+edi*8+0x42],bl
add [ecx],al
add bh,ch
call dword far [esp+edi*8]
inc edx
add [esi],al
push esp
push esp
imul ebp,[ebp+0x65],dword 0xf2e49072
inc edx
add [edi],al
push es
push esp
push esp
imul ebp,[ebp+0x65],dword 0x42f2a072
add [eax],ch
cmp [ecx+0x0],al
add eax,0x78450800
jz 0x2e33e
jz 0x2e36f
insb
jnc 0x2e303
add [eax],al
adc [eax+0x0],al
inc eax
add [eax],al
jmp esp
sti
inc edx
add [ecx],al
add [eax],al
add [eax],al
add [eax],al
add byte [ecx],0x0
add [eax],al
add al,[eax]
pop es
inc ebp
outsb
popad
bound ebp,[ebp+0x64]
jl 0x2e335
inc eax
add [eax],dh
add [eax],al
push esp
sti
inc edx
add [ecx],al
add [eax],al
add [eax],al
add [eax],al
sub al,0x3
add [eax],al
add eax,[eax]
or [ecx+0x6e],cl
jz 0x2e3a7
jc 0x2e3ba
popad
insb
enter 0x4123,0x0
cmp [eax],al
add bh,bh
add al,0xfc
inc edx
add [ecx],al
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax+0x4f070004],al
outsb
push esp
imul ebp,[ebp+0x65],dword 0xec8b5572
push ecx
push ebx
push esi
test dl,dl
jz 0x2e37a
add esp,byte -0x10
call dword 0x2f14
mov [ebp-0x1],dl
mov ebx,eax
xor edx,edx
mov eax,ebx
call dword 0x49948
mov eax,[ebx+0x50]
or eax,[dword 0x42f3fc]
mov [ebx+0x50],eax
mov dl,0x1
mov eax,[0x41f888]
call dword 0x22930
mov esi,eax
mov [ebx+0x198],esi
mov [esi+0x14],ebx
mov dword [esi+0x10],0x42f8c8
mov [esi+0x24],ebx
mov eax,ebx
mov dx,0xffc6
call dword 0x2e04
mov [esi+0x20],eax
mov edx,0x69
mov eax,ebx
call dword 0x3f9b4
mov edx,0x69
mov eax,ebx
call dword 0x3f980
mov eax,ebx
cmp byte [ebp-0x1],0x0
jz 0x2e3f2
call dword 0x2f6c
pop dword [dword fs:0x0]
add esp,byte +0xc
mov eax,ebx
pop esi
pop ebx
pop ecx
pop ebp
ret
add [eax],al
add [eax],al
or [eax],cl
add [ebx+0x56],dl
call dword 0x2fbc
mov ebx,edx
mov esi,eax
mov eax,[esi+0x198]
call dword 0x2bf0
mov edx,ebx
and dl,0xfc
mov eax,esi
call dword 0x499a4
test bl,bl
jng 0x2e42d
mov eax,esi
call dword 0x2f64
pop esi
pop ebx
ret
push esi
xor edx,edx
mov ecx,[eax+0x198]
mov esi,[ecx+0xc]
test esi,esi
jz 0x2e449
mov eax,esi
mov edx,[eax]
call dword [edx+0x24]
mov edx,eax
mov eax,edx
pop esi
ret
lea eax,[eax+0x0]
push ebx
push esi
push edi
push ebp
add esp,byte -0x18
mov ebp,edx
mov ebx,eax
mov eax,[ebx+0x198]
call dword 0x22e10
mov esi,eax
mov eax,[ebx+0x198]
call dword 0x22e28
mov edi,eax
mov eax,ebx
call dword 0x3fc04
mov [esp],eax
mov eax,ebx
call dword 0x3fc48
mov [esp+0x4],eax
cmp byte [ebx+0x1a8],0x0
jnz 0x2e4af
cmp byte [ebx+0x1ad],0x0
jz dword 0x2e539
cmp esi,[esp]
jg 0x2e4af
cmp edi,[esp+0x4]
jng dword 0x2e539
cmp byte [ebx+0x1ad],0x0
jz 0x2e532
test esi,esi
jng 0x2e532
test edi,edi
jng 0x2e532
mov [esp+0x10],esi
fild dword [esp+0x10]
mov [esp+0x14],edi
fild dword [esp+0x14]
fdivp st1
fstp qword [esp+0x8]
wait cmp edi,esi
jnl 0x2e507
mov esi,[esp]
fild dword [esp]
fdiv qword [esp+0x8]
call dword 0x2330
mov edi,eax
cmp edi,[esp+0x4]
jng 0x2e539
mov edi,[esp+0x4]
fild dword [esp+0x4]
fmul qword [esp+0x8]
call dword 0x2330
mov esi,eax
jmp short 0x2e539
mov edi,[esp+0x4]
fild dword [esp+0x4]
fmul qword [esp+0x8]
call dword 0x2330
mov esi,eax
cmp esi,[esp]
jng 0x2e539
mov esi,[esp]
fild dword [esp]
fdiv qword [esp+0x8]
call dword 0x2330
mov edi,eax
jmp short 0x2e539
mov esi,[esp]
mov edi,[esp+0x4]
xor eax,eax
mov [ebp+0x0],eax
xor eax,eax
mov [ebp+0x4],eax
mov [ebp+0x8],esi
mov [ebp+0xc],edi
cmp byte [ebx+0x1a9],0x0
jz 0x2e574
mov eax,[esp+0x4]
sub eax,edi
sar eax,1
jns 0x2e55f
adc eax,byte +0x0
push eax
mov eax,[esp+0x4]
sub eax,esi
sar eax,1
jns 0x2e56d
adc eax,byte +0x0
push eax
push ebp
call dword 0x61f8
add esp,byte +0x18
pop ebp
pop edi
pop esi
pop ebx
ret
push ebp
mov ebp,esp
add esp,byte -0x28
push ebx
mov ebx,eax
lea edx,[ebp-0x18]
mov eax,[ebp+0x8]
mov eax,[eax-0x4]
call dword 0x2e450
push byte +0x0
lea eax,[ebp-0x4]
push eax
mov eax,ebx
call dword 0x20b30
lea edx,[ebp-0x18]
mov ecx,0x2
call dword 0x26ff0
mov [ebp-0x8],eax
xor eax,eax
push ebp
push dword 0x42f615
push dword [fs:eax]
mov [fs:eax],esp
mov edx,[ebp-0x4]
mov eax,ebx
call dword 0x20bb8
lea edx,[ebp-0x28]
mov eax,[ebp+0x8]
mov eax,[eax-0x4]
call dword 0x2e450
lea edx,[ebp-0x28]
mov eax,[ebp+0x8]
mov eax,[eax-0x4]
mov eax,[eax+0x198]
mov ecx,[eax+0xc]
mov eax,ebx
call dword 0x20908
lea edx,[ebp-0x18]
mov cl,0xff
mov eax,[ebp-0x8]
call dword 0x270e8
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x42f61c
or edx,byte -0x1
mov eax,[ebp-0x8]
call dword 0x2707c
ret
jmp dword 0x3384
jmp short 0x2e609
pop ebx
mov esp,ebp
pop ebp
ret
lea eax,[eax+0x0]
push ebp
mov ebp,esp
add esp,byte -0x18
push ebx
mov [ebp-0x4],eax
mov eax,[ebp-0x4]
test byte [eax+0x1c],0x10
jz 0x2e66d
mov eax,[ebp-0x4]
mov ebx,[eax+0x190]
mov eax,[ebx+0x10]
mov dl,0x1
call dword 0x20250
mov eax,[ebx+0x14]
mov dl,0x1
call dword 0x20570
mov eax,[ebp-0x4]
mov eax,[eax+0x48]
push eax
mov eax,[ebp-0x4]
mov eax,[eax+0x4c]
push eax
xor ecx,ecx
xor edx,edx
mov eax,ebx
call dword 0x208c0
mov eax,[ebp-0x4]
movzx eax,byte [eax+0x1ac]
mov [ebp-0x5],al
mov eax,[ebp-0x4]
mov byte [eax+0x1ac],0x1
xor edx,edx
push ebp
push dword 0x42f742
push dword [fs:edx]
mov [fs:edx],esp
call dword 0x27c2c
test al,al
jz 0x2e6a4
mov eax,[ebp-0x4]
test byte [eax+0x1c],0x10
jz 0x2e6a8
xor eax,eax
jmp short 0x2e6aa
mov al,0x1
test al,al
jz 0x2e6e7
mov dl,0x1
mov eax,[ebp-0x4]
call dword 0x53e38
mov ebx,eax
test ebx,ebx
jz 0x2e6e1
mov eax,ebx
call dword 0x603d0
call dword 0x606bc
test al,al
jz 0x2e6e1
mov eax,ebx
call dword 0x603d0
mov edx,[ebp-0x4]
call dword 0x606f4
test al,al
jnz 0x2e6e5
xor eax,eax
jmp short 0x2e6e7
mov al,0x1
test al,al
jz 0x2e6fd
push ebp
mov eax,[ebp-0x4]
mov eax,[eax+0x190]
call dword 0x2e57c
pop ecx
jmp short 0x2e727
mov eax,[ebp-0x4]
mov ebx,[eax+0x190]
lea edx,[ebp-0x18]
mov eax,[ebp-0x4]
call dword 0x2e450
lea edx,[ebp-0x18]
mov eax,[ebp-0x4]
mov eax,[eax+0x198]
mov ecx,[eax+0xc]
mov eax,ebx
call dword 0x20908
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x42f749
mov eax,[ebp-0x4]
movzx edx,byte [ebp-0x5]
mov [eax+0x1ac],dl
ret
jmp dword 0x3384
jmp short 0x2e734
pop ebx
mov esp,ebp
pop ebp
ret
mov eax,eax
push ebx
push esi
push edi
push ebp
mov ebp,eax
xor ebx,ebx
mov eax,[ebp+0x198]
mov esi,[eax+0xc]
cmp byte [ebp+0x57],0x0
jz 0x2e7e2
test byte [ebp+0x1c],0x1
jnz 0x2e7e2
test esi,esi
jz 0x2e7e2
cmp byte [esi+0x22],0x0
jz 0x2e7e2
mov eax,esi
mov edx,[eax]
call dword [edx+0x24]
test eax,eax
jnz 0x2e788
mov byte [esi+0x22],0x0
jmp short 0x2e7e2
mov dl,0x1
mov eax,ebp
call dword 0x53e38
mov edi,eax
test edi,edi
jz 0x2e7e2
cmp byte [edi+0x276],0x0
jz 0x2e7e2
mov eax,edi
call dword 0x486bc
test al,al
jz 0x2e7e2
cmp byte [ebp+0x1ac],0x0
jz 0x2e7c6
push byte +0x0
xor ecx,ecx
mov edx,0x30f
mov eax,edi
call dword 0x41588
jmp short 0x2e7dc
push byte +0x0
push byte +0x0
push dword 0x30f
mov eax,edi
call dword 0x4831c
push eax
call dword 0x6210
mov bl,0x1
mov byte [esi+0x22],0x0
mov eax,ebx
pop ebp
pop edi
pop esi
pop ebx
ret
lea eax,[eax+0x0]
push ebp
mov ebp,esp
push ecx
push ebx
push esi
push edi
mov [ebp-0x1],cl
mov edi,edx
mov esi,eax
mov ebx,[ebp+0x10]
test [esi+0x1aa],bl
jz 0x2e826
mov eax,esi
call dword 0x2e750
test al,al
jz 0x2e81c
mov eax,esi
mov edx,[eax]
call dword [edx+0x8c]
jmp short 0x2e826
mov eax,esi
mov edx,[eax]
call dword [edx+0x90]
cmp word [esi+0x1a2],byte +0x0
jz 0x2e850
movzx eax,byte [ebp+0x14]
push eax
push ebx
mov eax,[ebp+0xc]
push eax
mov eax,[ebp+0x8]
push eax
movzx ecx,byte [ebp-0x1]
mov edx,edi
mov eax,[esi+0x1a4]
call dword [esi+0x1a0]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
ret 0x10
cmp dl,[eax+0x1a9]
jz 0x2e86d
mov [eax+0x1a9],dl
mov edx,eax
call dword 0x2e8c8
ret
mov eax,eax
push esi
mov esi,eax
mov eax,[esi+0x198]
mov ecx,[eax]
call dword [ecx+0x8]
pop esi
ret
cmp dl,[eax+0x1a8]
jz 0x2e895
mov [eax+0x1a8],dl
mov edx,eax
call dword 0x2e8c8
ret
mov eax,eax
cmp dl,[eax+0x1ab]
jz 0x2e8ad
mov [eax+0x1ab],dl
mov edx,eax
call dword 0x2e8c8
ret
mov eax,eax
cmp dl,[eax+0x1ad]
jz 0x2e8c5
mov [eax+0x1ad],dl
mov edx,eax
call dword 0x2e8c8
ret
mov eax,eax
push ebx
push esi
add esp,byte -0x10
mov esi,eax
cmp byte [esi+0x5c],0x0
jz 0x2e91b
mov eax,[esi+0x198]
call dword 0x22e10
test eax,eax
jng 0x2e91b
mov eax,[esi+0x198]
call dword 0x22e28
test eax,eax
jng 0x2e91b
mov eax,[esi+0x198]
call dword 0x22e10
push eax
mov eax,[esi+0x198]
call dword 0x22e28
push eax
mov ecx,[esi+0x44]
mov edx,[esi+0x40]
mov eax,esi
mov ebx,[eax]
call dword [ebx+0x88]
mov eax,[esi+0x198]
mov ebx,[eax+0xc]
test ebx,ebx
jz dword 0x2e9c9
mov eax,ebx
mov edx,[dword 0x41f9f4]
call dword 0x2d7c
test al,al
jnz 0x2e95c
mov eax,ebx
mov edx,[dword 0x41fc80]
call dword 0x2d7c
test al,al
jnz 0x2e95c
movzx edx,byte [esi+0x1ab]
mov eax,ebx
mov ecx,[eax]
call dword [ecx+0x3c]
mov edx,esp
mov eax,esi
call dword 0x2e450
mov eax,ebx
mov edx,[eax]
call dword [edx+0x28]
test al,al
jnz 0x2e99c
cmp dword [esp],byte +0x0
jg 0x2e99c
cmp dword [esp+0x4],byte +0x0
jg 0x2e99c
mov eax,[esp+0x8]
cmp eax,[esi+0x48]
jl 0x2e99c
mov eax,[esp+0xc]
cmp eax,[esi+0x4c]
jl 0x2e99c
mov eax,[0x42f9f0]
or eax,[esi+0x50]
mov [esi+0x50],eax
jmp short 0x2e9a9
mov eax,[0x42f9f0]
not eax
and eax,[esi+0x50]
mov [esi+0x50],eax
mov eax,esi
call dword 0x2e750
test al,al
jz 0x2e9d6
cmp byte [esi+0x1ac],0x0
jz 0x2e9d6
mov eax,esi
mov edx,[eax]
call dword [edx+0x8c]
jmp short 0x2e9d6
mov eax,[0x42f9f0]
not eax
and eax,[esi+0x50]
mov [esi+0x50],eax
cmp byte [esi+0x1ac],0x0
jnz 0x2e9e9
mov eax,esi
mov edx,[eax]
call dword [edx+0x80]
add esp,byte +0x10
pop esi
pop ebx
ret
add [eax+0x0],al
add [eax],al
push ebx
push esi
push edi
push ebp
mov ebp,ecx
mov edi,edx
mov esi,eax
mov bl,0x1
test byte [esi+0x1c],0x10
jz 0x2ea24
mov eax,[esi+0x198]
call dword 0x22e10
test eax,eax
jng 0x2ea55
mov eax,[esi+0x198]
call dword 0x22e28
test eax,eax
jng 0x2ea55
movzx eax,byte [esi+0x5b]
test al,al
jz 0x2ea32
add al,0xfd
sub al,0x2
jnc 0x2ea3f
mov eax,[esi+0x198]
call dword 0x22e10
mov [edi],eax
movzx eax,byte [esi+0x5b]
sub al,0x3
jnc 0x2ea55
mov eax,[esi+0x198]
call dword 0x22e28
mov [ebp+0x0],eax
mov eax,ebx
pop ebp
pop edi
pop esi
pop ebx
ret
push ebx
push esi
test dl,dl
jz 0x2ea6a
add esp,byte -0x10
call dword 0x2f14
mov ebx,edx
mov esi,eax
xor edx,edx
mov eax,esi
call dword 0x1a59c
mov byte [esi+0x40],0x1
mov dword [esi+0x30],0x3e8
push esi
push dword 0x42fae4
call dword 0x1b718
mov [esi+0x34],eax
mov eax,esi
test bl,bl
jz 0x2eaa5
call dword 0x2f6c
pop dword [dword fs:0x0]
add esp,byte +0xc
mov eax,esi
pop esi
pop ebx
ret
mov eax,eax
push ebx
push esi
call dword 0x2fbc
mov ebx,edx
mov esi,eax
mov byte [esi+0x40],0x0
mov eax,esi
call dword 0x2eb58
mov eax,[esi+0x34]
call dword 0x1b7cc
mov edx,ebx
and dl,0xfc
mov eax,esi
call dword 0x1a5e8
test bl,bl
jng 0x2eae1
mov eax,esi
call dword 0x2f64
pop esi
pop ebx
ret
push ebp
mov ebp,esp
push ecx
push ebx
push esi
push edi
mov ebx,edx
mov [ebp-0x4],eax
mov esi,[ebx]
cmp esi,0x113
jnz 0x2eb39
xor eax,eax
push ebp
push dword 0x42fb1e
push dword [fs:eax]
mov [fs:eax],esp
mov eax,[ebp-0x4]
mov si,0xffef
call dword 0x2dec
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
jmp short 0x2eb51
jmp dword 0x30d0
mov eax,[0x468d34]
mov eax,[eax]
mov edx,[ebp-0x4]
call dword 0x5ecfc
call dword 0x34e0
jmp short 0x2eb51
mov eax,[ebx+0x8]
push eax
mov eax,[ebx+0x4]
push eax
push esi
mov eax,[ebp-0x4]
mov eax,[eax+0x34]
push eax
call dword 0x5ed8
mov [ebx+0xc],eax
pop edi
pop esi
pop ebx
pop ecx
pop ebp
ret
nop
push ebp
mov ebp,esp
push byte +0x0
push ebx
push esi
mov ebx,eax
xor eax,eax
push ebp
push dword 0x42fbd7
push dword [fs:eax]
mov [fs:eax],esp
push byte +0x1
mov eax,[ebx+0x34]
push eax
call dword 0x61a8
mov esi,[ebx+0x30]
test esi,esi
jz 0x2ebc1
cmp byte [ebx+0x40],0x0
jz 0x2ebc1
cmp word [ebx+0x3a],byte +0x0
jz 0x2ebc1
push byte +0x0
push esi
push byte +0x1
mov eax,[ebx+0x34]
push eax
call dword 0x6300
test eax,eax
jnz 0x2ebc1
lea edx,[ebp-0x4]
mov eax,[0x468e84]
call dword 0x5750
mov ecx,[ebp-0x4]
mov dl,0x1
mov eax,[0x412890]
call dword 0xb450
call dword 0x3464
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x42fbde
lea eax,[ebp-0x4]
call dword 0x3a1c
ret
jmp dword 0x3384
jmp short 0x2ebce
pop esi
pop ebx
pop ecx
pop ebp
ret
nop
cmp dl,[eax+0x40]
jz 0x2ebf1
mov [eax+0x40],dl
call dword 0x2eb58
ret
mov eax,eax
cmp edx,[eax+0x30]
jz 0x2ec01
mov [eax+0x30],edx
call dword 0x2eb58
ret
mov eax,eax
push ebp
mov ebp,esp
mov edx,[ebp+0x8]
mov [eax+0x38],edx
mov edx,[ebp+0xc]
mov [eax+0x3c],edx
call dword 0x2eb58
pop ebp
ret 0x8
push ebx
cmp word [eax+0x3a],byte +0x0
jz 0x2ec2e
mov ebx,eax
mov edx,eax
mov eax,[ebx+0x3c]
call dword [ebx+0x38]
pop ebx
ret
push ebp
mov ebp,esp
xor eax,eax
push ebp
push dword 0x42fc55
push dword [fs:eax]
mov [fs:eax],esp
inc dword [dword 0x46db9c]
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x42fc5c
ret
jmp dword 0x3384
jmp short 0x2ec54
pop ebp
ret
mov eax,eax
lodsb
cld
inc edx
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [edi*8+0x42],ah
add [eax],al
add [eax],al
add [eax],al
lock cld
inc edx
add [eax],dl
std
inc edx
add [eax+0x0],ah
add [eax],al
sub al,0x37
inc ecx
add [eax],ch
mov ebp,0x3e440041
inc eax
add [esi+esi*4+0x41],ah
add [esi+edi+0x40],cl
add ah,dh
sbb [ebx+0x0],eax
mov [ebx],bh
inc eax
add [ebx+edi+0x19480040],ah
inc ebx
add [eax+0x55],ah
inc ecx
add [ecx+edi*4],ch
inc ecx
add [esp+edx*2+0x41],bh
add [edx+edi*4],al
inc ecx
add ah,cl
mov eax,0xba140041
inc ecx
add [ebx+edi*4],cl
inc ecx
add [eax-0x43],al
inc ecx
add [edx+edi*4],ah
inc ecx
add [edx+edi*4],bl
inc ecx
add [eax-0x43],cl
inc ecx
add [eax],al
sbb [ebx+0x0],eax
js 0x2ecf8
inc ebx
add ah,cl
sbb [ebx+0x0],eax
les ebx,[edx]
inc ebx
add [eax+0x54004319],dl
xor eax,[eax+0x0]
add eax,0x10000200
add [edx-0x11001100],eax
inc dword [eax-0x67ffbce6]
sbb al,[ebx+0x0]
mov al,0x1a
inc ebx
add [eax-0x6bffbce5],al
sbb eax,[ebx+0x0]
or eax,0x6d6f4354
insd
outsd
outsb
inc esp
imul esp,[ecx+0x6c],dword 0xc08b676f
and al,0xfd
inc edx
add [edi],al
or eax,0x6d6f4354
insd
outsd
outsb
inc esp
imul esp,[ecx+0x6c],dword 0xfcac676f
inc edx
add [eax],ch
cmp [ecx+0x0],al
push es
add [edi],al
inc esp
imul esp,[ecx+0x6c],dword 0x473676f
add [eax],al
adc [eax+0x0],al
xor [eax],al
add bh,bh
xor [eax],al
add bh,bh
add [eax],eax
add [eax],al
add [eax],al
add [eax+0x1],al
add al,[eax]
add eax,0x336c7443
inc esp
pop esp
and eax,[ecx+0x0]
cmp [eax],al
add bh,bh
cmp [eax],al
add bh,bh
add [eax],eax
add [eax],al
add [eax],al
add [eax+0x0],al
add eax,[eax]
or ecx,[eax+0x65]
insb
jo 0x2edca
outsd
outsb
jz 0x2edf0
js 0x2ee01
enter 0x4123,0x0
push eax
add [eax],al
call dword [eax+0x0]
add bh,bh
add [eax],eax
add [eax],al
add [eax],al
add [eax-0x80000000],al
add al,0x0
pop es
dec edi
outsb
inc ebx
insb
outsd
jnc 0x2ee14
enter 0x4123,0x0
pop eax
add [eax],al
call dword far [eax+0x0]
add bh,bh
add [eax],eax
add [eax],al
add [eax],al
add [eax-0x80000000],al
add eax,0x6e4f0600
push ebx
push dword 0xfdd4776f
inc edx
add [ebx],al
or edx,[edi+ecx*2+0x70]
gs outsb
dec edi
jo 0x2ee52
imul ebp,[edi+0x6e],dword 0x1
add [dword 0xd0000000],dl
std
inc edx
add [edx],cl
outsd
push dx
gs popad
fs dec edi
outsb
insb
jns 0x2ee0b
outsd
dec di
jna 0x2ee64
jc 0x2ee78
jc 0x2ee6c
jz 0x2ee6a
push eax
jc 0x2ee77
insd
jo 0x2ee7f
push cs
outsd
dec ax
imul esp,[ebp+0x52],dword 0x4f646165
outsb
insb
jns 0x2ee28
outsd
dec si
outsd
inc ebx
push dword 0x65676e61
inc esp
imul esi,[edx+0xa],dword 0x6853666f
outsd
ja 0x2ee78
gs insb
jo 0x2ee40
outsd
dec si
outsd
push esi
popad
insb
imul esp,[ecx+0x74],dword 0x666f1265
inc ecx
insb
insb
outsd
ja 0x2ee96
jnz 0x2eeb7
jz 0x2eeb6
push ebx
gs insb
arpl [gs:esp+edx+0x6f],si
inc bp
js 0x2eecd
gs outsb
jnc 0x2eec6
outsd
outsb
inc esp
imul esp,[esi+0x66],dword 0x6e657265
jz 0x2ee78
outsd
push ax
popad
jz 0x2eed7
dec ebp
jnz 0x2eee5
jz 0x2eeb9
js 0x2eedf
jnc 0x2eeec
movq mm4,[esi+0x46]
imul ebp,[ebp+0x4d],dword 0x45747375
js 0x2eeef
jnc 0x2eefc
push cs
outsd
inc bx
jc 0x2eef3
popad
jz 0x2eef6
push eax
jc 0x2ef03
insd
jo 0x2ef0b
or al,0x6f
push bx
push dword 0x41657261
ja 0x2ef03
jc 0x2ef09
adc ch,[edi+0x66]
dec esi
outsd
push edx
gs popad
fs dec edi
outsb
insb
jns 0x2ef04
gs jz 0x2ef2a
jc 0x2ef25
adc ch,[edi+0x66]
dec esi
outsd
push esp
gs jnc 0x2ef34
inc esi
imul ebp,[ebp+0x43],dword 0x74616572
adc [gs:edi+0x66],ebp
dec esi
outsd
dec esi
gs jz 0x2ef4a
outsd
jc 0x2ef41
inc edx
jnz 0x2ef4d
jz 0x2ef4a
outsb
or eax,0x6f4e666f
dec esp
outsd
outsb
dec esi
popad
insd
gs jnc 0x2eefb
outsd
dec di
insb
fs push ebx
jz 0x2ef6c
insb
gs inc esp
imul esp,[ecx+0x6c],dword 0x6f14676f
dec si
outsd
inc esp
gs jc 0x2ef69
gs o16 jc 0x2ef6d
outsb
arpl [ebp+0x4c],sp
imul ebp,[esi+0x6b],dword 0x666f1573
inc ebp
outsb
popad
bound ebp,[ebp+0x49]
outsb
arpl [ebp+esi*2+0x64],bp
gs dec esi
outsd
jz 0x2ef8d
o16 jns 0x2ef35
outsd
inc bp
outsb
popad
bound ebp,[ebp+0x53]
imul edi,[edx+0x69],dword 0x6f11676e
inc sp
outsd
outsb
jz 0x2ef7e
fs push esp
outsd
push edx
arpl [gs:ebp+0x6e],sp
jz 0x2ef59
outsd
inc si
outsd
jc 0x2efb1
gs push ebx
push dword 0x6948776f
gs outsb
pop es
inc esp
imul esp,[ecx+0x6c],dword 0x8d73676f
inc eax
add [eax-0x1],ch
inc edx
add [esi],al
or al,0x54
dec edi
jo 0x2efd3
outsb
dec edi
jo 0x2efe6
imul ebp,[edi+0x6e],dword 0xfdd00573
inc edx
add [eax+0x42ff80],dl
add ecx,[dword 0x65704f54]
outsb
dec edi
jo 0x2effe
imul ebp,[edi+0x6e],dword 0x17845
add [eax],al
add [eax],al
add [eax],al
add [edi+edi*8+0x42],bh
add [edi],cl
outsd
inc bp
js 0x2eff0
outsd
push eax
insb
popad
arpl [ebp+0x73],sp
inc edx
popad
jc 0x2efb4
inc esp
imul esp,[ecx+0x6c],dword 0xb873676f
inc dword [edx+0x0]
push es
push cs
push esp
dec edi
jo 0x2f023
outsb
dec edi
jo 0x2f036
imul ebp,[edi+0x6e],dword 0x1784573
jl 0x2efca
inc edx
add [ebp-0x2bffc0],cl
inc edx
add [esi],cl
or edx,[edi+ecx*2+0x46]
dec esi
outsd
jz 0x2f046
o16 jns 0x2f025
js 0x2effa
add [eax],al
add [ecx],al
add [eax],al
add [esp+ecx*4+0x100042],ch
add [eax],al
lea eax,[eax+0x0]
clc
inc dword [edx+0x0]
or [ecx],dl
push esp
dec ecx
outsb
arpl [ebp+esi*2+0x64],bp
gs dec ecx
jz 0x2f06a
insd
inc ebp
jna 0x2f06e
outsb
jz 0x2f00c
add dl,[edx]
add ecx,[edi+0x46]
dec esi
or edx,[edi+ecx*2+0x46]
dec esi
outsd
jz 0x2f083
o16 jns 0x2f062
js 0x2f020
pop es
dec ecx
outsb
arpl [ebp+esi*2+0x64],bp
gs pop es
inc edx
outsd
outsd
insb
gs popad
outsb
add al,dl
inc dword [edx+0x0]
add [eax],dl
inc eax
add [eax+eax+0x43],al
add [eax],al
add [eax],al
add [eax],al
int3
add [ebx+0x0],al
xor [ecx],al
inc ebx
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add dh,bh
add [ebx+0x0],al
push ds
add [ebx+0x0],eax
mov esp,0x60000000
cld
inc edx
add [eax],ch
mov ebp,0x3e440041
inc eax
add [esi+esi*4+0x41],ah
add [esi+edi+0x40],cl
add ah,dh
sbb [ebx+0x0],eax
mov [ebx],bh
inc eax
add [ebx+edi+0x23d40040],ah
inc ebx
add [eax+0x55],ah
inc ecx
add ah,bh
and eax,0x547c0043
inc ecx
add [edx+edi*4],al
inc ecx
add ah,cl
mov eax,0xba140041
inc ecx
add [ebx+edi*4],cl
inc ecx
add [eax-0x43],al
inc ecx
add [edx+edi*4],ah
inc ecx
add [edx+edi*4],bl
inc ecx
add [eax-0x43],cl
inc ecx
add [eax+0x23],dl
inc ebx
add [eax],bh
and al,0x43
add ah,cl
sbb [ebx+0x0],eax
les ebx,[edx]
inc ebx
add [eax-0x7fffbce7],dl
sub eax,0x2c640043
inc ebx
add [esi],cl
add [eax],al
add [eax],al
add [dword 0x94000000],al
adc [eax+0x0],al
push dword 0x94000000
adc [eax+0x0],al
jz 0x2f0e4
add [eax],al
xchg eax,esp
adc [eax+0x0],al
js 0x2f0ec
add [eax],al
xchg eax,esp
adc [eax+0x0],al
jl 0x2f0f4
add [eax],al
dec eax
js 0x2f139
add [eax+0x5000000],al
add ch,ch
db 0xff
in al,dx
db 0xff
jmp short 0x2f105
jmp dword 0x4325:0x34ffe9ff
add [eax+0x25],ah
inc ebx
add [eax-0x5fffbcdb],al
and eax,0x2da00043
inc ebx
add [ebx],cl
push esp
dec edi
jo 0x2f188
outsb
inc esp
imul esp,[ecx+0x6c],dword 0xc08b676f
xor [ecx],al
inc ebx
add [edi],al
or edx,[edi+ecx*2+0x70]
gs outsb
inc esp
imul esp,[ecx+0x6c],dword 0x84676f
inc ebx
add [eax],ah
std
inc edx
add [ebx],dl
add [edi],al
inc esp
imul esp,[ecx+0x6c],dword 0xd73676f
add [eax+edx+0x7c0040],dl
add bh,bh
jl 0x2f15b
add bh,bh
add [eax],eax
add [eax],al
add [eax],al
add [eax-0x80000000],al
push es
add [edx],cl
inc esp
gs popaw
jnz 0x2f1de
jz 0x2f1b9
js 0x2f1ea
dec eax
js 0x2f1b9
add [eax-0x7fffbcd4],bh
add [eax],al
inc dword [ecx]
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax+0x46080007],al
imul ebp,[ebp+0x4e],dword 0x94656d61
adc [eax+0x0],al
push dword 0x68ff0000
add [eax],al
inc dword [ecx]
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax+0x46060008],al
imul ebp,[esp+esi*2+0x65],dword 0x40103c72
add [ebp+0x6c0043],dl
add bh,bh
add [eax],eax
add [eax],al
add [eax],al
add [eax+0x1],al
or [eax],eax
or eax,[esi+0x69]
insb
jz 0x2f23f
jc 0x2f225
outsb
gs js 0x2f175
adc [eax+0x0],al
jz 0x2f1e6
add bh,bh
and al,0x2d
inc ebx
add [ecx],al
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax+0x490a000a],al
outsb
imul esi,[ecx+ebp*2+0x61],dword 0x7269446c
inc dword [fs:edx+0x0]
add [fs:eax],al
jmp dword [eax+eax+0x0]
inc dword [ecx]
add [eax],al
add [eax],al
add [eax],al
add byte [eax+eax],0x8
add [ebx],cl
add [edi],al
dec edi
jo 0x2f297
imul ebp,[edi+0x6e],dword 0x42ffb473
add [eax-0x47010000],bh
add [eax],al
inc dword [ecx]
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax],al
or al,0x0
or [edi+0x70],ecx
jz 0x2f2af
outsd
outsb
jnc 0x2f28f
js 0x2f1e0
adc [eax+0x0],al
js 0x2f251
add bh,bh
js 0x2f255
add bh,bh
add [eax],eax
add [eax],al
add [eax],al
add [eax-0x80000000],al
or eax,0x69540500
jz 0x2f2d6
gs clc
cs inc ebp
add [eax-0x57010000],ch
add [eax],al
inc dword [ecx]
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax+0x4f0a000e],al
outsb
inc ebx
popad
outsb
inc ebx
insb
outsd
jnc 0x2f2f5
enter 0x4123,0x0
cwde
add [eax],al
call dword far [eax+0x1ff0000]
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax+0x4f0e000f],al
outsb
inc esi
outsd
insb
gs jc 0x2f2f7
push dword 0x65676e61
enter 0x4123,0x0
nop
add [eax],al
call dword [eax+0x1ff0000]
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax+0x4f110010],al
outsb
push ebx
gs insb
arpl [gs:ecx+ebp*2+0x6f],si
outsb
inc ebx
push dword 0x65676e61
enter 0x4123,0x0
mov al,[0xa0ff0000]
add [eax],al
inc dword [ecx]
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax+0x4f0c0011],al
outsb
push esp
jns 0x2f375
gs inc ebx
push dword 0x65676e61
hlt
inc dword [edx+0x0]
mov al,0x0
add bh,bh
mov al,0x0
add bh,bh
add [eax],eax
add [eax],al
add [eax],al
add [eax-0x80000000],al
adc al,[eax]
or eax,0x6e496e4f
arpl [ebp+esi*2+0x64],bp
gs dec ecx
jz 0x2f398
insd
add byte [ebx],0x43
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax+0xc004303],al
add [eax],al
add [eax+0x78],bl
inc eax
add [eax],bh
ds inc eax
add [esi+edi+0x40],al
add [eax+0x3e],cl
inc eax
add [esi+edi+0x40],cl
add [eax+0x3e],al
inc eax
add [eax-0x5bffbfc5],cl
cmp eax,[eax+0x0]
loopne 0x2f3b9
inc eax
add [ecx],bl
inc ebp
push eax
insb
popad
jz 0x2f3ed
outsd
jc 0x2f3f7
push esi
gs jc 0x2f401
imul ebp,[edi+0x6e],dword 0x65637845
jo 0x2f40b
imul ebp,[edi+0x6e],dword 0x3a0c08b
inc ebx
add [ebx],al
adc [esi+eax*2+0x69],edx
insb
gs inc esp
imul esp,[ecx+0x6c],dword 0x704f676f
jz 0x2f41a
outsd
outsb
add [eax],eax
add [eax],al
add [eax+eax],dl
add [eax],al
pushfd
add eax,[ebx+0x0]
adc ah,[esi+0x64]
outsd
dec edi
jna 0x2f42c
jc 0x2f420
jc 0x2f434
jz 0x2f432
push eax
jc 0x2f43f
insd
jo 0x2f447
adc ah,[esi+0x64]
outsd
push ebx
jz 0x2f44c
imul esp,[ebx+0x74],dword 0x656c6946
push esp
jns 0x2f454
gs jnc 0x2f3f5
fs outsw
dec esi
outsd
inc ebx
push dword 0x65676e61
inc esp
imul esi,[edx+0xe],dword 0x506f6466
imul esp,[ebx+0x6b],dword 0x646c6f46
gs jc 0x2f477
adc ah,[esi+0x64]
outsd
inc esi
outsd
jc 0x2f46f
gs inc esi
imul ebp,[ebp+0x53],dword 0x65747379
insd
adc eax,0x416f6466
insb
insb
dec esi
outsd
outsb
push ebx
jz 0x2f493
jc 0x2f487
gs dec ecx
jz 0x2f490
insd
jnc 0x2f43b
fs outsw
dec esi
outsd
push esi
popad
insb
imul esp,[ecx+0x74],dword 0x64661365
outsd
inc ecx
insb
insb
outsd
ja 0x2f492
jnz 0x2f4b3
jz 0x2f4b2
push ebx
gs insb
arpl [gs:eax+edx+0x66],si
fs outsd
push eax
popad
jz 0x2f4bf
dec ebp
jnz 0x2f4cd
jz 0x2f4a1
js 0x2f4c7
jnc 0x2f4d4
adc [esi+0x64],ah
outsd
inc esi
imul ebp,[ebp+0x4d],dword 0x45747375
js 0x2f4d8
jnc 0x2f4e5
pcmpgtd mm4,[edi+ebp*2+0x43]
jc 0x2f4dd
popad
jz 0x2f4e0
push eax
jc 0x2f4ed
insd
jo 0x2f4f5
or eax,0x536f6466
push dword 0x41657261
ja 0x2f4ee
jc 0x2f4f4
adc esp,[esi+0x64]
outsd
dec esi
outsd
push edx
gs popad
fs dec edi
outsb
insb
jns 0x2f4f0
gs jz 0x2f516
jc 0x2f511
adc esp,[esi+0x64]
outsd
dec esi
outsd
push esp
gs jnc 0x2f521
inc esi
imul ebp,[ebp+0x43],dword 0x74616572
adc [gs:esi+0x64],ah
outsd
dec eax
imul esp,[ebp+0x4d],dword 0x6c505552
popad
arpl [ebp+0x73],sp
adc esp,[esi+0x64]
outsd
dec eax
imul esp,[ebp+0x50],dword 0x656e6e69
fs push eax
insb
popad
arpl [ebp+0x73],sp
adc eax,0x4e6f6466
outsd
inc esp
gs jc 0x2f54b
gs o16 jc 0x2f54f
outsb
arpl [ebp+0x4c],sp
imul ebp,[esi+0x6b],dword 0x64661273
outsd
inc esp
outsd
outsb
jz 0x2f53c
fs push esp
outsd
push edx
arpl [gs:ebp+0x6e],sp
jz 0x2f518
fs outsw
inc esi
outsd
jc 0x2f570
gs push ebx
push dword 0x6948776f
gs outsb
adc al,0x66
fs outsd
inc esp
gs popaw
jnz 0x2f58e
jz 0x2f572
outsd
dec ebp
imul ebp,[esi+0x69],dword 0x65646f4d
adc eax,0x466f6466
outsd
jc 0x2f598
gs push eax
jc 0x2f59e
jna 0x2f5a4
gs ja 0x2f58e
popad
outsb
gs dec edi
outsb
pop es
inc esp
imul esp,[ecx+0x6c],dword 0x9073676f
push eax
add eax,0x12060043
push esp
inc esi
imul ebp,[ebp+0x44],dword 0x6f6c6169
dec edi
jo 0x2f5d4
imul ebp,[edi+0x6e],dword 0x39c0573
inc ebx
add [ebp+0x5700040],cl
inc ebx
add [ebx],al
sbb al,0x54
inc esi
imul ebp,[ebp+0x44],dword 0x6f6c6169
dec edi
jna 0x2f5e5
jc 0x2f5f9
jc 0x2f5ed
jz 0x2f5eb
push edx
gs jnc 0x2f5fa
outsd
outsb
jnc 0x2f5f3
add [eax],eax
add [eax],al
add [edx],al
add [eax],al
add [ebp+eax+0x43],ch
add [edx],cl
outsw
jc 0x2f5e4
gs popaw
jnz 0x2f611
jz 0x2f5b0
outsw
jc 0x2f5ec
arpl [ebx+0x65],sp
jo 0x2f624
or [esi+0x6f],esp
jc 0x2f607
gs o16 jnz 0x2f62c
gs pop es
inc esp
imul esp,[ecx+0x6c],dword 0x8b73676f
ror al,byte 0x5
inc ebx
add [ebx],al
and [esi+eax*2+0x69],edx
insb
gs inc esp
imul esp,[ecx+0x6c],dword 0x6853676f
popad
jc 0x2f63f
push esi
imul ebp,[edi+0x6c],dword 0x6f697461
outsb
push edx
gs jnc 0x2f657
outsd
outsb
jnc 0x2f650
add [eax],eax
add [eax],al
add [edx],al
add [eax],al
add ah,al
add eax,0x660a0043
jnc 0x2f66e
inc esp
gs popaw
jnz 0x2f66e
jz 0x2f60d
o16 jnc 0x2f679
inc ecx
arpl [ebx+0x65],sp
jo 0x2f681
or [esi+0x73],esp
jc 0x2f664
gs o16 jnz 0x2f689
gs pop es
inc esp
imul esp,[ecx+0x6c],dword 0x9073676f
and al,0x6
inc ebx
add [eax],cl
adc eax,0x6c694654
gs inc esp
imul esp,[ecx+0x6c],dword 0x6c43676f
outsd
jnc 0x2f69b
inc ebp
jna 0x2f69e
outsb
jz 0x2f63c
add cl,[eax]
push es
push ebx
gs outsb
gs jc 0x2f64d
push esp
dec edi
bound ebp,[edx+0x65]
arpl [ecx+eax+0x8],si
inc ebx
popad
outsb
inc ebx
insb
outsd
jnc 0x2f6bc
pop es
inc edx
outsd
outsd
insb
gs popad
outsb
add [ecx+edx],al
inc eax
add [eax],al
adc [eax+0x0],al
insb
push es
inc ebx
add [eax],cl
push ds
push esp
inc esi
imul ebp,[ebp+0x44],dword 0x6f6c6169
inc esi
outsd
insb
gs jc 0x2f6c3
push dword 0x69676e61
outsb
inc ebp
jna 0x2f6ef
outsb
jz 0x2f68d
add cl,[eax]
push es
push ebx
gs outsb
gs jc 0x2f69e
push esp
dec edi
bound ebp,[edx+0x65]
arpl [ecx+eax+0x9],si
inc ebx
popad
outsb
inc ebx
push dword 0x65676e61
pop es
inc edx
outsd
outsd
insb
gs popad
outsb
add [ecx+edx],al
inc eax
add [eax],al
adc [eax+0x0],al
mov eax,eax
rol byte [esi],byte 0x43
add [eax],cl
sbb [esi+eax*2+0x69],edx
insb
gs inc esp
imul esp,[ecx+0x6c],dword 0x764f676f
gs jc 0x2f749
jc 0x2f73d
jz 0x2f73b
inc ebp
jna 0x2f73e
outsb
jz 0x2f6dc
add cl,[eax]
push es
push ebx
gs outsb
gs jc 0x2f6ed
push esp
dec edi
bound ebp,[edx+0x65]
arpl [ecx+eax+0x8],si
push edx
gs jnc 0x2f763
outsd
outsb
jnc 0x2f75c
sbb al,0x54
inc esi
imul ebp,[ebp+0x44],dword 0x6f6c6169
dec edi
jna 0x2f76b
jc 0x2f77f
jc 0x2f773
jz 0x2f771
push edx
gs jnc 0x2f780
outsd
outsb
jnc 0x2f779
add [ecx+edx],al
inc eax
add [ebp+eax+0x43],ch
add [ebp+0x7240040],cl
inc ebx
add [eax],cl
push ds
push esp
inc esi
imul ebp,[ebp+0x44],dword 0x6f6c6169
push ebx
push dword 0x56657261
imul ebp,[edi+0x6c],dword 0x6f697461
outsb
inc ebp
jna 0x2f7a7
outsb
jz 0x2f745
add cl,[eax]
push es
push ebx
gs outsb
gs jc 0x2f756
push esp
dec edi
bound ebp,[edx+0x65]
arpl [ecx+eax+0x8],si
push edx
gs jnc 0x2f7cc
outsd
outsb
jnc 0x2f7c5
and [esi+eax*2+0x69],edx
insb
gs inc esp
imul esp,[ecx+0x6c],dword 0x6853676f
popad
jc 0x2f7d6
push esi
imul ebp,[edi+0x6c],dword 0x6f697461
outsb
push edx
gs jnc 0x2f7ee
outsd
outsb
jnc 0x2f7e7
add [ecx+edx],al
inc eax
add ah,al
add eax,0xd8900043
pop es
inc ebx
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add al,bh
pop es
inc ebx
add [eax+ecx],ah
inc ebx
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [edx],dl
or [ebx+0x0],al
sbb al,0x0
add [eax],al
add [ecx+eax*2],ch
add [eax],bh
ds inc eax
add [esi+edi+0x40],al
add [eax+0x3e],cl
inc eax
add [esi+edi+0x40],cl
add [eax+0x3e],al
inc eax
add [eax-0x5bffbfc5],cl
cmp eax,[eax+0x0]
cld
sub eax,0x55600043
inc ecx
add [eax+0x55],ch
inc ecx
add [esp+edx*2+0x41],bh
add al,al
cs inc ebx
add [eax+0x59],ah
inc ecx
add [eax-0x77ffbea7],dl
pop ecx
inc ecx
add [ebp+ebp+0xe0043],bh
add [eax],al
add [eax],al
add al,[eax]
add [eax],al
xchg eax,esp
adc [eax+0x0],al
or al,0x0
add [eax],al
xchg eax,esp
adc [eax+0x0],al
adc al,0x0
add [eax],al
or eax,0x6c694654
gs push esp
jns 0x2f88b
gs dec ecx
jz 0x2f884
insd
and al,0x8
inc ebx
add [edi],al
or eax,0x6c694654
gs push esp
jns 0x2f89e
gs dec ecx
jz 0x2f897
insd
fadd dword [edi]
inc ebx
add [esp+ebp+0x20041],cl
pop es
inc esp
imul esp,[ecx+0x6c],dword 0x273676f
add [eax+edx+0xc0040],dl
add bh,bh
or al,0x0
add bh,bh
add [eax],eax
add [eax],al
add [eax],al
add [eax-0x80000000],al
add [eax],al
or eax,[ecx+ebp*2+0x73]
jo 0x2f8d3
popad
jns 0x2f8b8
popad
insd
gs xchg eax,esp
adc [eax+0x0],al
adc al,0x0
add bh,bh
adc al,0x0
add bh,bh
add [eax],eax
add [eax],al
add [eax],al
add [eax-0x80000000],al
add [eax],eax
or [esi+0x69],al
insb
gs dec ebp
popad
jnc 0x2f8fb
fmul qword [eax]
inc ebx
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],bl
or [ebx+0x0],eax
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add al,0x9
inc ebx
add [eax],bl
add [eax],al
add [eax+0x3800412c],bh
ds inc eax
add [esi+edi+0x40],al
add [eax+0x3e],cl
inc eax
add [esi+edi+0x40],cl
add [eax+0x3e],al
inc eax
add [eax-0x5bffbfc5],cl
cmp eax,[eax+0x0]
or al,0x5a
inc ecx
add [eax+0x55],ah
inc ecx
add [eax+0x55],ch
inc ecx
add [eax+0x5a],bh
inc ecx
add [esi+ebx*2+0x5e900041],cl
inc ecx
add [esi+ebx*2+0x5e840041],dl
inc ecx
add [eax+0x1000415e],cl
pop ebx
inc ecx
add [ebx+ebx*2+0x540e0041],cl
inc esi
imul ebp,[ebp+0x54],dword 0x49657079
jz 0x2f976
insd
jnc 0x2f8a4
sbb [ecx],cl
inc ebx
add [edi],al
push cs
push esp
inc esi
imul ebp,[ebp+0x54],dword 0x49657079
jz 0x2f98b
insd
jnc 0x2f905
or [ebx+0x0],al
fs sub eax,0x41
pop es
inc esp
imul esp,[ecx+0x6c],dword 0x73676f
add [eax+0x4309],cl
add [eax],al
add [eax],al
add [eax],al
add [eax-0x2fffbcf7],ch
or [ebx+0x0],eax
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
mov edx,0x10004309
add [eax],al
add [eax],al
sub al,0x41
add [eax],bh
ds inc eax
add [esi+edi+0x40],al
add [eax+0x3e],cl
inc eax
add [esi+edi+0x40],cl
add [eax+0x3e],al
inc eax
add [eax-0x5bffbfc5],cl
cmp eax,[eax+0x0]
adc al,0x58
inc ecx
add [eax+0x55],ah
inc ecx
add [eax+0x55],ch
inc ecx
add [esp+edx*2+0x41],bh
add [eax+0x30],ah
inc ebx
add [eax+0x59],ah
inc ecx
add [eax-0x77ffbea7],dl
pop ecx
inc ecx
add ah,bl
push edi
inc ecx
add [esi],cl
add [eax],al
add [eax],al
add [ecx],al
add [eax],al
add [eax+edx+0xc0040],dl
add [eax],al
adc [esi+eax*2+0x61],edx
jna 0x2fa2f
jc 0x2fa2b
jz 0x2fa29
dec esp
imul ebp,[esi+0x6b],dword 0x6d657449
ror byte [ecx],1
inc ebx
add [edi],al
adc [esi+eax*2+0x61],edx
jna 0x2fa46
jc 0x2fa42
jz 0x2fa40
dec esp
imul ebp,[esi+0x6b],dword 0x6d657449
mov [ecx],cl
inc ebx
add [esp+ebp+0x10041],cl
pop es
inc esp
imul esp,[ecx+0x6c],dword 0x173676f
add [eax+edx+0xc0040],dl
add bh,bh
or al,0x0
add bh,bh
add [eax],eax
add [eax],al
add [eax],al
add [eax-0x80000000],al
add [eax],al
or [edi+ebp*2+0x63],cl
popad
jz 0x2fa81
outsd
outsb
mov eax,eax
push dword 0x430a
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax+0xa],ch
inc ebx
add [eax+eax],cl
add [eax],al
mov al,0x10
inc eax
add [eax],bh
ds inc eax
add [esi+edi+0x40],al
add [eax+0x3e],cl
inc eax
add [esi+edi+0x40],cl
add [eax+0x3e],al
inc eax
add [eax-0x5bffbfc5],cl
cmp eax,[eax+0x0]
loopne 0x2faa1
inc eax
add [esp+edx*2],bl
inc esi
popad
jna 0x2fadd
jc 0x2fad9
jz 0x2fad7
dec esp
imul ebp,[esi+0x6b],dword 0x6d657449
jnc 0x2fac1
outsb
jnz 0x2faec
gs jc 0x2fae3
jz 0x2faf3
jc 0x2fa13
inc eax
add ah,dl
or al,[ebx+0x0]
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
adc al,0xb
inc ebx
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add ah,bh
or al,[ebx+0x0]
sbb [eax],al
add [eax],al
mov eax,0x3800412c
ds inc eax
add [esi+edi+0x40],al
add [eax+0x3e],cl
inc eax
add [esi+edi+0x40],cl
add [eax+0x3e],al
inc eax
add [eax-0x5bffbfc5],cl
cmp eax,[eax+0x0]
or al,0x5a
inc ecx
add [eax+0x55],ah
inc ecx
add [eax+0x55],ch
inc ecx
add [eax+0x5a],bh
inc ecx
add [esi+ebx*2+0x5e900041],cl
inc ecx
add [esi+ebx*2+0x5e840041],dl
inc ecx
add [eax+0x1000415e],cl
pop ebx
inc ecx
add [ebx+ebx*2+0x54120041],cl
inc esi
popad
jna 0x2fb71
jc 0x2fb6d
jz 0x2fb6b
dec esp
imul ebp,[esi+0x6b],dword 0x6d657449
jnc 0x2faa0
adc al,0xb
inc ebx
add [edi],al
adc dl,[esi+eax*2+0x61]
jna 0x2fb8a
jc 0x2fb86
jz 0x2fb84
dec esp
imul ebp,[esi+0x6b],dword 0x6d657449
jnc 0x2fafd
or al,[ebx+0x0]
fs sub eax,0x41
pop es
inc esp
imul esp,[ecx+0x6c],dword 0x73676f
add [eax+0x430b],cl
add [eax],al
add [eax],al
add [eax],al
add al,cl
or eax,[ebx+0x0]
mov al,[0x430c]
add [eax],al
add [eax],al
add [eax],al
add [edx],ah
or al,0x43
add [edx-0x4fffbcf4],cl
add [eax],al
add [edi+esi],ch
inc ecx
add [eax],ch
mov ebp,0x3e440041
inc eax
add [esi+esi*4+0x41],ah
add [esi+edi+0x40],cl
add [eax+0x3e],al
inc eax
add [eax-0x5bffbfc5],cl
cmp eax,[eax+0x0]
aam 0x33
inc ebx
add [eax+0x55],ah
inc ecx
add [ecx+edi*4],ch
inc ecx
add [esp+edx*2+0x41],bh
add [edx+edi*4],al
inc ecx
add ah,cl
mov eax,0xba140041
inc ecx
add [ebx+edi*4],cl
inc ecx
add [eax-0x43],al
inc ecx
add [edx+edi*4],ah
inc ecx
add [edx+edi*4],bl
inc ecx
add [eax-0x43],cl
inc ecx
add [ebx+esi],bh
inc ebx
add [ebx+esi+0x40],dl
add [eax+0x2400433d],dl
xor eax,0x35680043
inc ebx
add [esi],cl
add [eax],al
add [eax],al
add [edx],cl
add [eax],al
add [eax+edx+0x300040],dl
add [eax],al
xchg eax,esp
adc [eax+0x0],al
xor al,0x0
add [eax],al
xchg eax,esp
adc [eax+0x0],al
cmp [eax],al
add [eax],al
mov al,0x8d
inc edx
add [eax+eax],bh
add [eax],al
dec eax
js 0x2fc35
add [eax+eax+0x0],al
add [eax+edx+0x480040],dl
add [eax],al
xchg eax,esp
adc [eax+0x0],al
pop esp
add [eax],al
add [ecx*4+0x640042],dl
add [eax],al
inc esp
lea eax,[edx+0x0]
push dword 0x94000000
adc [eax+0x0],al
insb
add [eax],al
add [ecx],dl
add bh,ch
db 0xff
out dx,al
db 0xff
in eax,dx
db 0xff
in al,dx
db 0xff
jmp short 0x2fc2d
jmp dword 0xe7ff:0xe8ffe9ff
jmp esi
jmp ebp
jmp esp
jmp ebx
jmp edx
jmp ecx
jmp eax
db 0xff
db 0xdf
jmp dword [esp+esi]
inc ebx
add [eax],bh
xor al,0x43
add [eax+0x34],bl
inc ebx
add [eax+0x34],bh
inc ebx
add [esp+esi+0x34c40043],ah
inc ebx
add ah,ah
xor al,0x43
add [esi+0x3bbc0043],al
inc ebx
add al,ah
cmp al,0x43
add [edx+edi+0x43],ch
add [edx+edi+0x3b040043],ch
inc ebx
add [eax+0x3e],cl
inc ebx
add al,ch
ds inc ebx
add ah,bl
aas
inc ebx
add [eax+eax*2+0x43],bh
add [ecx],dl
push esp
inc ebx
jnz 0x2fd02
jz 0x2fd00
insd
inc esi
imul ebp,[ebp+0x44],dword 0x6f6c6169
mov al,[word 0x430c]
add [edi],al
adc [ebx+eax*2+0x75],edx
jnc 0x2fd1b
outsd
insd
inc esi
imul ebp,[ebp+0x44],dword 0x6f6c6169
mov [bp+di],cl
inc ebx
add [eax],ch
cmp [ecx+0x0],al
add al,[eax]
pop es
inc esp
imul esp,[ecx+0x6c],dword 0x73676f
add [eax+0x430d14],dl
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
js 0x2fce7
inc ebx
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [ebp+ecx+0x43],dl
add [ebp+ecx+0x43],bl
add [eax+0x3c000000],dh
or eax,[ebx+0x0]
sub [ebp+0x3e440041],bh
inc eax
add [esi+esi*4+0x41],ah
add [esi+edi+0x40],cl
add [eax+0x3e],al
inc eax
add [eax-0x5bffbfc5],cl
cmp eax,[eax+0x0]
aam 0x33
inc ebx
add [eax+0x55],ah
inc ecx
add [ecx+edi*4],ch
inc ecx
add [esp+edx*2+0x41],bh
add [edx+edi*4],al
inc ecx
add ah,cl
mov eax,0xba140041
inc ecx
add [ebx+edi*4],cl
inc ecx
add [eax-0x43],al
inc ecx
add [edx+edi*4],ah
inc ecx
add [edx+edi*4],bl
inc ecx
add [eax-0x43],cl
inc ecx
add [ebx+esi],bh
inc ebx
add [eax+eax*2+0x40e80043],dh
inc ebx
add [esi+0x35680043],ah
inc ebx
add [ecx],al
add cl,ah
db 0xff
jl 0x2fd9b
inc ebx
add [dword 0x73754354],dl
jz 0x2fdd2
insd
inc esi
imul ebp,[ebp+0x4f],dword 0x446e6570
imul esp,[ecx+0x6c],dword 0xc08b676f
js 0x2fd83
inc ebx
add [edi],al
adc eax,0x73754354
jz 0x2fdef
insd
inc esi
imul ebp,[ebp+0x4f],dword 0x446e6570
imul esp,[ecx+0x6c],dword 0xd14676f
inc ebx
add [esp+ecx+0x20043],bl
pop es
inc esp
imul esp,[ecx+0x6c],dword 0x73676f
add [eax+0x430df0],dl
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
inc esp
push cs
inc ebx
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],dh
push cs
inc ebx
add [eax-0x38000000],dh
or al,0x43
add [eax],ch
mov ebp,0x3e440041
inc eax
add [esi+esi*4+0x41],ah
add [esi+edi+0x40],cl
add [eax+0x3e],al
inc eax
add [eax-0x5bffbfc5],cl
cmp eax,[eax+0x0]
aam 0x33
inc ebx
add [eax+0x55],ah
inc ecx
add [ecx+edi*4],ch
inc ecx
add [esp+edx*2+0x41],bh
add [edx+edi*4],al
inc ecx
add ah,cl
mov eax,0xba140041
inc ecx
add [ebx+edi*4],cl
inc ecx
add [eax-0x43],al
inc ecx
add [edx+edi*4],ah
inc ecx
add [edx+edi*4],bl
inc ecx
add [eax-0x43],cl
inc ecx
add [ebx+esi],bh
inc ebx
add [eax+eax*2+0x40e80043],dh
inc ebx
add [esi+0x35680043],ah
inc ebx
add [edi],cl
push esp
inc esi
imul ebp,[ebp+0x4f],dword 0x446e6570
imul esp,[ecx+0x6c],dword 0xe44676f
inc ebx
add [edi],al
andps xmm0,oword [esi+0x69]
insb
gs dec edi
jo 0x2feb3
outsb
inc esp
imul esp,[ecx+0x6c],dword 0xdf0676f
inc ebx
add [ebp+ecx+0x43],dh
add [eax+eax],dl
pop es
inc esp
imul esp,[ecx+0x6c],dword 0x1273676f
add [eax+edx+0x300040],dl
add bh,bh
inc eax
aas
inc ebx
add [ecx],al
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax+0x430a0002],al
insb
imul esp,[ebp+0x6e],dword 0x69754774
fs xchg eax,esp
adc [eax+0x0],al
xor al,0x0
add bh,bh
xor al,0x0
add bh,bh
add [eax],eax
add [eax],al
add [eax],al
add [eax-0x80000000],al
add eax,[eax]
adc [ebp+0x66],al
popad
jnz 0x2ff1b
jz 0x2fef6
js 0x2ff27
gs outsb
jnc 0x2ff20
outsd
outsb
xchg eax,esp
adc [eax+0x0],al
xchg eax,esp
cmp eax,[ebx+0x0]
jz 0x2ff02
inc ebx
add [ecx],al
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax+0x440d0004],al
gs popaw
jnz 0x2ff46
jz 0x2ff22
outsd
insb
gs jc 0x2fef2
or eax,[ebx+0x0]
inc eax
add [eax],al
dec eax
aas
inc ebx
add [ecx],al
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax+0x460d0005],al
popad
jna 0x2ff6f
jc 0x2ff6b
jz 0x2ff69
dec esp
imul ebp,[esi+0x6b],dword 0x40784873
add [eax-0x6bffbcc5],ch
aas
inc ebx
add [ecx],al
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax+0x46080006],al
imul ebp,[ebp+0x4e],dword 0x94656d61
adc [eax+0x0],al
dec eax
add [eax],al
dec dword [eax+0x0]
add bh,bh
add [eax],eax
add [eax],al
add [eax],al
add [eax-0x80000000],al
pop es
add [dword 0x656c6946],cl
dec esi
popad
insd
gs dec esp
popad
bound esp,[ebp+0x6c]
adc al,0x9
inc ebx
add [eax+eax+0x0],dl
push dword [edi+edi+0x10043]
add [eax],al
add [eax],al
add [eax-0x80000000],al
or [eax],al
or [esi+0x69],eax
insb
gs push esp
jns 0x2ffe6
gs jnc 0x2fff5
adc [eax+0x0],al
push eax
add [eax],al
call dword [eax+0x0]
add bh,bh
add [eax],eax
add [eax],al
add [eax],al
add [eax+0x1],al
or [eax],eax
or eax,0x656c6946
push esp
jns 0x3000a
gs dec ecx
outsb
gs js 0x2ff35
adc [eax+0x0],al
pop esp
add [eax],al
call dword far [eax+eax+0x0]
inc dword [ecx]
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax+0x4f0d000a],al
imul eax,[edx+0x75],byte +0x74
jz 0x30031
outsb
dec esp
popad
bound esp,[ebp+0x6c]
dec esp
add eax,0x600043
add bh,bh
pushad
add [eax],al
inc dword [ecx]
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax+0x4f07000b],al
jo 0x3005a
imul ebp,[edi+0x6e],dword 0x40109473
add [eax+eax+0x0],ch
jmp dword far [eax+eax+0x0]
inc dword [ecx]
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax+0x5405000c],al
imul esi,[esp+ebp*2+0x65],dword 0x4123c8
jo 0x30010
add bh,bh
jo 0x30014
add bh,bh
add [eax],eax
add [eax],al
add [eax],al
add [eax-0x80000000],al
or eax,0x6e4f0900
inc ebp
js 0x3008f
arpl [ebp+0x74],si
and [gs:esi],al
inc ebx
add [eax+0x0],bh
add bh,bh
js 0x30038
add bh,bh
add [eax],eax
add [eax],al
add [eax],al
add [eax-0x80000000],al
push cs
add [dword 0x69466e4f],cl
insb
gs dec edi
imul eax,[ebx+0x6c],byte +0x69
arpl [ebx-0x38],bp
and eax,[ecx+0x0]
add byte [eax],0x0
inc dword [eax+0x1ff0000]
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax+0x4f0e000f],al
outsb
inc esi
outsd
insb
gs jc 0x300bd
push dword 0x65676e61
push dword 0x88004306
add [eax],al
dec dword [eax+0x1ff0000]
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax+0x4f100010],al
outsb
inc esi
outsd
insb
gs jc 0x300e6
push dword 0x69676e61
outsb
enter 0x4123,0x0
cwde
add [eax],al
call dword far [eax+0x1ff0000]
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax+0x4f110011],al
outsb
push ebx
gs insb
arpl [gs:ecx+ebp*2+0x6f],si
outsb
inc ebx
push dword 0x65676e61
and [edi],al
inc ebx
add [eax-0x5f010000],ah
add [eax],al
inc dword [ecx]
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax+0x4f100012],al
outsb
push ebx
push dword 0x56657261
imul ebp,[edi+0x6c],dword 0x6f697461
outsb
enter 0x4123,0x0
test al,0x0
add bh,bh
test al,0x0
add bh,bh
add [eax],eax
add [eax],al
add [eax],al
add [eax-0x80000000],al
adc eax,[eax]
or al,0x4f
outsb
push esp
jns 0x30191
gs inc ebx
push dword 0x65676e61
jz 0x3013b
inc ebx
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add al,dl
adc [ebx+0x0],eax
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
mov ah,0x11
inc ebx
add [eax+0x3c000000],dh
or eax,[ebx+0x0]
sub [ebp+0x3e440041],bh
inc eax
add [esi+esi*4+0x41],ah
add [esi+edi+0x40],cl
add [eax+0x3e],al
inc eax
add [eax-0x5bffbfc5],cl
cmp eax,[eax+0x0]
aam 0x33
inc ebx
add [eax+0x55],ah
inc ecx
add [ecx+edi*4],ch
inc ecx
add [esp+edx*2+0x41],bh
add [edx+edi*4],al
inc ecx
add ah,cl
mov eax,0xba140041
inc ecx
add [ebx+edi*4],cl
inc ecx
add [eax-0x43],al
inc ecx
add [edx+edi*4],ah
inc ecx
add [edx+edi*4],bl
inc ecx
add [eax-0x43],cl
inc ecx
add [ebx+esi],bh
inc ebx
add [edx+eax*2],bh
inc ebx
add [eax+0x2400433d],dl
xor eax,0x35680043
inc ebx
add [dword 0x73754354],dl
jz 0x3022a
insd
inc esi
imul ebp,[ebp+0x53],dword 0x44657661
imul esp,[ecx+0x6c],dword 0xc08b676f
rcl byte [ecx],1
inc ebx
add [edi],al
adc eax,0x73754354
jz 0x30247
insd
inc esi
imul ebp,[ebp+0x53],dword 0x44657661
imul esp,[ecx+0x6c],dword 0x1174676f
inc ebx
add [esp+ecx+0x20043],bl
pop es
inc esp
imul esp,[ecx+0x6c],dword 0x73676f
add [eax+0x431248],dl
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
pushfd
adc al,[ebx+0x0]
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
mov [edx],dl
inc ebx
add [eax+0x28000000],dh
adc [ebx+0x0],eax
sub [ebp+0x3e440041],bh
inc eax
add [esi+esi*4+0x41],ah
add [esi+edi+0x40],cl
add [eax+0x3e],al
inc eax
add [eax-0x5bffbfc5],cl
cmp eax,[eax+0x0]
aam 0x33
inc ebx
add [eax+0x55],ah
inc ecx
add [ecx+edi*4],ch
inc ecx
add [esp+edx*2+0x41],bh
add [edx+edi*4],al
inc ecx
add ah,cl
mov eax,0xba140041
inc ecx
add [ebx+edi*4],cl
inc ecx
add [eax-0x43],al
inc ecx
add [edx+edi*4],ah
inc ecx
add [edx+edi*4],bl
inc ecx
add [eax-0x43],cl
inc ecx
add [ebx+esi],bh
inc ebx
add [edx+eax*2],bh
inc ebx
add [eax+0x2400433d],dl
xor eax,0x35680043
inc ebx
add [edi],cl
push esp
inc esi
imul ebp,[ebp+0x53],dword 0x44657661
imul esp,[ecx+0x6c],dword 0x129c676f
inc ebx
add [edi],al
andps xmm0,oword [esi+0x69]
insb
gs push ebx
popad
jna 0x3030c
inc esp
imul esp,[ecx+0x6c],dword 0x1248676f
inc ebx
add ah,cl
adc [ebx+0x0],eax
adc eax,0x69440700
popad
insb
outsd
jnc 0x302d3
add [eax+edx+0x300040],dl
add bh,bh
inc eax
aas
inc ebx
add [ecx],al
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax+0x430a0002],al
insb
imul esp,[ebp+0x6e],dword 0x69754774
fs xchg eax,esp
adc [eax+0x0],al
xor al,0x0
add bh,bh
xor al,0x0
add bh,bh
add [eax],eax
add [eax],al
add [eax],al
add [eax-0x80000000],al
add eax,[eax]
adc [ebp+0x66],al
popad
jnz 0x30373
jz 0x3034e
js 0x3037f
gs outsb
jnc 0x30378
outsd
outsb
xchg eax,esp
adc [eax+0x0],al
xchg eax,esp
cmp eax,[ebx+0x0]
jz 0x3035a
inc ebx
add [ecx],al
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax+0x440d0004],al
gs popaw
jnz 0x3039e
jz 0x3037a
outsd
insb
gs jc 0x3034a
or eax,[ebx+0x0]
inc eax
add [eax],al
dec eax
aas
inc ebx
add [ecx],al
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax+0x460d0005],al
popad
jna 0x303c7
jc 0x303c3
jz 0x303c1
dec esp
imul ebp,[esi+0x6b],dword 0x40784873
add [eax-0x6bffbcc5],ch
aas
inc ebx
add [ecx],al
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax+0x46080006],al
imul ebp,[ebp+0x4e],dword 0x94656d61
adc [eax+0x0],al
dec eax
add [eax],al
dec dword [eax+0x0]
add bh,bh
add [eax],eax
add [eax],al
add [eax],al
add [eax-0x80000000],al
pop es
add [dword 0x656c6946],cl
dec esi
popad
insd
gs dec esp
popad
bound esp,[ebp+0x6c]
adc al,0x9
inc ebx
add [eax+eax+0x0],dl
push dword [edi+edi+0x10043]
add [eax],al
add [eax],al
add [eax-0x80000000],al
or [eax],al
or [esi+0x69],eax
insb
gs push esp
jns 0x3043e
gs jnc 0x3044d
adc [eax+0x0],al
push eax
add [eax],al
call dword [eax+0x0]
add bh,bh
add [eax],eax
add [eax],al
add [eax],al
add [eax+0x1],al
or [eax],eax
or eax,0x656c6946
push esp
jns 0x30462
gs dec ecx
outsb
gs js 0x3038d
adc [eax+0x0],al
pop esp
add [eax],al
call dword far [eax+eax+0x0]
inc dword [ecx]
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax+0x4f0d000a],al
imul eax,[edx+0x75],byte +0x74
jz 0x30489
outsb
dec esp
popad
bound esp,[ebp+0x6c]
dec esp
add eax,0x600043
add bh,bh
pushad
add [eax],al
inc dword [ecx]
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax+0x4f07000b],al
jo 0x304b2
imul ebp,[edi+0x6e],dword 0x40109473
add [eax+eax+0x0],ch
jmp dword far [eax+eax+0x0]
inc dword [ecx]
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax+0x5405000c],al
imul esi,[esp+ebp*2+0x65],dword 0x4123c8
jo 0x30468
add bh,bh
jo 0x3046c
add bh,bh
add [eax],eax
add [eax],al
add [eax],al
add [eax-0x80000000],al
or eax,0x6e4f0900
inc ebp
js 0x304e7
arpl [ebp+0x74],si
and [gs:esi],al
inc ebx
add [eax+0x0],bh
add bh,bh
js 0x30490
add bh,bh
add [eax],eax
add [eax],al
add [eax],al
add [eax-0x80000000],al
push cs
add [dword 0x69466e4f],cl
insb
gs dec edi
imul eax,[ebx+0x6c],byte +0x69
arpl [ebx-0x38],bp
and eax,[ecx+0x0]
add byte [eax],0x0
inc dword [eax+0x1ff0000]
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax+0x4f0e000f],al
outsb
inc esi
outsd
insb
gs jc 0x30515
push dword 0x65676e61
push dword 0x88004306
add [eax],al
dec dword [eax+0x1ff0000]
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax+0x4f100010],al
outsb
inc esi
outsd
insb
gs jc 0x3053e
push dword 0x69676e61
outsb
mov esp,0x90004306
add [eax],al
call dword [eax+0x1ff0000]
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax+0x4f0b0011],al
outsb
dec edi
jna 0x30587
jc 0x3059b
jc 0x3058f
jz 0x3058d
enter 0x4123,0x0
cwde
add [eax],al
call dword far [eax+0x1ff0000]
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax+0x4f110012],al
outsb
push ebx
gs insb
arpl [gs:ecx+ebp*2+0x6f],si
outsb
inc ebx
push dword 0x65676e61
and [edi],al
inc ebx
add [eax-0x5f010000],ah
add [eax],al
inc dword [ecx]
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax+0x4f100013],al
outsb
push ebx
push dword 0x56657261
imul ebp,[edi+0x6c],dword 0x6f697461
outsb
enter 0x4123,0x0
test al,0x0
add bh,bh
test al,0x0
add bh,bh
add [eax],eax
add [eax],al
add [eax],al
add [eax-0x80000000],al
adc al,0x0
or al,0x4f
outsb
push esp
jns 0x3060f
gs inc ebx
push dword 0x65676e61
mov eax,eax
mov eax,[0x468d34]
mov eax,[eax]
call dword 0x608a0
test al,al
jz 0x305d2
mov eax,[0x468d34]
mov eax,[eax]
cmp dword [eax+0x44],byte +0x0
jz 0x305d2
mov eax,[0x468d34]
mov eax,[eax]
call dword 0x601c0
ret
mov eax,[0x468d34]
mov eax,[eax]
mov eax,[eax+0x30]
ret
lea eax,[eax+0x0]
push ebx
push esi
push edi
add esp,byte -0x10
mov esi,eax
push esp
push esi
call dword 0x6110
mov eax,[0x468d34]
mov eax,[eax]
mov edx,[eax+0x44]
test edx,edx
jz 0x3062a
mov eax,[0x468e8c]
mov eax,[eax]
mov eax,[eax+0x6c]
test eax,eax
jz 0x3061a
mov edx,[dword 0x468e8c]
call dword 0x57634
mov ebx,eax
jmp short 0x3063a
mov eax,[0x468d34]
mov eax,edx
call dword 0x57634
mov ebx,eax
jmp short 0x3063a
mov eax,[0x468e8c]
mov eax,[eax]
xor edx,edx
call dword 0x5bff8
mov ebx,eax
push byte +0x15
push byte +0x0
push byte +0x0
mov eax,ebx
call dword 0x5bcd8
mov edi,eax
mov eax,ebx
call dword 0x5bcbc
sub eax,[esp+0x18]
add eax,[esp+0x10]
mov ecx,0x3
cdq
idiv ecx
add edi,eax
push edi
mov eax,ebx
call dword 0x5bca4
mov edi,eax
mov eax,ebx
call dword 0x5bcf0
sub eax,[esp+0x18]
add eax,[esp+0x10]
sar eax,1
jns 0x30682
adc eax,byte +0x0
add edi,eax
push edi
push byte +0x0
push esi
call dword 0x6320
add esp,byte +0x10
pop edi
pop esi
pop ebx
ret
push ebp
mov ebp,esp
push ebx
push esi
push edi
mov esi,[ebp+0xc]
mov ebx,[ebp+0x8]
xor edi,edi
cmp esi,0x110
jnz 0x306f2
mov eax,ebx
call dword 0x305e0
mov eax,[0x468328]
mov [eax+0x3c],ebx
mov eax,[0x468328]
mov eax,[eax+0x44]
push eax
push byte -0x4
push ebx
call dword 0x6308
mov edx,[dword 0x468328]
mov [edx+0x34],eax
mov eax,[ebp+0x14]
push eax
mov eax,[ebp+0x10]
push eax
push esi
push ebx
mov eax,[0x468328]
mov eax,[eax+0x44]
push eax
call dword 0x5e78
xor eax,eax
mov [0x468328],eax
mov eax,edi
pop edi
pop esi
pop ebx
pop ebp
ret 0x10
nop
dec eax
pop ss
inc ebx
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax+0x18],al
inc ebx
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],ah
sbb [ebx+0x0],al
sub [eax],bl
inc ebx
add [eax+0x2],bl
add [eax],al
sbb al,0xd1
inc ebx
add [eax],ch
mov ebp,0x3e440041
inc eax
add [esi+esi*4+0x41],ah
add [esi+edi+0x40],cl
add [ecx+ebp*2],bh
inc esp
add [eax-0x5bffbfc5],cl
cmp eax,[eax+0x0]
inc esp
inc edx
inc esp
add [edi+ebx*4+0x44],bh
add ah,bh
pop eax
inc esp
add [esp+edx*2+0x41],bh
add [edx+edi],dh
inc esp
add [ebx+edx*2],dl
inc esp
add al,bh
inc ebx
inc esp
add [eax+0x40004410],al
mov ebp,0xba240041
inc ecx
add [edx+edi*4],bl
inc ecx
add [eax-0x43],cl
inc ecx
add [eax],al
inc ecx
inc esp
add [eax-0x53ffbb67],ah
lahf
inc esp
add al,bh
sahf
inc esp
add [eax+0x3],dh
inc esp
add [esp+edx*4+0x44],ah
add [esp+edx*4-0x6f0fffbc],al
inc esp
add [eax-0x4bffbbfe],dh
add al,[eax+eax+0x4]
cmp al,0x44
add [eax],dh
cmp al,0x44
add al,dh
add al,0x44
add [eax+edx+0x44],ah
add ah,ch
add al,0x44
add al,dh
adc [eax+eax-0x34],eax
test al,0x44
add [eax+0x2c004414],dh
adc eax,[eax+eax-0x74]
sbb [ebx+0x0],al
mov ah,0x3c
inc esp
add [ecx+edx*4+0x44],al
add [edx+edx*4],al
inc esp
add al,bh
mov [eax+eax-0x18],es
xchg eax,ecx
inc esp
add [eax+0x44],dh
inc esp
add [eax],bh
dec esp
inc esp
add [edx+ebx*2+0x44],ah
add [eax+0x18],ch
inc ebx
add [edi+edx*2],bh
inc esp
add [ebp+edx*2+0x44],ch
add ah,bh
pop edx
inc esp
add [eax],ah
pop ebx
inc esp
add [ebx+ebx*2+0x59b80044],dh
inc esp
add [eax+0x59],bl
inc esp
add [edi-0x6ccfffbc],cl
inc esp
add al,ch
imul eax,[eax+eax+0x0],byte -0x59
inc esp
add [eax+0x5000448f],ah
test al,0x44
add [eax+0x1004492],bl
add [ecx],ah
mov al,0xf8
sbb [ebx+0x0],al
adc [edx+edx*2+0x65],edx
imul esi,[fs:edx+0x65],dword 0x726f7463
push edi
imul ebp,[esi+0x64],dword 0xc08b776f
inc eax
sbb [ebx+0x0],al
pop es
adc [edx+edx*2+0x65],edx
imul esi,[fs:edx+0x65],dword 0x726f7463
push edi
imul ebp,[esi+0x64],dword 0x1748776f
inc ebx
add [edx*8+0xd0043],al
pop es
inc esp
imul esp,[ecx+0x6c],dword 0x73676f
add [eax-0xd74a9ad],dl
mov ebx,eax
mov edx,esi
mov eax,ebx
call dword 0x44440
mov dword [esi+0x4],0x90000000
mov eax,[ebx+0x254]
mov [esi+0x1c],eax
pop esi
pop ebx
ret
mov eax,eax
push ebx
push esi
mov ebx,edx
mov esi,eax
mov edx,ebx
mov eax,esi
call dword 0x4541c
cmp dword [ebx+0xc],byte +0x0
jnz 0x308c5
cmp dword [ebx],0xb021
jz 0x308c5
cmp dword [esi+0x250],byte +0x0
jz 0x308c5
mov edx,ebx
mov eax,[esi+0x250]
mov ecx,[eax]
call dword [ecx+0x34]
and eax,byte +0x7f
mov [ebx+0xc],eax
cmp dword [ebx+0xc],byte +0x0
jnz 0x308f2
cmp dword [ebx],byte +0x7
jnz 0x308f2
cmp dword [esi+0x254],byte +0x0
jz 0x308f2
mov eax,[ebx+0x8]
push eax
mov eax,[ebx+0x4]
push eax
push byte +0x7
mov eax,[esi+0x254]
push eax
call dword 0x6278
mov [ebx+0xc],eax
pop esi
pop ebx
ret
lea eax,[eax+0x0]
call dword 0x2bf0
ret
mov eax,eax
push ebx
push esi
test dl,dl
jz 0x3090e
add esp,byte -0x10
call dword 0x2f14
mov ebx,edx
mov esi,eax
xor edx,edx
mov eax,esi
call dword 0x1a59c
mov byte [esi+0x30],0x1
push esi
push dword 0x431a2c
call dword 0x1b65c
mov [esi+0x44],eax
mov eax,esi
test bl,bl
jz 0x30942
call dword 0x2f6c
pop dword [dword fs:0x0]
add esp,byte +0xc
mov eax,esi
pop esi
pop ebx
ret
nop
push ebx
push esi
call dword 0x2fbc
mov ebx,edx
mov esi,eax
mov eax,[esi+0x44]
test eax,eax
jz 0x3095f
call dword 0x1b6f4
mov eax,[esi+0x40]
test eax,eax
jz 0x3096e
xor edx,edx
mov [eax+0x250],edx
lea eax,[esi+0x40]
call dword 0xd0e8
mov edx,ebx
and dl,0xfc
mov eax,esi
call dword 0x1a5e8
test bl,bl
jng 0x3098d
mov eax,esi
call dword 0x2f64
pop esi
pop ebx
ret
push esi
mov esi,eax
mov eax,[0x468d34]
mov eax,[eax]
cmp byte [eax+0xd4],0x0
jz 0x309ba
mov eax,[0x468d34]
mov eax,[eax]
call dword 0x60178
test eax,eax
jnz 0x309bf
call dword 0x305a8
jmp short 0x309bf
call dword 0x305a8
mov edx,eax
mov eax,esi
mov ecx,[eax]
call dword [ecx+0x40]
pop esi
ret
mov eax,eax
xor ecx,ecx
mov edx,[edx]
cmp edx,[dword 0x46dba4]
jnz 0x309f1
cmp dword [eax+0x38],byte +0x0
jz 0x309f1
mov edx,[dword 0x468d34]
mov edx,[edx]
mov eax,[eax+0x38]
xchg eax,edx
call dword 0x5f264
mov cl,0x1
mov eax,ecx
ret
push ebx
push esi
push edi
mov esi,edx
mov ebx,eax
mov edi,[ebx+0x3c]
test edi,edi
jz 0x30a1c
mov eax,[esi+0x8]
push eax
mov eax,[esi+0x4]
push eax
mov eax,[esi]
push eax
push edi
mov eax,[ebx+0x34]
push eax
call dword 0x5e78
mov [esi+0xc],eax
jmp short 0x30a25
mov edx,esi
mov eax,ebx
call dword 0x2e40
pop edi
pop esi
pop ebx
ret
lea eax,[eax+0x0]
push ebp
mov ebp,esp
push ecx
push ebx
push esi
push edi
mov [ebp-0x4],eax
xor eax,eax
push ebp
push dword 0x431a56
push dword [fs:eax]
mov [fs:eax],esp
mov eax,[ebp-0x4]
mov ecx,[eax]
call dword [ecx+0x30]
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
jmp short 0x30a6f
jmp dword 0x30d0
mov eax,[0x468d34]
mov eax,[eax]
mov edx,[ebp-0x4]
call dword 0x5ecfc
call dword 0x34e0
pop edi
pop esi
pop ebx
pop ecx
pop ebp
ret
lea eax,[eax+0x0]
mov ecx,[eax]
call dword [ecx-0x14]
ret
mov eax,eax
push esi
mov esi,eax
mov eax,esi
mov ecx,[eax]
call dword [ecx-0x10]
mov eax,esi
mov si,0xffef
call dword 0x2dec
pop esi
ret
nop
push ebx
push esi
mov ebx,edx
mov si,0xffee
call dword 0x2dec
xor eax,eax
mov [ebx+0xc],eax
pop esi
pop ebx
ret
lea eax,[eax+0x0]
push esi
mov esi,eax
mov eax,esi
mov ecx,[eax]
call dword [ecx-0x10]
xor eax,eax
mov [esi+0x3c],eax
pop esi
ret
lea eax,[eax+0x0]
push ebp
mov ebp,esp
add esp,byte -0x18
push ebx
push esi
mov esi,ecx
mov ebx,edx
mov [ebp-0x8],eax
mov eax,[0x468d34]
mov eax,[eax]
call dword 0x60178
mov [ebp-0x10],eax
xor eax,eax
call dword 0x539c8
mov [ebp-0x14],eax
call dword 0x53820
mov [ebp-0x18],eax
xor eax,eax
push ebp
push dword 0x431b6d
push dword [fs:eax]
mov [fs:eax],esp
fnstcw [ebp-0x2]
xor eax,eax
push ebp
push dword 0x431b34
push dword [fs:eax]
mov [fs:eax],esp
mov eax,[ebp-0x8]
mov [0x468328],eax
push esi
call ebx
mov [ebp-0xc],eax
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x431b3b
fnclex
fldcw [ebp-0x2]
ret
jmp dword 0x3384
jmp short 0x30b2e
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x431b74
mov eax,[ebp-0x14]
call dword 0x53a8c
mov eax,[ebp-0x10]
push eax
call dword 0x6290
mov eax,[ebp-0x18]
call dword 0x53828
mov eax,[ebp-0x8]
add eax,byte +0x40
call dword 0xd0e8
ret
jmp dword 0x3384
jmp short 0x30b48
mov eax,[ebp-0xc]
pop esi
pop ebx
mov esp,ebp
pop ebp
ret
lea eax,[eax+0x0]
push ebx
cmp word [eax+0x52],byte +0x0
jz 0x30b92
mov ebx,eax
mov edx,eax
mov eax,[ebx+0x54]
call dword [ebx+0x50]
pop ebx
ret
push ebx
cmp word [eax+0x5a],byte +0x0
jz 0x30ba6
mov ebx,eax
mov edx,eax
mov eax,[ebx+0x5c]
call dword [ebx+0x58]
pop ebx
ret
hlt
sbb eax,[ebx+0x0]
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
clc
sbb eax,[ebx+0x0]
or al,0x0
add [eax],al
mov al,0x10
inc eax
add [eax],bh
ds inc eax
add [esi+edi+0x40],al
add [eax+0x3e],cl
inc eax
add [esi+edi+0x40],cl
add [eax+0x3e],al
inc eax
add [eax-0x5bffbfc5],cl
cmp eax,[eax+0x0]
and al,0x1d
inc ebx
add [ebx+esi+0x40],dl
add [edx],dl
push esp
inc esi
imul ebp,[ebp+0x44],dword 0x6f6c6169
push edi
jc 0x30c68
jo 0x30c79
gs jc 0x30b9c
pop eax
sbb al,0x43
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [esp+ebx+0x43],bl
add [eax+eax],cl
add [eax],al
test al,0x1b
inc ebx
add [eax],bh
ds inc eax
add [esi+edi+0x40],al
add [eax+0x3e],cl
inc eax
add [esi+edi+0x40],cl
add [eax+0x3e],al
inc eax
add [eax-0x5bffbfc5],cl
cmp eax,[eax+0x0]
and al,0x1d
inc ebx
add [eax],dh
and al,[ebx+0x0]
push ss
push esp
inc esi
imul ebp,[ebp+0x4f],dword 0x446e6570
imul esp,[ecx+0x6c],dword 0x7257676f
popad
jo 0x30ce1
gs jc 0x30c04
rcr byte [ebx+eax*2],byte 0x0
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
les ebx,[ebx+eax*2]
add [eax+eax],cl
add [eax],al
test al,0x1b
inc ebx
add [eax],bh
ds inc eax
add [esi+edi+0x40],al
add [eax+0x3e],cl
inc eax
add [esi+edi+0x40],cl
add [eax+0x3e],al
inc eax
add [eax-0x5bffbfc5],cl
cmp eax,[eax+0x0]
and al,0x1d
inc ebx
add [edx+0x54160043],bh
inc esi
imul ebp,[ebp+0x53],dword 0x44657661
imul esp,[ecx+0x6c],dword 0x7257676f
popad
jo 0x30d49
gs jc 0x30c6c
push ebx
push esi
push edi
test dl,dl
jz 0x30ceb
add esp,byte -0x10
call dword 0x2f14
mov esi,ecx
mov ebx,edx
mov edi,eax
xor edx,edx
mov eax,edi
call dword 0x2bc0
mov [edi+0x8],esi
mov eax,edi
mov edx,[eax]
call dword [edx]
mov [edi+0x4],eax
mov eax,edi
test bl,bl
jz 0x30d1b
call dword 0x2f6c
pop dword [dword fs:0x0]
add esp,byte +0xc
mov eax,edi
pop edi
pop esi
pop ebx
ret
lea eax,[eax+0x0]
push ebx
push esi
call dword 0x2fbc
mov ebx,edx
mov esi,eax
mov eax,[esi+0x4]
call dword 0x2bf0
mov edx,ebx
and dl,0xfc
mov eax,esi
call dword 0x2be0
test bl,bl
jng 0x30d4e
mov eax,esi
call dword 0x2f64
pop esi
pop ebx
ret
lea eax,[eax+0x0]
push ebp
mov ebp,esp
xor ecx,ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov [ebp-0x8],eax
xor eax,eax
push ebp
push dword 0x431eb6
push dword [fs:eax]
mov [fs:eax],esp
lea eax,[ebp-0x4]
mov edx,[ebp-0x8]
mov edx,[edx+0x8]
mov edx,[edx+0x68]
call dword 0x3ab4
mov ebx,0x1
mov edx,[ebp-0x4]
mov eax,0x431ecc
call dword 0xc1e8
mov esi,eax
test esi,esi
jz dword 0x30e93
mov eax,[ebp-0x8]
mov eax,[eax+0x4]
mov eax,[eax+0x54]
call dword 0x31f6c
mov edi,eax
lea eax,[edi+0xc]
push eax
mov ecx,esi
sub ecx,ebx
mov edx,ebx
mov eax,[ebp-0x4]
call dword 0x3f14
mov eax,[0x468eb4]
cmp byte [eax+0xc],0x0
jnz 0x30de0
lea ecx,[esi+0x1]
mov edx,[ebp-0x4]
mov eax,0x431ecc
call dword 0x2ce2c
mov ebx,eax
jmp short 0x30e0d
lea eax,[ebp-0x10]
push eax
lea edx,[esi+0x1]
mov ecx,0x7fffffff
mov eax,[ebp-0x4]
call dword 0x3f14
mov edx,[ebp-0x10]
mov eax,0x431ecc
call dword 0xc1e8
mov ebx,eax
test ebx,ebx
jz 0x30e0d
lea eax,[esi+0x1]
add ebx,eax
dec ebx
test ebx,ebx
jnz 0x30e2c
mov eax,[ebp-0x4]
mov [ebp-0xc],eax
cmp dword [ebp-0xc],byte +0x0
jz 0x30e28
mov eax,[ebp-0xc]
sub eax,byte +0x4
mov eax,[eax]
mov [ebp-0xc],eax
mov ebx,[ebp-0xc]
inc ebx
lea eax,[edi+0x14]
push eax
mov ecx,ebx
sub ecx,esi
dec ecx
lea edx,[esi+0x1]
mov eax,[ebp-0x4]
call dword 0x3f14
inc ebx
mov eax,[0x468eb4]
cmp byte [eax+0xc],0x0
jnz 0x30e5f
mov ecx,ebx
mov edx,[ebp-0x4]
mov eax,0x431ecc
call dword 0x2ce2c
mov esi,eax
jmp short 0x30e8b
lea eax,[ebp-0x14]
push eax
mov ecx,0x7fffffff
mov edx,ebx
mov eax,[ebp-0x4]
call dword 0x3f14
mov edx,[ebp-0x14]
mov eax,0x431ecc
call dword 0xc1e8
mov esi,eax
test esi,esi
jz 0x30e8b
lea eax,[ebx+esi]
dec eax
mov esi,eax
test esi,esi
jnz dword 0x30d9f
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x431ebd
lea eax,[ebp-0x14]
mov edx,0x2
call dword 0x3a40
lea eax,[ebp-0x4]
call dword 0x3a1c
ret
jmp dword 0x3384
jmp short 0x30ea0
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret
db 0xff
db 0xff
db 0xff
inc dword [ecx]
add [eax],al
add [eax+eax+0x0],bh
add [ebx+0x56],dl
push edi
push ebp
mov esi,eax
xor ebx,ebx
mov edi,0x468330
mov eax,[esi+0x8]
mov edx,ebx
cmp dl,0x1f
ja 0x30eee
and edx,byte +0x7f
bt [eax+0x64],edx
jnc 0x30efb
mov eax,[edi]
mov ebp,[esi+0x4]
or eax,[ebp+0x60]
mov [ebp+0x60],eax
inc ebx
add edi,byte +0x4
cmp bl,0x16
jnz 0x30edd
mov eax,[esi+0x8]
test byte [eax+0xb8],0x1
jz 0x30f1f
mov ebx,[esi+0x4]
mov eax,[ebx+0x60]
or eax,[dword 0x431f24]
mov [ebx+0x60],eax
pop ebp
pop edi
pop esi
pop ebx
ret
add [eax-0x74ab0000],al
in al,dx
push byte +0x0
push byte +0x0
push byte +0x0
push ebx
push esi
push edi
mov [ebp-0x4],edx
mov esi,eax
xor eax,eax
push ebp
push dword 0x432090
push dword [fs:eax]
mov [fs:eax],esp
mov ebx,[esi+0x8]
mov eax,[esi+0x4]
add eax,byte +0x34
mov edx,[ebx+0x7c]
call dword 0x3a70
mov edx,[ebx+0x74]
mov eax,[esi+0x4]
call dword 0x32f74
lea edx,[ebp-0x8]
mov eax,ebx
call dword 0x31cb8
mov edx,[ebp-0x8]
mov eax,[esi+0x4]
call dword 0x32f94
mov eax,ebx
call dword 0x31d14
mov edi,[esi+0x4]
mov [edi+0x50],eax
lea eax,[edi+0x6c]
mov edx,[ebx+0x78]
call dword 0x3a70
cmp word [ebx+0xaa],byte +0x0
jz 0x30fa7
mov eax,[esi+0x4]
mov [eax+0x7c],esi
mov dword [eax+0x78],0x4320a4
cmp word [ebx+0x9a],byte +0x0
jz 0x30fc4
mov eax,[esi+0x4]
mov [eax+0x84],esi
mov dword [eax+0x80],0x432130

cmp word [ebx+0x92],byte +0x0
jz 0x30fe1
mov eax,[esi+0x4]
mov [eax+0x9c],esi
mov dword [eax+0x98],0x432194

cmp word [ebx+0xa2],byte +0x0
jz 0x30ffe
mov eax,[esi+0x4]
mov [eax+0xac],esi
mov dword [eax+0xa8],0x432210

test byte [ebx+0x65],0x8
jz 0x31017
mov eax,[esi+0x4]
mov [eax+0xa4],esi
mov dword [eax+0xa0],0x4320a0

mov eax,esi
call dword 0x30d54
mov eax,esi
call dword 0x30ed0
mov edx,[ebp-0x4]
mov eax,[esi+0x4]
mov ecx,[eax]
call dword [ecx+0x3c]
mov ebx,eax
test bl,bl
jz 0x31075
lea edx,[ebp-0xc]
mov eax,[esi+0x4]
call dword 0x32ba8
mov edx,[ebp-0xc]
mov eax,[esi+0x8]
add eax,0x80
call dword 0x3a70
mov eax,[esi+0x4]
call dword 0x32cdc
mov edx,eax
mov eax,[esi+0x8]
mov eax,[eax+0x84]
mov ecx,[eax]
call dword [ecx+0x8]
mov eax,[esi+0x4]
mov eax,[eax+0x50]
mov edx,[esi+0x8]
mov [edx+0x6c],eax
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x432097
lea eax,[ebp-0xc]
mov edx,0x2
call dword 0x3a40
ret
jmp dword 0x3384
jmp short 0x31082
mov eax,ebx
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret
mov byte [ecx],0x1
ret
push ebp
mov ebp,esp
add esp,byte -0x8
push ebx
push esi
xor ebx,ebx
mov [ebp-0x8],ebx
mov [ebp-0x4],ecx
mov ebx,eax
xor eax,eax
push ebp
push dword 0x432121
push dword [fs:eax]
mov [fs:eax],esp
mov esi,[ebx+0x8]
lea edx,[ebp-0x8]
mov eax,[ebx+0x4]
call dword 0x32ba8
mov edx,[ebp-0x8]
lea eax,[esi+0x80]
call dword 0x3a70
mov eax,[ebx+0x4]
call dword 0x32cdc
mov edx,eax
mov eax,[esi+0x84]
mov ecx,[eax]
call dword [ecx+0x8]
mov ecx,[ebp-0x4]
mov eax,[ebx+0x8]
mov esi,eax
mov edx,eax
mov eax,[esi+0xac]
call dword [esi+0xa8]
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x432128
lea eax,[ebp-0x8]
call dword 0x3a1c
ret
jmp dword 0x3384
jmp short 0x31118
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
ret
mov eax,eax
push ebp
mov ebp,esp
push byte +0x0
push ebx
push esi
mov ebx,eax
xor eax,eax
push ebp
push dword 0x432188
push dword [fs:eax]
mov [fs:eax],esp
mov esi,[ebx+0x8]
lea edx,[ebp-0x4]
mov eax,[ebx+0x4]
call dword 0x32ba8
mov edx,[ebp-0x4]
lea eax,[esi+0x80]
call dword 0x3a70
mov edx,[ebx+0x8]
mov eax,[esi+0x9c]
call dword [esi+0x98]
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x43218f
lea eax,[ebp-0x4]
call dword 0x3a1c
ret
jmp dword 0x3384
jmp short 0x3117f
pop esi
pop ebx
pop ecx
pop ebp
ret
push ebp
mov ebp,esp
push byte +0x0
push ebx
push esi
mov ebx,eax
xor eax,eax
push ebp
push dword 0x432201
push dword [fs:eax]
mov [fs:eax],esp
mov esi,[ebx+0x8]
lea edx,[ebp-0x4]
mov eax,[ebx+0x4]
call dword 0x32ba8
mov edx,[ebp-0x4]
lea eax,[esi+0x80]
call dword 0x3a70
mov eax,[ebx+0x4]
call dword 0x32cdc
mov edx,eax
mov eax,[esi+0x84]
mov ecx,[eax]
call dword [ecx+0x8]
mov edx,[ebx+0x8]
mov eax,[esi+0x94]
call dword [esi+0x90]
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x432208
lea eax,[ebp-0x4]
call dword 0x3a1c
ret
jmp dword 0x3384
jmp short 0x311f8
pop esi
pop ebx
pop ecx
pop ebp
ret
lea eax,[eax+0x0]
push ebx
mov edx,[eax+0x8]
mov ecx,[eax+0x4]
mov ecx,[ecx+0x50]
mov [edx+0x6c],ecx
mov ebx,edx
mov edx,[eax+0x8]
mov eax,[ebx+0xa4]
call dword [ebx+0xa0]
pop ebx
ret
push ebx
mov ebx,eax
xor ecx,ecx
mov dl,0x1
mov eax,[0x430da4]
call dword 0x3233c
mov [eax+0x74],ebx
mov dword [eax+0x70],0x432250
pop ebx
ret
lea eax,[eax+0x0]
push ebx
add esp,0xfffffefc
mov ebx,eax
lea edx,[esp+0x4]
mov eax,[ebx+0x8]
mov eax,[eax]
call dword 0x2ad0
lea eax,[esp+0x4]
mov edx,0x4322a8
movzx ecx,byte [eax]
inc ecx
call dword 0x24bc
jnz 0x3129f
push esp
mov eax,[ebx+0x4]
mov eax,[eax+0x3c]
push eax
mov eax,[eax]
call dword [eax+0x28]
or dword [esp],0x40000000
mov eax,[esp]
push eax
mov eax,[ebx+0x4]
mov eax,[eax+0x3c]
push eax
mov eax,[eax]
call dword [eax+0x24]
add esp,0x104
pop ebx
ret
add [edx],dl
push esp
dec edi
jo 0x31312
outsb
push eax
imul esp,[ebx+0x74],dword 0x44657275
imul esp,[ecx+0x6c],dword 0x3300676f
leave
mov dl,0x1
mov eax,[0x4311fc]
call dword 0x3233c
ret
nop
push ebp
mov ebp,esp
push ecx
push ebx
push esi
push edi
mov edi,[ebp+0x14]
mov ebx,[ebp+0xc]
mov esi,[ebp+0x8]
xor eax,eax
mov [ebp-0x4],eax
cmp ebx,0x110
jnz 0x31329
mov eax,[0x468328]
mov [eax+0x3c],esi
mov eax,[0x468328]
mov eax,[eax+0x44]
push eax
push byte -0x4
push esi
call dword 0x6308
mov edx,[dword 0x468328]
mov [edx+0x34],eax
push edi
mov eax,[ebp+0x10]
push eax
push ebx
push esi
mov eax,[0x468328]
mov eax,[eax+0x44]
push eax
call dword 0x5e78
xor eax,eax
mov [0x468328],eax
jmp short 0x31344
cmp ebx,byte +0x4e
jnz 0x31344
cmp dword [edi+0x8],0xfffffda7
jnz 0x31344
push byte -0x8
push esi
call dword 0x60f8
call dword 0x305e0
mov eax,[ebp-0x4]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
ret 0x10
nop
push ebx
push esi
test dl,dl
jz 0x3135e
add esp,byte -0x10
call dword 0x2f14
mov ebx,edx
mov esi,eax
xor edx,edx
mov eax,esi
call dword 0x30900
mov dl,0x1
mov eax,[0x412efc]
call dword 0x2bc0
mov [esi+0x60],eax
mov eax,[0x4323cc]
mov [esi+0x64],eax
movzx eax,byte [dword 0x4323d0]
mov [esi+0xb8],al
mov dl,0x1
mov eax,[0x412efc]
call dword 0x2bc0
mov [esi+0x84],eax
mov dword [esi+0x6c],0x1
mov byte [esi+0x88],0x0
mov eax,esi
test bl,bl
jz 0x313c4
call dword 0x2f6c
pop dword [dword fs:0x0]
add esp,byte +0xc
mov eax,esi
pop esi
pop ebx
ret
add [eax],al
add [eax+eax],al
or [eax],al
add [eax],al
add [eax],al
push ebx
push esi
call dword 0x2fbc
mov ebx,edx
mov esi,eax
mov eax,[esi+0x84]
call dword 0x2bf0
mov eax,[esi+0x60]
call dword 0x2bf0
mov edx,ebx
and dl,0xfc
mov eax,esi
call dword 0x30948
test bl,bl
jng 0x31409
mov eax,esi
call dword 0x2f64
pop esi
pop ebx
ret
push ebx
push esi
push edi
mov edi,eax
mov eax,edi
call dword 0x31b9c
mov eax,edi
mov si,0xffed
call dword 0x2dec
mov ebx,eax
mov eax,[edi+0x84]
mov edx,[eax]
call dword [edx+0x44]
mov eax,ebx
pop edi
pop esi
pop ebx
ret
mov eax,eax
push ebx
push esi
push edi
push ecx
mov ebx,edx
mov edi,eax
xor eax,eax
mov [ebx+0xc],eax
mov eax,[ebx]
cmp eax,0x110
jnz 0x31458
test byte [edi+0x66],0x1
jz dword 0x3152e
cmp eax,byte +0x4e
jnz dword 0x31525
mov esi,[ebx+0x8]
mov eax,[esi+0x8]
add eax,0x260
cmp eax,byte +0x7
ja dword 0x31525
jmp dword [eax*4+0x43247c]
add ah,[dword 0x24e70043]
inc ebx
add [esp+0x25250043],bl
inc ebx
add [dword 0xda004325],ah
and al,0x43
add ch,cl
and al,0x43
add al,al
and al,0x43
add [ebx-0x3874f3aa],cl
call dword 0x3140c
test al,al
jnz 0x31525
mov eax,0x1
mov [ebx+0xc],eax
push eax
push byte +0x0
mov eax,[edi+0x3c]
push eax
call dword 0x6308
jmp short 0x3152e
mov eax,edi
mov si,0xffee
call dword 0x2dec
jmp short 0x31525
mov eax,edi
mov si,0xffec
call dword 0x2dec
jmp short 0x31525
mov eax,edi
mov si,0xffeb
call dword 0x2dec
jmp short 0x31525
mov eax,[esi+0xc]
mov eax,[eax+0x18]
cmp eax,[edi+0x70]
jz 0x31525
mov [edi+0x70],eax
mov eax,edi
mov si,0xffea
call dword 0x2dec
jmp short 0x31525
cmp dword [ebx+0x8],byte +0x0
jz 0x31525
mov byte [esp],0x1
mov ecx,esp
mov eax,[ebx+0x8]
mov edx,eax
mov eax,edi
mov si,0xffe9
call dword 0x2dec
movzx eax,byte [esp]
mov [ebx+0xc],eax
mov edx,ebx
mov eax,edi
call dword 0x30a78
pop edx
pop edi
pop esi
pop ebx
ret
nop
push ebx
push ecx
mov byte [esp],0x1
cmp word [eax+0xaa],byte +0x0
jz 0x31556
mov ecx,esp
mov ebx,eax
mov edx,eax
mov eax,[ebx+0xac]
call dword [ebx+0xa8]
movzx eax,byte [esp]
pop edx
pop ebx
ret
lea eax,[eax+0x0]
push ebx
cmp word [eax+0x92],byte +0x0
jz 0x3157b
mov ebx,eax
mov edx,eax
mov eax,[ebx+0x94]
call dword [ebx+0x90]
pop ebx
ret
lea eax,[eax+0x0]
push ebx
cmp word [eax+0x9a],byte +0x0
jz 0x3159b
mov ebx,eax
mov edx,eax
mov eax,[ebx+0x9c]
call dword [ebx+0x98]
pop ebx
ret
lea eax,[eax+0x0]
push ebx
cmp word [eax+0xa2],byte +0x0
jz 0x315bb
mov ebx,eax
mov edx,eax
mov eax,[ebx+0xa4]
call dword [ebx+0xa0]
pop ebx
ret
lea eax,[eax+0x0]
push ebp
mov ebp,esp
push byte +0x0
xor eax,eax
push ebp
push dword 0x4325f2
push dword [fs:eax]
mov [fs:eax],esp
lea eax,[ebp-0x4]
xchg eax,edx
call dword 0x18778
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x4325f9
lea eax,[ebp-0x4]
call dword 0x3a1c
ret
jmp dword 0x3384
jmp short 0x315e9
pop ecx
pop ebp
ret
push ebx
push esi
mov esi,edx
mov ebx,eax
mov edx,esi
mov eax,ebx
call dword 0x1a92c
push ebx
push dword 0x4325c0
push byte +0x0
push byte +0x0
xor ecx,ecx
mov edx,0x432630
mov eax,esi
mov ebx,[eax]
call dword [ebx+0x4]
pop esi
pop ebx
ret
add [eax],al
db 0xff
db 0xff
db 0xff
dec dword [dword 0x46000000]
imul ebp,[ebp+0x45],dword 0x53746964
jz 0x316b4
insb
add [gs:eax],al
add [ebx+0x56],dl
mov ebx,edx
mov esi,eax
mov eax,ebx
call dword 0x3a1c
test esi,esi
jz 0x31686
mov eax,ebx
mov ecx,0x432694
mov edx,esi
call dword 0x3d34
mov eax,[ebx]
call dword 0x3eac
mov dl,0x7c
call dword 0xc388
mov ebx,eax
test ebx,ebx
jz 0x31686
mov byte [ebx],0x0
inc ebx
mov dl,0x7c
mov eax,ebx
call dword 0xc388
mov ebx,eax
test ebx,ebx
jnz 0x31673
pop esi
pop ebx
ret
add [eax],al
add bh,bh
db 0xff
db 0xff
inc dword [ecx]
add [eax],al
add [eax],al
add [eax],al
add [ebp-0x75],dl
in al,dx
add esp,byte -0x74
push ebx
push esi
xor ebx,ebx
mov [ebp-0x4],ebx
mov [ebp-0x8],ebx
mov [ebp-0xc],ebx
mov [ebp-0x14],ecx
mov [ebp-0x10],edx
mov ebx,eax
xor eax,eax
push ebp
push dword 0x432a22
push dword [fs:eax]
mov [fs:eax],esp
mov eax,[0x468bd4]
cmp dword [eax],byte +0x6
jl 0x31745
cmp byte [dword 0x468324],0x0
jz 0x31745
cmp dword [ebx+0x48],byte +0x0
jnz 0x31745
mov eax,0x42dddc
cmp eax,[ebp-0x10]
jnz 0x316f7
mov ecx,ebx
mov dl,0x1
mov eax,[0x431c0c]
call dword 0x30cdc
mov [ebp-0x1c],eax
jmp short 0x31708
mov ecx,ebx
mov dl,0x1
mov eax,[0x431c74]
call dword 0x30cdc
mov [ebp-0x1c],eax
xor eax,eax
push ebp
push dword 0x43273e
push dword [fs:eax]
mov [fs:eax],esp
mov edx,[ebp-0x14]
mov eax,[ebp-0x1c]
call dword 0x30f28
neg al
sbb eax,eax
mov [ebp-0x18],eax
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x432a07
mov eax,[ebp-0x1c]
call dword 0x2bf0
ret
jmp dword 0x3384
jmp short 0x31735
mov eax,[ebx+0x84]
mov edx,[eax]
call dword [edx+0x44]
lea eax,[ebp-0x74]
xor ecx,ecx
mov edx,0x58
call dword 0x252c
mov eax,[0x468bd4]
cmp dword [eax],byte +0x5
jl 0x31773
mov eax,[0x468ea4]
cmp dword [eax],byte +0x2
jz 0x31791
mov eax,[0x468ea4]
cmp dword [eax],byte +0x1
jnz 0x3179a
mov eax,[0x468bd4]
cmp dword [eax],byte +0x4
jl 0x3179a
mov eax,[0x468d80]
cmp dword [eax],byte +0x5a
jl 0x3179a
mov dword [ebp-0x74],0x58
jmp short 0x317a1
mov dword [ebp-0x74],0x4c
mov eax,[0x46b7f4]
mov [ebp-0x6c],eax
lea edx,[ebp-0x4]
mov eax,[ebx+0x68]
call dword 0x31640
mov eax,[ebp-0x4]
call dword 0x3eac
mov [ebp-0x68],eax
mov eax,[ebx+0x6c]
mov [ebp-0x5c],eax
mov [ebx+0x70],eax
test byte [ebx+0x64],0x40
jz 0x317d7
mov dword [ebp-0x54],0xffef
jmp short 0x317de
mov dword [ebp-0x54],0x104
mov edx,[ebp-0x54]
add edx,byte +0x2
lea eax,[ebp-0x8]
call dword 0x413c
mov eax,[ebp-0x8]
call dword 0x3eac
mov esi,eax
mov [ebp-0x58],esi
mov edx,[ebp-0x54]
add edx,byte +0x2
mov eax,esi
xor ecx,ecx
call dword 0x252c
mov eax,[ebx+0x80]
call dword 0x3eac
mov edx,eax
mov ecx,[ebp-0x54]
mov eax,[ebp-0x58]
call dword 0x8458
cmp dword [ebx+0x74],byte +0x0
jnz 0x31839
cmp byte [dword 0x468320],0x0
jz 0x31839
mov eax,0x432a34
mov [ebp-0x48],eax
jmp short 0x31844
mov eax,[ebx+0x74]
call dword 0x3eac
mov [ebp-0x48],eax
mov eax,[ebx+0x78]
call dword 0x3eac
mov [ebp-0x44],eax
mov dword [ebp-0x40],0x20
xor eax,eax
mov [ebp-0x20],eax
xor eax,eax
mov esi,0x468388
mov edx,eax
cmp dl,0x1f
ja 0x31870
and edx,byte +0x7f
bt [ebx+0x64],edx
jnc 0x31877
mov edx,[esi]
or [ebp-0x40],edx
inc eax
add esi,byte +0x4
cmp al,0x16
jnz 0x31862
mov eax,[0x468c68]
cmp byte [eax],0x0
jz 0x318eb
xor dword [ebp-0x40],0x80000
mov eax,[0x468bd4]
cmp dword [eax],byte +0x5
jl 0x318a4
mov eax,[0x468ea4]
cmp dword [eax],byte +0x2
jz 0x318c2
mov eax,[0x468ea4]
cmp dword [eax],byte +0x1
jnz 0x318f2
mov eax,[0x468bd4]
cmp dword [eax],byte +0x4
jl 0x318f2
mov eax,[0x468d80]
cmp dword [eax],byte +0x5a
jl 0x318f2
xor eax,eax
mov esi,0x4683e0
mov edx,eax
cmp dl,0x7
ja 0x318da
and edx,byte +0x7f
bt [ebx+0xb8],edx
jnc 0x318e1
mov edx,[esi]
or [ebp-0x20],edx
inc eax
add esi,byte +0x4
cmp al,0x1
jnz 0x318c9
jmp short 0x318f2
and dword [ebp-0x40],0xfff7ffff
lea eax,[ebp-0xc]
mov edx,[ebx+0x7c]
call dword 0x3ab4
cmp dword [ebp-0xc],byte +0x0
jnz 0x31929
test byte [ebp-0x3e],0x8
jnz 0x31929
lea edx,[ebp-0xc]
mov eax,[ebx+0x80]
call dword 0x82b8
lea eax,[ebp-0xc]
mov ecx,0x1
mov edx,0x1
call dword 0x3f54
cmp dword [ebp-0xc],byte +0x0
jz 0x3193a
mov eax,[ebp-0xc]
call dword 0x3eac
mov [ebp-0x38],eax
test byte [ebx+0x66],0x1
jnz 0x3194a
mov eax,[0x468c68]
cmp byte [eax],0x0
jnz 0x31953
mov dword [ebp-0x30],0x431694
jmp short 0x3195a
mov dword [ebp-0x30],0x4322cc
mov eax,[ebx+0x48]
test eax,eax
jz 0x31972
or dword [ebp-0x40],byte +0x40
mov [ebp-0x2c],eax
mov eax,[ebx+0x4c]
test eax,eax
jz 0x31972
mov [ebp-0x6c],eax
mov eax,[0x468d34]
mov eax,[eax]
cmp byte [eax+0xd4],0x0
jz 0x319b3
xor ecx,ecx
mov dl,0x1
mov eax,[0x4316fc]
call dword 0x43100
mov esi,eax
mov [ebx+0x40],esi
mov eax,esi
mov [eax+0x250],ebx
mov edx,[ebp-0x14]
mov [eax+0x254],edx
mov eax,[ebx+0x40]
call dword 0x4831c
mov [ebp-0x70],eax
jmp short 0x319bb
call dword 0x305a8
mov [ebp-0x70],eax
lea ecx,[ebp-0x74]
mov edx,[ebp-0x10]
mov eax,ebx
mov esi,[eax]
call dword [esi+0x38]
mov [ebp-0x18],eax
cmp dword [ebp-0x18],byte +0x0
jz 0x31a07
lea edx,[ebp-0x74]
mov eax,ebx
call dword 0x31b9c
test byte [ebp-0x3f],0x4
jz 0x319ea
or dword [ebx+0x64],0x80
jmp short 0x319f1
and dword [ebx+0x64],0xffffff7f
test byte [ebp-0x40],0x1
jz 0x319fd
or dword [ebx+0x64],byte +0x1
jmp short 0x31a01
and dword [ebx+0x64],byte -0x2
mov eax,[ebp-0x5c]
mov [ebx+0x6c],eax
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x432a29
lea eax,[ebp-0xc]
mov edx,0x3
call dword 0x3a40
ret
jmp dword 0x3384
jmp short 0x31a14
mov eax,[ebp-0x18]
pop esi
pop ebx
mov esp,ebp
pop ebp
ret
add [eax],al
add [cs:eax],al
add [ebp-0x75],dl
in al,dx
push ebx
push esi
push edi
mov edi,edx
mov esi,eax
mov eax,[ebp+0x8]
movzx edx,byte [eax-0x1]
mov eax,esi
call dword 0xc388
mov ebx,eax
test ebx,ebx
jnz 0x31a6a
mov eax,edi
mov edx,esi
call dword 0x3c14
mov eax,esi
call dword 0x83fc
mov ebx,eax
jmp short 0x31a78
mov ecx,ebx
sub ecx,esi
mov eax,edi
mov edx,esi
call dword 0x3b0c
inc ebx
mov eax,ebx
pop edi
pop esi
pop ebx
pop ebp
ret
nop
push ebp
mov ebp,esp
push byte +0x0
push byte +0x0
push ebx
mov ebx,eax
xor eax,eax
push ebp
push dword 0x432b84
push dword [fs:eax]
mov [fs:eax],esp
mov eax,[ebp+0x8]
push eax
lea edx,[ebp-0x4]
mov eax,ebx
call dword 0x31a38
pop ecx
mov ebx,eax
mov eax,[ebp+0x8]
push eax
lea edx,[ebp-0x8]
mov eax,ebx
call dword 0x31a38
pop ecx
mov ebx,eax
cmp dword [ebp-0x8],byte +0x0
jnz 0x31ad9
mov eax,[ebp+0x8]
mov eax,[eax-0x8]
mov eax,[eax+0x84]
mov edx,[ebp-0x4]
mov ecx,[eax]
call dword [ecx+0x38]
jmp dword 0x31b69
mov eax,[ebp-0x4]
call dword 0x81c4
cmp byte [eax],0x5c
jz 0x31af3
lea eax,[ebp-0x4]
mov edx,0x432b98
call dword 0x3ce8
mov eax,[ebp-0x8]
cmp byte [eax],0x5c
jz 0x31b3e
mov eax,[ebp-0x8]
test eax,eax
jz 0x31b07
sub eax,byte +0x4
mov eax,[eax]
cmp eax,byte +0x3
jg 0x31b10
mov al,0x1
jmp short 0x31b1a
mov eax,[ebp-0x8]
cmp byte [eax+0x1],0x3a
setnz al
test al,al
jz 0x31b22
mov al,0x1
jmp short 0x31b2c
mov eax,[ebp-0x8]
cmp byte [eax+0x2],0x5c
setnz al
test al,al
jz 0x31b3e
lea eax,[ebp-0x8]
mov ecx,[ebp-0x8]
mov edx,[ebp-0x4]
call dword 0x3d34
mov eax,[ebp+0x8]
mov eax,[eax-0x8]
mov eax,[eax+0x84]
mov edx,[ebp-0x8]
mov ecx,[eax]
call dword [ecx+0x38]
mov eax,[ebp+0x8]
push eax
lea edx,[ebp-0x8]
mov eax,ebx
call dword 0x31a38
pop ecx
mov ebx,eax
cmp dword [ebp-0x8],byte +0x0
jnz 0x31af3
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x432b8b
lea eax,[ebp-0x8]
mov edx,0x2
call dword 0x3a40
ret
jmp dword 0x3384
jmp short 0x31b76
pop ebx
pop ecx
pop ecx
pop ebp
ret
db 0xff
db 0xff
db 0xff
inc dword [ecx]
add [eax],al
add [eax+eax+0x0],bl
add [ebp-0x75],dl
in al,dx
add esp,byte -0xc
push ebx
xor ecx,ecx
mov [ebp-0xc],ecx
mov [ebp-0x8],eax
xor eax,eax
push ebp
push dword 0x432c55
push dword [fs:eax]
mov [fs:eax],esp
mov byte [ebp-0x1],0x0
mov eax,[ebp-0x8]
test byte [eax+0x64],0x40
jz 0x31bdd
mov eax,[ebp-0x8]
test byte [eax+0x66],0x1
jnz 0x31bd9
mov eax,[0x468c68]
cmp byte [eax],0x0
jnz 0x31bdd
mov byte [ebp-0x1],0x20
mov eax,[ebp-0x8]
test byte [eax+0x64],0x40
jz 0x31c15
push ebp
mov eax,[edx+0x1c]
call dword 0x31a80
pop ecx
lea ecx,[ebp-0xc]
mov eax,[ebp-0x8]
mov eax,[eax+0x84]
xor edx,edx
mov ebx,[eax]
call dword [ebx+0xc]
mov edx,[ebp-0xc]
mov eax,[ebp-0x8]
add eax,0x80
call dword 0x3a70
jmp short 0x31c3f
push ebp
mov eax,[edx+0x1c]
mov edx,[ebp-0x8]
add edx,0x80
call dword 0x31a38
pop ecx
mov eax,[ebp-0x8]
mov edx,[eax+0x80]
mov eax,[ebp-0x8]
mov eax,[eax+0x84]
mov ecx,[eax]
call dword [ecx+0x38]
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x432c5c
lea eax,[ebp-0xc]
call dword 0x3a1c
ret
jmp dword 0x3384
jmp short 0x31c4c
pop ebx
mov esp,ebp
pop ebp
ret
lea eax,[eax+0x0]
push ebx
push esi
push edi
mov esi,edx
mov ebx,eax
mov edi,[ebx+0x3c]
test edi,edi
jz 0x31ca3
test byte [ebx+0x66],0x1
jnz 0x31c9a
push esi
push dword 0x45f
push edi
call dword 0x5ff8
push eax
call dword 0x6110
push byte +0x2
push esi
mov eax,[ebx+0x3c]
push eax
push byte +0x0
call dword 0x61e0
jmp short 0x31cb1
push esi
push edi
call dword 0x5fc0
jmp short 0x31cb1
push byte +0x0
push esi
xor ecx,ecx
xor edx,edx
xor eax,eax
call dword 0x12a2c
pop edi
pop esi
pop ebx
ret
lea eax,[eax+0x0]
push ebx
push esi
add esp,0xfffffef8
mov esi,edx
mov ebx,eax
mov eax,[0x468c68]
cmp byte [eax],0x0
jz 0x31cfb
cmp dword [ebx+0x3c],byte +0x0
jz 0x31cfb
mov eax,esp
push eax
push dword 0x105
push dword 0x465
mov eax,[ebx+0x3c]
push eax
call dword 0x6090
push eax
call dword 0x6278
mov edx,esi
mov eax,esp
call dword 0x8634
jmp short 0x31d08
mov eax,esi
mov edx,[ebx+0x80]
call dword 0x3a70
add esp,0x108
pop esi
pop ebx
ret
lea eax,[eax+0x0]
cmp dword [eax+0x3c],byte +0x0
jz 0x31d1e
mov eax,[eax+0x70]
ret
mov eax,[eax+0x6c]
ret
mov eax,eax
push ebx
push esi
push edi
mov esi,edx
mov edi,eax
mov eax,esi
test eax,eax
jz 0x31d36
sub eax,byte +0x4
mov eax,[eax]
mov ebx,eax
cmp ebx,byte +0x1
jng 0x31d5e
mov edx,ebx
mov eax,esi
call dword 0xc0f4
test al,al
jz 0x31d5e
mov ecx,ebx
dec ecx
mov edx,esi
mov eax,0x432d7c
call dword 0xc13c
test al,al
jnz 0x31d5e
dec ebx
lea eax,[edi+0x74]
push eax
mov ecx,ebx
mov edx,0x1
mov eax,esi
call dword 0x3f14
pop edi
pop esi
pop ebx
ret
db 0xff
db 0xff
db 0xff
inc dword [ecx]
add [eax],al
add [edx],bh
add [eax],al
add [ebx+0x56],dl
mov esi,edx
mov ebx,eax
mov edx,0x42dddc
mov ecx,esi
mov eax,ebx
call dword 0x31698
cmp eax,byte +0x1
sbb eax,eax
inc eax
pop esi
pop ebx
ret
lea eax,[eax+0x0]
push ebx
cmp word [eax+0xb2],byte +0x0
jz 0x31db9
mov ebx,eax
mov eax,[ebx+0xb4]
call dword [ebx+0xb0]
pop ebx
ret
nop
push ebx
push esi
test dl,dl
jz 0x31dca
add esp,byte -0x10
call dword 0x2f14
mov ebx,edx
mov esi,eax
xor edx,edx
mov eax,esi
call dword 0x147dc
xor eax,eax
mov [esi+0x10],eax
xor eax,eax
mov [esi+0x18],eax
mov eax,esi
test bl,bl
jz 0x31df6
call dword 0x2f6c
pop dword [dword fs:0x0]
add esp,byte +0xc
mov eax,esi
pop esi
pop ebx
ret
nop
push ebx
push esi
call dword 0x2fbc
mov ebx,edx
mov esi,eax
mov eax,[esi+0x10]
test eax,eax
jz 0x31e14
push eax
call dword 0x654c
mov eax,[esi+0x18]
test eax,eax
jz 0x31e21
push eax
call dword 0x654c
mov edx,ebx
and dl,0xfc
mov eax,esi
call dword 0x14814
test bl,bl
jng 0x31e38
mov eax,esi
call dword 0x2f64
pop esi
pop ebx
ret
nop
push ebp
mov ebp,esp
push byte +0x0
push ebx
push esi
push edi
mov ebx,eax
xor eax,eax
push ebp
push dword 0x432eb0
push dword [fs:eax]
mov [fs:eax],esp
mov eax,[ebx+0x10]
test eax,eax
jz 0x31e61
push eax
call dword 0x654c
mov eax,[ebx+0xc]
test eax,eax
jz 0x31e6d
sub eax,byte +0x4
mov eax,[eax]
mov esi,eax
mov eax,esi
add eax,eax
add eax,byte +0x2
push eax
call dword 0x6544
mov edi,eax
mov [ebx+0x10],edi
lea eax,[ebp-0x4]
mov edx,[ebx+0xc]
call dword 0x4338
mov edx,[ebp-0x4]
mov ecx,esi
mov eax,edi
call dword 0x2ce0c
mov ebx,eax
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x432eb7
lea eax,[ebp-0x4]
call dword 0x41d0
ret
jmp dword 0x3384
jmp short 0x31ea7
mov eax,ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
ret
nop
push ebx
push esi
mov esi,edx
mov ebx,eax
cmp dword [ebx+0xc],byte +0x0
jz 0x31ed9
mov eax,esi
mov edx,[ebx+0xc]
call dword 0x3a70
pop esi
pop ebx
ret
mov edx,esi
mov eax,ebx
call dword 0x14880
pop esi
pop ebx
ret
lea eax,[eax+0x0]
push ebp
mov ebp,esp
push byte +0x0
push ebx
push esi
push edi
mov ebx,eax
xor eax,eax
push ebp
push dword 0x432f5c
push dword [fs:eax]
mov [fs:eax],esp
mov eax,[ebx+0x18]
test eax,eax
jz 0x31f0d
push eax
call dword 0x654c
mov eax,[ebx+0x14]
test eax,eax
jz 0x31f19
sub eax,byte +0x4
mov eax,[eax]
mov esi,eax
mov eax,esi
add eax,eax
add eax,byte +0x2
push eax
call dword 0x6544
mov edi,eax
mov [ebx+0x18],edi
lea eax,[ebp-0x4]
mov edx,[ebx+0x14]
call dword 0x4338
mov edx,[ebp-0x4]
mov ecx,esi
mov eax,edi
call dword 0x2ce0c
mov ebx,eax
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x432f63
lea eax,[ebp-0x4]
call dword 0x41d0
ret
jmp dword 0x3384
jmp short 0x31f53
mov eax,ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
ret
nop
push ebx
mov ebx,eax
mov eax,ebx
call dword 0x14a58
pop ebx
ret
push ebx
push esi
push edi
push ebp
mov ebp,edx
mov esi,eax
mov eax,esi
call dword 0x14bc8
push eax
mov eax,ebp
mov ecx,0x1
mov edx,[dword 0x428d7c]
call dword 0x4b8c
add esp,byte +0x4
mov eax,esi
call dword 0x14bc8
mov edi,eax
dec edi
test edi,edi
jl 0x31fdb
inc edi
xor ebx,ebx
mov edx,ebx
mov eax,esi
call dword 0x31fe0
call dword 0x31e3c
mov edx,[ebp+0x0]
mov [edx+ebx*8],eax
mov edx,ebx
mov eax,esi
call dword 0x31fe0
call dword 0x31ee8
mov edx,[ebp+0x0]
mov [edx+ebx*8+0x4],eax
inc ebx
dec edi
jnz 0x31fae
pop ebp
pop edi
pop esi
pop ebx
ret
push ebx
push esi
mov esi,edx
mov ebx,eax
mov edx,esi
mov eax,ebx
call dword 0x14bd0
pop esi
pop ebx
ret
mov eax,eax
push ebx
push esi
push edi
test dl,dl
jz 0x32003
add esp,byte -0x10
call dword 0x2f14
mov esi,ecx
mov ebx,edx
mov edi,eax
xor edx,edx
mov eax,edi
call dword 0x2bc0
mov dword [edi+0x4],0xffffffff
mov [edi+0x8],esi
mov eax,edi
test bl,bl
jz 0x32031
call dword 0x2f6c
pop dword [dword fs:0x0]
add esp,byte +0xc
mov eax,edi
pop edi
pop esi
pop ebx
ret
nop
mov edx,[eax+0x4]
mov eax,[eax+0x8]
call dword 0x32098
ret
push ebx
mov ebx,eax
mov eax,[ebx+0x8]
call dword 0x14bc8
dec eax
cmp eax,[ebx+0x4]
setg al
test al,al
jz 0x3205d
inc dword [ebx+0x4]
pop ebx
ret
nop
push ebx
push esi
mov esi,edx
mov ebx,eax
cmp dword [ebx+0xc],byte +0x0
jz 0x32079
mov eax,esi
mov edx,[ebx+0xc]
call dword 0x3a70
pop esi
pop ebx
ret
mov edx,esi
mov eax,ebx
call dword 0x14880
pop esi
pop ebx
ret
lea eax,[eax+0x0]
mov ecx,eax
mov dl,0x1
mov eax,[0x430a1c]
call dword 0x31ff4
ret
nop
push ebx
push esi
mov esi,edx
mov ebx,eax
mov edx,esi
mov eax,ebx
call dword 0x14bd0
pop esi
pop ebx
ret
mov eax,eax
int3
add dword [esp+0x4],byte -0x14
jmp dword 0x321e4
add dword [esp+0x4],byte -0x14
jmp dword 0x32238
add dword [esp+0x4],byte -0x14
jmp dword 0x3220c
add dword [esp+0x4],byte -0x14
jmp dword 0x3229c
add dword [esp+0x4],byte -0x14
jmp dword 0x322dc
add dword [esp+0x4],byte -0x14
jmp dword 0x32310
add dword [esp+0x4],byte -0x14
jmp dword 0x32268
add dword [esp+0x4],byte -0x14
jmp dword 0x531c
add dword [esp+0x4],byte -0x14
jmp dword 0x5344
add dword [esp+0x4],byte -0x14
jmp dword 0x5358
int3
int3
rep xor [ebx+0x0],al
std
xor [ebx+0x0],al
pop es
xor [ebx+0x0],eax
lodsd
xor [ebx+0x0],al
mov bh,0x30
inc ebx
add cl,al
xor [ebx+0x0],al
retf
xor [ebx+0x0],al
aad 0x30
inc ebx
add bh,bl
xor [ebx+0x0],al
jmp dword 0x103646c
add [eax],al
add bl,bl
adc [dword 0x2b7d7f97],dh
inc ebp
mov [ebp+0x74],esi
test al,0x58
sub bl,dl
push esp
adc esi,[ecx]
inc ebx
add [eax+eax],dl
add [eax],al
add [eax],al
add [eax],al
nop
test al,0x31
inc ebx
add [ebx],bh
xor [ebx+0x0],eax
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
test al,0x31
inc ebx
add [eax],bl
add [eax],al
add [ecx+edx+0x3e380040],ah
inc eax
add al,dh
bound eax,[eax+0x0]
cld
bound eax,[eax+0x0]
dec esp
ds inc eax
add [eax+0x3e],al
inc eax
add [ebx],cl
inc eax
add [ebx+edi+0x3be00040],ah
inc eax
add [ecx],dl
push esp
inc esi
imul ebp,[ebp+0x44],dword 0x6f6c6169
inc ebp
jna 0x3221c
outsb
jz 0x3222d
mov eax,eax
test dl,dl
jz 0x321c8
add esp,byte -0x10
call dword 0x2f14
mov [eax+0xc],ecx
mov byte [eax+0x10],0x1
test dl,dl
jz 0x321e2
call dword 0x2f6c
pop dword [dword fs:0x0]
add esp,byte +0xc
ret
nop
push ebp
mov ebp,esp
push esi
mov eax,[ebp+0x8]
mov esi,[eax+0xc]
cmp word [esi+0x7a],byte +0x0
jz 0x32202
mov eax,esi
mov si,0xffe5
call dword 0x2dec
jmp short 0x32207
mov eax,0x80004001
pop esi
pop ebp
ret 0x8
push ebp
mov ebp,esp
push esi
mov eax,[ebp+0x8]
mov esi,[eax+0xc]
cmp word [esi+0x82],byte +0x0
jz 0x3222d
mov eax,esi
mov si,0xffe4
call dword 0x2dec
jmp short 0x32232
mov eax,0x80004001
pop esi
pop ebp
ret 0x8
nop
push ebp
mov ebp,esp
push esi
mov eax,[ebp+0x8]
mov esi,[eax+0xc]
cmp word [esi+0x8a],byte +0x0
jz 0x3225c
mov edx,[ebp+0x10]
mov eax,esi
mov si,0xffe3
call dword 0x2dec
jmp short 0x32261
mov eax,0x80004001
pop esi
pop ebp
ret 0xc
mov eax,eax
push ebp
mov ebp,esp
push esi
mov eax,[ebp+0x8]
mov esi,[eax+0xc]
cmp word [esi+0x92],byte +0x0
jz 0x3228f
mov ecx,[ebp+0x14]
mov edx,[ebp+0x10]
mov eax,esi
mov si,0xffe2
call dword 0x2dec
jmp short 0x32294
mov eax,0x80004001
pop esi
pop ebp
ret 0x10
lea eax,[eax+0x0]
push ebp
mov ebp,esp
push ebx
push esi
mov ebx,[ebp+0x8]
cmp byte [ebx+0x10],0x0
jz 0x322b6
mov eax,[ebx+0xc]
call dword 0x32dd8
mov byte [ebx+0x10],0x0
mov esi,[ebx+0xc]
cmp word [esi+0x9a],byte +0x0
jz 0x322d0
mov eax,esi
mov si,0xffe1
call dword 0x2dec
jmp short 0x322d5
mov eax,0x80004001
pop esi
pop ebx
pop ebp
ret 0x8
nop
push ebp
mov ebp,esp
push esi
mov eax,[ebp+0x8]
mov esi,[eax+0xc]
cmp word [esi+0xa2],byte +0x0
jz 0x32303
mov ecx,[ebp+0x14]
mov edx,[ebp+0x10]
mov eax,esi
mov si,0xffe0
call dword 0x2dec
jmp short 0x32308
mov eax,0x80004001
pop esi
pop ebp
ret 0x10
lea eax,[eax+0x0]
push ebp
mov ebp,esp
push ebx
push esi
mov ebx,[ebp+0x8]
cmp byte [ebx+0x10],0x0
jz 0x3232a
mov eax,[ebx+0xc]
call dword 0x32dd8
mov byte [ebx+0x10],0x0
mov eax,[ebx+0xc]
mov si,0xffdf
call dword 0x2dec
pop esi
pop ebx
pop ebp
ret 0x8
push ebx
push esi
test dl,dl
jz 0x3234a
add esp,byte -0x10
call dword 0x2f14
mov ebx,edx
mov esi,eax
xor edx,edx
mov eax,esi
call dword 0x1a59c
mov dl,0x1
mov eax,[0x412efc]
call dword 0x2bc0
mov [esi+0x4c],eax
mov dword [esi+0x50],0x1
mov ecx,[dword 0x43078c]
mov dl,0x1
mov eax,[0x430890]
call dword 0x149c0
mov [esi+0x54],eax
xor eax,eax
mov [esi+0x58],eax
mov eax,[0x4333d0]
mov [esi+0x60],eax
mov ecx,[dword 0x43093c]
mov dl,0x1
mov eax,[0x430a88]
call dword 0x149c0
mov [esi+0x40],eax
lea eax,[esi+0x64]
call dword 0x5270
lea eax,[esi+0x68]
call dword 0x5270
mov eax,esi
test bl,bl
jz 0x323c9
call dword 0x2f6c
pop dword [dword fs:0x0]
add esp,byte +0xc
mov eax,esi
pop esi
pop ebx
ret
add [eax],al
add [eax],al
add [eax],al
push ebx
push esi
call dword 0x2fbc
mov ebx,edx
mov esi,eax
mov eax,[esi+0x4c]
call dword 0x2bf0
mov eax,[esi+0x54]
call dword 0x2bf0
mov eax,[esi+0x40]
call dword 0x2bf0
lea eax,[esi+0x64]
call dword 0x5270
lea eax,[esi+0x68]
call dword 0x5270
mov edx,ebx
and dl,0xfc
mov eax,esi
call dword 0x1a5e8
test bl,bl
jng 0x3241e
mov eax,esi
call dword 0x2f64
pop esi
pop ebx
ret
lea eax,[eax+0x0]
push ebx
cmp word [eax+0x72],byte +0x0
jz 0x32436
mov ebx,eax
mov edx,eax
mov eax,[ebx+0x74]
call dword [ebx+0x70]
pop ebx
ret
push ebx
push ecx
mov byte [esp],0x1
cmp word [eax+0x7a],byte +0x0
jz 0x32451
mov ecx,esp
mov ebx,eax
mov edx,eax
mov eax,[ebx+0x7c]
call dword [ebx+0x78]
movzx eax,byte [esp]
pop edx
pop ebx
ret
push ebx
cmp word [eax+0x82],byte +0x0
jz 0x32473
mov ebx,eax
mov edx,eax
mov eax,[ebx+0x84]
call dword [ebx+0x80]
pop ebx
ret
lea eax,[eax+0x0]
push ebx
push ecx
mov byte [esp],0x1
cmp word [eax+0x8a],byte +0x0
jz 0x3249a
mov ecx,esp
mov ebx,eax
mov edx,eax
mov eax,[ebx+0x8c]
call dword [ebx+0x88]
movzx eax,byte [esp]
pop edx
pop ebx
ret
lea eax,[eax+0x0]
push ebx
cmp word [eax+0x92],byte +0x0
jz 0x324c1
mov ecx,edx
mov ebx,eax
mov edx,eax
mov eax,[ebx+0x94]
call dword [ebx+0x90]
pop ebx
ret
nop
push ebx
cmp word [eax+0x9a],byte +0x0
jz 0x324df
mov ebx,eax
mov edx,eax
mov eax,[ebx+0x9c]
call dword [ebx+0x98]
pop ebx
ret
lea eax,[eax+0x0]
push ebx
cmp word [eax+0xa2],byte +0x0
jz 0x32501
mov ecx,edx
mov ebx,eax
mov edx,eax
mov eax,[ebx+0xa4]
call dword [ebx+0xa0]
pop ebx
ret
nop
push ebx
cmp word [eax+0xaa],byte +0x0
jz 0x3251f
mov ebx,eax
mov edx,eax
mov eax,[ebx+0xac]
call dword [ebx+0xa8]
pop ebx
ret
lea eax,[eax+0x0]
push esi
push edi
mov edi,eax
mov eax,[0x468d34]
mov eax,[eax]
cmp byte [eax+0xd4],0x0
jz 0x32553
mov eax,[0x468d34]
mov eax,[eax]
call dword 0x60178
mov esi,eax
test esi,esi
jnz 0x3255a
call dword 0x305a8
mov esi,eax
jmp short 0x3255a
call dword 0x305a8
mov esi,eax
mov edx,esi
mov eax,edi
mov ecx,[eax]
call dword [ecx+0x3c]
pop edi
pop esi
ret
mov eax,eax
push ebp
mov ebp,esp
mov ecx,0x2c
push byte +0x0
push byte +0x0
dec ecx
jnz 0x32570
push ebx
push esi
push edi
mov [ebp-0x10],edx
mov [ebp-0xc],eax
xor eax,eax
push ebp
push dword 0x433a27
push dword [fs:eax]
mov [fs:eax],esp
mov eax,[0x468bd4]
cmp dword [eax],byte +0x6
jnl 0x325d2
lea edx,[ebp-0x12c]
mov eax,[ebp-0xc]
mov eax,[eax]
call dword 0x2ad0
lea eax,[ebp-0x12c]
mov [ebp-0x2c],eax
mov byte [ebp-0x28],0x4
lea eax,[ebp-0x2c]
push eax
push byte +0x0
mov ecx,[dword 0x468cac]
mov dl,0x1
mov eax,[0x430334]
call dword 0xb548
call dword 0x3464
mov byte [ebp-0x11],0x0
lea edx,[ebp-0x130]
mov eax,[ebp-0xc]
mov ecx,[eax]
call dword [ecx+0x30]
mov edx,[ebp-0x130]
mov eax,[ebp-0xc]
add eax,byte +0x3c
call dword 0x5288
mov eax,[ebp-0xc]
cmp dword [eax+0x3c],byte +0x0
jz dword 0x329d2
xor ecx,ecx
push ebp
push dword 0x4339cb
push dword [fs:ecx]
mov [fs:ecx],esp
lea eax,[ebp-0x8]
mov edx,[ebp-0xc]
mov edx,[edx+0x3c]
call dword 0x5288
mov eax,[ebp-0xc]
cmp dword [eax+0x30],byte +0x0
jz 0x32648
lea edx,[ebp-0x140]
mov eax,[ebp-0xc]
mov eax,[eax+0x30]
call dword 0x7490
lea eax,[ebp-0x140]
push eax
mov eax,[ebp-0x8]
push eax
mov eax,[eax]
call dword [eax+0x60]
mov eax,[ebp-0xc]
cmp dword [eax+0x34],byte +0x0
jz 0x32677
lea eax,[ebp-0x144]
mov edx,[ebp-0xc]
mov edx,[edx+0x34]
call dword 0x4338
mov eax,[ebp-0x144]
call dword 0x4348
push eax
mov eax,[ebp-0x8]
push eax
mov eax,[eax]
call dword [eax+0x58]
mov eax,[ebp-0xc]
cmp dword [eax+0x44],byte +0x0
jz 0x326a6
lea eax,[ebp-0x148]
mov edx,[ebp-0xc]
mov edx,[edx+0x44]
call dword 0x4338
mov eax,[ebp-0x148]
call dword 0x4348
push eax
mov eax,[ebp-0x8]
push eax
mov eax,[eax]
call dword [eax+0x3c]
mov eax,[ebp-0xc]
cmp dword [eax+0x48],byte +0x0
jz 0x326d5
lea eax,[ebp-0x14c]
mov edx,[ebp-0xc]
mov edx,[edx+0x48]
call dword 0x4338
mov eax,[ebp-0x14c]
call dword 0x4348
push eax
mov eax,[ebp-0x8]
push eax
mov eax,[eax]
call dword [eax+0x4c]
mov eax,[ebp-0xc]
cmp dword [eax+0x5c],byte +0x0
jz 0x32704
lea eax,[ebp-0x150]
mov edx,[ebp-0xc]
mov edx,[edx+0x5c]
call dword 0x4338
mov eax,[ebp-0x150]
call dword 0x4348
push eax
mov eax,[ebp-0x8]
push eax
mov eax,[eax]
call dword [eax+0x48]
mov eax,[ebp-0xc]
cmp dword [eax+0x6c],byte +0x0
jz 0x32733
lea eax,[ebp-0x154]
mov edx,[ebp-0xc]
mov edx,[edx+0x6c]
call dword 0x4338
mov eax,[ebp-0x154]
call dword 0x4348
push eax
mov eax,[ebp-0x8]
push eax
mov eax,[eax]
call dword [eax+0x44]
mov eax,[ebp-0xc]
cmp dword [eax+0x38],byte +0x0
jz 0x32799
lea eax,[ebp-0x4]
call dword 0x5270
push eax
lea edx,[ebp-0x140]
mov eax,0x433a44
call dword 0x7490
lea eax,[ebp-0x140]
push eax
lea eax,[ebp-0x158]
mov edx,[ebp-0xc]
mov edx,[edx+0x38]
call dword 0x4338
mov eax,[ebp-0x158]
call dword 0x4348
xor edx,edx
pop ecx
call dword 0x27de4
test eax,0x80000000
setz al
test al,al
jz 0x32799
mov eax,[ebp-0x4]
push eax
mov eax,[ebp-0x8]
push eax
mov eax,[eax]
call dword [eax+0x30]
mov eax,[ebp-0xc]
mov eax,[eax+0x54]
call dword 0x14bc8
test eax,eax
jng 0x327e8
lea edx,[ebp-0x15c]
mov eax,[ebp-0xc]
mov eax,[eax+0x54]
call dword 0x31f78
mov eax,[ebp-0x15c]
push eax
mov eax,[ebp-0xc]
mov eax,[eax+0x54]
call dword 0x14bc8
push eax
mov eax,[ebp-0xc]
mov eax,[eax+0x3c]
push eax
mov eax,[eax]
call dword [eax+0x10]
mov eax,[ebp-0xc]
mov eax,[eax+0x50]
push eax
mov eax,[ebp-0x8]
push eax
mov eax,[eax]
call dword [eax+0x14]
xor esi,esi
mov eax,[ebp-0xc]
mov edx,[eax+0x60]
xor eax,eax
mov edi,0x4683e4
mov ecx,eax
cmp cl,0x1f
ja 0x32804
and ecx,byte +0x7f
bt edx,ecx
jnc 0x32808
or esi,[edi]
inc eax
add edi,byte +0x4
cmp al,0x15
jnz 0x327f7
push esi
mov eax,[ebp-0x8]
push eax
mov eax,[eax]
call dword [eax+0x24]
mov eax,[ebp-0xc]
mov eax,[eax+0x40]
call dword 0x32088
mov [ebp-0x24],eax
xor eax,eax
push ebp
push dword 0x4338cb
push dword [fs:eax]
mov [fs:eax],esp
jmp short 0x328a1
mov eax,[ebp-0x24]
call dword 0x32038
mov edi,eax
lea eax,[ebp-0x4]
call dword 0x5270
push eax
lea edx,[ebp-0x140]
mov eax,0x433a44
call dword 0x7490
lea eax,[ebp-0x140]
push eax
lea eax,[ebp-0x160]
mov edx,[edi+0xc]
call dword 0x4338
mov eax,[ebp-0x160]
call dword 0x4348
xor edx,edx
pop ecx
call dword 0x27de4
mov esi,eax
test esi,0x80000000
setz bl
test bl,bl
jz 0x328a1
push byte +0x0
mov eax,[ebp-0x4]
push eax
mov eax,[ebp-0x8]
push eax
mov eax,[eax]
call dword [eax+0x54]
mov eax,[ebp-0x24]
call dword 0x32044
test al,al
jnz 0x32838
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x4338d2
cmp dword [ebp-0x24],byte +0x0
jz 0x328ca
mov dl,0x1
mov eax,[ebp-0x24]
call dword 0x2be0
ret
jmp dword 0x3384
jmp short 0x328ba
mov eax,[ebp-0xc]
mov si,0xffef
call dword 0x2dec
mov eax,[ebp-0x10]
call dword 0x539c8
mov [ebp-0x18],eax
call dword 0x53820
mov [ebp-0x1c],eax
xor edx,edx
push ebp
push dword 0x4339ab
push dword [fs:edx]
mov [fs:edx],esp
mov ecx,[ebp-0xc]
mov dl,0x1
mov eax,[0x43315c]
call dword 0x321bc
lea edx,[ebp-0x20]
push edx
test eax,eax
jz 0x32919
sub eax,byte -0x14
push eax
mov eax,[ebp-0x8]
push eax
mov eax,[eax]
call dword [eax+0x1c]
xor edx,edx
push ebp
push dword 0x43397d
push dword [fs:edx]
mov [fs:edx],esp
mov eax,[ebp-0x10]
push eax
mov eax,[ebp-0x8]
push eax
mov eax,[eax]
call dword [eax+0xc]
test eax,0x80000000
setz al
mov [ebp-0x11],al
cmp byte [ebp-0x11],0x0
jz 0x32962
mov eax,[ebp-0xc]
mov edx,[eax]
call dword [edx+0x34]
test eax,0x80000000
setz al
mov [ebp-0x11],al
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x433984
mov eax,[ebp-0x20]
push eax
mov eax,[ebp-0x8]
push eax
mov eax,[eax]
call dword [eax+0x20]
ret
jmp dword 0x3384
jmp short 0x3296f
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x4339b2
mov eax,[ebp-0x18]
call dword 0x53a8c
mov eax,[ebp-0x10]
push eax
call dword 0x6290
mov eax,[ebp-0x1c]
call dword 0x53828
ret
jmp dword 0x3384
jmp short 0x32991
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x4339d2
mov eax,[ebp-0xc]
add eax,byte +0x3c
call dword 0x5270
ret
jmp dword 0x3384
jmp short 0x329bf
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x433a2e
lea eax,[ebp-0x160]
call dword 0x41d0
lea eax,[ebp-0x15c]
mov edx,[dword 0x428d7c]
call dword 0x4b98
lea eax,[ebp-0x158]
mov edx,0x6
call dword 0x41e8
lea eax,[ebp-0x130]
call dword 0x5270
lea eax,[ebp-0x8]
call dword 0x5270
lea eax,[ebp-0x4]
call dword 0x5270
ret
jmp dword 0x3384
jmp short 0x329df
movzx eax,byte [ebp-0x11]
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret
add [eax],al
add bh,bh
db 0xff
db 0xff
jmp dword [esi]
add [eax],al
add [ebx+0x34],bh
xor edi,[eax]
xor dh,[esi]
xor [fs:ebp+0x2d],esp
gs aaa
xor [eax],edi
sub eax,0x65653234
sub eax,0x35356362
sub eax,0x32653161
xor [ss:ebx+0x33],esp
aaa
bound esp,[esi+0x65]
jnl 0x32a6b
add [ebx+0x56],dl
push edi
mov edi,eax
mov eax,edi
mov edx,[eax]
call dword [edx+0x34]
mov ebx,eax
test ebx,0x80000000
jnz 0x32a97
mov eax,edi
mov si,0xffee
call dword 0x2dec
and eax,byte +0x7f
mov ebx,[eax*4+0x468438]
mov eax,edi
call dword 0x32cdc
mov edx,[eax]
call dword [edx+0x44]
mov eax,ebx
pop edi
pop esi
pop ebx
ret
lea eax,[eax+0x0]
push ebx
push esi
push edi
mov ebx,eax
lea eax,[ebx+0x44]
call dword 0x3a1c
lea eax,[ebx+0x64]
push eax
mov eax,[ebx+0x3c]
push eax
mov eax,[eax]
call dword [eax+0x34]
mov edi,eax
test edi,0x80000000
jnz 0x32af6
lea ecx,[ebx+0x44]
mov edx,[ebx+0x64]
mov eax,ebx
mov si,0xffe6
call dword 0x2dec
mov edi,eax
test edi,0x80000000
jnz 0x32af6
mov eax,ebx
mov si,0xffed
call dword 0x2dec
lea eax,[ebx+0x64]
call dword 0x5270
mov eax,edi
pop edi
pop esi
pop ebx
ret
push ebp
mov ebp,esp
push ecx
push ebx
push esi
mov [ebp-0x4],edx
mov ebx,eax
mov eax,[ebp-0x4]
call dword 0x52e4
xor eax,eax
push ebp
push dword 0x433b86
push dword [fs:eax]
mov [fs:eax],esp
lea eax,[ebx+0x44]
call dword 0x3a1c
lea eax,[ebx+0x64]
mov edx,[ebp-0x4]
call dword 0x5288
lea ecx,[ebx+0x44]
mov edx,[ebx+0x64]
mov eax,ebx
mov si,0xffe6
call dword 0x2dec
mov esi,eax
test esi,0x80000000
jnz 0x32b68
mov eax,ebx
mov si,0xffec
call dword 0x2dec
and eax,byte +0x7f
mov esi,[eax*4+0x468440]
lea eax,[ebx+0x64]
call dword 0x5270
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x433b8d
lea eax,[ebp-0x4]
call dword 0x5270
ret
jmp dword 0x3384
jmp short 0x32b7d
mov eax,esi
pop esi
pop ebx
pop ecx
pop ebp
ret
push ebx
push esi
mov esi,edx
mov ebx,eax
mov eax,esi
mov edx,[ebx+0x38]
call dword 0x3a70
pop esi
pop ebx
ret
nop
push ebx
push esi
mov esi,edx
mov ebx,eax
mov eax,esi
mov edx,[ebx+0x44]
call dword 0x3a70
pop esi
pop ebx
ret
nop
push ebp
mov ebp,esp
xor ecx,ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov [ebp-0x4],edx
mov ebx,eax
mov eax,[ebp-0x4]
call dword 0x52e4
xor eax,eax
push ebp
push dword 0x433ccc
push dword [fs:eax]
mov [fs:eax],esp
mov eax,ebx
call dword 0x32cdc
mov edx,[eax]
call dword [edx+0x44]
lea eax,[ebp-0xc]
push eax
mov eax,[ebp-0x4]
push eax
mov eax,[eax]
call dword [eax+0x24]
mov edi,eax
test edi,0x80000000
jnz dword 0x32c9e
lea eax,[ebp-0x10]
push eax
lea eax,[ebp-0x8]
call dword 0x5270
push eax
push byte +0x1
mov eax,[ebp-0xc]
push eax
mov eax,[eax]
call dword [eax+0xc]
mov edi,eax
jmp short 0x32c61
lea ecx,[ebx+0x44]
mov edx,[ebp-0x8]
mov eax,ebx
mov si,0xffe6
call dword 0x2dec
mov eax,ebx
call dword 0x32cdc
mov edx,[ebx+0x44]
mov ecx,[eax]
call dword [ecx+0x38]
lea eax,[ebp-0x10]
push eax
lea eax,[ebp-0x8]
call dword 0x5270
push eax
push byte +0x1
mov eax,[ebp-0xc]
push eax
mov eax,[eax]
call dword [eax+0xc]
mov edi,eax
mov eax,edi
call dword 0x6554
test al,al
jz 0x32c72
cmp dword [ebp-0x10],byte +0x0
jnz 0x32c27
mov eax,ebx
call dword 0x32cdc
mov edx,[eax]
call dword [edx+0x14]
test eax,eax
jng 0x32c9e
mov eax,ebx
call dword 0x32cdc
lea ecx,[ebp-0x14]
xor edx,edx
mov esi,[eax]
call dword [esi+0xc]
mov edx,[ebp-0x14]
lea eax,[ebx+0x44]
call dword 0x3a70
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x433cd3
lea eax,[ebp-0x14]
call dword 0x3a1c
lea eax,[ebp-0xc]
call dword 0x5270
lea eax,[ebp-0x8]
call dword 0x5270
lea eax,[ebp-0x4]
call dword 0x5270
ret
jmp dword 0x3384
jmp short 0x32cab
mov eax,edi
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret
mov eax,[eax+0x4c]
ret
push ebp
mov ebp,esp
add esp,byte -0xc
push ebx
mov ebx,ecx
mov [ebp-0x4],edx
mov eax,[ebp-0x4]
call dword 0x52e4
xor eax,eax
push ebp
push dword 0x433d81
push dword [fs:eax]
mov [fs:eax],esp
lea eax,[ebp-0xc]
push eax
push dword 0x80058000
mov eax,[ebp-0x4]
push eax
mov eax,[eax]
call dword [eax+0x14]
mov [ebp-0x8],eax
test byte [ebp-0x5],0x80
jz 0x32d2f
lea eax,[ebp-0xc]
push eax
push byte +0x0
mov eax,[ebp-0x4]
push eax
mov eax,[eax]
call dword [eax+0x14]
mov [ebp-0x8],eax
test byte [ebp-0x5],0x80
jnz 0x32d6b
xor eax,eax
push ebp
push dword 0x433d64
push dword [fs:eax]
mov [fs:eax],esp
mov eax,ebx
mov edx,[ebp-0xc]
call dword 0x3c44
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x433d6b
mov eax,[ebp-0xc]
push eax
call dword 0x654c
ret
jmp dword 0x3384
jmp short 0x32d5a
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x433d88
lea eax,[ebp-0x4]
call dword 0x5270
ret
jmp dword 0x3384
jmp short 0x32d78
mov eax,[ebp-0x8]
pop ebx
mov esp,ebp
pop ebp
ret
push ebx
push esi
push edi
mov edi,eax
lea eax,[edi+0x64]
push eax
mov eax,[edi+0x3c]
push eax
mov eax,[eax]
call dword [eax+0x50]
mov ebx,eax
test ebx,0x80000000
jnz 0x32dd2
lea ecx,[edi+0x44]
mov edx,[edi+0x64]
mov eax,edi
mov si,0xffe6
call dword 0x2dec
mov ebx,eax
mov eax,[edi+0x4c]
mov edx,[eax]
call dword [edx+0x44]
mov edx,[edi+0x44]
mov eax,[edi+0x4c]
mov ecx,[eax]
call dword [ecx+0x38]
mov eax,ebx
pop edi
pop esi
pop ebx
ret
push ebp
mov ebp,esp
push byte +0x0
push ebx
mov ebx,eax
xor eax,eax
push ebp
push dword 0x433e2c
push dword [fs:eax]
mov [fs:eax],esp
lea eax,[ebp-0x4]
call dword 0x5270
mov ecx,eax
mov edx,0x433e38
mov eax,[ebx+0x3c]
call dword 0xd0f8
test al,al
jz 0x32e16
lea eax,[ebx+0x58]
push eax
mov eax,[ebp-0x4]
push eax
mov eax,[eax]
call dword [eax+0xc]
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x433e33
lea eax,[ebp-0x4]
call dword 0x5270
ret
jmp dword 0x3384
jmp short 0x32e23
pop ebx
pop ecx
pop ebp
ret
add [ecx+eax],dl
add [eax],al
add [eax],al
add [eax],al
rol byte [eax],byte 0x0
add [eax],al
add [eax],al
inc esi
push ebp
mov ebp,esp
add esp,byte -0xc
push ebx
push esi
push edi
mov [ebp-0x8],ecx
mov [ebp-0x4],edx
mov ebx,eax
mov eax,[ebp-0x4]
call dword 0x52e4
xor eax,eax
push ebp
push dword 0x433ed6
push dword [fs:eax]
mov [fs:eax],esp
lea eax,[ebx+0x44]
call dword 0x3a1c
mov byte [ebp-0x9],0x1
lea eax,[ebx+0x64]
mov edx,[ebp-0x4]
call dword 0x5288
lea ecx,[ebx+0x44]
mov edx,[ebx+0x64]
mov eax,ebx
mov si,0xffe6
call dword 0x2dec
mov edi,eax
test edi,0x80000000
jnz 0x32eaf
lea edx,[ebp-0x9]
mov eax,ebx
mov si,0xffeb
call dword 0x2dec
movzx eax,byte [ebp-0x9]
mov edx,[ebp-0x8]
mov [edx],eax
lea eax,[ebx+0x64]
call dword 0x5270
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x433edd
lea eax,[ebp-0x4]
call dword 0x5270
ret
jmp dword 0x3384
jmp short 0x32ecd
mov eax,edi
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret
mov eax,eax
push ebx
push esi
push edi
mov ebx,eax
lea eax,[ebx+0x44]
call dword 0x3a1c
lea eax,[ebx+0x64]
push eax
mov eax,[ebx+0x3c]
push eax
mov eax,[eax]
call dword [eax+0x38]
mov edi,eax
test edi,0x80000000
jnz 0x32f32
lea ecx,[ebx+0x44]
mov edx,[ebx+0x64]
mov eax,ebx
mov si,0xffe6
call dword 0x2dec
mov edi,eax
test edi,0x80000000
jnz 0x32f32
mov eax,ebx
mov si,0xffea
call dword 0x2dec
lea eax,[ebx+0x64]
call dword 0x5270
mov eax,edi
pop edi
pop esi
pop ebx
ret
push ebx
push esi
add esp,byte -0x10
mov esi,edx
mov ebx,eax
mov eax,esi
mov edx,[ebx+0x30]
call dword 0x3e44
jz 0x32f6c
test esi,esi
jz 0x32f62
mov edx,esp
mov eax,esi
call dword 0x7490
lea eax,[ebx+0x30]
mov edx,esi
call dword 0x3a70
add esp,byte +0x10
pop esi
pop ebx
ret
mov eax,eax
push ebx
push esi
mov esi,edx
mov ebx,eax
mov eax,[ebx+0x38]
mov edx,esi
call dword 0x3e44
jz 0x32f90
lea eax,[ebx+0x38]
mov edx,esi
call dword 0x3a70
pop esi
pop ebx
ret
nop
push ebx
push esi
mov esi,edx
mov ebx,eax
mov eax,esi
mov edx,[ebx+0x44]
call dword 0x3e44
jz 0x32fb0
lea eax,[ebx+0x44]
mov edx,esi
call dword 0x3a70
pop esi
pop ebx
ret
nop
push esi
mov esi,eax
test edx,edx
jz 0x32fc3
mov eax,[esi+0x54]
mov ecx,[eax]
call dword [ecx+0x8]
pop esi
ret
lea eax,[eax+0x0]
push esi
mov esi,eax
test edx,edx
jz 0x32fd7
mov eax,[esi+0x40]
mov ecx,[eax]
call dword [ecx+0x8]
pop esi
ret
lea eax,[eax+0x0]
push ebp
mov ebp,esp
add esp,byte -0xc
push ebx
push esi
push edi
mov [ebp-0x8],ecx
mov [ebp-0x4],edx
mov ebx,eax
mov eax,[ebp-0x4]
call dword 0x52e4
xor eax,eax
push ebp
push dword 0x43406a
push dword [fs:eax]
mov [fs:eax],esp
lea eax,[ebx+0x44]
call dword 0x3a1c
mov byte [ebp-0x9],0x1
lea eax,[ebx+0x64]
mov edx,[ebp-0x4]
call dword 0x5288
lea ecx,[ebx+0x44]
mov edx,[ebx+0x64]
mov eax,ebx
mov si,0xffe6
call dword 0x2dec
mov edi,eax
test edi,0x80000000
jnz 0x33043
lea edx,[ebp-0x9]
mov eax,ebx
mov si,0xffe9
call dword 0x2dec
movzx eax,byte [ebp-0x9]
mov edx,[ebp-0x8]
mov [edx],eax
lea eax,[ebx+0x64]
call dword 0x5270
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x434071
lea eax,[ebp-0x4]
call dword 0x5270
ret
jmp dword 0x3384
jmp short 0x33061
mov eax,edi
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret
mov eax,eax
push ebx
push esi
push edi
mov ebx,eax
lea eax,[ebx+0x50]
push eax
mov eax,[ebx+0x3c]
push eax
mov eax,[eax]
call dword [eax+0x18]
mov edi,eax
cmp word [ebx+0xaa],byte +0x0
jz 0x330ad
test edi,0x80000000
jnz 0x330ad
mov eax,ebx
mov si,0xffe8
call dword 0x2dec
mov eax,edi
pop edi
pop esi
pop ebx
ret
nop
push ebx
mov ebx,edx
mov eax,ebx
call dword 0x5270
push eax
push dword 0x4340d8
push byte +0x1
push byte +0x0
mov eax,[0x468de0]
push eax
call dword 0x653c
pop ebx
ret
add [eax],al
add [eax-0x522a838e],cl
aam 0x68
inc edi
mov esi,0x95969d02
xor bl,cl
pushad
push ebp
mov ebp,esp
push byte +0x0
push ebx
push esi
mov ebx,eax
xor eax,eax
push ebp
push dword 0x43415d
push dword [fs:eax]
mov [fs:eax],esp
test byte [ebx+0x60],0x80
jnz 0x33110
mov eax,ebx
call dword 0x32d90
mov esi,eax
jmp short 0x33147
lea eax,[ebx+0x68]
push eax
lea eax,[ebp-0x4]
mov edx,[ebx+0x3c]
mov ecx,0x43416c
call dword 0x52b4
mov eax,[ebp-0x4]
push eax
mov eax,[eax]
call dword [eax+0x6c]
mov esi,eax
test esi,0x80000000
jnz 0x33147
mov edx,[ebx+0x68]
mov eax,ebx
mov si,0xffe7
call dword 0x2dec
mov esi,eax
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x434164
lea eax,[ebp-0x4]
call dword 0x5270
ret
jmp dword 0x3384
jmp short 0x33154
mov eax,esi
pop esi
pop ebx
pop ecx
pop ebp
ret
add [eax-0x522a838e],cl
aam 0x68
inc edi
mov esi,0x95969d02
xor bl,cl
pushad
push ebp
mov ebp,esp
push byte +0x0
push ebx
push esi
push edi
mov ebx,eax
xor eax,eax
push ebp
push dword 0x43421a
push dword [fs:eax]
mov [fs:eax],esp
test byte [ebx+0x60],0x80
jnz 0x331a5
mov eax,ebx
call dword 0x32ee8
mov edi,eax
jmp short 0x33204
lea eax,[ebx+0x68]
push eax
lea eax,[ebp-0x4]
mov edx,[ebx+0x3c]
mov ecx,0x43422c
call dword 0x52b4
mov eax,[ebp-0x4]
push eax
mov eax,[eax]
call dword [eax+0x70]
mov edi,eax
test edi,0x80000000
jnz 0x33204
mov edx,[ebx+0x68]
mov eax,ebx
mov si,0xffe7
call dword 0x2dec
mov edi,eax
test edi,0x80000000
jnz 0x331fc
lea eax,[ebx+0x64]
push eax
mov eax,[ebx+0x3c]
push eax
mov eax,[eax]
call dword [eax+0x38]
mov eax,ebx
mov si,0xffea
call dword 0x2dec
lea eax,[ebx+0x68]
call dword 0x5270
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x434221
lea eax,[ebp-0x4]
call dword 0x5270
ret
jmp dword 0x3384
jmp short 0x33211
mov eax,edi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
ret
add [eax],al
add [eax-0x522a838e],cl
aam 0x68
inc edi
mov esi,0x95969d02
xor bl,cl
pushad
push ebx
mov ebx,edx
mov eax,ebx
call dword 0x5270
push eax
push dword 0x434260
push byte +0x1
push byte +0x0
mov eax,[0x468c5c]
push eax
call dword 0x653c
pop ebx
ret
add [eax],al
add [ebx],ah
int 0xbc
test dh,bl
pop edi
fisttp dword [esi+ebp*4-0x5c]
scasd
fs mov eax,0xffab783d
db 0xff
db 0xff
inc dword [ebx]
add [eax],al
add [ecx+0x65],bl
jnc 0x3327c
db 0xff
db 0xff
db 0xff
inc dword [edx]
add [eax],al
add [esi+0x6f],cl
add [eax],al
db 0xff
db 0xff
db 0xff
inc dword [edx]
add [eax],al
add [edi+0x4b],cl
add [eax],al
db 0xff
db 0xff
db 0xff
inc dword [esi]
add [eax],al
add [ebx+0x61],al
outsb
arpl [ebp+0x6c],sp
add [eax],al
db 0xff
db 0xff
db 0xff
inc dword [dword 0x41000000]
bound ebp,[edi+0x72]
jz 0x332b2
add [eax],al
db 0xff
db 0xff
db 0xff
inc dword [dword 0x52000000]
gs jz 0x33332
jns 0x332c2
add [eax],al
db 0xff
db 0xff
db 0xff
inc dword [esi]
add [eax],al
add [ecx+0x67],cl
outsb
outsd
jc 0x33337
add [eax],al
db 0xff
db 0xff
db 0xff
inc dword [ebx]
add [eax],al
add [ecx+0x6c],al
insb
add bh,bh
db 0xff
db 0xff
inc dword [edi]
add [eax],al
add [esi+0x6f],cl
push esp
outsd
inc ecx
insb
insb
add bh,bh
db 0xff
db 0xff
dec dword [eax]
add [eax],al
add [ecx+0x65],bl
jnc 0x33350
outsd
inc ecx
insb
insb
add [eax],al
add [eax],al
db 0xff
db 0xff
db 0xff
inc dword [eax+eax]
add [eax],al
dec eax
gs insb
jo 0x33311
add [eax],al
add [ebx+0x7868d0c4],al
inc ebx
inc ebx
add al,ch
pop ds
das
std
jmp dword [ebx+0x46dba4]
push dword 0x434388
call dword 0x6240
mov [0x46dba8],eax
push byte +0x1
mov eax,[0x46b7f4]
mov [esp+0x24],eax
mov byte [esp+0x28],0x0
call dword 0x5af8
mov [esp+0x2c],eax
mov byte [esp+0x30],0x0
lea ecx,[esp+0x24]
mov edx,0x43439c
lea eax,[esp+0x4]
call dword 0x8aa4
push eax
call dword 0x5b80
mov [0x46832c],ax
add esp,byte +0x30
ret
add [eax],al
add [ebx+0x6f],ah
insd
insd
fs insb
pop edi
push dword 0x706c65
add [eax],al
add [ebx+0x6f],ah
insd
insd
fs insb
pop edi
inc esi
imul ebp,[esi+0x64],dword 0x6c706552
popad
arpl [ebp+0x0],sp
push edi
outsb
fs push eax
jc 0x33411
arpl [eax+0x74],dx
jc 0x333cc
cmp [cs:eax+0x25],bl
cmp [cs:eax+0x0],bl
add [edi],cl
add [eax],al
add [eax-0x1bffb97c],dh
mov al,[esi+0x0]
add [eax],al
add [eax],al
lodsb
test [esi+0x0],al
hlt
mov [esi+0x0],es
add [eax],al
add [eax],al
test al,0x84
inc esi
add al,cl
mov al,[esi+0x0]
add [eax],al
add [eax],al
movsb
test [esi+0x0],al
add [esi+0x46],cl
add [eax],al
mov al,[0x10004684]
lea eax,[esi+0x0]
add [eax],al
add [eax],al
pushfd
test [esi+0x0],al
mov al,0x8c
inc esi
add [eax],al
add [eax],al
add [eax-0x73ffb97c],bl
lea eax,[esi+0x0]
add [eax],al
add [eax],al
xchg eax,esp
test [esi+0x0],al
add al,0x8c
inc esi
add [eax],al
add [eax],al
add [eax-0x37ffb97c],dl
mov [esi+0x0],es
add [eax],al
add [eax],al
mov [esi+eax*2+0x468c2c00],es
add [eax],al
add [eax],al
add [eax+0x6c004684],cl
mov es,[esi+0x0]
add [eax],al
add [eax],al
push esp
test [esi+0x0],al
sbb al,0x8b
inc esi
add [eax],al
add [eax],al
add [eax-0x7c],dl
inc esi
add ah,ah
lea eax,[esi+0x0]
add [eax],al
add [eax],al
dec esp
test [esi+0x0],al
and al,0x8e
inc esi
add [eax],al
add [eax],al
add [eax-0x7c],cl
inc esi
add [eax-0x74],dh
inc esi
add [eax],al
add [eax],al
add [ebp-0x75],dl
in al,dx
xor eax,eax
push ebp
push dword 0x4344bb
push dword [fs:eax]
mov [fs:eax],esp
inc dword [dword 0x46dba0]
jnz 0x334ad
cmp word [dword 0x46832c],byte +0x0
jz 0x33498
movzx eax,word [dword 0x46832c]
push eax
call dword 0x5b88
mov eax,0x46845c
mov ecx,0xb
mov edx,[dword 0x401094]
call dword 0x465c
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x4344c2
ret
jmp dword 0x3384
jmp short 0x334ba
pop ebp
ret
push ebp
mov ebp,esp
xor eax,eax
push ebp
push dword 0x4344f5
push dword [fs:eax]
mov [fs:eax],esp
inc dword [dword 0x46dbb0]
jnz 0x334e7
mov eax,[0x46dbb4]
call dword 0x2bf0
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x4344fc
ret
jmp dword 0x3384
jmp short 0x334f4
pop ebp
ret
mov eax,eax
dec esp
inc ebp
inc ebx
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax+0x4345],dh
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax-0x5fffbcbb],ah
add [eax],al
add [esi+edx],cl
inc ebp
add [eax],ch
mov ebp,0x3e440041
inc eax
add [esi+esi*4+0x41],ah
add [esi+edi+0x40],cl
add [eax+0x3e],al
inc eax
add [eax-0x5bffbfc5],cl
cmp eax,[eax+0x0]
push eax
pop ds
inc ebp
add [eax+0x2c00451f],ah
mov ecx,0x547c0041
inc ecx
add [edx+edi*4],al
inc ecx
add [edi+edi*4+0x41],ch
add [eax+ebx+0x45],dl
add [esp+0x45],dh
add [eax-0x43],al
inc ecx
add [edx+edi*4],ah
inc ecx
add [edx+edi*4],bl
inc ecx
add [eax-0x43],cl
inc ecx
add ah,dh
inc ebp
inc ebx
add [eax+eax*8],ch
inc ecx
add al,dl
mov edi,0xbf640041
inc ecx
add [edi+edi*4-0x4097ffbf],dl
inc ecx
add [eax-0x63ffbae7],ch
and al,[ebp+0x0]
xor al,0x22
inc ebp
add [ebp+0x45],dh
add [ebx],cl
push esp
dec eax
imul ebp,[esi+0x74],dword 0x69746341
outsd
outsb
mov al,0x45
inc ebx
add [edi],al
or edx,[eax+ecx*2+0x69]
outsb
jz 0x335f9
arpl [ecx+ebp*2+0x6f],si
outsb
dec esp
inc ebp
inc ebx
add ah,ch
push ss
inc ebp
add [eax+eax],al
or [ebx+0x74],dl
fs inc ecx
arpl [esi+ebp*2+0x73],si
add [eax],eax
xchg eax,esp
adc [eax+0x0],al
jl 0x335d8
add bh,bh
hlt
and al,[ebp+0x0]
add [eax],eax
add [eax],al
add [eax],al
add [eax-0x80000000],al
add eax,[eax]
add al,0x48
imul ebp,[esi+0x74],dword 0x5300408d
push esi
test dl,dl
jz 0x33602
add esp,byte -0x10
call dword 0x2f14
mov ebx,edx
mov esi,eax
xor edx,edx
mov eax,esi
call dword 0x50efc
mov byte [esi+0x60],0x0
mov eax,esi
test bl,bl
jz 0x33628
call dword 0x2f6c
pop dword [dword fs:0x0]
add esp,byte +0xc
mov eax,esi
pop esi
pop ebx
ret
lea eax,[eax+0x0]
push ebp
mov ebp,esp
cmp dword [dword 0x46dbe0],byte +0x0
jz 0x33656
mov eax,[ebp+0x14]
push eax
mov eax,[ebp+0x10]
push eax
mov eax,[ebp+0xc]
push eax
mov eax,[ebp+0x8]
push eax
call dword [dword 0x46dbe0]
test eax,eax
jnz 0x3365a
xor eax,eax
jmp short 0x3365c
mov al,0x1
neg al
sbb eax,eax
pop ebp
ret 0x10
push ebp
mov ebp,esp
cmp dword [dword 0x46dbe4],byte +0x0
jz 0x3367e
mov eax,[ebp+0x8]
push eax
call dword [dword 0x46dbe4]
test eax,eax
jnz 0x33682
xor eax,eax
jmp short 0x33684
mov al,0x1
neg al
sbb eax,eax
pop ebp
ret 0x4
push ebx
push esi
push dword 0x4347f0
call dword 0x5b48
mov ebx,eax
test ebx,ebx
jz dword 0x337ea
push dword 0x434800
push ebx
call dword 0x5b50
mov [0x46dbe4],eax
push dword 0x434814
push ebx
call dword 0x5b50
mov [0x46dbe8],eax
push dword 0x434828
push ebx
call dword 0x5b50
mov [0x46dbdc],eax
push dword 0x434840
push ebx
call dword 0x5b50
mov [0x46dbe0],eax
push dword 0x434858
push ebx
call dword 0x5b50
mov esi,eax
mov [dword 0x46dbb8],esi
test esi,esi
jnz 0x33703
mov eax,0x406f50
mov [0x46dbb8],eax
push dword 0x434870
push ebx
call dword 0x5b50
mov esi,eax
mov [dword 0x46dbbc],esi
test esi,esi
jnz 0x33724
mov eax,0x407340
mov [0x46dbbc],eax
push dword 0x434888
push ebx
call dword 0x5b50
mov esi,eax
mov [dword 0x46dbc0],esi
test esi,esi
jnz 0x33745
mov eax,0x4070b0
mov [0x46dbc0],eax
push dword 0x4348a0
push ebx
call dword 0x5b50
mov esi,eax
mov [dword 0x46dbc4],esi
test esi,esi
jnz 0x33766
mov eax,0x4070a0
mov [0x46dbc4],eax
push dword 0x4348b8
push ebx
call dword 0x5b50
mov esi,eax
mov [dword 0x46dbc8],esi
test esi,esi
jnz 0x33787
mov eax,0x4070a8
mov [0x46dbc8],eax
push dword 0x4348cc
push ebx
call dword 0x5b50
mov esi,eax
mov [dword 0x46dbcc],esi
test esi,esi
jnz 0x337a8
mov eax,0x4072f0
mov [0x46dbcc],eax
push dword 0x4348e0
push ebx
call dword 0x5b50
mov esi,eax
mov [dword 0x46dbd0],esi
test esi,esi
jnz 0x337c9
mov eax,0x4072e8
mov [0x46dbd0],eax
push dword 0x4348f8
push ebx
call dword 0x5b50
mov esi,eax
mov [dword 0x46dbd4],esi
test esi,esi
jnz 0x337ea
mov eax,0x4072f8
mov [0x46dbd4],eax
pop esi
pop ebx
ret
add [eax],al
add [ebx+0x6f],ah
insd
arpl [esp+ebp*2+0x33],si
xor ch,[esi]
fs insb
insb
add [eax],al
add [eax],al
dec ecx
outsb
imul esi,[ecx+ebp*2+0x61],dword 0x657a696c
inc esi
insb
popad
jz 0x33862
inc edx
add [eax],al
add [eax],al
push ebp
outsb
imul ebp,[esi+0x69],dword 0x6c616974
imul edi,[edx+0x65],dword 0x74616c46
push ebx
inc edx
add [eax],al
inc esi
insb
popad
jz 0x33880
inc edx
pop edi
inc edi
gs jz 0x33886
arpl [edx+0x6f],si
insb
insb
push eax
jc 0x338aa
jo 0x3383d
add [eax],al
add [esi+0x6c],al
popad
jz 0x33898
inc edx
pop edi
push ebx
gs jz 0x3389e
arpl [edx+0x6f],si
insb
insb
push eax
jc 0x338c2
jo 0x33855
add [eax],al
add [esi+0x6c],al
popad
jz 0x338b0
inc edx
pop edi
inc ebp
outsb
popad
bound ebp,[ebp+0x53]
arpl [edx+0x6f],si
insb
insb
inc edx
popad
jc 0x3386f
add [esi+0x6c],al
popad
jz 0x338c8
inc edx
pop edi
push ebx
push dword 0x6353776f
jc 0x338ee
insb
insb
inc edx
popad
jc 0x33885
add [eax],al
add [esi+0x6c],al
popad
jz 0x338e0
inc edx
pop edi
inc edi
gs jz 0x338e6
arpl [edx+0x6f],si
insb
insb
push edx
popad
outsb
add [gs:bx+si],al
add [esi+0x6c],al
popad
jz 0x338f8
inc edx
pop edi
inc edi
gs jz 0x338fe
arpl [edx+0x6f],si
insb
insb
dec ecx
outsb
outsw
add [eax],al
add [eax],al
inc esi
insb
popad
jz 0x33910
inc edx
pop edi
inc edi
gs jz 0x33916
arpl [edx+0x6f],si
insb
insb
push eax
outsd
jnc 0x338cc
inc esi
insb
popad
jz 0x33924
inc edx
pop edi
push ebx
gs jz 0x3392a
arpl [edx+0x6f],si
insb
insb
push eax
outsd
jnc 0x338e0
inc esi
insb
popad
jz 0x33938
inc edx
pop edi
push ebx
gs jz 0x3393e
arpl [edx+0x6f],si
insb
insb
dec ecx
outsb
outsw
add [eax],al
add [eax],al
inc esi
insb
popad
jz 0x33950
inc edx
pop edi
push ebx
gs jz 0x33956
arpl [edx+0x6f],si
insb
insb
push edx
popad
outsb
add [gs:bx+si],al
add [ebp-0x75],dl
in al,dx
xor eax,eax
push ebp
push dword 0x434935
push dword [fs:eax]
mov [fs:eax],esp
inc dword [dword 0x46dbd8]
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x43493c
ret
jmp dword 0x3384
jmp short 0x33934
pop ebp
ret
mov eax,eax
mov [ecx+0x43],cs
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [ecx+ecx*2+0xc0043],cl
add [eax],al
pop eax
js 0x339ab
add [eax],bh
ds inc eax
add [esi+edi+0x40],al
add [eax+0x3e],cl
inc eax
add [esi+edi+0x40],cl
add [eax+0x3e],al
inc eax
add [eax-0x5bffbfc5],cl
cmp eax,[eax+0x0]
loopne 0x339c5
inc eax
add [edx],cl
inc ebp
dec ebp
gs outsb
jnz 0x339d8
jc 0x33a07
outsd
jc 0x33928
pushfd
dec ecx
inc ebx
add [ebx],al
or dl,[ebp+ecx*2+0x65]
outsb
jnz 0x339e6
jc 0x33a0b
popad
imul eax,[ecx],byte +0x0
add [eax],al
add [edx],al
add [eax],al
add [eax+0x6004349],bl
insd
bound ecx,[esi+0x6f]
outsb
gs pop es
insd
db 0x62
inc edx
jc 0x33a27
popad
imul ecx,[edx],byte +0x6d
db 0x62
inc edx
popad
jc 0x33a0d
jc 0x33a32
popad
imul eax,[dword 0x756e654d],byte +0x73
lea eax,[eax+0x0]
fmul qword [ecx+0x43]
add [eax],cl
adc [ebp+ecx*2+0x65],dl
outsb
jnz 0x33a27
push dword 0x65676e61
inc ebp
jna 0x33a51
outsb
jz 0x339ef
add ecx,[eax]
push es
push ebx
gs outsb
gs jc 0x33a00
push esp
dec edi
bound ebp,[edx+0x65]
arpl [eax+ecx+0x6],si
push ebx
outsd
jnz 0x33a78
arpl [ebp+0x9],sp
push esp
dec ebp
gs outsb
jnz 0x33a58
jz 0x33a76
insd
add [edi],al
push edx
bound esi,[gs:ebp+0x69]
insb
fs pop es
inc edx
outsd
outsd
insb
gs popad
outsb
add [ecx+edx],al
inc eax
add [eax+0x434d],dh
adc [eax+0x0],al
xor al,0x4a
inc ebx
add [eax],cl
adc dl,[ebp+ecx*2+0x65]
outsb
jnz 0x33a80
jc 0x33a9f
ja 0x33a89
jz 0x33aa7
insd
inc ebp
jna 0x33aab
outsb
jz 0x33a49
add al,0x8
push es
push ebx
gs outsb
gs jc 0x33a5a
push esp
dec edi
bound ebp,[edx+0x65]
arpl [eax+ecx+0x7],si
inc ecx
inc ebx
popad
outsb
jna 0x33ac3
jnc 0x33a6b
push esp
inc ebx
popad
outsb
jna 0x33acb
jnc 0x33a7c
add eax,0x63655241
jz 0x33a78
push esp
push edx
arpl [gs:eax+eax+0x8],si
push ebx
gs insb
arpl [gs:ebp+0x64],si
pop es
inc edx
outsd
outsd
insb
gs popad
outsb
add [ecx+edx],al
inc eax
add [eax-0xb],al
inc ecx
add [eax],al
add [eax],al
add [eax],al
adc [eax+0x0],al
nop
mov al,[0x800434a]
sbb dl,[ecx+eax*2+0x64]
jna 0x33b08
outsb
arpl [ebp+0x64],sp
dec ebp
gs outsb
jnz 0x33af4
jc 0x33b13
ja 0x33afd
jz 0x33b1b
insd
inc ebp
jna 0x33b1f
outsb
jz 0x33abd
add al,0x8
push es
push ebx
gs outsb
gs jc 0x33ace
push esp
dec edi
bound ebp,[edx+0x65]
arpl [eax+ecx+0x7],si
inc ecx
inc ebx
popad
outsb
jna 0x33b37
jnc 0x33adf
push esp
inc ebx
popad
outsb
jna 0x33b3f
jnc 0x33af0
add eax,0x63655241
jz 0x33aec
push esp
push edx
arpl [gs:eax+eax+0x5],si
push ebx
jz 0x33b52
jz 0x33b58
andps xmm1,oword [edi+0x77]
outsb
gs jc 0x33b3f
jc 0x33b5e
ja 0x33b52
jz 0x33b62
jz 0x33b68
add [ecx+edx],al
inc eax
add [eax-0xb],al
inc ecx
add [eax],al
add [eax],al
add [edx+ebp*2],dh
inc eax
add [eax],bl
dec ebx
inc ebx
add [eax],cl
adc eax,0x6e654d54
jnz 0x33b6d
gs popad
jnc 0x33b99
jc 0x33b8b
dec ecx
jz 0x33b8e
insd
inc ebp
jna 0x33b92
outsb
jz 0x33b30
add al,0x8
push es
push ebx
gs outsb
gs jc 0x33b41
push esp
dec edi
bound ebp,[edx+0x65]
arpl [eax+ecx+0x7],si
inc ecx
inc ebx
popad
outsb
jna 0x33baa
jnc 0x33b52
push esp
inc ebx
popad
outsb
jna 0x33bb2
jnc 0x33b54
add eax,0x74646957
push dword 0x746e4907
gs jc 0x33b63
push es
dec eax
imul esp,[gs:edi+0x68],dword 0x6e490774
jz 0x33bd3
gs jc 0x33b72
add al,0x11
inc eax
add [eax-0xb],al
inc ecx
add [eax+edx],bh
inc eax
add [eax+edx],bh
inc eax
add [ebx+0x434b88c0],cl
add [ebx],al
adc [ebp+ecx*2+0x65],edx
outsb
jnz 0x33bd9
jz 0x33bf7
insd
inc ecx
jnz 0x33c0a
outsd
inc esi
insb
popad
add [bx+si],eax
add [eax],al
add [edx],al
add [eax],al
add [ebx+ecx*2+0x6d0b0043],al
popad
inc ecx
jnz 0x33c22
outsd
insd
popad
jz 0x33c1c
arpl [eax],cx
insd
popad
dec ebp
popad
outsb
jnz 0x33c1d
insb
or [ebp+0x61],ch
push eax
popad
jc 0x33c29
outsb
jz 0x33bcc
dec ebp
gs outsb
jnz 0x33c3f
ror byte [ebx+0x43],1
add [ebx],al
or eax,0x6e654d54
jnz 0x33c19
jnz 0x33c4e
outsd
inc esi
insb
popad
add [bx+si],eax
add [eax],al
add [ecx],al
add [eax],al
add [ebx+ecx*2+0x4d050043],al
gs outsb
jnz 0x33c65
mov eax,eax
inc eax
dec esp
inc ebx
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [esp+ecx*2+0x1c0043],bh
add [eax],al
adc al,0x17
inc ebp
add [eax],bh
ds inc eax
add [esi+edi+0x40],al
add [eax+0x3e],cl
inc eax
add [esi+edi+0x40],cl
add [eax+0x3e],al
inc eax
add [eax-0x5bffbfc5],cl
cmp eax,[eax+0x0]
adc al,0xbe
inc ecx
add [esi+ebx*2-0x41b7ffbd],dh
inc ecx
add ah,cl
pushad
inc ebx
add [esi+edi*4+0x41],bh
add [edx],dl
inc ebx
add ah,cl
mov ebp,0xbe600041
inc ecx
add [esi+edi*4+0x5ef80041],dh
inc ebx
add [eax],dh
pop edi
inc ebx
add [eax+0x5f],ah
inc ebx
add ah,dh
pop edi
inc ebx
add [eax+0x6800435f],dl
push ds
inc ebp
add al,al
pop edi
inc ebx
add [eax],dh
pushad
inc ebx
add [eax+0x43],ah
add [eax-0xbffbca0],bl
pushad
inc ebx
add [ecx],dl
inc ebx
add [ecx],dh
inc ebx
add [ecx+0x43],dl
add ah,bl
push ds
inc ebp
add [ecx+0x43],dh
add ah,ah
push ds
inc ebp
add al,ch
push ds
inc ebp
add [eax-0x4bffbc9f],dl
popad
inc ebx
add ah,dl
popad
inc ebx
add ah,dh
popad
inc ebx
add al,dl
pop esi
inc ebx
add [edi],cl
push esp
dec ebp
gs outsb
jnz 0x33d04
arpl [ecx+ebp*2+0x6f],si
outsb
dec esp
imul ebp,[esi+0x6b],dword 0x434d18
add [eax],al
add [eax],al
add [eax],al
add [eax],al
pushad
dec ebp
inc ebx
add [ebp+ecx*2+0x43],dh
add [eax],al
add [eax],al
add [eax],al
jpe 0x33d37
inc ebx
add [esi-0x53ffbcb3],ah
add [eax],al
add [edi+esi],ch
inc ecx
add [eax],ch
mov ebp,0x3e440041
inc eax
add [esi+esi*4+0x41],ah
add [esi+edi+0x40],cl
add [eax+0x3e],al
inc eax
add [eax-0x5bffbfc5],cl
cmp eax,[eax+0x0]
mov esp,0x28004362
mov [ebx+0x0],es
shr byte [eax+0x43],byte 0x0
jl 0x33d76
inc ecx
add [eax],cl
inc ebx
add [esp+ecx*4-0x45ebffbd],ah
inc ecx
add [ebx+edi*4],cl
inc ecx
add [eax-0x43],al
inc ecx
add [edx+edi*4],ah
inc ecx
add [edx+edi*4],bl
inc ecx
add [eax-0x43],cl
inc ecx
add [eax+0x62],al
inc ebx
add [eax+0x7e],al
inc ebx
add [eax],ah
imul eax,[ebx+0x0],byte +0x14
add byte [ebx+0x0],0x88
xchg eax,[ebx+0x0]
inc eax
test [ebx+0x0],eax
jl 0x33ce4
inc ebx
add [esi],cl
add [eax],al
add [eax],al
add [edx],al
add [eax],al
add [eax+edx+0x300040],dl
add [eax],al
xchg eax,esp
adc [eax+0x0],al
pop eax
add [eax],al
add [edi],al
add bh,ch
db 0xff
out dx,al
db 0xff
std
db 0xff
stc
db 0xff
clc
push edx
push ecx
inc eax
mov [ebx+0x0],eax
mov esp,0x8c004383
test [ebx+0x0],al
les eax,[ebx+eax*2+0x43893000]
add [ecx+ecx*4],bl
inc ebx
add [edx+eax*4],dl
inc ebx
add [ecx],cl
push esp
dec ebp
gs outsb
jnz 0x33df6
jz 0x33e14
insd
mov ah,0x4d
inc ebx
add [edi],al
or [ebp+ecx*2+0x65],edx
outsb
jnz 0x33e05
jz 0x33e23
insd
sbb [ebp+0x43],cl
add [eax],ch
cmp [ecx+0x0],al
sbb [eax],al
add eax,0x756e654d
jnc 0x33de6
add [eax-0x53ffbec7],bh
add dword [ebx+0x0],byte +0x4c
mov [ebx+0x0],al
add [eax],eax
add [eax],al
add [eax],al
add [eax-0x80000000],al
add al,[eax]
push es
inc ecx
arpl [ecx+ebp*2+0x6f],si
outsb
add [eax],dl
inc eax
add [eax-0x57010000],ch
add [eax],al
inc dword [ecx]
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax],al
add eax,[eax]
or [ecx+0x75],eax
jz 0x33e80
inc ebx
push dword 0x846b6365
dec ebx
inc ebx
add [ebx],bh
add [eax],al
jmp dword [esp+edx*4+0x43]
add [ecx],al
add [eax],al
add [eax],al
add [eax],al
add byte [edx],0x0
add [eax],al
add al,0x0
or eax,[ecx+0x75]
jz 0x33ea4
dec eax
outsd
jz 0x33ea4
gs jns 0x33eaf
test [ebx+0x43],cl
add [eax+eax],bh
add bh,bh
loopne 0x33ddb
inc ebx
add [ecx],al
add [eax],al
add [eax],al
add [eax],al
add byte [edx],0x0
add [eax],al
add eax,0x75411100
jz 0x33eca
dec esp
imul ebp,[esi+0x65],dword 0x75646552
arpl [ecx+ebp*2+0x6f],si
outsb
add ah,bh
inc ecx
add [eax+ecx*4],ah
inc ebx
add [eax+ecx*4+0x10043],bh
add [eax],al
add [eax],al
add [eax-0x80000000],al
push es
add [esi],al
inc edx
imul esi,[ebp+ebp*2+0x61],dword 0x43499870
add [eax+0x0],cl
add bh,bh
sbb [edx+0x10043],al
add [eax],al
add [eax],al
add [eax+0x0],al
pop es
add [dword 0x61657242],al
imul edx,[eax+edx+0x300040],byte +0x0
jmp dword far [eax]
db 0x82
inc ebx
add [eax],cl
mov eax,[ebx+0x0]
add [eax],al
add [eax-0x80000000],al
or [eax],al
pop es
inc ebx
popad
jo 0x33f3c
imul ebp,[edi+0x6e],dword 0x401000
cmp [eax],al
add bh,bh
pushfd
db 0x82
inc ebx
add [eax],ch
mov eax,[ebx+0x0]
add [eax],al
add [eax+0x0],al
or [eax],eax
pop es
inc ebx
push dword 0x656b6365
fs xor al,0xfd
inc esp
add [eax+eax+0x0],bh
db 0xff
clc
mov [ebx+0x0],es
add [eax],eax
add [eax],al
add [eax],al
add [eax-0x80000000],al
or al,[eax]
or eax,0x4d627553
gs outsb
jnz 0x33f59
insd
popad
gs jnc 0x33f16
adc [eax+0x0],al
cmp al,[eax]
add bh,bh
in al,0x84
inc ebx
add [ecx],al
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax],al
or eax,[eax]
pop es
inc esp
gs popaw
jnz 0x33fa2
jz 0x33f38
adc [eax+0x0],al
cmp [eax],eax
add bh,bh
lock
db 0x82
inc ebx
add [eax-0x75],cl
inc ebx
add [eax],al
add [eax],al
add byte [ecx],0x0
add [eax],al
or al,0x0
pop es
inc ebp
outsb
popad
bound ebp,[ebp+0x64]
push esp
adc [eax+0x0],al
aas
add [eax],al
jmp dword far [eax-0x7d]
inc ebx
add [ecx],al
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax],al
or eax,0x72470a00
outsd
jnz 0x33fe9
dec ecx
outsb
gs js 0x33fdb
and eax,[ecx+0x0]
push esp
add [eax],al
call dword [eax+eax+0x0]
dec dword [eax+0x438b]
add [eax],al
add byte [eax],0x0
add [eax],al
push cs
add [ebx],cl
dec eax
gs insb
jo 0x33fe1
outsd
outsb
jz 0x34007
js 0x34018
xchg eax,esp
adc [eax+0x0],al
pop eax
add [eax],al
call dword far [eax+0x0]
add bh,bh
push dword 0x438b
add [eax],al
add byte [eax],0x0
add [eax+0x4804000f],al
imul ebp,[esi+0x74],dword 0x44fc6c
inc eax
add [eax],al
call dword far [esp+eax*4]
inc ebx
add [eax+0x438b],ch
add [eax],al
cmp bh,0xff
db 0xff
call dword [eax]
add [edx],cl
dec ecx
insd
popad
gs dec ecx
outsb
gs js 0x33fe9
adc [eax+0x0],al
cmp eax,0x94ff0000
mov [ebx+0x0],eax
add [eax],eax
add [eax],al
add [eax],al
add [eax+0x0],al
adc [eax],eax
or [edx+0x61],edx
imul ebp,[fs:edi+0x49],dword 0xb06d6574
and eax,[ecx+0x0]
pushad
add [eax],al
db 0xff
clc
add dword [ebx+0x0],byte -0x38
mov eax,[ebx+0x0]
add [eax],al
add [eax+0x0],al
adc al,[eax]
or [ebx+0x68],dl
outsd
jc 0x340a0
inc ebx
jnz 0x340a3
add [eax],dl
inc eax
add [esi],bh
add [eax],al
dec dword [esp+eax*4]
inc ebx
add al,ch
mov eax,[ebx+0x0]
add [eax],al
add [eax+0x1],al
adc eax,[eax]
pop es
push esi
imul esi,[ebx+0x69],dword 0xc8656c62
and eax,[ecx+0x0]
mov [eax],al
add bh,bh
mov [eax],al
add bh,bh
or [ebx+eax*2+0x0],cl
add byte [eax],0x0
add [eax+0x4f070014],al
outsb
inc ebx
insb
imul esp,[ebx+0x6b],dword 0x434a30
nop
add [eax],al
call dword [eax+0x1ff0000]
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax+0x4f0a0015],al
outsb
inc esp
jc 0x340f4
ja 0x340de
jz 0x340fc
insd
pushfd
dec edx
inc ebx
add [eax-0x67010000],bl
add [eax],al
inc dword [ecx]
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax+0x4f120016],al
outsb
inc ecx
fs jna 0x3411a
outsb
arpl [ebp+0x64],sp
inc esp
jc 0x34121
ja 0x3410b
jz 0x34129
insd
adc al,0x4b
inc ebx
add [eax-0x5f010000],ah
add [eax],al
inc dword [ecx]
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax+0x4f0d0017],al
outsb
dec ebp
gs popad
jnc 0x3415c
jc 0x3414e
dec ecx
jz 0x34151
insd
lea eax,[eax+0x0]
cmp al,0x51
inc ebx
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax+0x51],bh
inc ebx
add [eax+0x4351],dh
add [eax],al
add [eax],al
add [eax],al
add [edx-0x5bffbcaf],cl
push ecx
inc ebx
add [eax+0x0],bl
add [eax],al
sub al,0x37
inc ecx
add [eax],ch
mov ebp,0x3e440041
inc eax
add [esi+esi*4+0x41],ah
add [esi+edi+0x40],cl
add [eax+0x3e],al
inc eax
add [eax-0x5bffbfc5],cl
cmp eax,[eax+0x0]
cld
xchg eax,esi
inc ebx
add [eax+0x55],ah
inc ecx
add [ecx+edi*4],ch
inc ecx
add [esp+edx*2+0x41],bh
add [ecx],bh
inc ebx
add al,bl
mov eax,[0xba140043]
inc ecx
add [ebx+edi*4],cl
inc ecx
add [eax-0x43],al
inc ecx
add [edx+edi*4],ah
inc ecx
add [edx+edi*4],bl
inc ecx
add [eax-0x43],cl
inc ecx
add [eax-0x6a],dl
inc ebx
add [ecx],ah
inc ebx
add [eax-0x69],dl
inc ebx
add [ecx+0x43],dl
add [esi],cl
add [eax],al
add [eax],al
add [ecx],al
add [eax],al
add [eax+edx+0x3c0040],dl
add [eax],al
add al,0x0
std
db 0xff
stc
db 0xff
out dx,eax
db 0xff
out dx,al
push dword [edi+edx*4]
inc ebx
add [edi+edx*4+0x43],bl
add ah,ch
xchg eax,esi
inc ebx
add [ebp+ebx*4+0x43],dh
add [dword 0x6e654d54],al
jnz 0x34136
db 0xc0
mov al,0x51
inc ebx
add [edi],al
add eax,0x6e654d54
jnz 0x341f4
push ecx
inc ebx
add [eax],ch
cmp [ecx+0x0],al
add eax,[eax]
add eax,0x756e654d
jnc 0x341c9
add [eax+0x3400434d],dh
add [eax],al
inc dword [eax]
add [eax],al
add [ecx],al
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax+0x49050002],al
jz 0x3424c
insd
jnc 0x34177
inc eax
add [eax],bh
push edx
inc ebx
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [edx+edx*2+0x43],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
jz 0x34260
inc ebx
add [eax+0x0],ah
add [eax],al
lock push eax
inc ebx
add [eax],ch
mov ebp,0x3e440041
inc eax
add [esi+esi*4+0x41],ah
add [esi+edi+0x40],cl
add [eax+0x3e],al
inc eax
add [eax-0x5bffbfc5],cl
cmp eax,[eax+0x0]
cld
xchg eax,esi
inc ebx
add [eax+0x55],ah
inc ecx
add [ecx+edi*4],ch
inc ecx
add [esp+edx*2+0x41],bh
add [ecx],bh
inc ebx
add al,bl
mov eax,[0xba140043]
inc ecx
add [ebx+edi*4],cl
inc ecx
add [eax-0x43],al
inc ecx
add [edx+edi*4],ah
inc ecx
add [edx+edi*4],bl
inc ecx
add [eax-0x43],cl
inc ecx
add [eax-0x6a],dl
inc ebx
add [ecx],ah
inc ebx
add [edi+0x43],bh
add [esi+0x54090043],bh
dec ebp
popad
imul ebp,[esi+0x4d],dword 0x8b756e65
rol byte [edx+edx*2+0x9070043],byte 0x54
dec ebp
popad
imul ebp,[esi+0x4d],dword 0x38756e65
push edx
inc ebx
add [ecx+edx*2+0xb0043],ch
add eax,0x756e654d
jnc 0x342a8
add ah,cl
dec ebx
inc ebx
add [esi+0x43],dl
add [esi+0x43],ah
add [ecx],al
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax],al
add eax,[eax]
or eax,[ecx+0x75]
jz 0x3432f
dec eax
outsd
jz 0x3432f
gs jns 0x3433a
int3
dec ebx
inc ebx
add [eax-0x5a],bh
inc ebx
add [eax+0x10043a6],cl
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax],al
add al,0x0
adc [ecx+0x75],eax
jz 0x34355
dec esp
imul ebp,[esi+0x65],dword 0x75646552
arpl [ecx+ebp*2+0x6f],si
outsb
add [eax],dl
inc eax
add [eax+eax+0x0],bl
call dword far [esi+0x10043]
add [eax],al
add [eax],al
add [eax+0x0],al
add eax,0x75410900
jz 0x34381
dec ebp
gs jc 0x3437d
and byte [gs:edx],0x41
add [eax],dh
add [eax],al
db 0xff
fsub qword [ebp-0x6197ffbd]
inc ebx
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax+0x42080006],al
imul eax,[ecx+ebp*2+0x4d],dword 0x3465646f
std
inc esp
add [eax+0x0],cl
add bh,bh
pushfd
mov eax,[0x10043]
add [eax],al
add [eax],al
add [eax-0x80000000],al
pop es
add [esi],al
dec ecx
insd
popad
gs jnc 0x3435c
adc [eax+0x0],al
inc eax
add [eax],al
call dword far [eax+0x43]
add [ecx],al
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax],al
or [eax],al
or [edi+0x77],ecx
outsb
gs jc 0x343c0
jc 0x343df
ja 0x34380
adc [eax+0x0],al
inc ecx
add [eax],al
push eax
movsd
inc ebx
add [ecx],al
add [eax],al
add [eax],al
add [eax],al
add byte [ecx],0x0
add [eax],al
or [eax],eax
push cs
push eax
popad
jc 0x34403
outsb
jz 0x343e3
imul eax,[ecx+ebp*2+0x4d],dword 0xd865646f
dec ecx
inc ebx
add [eax+0x0],dl
add bh,bh
push eax
add [eax],al
inc dword [ecx]
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax+0x4f08000a],al
outsb
inc ebx
push dword 0x65676e61
nop
rcl byte [ebx+0x43],1
add [ebx],al
andps xmm2,oword [eax+0x6f]
jo 0x3444c
jo 0x3441a
insb
imul esp,[edi+0x6e],dword 0x746e656d
add [eax],eax
add [eax],al
add [edx],al
add [eax],al
add ah,cl
push ebx
inc ebx
add [esi],al
jo 0x34452
dec esp
gs o16 jz 0x343fd
jo 0x34459
push edx
imul esp,[edi+0x68],dword 0x61700874
inc ebx
gs outsb
jz 0x3446a
jc 0x3440c
dec ebp
gs outsb
jnz 0x3447f
adc [ebx+eax*2+0x0],dl
add ecx,[esp+edx*2]
push esp
jc 0x34477
arpl [ebx+0x42],bp
jnz 0x3448f
jz 0x3448c
outsb
add [eax],eax
add [eax],al
add [ecx],al
add [eax],al
add [esp+edx*2],cl
inc ebx
add [dword 0x69526274],cl
push dword 0x74754274
jz 0x344a7
outsb
or al,0x74
bound ecx,[ebp+0x66]
jz 0x34483
jnz 0x344b7
jz 0x344b4
outsb
add eax,0x756e654d
jnc 0x3449d
push esp
inc ebx
add [ebx],al
andps xmm1,oword [ebp+0x65]
outsb
jnz 0x34499
outsb
imul ebp,[ebp+0x61],dword 0x6e6f6974
jnc 0x34463
add [eax],al
add [eax],al
add al,0x0
add [eax],al
dec esp
push esp
inc ebx
add [dword 0x654c616d],cl
o16 jz 0x344ca
outsd
push edx
imul esp,[edi+0x68],dword 0x616d0d74
push edx
imul esp,[edi+0x68],dword 0x4c6f5474
gs o16 jz 0x34498
insd
popad
push esp
outsd
jo 0x344e5
outsd
inc edx
outsd
jz 0x3450a
outsd
insd
or eax,0x6f42616d
jz 0x34513
outsd
insd
push esp
outsd
push esp
outsd
jo 0x344ad
insd
popad
dec esi
outsd
outsb
gs add eax,0x756e654d
jnc 0x34444
mov eax,0x6004354
push cs
push esp
dec ebp
gs outsb
jnz 0x34501
outsb
imul ebp,[ebp+0x61],dword 0x6e6f6974
add [esp+edx*2+0x43],ecx
add [ebp+0x551c0040],cl
inc ebx
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax+0x55],dh
inc ebx
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax+0x55],ah
inc ebx
add [eax+0x0],bh
add [eax],al
lock push eax
inc ebx
add [eax],ch
mov ebp,0x3e440041
inc eax
add [esi+esi*4+0x41],ah
add [esi+edi+0x40],cl
add [eax+0x3e],al
inc eax
add [eax-0x5bffbfc5],cl
cmp eax,[eax+0x0]
aam 0xad
inc ebx
add [eax+0x55],ah
inc ecx
add [ecx+edi*4],ch
inc ecx
add [esp+edx*2+0x41],bh
add [ecx],bh
inc ebx
add al,bl
mov eax,[0xba140043]
inc ecx
add [ebx+edi*4],cl
inc ecx
add [eax-0x43],al
inc ecx
add [edx+edi*4],ah
inc ecx
add [edx+edi*4],bl
inc ecx
add [eax-0x43],cl
inc ecx
add [eax-0x53],ah
inc ebx
add [ecx],ah
inc ebx
add [eax-0x69],dl
inc ebx
add [ecx+0x43],dl
add [eax],cl
scasb
inc ebx
add ah,al
scasb
inc ebx
add [edx],cl
push esp
push eax
outsd
jo 0x345db
jo 0x345b5
gs outsb
jnz 0x344fc
jo 0x345c3
inc ebx
add [edi],al
or dl,[eax+edx*2+0x6f]
jo 0x345ec
jo 0x345c6
gs outsb
jnz 0x34599
push ebp
inc ebx
add [ecx+edx*2+0x100043],ch
add eax,0x756e654d
jnc 0x3459a
add ah,cl
push ebx
inc ebx
add [eax+0x0],ah
add bh,bh
pushad
add [eax],al
inc dword [ecx]
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax],al
add eax,[eax]
or [ecx+0x6c],eax
imul esp,[edi+0x6e],dword 0x746e656d
int3
dec ebx
inc ebx
add [esi+0x43],dl
add [esi+0x43],ah
add [ecx],al
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax],al
add al,0x0
or eax,[ecx+0x75]
jz 0x34640
dec eax
outsd
jz 0x34640
gs jns 0x3464b
int3
dec ebx
inc ebx
add [eax-0x5a],bh
inc ebx
add [eax+0x10043a6],cl
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax],al
add eax,0x75411100
jz 0x34666
dec esp
imul ebp,[esi+0x65],dword 0x75646552
arpl [ecx+ebp*2+0x6f],si
outsb
add [eax],dl
inc eax
add [ecx+0x0],ah
add bh,bh
popad
add [eax],al
inc dword [ecx]
add [eax],al
add [eax],al
add [eax],al
add byte [ecx],0x0
add [eax],al
push es
add [ecx],cl
inc ecx
jnz 0x34696
outsd
push eax
outsd
jo 0x3469c
jo 0x345a9
and al,[ecx+0x0]
xor [eax],al
add bh,bh
fsub qword [ebp-0x6197ffbd]
inc ebx
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax+0x42080007],al
imul eax,[ecx+ebp*2+0x4d],dword 0x5c65646f
and eax,[ecx+0x0]
sbb al,0xae
inc ebx
add [esi+ebp*4],ah
inc ebx
add [ecx],al
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax],al
or [eax],al
or ecx,[eax+0x65]
insb
jo 0x346ae
outsd
outsb
jz 0x346d4
js 0x346e5
xor al,0xfd
inc esp
add [eax+0x0],cl
add bh,bh
pushfd
mov eax,[0x10043]
add [eax],al
add [eax],al
add [eax-0x80000000],al
or [eax],eax
push es
dec ecx
insd
popad
gs jnc 0x34647
push esp
inc ebx
add [ecx+0x0],ch
add bh,bh
imul eax,[eax],dword 0x1ff00
add [eax],al
add [eax],al
add [eax+0x0],al
or al,[eax]
or eax,0x756e654d
inc ecx
outsb
imul ebp,[ebp+0x61],dword 0x6e6f6974
add [eax],dl
inc eax
add [eax+0x0],al
add bh,bh
pop esp
mov al,[0x10043]
add [eax],al
add [eax],al
add [eax+0x0],al
or eax,[eax]
or [edi+0x77],ecx
outsb
gs jc 0x3471f
jc 0x3473e
ja 0x346df
adc [eax+0x0],al
inc ecx
add [eax],al
push eax
movsd
inc ebx
add [ecx],al
add [eax],al
add [eax],al
add [eax],al
add byte [ecx],0x0
add [eax],al
or al,0x0
push cs
push eax
popad
jc 0x34762
outsb
jz 0x34742
imul eax,[ecx+ebp*2+0x4d],dword 0xc65646f
push esp
inc ebx
add [eax+0x0],ch
add bh,bh
push dword 0x1ff0000
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax],al
or eax,0x72540b00
popad
arpl [ebx+0x42],bp
jnz 0x3479e
jz 0x3479b
outsb
fmul dword [ecx+0x43]
add [eax+0x0],dl
add bh,bh
push eax
add [eax],al
inc dword [ecx]
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax+0x4f08000e],al
outsb
inc ebx
push dword 0x65676e61
enter 0x4123,0x0
jo 0x34756
add bh,bh
jo 0x3475a
add bh,bh
add [eax],eax
add [eax],al
add [eax],al
add [eax-0x80000000],al
sldt [edi]
dec edi
outsb
push eax
outsd
jo 0x347e6
jo 0x346fe
rol al,byte 0x57
inc ebx
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add ah,dl
push edi
inc ebx
add [eax+eax],dl
add [eax],al
dec esp
sub [ecx+0x0],eax
cmp [esi],bh
inc eax
add [esi+edi+0x40],al
add [eax+0x3e],cl
inc eax
add [esi+edi+0x40],cl
add [eax+0x3e],al
inc eax
add [eax-0x5bffbfc5],cl
cmp eax,[eax+0x0]
add al,0x4d
inc ecx
add [esi+ecx*2+0x50e80041],ah
inc ecx
add [eax+0x4d],bl
inc ecx
add al,dl
dec ebp
inc ecx
add al,bl
cmpsd
inc ebx
add [edx],cl
push esp
push eax
outsd
jo 0x3484f
jo 0x34828
imul esi,[ebx+0x74],dword 0x43582c90
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],bh
pop eax
inc ebx
add [eax],cl
add [eax],al
add [ecx+ecx*8],cl
inc ecx
add [eax],bh
ds inc eax
add [esi+edi+0x40],al
add [eax+0x3e],cl
inc eax
add [esi+edi+0x40],cl
add [eax+0x3e],al
inc eax
add [eax-0x5bffbfc5],cl
cmp eax,[eax+0x0]
enter 0x41c9,0x0
sub al,0xca
inc ecx
add [edx+ecx*8],cl
inc ecx
add al,bh
leave
inc ecx
add [esi],cl
push esp
dec ebp
gs outsb
jnz 0x34888
jz 0x348a6
insd
push ebx
jz 0x348a6
arpl [ebx-0x70],bp
db 0xff
db 0xff
db 0xff
jmp dword [eax+eax]
add [eax],al
xor [edx],esi
xor esi,[esi+0x39383736]
xor [ecx+0x42],al
inc ebx
inc esp
inc ebp
inc esi
inc edi
dec eax
dec ecx
dec edx
dec ebx
dec esp
dec ebp
dec esi
dec edi
push eax
push ecx
push edx
push ebx
push esp
push ebp
push esi
push edi
pop eax
pop ecx
pop edx
add [eax],al
add [eax],al
push ebx
push esi
push edi
mov edi,eax
xor esi,esi
mov eax,edi
call dword 0x3e7cc
mov ebx,eax
test ebx,ebx
jz 0x348a3
push byte +0x0
push byte +0x0
mov edx,edi
xor ecx,ecx
mov eax,ebx
call dword 0x45158
mov esi,eax
test esi,esi
jnz 0x348a3
mov esi,ebx
mov eax,esi
pop edi
pop esi
pop ebx
ret
lea eax,[eax+0x0]
mov eax,[esp+0x8]
ret
lea eax,[eax+0x0]
push ebx
mov ebx,eax
call dword 0x348ac
push eax
mov ecx,ebx
mov dl,0x1
mov eax,[0x434940]
call dword 0xb50c
jmp dword 0x3464
pop ebx
ret
mov eax,eax
push ebp
mov ebp,esp
push ecx
mov [ebp-0x3],dl
mov [ebp-0x2],ax
xor eax,eax
cmp byte [ebp-0x1],0x0
jnz 0x34909
movzx eax,word [ebp-0x2]
test byte [ebp-0x3],0x1
jz 0x348f5
add ax,0x2000
test byte [ebp-0x3],0x4
jz 0x348ff
add ax,0x4000
test byte [ebp-0x3],0x2
jz 0x34909
add ax,0x8000
pop ecx
pop ebp
ret
push ebp
mov ebp,esp
add esp,0xfffffefc
push ebx
mov ebx,edx
mov [ebp-0x2],ax
mov eax,ebx
call dword 0x3a1c
push byte +0x0
movzx eax,byte [ebp-0x2]
push eax
call dword 0x61d8
shl eax,byte 0x10
test eax,eax
jz 0x3495a
push dword 0x100
lea edx,[ebp-0x102]
push edx
push eax
call dword 0x6018
mov eax,ebx
lea edx,[ebp-0x102]
mov ecx,0x100
call dword 0x3c8c
pop ebx
mov esp,ebp
pop ebp
ret
nop
push ebp
mov ebp,esp
push byte +0x0
push byte +0x0
push byte +0x0
push ebx
push esi
mov esi,edx
mov [ebp-0x2],ax
xor eax,eax
push ebp
push dword 0x435b3f
push dword [fs:eax]
mov [fs:eax],esp
movzx ebx,byte [ebp-0x2]
movzx eax,bl
cmp eax,byte +0x2d
jnl 0x349b2
add eax,byte -0x8
sub eax,byte +0x2
jc 0x349fb
sub eax,byte +0x3
jz 0x34a12
sub eax,byte +0xe
jz dword 0x34a25
add eax,byte -0x5
sub eax,byte +0x9
jc dword 0x34a38
jmp dword 0x34abf
cmp eax,byte +0x41
jnl 0x349d2
add eax,byte -0x2d
sub eax,byte +0x2
jc dword 0x34a4f
dec eax
sub eax,byte +0xa
jc dword 0x34a66
jmp dword 0x34abf
add eax,byte -0x41
sub eax,byte +0x1a
jc dword 0x34a79
add eax,byte -0x5
sub eax,byte +0xa
jc dword 0x34a8c
add eax,byte -0x6
sub eax,byte +0x18
jc dword 0x34a9f
jmp dword 0x34abf
lea eax,[ebp-0x8]
movzx edx,bl
mov edx,[edx*4+0x4684a8]
call dword 0x3ab4
jmp dword 0x34acb
lea eax,[ebp-0x8]
mov edx,[dword 0x4684d4]
call dword 0x3ab4
jmp dword 0x34acb
lea eax,[ebp-0x8]
mov edx,[dword 0x4684d0]
call dword 0x3ab4
jmp dword 0x34acb
lea eax,[ebp-0x8]
add bl,0x4
movzx edx,bl
mov edx,[edx*4+0x468448]
call dword 0x3ab4
jmp short 0x34acb
lea eax,[ebp-0x8]
add bl,0xd
movzx edx,bl
mov edx,[edx*4+0x468414]
call dword 0x3ab4
jmp short 0x34acb
lea eax,[ebp-0x8]
movzx edx,bl
sub edx,byte +0x30
add edx,byte +0x30
call dword 0x3c04
jmp short 0x34acb
lea eax,[ebp-0x8]
movzx edx,bl
sub edx,byte +0x41
add edx,byte +0x41
call dword 0x3c04
jmp short 0x34acb
lea eax,[ebp-0x8]
movzx edx,bl
sub edx,byte +0x60
add edx,byte +0x30
call dword 0x3c04
jmp short 0x34acb
movzx eax,bl
sub eax,byte +0x6f
lea edx,[ebp-0xc]
call dword 0x7bfc
mov ecx,[ebp-0xc]
lea eax,[ebp-0x8]
mov edx,0x435b54
call dword 0x3d34
jmp short 0x34acb
lea edx,[ebp-0x8]
movzx eax,word [ebp-0x2]
call dword 0x3490c
cmp dword [ebp-0x8],byte +0x0
jz 0x34b1d
mov eax,esi
call dword 0x3a1c
test byte [ebp-0x1],0x20
jz 0x34aeb
mov eax,esi
mov edx,[dword 0x468504]
call dword 0x3ce8
test byte [ebp-0x1],0x40
jz 0x34afe
mov eax,esi
mov edx,[dword 0x468508]
call dword 0x3ce8
test byte [ebp-0x1],0x80
jz 0x34b11
mov eax,esi
mov edx,[dword 0x46850c]
call dword 0x3ce8
mov eax,esi
mov edx,[ebp-0x8]
call dword 0x3ce8
jmp short 0x34b24
mov eax,esi
call dword 0x3a1c
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x435b46
lea eax,[ebp-0xc]
mov edx,0x2
call dword 0x3a40
ret
jmp dword 0x3384
jmp short 0x34b31
pop esi
pop ebx
mov esp,ebp
pop ebp
ret
db 0xff
db 0xff
db 0xff
inc dword [ecx]
add [eax],al
add [esi+0x0],al
add [eax],al
push ebp
mov ebp,esp
add esp,byte -0xc
push ebx
push esi
mov ebx,edx
mov [ebp-0x4],eax
mov byte [ebp-0x5],0x0
mov eax,[ebp-0x4]
mov eax,[eax]
mov [ebp-0xc],eax
mov eax,[ebp-0xc]
test eax,eax
jz 0x34b7d
sub eax,byte +0x4
mov eax,[eax]
mov edx,ebx
test edx,edx
jz 0x34b88
sub edx,byte +0x4
mov edx,[edx]
cmp edx,eax
jg 0x34bd4
mov esi,ebx
test esi,esi
jz 0x34b97
sub esi,byte +0x4
mov esi,[esi]
mov eax,ebx
call dword 0x3eac
push eax
mov eax,[ebp-0x4]
mov eax,[eax]
call dword 0x3eac
mov ecx,esi
pop edx
call dword 0x78f8
test eax,eax
jnz 0x34bd4
mov byte [ebp-0x5],0x1
mov eax,ebx
test eax,eax
jz 0x34bc4
sub eax,byte +0x4
mov eax,[eax]
mov edx,[ebp-0x4]
mov ecx,eax
mov eax,0x1
xchg eax,edx
call dword 0x3f54
movzx eax,byte [ebp-0x5]
pop esi
pop ebx
mov esp,ebp
pop ebp
ret
mov eax,eax
push ebp
mov ebp,esp
add esp,byte -0x10
push ebx
push esi
push edi
xor edx,edx
mov [ebp-0x10],edx
mov [ebp-0x4],eax
mov eax,[ebp-0x4]
call dword 0x3e9c
xor eax,eax
push ebp
push dword 0x435d03
push dword [fs:eax]
mov [fs:eax],esp
mov word [ebp-0x6],0x0
mov word [ebp-0x8],0x0
lea eax,[ebp-0x4]
mov edx,[dword 0x468504]
call dword 0x34b58
test al,al
jz 0x34c2d
or word [ebp-0x8],0x2000
jmp short 0x34c13
lea eax,[ebp-0x4]
mov edx,0x435d20
call dword 0x34b58
test al,al
jz 0x34c46
or word [ebp-0x8],0x4000
jmp short 0x34c13
lea eax,[ebp-0x4]
mov edx,[dword 0x468508]
call dword 0x34b58
test al,al
jz 0x34c60
or word [ebp-0x8],0x4000
jmp short 0x34c13
lea eax,[ebp-0x4]
mov edx,[dword 0x46850c]
call dword 0x34b58
test al,al
jz 0x34c7a
or word [ebp-0x8],0x8000
jmp short 0x34c13
cmp dword [ebp-0x4],byte +0x0
jz 0x34ce5
mov di,0x8
lea edx,[ebp-0x10]
mov eax,edi
call dword 0x34960
mov eax,[ebp-0x10]
mov [ebp-0xc],eax
mov ebx,[ebp-0x4]
test ebx,ebx
jz 0x34ca0
sub ebx,byte +0x4
mov ebx,[ebx]
mov esi,[ebp-0xc]
test esi,esi
jz 0x34cac
sub esi,byte +0x4
mov esi,[esi]
push esi
mov eax,[ebp-0xc]
call dword 0x3eac
push eax
push ebx
mov eax,[ebp-0x4]
call dword 0x3eac
push eax
push byte +0x1
push dword 0x400
call dword 0x5a78
sub eax,byte +0x2
test eax,eax
jnz 0x34cdd
or di,[ebp-0x8]
mov [ebp-0x6],di
jmp short 0x34ce5
inc edi
cmp di,0x256
jnz 0x34c84
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x435d0a
lea eax,[ebp-0x10]
call dword 0x3a1c
lea eax,[ebp-0x4]
call dword 0x3a1c
ret
jmp dword 0x3384
jmp short 0x34cf2
movzx eax,word [ebp-0x6]
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret
add [eax],al
add bh,bh
db 0xff
db 0xff
inc dword [ecx]
add [eax],al
add [esi+0x0],bl
add [eax],al
push ebx
mov eax,[0x46dbf8]
call dword 0x143d8
mov ebx,eax
movzx edx,bx
mov cl,0x1
mov eax,[0x46dbf8]
call dword 0x143ac
mov eax,ebx
pop ebx
ret
push ebp
mov ebp,esp
add esp,byte -0xc
push ebx
push esi
mov [ebp-0x8],ecx
mov esi,edx
mov ebx,eax
test esi,esi
jz 0x34d9c
mov byte [ebp-0x9],0x0
jmp short 0x34d8b
mov edx,[ebx]
mov eax,esi
call dword 0x373d4
mov [ebp-0x4],eax
mov eax,[ebp-0x4]
movzx eax,byte [eax+0x3f]
mov edx,[ebp+0x8]
cmp al,[edx-0x1]
ja 0x34d9c
mov eax,[ebp-0x4]
mov edx,[ebp+0x8]
push dword [edx]
call dword [ebp-0x8]
add esp,byte +0x4
mov [ebp-0x9],al
inc dword [ebx]
cmp byte [ebp-0x9],0x0
jnz 0x34d9c
mov eax,esi
call dword 0x373c4
cmp eax,[ebx]
jg 0x34d5d
movzx eax,byte [ebp-0x9]
pop esi
pop ebx
mov esp,ebp
pop ebp
ret
mov eax,eax
push ebp
mov ebp,esp
add esp,byte -0x18
push ebx
push esi
push edi
mov [ebp-0xc],ecx
mov edi,edx
mov [ebp-0x8],eax
xor eax,eax
mov [ebp-0x10],eax
xor eax,eax
mov [ebp-0x14],eax
xor ebx,ebx
xor esi,esi
test edi,edi
jz 0x34dd4
mov eax,edi
call dword 0x373c4
mov ebx,eax
cmp dword [ebp-0xc],byte +0x0
jz 0x34de4
mov eax,[ebp-0xc]
call dword 0x373c4
mov esi,eax
mov byte [ebp-0x16],0x0
jmp dword 0x34e94
mov byte [ebp-0x1],0xff
mov byte [ebp-0x15],0xff
cmp ebx,[ebp-0x10]
jng 0x34e0b
mov edx,[ebp-0x10]
mov eax,edi
call dword 0x373d4
movzx eax,byte [eax+0x3f]
mov [ebp-0x1],al
cmp esi,[ebp-0x14]
jng 0x34e22
mov edx,[ebp-0x14]
mov eax,[ebp-0xc]
call dword 0x373d4
movzx eax,byte [eax+0x3f]
mov [ebp-0x15],al
movzx eax,byte [ebp-0x1]
cmp al,[ebp-0x15]
ja 0x34e3f
push ebp
lea eax,[ebp-0x10]
mov ecx,[ebp-0x8]
mov edx,edi
call dword 0x34d44
pop ecx
mov [ebp-0x16],al
jmp short 0x34e5e
movzx eax,byte [ebp-0x15]
mov [ebp-0x1],al
push ebp
lea eax,[ebp-0x14]
mov ecx,[ebp-0x8]
mov edx,[ebp-0xc]
call dword 0x34d44
pop ecx
mov [ebp-0x16],al
jmp short 0x34e5e
inc dword [ebp-0x10]
cmp ebx,[ebp-0x10]
jng 0x34e7b
mov edx,[ebp-0x10]
mov eax,edi
call dword 0x373d4
movzx eax,byte [eax+0x3f]
cmp al,[ebp-0x1]
jna 0x34e5b
jmp short 0x34e7b
inc dword [ebp-0x14]
cmp esi,[ebp-0x14]
jng 0x34e94
mov edx,[ebp-0x14]
mov eax,[ebp-0xc]
call dword 0x373d4
movzx eax,byte [eax+0x3f]
cmp al,[ebp-0x1]
jna 0x34e78
cmp byte [ebp-0x16],0x0
jnz 0x34eac
cmp ebx,[ebp-0x10]
jg dword 0x34ded
cmp esi,[ebp-0x14]
jg dword 0x34ded
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret
nop
push ebx
push esi
mov esi,edx
mov ebx,eax
mov eax,esi
mov edx,[dword 0x434ccc]
call dword 0x2da0
mov [ebx+0x18],eax
pop esi
pop ebx
ret
lea eax,[eax+0x0]
push ebx
mov ebx,eax
mov eax,[ebx+0x10]
mov edx,[dword 0x45160c]
call dword 0x2da0
movzx eax,byte [eax+0x95]
mov edx,[ebx+0x18]
cmp al,[edx+0xa8]
setz al
pop ebx
ret
mov eax,eax
push ebx
mov ebx,eax
mov eax,ebx
call dword 0x50e04
test al,al
jz 0x34f26
mov eax,[ebx+0x10]
mov edx,[dword 0x45160c]
call dword 0x2da0
mov edx,[eax+0x64]
mov eax,[ebx+0x18]
mov eax,[eax+0x30]
call dword 0x3a210
test al,al
jnz 0x34f2a
xor eax,eax
pop ebx
ret
mov al,0x1
pop ebx
ret
mov eax,eax
push ebx
mov ebx,eax
mov eax,ebx
call dword 0x50e18
test al,al
jz 0x34f58
mov eax,[ebx+0x10]
mov edx,[dword 0x45160c]
call dword 0x2da0
movzx eax,byte [eax+0x69]
mov edx,[ebx+0x18]
cmp al,[edx+0x38]
jz 0x34f5c
xor eax,eax
pop ebx
ret
mov al,0x1
pop ebx
ret
push ebx
mov ebx,eax
mov eax,ebx
call dword 0x50e2c
test al,al
jz 0x34f88
mov eax,[ebx+0x10]
mov edx,[dword 0x45160c]
call dword 0x2da0
movzx eax,byte [eax+0x6a]
mov edx,[ebx+0x18]
cmp al,[edx+0x39]
jz 0x34f8c
xor eax,eax
pop ebx
ret
mov al,0x1
pop ebx
ret
push ebx
mov ebx,eax
mov eax,ebx
call dword 0x50e54
test al,al
jz 0x34fb7
mov eax,[ebx+0x10]
mov edx,[dword 0x45160c]
call dword 0x2da0
mov eax,[eax+0x74]
mov edx,[ebx+0x18]
cmp eax,[edx+0x54]
jz 0x34fbb
xor eax,eax
pop ebx
ret
mov al,0x1
pop ebx
ret
nop
push ebx
mov ebx,eax
mov eax,ebx
call dword 0x50e7c
test al,al
jz 0x34fec
mov eax,[ebx+0x10]
mov edx,[dword 0x45160c]
call dword 0x2da0
mov edx,[eax+0x7c]
mov eax,[ebx+0x18]
mov eax,[eax+0x58]
call dword 0x3e44
jz 0x34ff0
xor eax,eax
pop ebx
ret
mov al,0x1
pop ebx
ret
push ebx
mov ebx,eax
mov eax,[ebx+0x18]
cmp byte [eax+0x3d],0x0
jz 0x35027
mov eax,ebx
call dword 0x50e40
test al,al
jz 0x35027
mov eax,[ebx+0x10]
mov edx,[dword 0x45160c]
call dword 0x2da0
mov eax,[eax+0x6c]
mov edx,[ebx+0x18]
movzx edx,byte [edx+0x3f]
cmp eax,edx
jz 0x3502b
xor eax,eax
pop ebx
ret
mov al,0x1
pop ebx
ret
nop
push ebx
mov ebx,eax
mov eax,ebx
call dword 0x50e90
test al,al
jz 0x3505a
mov eax,[ebx+0x10]
mov edx,[dword 0x45160c]
call dword 0x2da0
mov eax,[eax+0x80]
mov edx,[ebx+0x18]
cmp eax,[edx+0x40]
jz 0x3505e
xor eax,eax
pop ebx
ret
mov al,0x1
pop ebx
ret
mov eax,eax
push ebx
mov ebx,eax
mov eax,ebx
call dword 0x50ea4
test al,al
jz 0x35090
mov eax,[ebx+0x10]
mov edx,[dword 0x45160c]
call dword 0x2da0
movzx eax,word [eax+0x84]
mov edx,[ebx+0x18]
cmp ax,[edx+0x60]
jz 0x35094
xor eax,eax
pop ebx
ret
mov al,0x1
pop ebx
ret
push ebx
mov ebx,eax
mov eax,ebx
call dword 0x50eb8
test al,al
jz 0x350c3
mov eax,[ebx+0x10]
mov edx,[dword 0x45160c]
call dword 0x2da0
movzx eax,byte [eax+0x86]
mov edx,[ebx+0x18]
cmp al,[edx+0x3e]
jz 0x350c7
xor eax,eax
pop ebx
ret
mov al,0x1
pop ebx
ret
nop
push ebx
mov ebx,eax
mov eax,ebx
call dword 0x1aea8
test al,al
jz 0x350eb
mov eax,[ebx+0x18]
mov eax,[eax+0x88]
mov edx,[ebx+0x10]
cmp eax,[edx+0x40]
jz 0x350ef
xor eax,eax
pop ebx
ret
mov al,0x1
pop ebx
ret
nop
push ebx
push esi
mov ebx,edx
mov esi,eax
mov eax,esi
mov edx,[eax]
call dword [edx+0x78]
test al,al
jz 0x3510e
mov eax,[esi+0x18]
mov [eax+0xa8],bl
pop esi
pop ebx
ret
lea eax,[eax+0x0]
push ebx
push esi
mov esi,edx
mov ebx,eax
mov eax,ebx
mov edx,[eax]
call dword [edx+0x20]
test al,al
jz 0x3512f
mov edx,esi
mov eax,[ebx+0x18]
call dword 0x37228
pop esi
pop ebx
ret
mov eax,eax
push ebx
push esi
mov ebx,edx
mov esi,eax
mov eax,esi
mov edx,[eax]
call dword [edx+0x24]
test al,al
jz 0x3514f
mov edx,ebx
mov eax,[esi+0x18]
call dword 0x3729c
pop esi
pop ebx
ret
mov eax,eax
push ebx
push esi
mov ebx,edx
mov esi,eax
mov eax,esi
mov edx,[eax]
call dword [edx+0x28]
test al,al
jz 0x3516f
mov edx,ebx
mov eax,[esi+0x18]
call dword 0x372f0
pop esi
pop ebx
ret
mov eax,eax
push ebx
push esi
mov esi,edx
mov ebx,eax
mov eax,ebx
mov edx,[eax]
call dword [edx+0x30]
test al,al
jz 0x3518b
mov eax,[ebx+0x18]
mov [eax+0x54],esi
pop esi
pop ebx
ret
mov eax,eax
push ebx
push esi
mov esi,edx
mov ebx,eax
mov eax,ebx
mov edx,[eax]
call dword [edx+0x38]
test al,al
jz 0x351ae
mov eax,[ebx+0x18]
add eax,byte +0x58
mov edx,esi
call dword 0x3a70
pop esi
pop ebx
ret
lea eax,[eax+0x0]
push ebx
push esi
mov esi,edx
mov ebx,eax
mov eax,ebx
mov edx,[eax]
call dword [edx+0x3c]
test al,al
jz 0x351cf
mov edx,esi
mov eax,[ebx+0x18]
call dword 0x3741c
pop esi
pop ebx
ret
mov eax,eax
push ebx
push esi
mov esi,edx
mov ebx,eax
mov eax,ebx
mov edx,[eax]
call dword [edx+0x40]
test al,al
jz 0x351ef
mov edx,esi
mov eax,[ebx+0x18]
call dword 0x373f8
pop esi
pop ebx
ret
mov eax,eax
push ebx
push esi
mov ebx,edx
mov esi,eax
mov eax,esi
mov edx,[eax]
call dword [edx+0x44]
test al,al
jz 0x3520f
mov edx,ebx
mov eax,[esi+0x18]
call dword 0x3740c
pop esi
pop ebx
ret
mov eax,eax
push ebp
mov ebp,esp
push ebx
mov ebx,eax
mov eax,ebx
mov edx,[eax]
call dword [edx+0x8]
test al,al
jz 0x3523a
mov eax,[ebx+0x18]
mov edx,[ebp+0x8]
mov [eax+0x88],edx
mov edx,[ebp+0xc]
mov [eax+0x8c],edx
pop ebx
pop ebp
ret 0x8
nop
push ebp
mov ebp,esp
push ecx
push ebx
push esi
test dl,dl
jz 0x35252
add esp,byte -0x10
call dword 0x2f14
mov [ebp-0x1],dl
mov ebx,eax
xor edx,edx
mov eax,ebx
call dword 0x1a59c
mov byte [ebx+0x3e],0x1
mov byte [ebx+0x39],0x1
mov byte [ebx+0x3b],0x2
mov byte [ebx+0x3c],0x2
call dword 0x34d24
mov [ebx+0x50],ax
mov dword [ebx+0x40],0xffffffff
mov dl,0x1
mov eax,[0x44fc0c]
call dword 0x2bc0
mov esi,eax
mov [ebx+0x78],esi
mov [esi+0xc],ebx
mov dword [esi+0x8],0x438d34
mov eax,ebx
cmp byte [ebp-0x1],0x0
jz 0x352b2
call dword 0x2f6c
pop dword [dword fs:0x0]
add esp,byte +0xc
mov eax,ebx
pop esi
pop ebx
pop ecx
pop ebp
ret
lea eax,[eax+0x0]
push ebx
push esi
call dword 0x2fbc
mov ebx,edx
mov esi,eax
mov edx,esi
mov eax,[0x46dbf0]
call dword 0x39f94
mov eax,[esi+0x64]
test eax,eax
jz 0x352f6
mov edx,esi
call dword 0x37760
xor eax,eax
mov [esi+0x64],eax
jmp short 0x352f6
xor edx,edx
mov eax,esi
call dword 0x373d4
call dword 0x2bf0
mov eax,esi
call dword 0x373c4
test eax,eax
jg 0x352e8
cmp dword [esi+0x34],byte +0x0
jz 0x35319
xor edx,edx
mov eax,esi
call dword 0x356cc
mov eax,[esi+0x34]
push eax
call dword 0x5ef8
mov eax,[esi+0x5c]
call dword 0x2bf0
lea eax,[esi+0x44]
call dword 0xd0e8
lea eax,[esi+0x78]
call dword 0xd0e8
movzx eax,word [esi+0x50]
test ax,ax
jz 0x35349
movzx edx,ax
xor ecx,ecx
mov eax,[0x46dbf8]
call dword 0x143ac
mov eax,[esi+0x4c]
test eax,eax
jz 0x35355
call dword 0x2bf0
mov edx,ebx
and dl,0xfc
mov eax,esi
call dword 0x1a5e8
test bl,bl
jng 0x3536c
mov eax,esi
call dword 0x2f64
pop esi
pop ebx
ret
nop
push ebp
mov ebp,esp
add esp,byte -0x3c
push ebx
push esi
push edi
xor ebx,ebx
mov [ebp-0x3c],ebx
mov [ebp-0x4],ebx
mov [ebp-0x5],cl
mov edi,edx
mov ebx,eax
xor eax,eax
push ebp
push dword 0x4365c1
push dword [fs:eax]
mov [fs:eax],esp
cmp byte [ebx+0x3e],0x0
jz dword 0x355a3
lea eax,[ebp-0x4]
mov edx,[ebx+0x30]
call dword 0x3ab4
mov eax,ebx
call dword 0x373c4
test eax,eax
jng 0x353c2
mov eax,ebx
call dword 0x35874
mov [ebp-0x22],eax
jmp short 0x3540c
cmp word [ebx+0x60],byte +0x0
jz 0x3540c
mov esi,[ebx+0x64]
test esi,esi
jz 0x353e8
cmp dword [esi+0x64],byte +0x0
jnz 0x353e8
mov eax,[esi+0x4]
mov edx,[dword 0x4351ec]
call dword 0x2d7c
test al,al
jnz 0x3540c
push dword [ebp-0x4]
push dword 0x4365d8
lea edx,[ebp-0x3c]
movzx eax,word [ebx+0x60]
call dword 0x34960
push dword [ebp-0x3c]
lea eax,[ebp-0x4]
mov edx,0x3
call dword 0x3db0
call dword 0x5b70
and eax,0xff
cmp ax,byte +0x4
jc dword 0x3551f
mov dword [ebp-0x36],0x2c
mov dword [ebp-0x32],0x3f
mov eax,ebx
call dword 0x37984
mov esi,eax
test esi,esi
jz 0x3544c
cmp byte [esi+0x40],0x0
jnz 0x35462
mov eax,ebx
call dword 0x36f98
test eax,eax
jnz 0x35462
cmp dword [ebx+0x4c],byte +0x0
jz 0x3545e
mov eax,[ebx+0x4c]
mov edx,[eax]
call dword [edx+0x1c]
test al,al
jz 0x35462
xor eax,eax
jmp short 0x35464
mov al,0x1
mov [ebp-0x6],al
mov eax,[ebx+0x30]
mov edx,0x4365e4
call dword 0x3e44
setz al
and eax,byte +0x7f
mov eax,[eax*4+0x468560]
movzx edx,byte [ebx+0x3d]
mov edx,[edx*4+0x468558]
movzx ecx,byte [ebx+0x48]
or edx,[ecx*4+0x468534]
or eax,edx
movzx edx,byte [ebp-0x5]
or eax,[edx*4+0x468568]
movzx edx,byte [ebp-0x6]
or eax,[edx*4+0x468570]
mov [ebp-0x2e],eax
movzx eax,byte [ebx+0x38]
mov eax,[eax*4+0x468540]
movzx edx,byte [ebx+0x39]
or eax,[edx*4+0x468550]
movzx edx,byte [ebx+0x3a]
or eax,[edx*4+0x468548]
mov [ebp-0x2a],eax
movzx eax,word [ebx+0x50]
mov [ebp-0x26],eax
xor eax,eax
mov [ebp-0x22],eax
xor eax,eax
mov [ebp-0x1e],eax
xor eax,eax
mov [ebp-0x1a],eax
mov eax,[ebp-0x4]
call dword 0x3eac
mov [ebp-0x12],eax
mov eax,ebx
call dword 0x373c4
test eax,eax
jng 0x3550c
mov eax,ebx
call dword 0x35874
mov [ebp-0x22],eax
lea eax,[ebp-0x36]
push eax
push byte -0x1
push byte -0x1
push edi
call dword 0x6140
jmp dword 0x355a3
mov eax,[ebx+0x30]
mov edx,0x4365e4
call dword 0x3e44
setz al
and eax,byte +0x7f
mov esi,[eax*4+0x46852c]
movzx eax,byte [ebx+0x48]
mov eax,[eax*4+0x468520]
movzx edx,byte [ebx+0x38]
or eax,[edx*4+0x468510]
movzx edx,byte [ebx+0x39]
or eax,[edx*4+0x468518]
or esi,eax
or esi,0x400
mov eax,ebx
call dword 0x373c4
test eax,eax
jng 0x3558c
mov eax,[ebx+0x30]
call dword 0x3eac
push eax
mov eax,ebx
call dword 0x35874
push eax
or esi,byte +0x10
push esi
push byte -0x1
push edi
call dword 0x6138
jmp short 0x355a3
mov eax,[ebp-0x4]
call dword 0x3eac
push eax
movzx eax,word [ebx+0x50]
push eax
push esi
push byte -0x1
push edi
call dword 0x6138
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x4365c8
lea eax,[ebp-0x3c]
call dword 0x3a1c
lea eax,[ebp-0x4]
call dword 0x3a1c
ret
jmp dword 0x3384
jmp short 0x355b0
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret
add bh,bh
db 0xff
db 0xff
inc dword [ecx]
add [eax],al
add [ecx],cl
add [eax],al
add bh,bh
db 0xff
db 0xff
inc dword [ecx]
add [eax],al
add [dword 0x55000000],ch
mov ebp,esp
mov edx,[ebp+0x8]
movzx ecx,byte [edx-0x5]
mov edx,[ebp+0x8]
mov edx,[edx-0x4]
mov edx,[edx+0x34]
call dword 0x35370
xor eax,eax
pop ebp
ret
push ebp
mov ebp,esp
add esp,byte -0x8
push ebx
mov [ebp-0x4],eax
mov eax,[ebp-0x4]
mov ebx,[eax+0x70]
test ebx,ebx
jz 0x3563d
mov eax,ebx
mov edx,[dword 0x4351ec]
call dword 0x2d7c
test al,al
jz 0x3563d
xor edx,edx
mov eax,[ebp-0x4]
call dword 0x37fb0
xor edx,edx
mov eax,[ebp-0x4]
call dword 0x38498
mov eax,[ebp-0x4]
mov ebx,[eax+0x70]
test ebx,ebx
jz 0x35652
mov eax,ebx
call dword 0x39204
test al,al
jnz 0x35656
xor eax,eax
jmp short 0x35658
mov al,0x1
mov [ebp-0x5],al
mov eax,[ebp-0x4]
mov edx,[eax+0x68]
mov eax,0x4365e8
mov ecx,[ebp-0x4]
call dword 0x34da8
pop ebx
pop ecx
pop ecx
pop ebp
ret
nop
push ebp
mov ebp,esp
push byte +0x0
push ebx
push esi
mov esi,edx
mov ebx,eax
xor eax,eax
push ebp
push dword 0x4366be
push dword [fs:eax]
mov [fs:eax],esp
lea edx,[ebp-0x4]
mov eax,esi
call dword 0x19654
mov eax,[ebp-0x4]
call dword 0x34be0
mov edx,eax
mov eax,ebx
call dword 0x373f8
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x4366c5
lea eax,[ebp-0x4]
call dword 0x3a1c
ret
jmp dword 0x3384
jmp short 0x356b5
pop esi
pop ebx
pop ecx
pop ebp
ret
mov eax,eax
push ebx
mov ebx,eax
test edx,edx
jz 0x356d9
test byte [edx+0x1c],0x8
jnz 0x35703
mov eax,[ebx+0x68]
cmp edx,eax
jz 0x35703
test eax,eax
jz 0x356e9
xor ecx,ecx
mov [eax+0x6c],ecx
mov eax,edx
mov [ebx+0x68],eax
test eax,eax
jz 0x356fc
mov [eax+0x6c],ebx
mov edx,ebx
call dword 0x1a670
mov eax,ebx
call dword 0x35744
pop ebx
ret
lea eax,[eax+0x0]
push ebx
push esi
mov ebx,eax
mov eax,ebx
call dword 0x1aa04
mov eax,ebx
call dword 0x373ac
test eax,eax
jz 0x35734
mov eax,ebx
call dword 0x373ac
mov edx,eax
mov cl,0x1
mov eax,ebx
mov si,0xffef
call dword 0x2dec
cmp byte [ebx+0x74],0x0
jz 0x35741
mov eax,ebx
call dword 0x35744
pop esi
pop ebx
ret
push ebx
push esi
push edi
push ebp
mov ebp,eax
test byte [ebp+0x1c],0x8
jnz dword 0x3580d
test byte [ebp+0x1c],0x2
jz 0x35763
mov byte [ebp+0x74],0x1
jmp dword 0x3580d
mov eax,[ebp+0x6c]
test eax,eax
jz 0x35774
call dword 0x35744
jmp dword 0x3580d
mov eax,ebp
call dword 0x35874
push eax
call dword 0x6058
mov esi,eax
test esi,esi
setz bl
test esi,esi
jng 0x357c0
push dword 0x400
mov edi,esi
dec edi
push edi
mov eax,ebp
call dword 0x35874
push eax
call dword 0x6070
test al,0x4
jnz 0x357bb
push dword 0x400
push edi
mov eax,ebp
call dword 0x35874
push eax
call dword 0x6258
mov bl,0x1
dec esi
test esi,esi
jg 0x3578c
test bl,bl
jz 0x3580d
cmp dword [ebp+0x64],byte +0x0
jnz 0x357fd
mov eax,[ebp+0x70]
mov edx,[dword 0x4351ec]
call dword 0x2d7c
test al,al
jz 0x357fd
mov eax,ebp
call dword 0x35874
push eax
call dword 0x6058
test eax,eax
jnz 0x357fd
mov eax,[ebp+0x34]
push eax
call dword 0x5ef8
xor eax,eax
mov [ebp+0x34],eax
jmp short 0x35804
mov eax,ebp
call dword 0x35604
xor edx,edx
mov eax,ebp
mov ecx,[eax]
call dword [ecx+0x3c]
pop ebp
pop edi
pop esi
pop ebx
ret
mov eax,eax
push ebx
push esi
push edi
push ebp
push ecx
mov ebx,ecx
mov [esp],edx
mov edi,eax
mov eax,edi
call dword 0x373c4
mov esi,eax
dec esi
test esi,esi
jl 0x3586e
inc esi
xor ebp,ebp
cmp ebp,[esp]
jnl 0x35850
mov edx,ebp
mov eax,edi
call dword 0x373d4
cmp bl,[eax+0x3f]
jnc 0x3586a
mov eax,[0x468b3c]
call dword 0x348b4
jmp short 0x3586a
mov edx,ebp
mov eax,edi
call dword 0x373d4
cmp bl,[eax+0x3f]
jna 0x3586a
mov edx,ebp
mov eax,edi
call dword 0x373d4
mov [eax+0x3f],bl
inc ebp
dec esi
jnz 0x35831
pop edx
pop ebp
pop edi
pop esi
pop ebx
ret
push ebx
mov ebx,eax
cmp dword [ebx+0x34],byte +0x0
jnz 0x358b8
mov eax,[ebx+0x4]
mov edx,[dword 0x4354d0]
call dword 0x2d7c
test al,al
jz 0x35899
call dword 0x5ec0
mov [ebx+0x34],eax
jmp short 0x358a1
call dword 0x5eb8
mov [ebx+0x34],eax
cmp dword [ebx+0x34],byte +0x0
jnz 0x358b1
mov eax,[0x468b20]
call dword 0x348b4
mov eax,ebx
call dword 0x35604
mov eax,[ebx+0x34]
pop ebx
ret
lea eax,[eax+0x0]
push ebx
push esi
mov esi,edx
mov ebx,eax
mov edx,esi
mov eax,ebx
call dword 0x1a92c
push ebx
push dword 0x436674
push byte +0x0
push byte +0x0
xor ecx,ecx
mov edx,0x4368f4
mov eax,esi
mov ebx,[eax]
call dword [ebx+0x4]
pop esi
pop ebx
ret
add [eax],al
db 0xff
db 0xff
db 0xff
dec dword [eax+eax]
add [eax],al
push ebx
push dword 0x4374726f
jnz 0x35970
push esp
gs js 0x35974
add [eax],al
add [eax],al
push ebp
mov ebp,esp
add esp,byte -0x1c
push ebx
push esi
push edi
xor ebx,ebx
mov [ebp-0x4],ebx
mov [ebp-0xc],ecx
mov [ebp-0x8],edx
mov esi,eax
mov ebx,[ebp+0x8]
xor eax,eax
push ebp
push dword 0x436af4
push dword [fs:eax]
mov [fs:eax],esp
mov eax,esi
call dword 0x37984
mov edi,eax
test edi,edi
jz 0x35966
mov eax,edi
call dword 0x39204
test al,al
jz 0x35966
test bl,0x0
jnz 0x35950
and ebx,byte -0x1
or ebx,byte +0x2
jmp short 0x35960
mov eax,ebx
and eax,byte +0x2
cmp eax,byte +0x2
jnz 0x35960
and ebx,byte -0x3
or ebx,byte +0x0
or ebx,0x20000
lea eax,[ebp-0x4]
mov edx,[ebp-0xc]
call dword 0x3ab4
test bh,0x4
jz 0x3599a
cmp dword [ebp-0x4],byte +0x0
jz 0x3598d
mov eax,[ebp-0x4]
cmp byte [eax],0x26
jnz 0x3599a
mov eax,[ebp-0x4]
cmp byte [eax+0x1],0x0
jnz 0x3599a
lea eax,[ebp-0x4]
mov edx,0x436b0c
call dword 0x3ce8
mov eax,[ebp-0x4]
mov edx,0x436b18
call dword 0x3e44
jnz 0x359dd
test bh,0x4
jnz dword 0x35ade
mov eax,[ebp+0x10]
mov esi,eax
lea edi,[ebp-0x1c]
movsd
movsd
movsd
movsd
add dword [ebp-0x18],byte +0x4
push byte +0x2
push byte +0x6
lea eax,[ebp-0x1c]
push eax
mov eax,[ebp-0x8]
call dword 0x20b30
push eax
call dword 0x5f18
jmp dword 0x35ade
mov eax,[ebp-0x8]
mov eax,[eax+0x14]
mov dl,0x1
call dword 0x20570
cmp byte [esi+0x3a],0x0
jz 0x35a0c
mov eax,[ebp-0x8]
mov edi,[eax+0xc]
mov eax,edi
call dword 0x1ff18
mov edx,eax
or dl,[dword 0x436b1c]
mov eax,edi
call dword 0x1ff24
cmp byte [esi+0x39],0x0
jnz dword 0x35ab3
cmp byte [ebp+0xc],0x0
jnz 0x35a71
push byte +0x1
push byte +0x1
mov eax,[ebp+0x10]
push eax
call dword 0x61f8
mov eax,[ebp-0x8]
mov eax,[eax+0xc]
mov edx,0xff000014
call dword 0x1fb98
mov eax,[ebp-0x8]
call dword 0x20b30
mov edi,eax
mov esi,[ebp-0x4]
test esi,esi
jz 0x35a4f
sub esi,byte +0x4
mov esi,[esi]
push ebx
mov eax,[ebp+0x10]
push eax
push esi
mov eax,[ebp-0x4]
call dword 0x3eac
push eax
push edi
call dword 0x5f40
push byte -0x1
push byte -0x1
mov eax,[ebp+0x10]
push eax
call dword 0x61f8
cmp byte [ebp+0xc],0x0
jz 0x35aa3
mov eax,0xff00000d
call dword 0x1f6cc
mov esi,eax
mov eax,0xff000010
call dword 0x1f6cc
cmp esi,eax
jnz 0x35aa3
mov eax,[ebp-0x8]
mov eax,[eax+0xc]
mov edx,0xff000014
call dword 0x1fb98
jmp short 0x35ab3
mov eax,[ebp-0x8]
mov eax,[eax+0xc]
mov edx,0xff000010
call dword 0x1fb98
mov eax,[ebp-0x8]
call dword 0x20b30
mov edi,eax
mov esi,[ebp-0x4]
test esi,esi
jz 0x35ac9
sub esi,byte +0x4
mov esi,[esi]
push ebx
mov eax,[ebp+0x10]
push eax
push esi
mov eax,[ebp-0x4]
call dword 0x3eac
push eax
push edi
call dword 0x5f40
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x436afb
lea eax,[ebp-0x4]
call dword 0x3a1c
ret
jmp dword 0x3384
jmp short 0x35aeb
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret 0xc
db 0xff
db 0xff
db 0xff
inc dword [ecx]
add [eax],al
add [eax],ah
add [eax],al
add bh,bh
db 0xff
db 0xff
inc dword [ecx]
add [eax],al
add [dword 0x1000000],ch
add [eax],al
add [ebp-0x75],dl
in al,dx
add esp,byte -0x10
push ebx
push esi
push edi
mov esi,ecx
lea edi,[ebp-0x10]
movsd
movsd
movsd
movsd
cmp word [eax+0x92],byte +0x0
jz 0x35b57
lea ecx,[ebp-0x10]
push ecx
movzx ecx,byte [ebp+0x8]
push ecx
mov ebx,eax
mov ecx,edx
mov edx,eax
mov eax,[ebx+0x94]
call dword [ebx+0x90]
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret 0x4
push ebp
mov ebp,esp
push byte +0x0
push ebx
push esi
push edi
xor eax,eax
push ebp
push dword 0x4374a2
push dword [fs:eax]
mov [fs:eax],esp
mov eax,[ebp+0x8]
cmp byte [eax-0x21],0x0
jz 0x35b88
mov eax,[ebp+0x8]
cmp byte [eax-0x22],0x0
jnz 0x35ba3
mov eax,[ebp+0x8]
cmp byte [eax-0x21],0x0
jz dword 0x35c1c
call dword 0x4e314
call dword 0x4e41c
test al,al
jz 0x35c1c
mov eax,[ebp+0x8]
test byte [eax+0xc],0x1
jnz 0x35bb5
mov eax,[ebp+0x8]
test byte [eax+0xc],0x40
jz 0x35c00
call dword 0x4e314
call dword 0x4e41c
test al,al
jz 0x35bd8
mov eax,[ebp+0x8]
mov eax,[eax-0x28]
mov eax,[eax+0x14]
mov edx,0xff00001d
call dword 0x20454
jmp short 0x35beb
mov eax,[ebp+0x8]
mov eax,[eax-0x28]
mov eax,[eax+0x14]
mov edx,0xff00000d
call dword 0x20454
mov eax,[ebp+0x8]
mov eax,[eax-0x28]
mov eax,[eax+0xc]
mov edx,0xff00000e
call dword 0x1fb98
jmp short 0x35c1c
mov eax,[ebp+0x8]
cmp byte [eax+0x8],0x0
jz 0x35c1c
mov eax,[ebp+0x8]
mov eax,[eax-0x28]
mov eax,[eax+0x14]
mov edx,0xff00001e
call dword 0x20454
mov eax,[ebp+0x8]
cmp byte [eax-0x29],0x0
jz 0x35c2e
mov eax,[ebp+0x8]
cmp byte [eax-0x21],0x0
jz 0x35c3f
mov eax,[ebp+0x8]
lea edx,[eax-0x20]
mov eax,[ebp+0x8]
mov eax,[eax-0x28]
call dword 0x207f8
mov eax,[ebp+0x8]
cmp dword [eax-0x30],byte +0x0
jz 0x35c51
mov eax,[ebp+0x8]
mov byte [eax-0x31],0x0
jmp short 0x35c7f
mov eax,[ebp+0x8]
mov eax,[eax-0x30]
mov edx,[dword 0x4354d0]
call dword 0x2d7c
test al,al
jz 0x35c78
mov eax,[ebp+0x8]
mov eax,[eax-0x30]
movzx eax,byte [eax+0x60]
mov edx,[ebp+0x8]
mov [edx-0x31],al
jmp short 0x35c7f
mov eax,[ebp+0x8]
mov byte [eax-0x31],0x0
mov eax,[ebp+0x8]
mov eax,[eax-0x20]
inc eax
mov edx,[ebp+0x8]
mov [edx-0x10],eax
mov eax,[ebp+0x8]
mov eax,[eax-0x1c]
inc eax
mov edx,[ebp+0x8]
mov [edx-0xc],eax
mov eax,[ebp+0x8]
mov eax,[eax-0x38]
mov eax,[eax+0x30]
mov edx,0x4374b8
call dword 0x3e44
jnz 0x35cdd
mov eax,[ebp+0x8]
lea edx,[eax-0x20]
mov eax,[ebp+0x8]
mov eax,[eax-0x28]
call dword 0x207f8
mov eax,[ebp+0x8]
xor edx,edx
mov [eax-0x10],edx
mov eax,[ebp+0x8]
mov dword [eax-0x8],0xfffffffc
mov eax,[ebp+0x8]
mov byte [eax-0x39],0x0
jmp dword 0x36178
mov eax,[ebp+0x8]
cmp dword [eax-0x40],byte +0x0
jz 0x35d2d
mov eax,[ebp+0x8]
mov eax,[eax-0x38]
mov ebx,[eax+0x40]
cmp ebx,byte -0x1
jng 0x35d06
mov eax,[ebp+0x8]
mov eax,[ebp+0x8]
mov eax,[eax-0x40]
call dword 0x4f254
cmp ebx,eax
jl 0x35d31
mov eax,[ebp+0x8]
mov eax,[eax-0x38]
cmp byte [eax+0x38],0x0
jz 0x35d2d
mov eax,[ebp+0x8]
mov eax,[eax-0x38]
mov esi,[eax+0x4c]
test esi,esi
jz 0x35d31
mov eax,[ebp+0x8]
mov eax,esi
mov edx,[eax]
call dword [edx+0x1c]
test al,al
jnz 0x35d31
xor eax,eax
jmp short 0x35d33
mov al,0x1
mov edx,[ebp+0x8]
mov [edx-0x41],al
mov eax,[ebp+0x8]
cmp byte [eax-0x41],0x0
jnz 0x35d65
mov eax,[ebp+0x8]
mov eax,[eax-0x38]
mov ebx,[eax+0x4c]
test ebx,ebx
jz dword 0x3611b
mov eax,[ebp+0x8]
mov eax,ebx
mov edx,[eax]
call dword [edx+0x1c]
test al,al
jnz dword 0x3611b
mov eax,[ebp+0x8]
mov byte [eax-0x39],0x1
mov eax,[ebp+0x8]
cmp byte [eax-0x41],0x0
jz 0x35da1
mov eax,[ebp+0x8]
mov eax,[eax-0x10]
mov edx,[ebp+0x8]
mov edx,[edx-0x40]
add eax,[edx+0x34]
mov edx,[ebp+0x8]
mov [edx-0x8],eax
mov eax,[ebp+0x8]
mov eax,[eax-0xc]
mov edx,[ebp+0x8]
mov edx,[edx-0x40]
add eax,[edx+0x30]
mov edx,[ebp+0x8]
mov [edx-0x4],eax
jmp short 0x35dbf
mov eax,[ebp+0x8]
mov eax,[eax-0x10]
add eax,byte +0x10
mov edx,[ebp+0x8]
mov [edx-0x8],eax
mov eax,[ebp+0x8]
mov eax,[eax-0xc]
add eax,byte +0x10
mov edx,[ebp+0x8]
mov [edx-0x4],eax
mov eax,[ebp+0x8]
mov eax,[eax-0x38]
cmp byte [eax+0x38],0x0
jz dword 0x35e8f
mov eax,[ebp+0x8]
cmp byte [eax-0x21],0x0
jnz dword 0x35e8f
mov eax,[ebp+0x8]
inc dword [eax-0x8]
mov eax,[ebp+0x8]
inc dword [eax-0x4]
mov eax,[ebp+0x8]
mov eax,[eax-0x28]
mov eax,[eax+0x14]
call dword 0x2044c
mov edx,[ebp+0x8]
mov [edx-0x48],eax
mov eax,[ebp+0x8]
test byte [eax+0xc],0x1
jnz 0x35e4b
mov eax,[ebp+0x8]
mov eax,[eax-0x28]
mov eax,[eax+0x14]
call dword 0x2044c
mov edx,[ebp+0x8]
mov [edx-0x48],eax
mov edx,0xff000014
mov eax,0xff00000f
call dword 0x26ccc
mov edx,eax
mov eax,[ebp+0x8]
mov eax,[eax-0x28]
mov eax,[eax+0x14]
call dword 0x20428
mov eax,[ebp+0x8]
lea edx,[eax-0x10]
mov eax,[ebp+0x8]
mov eax,[eax-0x28]
call dword 0x207f8
jmp short 0x35e6f
mov eax,[ebp+0x8]
mov eax,[eax-0x28]
mov eax,[eax+0x14]
mov edx,0xff00000f
call dword 0x20454
mov eax,[ebp+0x8]
lea edx,[eax-0x10]
mov eax,[ebp+0x8]
mov eax,[eax-0x28]
call dword 0x207f8
mov eax,[ebp+0x8]
mov edx,[eax-0x48]
mov eax,[ebp+0x8]
mov eax,[eax-0x28]
mov eax,[eax+0x14]
call dword 0x20454
mov eax,[ebp+0x8]
inc dword [eax-0x10]
mov eax,[ebp+0x8]
inc dword [eax-0xc]
mov eax,[ebp+0x8]
cmp byte [eax-0x41],0x0
jz dword 0x35ff7
mov eax,[ebp+0x8]
mov eax,[eax-0x38]
mov ebx,[eax+0x40]
cmp ebx,byte -0x1
jng 0x35ef4
mov eax,[ebp+0x8]
mov eax,[ebp+0x8]
mov eax,[eax-0x40]
call dword 0x4f254
cmp ebx,eax
jnl 0x35ef4
mov eax,[ebp+0x8]
mov eax,[eax-0xc]
push eax
mov eax,[ebp+0x8]
mov eax,[eax-0x38]
mov eax,[eax+0x40]
push eax
mov eax,[ebp+0x8]
mov eax,[eax-0x38]
movzx eax,byte [eax+0x39]
push eax
mov eax,[ebp+0x8]
mov ecx,[eax-0x10]
mov eax,[ebp+0x8]
mov edx,[eax-0x28]
mov eax,[ebp+0x8]
mov eax,[eax-0x40]
call dword 0x4f544
jmp dword 0x36101
mov dl,0x1
mov eax,[0x41fb38]
call dword 0x249f4
mov edx,[ebp+0x8]
mov [edx-0x4c],eax
xor eax,eax
push ebp
push dword 0x436ff0
push dword [fs:eax]
mov [fs:eax],esp
mov eax,[ebp+0x8]
mov eax,[eax-0x4c]
mov dl,0x1
mov ecx,[eax]
call dword [ecx+0x3c]
push dword 0x7ff8
push byte +0x0
call dword 0x61b0
mov edx,eax
mov eax,[ebp+0x8]
mov eax,[eax-0x4c]
call dword 0x25af0
mov eax,[ebp+0x8]
mov eax,[eax-0x28]
mov eax,[eax+0xc]
mov eax,[eax+0x18]
mov edx,[ebp+0x8]
mov [edx-0x48],eax
mov eax,[ebp+0x8]
mov eax,[eax-0x28]
mov eax,[eax+0xc]
mov edx,0xff000012
call dword 0x1fb98
mov eax,[ebp+0x8]
mov eax,[eax-0x4c]
push eax
mov eax,[ebp+0x8]
mov eax,[eax-0x4c]
mov edx,[eax]
call dword [edx+0x20]
mov edx,[ebp+0x8]
mov edx,[edx-0x4]
mov ecx,[ebp+0x8]
mov esi,[ecx-0xc]
sub edx,esi
sub edx,eax
sar edx,1
jns 0x35f88
adc edx,byte +0x0
mov eax,[ebp+0x8]
add edx,esi
inc edx
push edx
mov eax,[ebp+0x8]
mov eax,[eax-0x4c]
mov edx,[eax]
call dword [edx+0x2c]
mov edx,[ebp+0x8]
mov edx,[edx-0x8]
mov ecx,[ebp+0x8]
mov ebx,[ecx-0x10]
sub edx,ebx
sub edx,eax
sar edx,1
jns 0x35fb1
adc edx,byte +0x0
mov eax,[ebp+0x8]
add edx,ebx
inc edx
mov eax,[ebp+0x8]
mov eax,[eax-0x28]
pop ecx
call dword 0x2074c
mov eax,[ebp+0x8]
mov edx,[eax-0x48]
mov eax,[ebp+0x8]
mov eax,[eax-0x28]
mov eax,[eax+0xc]
call dword 0x1fb98
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x437101
mov eax,[ebp+0x8]
mov eax,[eax-0x4c]
call dword 0x2bf0
ret
jmp dword 0x3384
jmp short 0x35fe4
mov eax,[ebp+0x8]
mov edx,[ebp+0x8]
lea esi,[eax-0x10]
lea edi,[edx-0x5c]
movsd
movsd
movsd
movsd
mov eax,[ebp+0x8]
mov eax,[eax-0x38]
mov eax,[eax+0x4c]
mov edx,[eax]
call dword [edx+0x2c]
mov edx,[ebp+0x8]
mov edx,[edx-0x8]
mov ecx,[ebp+0x8]
sub edx,[ecx-0x10]
cmp eax,edx
jnl 0x3606f
mov eax,[ebp+0x8]
mov eax,[eax-0x38]
mov eax,[eax+0x4c]
mov edx,[eax]
call dword [edx+0x2c]
mov edx,[ebp+0x8]
mov edx,[edx-0x8]
mov ecx,[ebp+0x8]
sub edx,[ecx-0x10]
sub edx,eax
sar edx,1
jns 0x36048
adc edx,byte +0x0
mov eax,[ebp+0x8]
add edx,[eax-0x10]
inc edx
mov eax,[ebp+0x8]
mov [eax-0x10],edx
mov eax,[ebp+0x8]
mov eax,[eax-0x38]
mov eax,[eax+0x4c]
mov edx,[eax]
call dword [edx+0x2c]
mov edx,[ebp+0x8]
add eax,[edx-0x10]
mov edx,[ebp+0x8]
mov [edx-0x8],eax
mov eax,[ebp+0x8]
mov eax,[eax-0x38]
mov eax,[eax+0x4c]
mov edx,[eax]
call dword [edx+0x20]
mov edx,[ebp+0x8]
mov edx,[edx-0x4]
mov ecx,[ebp+0x8]
sub edx,[ecx-0xc]
cmp eax,edx
jnl 0x360d7
mov eax,[ebp+0x8]
mov eax,[eax-0x38]
mov eax,[eax+0x4c]
mov edx,[eax]
call dword [edx+0x20]
mov edx,[ebp+0x8]
mov edx,[edx-0x4]
mov ecx,[ebp+0x8]
sub edx,[ecx-0xc]
sub edx,eax
sar edx,1
jns 0x360b0
adc edx,byte +0x0
mov eax,[ebp+0x8]
add edx,[eax-0xc]
inc edx
mov eax,[ebp+0x8]
mov [eax-0xc],edx
mov eax,[ebp+0x8]
mov eax,[eax-0x38]
mov eax,[eax+0x4c]
mov edx,[eax]
call dword [edx+0x20]
mov edx,[ebp+0x8]
add eax,[edx-0xc]
mov edx,[ebp+0x8]
mov [edx-0x4],eax
mov eax,[ebp+0x8]
mov eax,[eax-0x38]
mov ecx,[eax+0x4c]
mov eax,[ebp+0x8]
lea edx,[eax-0x10]
mov eax,[ebp+0x8]
mov eax,[eax-0x28]
call dword 0x20908
mov eax,[ebp+0x8]
mov edx,[ebp+0x8]
lea esi,[eax-0x5c]
lea edi,[edx-0x10]
movsd
movsd
movsd
movsd
mov eax,[ebp+0x8]
mov eax,[eax-0x38]
cmp byte [eax+0x38],0x0
jz 0x36178
mov eax,[ebp+0x8]
dec dword [eax-0x8]
mov eax,[ebp+0x8]
dec dword [eax-0x4]
jmp short 0x36178
mov eax,[ebp+0x8]
cmp dword [eax-0x40],byte +0x0
jz 0x36159
mov eax,[ebp+0x8]
cmp byte [eax+0x8],0x0
jnz 0x36159
mov eax,[ebp+0x8]
mov eax,[eax-0x10]
mov edx,[ebp+0x8]
mov edx,[edx-0x40]
add eax,[edx+0x34]
mov edx,[ebp+0x8]
mov [edx-0x8],eax
mov eax,[ebp+0x8]
mov eax,[eax-0xc]
mov edx,[ebp+0x8]
mov edx,[edx-0x40]
add eax,[edx+0x30]
mov edx,[ebp+0x8]
mov [edx-0x4],eax
jmp short 0x36171
mov eax,[ebp+0x8]
mov eax,[eax-0x10]
mov edx,[ebp+0x8]
mov [edx-0x8],eax
mov eax,[ebp+0x8]
mov eax,[eax-0xc]
mov edx,[ebp+0x8]
mov [edx-0x4],eax
mov eax,[ebp+0x8]
mov byte [eax-0x39],0x0
mov eax,[ebp+0x8]
dec dword [eax-0x10]
mov eax,[ebp+0x8]
dec dword [eax-0xc]
mov eax,[ebp+0x8]
add dword [eax-0x8],byte +0x2
mov eax,[ebp+0x8]
add dword [eax-0x4],byte +0x2
mov eax,[ebp+0x8]
mov eax,[eax-0x38]
cmp byte [eax+0x38],0x0
jnz 0x361b0
mov eax,[ebp+0x8]
cmp byte [eax-0x29],0x0
jz 0x361e5
mov eax,[ebp+0x8]
cmp byte [eax-0x39],0x0
jz 0x361e5
mov eax,[ebp+0x8]
cmp byte [eax-0x21],0x0
jnz 0x361e5
push byte +0xf
mov eax,[ebp+0x8]
mov eax,[eax-0x38]
movzx eax,byte [eax+0x38]
mov eax,[eax*4+0x468580]
push eax
mov eax,[ebp+0x8]
add eax,byte -0x10
push eax
mov eax,[ebp+0x8]
mov eax,[eax-0x28]
call dword 0x20b30
push eax
call dword 0x5f18
mov eax,[ebp+0x8]
cmp byte [eax-0x29],0x0
jz 0x3623a
mov eax,[ebp+0x8]
cmp byte [eax-0x39],0x0
jz 0x36204
mov eax,[ebp+0x8]
mov eax,[eax-0x8]
inc eax
mov edx,[ebp+0x8]
mov [edx-0x20],eax
mov eax,[ebp+0x8]
cmp byte [eax-0x5d],0x0
jz 0x36216
mov eax,[ebp+0x8]
cmp byte [eax+0x8],0x0
jnz 0x36229
mov eax,[ebp+0x8]
mov eax,[eax-0x28]
mov eax,[eax+0x14]
mov edx,0xff00000d
call dword 0x20454
mov eax,[ebp+0x8]
lea edx,[eax-0x20]
mov eax,[ebp+0x8]
mov eax,[eax-0x28]
call dword 0x207f8
mov eax,[ebp+0x8]
cmp byte [eax+0x8],0x0
jz dword 0x362c7
mov eax,[ebp+0x8]
cmp byte [eax-0x5d],0x0
jz 0x362c7
mov eax,[ebp+0x8]
cmp byte [eax-0x21],0x0
jz 0x36262
mov eax,[ebp+0x8]
cmp byte [eax-0x22],0x0
jnz 0x362c7
mov eax,[ebp+0x8]
cmp byte [eax-0x29],0x0
jz 0x36289
push byte +0xf
push byte +0x2
mov eax,[ebp+0x8]
add eax,byte -0x20
push eax
mov eax,[ebp+0x8]
mov eax,[eax-0x28]
call dword 0x20b30
push eax
call dword 0x5f18
jmp short 0x362ae
mov eax,[ebp+0x8]
test byte [eax+0xc],0x40
jz 0x362ae
push byte +0xf
push byte +0x4
mov eax,[ebp+0x8]
add eax,byte -0x20
push eax
mov eax,[ebp+0x8]
mov eax,[eax-0x28]
call dword 0x20b30
push eax
call dword 0x5f18
mov eax,[ebp+0x8]
cmp byte [eax-0x29],0x0
jnz 0x362c7
push byte -0x1
push byte +0x0
mov eax,[ebp+0x8]
add eax,byte -0x20
push eax
call dword 0x61f8
mov eax,[ebp+0x8]
cmp byte [eax-0x29],0x0
jz 0x362d9
mov eax,[ebp+0x8]
cmp byte [eax-0x39],0x0
jnz 0x362e6
mov eax,[ebp+0x8]
mov eax,[eax-0x8]
inc eax
mov edx,[ebp+0x8]
mov [edx-0x20],eax
mov eax,[ebp+0x8]
add dword [eax-0x20],byte +0x2
mov eax,[ebp+0x8]
dec dword [eax-0x18]
mov eax,[ebp+0x8]
movzx eax,byte [eax-0x31]
movzx eax,word [eax*2+0x468578]
or ax,byte +0x60
movzx eax,ax
mov edx,[ebp+0x8]
mov [edx-0x64],eax
mov eax,[ebp+0x8]
cmp byte [eax-0x65],0x0
jz 0x3632b
mov eax,[ebp+0x8]
test byte [eax+0xd],0x1
jz 0x3632b
mov eax,[ebp+0x8]
or dword [eax-0x64],0x100000
mov eax,[ebp+0x8]
mov edx,[ebp+0x8]
lea esi,[eax-0x20]
lea edi,[edx-0x5c]
movsd
movsd
movsd
movsd
mov eax,[ebp+0x8]
test byte [eax+0xc],0x20
jz 0x36359
mov eax,[ebp+0x8]
mov eax,[eax-0x28]
mov eax,[eax+0xc]
movzx edx,byte [dword 0x4374bc]
call dword 0x1ff24
mov eax,[ebp+0x8]
add eax,byte -0x20
push eax
mov eax,[ebp+0x8]
movzx eax,byte [eax-0x29]
push eax
mov eax,[ebp+0x8]
mov eax,[eax-0x64]
or eax,0x400
or eax,0x100
push eax
mov eax,[ebp+0x8]
mov eax,[eax-0x38]
mov ecx,[eax+0x30]
mov eax,[ebp+0x8]
mov edx,[eax-0x28]
mov eax,[ebp+0x8]
mov eax,[eax-0x38]
call dword 0x35904
mov eax,[ebp+0x8]
mov eax,[eax-0x50]
mov edx,[ebp+0x8]
sub eax,[edx-0x58]
mov edx,[ebp+0x8]
mov edx,[edx-0x14]
mov ecx,[ebp+0x8]
sub edx,[ecx-0x1c]
sub eax,edx
sar eax,1
jns 0x363b4
adc eax,byte +0x0
push eax
push byte +0x0
mov eax,[ebp+0x8]
add eax,byte -0x20
push eax
call dword 0x61f8
mov eax,[ebp+0x8]
cmp byte [eax+0x8],0x0
jz 0x363f7
mov eax,[ebp+0x8]
cmp byte [eax-0x29],0x0
jz 0x363f7
mov eax,[ebp+0x8]
cmp byte [eax-0x5d],0x0
jz 0x363f7
mov eax,[ebp+0x8]
cmp byte [eax-0x21],0x0
jnz 0x363f7
push byte +0x0
push byte +0x1
mov eax,[ebp+0x8]
add eax,byte -0x20
push eax
call dword 0x61f8
mov eax,[ebp+0x8]
add eax,byte -0x20
push eax
mov eax,[ebp+0x8]
movzx eax,byte [eax-0x29]
push eax
mov eax,[ebp+0x8]
mov eax,[eax-0x64]
push eax
mov eax,[ebp+0x8]
mov eax,[eax-0x38]
mov ecx,[eax+0x30]
mov eax,[ebp+0x8]
mov edx,[eax-0x28]
mov eax,[ebp+0x8]
mov eax,[eax-0x38]
call dword 0x35904
mov eax,[ebp+0x8]
mov eax,[eax-0x38]
movzx ebx,word [eax+0x60]
test bx,bx
jz 0x3648c
mov eax,[ebp+0x8]
cmp byte [eax+0x8],0x0
jnz 0x3648c
mov eax,[ebp+0x8]
mov eax,[eax-0x18]
mov edx,[ebp+0x8]
mov [edx-0x20],eax
mov eax,[ebp+0x8]
mov eax,[eax-0x54]
sub eax,byte +0xa
mov edx,[ebp+0x8]
mov [edx-0x18],eax
mov eax,[ebp+0x8]
add eax,byte -0x20
push eax
mov eax,[ebp+0x8]
movzx eax,byte [eax-0x29]
push eax
push byte +0x2
lea edx,[ebp-0x4]
mov eax,[ebp+0x8]
mov eax,ebx
call dword 0x34960
mov ecx,[ebp-0x4]
mov eax,[ebp+0x8]
mov edx,[eax-0x28]
mov eax,[ebp+0x8]
mov eax,[eax-0x38]
call dword 0x35904
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x4374a9
lea eax,[ebp-0x4]
call dword 0x3a1c
ret
jmp dword 0x3384
jmp short 0x36499
pop edi
pop esi
pop ebx
pop ecx
pop ebp
ret
add bh,bh
db 0xff
db 0xff
inc dword [ecx]
add [eax],al
add [dword 0x1000000],ch
add [eax],al
add [ebp-0x75],dl
in al,dx
push byte +0x0
push ebx
push esi
push edi
xor eax,eax
push ebp
push dword 0x437e22
push dword [fs:eax]
mov [fs:eax],esp
mov eax,[ebp+0x8]
cmp byte [eax-0x21],0x0
jz 0x364e8
mov eax,[ebp+0x8]
cmp byte [eax-0x22],0x0
jnz 0x36503
mov eax,[ebp+0x8]
cmp byte [eax-0x21],0x0
jz dword 0x3657c
call dword 0x4e314
call dword 0x4e41c
test al,al
jz 0x3657c
mov eax,[ebp+0x8]
test byte [eax+0xc],0x1
jnz 0x36515
mov eax,[ebp+0x8]
test byte [eax+0xc],0x40
jz 0x36560
call dword 0x4e314
call dword 0x4e41c
test al,al
jz 0x36538
mov eax,[ebp+0x8]
mov eax,[eax-0x28]
mov eax,[eax+0x14]
mov edx,0xff00001d
call dword 0x20454
jmp short 0x3654b
mov eax,[ebp+0x8]
mov eax,[eax-0x28]
mov eax,[eax+0x14]
mov edx,0xff00000d
call dword 0x20454
mov eax,[ebp+0x8]
mov eax,[eax-0x28]
mov eax,[eax+0xc]
mov edx,0xff00000e
call dword 0x1fb98
jmp short 0x3657c
mov eax,[ebp+0x8]
cmp byte [eax+0x8],0x0
jz 0x3657c
mov eax,[ebp+0x8]
mov eax,[eax-0x28]
mov eax,[eax+0x14]
mov edx,0xff00001e
call dword 0x20454
mov eax,[ebp+0x8]
cmp byte [eax-0x29],0x0
jz 0x3659a
mov eax,[ebp+0x8]
cmp byte [eax-0x21],0x0
jz 0x365ab
mov eax,[ebp+0x8]
mov eax,[eax-0x38]
cmp byte [eax+0x38],0x0
jnz 0x365ab
mov eax,[ebp+0x8]
lea edx,[eax-0x20]
mov eax,[ebp+0x8]
mov eax,[eax-0x28]
call dword 0x207f8
mov eax,[ebp+0x8]
cmp dword [eax-0x30],byte +0x0
jz 0x365bd
mov eax,[ebp+0x8]
mov byte [eax-0x31],0x0
jmp short 0x365eb
mov eax,[ebp+0x8]
mov eax,[eax-0x30]
mov edx,[dword 0x4354d0]
call dword 0x2d7c
test al,al
jz 0x365e4
mov eax,[ebp+0x8]
mov eax,[eax-0x30]
movzx eax,byte [eax+0x60]
mov edx,[ebp+0x8]
mov [edx-0x31],al
jmp short 0x365eb
mov eax,[ebp+0x8]
mov byte [eax-0x31],0x0
mov eax,[ebp+0x8]
mov eax,[eax-0x18]
dec eax
mov edx,[ebp+0x8]
mov [edx-0x8],eax
mov eax,[ebp+0x8]
mov eax,[eax-0x1c]
inc eax
mov edx,[ebp+0x8]
mov [edx-0xc],eax
mov eax,[ebp+0x8]
mov eax,[eax-0x38]
mov eax,[eax+0x30]
mov edx,0x437e38
call dword 0x3e44
jnz 0x3664e
mov eax,[ebp+0x8]
lea edx,[eax-0x20]
mov eax,[ebp+0x8]
mov eax,[eax-0x28]
call dword 0x207f8
mov eax,[ebp+0x8]
mov eax,[eax-0x8]
add eax,byte +0x2
mov edx,[ebp+0x8]
mov [edx-0x10],eax
mov eax,[ebp+0x8]
xor edx,edx
mov [eax-0x8],edx
mov eax,[ebp+0x8]
mov byte [eax-0x39],0x0
jmp dword 0x36ae0
mov eax,[ebp+0x8]
cmp dword [eax-0x40],byte +0x0
jz 0x3669e
mov eax,[ebp+0x8]
mov eax,[eax-0x38]
mov ebx,[eax+0x40]
cmp ebx,byte -0x1
jng 0x36677
mov eax,[ebp+0x8]
mov eax,[ebp+0x8]
mov eax,[eax-0x40]
call dword 0x4f254
cmp ebx,eax
jl 0x366a2
mov eax,[ebp+0x8]
mov eax,[eax-0x38]
cmp byte [eax+0x38],0x0
jz 0x3669e
mov eax,[ebp+0x8]
mov eax,[eax-0x38]
mov esi,[eax+0x4c]
test esi,esi
jz 0x366a2
mov eax,[ebp+0x8]
mov eax,esi
mov edx,[eax]
call dword [edx+0x1c]
test al,al
jnz 0x366a2
xor eax,eax
jmp short 0x366a4
mov al,0x1
mov edx,[ebp+0x8]
mov [edx-0x41],al
mov eax,[ebp+0x8]
cmp byte [eax-0x41],0x0
jnz 0x366d6
mov eax,[ebp+0x8]
mov eax,[eax-0x38]
mov ebx,[eax+0x4c]
test ebx,ebx
jz dword 0x36a83
mov eax,[ebp+0x8]
mov eax,ebx
mov edx,[eax]
call dword [edx+0x1c]
test al,al
jnz dword 0x36a83
mov eax,[ebp+0x8]
mov byte [eax-0x39],0x1
mov eax,[ebp+0x8]
cmp byte [eax-0x41],0x0
jz 0x36712
mov eax,[ebp+0x8]
mov eax,[eax-0x8]
mov edx,[ebp+0x8]
mov edx,[edx-0x40]
sub eax,[edx+0x34]
mov edx,[ebp+0x8]
mov [edx-0x10],eax
mov eax,[ebp+0x8]
mov eax,[eax-0xc]
mov edx,[ebp+0x8]
mov edx,[edx-0x40]
add eax,[edx+0x30]
mov edx,[ebp+0x8]
mov [edx-0x4],eax
jmp short 0x36730
mov eax,[ebp+0x8]
mov eax,[eax-0x8]
sub eax,byte +0x10
mov edx,[ebp+0x8]
mov [edx-0x10],eax
mov eax,[ebp+0x8]
mov eax,[eax-0xc]
add eax,byte +0x10
mov edx,[ebp+0x8]
mov [edx-0x4],eax
mov eax,[ebp+0x8]
mov eax,[eax-0x38]
cmp byte [eax+0x38],0x0
jz dword 0x367f3
mov eax,[ebp+0x8]
dec dword [eax-0x10]
mov eax,[ebp+0x8]
inc dword [eax-0x4]
mov eax,[ebp+0x8]
mov eax,[eax-0x28]
mov eax,[eax+0x14]
call dword 0x2044c
mov edx,[ebp+0x8]
mov [edx-0x48],eax
mov eax,[ebp+0x8]
test byte [eax+0xc],0x1
jnz 0x367af
mov eax,[ebp+0x8]
mov eax,[eax-0x28]
mov eax,[eax+0x14]
call dword 0x2044c
mov edx,[ebp+0x8]
mov [edx-0x48],eax
mov edx,0xff000014
mov eax,0xff00000f
call dword 0x26ccc
mov edx,eax
mov eax,[ebp+0x8]
mov eax,[eax-0x28]
mov eax,[eax+0x14]
call dword 0x20428
mov eax,[ebp+0x8]
lea edx,[eax-0x10]
mov eax,[ebp+0x8]
mov eax,[eax-0x28]
call dword 0x207f8
jmp short 0x367d3
mov eax,[ebp+0x8]
mov eax,[eax-0x28]
mov eax,[eax+0x14]
mov edx,0xff00000f
call dword 0x20454
mov eax,[ebp+0x8]
lea edx,[eax-0x10]
mov eax,[ebp+0x8]
mov eax,[eax-0x28]
call dword 0x207f8
mov eax,[ebp+0x8]
mov edx,[eax-0x48]
mov eax,[ebp+0x8]
mov eax,[eax-0x28]
mov eax,[eax+0x14]
call dword 0x20454
mov eax,[ebp+0x8]
dec dword [eax-0x8]
mov eax,[ebp+0x8]
inc dword [eax-0xc]
mov eax,[ebp+0x8]
cmp byte [eax-0x41],0x0
jz dword 0x3695b
mov eax,[ebp+0x8]
mov eax,[eax-0x38]
mov ebx,[eax+0x40]
cmp ebx,byte -0x1
jng 0x36858
mov eax,[ebp+0x8]
mov eax,[ebp+0x8]
mov eax,[eax-0x40]
call dword 0x4f254
cmp ebx,eax
jnl 0x36858
mov eax,[ebp+0x8]
mov eax,[eax-0xc]
push eax
mov eax,[ebp+0x8]
mov eax,[eax-0x38]
mov eax,[eax+0x40]
push eax
mov eax,[ebp+0x8]
mov eax,[eax-0x38]
movzx eax,byte [eax+0x39]
push eax
mov eax,[ebp+0x8]
mov ecx,[eax-0x10]
mov eax,[ebp+0x8]
mov edx,[eax-0x28]
mov eax,[ebp+0x8]
mov eax,[eax-0x40]
call dword 0x4f544
jmp dword 0x36a69
mov dl,0x1
mov eax,[0x41fb38]
call dword 0x249f4
mov edx,[ebp+0x8]
mov [edx-0x4c],eax
xor eax,eax
push ebp
push dword 0x437954
push dword [fs:eax]
mov [fs:eax],esp
mov eax,[ebp+0x8]
mov eax,[eax-0x4c]
mov dl,0x1
mov ecx,[eax]
call dword [ecx+0x3c]
push dword 0x7ff8
push byte +0x0
call dword 0x61b0
mov edx,eax
mov eax,[ebp+0x8]
mov eax,[eax-0x4c]
call dword 0x25af0
mov eax,[ebp+0x8]
mov eax,[eax-0x28]
mov eax,[eax+0xc]
mov eax,[eax+0x18]
mov edx,[ebp+0x8]
mov [edx-0x48],eax
mov eax,[ebp+0x8]
mov eax,[eax-0x28]
mov eax,[eax+0xc]
mov edx,0xff000012
call dword 0x1fb98
mov eax,[ebp+0x8]
mov eax,[eax-0x4c]
push eax
mov eax,[ebp+0x8]
mov eax,[eax-0x4c]
mov edx,[eax]
call dword [edx+0x20]
mov edx,[ebp+0x8]
mov edx,[edx-0x4]
mov ecx,[ebp+0x8]
mov esi,[ecx-0xc]
sub edx,esi
sub edx,eax
sar edx,1
jns 0x368ec
adc edx,byte +0x0
mov eax,[ebp+0x8]
add edx,esi
inc edx
push edx
mov eax,[ebp+0x8]
mov eax,[eax-0x4c]
mov edx,[eax]
call dword [edx+0x2c]
mov edx,[ebp+0x8]
mov edx,[edx-0x8]
mov ecx,[ebp+0x8]
mov ebx,[ecx-0x10]
sub edx,ebx
sub edx,eax
sar edx,1
jns 0x36915
adc edx,byte +0x0
mov eax,[ebp+0x8]
add edx,ebx
inc edx
mov eax,[ebp+0x8]
mov eax,[eax-0x28]
pop ecx
call dword 0x2074c
mov eax,[ebp+0x8]
mov edx,[eax-0x48]
mov eax,[ebp+0x8]
mov eax,[eax-0x28]
mov eax,[eax+0xc]
call dword 0x1fb98
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x437a69
mov eax,[ebp+0x8]
mov eax,[eax-0x4c]
call dword 0x2bf0
ret
jmp dword 0x3384
jmp short 0x36948
mov eax,[ebp+0x8]
mov edx,[ebp+0x8]
lea esi,[eax-0x10]
lea edi,[edx-0x5c]
movsd
movsd
movsd
movsd
mov eax,[ebp+0x8]
mov eax,[eax-0x38]
mov eax,[eax+0x4c]
mov edx,[eax]
call dword [edx+0x2c]
mov edx,[ebp+0x8]
mov edx,[edx-0x8]
mov ecx,[ebp+0x8]
sub edx,[ecx-0x10]
cmp eax,edx
jnl 0x369d7
mov eax,[ebp+0x8]
mov eax,[eax-0x38]
mov eax,[eax+0x4c]
mov edx,[eax]
call dword [edx+0x2c]
mov edx,[ebp+0x8]
mov edx,[edx-0x8]
mov ecx,[ebp+0x8]
sub edx,[ecx-0x10]
sub edx,eax
sar edx,1
jns 0x369ac
adc edx,byte +0x0
mov eax,[ebp+0x8]
mov eax,[eax-0x8]
sub eax,edx
inc eax
mov edx,[ebp+0x8]
mov [edx-0x8],eax
mov eax,[ebp+0x8]
mov eax,[eax-0x38]
mov eax,[eax+0x4c]
mov edx,[eax]
call dword [edx+0x2c]
mov edx,[ebp+0x8]
mov edx,[edx-0x8]
sub edx,eax
mov eax,[ebp+0x8]
mov [eax-0x10],edx
mov eax,[ebp+0x8]
mov eax,[eax-0x38]
mov eax,[eax+0x4c]
mov edx,[eax]
call dword [edx+0x20]
mov edx,[ebp+0x8]
mov edx,[edx-0x4]
mov ecx,[ebp+0x8]
sub edx,[ecx-0xc]
cmp eax,edx
jnl 0x36a3f
mov eax,[ebp+0x8]
mov eax,[eax-0x38]
mov eax,[eax+0x4c]
mov edx,[eax]
call dword [edx+0x20]
mov edx,[ebp+0x8]
mov edx,[edx-0x4]
mov ecx,[ebp+0x8]
sub edx,[ecx-0xc]
sub edx,eax
sar edx,1
jns 0x36a18
adc edx,byte +0x0
mov eax,[ebp+0x8]
add edx,[eax-0xc]
inc edx
mov eax,[ebp+0x8]
mov [eax-0xc],edx
mov eax,[ebp+0x8]
mov eax,[eax-0x38]
mov eax,[eax+0x4c]
mov edx,[eax]
call dword [edx+0x20]
mov edx,[ebp+0x8]
add eax,[edx-0xc]
mov edx,[ebp+0x8]
mov [edx-0x4],eax
mov eax,[ebp+0x8]
mov eax,[eax-0x38]
mov ecx,[eax+0x4c]
mov eax,[ebp+0x8]
lea edx,[eax-0x10]
mov eax,[ebp+0x8]
mov eax,[eax-0x28]
call dword 0x20908
mov eax,[ebp+0x8]
mov edx,[ebp+0x8]
lea esi,[eax-0x5c]
lea edi,[edx-0x10]
movsd
movsd
movsd
movsd
mov eax,[ebp+0x8]
mov eax,[eax-0x38]
cmp byte [eax+0x38],0x0
jz 0x36ae0
mov eax,[ebp+0x8]
dec dword [eax-0x8]
mov eax,[ebp+0x8]
dec dword [eax-0x4]
jmp short 0x36ae0
mov eax,[ebp+0x8]
cmp dword [eax-0x40],byte +0x0
jz 0x36ac1
mov eax,[ebp+0x8]
cmp byte [eax+0x8],0x0
jnz 0x36ac1
mov eax,[ebp+0x8]
mov eax,[eax-0x8]
mov edx,[ebp+0x8]
mov edx,[edx-0x40]
sub eax,[edx+0x34]
mov edx,[ebp+0x8]
mov [edx-0x10],eax
mov eax,[ebp+0x8]
mov eax,[eax-0xc]
mov edx,[ebp+0x8]
mov edx,[edx-0x40]
add eax,[edx+0x30]
mov edx,[ebp+0x8]
mov [edx-0x4],eax
jmp short 0x36ad9
mov eax,[ebp+0x8]
mov eax,[eax-0x8]
mov edx,[ebp+0x8]
mov [edx-0x10],eax
mov eax,[ebp+0x8]
mov eax,[eax-0xc]
mov edx,[ebp+0x8]
mov [edx-0x4],eax
mov eax,[ebp+0x8]
mov byte [eax-0x39],0x0
mov eax,[ebp+0x8]
dec dword [eax-0x10]
mov eax,[ebp+0x8]
dec dword [eax-0xc]
mov eax,[ebp+0x8]
add dword [eax-0x8],byte +0x2
mov eax,[ebp+0x8]
add dword [eax-0x4],byte +0x2
mov eax,[ebp+0x8]
mov eax,[eax-0x38]
cmp byte [eax+0x38],0x0
jnz 0x36b21
mov eax,[ebp+0x8]
cmp byte [eax-0x29],0x0
jz 0x36b4d
mov eax,[ebp+0x8]
cmp byte [eax-0x39],0x0
jz 0x36b4d
mov eax,[ebp+0x8]
cmp byte [eax-0x21],0x0
jnz 0x36b4d
push byte +0xf
mov eax,[ebp+0x8]
mov eax,[eax-0x38]
movzx eax,byte [eax+0x38]
mov eax,[eax*4+0x468580]
push eax
mov eax,[ebp+0x8]
add eax,byte -0x10
push eax
mov eax,[ebp+0x8]
mov eax,[eax-0x28]
call dword 0x20b30
push eax
call dword 0x5f18
mov eax,[ebp+0x8]
cmp byte [eax-0x29],0x0
jz 0x36ba2
mov eax,[ebp+0x8]
cmp byte [eax-0x39],0x0
jz 0x36b6c
mov eax,[ebp+0x8]
mov eax,[eax-0x10]
dec eax
mov edx,[ebp+0x8]
mov [edx-0x18],eax
mov eax,[ebp+0x8]
cmp byte [eax-0x5d],0x0
jz 0x36b7e
mov eax,[ebp+0x8]
cmp byte [eax+0x8],0x0
jnz 0x36b91
mov eax,[ebp+0x8]
mov eax,[eax-0x28]
mov eax,[eax+0x14]
mov edx,0xff00000d
call dword 0x20454
mov eax,[ebp+0x8]
lea edx,[eax-0x20]
mov eax,[ebp+0x8]
mov eax,[eax-0x28]
call dword 0x207f8
mov eax,[ebp+0x8]
cmp byte [eax+0x8],0x0
jz dword 0x36c2f
mov eax,[ebp+0x8]
cmp byte [eax-0x5d],0x0
jz 0x36c2f
mov eax,[ebp+0x8]
cmp byte [eax-0x21],0x0
jz 0x36bca
mov eax,[ebp+0x8]
cmp byte [eax-0x22],0x0
jnz 0x36c2f
mov eax,[ebp+0x8]
cmp byte [eax-0x29],0x0
jz 0x36bf1
push byte +0xf
push byte +0x2
mov eax,[ebp+0x8]
add eax,byte -0x20
push eax
mov eax,[ebp+0x8]
mov eax,[eax-0x28]
call dword 0x20b30
push eax
call dword 0x5f18
jmp short 0x36c16
mov eax,[ebp+0x8]
test byte [eax+0xc],0x40
jz 0x36c16
push byte +0xf
push byte +0x4
mov eax,[ebp+0x8]
add eax,byte -0x20
push eax
mov eax,[ebp+0x8]
mov eax,[eax-0x28]
call dword 0x20b30
push eax
call dword 0x5f18
mov eax,[ebp+0x8]
cmp byte [eax-0x29],0x0
jnz 0x36c2f
push byte -0x1
push byte +0x0
mov eax,[ebp+0x8]
add eax,byte -0x20
push eax
call dword 0x61f8
mov eax,[ebp+0x8]
cmp byte [eax-0x29],0x0
jz 0x36c41
mov eax,[ebp+0x8]
cmp byte [eax-0x39],0x0
jnz 0x36c4e
mov eax,[ebp+0x8]
mov eax,[eax-0x10]
dec eax
mov edx,[ebp+0x8]
mov [edx-0x18],eax
mov eax,[ebp+0x8]
add dword [eax-0x20],byte +0x2
mov eax,[ebp+0x8]
dec dword [eax-0x18]
mov eax,[ebp+0x8]
movzx eax,byte [eax-0x31]
movzx eax,word [eax*2+0x468578]
or ax,byte +0x60
movzx eax,ax
mov edx,[ebp+0x8]
mov [edx-0x64],eax
mov eax,[ebp+0x8]
cmp byte [eax-0x65],0x0
jz 0x36c93
mov eax,[ebp+0x8]
test byte [eax+0xd],0x1
jz 0x36c93
mov eax,[ebp+0x8]
or dword [eax-0x64],0x100000
mov eax,[ebp+0x8]
mov edx,[ebp+0x8]
lea esi,[eax-0x20]
lea edi,[edx-0x5c]
movsd
movsd
movsd
movsd
mov eax,[ebp+0x8]
test byte [eax+0xc],0x20
jz 0x36cc1
mov eax,[ebp+0x8]
mov eax,[eax-0x28]
mov eax,[eax+0xc]
movzx edx,byte [dword 0x437e3c]
call dword 0x1ff24
mov eax,[ebp+0x8]
add eax,byte -0x20
push eax
mov eax,[ebp+0x8]
movzx eax,byte [eax-0x29]
push eax
mov eax,[ebp+0x8]
mov eax,[eax-0x64]
or eax,0x400
or eax,0x100
push eax
mov eax,[ebp+0x8]
mov eax,[eax-0x38]
mov ecx,[eax+0x30]
mov eax,[ebp+0x8]
mov edx,[eax-0x28]
mov eax,[ebp+0x8]
mov eax,[eax-0x38]
call dword 0x35904
mov eax,[ebp+0x8]
mov eax,[eax-0x5c]
mov edx,[ebp+0x8]
mov [edx-0x20],eax
mov eax,[ebp+0x8]
mov eax,[eax-0x54]
mov edx,[ebp+0x8]
mov [edx-0x18],eax
mov eax,[ebp+0x8]
mov eax,[eax-0x50]
mov edx,[ebp+0x8]
sub eax,[edx-0x58]
mov edx,[ebp+0x8]
mov edx,[edx-0x14]
mov ecx,[ebp+0x8]
sub edx,[ecx-0x1c]
sub eax,edx
sar eax,1
jns 0x36d34
adc eax,byte +0x0
push eax
push byte +0x0
mov eax,[ebp+0x8]
add eax,byte -0x20
push eax
call dword 0x61f8
mov eax,[ebp+0x8]
cmp byte [eax+0x8],0x0
jz 0x36d6e
mov eax,[ebp+0x8]
cmp byte [eax-0x29],0x0
jz 0x36d6e
mov eax,[ebp+0x8]
cmp byte [eax-0x5d],0x0
jz 0x36d6e
push byte +0x0
push byte +0x1
mov eax,[ebp+0x8]
add eax,byte -0x20
push eax
call dword 0x61f8
mov eax,[ebp+0x8]
add eax,byte -0x20
push eax
mov eax,[ebp+0x8]
movzx eax,byte [eax-0x29]
push eax
mov eax,[ebp+0x8]
mov eax,[eax-0x64]
push eax
mov eax,[ebp+0x8]
mov eax,[eax-0x38]
mov ecx,[eax+0x30]
mov eax,[ebp+0x8]
mov edx,[eax-0x28]
mov eax,[ebp+0x8]
mov eax,[eax-0x38]
call dword 0x35904
mov eax,[ebp+0x8]
mov eax,[eax-0x38]
movzx ebx,word [eax+0x60]
test bx,bx
jz 0x36e0c
mov eax,[ebp+0x8]
cmp byte [eax+0x8],0x0
jnz 0x36e0c
lea edx,[ebp-0x4]
mov eax,[ebp+0x8]
mov eax,ebx
call dword 0x34960
mov eax,[ebp+0x8]
mov dword [eax-0x20],0xa
mov eax,[ebp+0x8]
mov eax,[eax-0x28]
mov edx,[ebp-0x4]
call dword 0x2098c
mov edx,[ebp+0x8]
add eax,[edx-0x20]
mov edx,[ebp+0x8]
mov [edx-0x18],eax
mov eax,[ebp+0x8]
add eax,byte -0x20
push eax
mov eax,[ebp+0x8]
movzx eax,byte [eax-0x29]
push eax
push byte +0x2
mov eax,[ebp+0x8]
mov edx,[eax-0x28]
mov eax,[ebp+0x8]
mov eax,[eax-0x38]
mov ecx,[ebp-0x4]
call dword 0x35904
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x437e29
lea eax,[ebp-0x4]
call dword 0x3a1c
ret
jmp dword 0x3384
jmp short 0x36e19
pop edi
pop esi
pop ebx
pop ecx
pop ebp
ret
add bh,bh
db 0xff
db 0xff
inc dword [ecx]
add [eax],al
add [dword 0x1000000],ch
add [eax],al
add [ebp-0x75],dl
in al,dx
add esp,byte -0x68
push ebx
push esi
push edi
mov esi,ecx
lea edi,[ebp-0x20]
movsd
movsd
movsd
movsd
mov [ebp-0x28],edx
mov [ebp-0x38],eax
mov eax,[ebp-0x38]
call dword 0x37984
mov [ebp-0x30],eax
mov eax,[ebp-0x38]
call dword 0x36f98
mov [ebp-0x40],eax
test byte [ebp+0xc],0x1
setnz al
mov [ebp-0x29],al
mov eax,[0x468bd4]
cmp dword [eax],byte +0x4
jg 0x36e9a
mov eax,[0x468bd4]
cmp dword [eax],byte +0x4
jnz 0x36e96
mov eax,[0x468d80]
cmp dword [eax],byte +0x0
jg 0x36e9a
xor eax,eax
jmp short 0x36e9c
mov al,0x1
mov [ebp-0x5d],al
mov eax,[0x468bd4]
cmp dword [eax],byte +0x4
jng 0x36eb3
mov eax,[0x468ea4]
cmp dword [eax],byte +0x2
jz 0x36eb7
xor eax,eax
jmp short 0x36eb9
mov al,0x1
mov [ebp-0x65],al
mov edx,0x1
mov eax,0x5
call dword 0xbc90
mov [ebp-0x21],al
cmp byte [ebp-0x21],0x0
jz 0x36efa
call dword 0x4e314
cmp byte [eax+0x5],0x0
jz 0x36efa
push dword 0x3e9
push byte +0x0
mov eax,[0x468b88]
mov eax,[eax]
call eax
cmp eax,byte +0x1
sbb eax,eax
inc eax
mov [ebp-0x22],al
jmp short 0x36efe
mov byte [ebp-0x22],0x0
cmp dword [ebp-0x30],byte +0x0
jz 0x36f6d
mov eax,[ebp-0x30]
cmp byte [eax+0x40],0x0
jnz 0x36f13
cmp dword [ebp-0x40],byte +0x0
jz 0x36f6d
mov eax,[ebp-0x38]
cmp word [eax+0x9a],byte +0x0
jnz 0x36f2d
mov eax,[ebp-0x38]
cmp word [eax+0x92],byte +0x0
jz 0x36f6d
movzx eax,byte [ebp-0x29]
push eax
lea ecx,[ebp-0x20]
mov edx,[ebp-0x28]
mov eax,[ebp-0x38]
mov ebx,[eax]
call dword [ebx+0x34]
mov eax,[ebp-0x38]
cmp word [eax+0x9a],byte +0x0
jz 0x36f8f
lea eax,[ebp-0x20]
push eax
movzx eax,word [ebp+0xc]
push eax
mov ebx,[ebp-0x38]
mov ecx,[ebp-0x28]
mov edx,[ebp-0x38]
mov eax,[ebx+0x9c]
call dword [ebx+0x98]
jmp short 0x36f8f
cmp dword [ebp-0x30],byte +0x0
jz 0x36f88
mov eax,[ebp-0x30]
call dword 0x39204
test al,al
jnz 0x36f88
push ebp
call dword 0x35b60
pop ecx
jmp short 0x36f8f
push ebp
call dword 0x364c0
pop ecx
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret 0x8
push ebx
xor ebx,ebx
mov edx,[eax+0x64]
jmp short 0x36fa3
mov edx,[edx+0x64]
test edx,edx
jz 0x36fad
cmp dword [edx+0x7c],byte +0x0
jz 0x36fa0
test edx,edx
jz 0x36fb6
mov ebx,[edx+0x7c]
jmp short 0x36fc2
call dword 0x37984
test eax,eax
jz 0x36fc2
mov ebx,[eax+0x48]
mov eax,ebx
pop ebx
ret
mov eax,eax
push ebp
mov ebp,esp
add esp,0xfffffeac
mov dword [ebp-0x154],0x154

push byte +0x0
lea eax,[ebp-0x154]
push eax
push byte +0x0
push byte +0x29
call dword 0x6350
test eax,eax
jz 0x3700d
mov eax,[ebp+0x8]
mov eax,[eax-0x4]
mov edx,[ebp-0xbc]
mov [eax],edx
mov eax,[ebp+0x8]
mov eax,[eax+0x8]
mov edx,[ebp-0xb8]
mov [eax],edx
mov esp,ebp
pop ebp
ret
lea eax,[eax+0x0]
push ebp
mov ebp,esp
add esp,byte -0x24
push ebx
push esi
push edi
xor ebx,ebx
mov [ebp-0x24],ebx
mov [ebp-0x8],ebx
mov [ebp-0x4],ecx
mov [ebp-0xc],edx
mov edi,eax
xor eax,eax
push ebp
push dword 0x4381f6
push dword [fs:eax]
mov [fs:eax],esp
mov eax,edi
mov si,0xfff2
call dword 0x2dec
mov edx,[dword 0x4351ec]
call dword 0x2d7c
test al,al
jz 0x37060
mov bl,0x1
push ebp
call dword 0x36fc8
pop ecx
jmp short 0x37062
xor ebx,ebx
mov eax,edi
call dword 0x37984
mov esi,eax
mov eax,edi
call dword 0x36f98
mov [ebp-0x10],eax
mov eax,[edi+0x30]
mov edx,0x438210
call dword 0x3e44
jnz 0x3709a
mov eax,[ebp+0x8]
mov dword [eax],0x5
mov eax,[ebp-0x4]
mov dword [eax],0xfffffffe
xor eax,eax
jmp short 0x370ff
cmp dword [ebp-0x10],byte +0x0
jz 0x370c8
cmp dword [edi+0x40],byte -0x1
jg 0x370aa
test bl,bl
jnz 0x370c8
mov eax,[ebp-0x10]
mov eax,[eax+0x34]
mov edx,[ebp-0x4]
mov [edx],eax
test bl,bl
jnz 0x370c4
mov eax,[ebp-0x10]
mov eax,[eax+0x30]
mov edx,[ebp+0x8]
mov [edx],eax
mov al,0x1
jmp short 0x370ff
cmp dword [edi+0x4c],byte +0x0
jz 0x370f4
mov eax,[edi+0x4c]
mov edx,[eax]
call dword [edx+0x1c]
test al,al
jnz 0x370f4
mov eax,[ebp-0x4]
mov dword [eax],0x10
test bl,bl
jnz 0x370f0
mov eax,[ebp+0x8]
mov dword [eax],0x10
mov al,0x1
jmp short 0x370ff
mov eax,[ebp-0x4]
mov dword [eax],0xfffffff9
xor eax,eax
test al,al
jz 0x3710d
test bl,bl
jnz 0x3710d
mov eax,[ebp-0x4]
add dword [eax],byte +0xf
test bl,bl
jnz 0x37117
mov eax,[ebp+0x8]
add dword [eax],byte +0x3
lea eax,[ebp-0x20]
xor ecx,ecx
mov edx,0x10
call dword 0x252c
test esi,esi
jz 0x3712e
xor ebx,ebx
jmp short 0x37147
mov eax,esi
mov edx,[dword 0x4354d0]
call dword 0x2d7c
test al,al
jz 0x37145
movzx ebx,byte [esi+0x60]
jmp short 0x37147
xor ebx,ebx
movzx esi,word [edi+0x60]
test si,si
jz 0x3716a
lea edx,[ebp-0x24]
mov eax,esi
call dword 0x34960
mov ecx,[ebp-0x24]
lea eax,[ebp-0x8]
mov edx,[edi+0x30]
call dword 0x3d34
jmp short 0x37175
lea eax,[ebp-0x8]
mov edx,[edi+0x30]
call dword 0x3ab4
movzx eax,bl
movzx eax,word [eax*2+0x468588]
or ax,byte +0x40
or ax,byte +0x20
or ax,0x100
or ax,0x400
movzx eax,ax
lea edx,[ebp-0x20]
push edx
push byte +0x0
push eax
mov ecx,[ebp-0x8]
mov edx,[ebp-0xc]
mov eax,edi
call dword 0x35904
mov eax,[ebp-0x18]
sub eax,[ebp-0x20]
add eax,byte +0x7
mov edx,[ebp-0x4]
add [edx],eax
cmp word [edi+0xa2],byte +0x0
jz 0x371d8
mov eax,[ebp-0x4]
push eax
mov eax,[ebp+0x8]
push eax
mov ecx,[ebp-0xc]
mov edx,edi
mov eax,[edi+0xa4]
call dword [edi+0xa0]
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x4381fd
lea eax,[ebp-0x24]
call dword 0x3a1c
lea eax,[ebp-0x8]
call dword 0x3a1c
ret
jmp dword 0x3384
jmp short 0x371e5
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret 0x4
add [eax],al
db 0xff
db 0xff
db 0xff
inc dword [ecx]
add [eax],al
add [dword 0xb0000000],ch
add ebx,eax
nop
cmp dl,[eax+0x48]
jz 0x37227
mov [eax+0x48],dl
mov dl,0x1
mov ecx,[eax]
call dword [ecx+0x3c]
ret
push ebx
push esi
mov esi,edx
mov ebx,eax
mov eax,[ebx+0x30]
mov edx,esi
call dword 0x3e44
jz 0x3724d
lea eax,[ebx+0x30]
mov edx,esi
call dword 0x3a70
mov dl,0x1
mov eax,ebx
mov ecx,[eax]
call dword [ecx+0x3c]
pop esi
pop ebx
ret
push ebx
push esi
push edi
mov ebx,eax
mov esi,[ebx+0x64]
test esi,esi
jz 0x37295
mov eax,esi
call dword 0x373c4
dec eax
test eax,eax
jl 0x37295
inc eax
mov esi,eax
xor edi,edi
mov edx,edi
mov eax,[ebx+0x64]
call dword 0x373d4
cmp ebx,eax
jz 0x37291
cmp byte [eax+0x3d],0x0
jz 0x37291
movzx edx,byte [eax+0x3f]
cmp dl,[ebx+0x3f]
jnz 0x37291
xor edx,edx
call dword 0x3729c
inc edi
dec esi
jnz 0x3726d
pop edi
pop esi
pop ebx
ret
lea eax,[eax+0x0]
push ebx
push esi
push edi
mov ebx,edx
mov esi,eax
cmp bl,[esi+0x38]
jz 0x372e9
mov [esi+0x38],bl
mov edi,[esi+0x64]
test edi,edi
jz 0x372d8
test byte [esi+0x1c],0x2
jnz 0x372d8
movzx eax,bl
mov eax,[eax*4+0x468510]
or eax,byte +0x0
push eax
movzx eax,word [esi+0x50]
push eax
mov eax,edi
call dword 0x35874
push eax
call dword 0x5ea0
test bl,bl
jz 0x372e9
cmp byte [esi+0x3d],0x0
jz 0x372e9
mov eax,esi
call dword 0x37250
pop edi
pop esi
pop ebx
ret
lea eax,[eax+0x0]
push ebx
push esi
push edi
mov ebx,edx
mov esi,eax
cmp bl,[esi+0x39]
jz 0x37362
mov [esi+0x39],bl
mov eax,[0x468ea4]
cmp dword [eax],byte +0x2
jnz 0x37314
mov eax,esi
call dword 0x373c4
test eax,eax
jnz 0x37321
mov edi,[esi+0x64]
test edi,edi
jz 0x3732c
cmp dword [edi+0x6c],byte +0x0
jz 0x3732c
mov dl,0x1
mov eax,esi
mov ecx,[eax]
call dword [ecx+0x3c]
jmp short 0x37362
mov edi,[esi+0x64]
test edi,edi
jz 0x37359
test byte [esi+0x1c],0x2
jnz 0x37359
movzx eax,bl
mov eax,[eax*4+0x468518]
or eax,byte +0x0
push eax
movzx eax,word [esi+0x50]
push eax
mov eax,edi
call dword 0x35874
push eax
call dword 0x5f48
xor edx,edx
mov eax,esi
mov ecx,[eax]
call dword [ecx+0x3c]
pop edi
pop esi
pop ebx
ret
mov eax,eax
push ebx
push esi
push edi
mov ebx,edx
mov esi,eax
cmp bl,[esi+0x3f]
jz 0x373a5
mov edi,[esi+0x64]
test edi,edi
jz 0x3738f
mov edx,esi
mov eax,edi
call dword 0x3772c
mov edx,eax
mov ecx,ebx
mov eax,edi
call dword 0x35814
mov [esi+0x3f],bl
cmp byte [esi+0x38],0x0
jz 0x373a5
cmp byte [esi+0x3d],0x0
jz 0x373a5
mov eax,esi
call dword 0x37250
pop edi
pop esi
pop ebx
ret
lea eax,[eax+0x0]
mov edx,[eax+0x44]
test edx,edx
jz 0x373b7
mov eax,[edx+0x10]
ret
xor eax,eax
ret
mov eax,eax
mov eax,[0x434bf4]
ret
mov eax,eax
mov edx,[eax+0x5c]
test edx,edx
jnz 0x373ce
xor eax,eax
ret
mov eax,[edx+0x8]
ret
mov eax,eax
push ebx
push esi
mov esi,edx
mov ebx,eax
cmp dword [ebx+0x5c],byte +0x0
jnz 0x373ea
mov eax,[0x468c34]
call dword 0x348b4
mov edx,esi
mov eax,[ebx+0x5c]
call dword 0x13e7c
pop esi
pop ebx
ret
nop
cmp dx,[eax+0x60]
jz 0x37409
mov [eax+0x60],dx
mov dl,0x1
mov ecx,[eax]
call dword [ecx+0x3c]
ret
mov eax,eax
cmp dl,[eax+0x3e]
jz 0x3741b
mov [eax+0x3e],dl
mov dl,0x1
mov ecx,[eax]
call dword [ecx+0x3c]
ret
cmp edx,[eax+0x40]
jz 0x3742b
mov [eax+0x40],edx
mov dl,0x1
mov ecx,[eax]
call dword [ecx+0x3c]
ret
or edx,byte -0x1
mov ecx,[eax+0x64]
test ecx,ecx
jz 0x37441
mov edx,eax
mov eax,ecx
call dword 0x3772c
mov edx,eax
mov eax,edx
ret
push ebx
push esi
push edi
mov esi,edx
mov ebx,eax
mov eax,[ebx+0x64]
test eax,eax
jz 0x37486
call dword 0x373c4
test esi,esi
jnl 0x3745d
xor esi,esi
cmp eax,esi
jg 0x37464
mov esi,eax
dec esi
mov eax,ebx
call dword 0x3742c
cmp esi,eax
jz 0x37486
mov edi,[ebx+0x64]
mov edx,ebx
mov eax,edi
call dword 0x37760
mov ecx,ebx
mov edx,esi
mov eax,edi
call dword 0x37550
pop edi
pop esi
pop ebx
ret
mov eax,eax
push ebp
mov ebp,esp
push ecx
push ebx
push esi
mov [ebp-0x4],eax
mov eax,[ebp-0x4]
call dword 0x373c4
mov ebx,eax
dec ebx
test ebx,ebx
jl 0x374bd
inc ebx
xor esi,esi
mov edx,esi
mov eax,[ebp-0x4]
call dword 0x373d4
mov edx,eax
mov eax,[ebp+0xc]
call dword [ebp+0x8]
inc esi
dec ebx
jnz 0x374a7
pop esi
pop ebx
pop ecx
pop ebp
ret 0x8
push ebx
push esi
mov esi,ecx
mov ebx,edx
mov eax,ebx
mov edx,[dword 0x434ccc]
call dword 0x2da0
mov edx,esi
call dword 0x37444
pop esi
pop ebx
ret
lea eax,[eax+0x0]
push ebx
push esi
push edi
push ebp
mov ebx,edx
mov ebp,eax
cmp bl,[ebp+0x3a]
jz 0x3753b
test bl,bl
jz 0x3752f
cmp dword [ebp+0x64],byte +0x0
jz 0x3752f
mov eax,[ebp+0x64]
call dword 0x373c4
mov edi,eax
dec edi
test edi,edi
jl 0x3752f
inc edi
xor esi,esi
mov edx,esi
mov eax,[ebp+0x64]
call dword 0x373d4
cmp byte [eax+0x3a],0x0
jz 0x3752b
mov edx,esi
mov eax,[ebp+0x64]
call dword 0x373d4
mov byte [eax+0x3a],0x0
inc esi
dec edi
jnz 0x3750d
mov [ebp+0x3a],bl
mov dl,0x1
mov eax,ebp
mov ecx,[eax]
call dword [ecx+0x3c]
pop ebp
pop edi
pop esi
pop ebx
ret
mov edx,[eax+0x44]
test edx,edx
jz 0x3754e
mov eax,edx
mov edx,[eax]
call dword [edx+0x1c]
ret
nop
push ebx
push esi
push edi
push ebp
mov esi,ecx
mov edi,edx
mov ebx,eax
cmp dword [esi+0x64],byte +0x0
jz 0x3756a
mov eax,[0x468ea0]
call dword 0x348b4
cmp dword [ebx+0x5c],byte +0x0
jnz 0x3757f
mov dl,0x1
mov eax,[0x41294c]
call dword 0x2bc0
mov [ebx+0x5c],eax
mov ebp,edi
dec ebp
test ebp,ebp
jl 0x375b6
mov eax,[ebx+0x5c]
cmp ebp,[eax+0x8]
jnl 0x375b6
mov edx,ebp
mov eax,[ebx+0x5c]
call dword 0x13e7c
movzx eax,byte [eax+0x3f]
cmp al,[esi+0x3f]
jna 0x375b6
mov edx,ebp
mov eax,[ebx+0x5c]
call dword 0x13e7c
movzx edx,byte [eax+0x3f]
mov eax,esi
call dword 0x37368
movzx ecx,byte [esi+0x3f]
mov edx,edi
mov eax,ebx
call dword 0x35814
mov ecx,esi
mov edx,edi
mov eax,[ebx+0x5c]
call dword 0x13ef8
mov [esi+0x64],ebx
mov [esi+0x84],ebx
mov dword [esi+0x80],0x4387cc

cmp dword [ebx+0x34],byte +0x0
jz 0x375ef
mov eax,ebx
call dword 0x35744
mov eax,ebx
call dword 0x373c4
dec eax
setz dl
mov eax,ebx
mov ecx,[eax]
call dword [ecx+0x3c]
pop ebp
pop edi
pop esi
pop ebx
ret
mov eax,eax
push ebx
push esi
push edi
mov esi,edx
mov ebx,eax
test esi,esi
jl 0x37624
cmp dword [ebx+0x5c],byte +0x0
jz 0x37624
mov eax,ebx
call dword 0x373c4
cmp esi,eax
jl 0x3762e
mov eax,[0x468c34]
call dword 0x348b4
mov edx,esi
mov eax,[ebx+0x5c]
call dword 0x13e7c
mov edi,eax
mov edx,esi
mov eax,[ebx+0x5c]
call dword 0x13d70
xor eax,eax
mov [edi+0x64],eax
xor eax,eax
mov [edi+0x80],eax
mov [edi+0x84],eax
cmp dword [ebx+0x34],byte +0x0
jz 0x37664
mov eax,ebx
call dword 0x35744
mov eax,ebx
call dword 0x373c4
test eax,eax
setz dl
mov eax,ebx
mov ecx,[eax]
call dword [ecx+0x3c]
pop edi
pop esi
pop ebx
ret
nop
push ebx
push esi
mov ebx,eax
cmp byte [ebx+0x39],0x0
jz dword 0x37729
cmp dword [ebx+0x44],byte +0x0
jnz 0x37699
cmp byte [ebx+0xa8],0x0
jnz 0x376b4
mov esi,[ebx+0x44]
test esi,esi
jz 0x376c2
mov eax,esi
mov edx,[eax]
call dword [edx+0x78]
test al,al
jnz 0x376c2
cmp byte [ebx+0xa8],0x0
jz 0x376c2
movzx edx,byte [ebx+0x38]
xor dl,0x1
mov eax,ebx
call dword 0x3729c
cmp word [ebx+0x8a],byte +0x0
jz 0x376f9
mov eax,ebx
call dword 0x373ac
test eax,eax
jz 0x376f9
mov eax,ebx
call dword 0x373ac
mov eax,[eax+0x40]
cmp eax,[ebx+0x88]
jz 0x376f9
mov edx,ebx
mov eax,[ebx+0x8c]
call dword [ebx+0x88]
jmp short 0x37729
test byte [ebx+0x1c],0x10
jnz 0x37711
cmp dword [ebx+0x44],byte +0x0
jz 0x37711
mov edx,ebx
mov eax,[ebx+0x44]
mov ecx,[eax]
call dword [ecx+0x18]
jmp short 0x37729
cmp word [ebx+0x8a],byte +0x0
jz 0x37729
mov edx,ebx
mov eax,[ebx+0x8c]
call dword [ebx+0x88]
pop esi
pop ebx
ret
push esi
or ecx,byte -0x1
mov esi,[eax+0x5c]
test esi,esi
jz 0x37740
mov eax,esi
call dword 0x13ed8
mov ecx,eax
mov eax,ecx
pop esi
ret
push ebx
push esi
mov esi,edx
mov ebx,eax
mov eax,ebx
call dword 0x373c4
mov edx,eax
mov ecx,esi
mov eax,ebx
call dword 0x37550
pop esi
pop ebx
ret
nop
push ebx
push esi
mov ebx,eax
mov eax,ebx
call dword 0x3772c
mov esi,eax
cmp esi,byte -0x1
jnz 0x3777c
mov eax,[0x468df4]
call dword 0x348b4
mov edx,esi
mov eax,ebx
call dword 0x37608
pop esi
pop ebx
ret
push ebx
push esi
mov ebx,edx
mov esi,eax
cmp dword [esi+0x64],byte +0x0
jnz 0x377aa
mov eax,[esi+0x4]
mov edx,[dword 0x4350f0]
call dword 0x2d7c
test al,al
jz 0x377aa
xor eax,eax
jmp short 0x377ac
mov eax,esi
cmp word [esi+0x82],byte +0x0
jz 0x377c7
push ebx
mov ecx,eax
mov edx,esi
mov eax,[esi+0x84]
call dword [esi+0x80]
pop esi
pop ebx
ret
mov eax,eax
push ebp
mov ebp,esp
push ebx
push esi
mov esi,ecx
mov ebx,eax
cmp byte [ebp+0x8],0x0
jz 0x377ee
cmp dword [ebx+0x34],byte +0x0
jnz 0x377e7
cmp dword [ebx+0x6c],byte +0x0
jz 0x377ee
mov eax,ebx
call dword 0x35744
mov eax,[ebx+0x64]
test eax,eax
jz 0x37802
push byte +0x0
mov ecx,esi
mov edx,ebx
call dword 0x377cc
jmp short 0x3781d
mov esi,[ebx+0x4]
mov eax,esi
mov edx,[dword 0x4351ec]
call dword 0x2d7c
test al,al
jz 0x3781d
mov eax,esi
call dword 0x39750
pop esi
pop ebx
pop ebp
ret 0x4
nop
push ebx
mov ebx,eax
cmp dword [ebx+0x4c],byte +0x0
jnz 0x3783c
mov dl,0x1
mov eax,[0x41fb38]
call dword 0x249f4
mov [ebx+0x4c],eax
mov dl,0x1
mov eax,[ebx+0x4c]
mov ecx,[eax]
call dword [ecx+0x3c]
mov eax,[ebx+0x4c]
pop ebx
ret
nop
push ebx
push esi
push edi
mov edi,edx
mov ebx,eax
test edi,edi
jnz 0x37866
mov eax,[ebx+0x44]
call dword 0x2bf0
xor eax,eax
mov [ebx+0x44],eax
jmp short 0x378b5
cmp dword [ebx+0x44],byte +0x0
jnz 0x37881
mov eax,ebx
mov si,0xffee
call dword 0x2dec
mov ecx,ebx
mov dl,0x1
call dword [eax+0x14]
mov [ebx+0x44],eax
mov edx,edi
mov eax,[ebx+0x44]
mov ecx,[eax]
call dword [ecx+0xc]
mov eax,[ebx+0x44]
mov [eax+0xc],ebx
mov dword [eax+0x8],0x438ae4
test byte [edi+0x1c],0x1
setnz cl
mov edx,edi
mov eax,ebx
mov si,0xffef
call dword 0x2dec
mov edx,ebx
mov eax,edi
call dword 0x1a670
pop edi
pop esi
pop ebx
ret
lea eax,[eax+0x0]
push ebx
push esi
mov ebx,edx
mov esi,eax
cmp dword [esi+0x4c],byte +0x0
jnz 0x378d7
mov dl,0x1
mov eax,[0x41fb38]
call dword 0x249f4
mov [esi+0x4c],eax
mov edx,ebx
mov eax,[esi+0x4c]
mov ecx,[eax]
call dword [ecx+0x8]
mov dl,0x1
mov eax,esi
mov ecx,[eax]
call dword [ecx+0x3c]
pop esi
pop ebx
ret
lea eax,[eax+0x0]
push ebx
push esi
push edi
mov edi,eax
mov eax,edi
call dword 0x373c4
mov ebx,eax
dec ebx
test ebx,ebx
jl 0x37918
inc ebx
xor esi,esi
mov edx,esi
mov eax,edi
call dword 0x373d4
mov edx,[eax]
call dword [edx+0x40]
inc esi
dec ebx
jnz 0x37906
pop edi
pop esi
pop ebx
ret
mov edx,[eax+0x64]
test edx,edx
jz 0x3792d
cmp dword [edx+0x70],byte +0x0
jz 0x3792d
mov eax,[edx+0x70]
ret
mov eax,edx
ret
push ebx
push esi
mov esi,edx
mov ebx,eax
mov eax,[ebx+0x64]
test eax,eax
jz 0x37944
mov edx,ebx
call dword 0x37760
test esi,esi
jz 0x3797f
mov eax,esi
mov edx,[dword 0x4350f0]
call dword 0x2d7c
test al,al
jz 0x37965
mov eax,[esi+0x34]
mov edx,ebx
call dword 0x37744
jmp short 0x3797f
mov eax,esi
mov edx,[dword 0x434ccc]
call dword 0x2d7c
test al,al
jz 0x3797f
mov edx,ebx
mov eax,esi
call dword 0x37744
pop esi
pop ebx
ret
mov eax,eax
jmp short 0x37988
mov eax,edx
mov edx,[eax+0x64]
test edx,edx
jnz 0x37986
mov eax,[eax+0x70]
ret
nop
push ebx
mov ebx,eax
cmp dl,[ebx+0x3d]
jz 0x379bb
mov [ebx+0x3d],dl
cmp byte [ebx+0x38],0x0
jz 0x379b2
cmp byte [ebx+0x3d],0x0
jz 0x379b2
mov eax,ebx
call dword 0x37250
mov dl,0x1
mov eax,ebx
mov ecx,[eax]
call dword [ecx+0x3c]
pop ebx
ret
lea eax,[eax+0x0]
push ebx
push esi
push edi
mov ebx,ecx
mov edi,edx
mov esi,eax
mov eax,edi
mov edx,[dword 0x45160c]
call dword 0x2d7c
test al,al
jz dword 0x37ade
test bl,bl
jz 0x379eb
cmp byte [esi+0xa8],0x0
jnz 0x379f8
movzx eax,byte [edi+0x95]
mov [esi+0xa8],al
test bl,bl
jz 0x37a02
cmp dword [esi+0x30],byte +0x0
jnz 0x37a0c
mov edx,[edi+0x64]
mov eax,esi
call dword 0x37228
test bl,bl
jz 0x37a16
cmp byte [esi+0x38],0x0
jnz 0x37a21
movzx edx,byte [edi+0x69]
mov eax,esi
call dword 0x3729c
test bl,bl
jz 0x37a2b
cmp byte [esi+0x39],0x1
jnz 0x37a36
movzx edx,byte [edi+0x6a]
mov eax,esi
call dword 0x372f0
test bl,bl
jz 0x37a40
cmp dword [esi+0x54],byte +0x0
jnz 0x37a46
mov eax,[edi+0x74]
mov [esi+0x54],eax
test bl,bl
jz 0x37a50
cmp dword [esi+0x58],byte +0x0
jnz 0x37a5b
lea eax,[esi+0x58]
mov edx,[edi+0x7c]
call dword 0x3a70
cmp byte [esi+0x3d],0x0
jz 0x37a76
test bl,bl
jz 0x37a6b
cmp byte [esi+0x3f],0x0
jnz 0x37a76
movzx edx,byte [edi+0x6c]
mov eax,esi
call dword 0x37368
test bl,bl
jz 0x37a80
cmp dword [esi+0x40],byte -0x1
jnz 0x37a8d
mov edx,[edi+0x80]
mov eax,esi
call dword 0x3741c
test bl,bl
jz 0x37a98
cmp word [esi+0x60],byte +0x0
jnz 0x37aa6
movzx edx,word [edi+0x84]
mov eax,esi
call dword 0x373f8
test bl,bl
jz 0x37ab0
cmp byte [esi+0x3e],0x1
jnz 0x37abe
movzx edx,byte [edi+0x86]
mov eax,esi
call dword 0x3740c
test bl,bl
jz 0x37acc
cmp word [esi+0x8a],byte +0x0
jnz 0x37ade
mov eax,[edi+0x40]
mov [esi+0x88],eax
mov eax,[edi+0x44]
mov [esi+0x8c],eax
pop edi
pop esi
pop ebx
ret
mov eax,eax
push esi
push edi
mov edi,edx
mov esi,eax
mov eax,esi
call dword 0x373ac
cmp edi,eax
jnz 0x37b04
xor ecx,ecx
mov edx,edi
mov eax,esi
mov si,0xffef
call dword 0x2dec
pop edi
pop esi
ret
nop
push ebx
push esi
mov ebx,eax
mov esi,[ebx+0x44]
test esi,esi
jz 0x37b23
mov eax,esi
mov edx,[eax]
call dword [edx+0x20]
test al,al
jz 0x37b23
xor eax,eax
pop esi
pop ebx
ret
mov al,0x1
pop esi
pop ebx
ret
push ebx
push esi
mov ebx,eax
mov esi,[ebx+0x44]
test esi,esi
jz 0x37b43
mov eax,esi
mov edx,[eax]
call dword [edx+0x24]
test al,al
jz 0x37b43
xor eax,eax
pop esi
pop ebx
ret
mov al,0x1
pop esi
pop ebx
ret
push ebx
push esi
mov ebx,eax
mov esi,[ebx+0x44]
test esi,esi
jz 0x37b63
mov eax,esi
mov edx,[eax]
call dword [edx+0x28]
test al,al
jz 0x37b63
xor eax,eax
pop esi
pop ebx
ret
mov al,0x1
pop esi
pop ebx
ret
push ebx
push esi
mov ebx,eax
mov esi,[ebx+0x44]
test esi,esi
jz 0x37b83
mov eax,esi
mov edx,[eax]
call dword [edx+0x38]
test al,al
jz 0x37b83
xor eax,eax
pop esi
pop ebx
ret
mov al,0x1
pop esi
pop ebx
ret
push ebx
push esi
mov ebx,eax
mov esi,[ebx+0x44]
test esi,esi
jz 0x37ba3
mov eax,esi
mov edx,[eax]
call dword [edx+0x30]
test al,al
jz 0x37ba3
xor eax,eax
pop esi
pop ebx
ret
mov al,0x1
pop esi
pop ebx
ret
push ebx
push esi
mov ebx,eax
mov esi,[ebx+0x44]
test esi,esi
jz 0x37bc3
mov eax,esi
mov edx,[eax]
call dword [edx+0x3c]
test al,al
jz 0x37bc3
xor eax,eax
pop esi
pop ebx
ret
mov al,0x1
pop esi
pop ebx
ret
push ebx
push esi
mov ebx,eax
mov esi,[ebx+0x44]
test esi,esi
jz 0x37be3
mov eax,esi
mov edx,[eax]
call dword [edx+0x40]
test al,al
jz 0x37be3
xor eax,eax
pop esi
pop ebx
ret
mov al,0x1
pop esi
pop ebx
ret
push ebx
push esi
mov ebx,eax
mov esi,[ebx+0x44]
test esi,esi
jz 0x37c03
mov eax,esi
mov edx,[eax]
call dword [edx+0x44]
test al,al
jz 0x37c03
xor eax,eax
pop esi
pop ebx
ret
mov al,0x1
pop esi
pop ebx
ret
push ebx
push esi
mov ebx,eax
mov esi,[ebx+0x44]
test esi,esi
jz 0x37c23
mov eax,esi
mov edx,[eax]
call dword [edx+0x8]
test al,al
jz 0x37c23
xor eax,eax
pop esi
pop ebx
ret
mov al,0x1
pop esi
pop ebx
ret
push ebx
push esi
push edi
mov esi,edx
mov ebx,eax
mov eax,esi
mov edx,[dword 0x45160c]
call dword 0x2d7c
test al,al
jz 0x37c95
movzx edx,byte [ebx+0x39]
mov edi,esi
mov eax,edi
call dword 0x511b8
mov edx,[ebx+0x54]
mov eax,edi
mov ecx,[eax]
call dword [ecx+0x48]
mov edx,[ebx+0x58]
mov eax,edi
call dword 0x512f4
mov edx,[ebx+0x40]
mov eax,edi
call dword 0x51354
mov edx,[ebx+0x30]
mov eax,edi
call dword 0x51050
movzx edx,byte [ebx+0x3e]
mov eax,edi
call dword 0x51414
push dword [ebx+0x8c]
push dword [ebx+0x88]
mov eax,edi
mov edx,[eax]
call dword [edx+0x34]
jmp short 0x37c9e
mov edx,esi
mov eax,ebx
call dword 0x14560
pop edi
pop esi
pop ebx
ret
mov eax,eax
push ebx
push esi
push edi
mov ebx,ecx
mov edi,edx
mov esi,eax
mov ecx,ebx
mov edx,edi
mov eax,esi
call dword 0x1a8cc
cmp bl,0x1
jnz 0x37cf1
mov eax,esi
call dword 0x373ac
cmp edi,eax
jnz 0x37cd3
xor edx,edx
mov eax,esi
call dword 0x3784c
jmp short 0x37cf1
cmp edi,[esi+0x7c]
jnz 0x37ce3
xor edx,edx
mov eax,esi
call dword 0x37cf8
jmp short 0x37cf1
cmp edi,[esi+0x68]
jnz 0x37cf1
xor edx,edx
mov eax,esi
call dword 0x356cc
pop edi
pop esi
pop ebx
ret
lea eax,[eax+0x0]
push ebx
push esi
mov esi,edx
mov ebx,eax
mov eax,[ebx+0x7c]
test eax,eax
jz 0x37d0d
mov edx,[ebx+0x78]
call dword 0x4f9e8
mov eax,esi
mov [ebx+0x7c],eax
test eax,eax
jz 0x37d28
mov edx,[ebx+0x78]
call dword 0x4fa2c
mov edx,ebx
mov eax,[ebx+0x7c]
call dword 0x1a670
mov eax,ebx
call dword 0x37d68
pop esi
pop ebx
ret
mov eax,eax
cmp edx,[eax+0x7c]
jnz 0x37d3e
call dword 0x37d68
ret
nop
push ebx
push esi
mov esi,eax
xor ebx,ebx
mov eax,0x438d40
mov ecx,esi
mov edx,[esi+0x68]
call dword 0x34da8
push byte +0x1
mov ecx,esi
mov edx,esi
mov eax,esi
call dword 0x377cc
mov eax,ebx
pop esi
pop ebx
ret
nop
mov edx,0x438d40
mov ecx,eax
mov eax,[eax+0x68]
xchg eax,edx
call dword 0x34da8
ret
lea eax,[eax+0x0]
push ebp
mov ebp,esp
push ebx
mov edx,[ebp+0x8]
mov edx,[edx-0x4]
call dword 0xc1e8
test eax,eax
setnz bl
test bl,bl
jz 0x37da5
mov edx,[ebp+0x8]
add edx,byte -0x4
mov ecx,0x1
xchg eax,edx
call dword 0x3f54
mov eax,ebx
pop ebx
pop ebp
ret
mov eax,eax
push ebp
mov ebp,esp
push ebx
push esi
push edi
mov eax,[ebp+0x8]
mov edx,[eax-0xc]
mov eax,[ebp+0x8]
mov eax,[eax-0x8]
mov ecx,[eax]
call dword [ecx+0x8]
mov eax,[ebp+0x8]
mov eax,[eax-0xc]
mov edx,[eax]
call dword [edx+0x14]
mov edx,[ebp+0x8]
mov [edx-0x10],eax
mov eax,[ebp+0x8]
mov eax,[eax-0x14]
mov edx,[eax]
call dword [edx+0x14]
mov esi,eax
dec esi
test esi,esi
jl 0x37e17
inc esi
xor ebx,ebx
mov eax,[ebp+0x8]
mov eax,[eax-0x14]
mov edx,ebx
mov ecx,[eax]
call dword [ecx+0x18]
push eax
mov eax,[ebp+0x8]
mov eax,[eax-0x14]
mov edx,ebx
mov ecx,[eax]
call dword [ecx+0x18]
mov edx,[eax+0x30]
mov eax,[ebp+0x8]
mov eax,[eax-0x8]
pop ecx
mov edi,[eax]
call dword [edi+0x3c]
inc ebx
dec esi
jnz 0x37de9
mov eax,[ebp+0x8]
add eax,byte -0x18
mov edx,[ebp+0x8]
mov edx,[edx-0x4]
call dword 0x3ab4
pop edi
pop esi
pop ebx
pop ebp
ret
lea eax,[eax+0x0]
push ebp
mov ebp,esp
add esp,byte -0x18
push ebx
push esi
xor ebx,ebx
mov [ebp-0x18],ebx
mov [ebp-0x14],ebx
mov [ebp-0x8],ecx
mov [ebp-0x4],edx
mov ebx,eax
xor eax,eax
push ebp
push dword 0x438f73
push dword [fs:eax]
mov [fs:eax],esp
mov byte [ebp-0x9],0x0
mov eax,[ebx]
mov [ebp-0x10],eax
mov eax,[ebp-0x10]
test eax,eax
jz 0x37e6b
sub eax,byte +0x4
mov eax,[eax]
test eax,eax
jng 0x37e93
mov esi,0x1
mov edx,[ebx]
movzx edx,byte [edx+esi-0x1]
mov ecx,[dword 0x468e98]
movzx edx,dl
bt [ecx],edx
jnc 0x37e8f
mov byte [ebp-0x9],0x1
jmp short 0x37e93
inc esi
dec eax
jnz 0x37e74
cmp byte [ebp-0x9],0x0
jz dword 0x37f43
mov eax,[ebx]
mov [ebp-0x10],eax
mov esi,[ebp-0x10]
test esi,esi
jz 0x37eae
sub esi,byte +0x4
mov esi,[esi]
lea eax,[ebp-0x14]
push eax
mov edx,esi
sub edx,byte +0x3
inc edx
mov eax,[ebx]
mov ecx,0x3
call dword 0x3f14
mov eax,[ebp-0x14]
mov edx,0x438f88
call dword 0x3e44
jnz 0x37f21
mov eax,[ebx]
mov [ebp-0x10],eax
mov esi,[ebp-0x10]
test esi,esi
jz 0x37ee4
sub esi,byte +0x4
mov esi,[esi]
lea eax,[ebp-0x18]
push eax
mov ecx,esi
sub ecx,byte +0x3
mov eax,[ebx]
mov edx,0x1
call dword 0x3f14
push dword [ebp-0x18]
push dword 0x438f94
push dword 0x438fa0
push dword [ebp-0x4]
push dword 0x438fac
push dword 0x438f88
mov eax,ebx
mov edx,0x6
call dword 0x3db0
jmp short 0x37f58
push dword [ebx]
push dword 0x438f94
push dword 0x438fa0
push dword [ebp-0x4]
push dword 0x438fac
mov eax,ebx
mov edx,0x5
call dword 0x3db0
jmp short 0x37f58
cmp dword [ebp-0x8],byte +0x0
jz 0x37f58
mov edx,ebx
mov ecx,[ebp-0x8]
mov eax,0x438fa0
call dword 0x3f9c
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x438f7a
lea eax,[ebp-0x18]
mov edx,0x2
call dword 0x3a40
ret
jmp dword 0x3384
jmp short 0x37f65
pop esi
pop ebx
mov esp,ebp
pop ebp
ret
db 0xff
db 0xff
db 0xff
inc dword [ebx]
add [eax],al
add [esi],ch
cs add bh,bh
db 0xff
db 0xff
inc dword [ecx]
add [eax],al
add [eax],ch
add [eax],al
add bh,bh
db 0xff
db 0xff
inc dword [ecx]
add [eax],al
add [esi],ah
add [eax],al
add bh,bh
db 0xff
db 0xff
inc dword [ecx]
add [eax],al
add [ecx],ch
add [eax],al
add [ebp-0x75],dl
in al,dx
mov ecx,0x8
push byte +0x0
push byte +0x0
dec ecx
jnz 0x37fb8
push ecx
push ebx
push esi
push edi
mov [ebp-0x25],dl
mov ebx,eax
xor eax,eax
push ebp
push dword 0x439438
push dword [fs:eax]
mov [fs:eax],esp
mov byte [ebp-0x26],0x0
cmp byte [ebp-0x25],0x0
jnz 0x37ff9
test byte [ebx+0x1c],0x10
jnz dword 0x38408
mov eax,ebx
call dword 0x385f0
test al,al
jz dword 0x38408
lea eax,[ebp-0x4]
mov edx,[dword 0x4684b4]
call dword 0x3ab4
xor eax,eax
mov [ebp-0xc],eax
xor eax,eax
mov [ebp-0x14],eax
xor eax,eax
mov [ebp-0x2c],eax
xor eax,eax
mov [ebp-0x8],eax
xor eax,eax
mov [ebp-0x10],eax
xor edx,edx
push ebp
push dword 0x439401
push dword [fs:edx]
mov [fs:edx],esp
mov dl,0x1
mov eax,[0x412efc]
call dword 0x2bc0
mov [ebp-0xc],eax
mov dl,0x1
mov eax,[0x412efc]
call dword 0x2bc0
mov [ebp-0x14],eax
mov dl,0x1
mov eax,[0x412efc]
call dword 0x2bc0
mov [ebp-0x2c],eax
mov dl,0x1
mov eax,[0x412efc]
call dword 0x2bc0
mov [ebp-0x8],eax
mov eax,ebx
call dword 0x373c4
dec eax
test eax,eax
jl dword 0x3817d
inc eax
mov [ebp-0x34],eax
xor esi,esi
mov edx,esi
mov eax,ebx
call dword 0x373d4
cmp byte [eax+0x3e],0x0
jz dword 0x38173
mov edx,esi
mov eax,ebx
call dword 0x373d4
mov eax,[eax+0x30]
mov edx,0x439454
call dword 0x3e44
jz dword 0x38173
mov edx,esi
mov eax,ebx
call dword 0x373d4
cmp dword [eax+0x30],byte +0x0
jz dword 0x38173
mov edx,esi
mov eax,ebx
call dword 0x373d4
mov eax,[eax+0x30]
lea edx,[ebp-0x38]
call dword 0x3a1a8
mov eax,[ebp-0x38]
lea edx,[ebp-0x1c]
call dword 0x7578
cmp dword [ebp-0x1c],byte +0x0
jnz 0x38109
mov edx,esi
mov eax,ebx
call dword 0x373d4
push eax
mov edx,esi
mov eax,ebx
call dword 0x373d4
mov ecx,[eax+0x30]
xor edx,edx
mov eax,[ebp-0x2c]
mov edi,[eax]
call dword [edi+0x64]
jmp short 0x38173
mov edx,[dword 0x4684b4]
mov eax,[ebp-0x1c]
call dword 0xc1e8
test eax,eax
jz 0x38173
push ebp
mov eax,[ebp-0x1c]
call dword 0x37d7c
pop ecx
test al,al
jnz 0x38173
mov edx,esi
mov eax,ebx
call dword 0x373d4
add eax,byte +0x30
push eax
mov edx,esi
mov eax,ebx
call dword 0x373d4
mov eax,[eax+0x30]
lea edx,[ebp-0x3c]
call dword 0x3a0b8
mov edx,[ebp-0x3c]
pop eax
call dword 0x3a70
mov edx,esi
mov eax,ebx
call dword 0x373d4
push eax
mov edx,esi
mov eax,ebx
call dword 0x373d4
mov ecx,[eax+0x30]
xor edx,edx
mov eax,[ebp-0x2c]
mov edi,[eax]
call dword [edi+0x64]
inc esi
dec dword [ebp-0x34]
jnz dword 0x38080
lea eax,[ebp-0x24]
mov edx,[ebp-0x4]
call dword 0x3ab4
mov eax,[ebp-0x2c]
mov edx,[eax]
call dword [edx+0x14]
dec eax
test eax,eax
jl dword 0x382fc
inc eax
mov [ebp-0x34],eax
lea eax,[ebp-0x4]
mov edx,[ebp-0x24]
call dword 0x3ab4
mov edx,[ebp-0x2c]
mov eax,[ebp-0x14]
mov ecx,[eax]
call dword [ecx+0x8]
mov eax,[ebp-0xc]
mov edx,[eax]
call dword [edx+0x44]
mov eax,[ebp-0x14]
mov edx,[eax]
call dword [edx+0x14]
mov esi,eax
dec esi
cmp esi,byte +0x0
jl dword 0x38292
lea ecx,[ebp-0x20]
mov edx,esi
mov eax,[ebp-0x14]
mov ebx,[eax]
call dword [ebx+0xc]
mov ebx,0x1
jmp dword 0x38278
mov eax,[ebp-0x20]
movzx eax,byte [eax+ebx-0x1]
mov edx,[dword 0x468e98]
movzx eax,al
bt [edx],eax
jnc 0x381ff
inc ebx
jmp short 0x38277
lea eax,[ebp-0x40]
push eax
mov ecx,0x1
mov edx,ebx
mov eax,[ebp-0x20]
call dword 0x3f14
mov eax,[ebp-0x40]
lea edx,[ebp-0x1c]
call dword 0x7578
push ebp
mov eax,[ebp-0x1c]
call dword 0x37d7c
pop ecx
test al,al
jz 0x38277
mov eax,[0x468eb4]
cmp byte [eax+0xc],0x0
jz 0x38245
lea eax,[ebp-0x20]
mov ecx,ebx
mov edx,[ebp-0x1c]
call dword 0x37e30
jmp short 0x38254
lea edx,[ebp-0x20]
mov ecx,ebx
mov eax,0x439460
call dword 0x3f9c
mov edx,esi
mov eax,[ebp-0x14]
mov ecx,[eax]
call dword [ecx+0x18]
mov ecx,eax
mov edx,[ebp-0x20]
mov eax,[ebp-0xc]
mov ebx,[eax]
call dword [ebx+0x3c]
mov edx,esi
mov eax,[ebp-0x14]
mov ecx,[eax]
call dword [ecx+0x48]
jmp short 0x38288
inc ebx
mov eax,[ebp-0x20]
call dword 0x3cdc
cmp ebx,eax
jng dword 0x381e6
dec esi
cmp esi,byte -0x1
jnz dword 0x381cf
mov eax,[ebp-0xc]
mov edx,[eax]
call dword [edx+0x14]
cmp eax,[ebp-0x10]
jng 0x382a6
push ebp
call dword 0x37dac
pop ecx
mov eax,[ebp-0x14]
mov edx,[eax]
call dword [edx+0x14]
test eax,eax
jng 0x382fc
mov eax,[ebp-0x14]
mov edx,[eax]
call dword [edx+0x14]
mov edi,eax
dec edi
test edi,edi
jl 0x382f3
inc edi
xor esi,esi
mov edx,esi
mov eax,[ebp-0x14]
mov ecx,[eax]
call dword [ecx+0x18]
mov edx,eax
mov eax,[ebp-0x2c]
mov ecx,[eax]
call dword [ecx+0x5c]
mov ebx,eax
mov eax,[ebp-0x2c]
mov edx,[eax]
call dword [edx+0x14]
mov ecx,eax
dec ecx
mov edx,ebx
mov eax,[ebp-0x2c]
mov ebx,[eax]
call dword [ebx+0x70]
inc esi
dec edi
jnz 0x382c4
dec dword [ebp-0x34]
jnz dword 0x3819d
cmp dword [ebp-0x10],byte +0x0
jnz 0x38309
push ebp
call dword 0x37dac
pop ecx
mov eax,[ebp-0x8]
mov edx,[eax]
call dword [edx+0x14]
test eax,eax
setg [ebp-0x26]
mov eax,[ebp-0x8]
mov edx,[eax]
call dword [edx+0x14]
dec eax
test eax,eax
jl dword 0x383d3
inc eax
mov [ebp-0x34],eax
xor esi,esi
lea ecx,[ebp-0x20]
mov edx,esi
mov eax,[ebp-0x8]
mov ebx,[eax]
call dword [ebx+0xc]
mov eax,[0x468eb4]
cmp byte [eax+0xc],0x0
jz 0x383b4
mov edx,[ebp-0x20]
mov eax,0x439460
call dword 0xc1e8
test eax,eax
jnz 0x383b4
cmp dword [ebp-0x18],byte +0x0
jz 0x383b4
mov edx,[ebp-0x20]
mov eax,0x439460
call dword 0xc1e8
test eax,eax
jnz 0x383b4
mov ebx,[ebp-0x18]
test ebx,ebx
jz 0x3837a
sub ebx,byte +0x4
mov ebx,[ebx]
lea eax,[ebp-0x44]
push eax
mov ecx,0x1
mov edx,ebx
mov eax,[ebp-0x18]
call dword 0x3f14
mov edx,[ebp-0x44]
lea eax,[ebp-0x20]
xor ecx,ecx
call dword 0x37e30
mov eax,[ebp-0x18]
test eax,eax
jz 0x383a6
sub eax,byte +0x4
mov eax,[eax]
lea edx,[ebp-0x18]
mov ecx,0x1
xchg eax,edx
call dword 0x3f54
mov edx,esi
mov eax,[ebp-0x8]
mov ecx,[eax]
call dword [ecx+0x18]
add eax,byte +0x30
mov edx,[ebp-0x20]
call dword 0x3a70
inc esi
dec dword [ebp-0x34]
jnz dword 0x3832e
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x439408
mov eax,[ebp-0x8]
call dword 0x2bf0
mov eax,[ebp-0x2c]
call dword 0x2bf0
mov eax,[ebp-0x14]
call dword 0x2bf0
mov eax,[ebp-0xc]
call dword 0x2bf0
ret
jmp dword 0x3384
jmp short 0x383e0
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x43943f
lea eax,[ebp-0x44]
mov edx,0x4
call dword 0x3a40
lea eax,[ebp-0x24]
mov edx,0x4
call dword 0x3a40
lea eax,[ebp-0x4]
call dword 0x3a1c
ret
jmp dword 0x3384
jmp short 0x38415
movzx eax,byte [ebp-0x26]
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret
add [eax],al
db 0xff
db 0xff
db 0xff
inc dword [ecx]
add [eax],al
add [dword 0xff000000],ch
db 0xff
db 0xff
inc dword [ecx]
add [eax],al
add [esi],ah
add [eax],al
add [edx],bh
push eax
cmp esi,[edx+ecx-0x78]
push eax
cmp esi,[edx-0xf774ff]
push ecx
cmp al,0xc3
push ebx
mov ebx,eax
mov eax,[ebx+0x30]
mov edx,0x439494
call dword 0x3e44
setz al
pop ebx
ret
add [eax],al
add bh,bh
db 0xff
db 0xff
inc dword [ecx]
add [eax],al
add [dword 0x53000000],ch
push esi
push edi
push ebp
add esp,byte -0x8
mov ebx,edx
mov esi,eax
mov byte [esp],0x0
test bl,bl
jnz 0x384c4
test byte [esi+0x1c],0x10
jnz dword 0x385d5
mov eax,esi
call dword 0x38620
test al,al
jz dword 0x385d5
xor eax,eax
mov [esp+0x4],eax
xor ebp,ebp
mov ebx,[esp+0x4]
mov eax,esi
call dword 0x373c4
mov edi,eax
dec edi
sub edi,ebx
jl 0x3851d
inc edi
mov edx,ebx
mov eax,esi
call dword 0x373d4
cmp byte [eax+0x3e],0x0
jz 0x38519
mov edx,ebx
mov eax,esi
call dword 0x373d4
call dword 0x38474
test al,al
jz 0x38513
mov edx,ebx
mov eax,esi
call dword 0x373d4
mov byte [eax+0x3e],0x0
mov byte [esp],0x1
jmp short 0x38519
mov [esp+0x4],ebx
jmp short 0x3851d
inc ebx
dec edi
jnz 0x384df
mov ebx,[esp+0x4]
mov eax,esi
call dword 0x373c4
mov edi,eax
dec edi
sub edi,ebx
jl 0x3858c
inc edi
mov edx,ebx
mov eax,esi
call dword 0x373d4
call dword 0x38474
test al,al
jz 0x38561
test ebp,ebp
jz 0x38554
cmp byte [ebp+0x3e],0x0
jz 0x38554
mov byte [ebp+0x3e],0x0
mov byte [esp],0x1
mov edx,ebx
mov eax,esi
call dword 0x373d4
mov ebp,eax
jmp short 0x38588
mov edx,ebx
mov eax,esi
call dword 0x373d4
cmp byte [eax+0x3e],0x0
jz 0x38588
test ebp,ebp
jz 0x38582
cmp byte [ebp+0x3e],0x0
jnz 0x38582
mov byte [ebp+0x3e],0x1
mov byte [esp],0x1
xor ebp,ebp
mov [esp+0x4],ebx
inc ebx
dec edi
jnz 0x38530
mov eax,esi
call dword 0x373c4
mov ebx,eax
dec ebx
mov edi,[esp+0x4]
sub edi,ebx
jg 0x385d5
dec edi
mov edx,ebx
mov eax,esi
call dword 0x373d4
cmp byte [eax+0x3e],0x0
jz 0x385d1
mov edx,ebx
mov eax,esi
call dword 0x373d4
call dword 0x38474
test al,al
jz 0x385d5
mov edx,ebx
mov eax,esi
call dword 0x373d4
mov byte [eax+0x3e],0x0
mov byte [esp],0x1
dec ebx
inc edi
jnz 0x3859f
movzx eax,byte [esp]
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
ret
cmp dl,[eax+0x3c]
jz 0x385ef
mov [eax+0x3c],dl
mov dl,0x1
mov ecx,[eax]
call dword [ecx+0x3c]
ret
push ebx
mov ebx,eax
movzx eax,byte [ebx+0x3b]
cmp al,0x2
jnz 0x38613
cmp dword [ebx+0x64],byte +0x0
jz 0x38613
mov eax,[ebx+0x64]
call dword 0x385f0
and eax,byte +0x7f
movzx eax,byte [eax+0x4684c0]
and eax,byte +0x7f
movzx eax,byte [eax+0x4684c4]
pop ebx
ret
nop
push ebx
mov ebx,eax
movzx eax,byte [ebx+0x3c]
cmp al,0x2
jnz 0x38643
cmp dword [ebx+0x64],byte +0x0
jz 0x38643
mov eax,[ebx+0x64]
call dword 0x38620
and eax,byte +0x7f
movzx eax,byte [eax+0x4684c0]
and eax,byte +0x7f
movzx eax,byte [eax+0x4684c4]
pop ebx
ret
nop
push ebp
mov ebp,esp
push ecx
push ebx
push esi
push edi
test dl,dl
jz 0x38663
add esp,byte -0x10
call dword 0x2f14
mov edi,ecx
mov [ebp-0x1],dl
mov ebx,eax
mov ecx,ebx
mov dl,0x1
mov eax,[0x434ccc]
call dword 0x35240
mov esi,eax
mov [ebx+0x34],esi
mov [esi+0x84],ebx
mov eax,[ebx]
mov eax,[eax+0x38]
mov [esi+0x80],eax
mov [esi+0x70],ebx
mov dl,0x1
mov eax,[0x44fc0c]
call dword 0x2bc0
mov esi,eax
mov [ebx+0x44],esi
mov [esi+0xc],ebx
mov dword [esi+0x8],0x43a190
mov byte [ebx+0x41],0x1
mov ecx,edi
xor edx,edx
mov eax,ebx
call dword 0x1a59c
mov eax,[ebx+0x34]
mov byte [eax+0x3b],0x0
mov byte [eax+0x3c],0x0
mov eax,ebx
call dword 0x39600
mov eax,ebx
cmp byte [ebp-0x1],0x0
jz 0x386e4
call dword 0x2f6c
pop dword [dword fs:0x0]
add esp,byte +0xc
mov eax,ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
ret
mov ecx,eax
mov dl,0x1
mov eax,[0x434ccc]
call dword 0x35240
ret
nop
push ebx
push esi
call dword 0x2fbc
mov ebx,edx
mov esi,eax
mov eax,[esi+0x34]
call dword 0x2bf0
mov eax,[esi+0x44]
call dword 0x2bf0
mov edx,ebx
and dl,0xfc
mov eax,esi
call dword 0x1a5e8
test bl,bl
jng 0x3872e
mov eax,esi
call dword 0x2f64
pop esi
pop ebx
ret
lea eax,[eax+0x0]
push ebp
mov ebp,esp
push esi
push dword [ebp+0xc]
push dword [ebp+0x8]
mov eax,[eax+0x34]
mov si,0xfffd
call dword 0x2dec
pop esi
pop ebp
ret 0x8
nop
mov eax,[eax+0x34]
call dword 0x35874
ret
lea eax,[eax+0x0]
push esi
mov esi,eax
mov eax,[esi+0x34]
mov si,0xfff9
call dword 0x2dec
pop esi
ret
lea eax,[eax+0x0]
push ebx
push esi
mov esi,eax
xor ebx,ebx
mov eax,0x439770
mov ecx,esi
mov edx,[esi+0x68]
call dword 0x34da8
push byte +0x1
mov ecx,esi
mov edx,esi
mov eax,esi
call dword 0x377cc
mov eax,ebx
pop esi
pop ebx
ret
nop
push ebx
mov ecx,0x439770
mov edx,[eax+0x34]
mov ebx,[edx+0x68]
mov eax,edx
xchg eax,ecx
mov edx,ebx
call dword 0x34da8
pop ebx
ret
push ebp
mov ebp,esp
push ecx
push ebx
push esi
push edi
mov ebx,eax
mov byte [ebp-0x1],0x0
mov eax,[ebp+0x8]
cmp byte [eax-0x1],0x0
jnz 0x387d4
mov eax,[ebp+0x8]
mov eax,[eax-0x8]
movzx edx,word [ebx+0x50]
cmp eax,edx
jz 0x387ff
mov eax,[ebp+0x8]
cmp byte [eax-0x1],0x1
jnz 0x387e8
mov eax,[ebp+0x8]
mov eax,[eax-0x8]
cmp eax,[ebx+0x34]
jz 0x387ff
mov eax,[ebp+0x8]
cmp byte [eax-0x1],0x2
jnz 0x3880b
mov eax,[ebp+0x8]
mov eax,[eax-0x8]
movzx edx,word [ebx+0x60]
cmp eax,edx
jnz 0x3880b
mov eax,[ebp+0x8]
mov [eax-0xc],ebx
mov byte [ebp-0x1],0x1
jmp short 0x3883d
mov eax,ebx
call dword 0x373c4
mov esi,eax
dec esi
test esi,esi
jl 0x3883d
inc esi
xor edi,edi
mov eax,[ebp+0x8]
push eax
mov edx,edi
mov eax,ebx
call dword 0x373d4
call dword 0x387b0
pop ecx
test al,al
jz 0x38839
mov byte [ebp-0x1],0x1
jmp short 0x3883d
inc edi
dec esi
jnz 0x3881c
movzx eax,byte [ebp-0x1]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
ret
nop
push ebp
mov ebp,esp
add esp,byte -0xc
push ebx
mov [ebp-0x1],cl
mov [ebp-0x8],edx
xor edx,edx
mov [ebp-0xc],edx
mov ecx,0x4397b0
mov edx,[eax+0x34]
mov ebx,[edx+0x68]
mov eax,edx
xchg eax,ecx
mov edx,ebx
call dword 0x34da8
mov eax,[ebp-0xc]
pop ebx
mov esp,ebp
pop ebp
ret
nop
push ebx
push esi
push edi
push ebp
push ecx
mov [esp],cl
mov ebp,edx
mov esi,eax
xor edi,edi
mov bl,0x1
cmp byte [esp],0x0
jz 0x38890
xor ebx,ebx
cmp bl,0x1
jnz 0x388bc
mov eax,esi
mov edx,[dword 0x4354d0]
call dword 0x2d7c
test al,al
jz 0x388bc
mov eax,esi
mov edx,[eax]
call dword [edx+0x34]
cmp ebp,eax
jnz 0x388bc
mov eax,esi
call dword 0x39e1c
mov edi,eax
jmp short 0x388dd
mov ecx,ebx
mov edx,ebp
mov eax,esi
call dword 0x38848
jmp short 0x388cc
mov eax,[eax+0x64]
test eax,eax
jz 0x388d6
cmp dword [eax+0x54],byte +0x0
jz 0x388c9
test eax,eax
jz 0x388dd
mov edi,[eax+0x54]
mov eax,edi
pop edx
pop ebp
pop edi
pop esi
pop ebx
ret
lea eax,[eax+0x0]
push ebx
xor ebx,ebx
movzx edx,dx
xor ecx,ecx
call dword 0x38848
test eax,eax
jz 0x38900
mov edx,[eax]
call dword [edx+0x44]
mov bl,0x1
mov eax,ebx
pop ebx
ret
push ebx
push esi
push edi
mov esi,eax
xor ebx,ebx
mov cl,0x1
mov eax,esi
call dword 0x38848
mov edi,eax
test edi,edi
jz dword 0x389a4
test byte [edi+0x1c],0x10
jnz 0x3892b
mov eax,edi
call dword 0x378f0
mov eax,edi
mov edx,[eax]
call dword [edx+0x44]
xor edx,edx
mov eax,edi
call dword 0x37fb0
mov ebx,eax
xor edx,edx
mov eax,edi
call dword 0x38498
or bl,al
test bl,bl
jz 0x38953
mov eax,edi
call dword 0x35744
mov eax,[0x468d34]
mov eax,[eax]
mov eax,[eax+0x44]
test eax,eax
jz 0x389a0
mov edx,[dword 0x468d34]
mov ebx,eax
cmp byte [ebx+0x277],0x2
jnz 0x389a0
cmp edi,[ebx+0x2a0]
jnz 0x389a0
push byte +0x0
push byte +0x0
push dword 0x234
mov eax,[ebx+0x29c]
push eax
call dword 0x6278
test eax,eax
jz 0x389a0
mov eax,ebx
call dword 0x4831c
push eax
call dword 0x5f38
mov bl,0x1
jmp short 0x389c3
test byte [esi+0x1c],0x10
jnz 0x389c3
mov eax,esi
mov edx,[dword 0x4354d0]
call dword 0x2d7c
test al,al
jz 0x389c3
mov eax,[esi+0x34]
call dword 0x378f0
mov eax,ebx
pop edi
pop esi
pop ebx
ret
lea eax,[eax+0x0]
cmp byte [eax+0x40],0x0
jnz 0x389db
cmp dword [eax+0x48],byte +0x0
jnz 0x389db
xor eax,eax
ret
mov al,0x1
ret
mov eax,eax
push ebp
mov ebp,esp
add esp,byte -0x20
push ebx
xor eax,eax
mov [ebp-0x1c],eax
mov [ebp-0x20],eax
mov [ebp-0x4],eax
xor eax,eax
push ebp
push dword 0x439b13
push dword [fs:eax]
mov [fs:eax],esp
mov byte [ebp-0x16],0x0
lea eax,[ebp-0x16]
push eax
call dword 0x6038
mov dl,0x1
mov eax,[0x41e7c8]
call dword 0x1d898
mov [ebp-0xc],eax
xor edx,edx
push ebp
push dword 0x439ae9
push dword [fs:edx]
mov [fs:edx],esp
mov edx,0x80000002
mov eax,[ebp-0xc]
call dword 0x1d938
lea eax,[ebp-0x20]
lea edx,[ebp-0x16]
mov ecx,0xa
call dword 0x3c8c
mov ecx,[ebp-0x20]
lea eax,[ebp-0x1c]
mov edx,0x439b28
call dword 0x3d34
mov edx,[ebp-0x1c]
mov eax,[ebp-0xc]
call dword 0x1d99c
lea ecx,[ebp-0x4]
mov edx,0x439b64
mov eax,[ebp-0xc]
call dword 0x1dbe4
mov edx,0x8000
mov eax,[ebp-0x4]
call dword 0xd1b4
mov [ebp-0x8],eax
xor edx,edx
push ebp
push dword 0x439acc
push dword [fs:edx]
mov [fs:edx],esp
push dword 0x439b70
mov eax,[ebp-0x8]
push eax
call dword 0x5b50
mov ebx,eax
call ebx
movzx eax,word [eax+0x28]
and ax,byte +0x1
cmp ax,byte +0x1
setz [dword 0x468594]
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x439ad3
mov eax,[ebp-0x8]
push eax
call dword 0x5ad0
ret
jmp dword 0x3384
jmp short 0x38ac2
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x439af0
mov eax,[ebp-0xc]
call dword 0x2bf0
ret
jmp dword 0x3384
jmp short 0x38ae0
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x439b1a
lea eax,[ebp-0x20]
mov edx,0x2
call dword 0x3a40
lea eax,[ebp-0x4]
call dword 0x3a1c
ret
jmp dword 0x3384
jmp short 0x38afd
pop ebx
mov esp,ebp
pop ebp
ret
add bh,bh
db 0xff
db 0xff
push dword [ebx]
add [eax],al
add [ebx+edx*2+0x59],bl
push ebx
push esp
inc ebp
dec ebp
pop esp
inc ebx
jnz 0x38ba5
jc 0x38b9a
outsb
jz 0x38b7b
outsd
outsb
jz 0x38bae
outsd
insb
push ebx
gs jz 0x38b9e
inc ebx
outsd
outsb
jz 0x38bb9
outsd
insb
pop esp
dec ebx
gs jns 0x38bb0
outsd
popad
jc 0x38bb6
and [ecx+0x79],cl
outsd
jnz 0x38bcd
jnc 0x38bb7
add bh,bh
db 0xff
db 0xff
dec dword [ebx]
add [eax],al
add [ecx+0x79],cl
outsd
jnz 0x38bde
and [esi+0x69],al
insb
add [gs:ebx+0x62],cl
fs dec esp
popad
jns 0x38bdc
jc 0x38bbd
gs jnc 0x38bdf
jc 0x38be7
jo 0x38bf4
outsd
jc 0x38b83
add [ebx+0x33],dl
fld tword [eax-0x5b]
add [eax],al
add al,ch
db 0x8f
aam 0xfc
jmp dword [esi-0x7b]
sar byte [ebp+0x23],byte 0x6a
add al,ch
mov edx,esp
cld
dec dword [ebx-0x6fe2c428]
test [esi+0x0],eax
jz 0x38bb2
call dword 0x389e0
mov [dword 0x468590],ebx
movzx ebx,byte [dword 0x468594]
mov eax,ebx
pop ebx
ret
lea eax,[eax+0x0]
push ebx
push esi
push edi
add esp,byte -0x10
mov esi,eax
lea edi,[esp]
movsd
movsd
movsd
movsd
movzx ebx,byte [esp+0x4]
test bx,bx
jz 0x38c07
push byte +0x10
call dword 0x6020
test ax,ax
jnl 0x38bea
add bx,0x2000
push byte +0x11
call dword 0x6020
test ax,ax
jnl 0x38bfb
add bx,0x4000
test byte [esp+0xb],0x20
jz 0x38c07
add bx,0x8000
mov eax,ebx
add esp,byte +0x10
pop edi
pop esi
pop ebx
ret
jmp short 0x38c16
mov eax,[eax+0x64]
dec edx
test edx,edx
jng 0x38c1e
test eax,eax
jnz 0x38c12
ret
nop
push ebp
mov ebp,esp
add esp,byte -0x8
push ebx
push esi
push edi
mov esi,edx
mov ebx,eax
mov byte [ebp-0x1],0x1
mov eax,[ebx]
mov eax,[eax+0x64]
mov [ebp-0x8],eax
cmp dword [ebp-0x8],byte +0x0
jz 0x38c52
mov eax,[ebp+0x8]
push eax
lea edx,[esi+0x1]
lea eax,[ebp-0x8]
call dword 0x38c20
pop ecx
mov [ebp-0x1],al
movzx eax,byte [ebp-0x1]
test al,al
jz dword 0x38d68
sub al,0x3
jz dword 0x38d68
cmp byte [ebp-0x1],0x2
jnz 0x38ce2
mov eax,[ebp+0x8]
cmp dword [eax-0x4],byte +0x0
jz 0x38c88
mov eax,[ebp+0x8]
mov eax,[eax-0x4]
movzx eax,word [eax+0x60]
mov edx,[ebp+0x8]
cmp ax,[edx-0x6]
jz 0x38cb4
mov eax,[ebp+0x8]
movzx edx,word [eax-0x6]
mov eax,[ebp+0x8]
mov eax,[eax-0xc]
mov cl,0x2
call dword 0x38848
mov edx,[ebp+0x8]
mov [edx-0x4],eax
mov eax,[ebp+0x8]
cmp dword [eax-0x4],byte +0x0
jnz 0x38cb4
mov byte [ebp-0x1],0x3
jmp dword 0x38d68
mov eax,[ebp+0x8]
mov eax,[eax-0x4]
mov edx,esi
call dword 0x38c10
mov [ebx],eax
cmp dword [ebx],byte +0x0
jz dword 0x38d68
mov eax,[ebx]
mov eax,[eax+0x64]
cmp eax,[ebp-0x8]
jnz dword 0x38d68
test esi,esi
jnz 0x38ce2
mov byte [ebp-0x1],0x1
mov eax,[ebx]
cmp byte [eax+0x39],0x0
jz 0x38d64
xor eax,eax
push ebp
push dword 0x439d46
push dword [fs:eax]
mov [fs:eax],esp
mov eax,[ebp+0x8]
mov eax,[eax-0xc]
test byte [eax+0x1c],0x10
jnz 0x38d0b
mov eax,[ebx]
call dword 0x378f0
mov eax,[ebx]
mov edx,[eax]
call dword [edx+0x44]
mov eax,[ebp+0x8]
cmp dword [eax-0x4],byte +0x0
jz 0x38d38
mov eax,[ebx]
mov edx,[ebp+0x8]
cmp eax,[edx-0x4]
jz 0x38d3c
mov eax,[ebp+0x8]
mov eax,[eax-0x4]
movzx eax,word [eax+0x60]
mov edx,[ebp+0x8]
cmp ax,[edx-0x6]
jz 0x38d3c
mov byte [ebp-0x1],0x2
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
jmp short 0x38d68
jmp dword 0x30d0
mov eax,[ebp+0x8]
mov edx,[eax-0xc]
mov eax,[0x468d34]
mov eax,[eax]
call dword 0x5ecfc
call dword 0x34e0
jmp short 0x38d68
mov byte [ebp-0x1],0x0
movzx eax,byte [ebp-0x1]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
ret
nop
push ebp
mov ebp,esp
add esp,byte -0x14
push ebx
push esi
mov esi,edx
mov [ebp-0xc],eax
xor ebx,ebx
call dword 0x38b84
test al,al
jnz dword 0x38e60
mov eax,esi
call dword 0x38bc0
mov [ebp-0x6],ax
mov eax,[ebp-0xc]
mov eax,[eax+0x34]
mov [ebp-0x14],eax
lea edx,[ebp-0x14]
mov eax,[0x46dbf0]
call dword 0x1b974
xor eax,eax
push ebp
push dword 0x439e47
push dword [fs:eax]
mov [fs:eax],esp
mov byte [ebp-0xd],0x0
movzx edx,word [ebp-0x6]
mov cl,0x2
mov eax,[ebp-0xc]
call dword 0x38848
mov [ebp-0x4],eax
cmp dword [ebp-0x4],byte +0x0
jz 0x38e23
lea edx,[ebp-0x4]
mov eax,[0x46dbf0]
call dword 0x1b974
xor eax,eax
push ebp
push dword 0x439e1c
push dword [fs:eax]
mov [fs:eax],esp
push ebp
lea eax,[ebp-0x4]
xor edx,edx
call dword 0x38c20
pop ecx
mov [ebp-0xd],al
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x439e23
mov eax,[0x46dbf0]
call dword 0x1b96c
ret
jmp dword 0x3384
jmp short 0x38e11
cmp dword [ebp-0x14],byte +0x0
jz 0x38e2f
cmp byte [ebp-0xd],0x2
jz 0x38dbf
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x439e4e
mov eax,[0x46dbf0]
call dword 0x1b96c
ret
jmp dword 0x3384
jmp short 0x38e3c
cmp dword [ebp-0x4],byte +0x0
jnz 0x38e5e
cmp dword [ebp-0x14],byte +0x0
jz 0x38e5e
xor ebx,ebx
jmp short 0x38e60
mov bl,0x1
mov eax,ebx
pop esi
pop ebx
mov esp,ebp
pop ebp
ret
movzx eax,byte [eax+0x41]
xor al,0x1
ret
nop
push ebx
push esi
add esp,byte -0x80
mov ebx,eax
mov eax,[0x468eb4]
cmp byte [eax+0xd],0x0
jz dword 0x38f22
cmp dword [ebx+0x38],byte +0x0
jz dword 0x38f22
mov eax,ebx
mov edx,[eax]
call dword [edx+0x34]
mov esi,eax
mov dword [esp],0x2c
mov dword [esp+0x4],0x10
lea eax,[esp+0x30]
mov [esp+0x24],eax
mov dword [esp+0x28],0x50
push esp
push byte -0x1
push byte +0x0
push esi
call dword 0x6068
test eax,eax
jz 0x38f22
mov eax,ebx
call dword 0x39204
mov edx,[esp+0x8]
and edx,0x6000
cmp edx,byte +0x1
sbb edx,edx
inc edx
cmp al,dl
jz 0x38f22
mov eax,ebx
call dword 0x39204
and eax,byte +0x7f
shl eax,byte 0xd
lea eax,[eax+eax*2]
mov edx,[esp+0x8]
and edx,0xffff9fff
or eax,edx
mov [esp+0x8],eax
mov dword [esp+0x4],0x10
push esp
push byte -0x1
push byte +0x0
push esi
call dword 0x62c8
test eax,eax
jz 0x38f22
mov eax,[ebx+0x38]
push eax
call dword 0x5f38
add esp,0x80
pop esi
pop ebx
ret
nop
push ebp
mov ebp,esp
add esp,byte -0xc
push ebx
push esi
push edi
mov [ebp-0x4],eax
mov eax,[ebp-0x4]
push eax
call dword 0x6058
mov [ebp-0xc],eax
mov eax,[ebp+0x8]
lea ebx,[eax-0x200]
mov eax,[ebp+0x8]
add eax,byte -0x5
mov [ebp-0x8],eax
xor esi,esi
jmp short 0x38fc5
push ebx
mov eax,[ebp-0x8]
sub eax,ebx
push eax
push dword 0x400
mov eax,[ebp+0x8]
mov eax,[eax-0x204]
mov ecx,esi
mov edx,[ebp-0x4]
call dword 0x39534
mov eax,ebx
call dword 0x83fc
mov ebx,eax
push dword 0x400
push esi
mov eax,[ebp-0x4]
push eax
call dword 0x6070
mov edi,eax
test di,0x2
jz 0x38fa1
mov byte [ebx],0x24
inc ebx
mov byte [ebx],0x0
test di,0x40
jz 0x38faf
mov byte [ebx],0x40
inc ebx
mov byte [ebx],0x0
test di,0x1
jz 0x38fbd
mov byte [ebx],0x23
inc ebx
mov byte [ebx],0x0
mov byte [ebx],0x3b
inc ebx
mov byte [ebx],0x0
inc esi
cmp esi,[ebp-0xc]
jnl 0x38fcf
cmp ebx,[ebp-0x8]
jc 0x38f5a
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret
mov eax,eax
push ebp
mov ebp,esp
add esp,0xfffffdfc
push ebx
mov [ebp-0x204],eax
xor ebx,ebx
mov byte [ebp-0x200],0x0
mov eax,[ebp-0x204]
cmp dword [eax+0x38],byte +0x0
jz 0x3900f
push ebp
mov eax,[ebp-0x204]
mov edx,[eax]
call dword [edx+0x34]
call dword 0x38f2c
pop ecx
mov eax,[ebp-0x204]
cmp dword [eax+0x3c],byte +0x0
jz 0x39038
mov eax,[ebp-0x204]
mov eax,[eax+0x3c]
call dword 0x3eac
lea edx,[ebp-0x200]
call dword 0x84d4
test eax,eax
jz 0x39053
mov bl,0x1
mov eax,[ebp-0x204]
add eax,byte +0x3c
lea edx,[ebp-0x200]
mov ecx,0x200
call dword 0x3c8c
mov eax,ebx
pop ebx
mov esp,ebp
pop ebp
ret
mov eax,eax
cmp dl,[eax+0x40]
jz 0x39069
mov [eax+0x40],dl
call dword 0x38798
ret
mov eax,eax
push ebp
mov ebp,esp
add esp,byte -0x8
mov [ebp-0x4],eax
mov eax,[0x468eb4]
cmp byte [eax+0xd],0x0
jz 0x390e7
mov eax,[ebp-0x4]
movzx eax,byte [eax+0x30]
mov [ebp-0x5],al
mov edx,[ebp-0x4]
movzx edx,byte [edx+0x41]
mov [ebp-0x6],dl
xor edx,edx
push ebp
push dword 0x43a0e0
push dword [fs:edx]
mov [fs:edx],esp
test al,al
jnz 0x390b2
mov dl,0x1
mov eax,[ebp-0x4]
call dword 0x395dc
jmp short 0x390bc
xor edx,edx
mov eax,[ebp-0x4]
call dword 0x395dc
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x43a0e7
movzx edx,byte [ebp-0x5]
mov eax,[ebp-0x4]
call dword 0x395dc
mov eax,[ebp-0x4]
movzx edx,byte [ebp-0x6]
mov [eax+0x41],dl
ret
jmp dword 0x3384
jmp short 0x390c9
pop ecx
pop ecx
pop ebp
ret
nop
push ebx
push esi
mov esi,edx
mov ebx,eax
mov [ebx+0x38],esi
mov eax,ebx
call dword 0x38fd8
mov eax,[0x468eb4]
cmp byte [eax+0xd],0x0
jz 0x39121
test esi,esi
jz 0x39121
cmp byte [ebx+0x41],0x0
jz 0x3911a
mov eax,ebx
call dword 0x39600
jmp short 0x39121
mov eax,ebx
call dword 0x3906c
pop esi
pop ebx
ret
push ebx
cmp word [eax+0x52],byte +0x0
jz 0x39139
push ecx
mov ebx,eax
mov ecx,edx
mov edx,eax
mov eax,[ebx+0x54]
call dword [ebx+0x50]
pop ebx
ret
nop
push ebx
mov ebx,eax
mov eax,ebx
call dword 0x1aa04
xor ecx,ecx
xor edx,edx
mov eax,ebx
mov ebx,[eax]
call dword [ebx+0x30]
pop ebx
ret
nop
push ebp
mov ebp,esp
push ebx
push esi
mov esi,ecx
mov ebx,eax
movzx eax,word [dword 0x43a188]
and ax,[ebx+0x1c]
movzx edx,word [dword 0x43a18c]
cmp dx,ax
jnz 0x39181
movzx ecx,byte [ebp+0x8]
mov edx,esi
mov eax,ebx
mov ebx,[eax]
call dword [ebx+0x30]
pop esi
pop ebx
pop ebp
ret 0x4
add [ecx],cl
add [eax],al
add [eax],al
add [eax],al
add [ebx],bh
push eax
dec eax
jnz 0x3919a
call dword 0x38798
ret
nop
push ebx
push esi
mov esi,edx
mov ebx,eax
mov eax,[ebx+0x48]
test eax,eax
jz 0x391b1
mov edx,[ebx+0x44]
call dword 0x4f9e8
mov eax,esi
mov [ebx+0x48],eax
test eax,eax
jz 0x391cc
mov edx,[ebx+0x44]
call dword 0x4fa2c
mov edx,ebx
mov eax,[ebx+0x48]
call dword 0x1a670
mov eax,ebx
call dword 0x38798
pop esi
pop ebx
ret
mov eax,eax
push ebx
push esi
push edi
mov ebx,ecx
mov esi,edx
mov edi,eax
mov ecx,ebx
mov edx,esi
mov eax,edi
call dword 0x1a8cc
cmp esi,[edi+0x48]
jnz 0x391ff
cmp bl,0x1
jnz 0x391ff
xor edx,edx
mov eax,edi
call dword 0x3919c
pop edi
pop esi
pop ebx
ret
nop
mov edx,[dword 0x468eb4]
cmp byte [edx+0xd],0x0
jz 0x39216
cmp byte [eax+0x30],0x0
jnz 0x39219
xor eax,eax
ret
mov al,0x1
ret
push ebp
mov ebp,esp
push esi
xor esi,esi
test dl,0x10
jz 0x39240
push ecx
push eax
call dword 0x60b8
mov edx,[ebp+0xc]
mov edx,[edx-0x4]
mov cl,0x1
xchg eax,edx
call dword 0x38848
mov esi,eax
jmp short 0x3925c
push ecx
push eax
call dword 0x6060
cmp eax,byte -0x1
jz 0x3925c
mov edx,[ebp+0xc]
mov edx,[edx-0x4]
xor ecx,ecx
xchg eax,edx
call dword 0x38848
mov esi,eax
test esi,esi
jz 0x3926e
movzx eax,byte [ebp+0x8]
mov edx,[esi+0x30]
call dword 0x53d84
jmp short 0x39270
xor eax,eax
pop esi
pop ebp
ret 0x4
lea eax,[eax+0x0]
push ebp
mov ebp,esp
push byte +0x0
push byte +0x0
push byte +0x0
push byte +0x0
push byte +0x0
push byte +0x0
push ebx
push esi
push edi
mov esi,ecx
mov [ebp-0x2],dx
xor edx,edx
push ebp
push dword 0x43a3a3
push dword [fs:edx]
mov [fs:edx],esp
test byte [ebp-0x2],0x10
jz 0x392bd
push esi
push eax
call dword 0x60b8
mov edx,[ebp+0xc]
mov edx,[edx-0x4]
mov cl,0x1
xchg eax,edx
call dword 0x38848
mov edi,eax
jmp short 0x392e7
mov edx,[ebp+0xc]
mov edx,[edx-0x4]
mov cl,0x1
xchg eax,edx
call dword 0x38848
mov edi,eax
test edi,edi
jz 0x392e7
mov eax,edi
call dword 0x373c4
cmp esi,eax
jnl 0x392e7
mov edx,esi
mov eax,edi
call dword 0x373d4
mov edi,eax
test edi,edi
jz dword 0x39386
cmp dword [edi+0x30],byte +0x0
jz dword 0x39386
lea eax,[ebp-0x8]
mov edx,[edi+0x30]
movzx edx,byte [edx]
call dword 0x3c04
mov esi,[ebp-0x8]
test esi,esi
jz 0x39313
sub esi,byte +0x4
mov esi,[esi]
lea eax,[ebp-0xc]
movzx edx,byte [ebp+0x8]
call dword 0x3c04
mov ebx,[ebp-0xc]
test ebx,ebx
jz 0x3932b
sub ebx,byte +0x4
mov ebx,[ebx]
push ebx
lea eax,[ebp-0x10]
movzx edx,byte [ebp+0x8]
call dword 0x3c04
mov eax,[ebp-0x10]
call dword 0x3eac
push eax
push esi
lea eax,[ebp-0x14]
mov edx,[edi+0x30]
movzx edx,byte [edx]
call dword 0x3c04
mov eax,[ebp-0x14]
call dword 0x3eac
push eax
push byte +0x1
push dword 0x400
call dword 0x5a78
sub eax,byte +0x2
test eax,eax
jnz 0x39380
lea edx,[ebp-0x18]
mov eax,[edi+0x30]
call dword 0x3a1a8
cmp dword [ebp-0x18],byte +0x0
setz al
jmp short 0x39382
xor eax,eax
mov ebx,eax
jmp short 0x39388
xor ebx,ebx
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x43a3aa
lea eax,[ebp-0x18]
mov edx,0x5
call dword 0x3a40
ret
jmp dword 0x3384
jmp short 0x39395
mov eax,ebx
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret 0x4
lea eax,[eax+0x0]
push ebp
mov ebp,esp
add esp,byte -0x18
push ebx
push esi
push edi
mov ebx,edx
mov [ebp-0x4],eax
xor eax,eax
mov [ebx+0xc],eax
mov dword [ebp-0xc],0xffffffff
mov dword [ebp-0x10],0xffffffff
mov dword [ebp-0x14],0xffffffff
mov eax,[ebx+0x8]
push eax
call dword 0x6058
mov [ebp-0x8],eax
mov eax,[ebp-0x8]
dec eax
test eax,eax
jl 0x3946c
inc eax
mov [ebp-0x18],eax
xor esi,esi
push dword 0x400
push esi
mov eax,[ebx+0x8]
push eax
call dword 0x6070
mov edi,eax
push ebp
movzx eax,byte [ebx+0x4]
push eax
mov eax,[ebx+0x8]
mov ecx,esi
mov edx,edi
call dword 0x3921c
pop ecx
test al,al
jz 0x39466
test di,0x2
jz 0x39438
cmp dword [ebp-0xc],byte +0x0
jnl 0x39466
mov dword [ebp-0xc],0xfffffffe
jmp short 0x39466
cmp dword [ebp-0xc],byte +0x0
jnl 0x3944a
mov [ebp-0xc],esi
mov dword [ebx+0xc],0x2
jmp short 0x39451
mov dword [ebx+0xc],0x3
test di,0x80
jz 0x3945d
mov [ebp-0x10],esi
jmp short 0x39466
cmp dword [ebp-0x10],byte +0x0
jl 0x39466
mov [ebp-0x14],esi
inc esi
dec dword [ebp-0x18]
jnz 0x393fa
cmp dword [ebp-0xc],byte -0x1
jnl 0x3947e
mov dword [ebx+0xc],0x10000
jmp dword 0x3952b
cmp dword [ebp-0xc],byte +0x0
jnl 0x394fe
mov eax,[ebp-0x8]
dec eax
test eax,eax
jl 0x394fe
inc eax
mov [ebp-0x18],eax
xor esi,esi
push dword 0x400
push esi
mov eax,[ebx+0x8]
push eax
call dword 0x6070
mov edi,eax
push ebp
movzx eax,byte [ebx+0x4]
push eax
mov eax,[ebx+0x8]
mov ecx,esi
mov edx,edi
call dword 0x39278
pop ecx
test al,al
jz 0x394f8
test di,0x2
jz 0x394ca
mov dword [ebx+0xc],0x10000
jmp short 0x3952b
cmp dword [ebp-0xc],byte +0x0
jnl 0x394dc
mov [ebp-0xc],esi
mov dword [ebx+0xc],0x2
jmp short 0x394e3
mov dword [ebx+0xc],0x3
test di,0x80
jz 0x394ef
mov [ebp-0x10],esi
jmp short 0x394f8
cmp dword [ebp-0x10],byte +0x0
jl 0x394f8
mov [ebp-0x14],esi
inc esi
dec dword [ebp-0x18]
jnz 0x39492
mov eax,[ebx+0xc]
cmp eax,byte +0x2
jnz 0x39511
shl eax,byte 0x10
or eax,[ebp-0xc]
mov [ebx+0xc],eax
jmp short 0x3952b
cmp eax,byte +0x3
jnz 0x3952b
cmp dword [ebp-0x14],byte +0x0
jnl 0x39522
mov edx,[ebp-0xc]
mov [ebp-0x14],edx
shl eax,byte 0x10
or eax,[ebp-0x14]
mov [ebx+0xc],eax
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret
mov eax,eax
push ebp
mov ebp,esp
push ecx
push ebx
push esi
push edi
mov esi,ecx
mov edi,edx
mov ebx,eax
mov eax,ebx
call dword 0x389cc
test al,al
jz 0x395c0
xor eax,eax
mov [ebp-0x4],eax
mov eax,[ebp+0x8]
push eax
push esi
push edi
call dword 0x6070
test al,0x10
jz 0x39579
push esi
push edi
call dword 0x60b8
mov edi,eax
mov cl,0x1
mov edx,edi
mov eax,ebx
call dword 0x38848
mov [ebp-0x4],eax
jmp short 0x39595
push esi
push edi
call dword 0x6060
mov esi,eax
cmp esi,byte -0x1
jz 0x39595
xor ecx,ecx
mov edx,esi
mov eax,ebx
call dword 0x38848
mov [ebp-0x4],eax
cmp dword [ebp-0x4],byte +0x0
jz 0x395bc
mov eax,[ebp+0x10]
mov byte [eax],0x0
mov eax,[ebp-0x4]
mov edx,[eax+0x30]
mov ecx,[ebp+0xc]
mov eax,[ebp+0x10]
call dword 0x84b4
mov eax,[ebp+0x10]
call dword 0x83cc
jmp short 0x395d3
xor eax,eax
jmp short 0x395d3
mov eax,[ebp+0x8]
push eax
mov eax,[ebp+0xc]
push eax
mov eax,[ebp+0x10]
push eax
push esi
push edi
call dword 0x6078
pop edi
pop esi
pop ebx
pop ecx
pop ebp
ret 0xc
nop
cmp dl,[eax+0x30]
jz 0x395ed
mov [eax+0x30],dl
mov byte [eax+0x41],0x0
call dword 0x38e70
ret
mov eax,eax
cmp dl,[eax+0x41]
jz 0x395fd
mov [eax+0x41],dl
call dword 0x39600
ret
mov eax,eax
push ebx
mov ebx,eax
cmp byte [ebx+0x41],0x0
jz 0x39624
mov eax,[ebx+0x38]
call dword 0x3cce8
test eax,eax
jz 0x39624
movzx edx,byte [eax+0x5f]
mov eax,ebx
call dword 0x395dc
mov byte [ebx+0x41],0x1
pop ebx
ret
mov eax,eax
push ebx
push esi
mov esi,edx
mov ebx,eax
cmp byte [ebx+0x41],0x0
jz 0x39650
mov eax,esi
mov edx,[dword 0x43c888]
call dword 0x2da0
movzx edx,byte [eax+0x5f]
mov eax,ebx
call dword 0x395dc
mov byte [ebx+0x41],0x1
pop esi
pop ebx
ret
nop
mov eax,[eax+0x34]
movzx eax,byte [eax+0x3b]
movzx eax,byte [eax+0x4684bc]
ret
nop
and edx,byte +0x7f
movzx edx,byte [edx+0x4684b8]
mov eax,[eax+0x34]
mov [eax+0x3b],dl
ret
lea eax,[eax+0x0]
mov eax,[eax+0x34]
movzx eax,byte [eax+0x3c]
movzx eax,byte [eax+0x4684bc]
ret
nop
and edx,byte +0x7f
movzx edx,byte [edx+0x4684b8]
mov eax,[eax+0x34]
mov [eax+0x3c],dl
ret
lea eax,[eax+0x0]
cmp dl,[eax+0x5c]
jz 0x396ba
mov [eax+0x5c],dl
mov edx,[eax+0x38]
test edx,edx
jz 0x396ba
push byte +0x0
push byte +0x0
push dword 0xb015
push edx
call dword 0x6278
ret
nop
push ebp
mov ebp,esp
push ecx
push ebx
push esi
push edi
mov esi,ecx
mov [ebp-0x4],edx
mov edi,eax
cmp dword [edi+0x38],byte +0x0
jz 0x396fc
mov eax,edi
call dword 0x38fd8
mov ebx,eax
test esi,esi
jnz 0x396ef
push byte +0x0
push byte +0x0
push dword 0xb015
mov eax,[edi+0x38]
push eax
call dword 0x6278
test bl,bl
jz 0x396fc
mov eax,[edi+0x38]
push eax
call dword 0x5f38
movzx eax,byte [ebp+0x8]
push eax
mov ecx,esi
mov edx,[ebp-0x4]
mov eax,edi
call dword 0x39154
pop edi
pop esi
pop ebx
pop ecx
pop ebp
ret 0x4
lea eax,[eax+0x0]
test edx,edx
jz 0x39728
mov eax,[eax+0x34]
mov edx,[edx+0x34]
call dword 0x356cc
ret
xor edx,edx
mov eax,[eax+0x34]
call dword 0x356cc
ret
nop
test edx,edx
jz 0x3974d
mov ecx,[eax+0x34]
mov ecx,[ecx+0x68]
cmp ecx,[edx+0x34]
jnz 0x3974d
xor edx,edx
mov eax,[eax+0x34]
call dword 0x356cc
ret
mov eax,eax
push ebx
push esi
mov ebx,eax
push byte +0x0
xor ecx,ecx
xor edx,edx
mov eax,ebx
mov esi,[eax]
call dword [esi+0x38]
mov eax,[ebx+0x38]
test eax,eax
jz 0x39777
push byte +0x0
push byte +0x0
push dword 0xb015
push eax
call dword 0x6278
pop esi
pop ebx
ret
mov eax,eax
mov edx,[eax+0x58]
test edx,edx
jz 0x39786
mov eax,edx
ret
call dword 0x38750
ret
push ebp
mov ebp,esp
push ecx
push ebx
push esi
push edi
mov [ebp-0x4],eax
xor eax,eax
push ebp
push dword 0x43a7b6
push dword [fs:eax]
mov [fs:eax],esp
mov eax,[ebp-0x4]
mov ecx,[eax]
call dword [ecx+0x10]
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
jmp short 0x397cf
jmp dword 0x30d0
mov eax,[0x468d34]
mov eax,[eax]
mov edx,[ebp-0x4]
call dword 0x5ecfc
call dword 0x34e0
pop edi
pop esi
pop ebx
pop ecx
pop ebp
ret
lea eax,[eax+0x0]
push ebp
mov ebp,esp
add esp,byte -0x30
push ebx
push esi
push edi
xor ecx,ecx
mov [ebp-0x30],ecx
mov esi,edx
mov [ebp-0x4],eax
xor eax,eax
push ebp
push dword 0x43ad0c
push dword [fs:eax]
mov [fs:eax],esp
mov eax,[esi]
cmp eax,0x111
jg 0x39822
jz 0x3983a
sub eax,byte +0x2b
jz dword 0x39a48
dec eax
jz dword 0x39b53
sub eax,byte +0x27
jz dword 0x39946
jmp dword 0x39cdc
sub eax,0x117
jz 0x39870
sub eax,byte +0x8
jz 0x398a5
dec eax
jz dword 0x39c93
jmp dword 0x39cdc
mov eax,[ebp-0x4]
mov ebx,[eax+0x8]
dec ebx
test ebx,ebx
jl dword 0x39cdc
inc ebx
xor edi,edi
mov edx,edi
mov eax,[ebp-0x4]
call dword 0x13e7c
movzx edx,word [esi+0x4]
call dword 0x388e8
test al,al
jnz dword 0x39cf6
inc edi
dec ebx
jnz 0x3984c
jmp dword 0x39cdc
mov eax,[ebp-0x4]
mov ebx,[eax+0x8]
dec ebx
test ebx,ebx
jl dword 0x39cdc
inc ebx
xor edi,edi
mov edx,edi
mov eax,[ebp-0x4]
call dword 0x13e7c
mov edx,[esi+0x4]
call dword 0x38904
test al,al
jnz dword 0x39cf6
inc edi
dec ebx
jnz 0x39882
jmp dword 0x39cdc
mov byte [ebp-0xd],0x0
test byte [esi+0x6],0x10
jz 0x398b3
mov byte [ebp-0xd],0x1
mov eax,[ebp-0x4]
mov ebx,[eax+0x8]
dec ebx
test ebx,ebx
jl 0x39933
inc ebx
xor edi,edi
cmp byte [ebp-0xd],0x1
jnz 0x398e7
mov eax,[esi+0x8]
test eax,eax
jz 0x398de
movzx edx,word [esi+0x4]
push edx
push eax
call dword 0x60b8
mov [ebp-0x8],eax
jmp short 0x398ee
mov dword [ebp-0x8],0xffffffff
jmp short 0x398ee
movzx eax,word [esi+0x4]
mov [ebp-0x8],eax
mov edx,edi
mov eax,[ebp-0x4]
call dword 0x13e7c
movzx ecx,byte [ebp-0xd]
mov edx,[ebp-0x8]
call dword 0x38848
mov [ebp-0xc],eax
cmp dword [ebp-0xc],byte +0x0
jz 0x3992f
lea edx,[ebp-0x30]
mov eax,[ebp-0xc]
mov eax,[eax+0x58]
call dword 0x3cf9c
mov edx,[ebp-0x30]
mov eax,[0x468d34]
mov eax,[eax]
call dword 0x5f62c
jmp dword 0x39cf6
inc edi
dec ebx
jnz 0x398c1
mov eax,[0x468d34]
mov eax,[eax]
xor edx,edx
call dword 0x5f62c
jmp dword 0x39cdc
mov eax,[esi+0x8]
mov [ebp-0x20],eax
mov eax,[ebp-0x4]
mov ebx,[eax+0x8]
dec ebx
test ebx,ebx
jl dword 0x39cdc
inc ebx
xor edi,edi
mov edx,edi
mov eax,[ebp-0x4]
call dword 0x13e7c
mov edx,[eax]
call dword [edx+0x34]
mov edx,[ebp-0x20]
cmp eax,[edx+0xc]
jnz 0x39987
mov edx,edi
mov eax,[ebp-0x4]
call dword 0x13e7c
mov eax,[eax+0x34]
mov [ebp-0xc],eax
jmp short 0x399a1
mov edx,edi
mov eax,[ebp-0x4]
call dword 0x13e7c
mov edx,[ebp-0x20]
mov edx,[edx+0xc]
mov cl,0x1
call dword 0x38848
mov [ebp-0xc],eax
cmp dword [ebp-0xc],byte +0x0
jz dword 0x39a3b
mov edx,edi
mov eax,[ebp-0x4]
call dword 0x13e7c
mov edx,[ebp-0x20]
mov edx,[edx+0x8]
mov cl,0x1
call dword 0x38878
test eax,eax
jnz 0x399dd
mov edx,edi
mov eax,[ebp-0x4]
call dword 0x13e7c
mov edx,[ebp-0x20]
mov edx,[edx+0xc]
xor ecx,ecx
call dword 0x38878
mov edx,[dword 0x468e8c]
mov edx,[edx]
mov edx,[edx+0x6c]
test edx,edx
jz dword 0x39cf6
test eax,eax
jnz 0x399ff
mov eax,[0x468e8c]
mov eax,[edx+0x160]
mov ecx,[dword 0x468e8c]
test byte [edx+0x270],0x8
jz 0x39a28
mov edx,[dword 0x468d34]
mov edx,[edx]
mov ecx,eax
mov eax,0x8
xchg eax,edx
call dword 0x5f2ec
jmp dword 0x39cf6
mov edx,[dword 0x468d34]
mov edx,[edx]
xchg eax,edx
call dword 0x5f264
jmp dword 0x39cf6
inc edi
dec ebx
jnz dword 0x3995e
jmp dword 0x39cdc
mov eax,[esi+0x8]
mov [ebp-0x24],eax
mov eax,[ebp-0x4]
mov ebx,[eax+0x8]
dec ebx
test ebx,ebx
jl dword 0x39cdc
inc ebx
xor edi,edi
mov edx,edi
mov eax,[ebp-0x4]
call dword 0x13e7c
mov edx,[ebp-0x24]
mov edx,[edx+0x8]
xor ecx,ecx
call dword 0x38848
mov [ebp-0xc],eax
cmp dword [ebp-0xc],byte +0x0
jz dword 0x39b46
mov dl,0x1
mov eax,[0x43b844]
call dword 0x205a4
mov [ebp-0x14],eax
xor eax,eax
push ebp
push dword 0x43ab3f
push dword [fs:eax]
mov [fs:eax],esp
mov eax,[ebp-0x24]
mov eax,[eax+0x18]
push eax
call dword 0x5dc8
mov [ebp-0x18],eax
xor eax,eax
push ebp
push dword 0x43ab22
push dword [fs:eax]
mov [fs:eax],esp
mov eax,[ebp-0x24]
mov edx,[eax+0x18]
mov eax,[ebp-0x14]
call dword 0x20bb8
mov eax,[0x468e8c]
mov eax,[eax]
mov edx,[eax+0x88]
mov eax,[ebp-0x14]
call dword 0x20a4c
mov eax,[ebp-0x24]
movzx eax,word [eax+0x10]
push eax
mov eax,[ebp-0x24]
lea ecx,[eax+0x1c]
mov edx,[ebp-0x14]
mov eax,[ebp-0xc]
call dword 0x39fd0
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x43ab29
xor edx,edx
mov eax,[ebp-0x14]
call dword 0x20bb8
mov eax,[ebp-0x18]
push eax
mov eax,[ebp-0x24]
mov eax,[eax+0x18]
push eax
call dword 0x5dc0
ret
jmp dword 0x3384
jmp short 0x39b07
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x43acf6
mov eax,[ebp-0x14]
call dword 0x2bf0
ret
jmp dword 0x3384
jmp short 0x39b36
inc edi
dec ebx
jnz dword 0x39a60
jmp dword 0x39cdc
mov eax,[esi+0x8]
mov [ebp-0x28],eax
mov eax,[ebp-0x4]
mov ebx,[eax+0x8]
dec ebx
test ebx,ebx
jl dword 0x39cdc
inc ebx
xor edi,edi
mov edx,edi
mov eax,[ebp-0x4]
call dword 0x13e7c
mov edx,[ebp-0x28]
mov edx,[edx+0x8]
xor ecx,ecx
call dword 0x38848
mov [ebp-0xc],eax
cmp dword [ebp-0xc],byte +0x0
jz dword 0x39c89
mov eax,[ebp-0x4]
mov eax,[eax+0x10]
push eax
call dword 0x60f0
mov [ebp-0x1c],eax
xor eax,eax
push ebp
push dword 0x43ac82
push dword [fs:eax]
mov [fs:eax],esp
mov dl,0x1
mov eax,[0x43b844]
call dword 0x205a4
mov [ebp-0x14],eax
xor eax,eax
push ebp
push dword 0x43ac5d
push dword [fs:eax]
mov [fs:eax],esp
mov eax,[ebp-0x1c]
push eax
call dword 0x5dc8
mov [ebp-0x18],eax
xor eax,eax
push ebp
push dword 0x43ac40
push dword [fs:eax]
mov [fs:eax],esp
mov edx,[ebp-0x1c]
mov eax,[ebp-0x14]
call dword 0x20bb8
mov eax,[0x468e8c]
mov eax,[eax]
mov edx,[eax+0x88]
mov eax,[ebp-0x14]
call dword 0x20a4c
mov eax,[ebp-0x28]
add eax,byte +0x10
push eax
mov eax,[ebp-0x28]
lea ecx,[eax+0xc]
mov edx,[ebp-0x14]
mov eax,[ebp-0xc]
mov ebx,[eax]
call dword [ebx+0x38]
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x43ac47
xor edx,edx
mov eax,[ebp-0x14]
call dword 0x20bb8
mov eax,[ebp-0x18]
push eax
mov eax,[ebp-0x1c]
push eax
call dword 0x5dc0
ret
jmp dword 0x3384
jmp short 0x39c28
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x43ac64
mov eax,[ebp-0x14]
call dword 0x2bf0
ret
jmp dword 0x3384
jmp short 0x39c54
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x43acf6
mov eax,[ebp-0x1c]
push eax
mov eax,[ebp-0x4]
mov eax,[eax+0x10]
push eax
call dword 0x6250
ret
jmp dword 0x3384
jmp short 0x39c71
inc edi
dec ebx
jnz dword 0x39b6b
jmp short 0x39cdc
mov eax,[ebp-0x4]
mov ebx,[eax+0x8]
dec ebx
test ebx,ebx
jl 0x39cdc
inc ebx
xor edi,edi
mov edx,edi
mov eax,[ebp-0x4]
call dword 0x13e7c
mov [ebp-0x2c],eax
mov eax,[ebp-0x2c]
mov edx,[eax]
call dword [edx+0x34]
cmp eax,[esi+0x8]
jz 0x39ccc
mov edx,[esi+0x8]
mov cl,0x1
mov eax,[ebp-0x2c]
call dword 0x38848
test eax,eax
jz 0x39cd8
mov edx,esi
mov eax,[ebp-0x2c]
call dword 0x393b8
jmp short 0x39cf6
inc edi
dec ebx
jnz 0x39ca1
mov eax,[esi+0x8]
push eax
mov eax,[esi+0x4]
push eax
mov eax,[esi]
push eax
mov eax,[ebp-0x4]
mov eax,[eax+0x10]
push eax
call dword 0x5ed8
mov [esi+0xc],eax
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x43ad13
lea eax,[ebp-0x30]
call dword 0x3a1c
ret
jmp dword 0x3384
jmp short 0x39d03
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret
mov eax,eax
push ebx
push esi
mov esi,edx
mov ebx,eax
cmp dword [ebx+0x8],byte +0x0
jnz 0x39d36
push ebx
push dword 0x43a78c
call dword 0x1b718
mov [ebx+0x10],eax
mov edx,esi
mov eax,ebx
call dword 0x13d24
pop esi
pop ebx
ret
mov eax,eax
push ebx
mov ebx,eax
mov eax,ebx
call dword 0x14018
cmp dword [ebx+0x8],byte +0x0
jnz 0x39d5c
mov eax,[ebx+0x10]
call dword 0x1b7cc
pop ebx
ret
mov eax,eax
push ebx
push esi
test dl,dl
jz 0x39d6e
add esp,byte -0x10
call dword 0x2f14
mov ebx,edx
mov esi,eax
xor edx,edx
mov eax,esi
call dword 0x38650
mov dword [esi+0x58],0xffffffff
mov dword [esi+0x5c],0xffffffff
mov eax,[esi+0x34]
mov [eax+0x8c],esi
mov edx,[esi]
mov edx,[edx+0x3c]
mov [eax+0x88],edx
mov eax,[0x468d34]
mov eax,[eax]
mov eax,[eax+0x30]
mov [esi+0x38],eax
mov byte [esi+0x61],0x1
mov edx,esi
mov eax,[0x46dbec]
call dword 0x39d1c
mov eax,esi
test bl,bl
jz 0x39dcf
call dword 0x2f6c
pop dword [dword fs:0x0]
add esp,byte +0xc
mov eax,esi
pop esi
pop ebx
ret
push ebx
push esi
call dword 0x2fbc
mov ebx,edx
mov esi,eax
mov edx,esi
mov eax,[0x46dbec]
call dword 0x39d44
mov edx,ebx
and dl,0xfc
mov eax,esi
call dword 0x386fc
test bl,bl
jng 0x39e02
mov eax,esi
call dword 0x2f64
pop esi
pop ebx
ret
lea eax,[eax+0x0]
push ebx
cmp word [eax+0x72],byte +0x0
jz 0x39e18
mov ebx,eax
mov eax,[ebx+0x74]
call dword [ebx+0x70]
pop ebx
ret
mov eax,eax
mov eax,[eax+0x34]
mov eax,[eax+0x54]
ret
nop
mov eax,[eax+0x34]
mov [eax+0x54],edx
ret
nop
push ebx
mov ebx,eax
mov eax,[0x468eb4]
cmp byte [eax+0xd],0x0
jz 0x39e73
cmp byte [ebx+0x41],0x0
jz 0x39e73
lea eax,[ebx+0x58]
call dword 0x34878
test eax,eax
jz 0x39e5d
movzx edx,byte [eax+0x5f]
mov eax,ebx
call dword 0x395dc
mov byte [ebx+0x41],0x1
jmp short 0x39e73
mov eax,[0x468d34]
mov eax,[eax]
movzx edx,byte [eax+0x34]
mov eax,ebx
call dword 0x395dc
mov byte [ebx+0x41],0x1
pop ebx
ret
lea eax,[eax+0x0]
push esi
xor edx,edx
mov ecx,[dword 0x468eb4]
cmp byte [ecx+0xd],0x0
jz 0x39ebd
cmp byte [eax+0x41],0x0
jz 0x39eb6
add eax,byte +0x58
call dword 0x34878
test eax,eax
jz 0x39ea6
mov si,0xffc7
call dword 0x2dec
mov edx,eax
jmp short 0x39ebd
mov eax,[0x468d34]
mov eax,[eax]
call dword 0x5d9a0
mov edx,eax
jmp short 0x39ebd
cmp byte [eax+0x30],0x1
setz dl
mov eax,edx
pop esi
ret
lea eax,[eax+0x0]
push ebx
push esi
push edi
push ebp
add esp,byte -0x8
mov edi,ecx
mov esi,edx
mov ebx,eax
mov ecx,esp
mov edx,edi
mov eax,esi
call dword 0x12a04
mov edx,esp
mov eax,ebx
call dword 0x39f74
mov eax,ebx
call dword 0x39e2c
mov edx,ebx
mov eax,ebx
mov ecx,[eax]
call dword [ecx+0x3c]
xor edx,edx
mov eax,[ebx+0x34]
call dword 0x37fb0
xor edx,edx
mov eax,[ebx+0x34]
call dword 0x38498
mov eax,[ebx+0x34]
call dword 0x35744
mov eax,ebx
call dword 0x3906c
mov eax,ebx
call dword 0x39e78
and eax,byte +0x7f
lea eax,[eax+eax*2]
lea eax,[eax*2+0x468598]
movzx edx,byte [ebx+0x60]
movzx ebp,word [eax+edx*2]
movzx eax,byte [ebx+0x68]
or bp,[eax*2+0x4685a4]
movzx ebp,bp
movzx eax,byte [ebx+0x69]
shl eax,byte 0xa
or ebp,eax
push byte +0x0
mov eax,[0x46dbec]
mov eax,[eax+0x10]
push eax
push byte +0x0
push edi
push esi
push ebp
mov eax,[ebx+0x34]
call dword 0x35874
push eax
call dword 0x6358
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
ret
lea eax,[eax+0x0]
push esi
push edi
add esp,byte -0x8
mov esi,edx
lea edi,[esp]
movsd
movsd
mov edx,[esp]
mov [eax+0x58],edx
mov edx,[esp+0x4]
mov [eax+0x5c],edx
pop ecx
pop edx
pop edi
pop esi
ret
mov eax,eax
push ebx
push esi
push edi
push ebp
mov ebp,edx
mov edi,eax
mov eax,[edi+0x4]
mov esi,[eax+0x8]
dec esi
test esi,esi
jl 0x39fca
inc esi
xor ebx,ebx
mov eax,[edi+0x4]
mov edx,ebx
call dword 0x13e7c
cmp ebp,[eax]
jnz 0x39fc6
mov eax,[edi+0x4]
mov edx,ebx
call dword 0x13e7c
xor edx,edx
mov [eax],edx
inc ebx
dec esi
jnz 0x39faa
pop ebp
pop edi
pop esi
pop ebx
ret
nop
push ebp
mov ebp,esp
add esp,byte -0x18
push ebx
push esi
push edi
mov esi,ecx
lea edi,[ebp-0x15]
movsd
movsd
movsd
movsd
mov edi,edx
mov [ebp-0x4],eax
mov eax,[0x468bd4]
cmp dword [eax],byte +0x4
jg 0x3a009
mov eax,[0x468bd4]
cmp dword [eax],byte +0x4
jnz 0x3a005
mov eax,[0x468d80]
cmp dword [eax],byte +0x0
jg 0x3a009
xor ebx,ebx
jmp short 0x3a00b
mov bl,0x1
mov eax,[ebp-0x4]
mov si,0xfff2
call dword 0x2dec
mov edx,[dword 0x4351ec]
call dword 0x2d7c
mov [ebp-0x5],al
test byte [ebp+0x8],0x1
jz 0x3a057
cmp byte [ebp-0x5],0x0
jz 0x3a03b
cmp byte [ebp-0x5],0x0
jz 0x3a057
test bl,bl
jnz 0x3a057
mov edx,0xff00000d
mov eax,[edi+0x14]
call dword 0x20454
mov edx,0xff00000e
mov eax,[edi+0xc]
call dword 0x1fb98
jmp short 0x3a097
test bl,bl
jz 0x3a07d
test byte [ebp+0x8],0x80
jz 0x3a07d
mov edx,0xff000004
mov eax,[edi+0x14]
call dword 0x20454
mov edx,0xff000011
mov eax,[edi+0xc]
call dword 0x1fb98
jmp short 0x3a097
mov edx,0xff000004
mov eax,[edi+0x14]
call dword 0x20454
mov edx,0xff000007
mov eax,[edi+0xc]
call dword 0x1fb98
movzx eax,word [ebp+0x8]
push eax
movzx eax,byte [ebp-0x5]
push eax
lea ecx,[ebp-0x15]
mov edx,edi
mov eax,[ebp-0x4]
mov ebx,[eax]
call dword [ebx+0x30]
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret 0x4
nop
push ebx
push esi
push edi
push ebp
add esp,byte -0x8
mov esi,edx
mov ebx,eax
mov eax,esi
mov edx,ebx
call dword 0x3a70
mov edi,0x1
jmp dword 0x3a192
mov eax,[esi]
movzx eax,byte [eax+edi-0x1]
mov edx,[dword 0x468e98]
movzx eax,al
bt [edx],eax
jnc 0x3a0f1
inc edi
jmp dword 0x3a191
mov eax,[esi]
cmp byte [eax+edi-0x1],0x26
jnz dword 0x3a191
mov eax,[0x468eb4]
cmp byte [eax+0xc],0x0
jz 0x3a16c
cmp edi,byte +0x1
jng 0x3a12c
mov eax,[esi]
mov [esp],eax
mov ebp,[esp]
test ebp,ebp
jz 0x3a120
sub ebp,byte +0x4
mov ebp,[ebp+0x0]
sub ebp,edi
cmp ebp,byte +0x2
setnl [esp+0x4]
jmp short 0x3a131
mov byte [esp+0x4],0x0
cmp byte [esp+0x4],0x0
jz 0x3a146
mov eax,[esi]
cmp byte [eax+edi-0x2],0x28
setz [esp+0x5]
jmp short 0x3a14b
mov byte [esp+0x5],0x0
cmp byte [esp+0x5],0x0
jz 0x3a160
mov eax,[esi]
cmp byte [eax+edi+0x1],0x29
setz [esp+0x6]
jmp short 0x3a165
mov byte [esp+0x6],0x0
movzx ebx,byte [esp+0x6]
jmp short 0x3a16e
xor ebx,ebx
test bl,bl
jz 0x3a183
mov edx,edi
dec edx
mov eax,esi
mov ecx,0x4
call dword 0x3f54
jmp short 0x3a191
mov eax,esi
mov ecx,0x1
mov edx,edi
call dword 0x3f54
inc edi
mov eax,[esi]
call dword 0x3cdc
cmp edi,eax
jng dword 0x3a0d6
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
ret
push ebx
push esi
push edi
push ebp
mov ebp,edx
mov esi,eax
mov eax,ebp
call dword 0x3a1c
mov ebx,0x1
mov eax,esi
test eax,eax
jz 0x3a1c7
sub eax,byte +0x4
mov eax,[eax]
mov edi,eax
cmp edi,ebx
jl 0x3a209
mov eax,[0x468e98]
movzx edx,byte [esi+ebx-0x1]
movzx edx,dl
bt [eax],edx
jnc 0x3a1e2
inc ebx
jmp short 0x3a204
cmp byte [esi+ebx-0x1],0x26
jnz 0x3a204
mov eax,edi
sub eax,ebx
dec eax
jl 0x3a204
inc ebx
cmp byte [esi+ebx-0x1],0x26
jz 0x3a204
mov eax,ebp
movzx edx,byte [esi+ebx-0x1]
call dword 0x3c04
inc ebx
cmp edi,ebx
jnl 0x3a1cd
pop ebp
pop edi
pop esi
pop ebx
ret
mov eax,eax
push ebp
mov ebp,esp
add esp,byte -0x10
push ebx
push esi
push edi
xor ecx,ecx
mov [ebp-0xc],ecx
mov [ebp-0x8],ecx
mov esi,edx
mov ebx,eax
xor eax,eax
push ebp
push dword 0x43b2b3
push dword [fs:eax]
mov [fs:eax],esp
lea edx,[ebp-0x8]
mov eax,ebx
call dword 0x3a0b8
mov edi,[ebp-0x8]
lea edx,[ebp-0xc]
mov eax,esi
call dword 0x3a0b8
mov eax,[ebp-0xc]
mov [ebp-0x4],eax
mov [ebp-0x10],edi
mov ebx,[ebp-0x10]
test ebx,ebx
jz 0x3a25f
sub ebx,byte +0x4
mov ebx,[ebx]
mov esi,[ebp-0x4]
test esi,esi
jz 0x3a26b
sub esi,byte +0x4
mov esi,[esi]
push esi
mov eax,[ebp-0x4]
call dword 0x3eac
push eax
push ebx
mov [ebp-0x10],edi
mov eax,[ebp-0x10]
call dword 0x3eac
push eax
push byte +0x1
push dword 0x400
call dword 0x5a78
sub eax,byte +0x2
test eax,eax
setz al
mov ebx,eax
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x43b2ba
lea eax,[ebp-0xc]
mov edx,0x2
call dword 0x3a40
ret
jmp dword 0x3384
jmp short 0x3a2a5
mov eax,ebx
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret
nop
adc al,[eax]
add [eax],al
or al,0x85
inc esi
add [ebx+ecx*4+0x46],dl
add [eax],cl
test [esi+0x0],eax
adc [ebx-0x7afbffba],cl
inc esi
add ah,dl
mov al,[esi+0x0]
add [ebp-0x7507ffba],al
inc esi
add ah,bh
test [esi+0x0],al
mov esp,0xf800468d
test [esi+0x0],al
add [ebx-0x7b0bffba],cl
inc esi
add [esp+ecx*4+0x46],ah
add al,dh
test [esi+0x0],al
fmul qword [ebx-0x7b13ffba]
inc esi
add [eax-0x72],al
inc esi
add al,ch
test [esi+0x0],al
cmp al,0x8e
inc esi
add ah,ah
test [esi+0x0],al
xchg eax,esp
mov eax,[esi+0x0]
loopne 0x3a2a6
inc esi
add [esi+ecx*4],al
inc esi
add ah,bl
test [esi+0x0],al
les ecx,[ebp-0x7b27ffba]
inc esi
add [eax-0x2bffb972],cl
test [esi+0x0],al
pushad
mov es,[esi+0x0]
rol byte [esi+eax*2+0x468ba400],1
add ah,cl
test [esi+0x0],al
mov eax,0xc800468b
test [esi+0x0],al
lock mov eax,[esi+0x0]
push ebp
mov ebp,esp
xor eax,eax
push ebp
push dword 0x43b3bc
push dword [fs:eax]
mov [fs:eax],esp
inc dword [dword 0x46dbf4]
jnz 0x3a3ae
mov eax,[0x46dbf0]
call dword 0x2bf0
mov eax,[0x46dbec]
call dword 0x2bf0
mov eax,[0x46dbf8]
call dword 0x2bf0
mov eax,0x4684b4
call dword 0x3a1c
mov eax,0x4684c8
mov ecx,0x12
mov edx,[dword 0x401094]
call dword 0x465c
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x43b3c3
ret
jmp dword 0x3384
jmp short 0x3a3bb
pop ebp
ret
lea eax,[eax+0x0]
int3
mov bl,0x43
add [ecx],al
or al,0x54
dec ebp
outsd
fs popad
insb
push edx
gs jnc 0x3a44d
insb
jz 0x3a3df
add [eax],al
add [eax+0x7fffffff],al
nop
call dword 0x103e79c
pop es
push esp
inc ebx
jnz 0x3a460
jnc 0x3a45f
jc 0x3a3f4
add [eax+0x7fffffff],al
add [eax],al
mov eax,eax
add [ebx+eax*2+0x54060300],dh
inc ecx
insb
imul esp,[edi+0x6e],dword 0x1
add [esi],al
add [eax],al
add ah,bh
mov bl,0x43
add [esi],al
popad
insb
dec esi
outsd
outsb
gs add eax,0x6f546c61
jo 0x3a42b
popad
insb
inc edx
outsd
jz 0x3a49d
outsd
insd
push es
popad
insb
dec esp
gs o16 jz 0x3a43a
popad
insb
push edx
imul esp,[edi+0x68],dword 0x6c610874
inc ebx
insb
imul esp,[ebp+0x6e],dword 0x6c610874
inc ebx
jnz 0x3a4bc
jz 0x3a4ba
insd
or [ebx+0x6f],al
outsb
jz 0x3a4c4
outsd
insb
jnc 0x3a3e3
inc eax
add [esp+esi*4+0x43],ah
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
enter 0x43b4,0x0
cmp al,0x0
add [eax],al
mov al,0x10
inc eax
add [eax],bh
ds inc eax
add ah,bl
in al,0x43
add ah,cl
in al,0x43
add [esi+edi+0x40],cl
add [eax+0x3e],al
inc eax
add [eax-0x5bffbfc5],cl
cmp eax,[eax+0x0]
loopne 0x3a4dd
inc eax
add al,ah
loop 0x3a4ea
add [eax-0x1c],bl
inc ebx
add [esp+0x43],dl
add [ebx],ah
inc ebx
add [eax-0x17ffbc1e],cl
loop 0x3a4fe
add [eax-0x1c],dh
inc ebx
add [esp+0x43],dh
add [esp+0x43],bh
add [ebx],cl
push esp
inc esp
jc 0x3a52e
dec edi
bound ebp,[edx+0x65]
arpl [eax+ebx*8-0x4c],si
inc ebx
add [edi],al
or edx,[esp+eax*2+0x72]
popad
dec edi
bound ebp,[edx+0x65]
arpl [esp-0x4c],si
inc ebx
add [ecx+edx],al
inc eax
add [eax],al
add [eax],cl
inc ebx
outsd
outsb
jz 0x3a567
outsd
insb
jnc 0x3a4f9
add [ebx+0x43b548c0],cl
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [ebp+esi*4+0x43],dh
add [eax+eax+0x0],al
add [eax-0x4c],bl
inc ebx
add [eax],bh
ds inc eax
add ah,bl
in al,0x43
add ah,cl
in al,0x43
add [esi+edi+0x40],cl
add [eax+0x3e],al
inc eax
add [eax-0x5bffbfc5],cl
cmp eax,[eax+0x0]
loopne 0x3a581
inc eax
add [eax-0x1b],ah
inc ebx
add [eax-0x1c],bl
inc ebx
add [esp+0x43],dl
add [ebx],ah
inc ebx
add [eax],dl
in eax,0x43
add al,ch
loop 0x3a5a2
add [eax-0x1c],dh
inc ebx
add [esp+0x43],dh
add [esp+0x43],bh
add [0xe4ec0043],bh
inc ebx
add [esi],dl
push esp
inc edx
popad
jnc 0x3a5df
inc esp
jc 0x3a5de
inc ebx
outsd
outsb
jz 0x3a5f5
outsd
insb
dec edi
bound ebp,[edx+0x65]
arpl [eax+edx*4-0x70],si
mov ch,0x43
add [edi],al
push ss
push esp
inc edx
popad
jnc 0x3a5fc
inc esp
jc 0x3a5fb
inc ebx
outsd
outsb
jz 0x3a612
outsd
insb
dec edi
bound ebp,[edx+0x65]
arpl [eax+ecx*2-0x4b],si
inc ebx
add ah,dl
mov ah,0x43
add [eax],al
add [eax],cl
inc ebx
outsd
outsb
jz 0x3a62a
outsd
insb
jnc 0x3a5bc
add [ebp-0x49f3ffc0],cl
inc ebx
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],bh
mov dh,0x43
add [eax+0x0],cl
add [eax],al
cld
mov ah,0x43
add [eax],bh
ds inc eax
add ah,bl
in al,0x43
add ah,cl
in al,0x43
add [esi+edi+0x40],cl
add [eax+0x3e],al
inc eax
add [eax-0x5bffbfc5],cl
cmp eax,[eax+0x0]
loopne 0x3a645
inc eax
add [eax-0x1b],ah
inc ebx
add [ebp-0x1a53ffbd],dl
inc ebx
add [ebx],ah
inc ebx
add [eax],dl
in eax,0x43
add al,ch
loop 0x3a666
add [eax+0x740043e5],bh
in al,0x43
add al,bl
in eax,0x43
add [0xe4ec0043],bh
inc ebx
add [edx],dl
push esp
inc esp
jc 0x3a69e
inc ebx
outsd
outsb
jz 0x3a6b5
outsd
insb
dec edi
bound ebp,[edx+0x65]
arpl [eax+edx*4-0x68],si
mov dh,0x43
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add ah,al
mov dh,0x43
add [eax+0x0],cl
add [eax],al
db 0xc0
mov ch,0x43
add [eax],bh
ds inc eax
add ah,bl
in al,0x43
add al,bh
in eax,0x43
add [esi+edi+0x40],cl
add [eax+0x3e],al
inc eax
add [eax-0x5bffbfc5],cl
cmp eax,[eax+0x0]
loopne 0x3a6d1
inc eax
add [eax-0x1b],ah
inc ebx
add [ebp-0x1a53ffbd],dl
inc ebx
add [ebx],ah
inc ebx
add [eax],dl
in eax,0x43
add al,ch
loop 0x3a6f2
add [eax+0x740043e5],bh
in al,0x43
add al,bl
in eax,0x43
add [0xe4ec0043],bh
inc ebx
add [esp+edx*2],dl
inc esp
jc 0x3a72a
inc ebx
outsd
outsb
jz 0x3a741
outsd
insb
dec edi
bound ebp,[edx+0x65]
arpl [ebp+eax*2+0x78],si
lea eax,[eax+0x0]
sub [edi+0x43],dh
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
push dword 0x780043b7
add [eax],al
add ah,bh
mov ah,0x43
add [eax],bh
ds inc eax
add ah,bl
in al,0x43
add ah,cl
in al,0x43
add [esi+edi+0x40],cl
add [eax+0x3e],al
inc eax
add [eax-0x5bffbfc5],cl
cmp eax,[eax+0x0]
fs out 0x43,al
add [eax-0x1b],ah
inc ebx
add al,bl
out 0x43,eax
add [esp+0x43],dl
add [ebx],ah
inc ebx
add [esi-0x1d17ffbd],dl
inc ebx
add [eax-0x1c],dh
inc ebx
add [esp+0x43],dh
add [esp+0x43],bh
add ah,dh
out 0x43,al
add ah,bh
in eax,0x43
add [edi],dh
inc ebx
add [eax-0x3bffbc19],dh
out 0x43,eax
add al,ch
out 0x43,eax
add ah,ah
out 0x43,eax
add [edi],cl
push esp
inc esp
jc 0x3a7ce
inc esp
outsd
arpl [ebx+0x4f],bp
bound ebp,[edx+0x65]
arpl [esp+edi*2-0x49],si
inc ebx
add [edi],al
andps xmm0,oword [edx+esi*2+0x61]
inc esp
outsd
arpl [ebx+0x4f],bp
bound ebp,[edx+0x65]
arpl [eax+ebp-0x49],si
inc ebx
add [ebp+esi*4+0x43],cl
or [ebx+0x6f],al
outsb
jz 0x3a80f
outsd
insb
jnc 0x3a7a1
add [ebx+0x43b7f0c0],cl
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],dh
mov eax,0x780043
add [eax],al
fdiv qword [esi+0x3e380043]
inc eax
add ah,bl
in al,0x43
add al,dh
out 0x43,eax
add [esi+edi+0x40],cl
add [eax+0x3e],al
inc eax
add [eax-0x5bffbfc5],cl
cmp eax,[eax+0x0]
fs out 0x43,al
add [eax-0x1b],ah
inc ebx
add al,bl
out 0x43,eax
add [esp+0x43],dl
add [ebx],ah
inc ebx
add [esi-0x1d17ffbd],dl
inc ebx
add [eax-0x1c],dh
inc ebx
add [esp+0x43],dh
add [esp+0x43],bh
add ah,dh
out 0x43,al
add ah,bh
in eax,0x43
add [edi],dh
inc ebx
add [eax-0x3bffbc19],dh
out 0x43,eax
add al,ch
out 0x43,eax
add ah,ah
out 0x43,eax
add [ecx],dl
push esp
inc esp
jc 0x3a896
inc esp
outsd
arpl [ebx+0x4f],bp
bound ebp,[edx+0x65]
arpl [ebp+eax*2+0x78],si
mov eax,eax
nop
mov eax,0x43
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
mov esp,0x43b8
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax+0x640043b8],ch
add [eax],al
add ah,dl
hlt
inc ecx
add [eax],bh
ds inc eax
add [esi+edi+0x40],al
add [eax+0x3e],cl
inc eax
add [esi+edi+0x40],cl
add [eax+0x3e],al
inc eax
add [eax-0x5bffbfc5],cl
cmp eax,[eax+0x0]
sub al,0xfa
inc ebx
add [eax+0x55],ah
inc ecx
add [eax+0x55],ch
inc ecx
add [esp+edx*2+0x41],bh
add [eax-0x7bffbde4],bl
sbb al,0x42
add [eax-0x6],bl
inc ebx
add [esi],cl
push esp
inc ebx
outsd
outsb
jz 0x3a921
outsd
insb
inc ebx
popad
outsb
jna 0x3a917
jnc 0x3a848
mov esp,0x70043b8
push cs
push esp
inc ebx
outsd
outsb
jz 0x3a936
outsd
insb
inc ebx
popad
outsb
jna 0x3a92c
jnc 0x3a85d
mov eax,0xf5400043
inc ecx
add [eax+eax],al
or [ebx+0x6f],al
outsb
jz 0x3a94e
outsd
insb
jnc 0x3a8e0
add [ebp-0x46cfffc0],cl
inc ebx
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax+0x43b9],ah
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [ecx+edi*4+0xac0043],al
add [eax],al
or al,0x16
inc ebp
add [eax],ch
mov ebp,0x3e440041
inc eax
add [esi+esi*4+0x41],ah
add [esi+edi+0x40],cl
add [eax+0x3e],al
inc eax
add [eax-0x5bffbfc5],cl
cmp eax,[eax+0x0]
push eax
pop ds
inc ebp
add [eax+0x2c00451f],ah
mov ecx,0x547c0041
inc ecx
add [edx+edi*4],al
inc ecx
add [edi+edi*4+0x41],ch
add [eax+ebx+0x45],dl
add [esp+0x45],dh
add [eax-0x43],al
inc ecx
add [edx+edi*4],ah
inc ecx
add [edx+edi*4],bl
inc ecx
add [eax-0x43],cl
inc ecx
add ah,bh
push ds
inc ebp
add [eax+eax*8],ch
inc ecx
add al,dl
mov edi,0xbf640041
inc ecx
add [edi+edi*4-0x4097ffbf],dl
inc ecx
add [eax-0x63ffbae7],ch
and al,[ebp+0x0]
xor al,0x22
inc ebp
add [ebp+0x45],dh
add [esp+edx*2],dl
inc ebx
jnz 0x3a9fc
jz 0x3a9fa
insd
inc ebx
outsd
outsb
jz 0x3aa03
outsd
insb
inc ecx
arpl [ecx+ebp*2+0x6f],si
outsb
lea eax,[eax+0x0]
mov al,[0x70043b9]
adc al,0x54
inc ebx
jnz 0x3aa19
jz 0x3aa17
insd
inc ebx
outsd
outsb
jz 0x3aa20
outsd
insb
inc ecx
arpl [ecx+ebp*2+0x6f],si
outsb
xor [ecx+0x16ec0043],bh
inc ebp
add [ebx],al
add [eax],cl
inc ebx
outsd
outsb
jz 0x3aa38
outsd
insb
jnc 0x3a9ca
add [eax+0x43ba18],dl
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
lodsb
mov edx,0x1c0043
add [eax],al
adc al,0x17
inc ebp
add [eax],bh
ds inc eax
add [esi+edi+0x40],al
add [eax+0x3e],cl
inc eax
add [esi+edi+0x40],cl
add [eax+0x3e],al
inc eax
add [eax-0x5bffbfc5],cl
cmp eax,[eax+0x0]
adc al,0xbe
inc ecx
add [esp+edi*8-0x41b7ffbd],bl
inc ecx
add [edi+edi*8],ah
inc ebx
add [esi+edi*4+0x41],bh
add al,bl
inc dword [ebx+0x0]
int3
mov ebp,0xbe600041
inc ecx
add [esi+edi*4-0x257ffbf],dh
inc ebx
add [eax],bl
push ds
inc ebp
add [eax],dh
inc byte [ebx+0x0]
inc eax
push ds
inc ebp
add [esi+ebx+0x45],dl
add [eax+eax],al
inc esp
add [eax-0x2],bh
inc ebx
add [eax-0x5bffbae2],dl
push ds
inc ebp
add al,dh
inc byte [ebx+0x0]
int3
push ds
inc ebp
add [edi+edi*8+0x43],cl
add ah,dl
push ds
inc ebp
add [eax-0x1],dh
inc ebx
add ah,bl
push ds
inc ebp
add [eax+eax+0x6c0044],cl
inc esp
add [eax+eax-0x6bffbc],ch
inc ebx
add al,dh
push ds
inc ebp
add ah,dh
push ds
inc ebp
add [eax+0x1c0043ff],bh
inc byte [ebx+0x0]
inc byte [fs:ebx+0x0]
mov al,0xfe
inc ebx
add [eax+0x6c0043fc],bh
inc dword [ebx+0x0]
nop
inc dword [ebx+0x0]
int3
add [eax+eax+0x12],al
push esp
inc ebx
outsd
outsb
jz 0x3ab25
outsd
insb
inc ecx
arpl [ecx+ebp*2+0x6f],si
outsb
dec esp
imul ebp,[esi+0x6b],dword 0x43bac490
add [ebx],al
or al,0x54
dec ebp
outsd
jnz 0x3ab3e
gs inc edx
jnz 0x3ab43
jz 0x3ab40
outsb
add [eax],eax
add [eax],al
add [edx],al
add [eax],al
add al,al
mov edx,0x6d060043
bound ecx,[ebp+0x66]
jz 0x3aaee
insd
db 0x62
push edx
imul esp,[edi+0x68],dword 0x626d0874
dec ebp
imul esp,[esp+0x6c],dword 0x6f430865
outsb
jz 0x3ab6f
outsd
insb
jnc 0x3ab05
mov ebx,0xe030043
push esp
dec ebp
outsd
jnz 0x3ab7e
gs inc ecx
arpl [ecx+ebp*2+0x76],si
popad
jz 0x3ab79
add [eax],eax
add [eax],al
add [eax+eax],al
add [eax],al
add [ebx+0x6d090043],bh
popad
inc esp
gs popaw
jnz 0x3ab96
jz 0x3ab36
insd
popad
inc ecx
arpl [ecx+ebp*2+0x76],si
popad
jz 0x3ab9b
adc [ebp+0x61],ch
inc ecx
arpl [ecx+ebp*2+0x76],si
popad
jz 0x3aba6
inc ecx
outsb
fs inc ebp
popad
jz 0x3ab54
insd
popad
dec esi
outsd
inc ecx
arpl [ecx+ebp*2+0x76],si
popad
jz 0x3abb9
adc ch,[ebp+0x61]
dec esi
outsd
inc ecx
arpl [ecx+ebp*2+0x76],si
popad
jz 0x3abc6
inc ecx
outsb
fs inc ebp
popad
jz 0x3ab70
inc ebx
outsd
outsb
jz 0x3abdf
outsd
insb
jnc 0x3abe5
mov ebx,0x9030043
push esp
inc esp
jc 0x3abdb
dec ebp
outsd
add [gs:eax],eax
add [eax],al
add [ecx],al
add [eax],al
add [eax-0x45],dh
inc ebx
add [eax],cl
fs insd
dec ebp
popad
outsb
jnz 0x3abf5
insb
or esp,[ebp+ebp*2+0x41]
jnz 0x3ac0f
outsd
insd
popad
jz 0x3ac09
arpl [eax],cx
inc ebx
outsd
outsb
jz 0x3ac19
outsd
insb
jnc 0x3ab36
db 0xc0
mov al,0xbb
inc ebx
add [ebx],al
or dl,[esp+eax*2+0x72]
popad
push ebx
jz 0x3ac1b
jz 0x3ac21
add [eax],eax
add [eax],al
add [edx],al
add [eax],al
add [ebx+edi*4+0x640b0043],ch
jnc 0x3ac11
jc 0x3ac30
inc ebp
outsb
jz 0x3ac39
jc 0x3abe1
fs jnc 0x3ac1d
jc 0x3ac3c
dec esp
gs popad
jna 0x3ac46
or ah,[ebx+esi*2+0x44]
jc 0x3ac48
dec ebp
outsd
jna 0x3ac51
or [ebx+0x6f],al
outsb
jz 0x3ac64
outsd
insb
jnc 0x3ab83
inc eax
add ah,bh
mov ebx,0x9030043
push esp
inc esp
jc 0x3ac63
dec ebx
imul ebp,[esi+0x64],dword 0x1
add [ecx],al
add [eax],al
add al,bh
mov ebx,0x64060043
imul eax,[edx+esi*2+0x61],byte +0x67
push es
imul eax,[fs:edi+ebp*2+0x63],byte +0x6b
or [ebx+0x6f],al
outsb
jz 0x3ac9a
outsd
insb
jnc 0x3abbc
xor [ebx+eax*2+0x54090100],bh
push esp
popad
bound ecx,[edi+0x72]
gs jc 0x3ac3e
db 0xff
db 0xff
db 0xff
db 0xff
db 0xff
jg 0x3ac43
add [eax-0x44],cl
inc ebx
add [edx],cl
or [ebx+eax*2+0x61],dl
jo 0x3acc3
imul ebp,[edi+0x6e],dword 0xbc58c08b
inc ebx
add [ebx],al
or edx,[ecx+eax*2+0x6e]
arpl [eax+0x6f],bp
jc 0x3acad
imul ebp,[esi+0x64],dword 0x1
add [ebx],al
add [eax],al
add [esp+edi*4+0x43],dl
add [esi],al
popad
imul ecx,[ebp+0x66],byte +0x74
add eax,0x6f546b61
jo 0x3ac87
popad
imul edx,[edx+0x69],byte +0x67
push dword 0x6b610874
inc edx
outsd
jz 0x3ad02
outsd
insd
or [ebx+0x6f],al
outsb
jz 0x3ad08
outsd
insb
jnc 0x3ac27
inc eax
add [eax+0x60043bc],ah
or [ecx+eax*2+0x6e],dl
arpl [eax+0x6f],bp
jc 0x3ad1d
add [esp+edi*4+0x43],edx
add [eax+0x43bcb4],dl
add [edi],ecx
push esp
inc ebx
outsd
outsb
jnc 0x3ad30
jc 0x3ad1f
imul ebp,[esi+0x74],dword 0x657a6953
add eax,0x0
db 0xff
db 0xff
db 0xff
jg 0x3ac5a
rcr byte [edi*4+0x43],byte 0x0
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax-0x43],cl
inc ebx
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],dh
mov ebp,0x200043
add [eax],al
pop esp
sub al,[ecx+0x0]
cmp [esi],bh
inc eax
add [esi+edi+0x40],al
add [eax+0x3e],cl
inc eax
add [esi+edi+0x40],cl
add [eax+0x3e],al
inc eax
add [eax-0x5bffbfc5],cl
cmp eax,[eax+0x0]
push eax
push esp
inc ecx
add [ebx+edi*8+0x55680043],dh
inc ecx
add [esp+edx*2+0x41],bh
add [eax+0x780043fc],cl
sti
inc ebx
add [eax],dl
push esp
push ebx
imul edi,[edx+0x65],dword 0x736e6f43
jz 0x3adae
popad
imul ebp,[esi+0x74],dword 0x408d73
dec eax
mov ebp,0x10070043
push esp
push ebx
imul edi,[edx+0x65],dword 0x736e6f43
jz 0x3adc7
popad
imul ebp,[esi+0x74],dword 0x43bd1c73
add al,dl
sub al,[ecx+0x0]
add al,0x0
or [ebx+0x6f],al
outsb
jz 0x3addc
outsd
insb
jnc 0x3ad72
add [eax+0x80043bc],dh
add [eax],al
db 0xff
cld
sti
inc ebx
add [ecx],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [ecx],cl
dec ebp
popad
js 0x3add6
imul esp,[gs:edi+0x68],dword 0x43bcb074
add [eax+eax],cl
add bh,bh
cld
sti
inc ebx
add [ecx],al
add [eax],al
add [ecx],al
add [eax],al
add [eax],al
add [eax],al
add [ecx],al
add [eax],cl
dec ebp
popad
js 0x3ae09
imul esp,[esp+esi*2+0x68],dword 0x43bcb0
adc [eax],al
add bh,bh
cld
sti
inc ebx
add [ecx],al
add [eax],al
add [edx],al
add [eax],al
add [eax],al
add [eax],al
add [edx],al
add [ecx],cl
dec ebp
imul ebp,[esi+0x48],dword 0x68676965
jz 0x3ad8b
mov esp,0x140043
add bh,bh
cld
sti
inc ebx
add [ecx],al
add [eax],al
add [ebx],al
add [eax],al
add [eax],al
add [eax],al
add [ebx],al
add [eax],cl
dec ebp
imul ebp,[esi+0x57],dword 0x68746469
lea eax,[eax+0x0]
add al,0xbe
inc ebx
add [ecx],al
or edx,[ebp+ecx*2+0x61]
jc 0x3ae72
imul ebp,[esi+0x53],dword 0x5657a69
add [eax],al
add [eax],al
db 0xff
db 0xff
db 0xff
jg 0x3ada6
shr byte [eax-0x42],byte 0x43
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [esi+edi*4+0x43],dl
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
test [esi+0x200043],bh
add [eax],al
pop esp
sub al,[ecx+0x0]
cmp [esi],bh
inc eax
add [esi+edi+0x40],al
add [eax+0x3e],cl
inc eax
add [esi+edi+0x40],cl
add [eax+0x3e],al
inc eax
add [eax-0x5bffbfc5],cl
cmp eax,[eax+0x0]
push eax
push esp
inc ecx
add [esp+ebp*8+0x55680044],ah
inc ecx
add [esp+edx*2+0x41],bh
add ah,ch
in al,dx
inc esp
add [esi+ebp*8+0x44],ah
add [eax],al
in eax,dx
inc esp
add [eax-0x14],ah
inc esp
add [eax],cl
push esp
dec ebp
popad
jc 0x3aef1
imul ebp,[esi+0x73],dword 0x9400408d
mov esi,0x8070043
push esp
dec ebp
popad
jc 0x3af02
imul ebp,[esi+0x73],dword 0x43be68
shr byte [edx],1
inc ecx
add [eax+eax],al
or [ebx+0x6f],al
outsb
jz 0x3af20
outsd
insb
jnc 0x3aeb6
add [eax],al
mov esi,0x80043
add bh,bh
and ch,ch
inc esp
add [ecx],al
add [eax],al
add [eax],al
add [eax],al
add [ebx],al
add [eax],al
add [eax],al
add [esp+ecx*2],al
gs o16 jz 0x3aed3
mov esi,0xc0043
add bh,bh
and ch,ch
inc esp
add [ecx],al
add [eax],al
add [ecx],al
add [eax],al
add [ebx],al
add [eax],al
add [ecx],al
add [ebx],al
push esp
outsd
jo 0x3aef1
mov esi,0x100043
add bh,bh
and ch,ch
inc esp
add [ecx],al
add [eax],al
add [edx],al
add [eax],al
add [ebx],al
add [eax],al
add [edx],al
add [dword 0x68676952],al
jz 0x3af11
mov esi,0x140043
add bh,bh
and ch,ch
inc esp
add [ecx],al
add [eax],al
add [ebx],al
add [eax],al
add [ebx],al
add [eax],al
add [ebx],al
add [esi],al
inc edx
outsd
jz 0x3afa3
outsd
insd
lea eax,[eax+0x0]
cmp byte [edi+0x43],0x0
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [edi+edi*4+0x43],ch
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
pushfd
mov edi,0x200043
add [eax],al
sbb al,0xbe
inc ebx
add [eax],bh
ds inc eax
add [esi+edi+0x40],al
add [eax+0x3e],cl
inc eax
add [esi+edi+0x40],cl
add [eax+0x3e],al
inc eax
add [eax-0x5bffbfc5],cl
cmp eax,[eax+0x0]
push eax
push esp
inc ecx
add [esp+ebp*8+0x55680044],ah
inc ecx
add [esp+edx*2+0x41],bh
add ah,ch
in al,dx
inc esp
add [esi+ebp*8+0x44],ah
add [eax],ch
lock inc esp
add [eax-0x14],ah
inc esp
add [eax],cl
push esp
push eax
popad
imul ebp,[fs:esi+0x67],dword 0xac00408d

mov edi,0x8070043
push esp
push eax
popad
imul ebp,[fs:esi+0x67],dword 0x43bf80

nop
mov esi,0x40043
or [ebx+0x6f],al
outsb
jz 0x3b038
outsd
insb
jnc 0x3afce
add [eax],al
mov esi,0x80043
add bh,bh
and ch,ch
inc esp
add [ecx],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [esp+ecx*2],al
gs o16 jz 0x3afeb
mov esi,0xc0043
add bh,bh
and ch,ch
inc esp
add [ecx],al
add [eax],al
add [ecx],al
add [eax],al
add [eax],al
add [eax],al
add [ecx],al
add [ebx],al
push esp
outsd
jo 0x3b009
mov esi,0x100043
add bh,bh
and ch,ch
inc esp
add [ecx],al
add [eax],al
add [edx],al
add [eax],al
add [eax],al
add [eax],al
add [edx],al
add [dword 0x68676952],al
jz 0x3b029
mov esi,0x140043
add bh,bh
and ch,ch
inc esp
add [ecx],al
add [eax],al
add [ebx],al
add [eax],al
add [eax],al
add [eax],al
add [ebx],al
add [esi],al
inc edx
outsd
jz 0x3b0bb
outsd
insd
lea eax,[eax+0x0]
push eax
rol byte [ebx+0x0],byte 0x8
or edx,[ebp+ecx*2+0x6f]
jnz 0x3b0ca
gs inc ebp
jna 0x3b0c0
outsb
jz 0x3b05e
add eax,0x65530608
outsb
gs jc 0x3b06f
push esp
dec edi
bound ebp,[edx+0x65]
arpl [eax+eax+0x6],si
inc edx
jnz 0x3b0e8
jz 0x3b0e5
outsb
or al,0x54
dec ebp
outsd
jnz 0x3b0f0
gs inc edx
jnz 0x3b0f5
jz 0x3b0f2
outsb
add [dword 0x66696853],al
jz 0x3b097
push esp
push ebx
push dword 0x53746669
jz 0x3b0f6
jz 0x3b0fc
add [ecx],al
pop eax
pop es
dec ecx
outsb
jz 0x3b104
gs jc 0x3b0a3
add [ecx+0x7],ebx
dec ecx
outsb
jz 0x3b10f
gs jc 0x3b0ae
add al,0x11
inc eax
add al,al
mov edx,0x23440043
inc ecx
add [eax+edx],bh
inc eax
add [eax+edx],bh
inc eax
add [ebx+0x43c0c8c0],cl
add [eax],cl
andps xmm1,oword [ebp+0x6f]
jnz 0x3b142
gs dec ebp
outsd
jna 0x3b139
inc ebp
jna 0x3b13c
outsb
jz 0x3b0da
add al,0x8
push es
push ebx
gs outsb
gs jc 0x3b0eb
push esp
dec edi
bound ebp,[edx+0x65]
arpl [eax+eax+0x5],si
push ebx
push dword 0xb746669
push esp
push ebx
push dword 0x53746669
jz 0x3b15d
jz 0x3b163
add [ecx],al
pop eax
pop es
dec ecx
outsb
jz 0x3b16b
gs jc 0x3b10a
add [ecx+0x7],ebx
dec ecx
outsb
jz 0x3b176
gs jc 0x3b115
add al,0x11
inc eax
add [ebx+0x41],al
add [eax+edx],bh
inc eax
add [eax+edx],bh
inc eax
add [ebp-0x3ed3ffc0],cl
inc ebx
add [eax],cl
adc edx,[ebp+ecx*2+0x6f]
jnz 0x3b1a6
gs inc ecx
arpl [ecx+ebp*2+0x76],si
popad
jz 0x3b1a1
inc ebp
jna 0x3b1a4
outsb
jz 0x3b142
pop es
or [esi],al
push ebx
gs outsb
gs jc 0x3b153
push esp
dec edi
bound ebp,[edx+0x65]
arpl [eax+eax+0x6],si
inc edx
jnz 0x3b1cc
jz 0x3b1c9
outsb
or al,0x54
dec ebp
outsd
jnz 0x3b1d4
gs inc edx
jnz 0x3b1d9
jz 0x3b1d6
outsb
add [dword 0x66696853],al
jz 0x3b17b
push esp
push ebx
push dword 0x53746669
jz 0x3b1da
jz 0x3b1e0
add [ecx],al
pop eax
pop es
dec ecx
outsb
jz 0x3b1e8
gs jc 0x3b187
add [ecx+0x7],ebx
dec ecx
outsb
jz 0x3b1f3
gs jc 0x3b192
pop es
dec eax
imul esi,[esp+edx*2+0x65],dword 0x49077473
outsb
jz 0x3b204
gs jc 0x3b1a4
or eax,0x73756f4d
gs inc ecx
arpl [ecx+ebp*2+0x76],si
popad
jz 0x3b216
push cs
push esp
dec ebp
outsd
jnz 0x3b22a
gs inc ecx
arpl [ecx+ebp*2+0x76],si
popad
jz 0x3b225
add [ecx+edx],al
inc eax
add al,al
mov edx,0x23440043
inc ecx
add [eax+edx],bh
inc eax
add [eax+edx],bh
inc eax
add [eax+edx],bh
inc eax
add [eax],al
mov ebx,0x408d0043
add ah,ah
rol dword [ebx+0x0],byte 0x8
or [ebx+ecx*2+0x65],edx
jns 0x3b230
jna 0x3b252
outsb
jz 0x3b1f0
add ecx,[eax]
push es
push ebx
gs outsb
gs jc 0x3b201
push esp
dec edi
bound ebp,[edx+0x65]
arpl [ecx+eax+0x3],si
dec ebx
gs jns 0x3b20b
push edi
outsd
jc 0x3b26f
add [dword 0x66696853],al
jz 0x3b21e
push esp
push ebx
push dword 0x53746669
jz 0x3b27d
jz 0x3b283
add [ecx+edx],al
inc eax
add [eax+0x10],ch
inc eax
add [ebx+0x41],al
add [eax+0x43c230],dl
or [esi],cl
push esp
dec ebx
gs jns 0x3b287
jc 0x3b29e
jnc 0x3b2ae
inc ebp
jna 0x3b2a3
outsb
jz 0x3b241
add cl,[eax]
push es
push ebx
gs outsb
gs jc 0x3b252
push esp
dec edi
bound ebp,[edx+0x65]
arpl [ecx+eax+0x3],si
dec ebx
gs jns 0x3b25c
inc ebx
push dword 0x4007261
adc [eax+0x0],eax
sub [eax],dl
inc eax
add [ebp-0x3d93ffc0],cl
inc ebx
add [eax],cl
push cs
push esp
inc esp
jc 0x3b2d3
dec edi
jna 0x3b2db
jc 0x3b2bd
jna 0x3b2df
outsb
jz 0x3b27d
push es
or [esi],al
push ebx
gs outsb
gs jc 0x3b28e
push esp
dec edi
bound ebp,[edx+0x65]
arpl [eax+ecx+0x6],si
push ebx
outsd
jnz 0x3b306
arpl [ebp+0x7],sp
push esp
dec edi
bound ebp,[edx+0x65]
arpl [eax+eax+0x1],si
pop eax
pop es
dec ecx
outsb
jz 0x3b30b
gs jc 0x3b2aa
add [ecx+0x7],ebx
dec ecx
outsb
jz 0x3b316
gs jc 0x3b2b5
add eax,0x74617453
or dl,[gs:esp+eax*2+0x72]
popad
push ebx
jz 0x3b325
jz 0x3b32b
add [esi],eax
inc ecx
arpl [ebx+0x65],sp
jo 0x3b342
pop es
inc edx
outsd
outsd
insb
gs popad
outsb
add [ecx+edx],al
inc eax
add [ecx+edx],al
inc eax
add [eax+edx],bh
inc eax
add [eax+edx],bh
inc eax
add [ebx+edi*4+0x10000043],ch
inc eax
add [eax+0x43c2f4],dl
or [esi],cl
push esp
inc esp
jc 0x3b35b
inc esp
jc 0x3b36d
jo 0x3b345
jna 0x3b367
outsb
jz 0x3b305
add al,0x8
push es
push ebx
gs outsb
gs jc 0x3b316
push esp
dec edi
bound ebp,[edx+0x65]
arpl [eax+ecx+0x6],si
push ebx
outsd
jnz 0x3b38e
arpl [ebp+0x7],sp
push esp
dec edi
bound ebp,[edx+0x65]
arpl [eax+eax+0x1],si
pop eax
pop es
dec ecx
outsb
jz 0x3b393
gs jc 0x3b332
add [ecx+0x7],ebx
dec ecx
outsb
jz 0x3b39e
gs jc 0x3b33d
add al,0x11
inc eax
add [ecx+edx],al
inc eax
add [eax+edx],bh
inc eax
add [eax+edx],bh
inc eax
add [ebp-0x3cabffc0],cl
inc ebx
add [eax],cl
andps xmm2,oword [ebx+0x74]
popad
jc 0x3b3d0
inc esp
jc 0x3b3c0
inc ebp
jna 0x3b3c8
outsb
jz 0x3b366
add cl,[eax]
push es
push ebx
gs outsb
gs jc 0x3b377
push esp
dec edi
bound ebp,[edx+0x65]
arpl [ecx+ecx+0xa],si
inc esp
jc 0x3b3dd
dec edi
bound ebp,[edx+0x65]
arpl [ebx+ecx+0x54],si
inc esp
jc 0x3b3e9
dec edi
bound ebp,[edx+0x65]
arpl [eax+eax+0x4],si
adc [eax+0x0],eax
aam 0xb4
inc ebx
add [ebx+eax*8+0xd080043],bl
push esp
inc ebp
outsb
fs inc esp
jc 0x3b406
inc ebp
jna 0x3b40e
outsb
jz 0x3b3ac
add al,0x8
push es
push ebx
gs outsb
gs jc 0x3b3bd
push esp
dec edi
bound ebp,[edx+0x65]
arpl [eax+ecx+0x6],si
push esp
popad
jc 0x3b42a
gs jz 0x3b3cd
push esp
dec edi
bound ebp,[edx+0x65]
arpl [eax+eax+0x1],si
pop eax
pop es
dec ecx
outsb
jz 0x3b43a
gs jc 0x3b3d9
add [ecx+0x7],ebx
dec ecx
outsb
jz 0x3b445
gs jc 0x3b3e4
add al,0x11
inc eax
add [ecx+edx],al
inc eax
add [eax+edx],bh
inc eax
add [eax+edx],bh
inc eax
add al,bh
ret
inc ebx
add [eax],cl
push cs
push esp
inc esp
outsd
arpl [ebx+0x44],bp
jc 0x3b471
jo 0x3b449
jna 0x3b46b
outsb
jz 0x3b409
add al,0x8
push es
push ebx
gs outsb
gs jc 0x3b41a
push esp
dec edi
bound ebp,[edx+0x65]
arpl [eax+ecx+0x6],si
push ebx
outsd
jnz 0x3b492
arpl [ebp+0xf],sp
push esp
inc esp
jc 0x3b488
inc esp
outsd
arpl [ebx+0x4f],bp
bound ebp,[edx+0x65]
arpl [eax+eax+0x1],si
pop eax
pop es
dec ecx
outsb
jz 0x3b49f
gs jc 0x3b43e
add [ecx+0x7],ebx
dec ecx
outsb
jz 0x3b4aa
gs jc 0x3b449
add al,0x11
inc eax
add [eax-0x49],bh
inc ebx
add [eax+edx],bh
inc eax
add [eax+edx],bh
inc eax
add [ebp-0x3b9fffc0],cl
inc ebx
add [eax],cl
push cs
push esp
inc esp
outsd
arpl [ebx+0x4f],bp
jna 0x3b4cf
jc 0x3b4b1
jna 0x3b4d3
outsb
jz 0x3b471
push es
or [esi],al
push ebx
gs outsb
gs jc 0x3b482
push esp
dec edi
bound ebp,[edx+0x65]
arpl [eax+ecx+0x6],si
push ebx
outsd
jnz 0x3b4fa
arpl [ebp+0xf],sp
push esp
inc esp
jc 0x3b4f0
inc esp
outsd
arpl [ebx+0x4f],bp
bound ebp,[edx+0x65]
arpl [eax+eax+0x1],si
pop eax
pop es
dec ecx
outsb
jz 0x3b507
gs jc 0x3b4a6
add [ecx+0x7],ebx
dec ecx
outsb
jz 0x3b512
gs jc 0x3b4b1
add eax,0x74617453
or dl,[gs:esp+eax*2+0x72]
popad
push ebx
jz 0x3b521
jz 0x3b527
add [esi],eax
inc ecx
arpl [ebx+0x65],sp
jo 0x3b53e
pop es
inc edx
outsd
outsd
insb
gs popad
outsb
add [ecx+edx],al
inc eax
add [eax-0x49],bh
inc ebx
add [eax+edx],bh
inc eax
add [eax+edx],bh
inc eax
add [ebx+edi*4+0x10000043],ch
inc eax
add [eax+0x43c4f0],dl
or [esp+edx*2],cl
push ebp
outsb
inc esp
outsd
arpl [ebx+0x45],bp
jna 0x3b561
outsb
jz 0x3b4ff
add al,0x8
push es
push ebx
gs outsb
gs jc 0x3b510
push esp
dec edi
bound ebp,[edx+0x65]
arpl [eax+ecx+0x6],si
inc ebx
insb
imul esp,[ebp+0x6e],dword 0x43540874
outsd
outsb
jz 0x3b591
outsd
insb
or [ecx],cl
dec esi
gs ja 0x3b57b
popad
jc 0x3b591
gs jz 0x3b538
push esp
push edi
imul ebp,[esi+0x43],dword 0x72746e6f
outsd
insb
add [dword 0x6f6c6c41],eax
ja 0x3b547
inc edx
outsd
outsd
insb
gs popad
outsb
add [ecx+edx],al
inc eax
add [eax-0x35],bl
inc ebx
add [edx*8+0x10000043],al
inc eax
add [ebp+eax*8+0x43],bl
add [eax],cl
andps xmm2,oword [ebx+0x74]
popad
jc 0x3b5d8
inc esp
outsd
arpl [ebx+0x45],bp
jna 0x3b5d0
outsb
jz 0x3b56e
add cl,[eax]
push es
push ebx
gs outsb
gs jc 0x3b57f
push esp
dec edi
bound ebp,[edx+0x65]
arpl [ecx+ecx+0xa],si
inc esp
jc 0x3b5e5
dec edi
bound ebp,[edx+0x65]
arpl [edi+ecx+0x54],si
inc esp
jc 0x3b5f1
inc esp
outsd
arpl [ebx+0x4f],bp
bound ebp,[edx+0x65]
arpl [eax+eax+0x4],si
adc [eax+0x0],eax
js 0x3b559
inc ebx
add [eax+0x80043c5],ch
adc [edi+eax*2+0x65],edx
jz 0x3b602
imul esi,[ebp+0x49],dword 0x456f666e
jna 0x3b61e
outsb
jz 0x3b5bc
add eax,0x65530608
outsb
gs jc 0x3b5cd
push esp
dec edi
bound ebp,[edx+0x65]
arpl [eax+ecx+0xa],si
inc esp
outsd
arpl [ebx+0x43],bp
insb
imul esp,[ebp+0x6e],dword 0x43540874
outsd
outsb
jz 0x3b652
outsd
insb
adc [dword 0x6c666e49],ecx
jnz 0x3b64f
outsb
arpl [ebp+0x52],sp
arpl [gs:ebp+eax+0x54],si
push edx
arpl [gs:eax+edx+0x8],si
dec ebp
outsd
jnz 0x3b670
gs push eax
outsd
jnc 0x3b608
push esp
push eax
outsd
imul ebp,[esi+0x74],dword 0x61430701
outsb
inc esp
outsd
arpl [ebx+0x7],bp
inc edx
outsd
outsd
insb
gs popad
outsb
add [ecx+edx],al
inc eax
add [eax-0x35],bl
inc ebx
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
adc [eax+0x0],al
mov eax,eax
xor al,0xc6
inc ebx
add [eax],cl
andps xmm0,oword [ebx+0x61]
outsb
push edx
gs jnc 0x3b6a7
jpe 0x3b6a5
inc ebp
jna 0x3b6a8
outsb
jz 0x3b646
add al,0x8
push es
push ebx
gs outsb
gs jc 0x3b657
push esp
dec edi
bound ebp,[edx+0x65]
arpl [ecx+eax+0x8],si
dec esi
gs ja 0x3b6b4
imul esp,[esp+esi*2+0x68],dword 0x746e4907
gs jc 0x3b66b
or [esi+0x65],ecx
ja 0x3b6b7
imul esp,[gs:edi+0x68],dword 0x6e490774
jz 0x3b6de
gs jc 0x3b67e
push es
push edx
gs jnc 0x3b6eb
jpe 0x3b6e9
pop es
inc edx
outsd
outsd
insb
gs popad
outsb
add [ecx+edx],al
inc eax
add [eax+edx],bh
inc eax
add [eax+edx],bh
inc eax
add [eax],al
adc [eax+0x0],al
lea eax,[eax+0x0]
movsb
mov byte [ebx+0x0],0x8
pop ss
push esp
inc ebx
outsd
outsb
jnc 0x3b720
jc 0x3b70f
imul ebp,[esi+0x65],dword 0x73655264
imul edi,[edx+0x65],dword 0x6e657645
jz 0x3b6be
add eax,0x65530608
outsb
gs jc 0x3b6cf
push esp
dec edi
bound ebp,[edx+0x65]
arpl [ecx+eax+0x8],si
dec ebp
imul ebp,[esi+0x57],dword 0x68746469
pop es
dec ecx
outsb
jz 0x3b743
gs jc 0x3b6e3
or [ebp+0x69],ecx
outsb
dec eax
imul esp,[gs:edi+0x68],dword 0x6e490774
jz 0x3b756
gs jc 0x3b6f6
or [ebp+0x61],cl
js 0x3b751
imul esp,[esp+esi*2+0x68],dword 0x746e4907
gs jc 0x3b708
or [ebp+0x61],ecx
js 0x3b754
imul esp,[gs:edi+0x68],dword 0x6e490774
jz 0x3b77b
gs jc 0x3b71a
add al,0x11
inc eax
add [eax+edx],bh
inc eax
add [eax+edx],bh
inc eax
add [eax+edx],bh
inc eax
add [eax+edx],bh
inc eax
add [ebx+0x43c734c0],cl
add [eax],cl
adc [ebp+ecx*2+0x6f],dl
jnz 0x3b7ae
gs push edi
push dword 0x456c6565
jna 0x3b7a9
outsb
jz 0x3b747
add eax,0x65530608
outsb
gs jc 0x3b758
push esp
dec edi
bound ebp,[edx+0x65]
arpl [eax+eax+0x5],si
push ebx
push dword 0xb746669
push esp
push ebx
push dword 0x53746669
jz 0x3b7ca
jz 0x3b7d0
add [edx],cl
push edi
push dword 0x446c6565
gs insb
jz 0x3b7d8
pop es
dec ecx
outsb
jz 0x3b7e1
gs jc 0x3b790
or [ebp+0x6f],cl
jnz 0x3b7f8
gs push eax
outsd
jnc 0x3b790
push esp
push eax
outsd
imul ebp,[esi+0x74],dword 0x61480701
outsb
fs insb
fs pop es
inc edx
outsd
outsd
insb
gs popad
outsb
add [ecx+edx],al
inc eax
add [ebx+0x41],al
add [eax+edx],bh
inc eax
add [eax],al
add [eax],al
add [eax],al
adc [eax+0x0],al
mov eax,eax
mov esp,0x80043c7
push ss
push esp
dec ebp
outsd
jnz 0x3b836
gs push edi
push dword 0x556c6565
jo 0x3b810
outsd
ja 0x3b83d
inc ebp
jna 0x3b837
outsb
jz 0x3b7d5
add al,0x8
push es
push ebx
gs outsb
gs jc 0x3b7e6
push esp
dec edi
bound ebp,[edx+0x65]
arpl [eax+eax+0x5],si
push ebx
push dword 0xb746669
push esp
push ebx
push dword 0x53746669
jz 0x3b858
jz 0x3b85e
adc [eax],cl
dec ebp
outsd
jnz 0x3b872
gs push eax
outsd
jnc 0x3b80a
push esp
push eax
outsd
imul ebp,[esi+0x74],dword 0x61480701
outsb
fs insb
fs pop es
inc edx
outsd
outsd
insb
gs popad
outsb
add [ecx+edx],al
inc eax
add [ebx+0x41],al
add [eax],al
add [eax],al
add [eax],al
adc [eax+0x0],al
xor al,cl
inc ebx
add [eax],cl
adc dl,[ebx+eax*2+0x6f]
outsb
jz 0x3b89d
js 0x3b8ae
push eax
outsd
jo 0x3b8b3
jo 0x3b885
jna 0x3b8a7
outsb
jz 0x3b845
add ecx,[eax]
push es
push ebx
gs outsb
gs jc 0x3b856
push esp
dec edi
bound ebp,[edx+0x65]
arpl [eax+edx+0x8],si
dec ebp
outsd
jnz 0x3b8cf
gs push eax
outsd
jnc 0x3b867
push esp
push eax
outsd
imul ebp,[esi+0x74],dword 0x61480701
outsb
fs insb
fs pop es
inc edx
outsd
outsd
insb
gs popad
outsb
add [ecx+edx],al
inc eax
add [eax],al
add [eax],al
add [eax],al
adc [eax+0x0],al
lea eax,[eax+0x0]
aam 0xc8
inc ebx
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [ecx+ecx*8+0x43],ah
add [ebx+ecx*8+0x43],bl
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [esi-0x37],bh
inc ebx
add [esi-0x35],cl
inc ebx
add [eax+0x2c000001],dl
aaa
inc ecx
add [eax],ch
mov ebp,0x3e440041
inc eax
add [esi+esi*4+0x41],ah
add [esi+edi+0x40],cl
add [ecx+ebp],dh
inc esp
add [eax-0x5bffbfc5],cl
cmp eax,[eax+0x0]
call dword 0x6c03fcd6
cmp al,[eax+eax+0x30]
sub al,0x44
add [esp+edx*2+0x41],bh
add [edx+edi],dh
inc esp
add [ebp+eax+0x5200044],dh
inc esp
add [eax+0x40004410],al
mov ebp,0xba240041
inc ecx
add [edx+edi*4],bl
inc ecx
add [eax-0x43],cl
inc ecx
add al,dh
add [eax+eax+0x58],al
and eax,[eax+eax+0x54]
and eax,[eax+eax+0x24]
and al,0x44
add [eax+0x3],dh
inc esp
add [eax-0x13ffbbf4],cl
or eax,[eax+eax-0x18]
adc eax,0x2b00044
inc esp
add [edx+eax+0x3c040044],dh
inc esp
add [eax],dh
cmp al,0x44
add al,dh
add al,0x44
add [eax+edx+0x44],ah
add ah,ch
add al,0x44
add al,dh
adc [eax+eax+0x6c],eax
adc [eax+eax-0x50],eax
adc al,0x44
add [ebx+edx],ch
inc esp
add [esi+0x44],ah
add [esp+edi+0x17a80044],dh
inc esp
add [eax+ebx+0x6f40044],ah
inc esp
add [eax+ebx+0xe0044],al
add [eax],al
add [eax],al
add al,[eax]
add [eax],al
xchg eax,esp
adc [eax+0x0],al
test [eax],al
add [eax],al
xchg eax,esp
adc [eax+0x0],al
pop esp
add [eax],eax
add [ebp+0x0],cl
add [edx],eax
mov eax,[0x7020400]
add al,[ebx]
add al,[esi]
add cl,[ecx]
add al,[eax]
add al,[edx]
add al,[dword 0xa020802]
add bl,[edi]
add [edi+0x0],al
or esi,[eax-0x4ff14ff4]
or eax,0x8b04bb0
mov al,0x35
mov al,0x9
mov al,0x23
mov al,0x30
mov al,0xa
mov al,0x13
mov al,0x14
mov al,0x1c
mov al,0x3a
mov al,0x3c
mov al,0x3d
mov al,0x43
mov al,0x7b
add bh,ch
db 0xff
out dx,al
db 0xff
in eax,dx
db 0xff
in al,dx
db 0xff
jmp short 0x3b9cb
jmp dword 0xe7ff:0xe8ffe9ff
jmp esi
jmp ebp
jmp esp
jmp ebx
jmp edx
jmp ecx
jmp eax
db 0xff
db 0xdf
db 0xff
fdivp st7
db 0xdd
db 0xff
fdiv to st7
db 0xdb
db 0xff
db 0xda
db 0xff
fcos
fdivr st7
xlatb
call esi
call ebp
call esp
call ebx
call edx
call ecx
call eax
dec edi
db 0xff
clc
dec esi
dec ebp
dec esp
dec ebx
dec edx
push edx
push ecx
dec ecx
dec eax
inc edi
dec dword [eax]
das
inc esp
add [edi+ebp+0x44],dl
add [eax+0x30],ch
inc esp
add al,al
xor [eax+eax+0x70],al
das
inc esp
add [eax+esi+0x30ec0044],dl
inc esp
add [ecx+esi+0x44],cl
add [edx+esi],dh
inc esp
add [eax-0x27ffbbce],bh
xor al,[eax+eax-0x8]
xor al,[eax+eax+0x50]
xor eax,[eax+eax-0x70]
xor eax,[eax+eax+0x40]
xor al,0x44
add [eax+0x34],ch
inc esp
add [eax+0x34],bh
inc esp
add [eax-0x77ffbbcc],cl
aas
inc esp
add ah,bh
xor eax,0x362c0044
inc esp
add al,dl
xor al,0x44
add al,al
xor eax,0x3cc40044
inc esp
add [eax+0x36],dl
inc esp
add [eax+0x36],bl
inc esp
add [esi+esi+0x36d00044],dl
inc esp
add al,ch
aaa
inc esp
add [eax+0xc004435],ah
xor eax,0x35300044
inc esp
add ah,dh
cmp al,0x44
add [eax+0x38],cl
inc esp
add [eax],bh
cmp al,0x44
add al,dh
sbb [eax+eax-0x60],eax
push cs
inc esp
add al,al
sub eax,0x24800044
inc esp
add [esi+ebp],ch
inc esp
add [esi+ebx+0x1c900044],dl
inc esp
add [eax],bh
ds inc esp
add [eax+0x1800441c],ch
or eax,[eax+eax-0x2c]
sbb al,0x44
add [eax],ch
sbb eax,0x1dfc0044
inc esp
add [eax+0x1e],cl
inc esp
add al,bh
sbb al,[eax+eax+0x8]
sbb eax,[eax+eax-0x70]
sbb eax,[eax+eax+0x70]
sbb eax,[eax+eax-0x40]
pop ds
inc esp
add al,dl
pop ds
inc esp
add [ecx+edi+0x44],ch
add [ebx+edi+0x44],dl
add [edx+eax+0x2fc40044],bh
inc esp
add [edi+edx+0x2e4c0044],bh
inc esp
add [eax],bl
xor [eax+eax-0x3c],eax
xor [eax+eax-0x44],eax
sbb eax,[eax+eax-0xc]
add al,[eax+eax+0x0]
add eax,0x2cc0044
inc esp
add ah,al
adc eax,0x26600044
inc esp
add al,ch
or [eax+eax+0x44],eax
sbb eax,[eax+eax-0x60]
sbb [eax+eax-0x38],eax
add al,[eax+eax-0x40]
add al,[eax+eax+0x4]
sbb [eax+eax-0x4c],al
add al,0x44
add [ecx+ebx+0x54080044],bh
inc ebx
outsd
outsb
jz 0x3bbc7
outsd
insb
nop
pop esp
retf
inc ebx
add [edi],al
or [ebx+eax*2+0x6f],dl
outsb
jz 0x3bbd6
outsd
insb
aam 0xc8
inc ebx
add [eax],ch
cmp [ecx+0x0],al
or eax,0x6f430800
outsb
jz 0x3bbe8
outsd
insb
jnc 0x3bb85
add [eax],al
adc [eax+0x0],al
sar byte [edi],byte 0x44
add al,cl
aas
inc esp
add [ecx],al
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax],al
add al,[eax]
adc [ecx+0x6c],al
imul esp,[edi+0x6e],dword 0x68746957
dec ebp
popad
jc 0x3bc0a
imul ebp,[esi+0x73],dword 0x40103c
inc eax
add [eax],al
call dword far [eax]
or [eax+eax+0x1],eax
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax+0x4c040003],al
gs o16 jz 0x3bc02
adc [eax+0x0],al
inc esp
add [eax],al
dec dword [ecx+ecx+0x44]
add [ecx],al
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax+0x54030004],al
outsd
jo 0x3bc20
adc [eax+0x0],al
dec eax
add [eax],al
inc dword [eax+0x1004409]
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax+0x57050005],al
imul esp,[esp+esi*2+0x68],dword 0x40103c
dec esp
add [eax],al
push dword [ecx+ecx+0x10044]
add [eax],al
add [eax],al
add [eax-0x80000000],al
push es
add [esi],al
dec eax
imul esp,[gs:edi+0x68],dword 0x43b3e474
add [eax+eax+0x0],bh
call esp
adc al,0x44
add [ecx],al
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax],al
pop es
add [esi],al
inc ebx
jnz 0x3bcb4
jnc 0x3bcb3
jc 0x3bbda
adc [eax+0x0],al
test [eax],al
add bh,bh
test [eax],al
add bh,bh
mov ah,0x39
inc esp
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax+0x48040008],al
imul ebp,[esi+0x74],dword 0x412378
pop eax
add [eax],eax
call dword far [eax+0x1]
add bh,bh
add [eax],eax
add [eax],al
add [eax],al
add [eax+0x1],al
or [eax],eax
or [eax+0x65],cl
insb
jo 0x3bcd8
jns 0x3bcf6
gs xchg eax,esp
adc [eax+0x0],al
pop esp
add [eax],eax
inc dword [ebx+ecx+0x39d40044]
inc esp
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax+0x480b000a],al
gs insb
jo 0x3bcf2
gs jns 0x3bd21
outsd
jc 0x3bd11
pop esp
and eax,[ecx+0x0]
pushad
add [eax],eax
push dword [eax+0xb]
inc esp
add ah,dl
cmp [eax+eax+0x0],eax
add [eax],al
add byte [eax],0x0
add [eax],al
or eax,[eax]
or ecx,[eax+0x65]
insb
jo 0x3bd10
outsd
outsb
jz 0x3bd36
js 0x3bd47
nop
mov esi,0x780043
add bh,bh
mov ah,0x3f
inc esp
add [ecx],al
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax+0x4d07000c],al
popad
jc 0x3bd59
imul ebp,[esi+0x73],dword 0x4400408d
int 0x43
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add al,bl
int 0x43
add [eax+eax],ah
add [eax],al
int3
mov ecx,0x3e380043
inc eax
add [esi+edi+0x40],al
add [eax+0x3e],cl
inc eax
add [esi+edi+0x40],cl
add [eax+0x3e],al
inc eax
add [eax-0x5bffbfc5],cl
cmp eax,[eax+0x0]
adc al,0xbe
inc ecx
add ah,cl
inc eax
inc esp
add [eax-0x42],cl
inc ecx
add [edi+edi*8],ah
inc ebx
add [esi+edi*4+0x41],bh
add al,bl
inc dword [ebx+0x0]
int3
mov ebp,0xbe600041
inc ecx
add [esi+edi*4-0x257ffbf],dh
inc ebx
add [eax],bl
push ds
inc ebp
add [eax],dh
inc byte [ebx+0x0]
inc eax
push ds
inc ebp
add al,dh
inc eax
inc esp
add [eax+eax],al
inc esp
add [eax-0x2],bh
inc ebx
add [eax-0x5bffbae2],dl
push ds
inc ebp
add al,dh
inc byte [ebx+0x0]
int3
push ds
inc ebp
add [edi+edi*8+0x43],cl
add ah,dl
push ds
inc ebp
add [eax-0x1],dh
inc ebx
add ah,bl
push ds
inc ebp
add al,bh
inc eax
inc esp
add [eax+eax+0x44],ch
add [eax+eax-0x6bffbc],ch
inc ebx
add al,dh
push ds
inc ebp
add ah,dh
push ds
inc ebp
add [eax+0x1c0043ff],bh
inc byte [ebx+0x0]
inc byte [fs:ebx+0x0]
mov al,0xfe
inc ebx
add [eax+0x6c0043fc],bh
inc dword [ebx+0x0]
nop
inc dword [ebx+0x0]
int3
add [eax+eax+0x15],al
push esp
push edi
imul ebp,[esi+0x43],dword 0x72746e6f
outsd
insb
inc ecx
arpl [ecx+ebp*2+0x6f],si
outsb
dec esp
imul ebp,[esi+0x6b],dword 0xcdf4c08b
inc ebx
add [ebx],al
or [ecx+ecx*2+0x6d],dl
gs dec ebp
outsd
add [gs:eax],eax
add [eax],al
add [ebx],cl
add [eax],al
add al,dh
int 0x43
add [ecx],cl
imul ebp,[ebp+0x44],dword 0x62617369
insb
gs pop es
imul ebp,[ebp+0x43],dword 0x65736f6c
push es
imul ebp,[ebp+0x4f],dword 0xa6e6570
imul ebp,[ebp+0x44],dword 0x43746e6f
popad
jc 0x3be94
or [ecx+0x6d],ch
push ebx
inc ecx
insb
jo 0x3be9f
popad
pop es
imul ebp,[ebp+0x41],dword 0x6168706c
push es
imul ebp,[ebp+0x48],dword 0x7617269
imul ebp,[ebp+0x53],dword 0x6174614b
push es
imul ebp,[ebp+0x4b],dword 0x9617461
imul ebp,[ebp+0x43],dword 0x656e6968
jnc 0x3bec5
or ch,[ecx+0x6d]
push ebx
dec eax
popad
outsb
jnz 0x3becf
insb
or [ecx+0x6d],ebp
dec eax
popad
outsb
jnz 0x3bed9
insb
or [ebx+0x6f],al
outsb
jz 0x3beed
outsd
insb
jnc 0x3be0a
rol byte [esi+ecx*8+0x80a0043],byte 0x54
dec ecx
insd
gs dec esi
popad
insd
gs mov eax,eax
xchg eax,esp
into
inc ebx
add [ecx],al
or al,0x54
inc edx
outsd
jc 0x3beff
gs jc 0x3bef5
imul esp,[esp+esi*2+0x68],dword 0x5
add bh,bh
db 0xff
db 0xff
jg 0x3be3c
mov al,0xce
inc ebx
add [ebx],al
or [edx+eax*2+0x65],edx
jna 0x3bf1c
insb
inc ebx
jnz 0x3bf2f
add [eax],eax
add [eax],al
add [ebx],al
add [eax],al
add [esi+ecx*8+0x62060043],ch
jna 0x3bf1a
outsd
outsb
or [gs:edx+0x76],esp
dec esp
outsd
ja 0x3bf3b
jc 0x3bf3d
or [fs:edx+0x76],ah
push edx
popad
imul esi,[ebx+0x65],dword 0x76620764
push ebx
jo 0x3bf49
arpl [ebp+0x8],sp
inc ebx
outsd
outsb
jz 0x3bf62
outsd
insb
jnc 0x3be84
clc
into
inc ebx
add [ebx],al
or dl,[edx+eax*2+0x65]
jna 0x3bf64
insb
inc ebp
add [gs:bx+si],eax
add [eax],al
add [ebx],al
add [eax],al
add ah,dh
into
inc ebx
add [esi],al
bound esp,[ebp+0x4c]
gs o16 jz 0x3bf1e
bound esp,[ebp+0x54]
outsd
jo 0x3bf26
bound esp,[ebp+0x52]
imul esp,[edi+0x68],dword 0x65620874
inc edx
outsd
jz 0x3bfa1
outsd
insd
or [ebx+0x6f],al
outsb
jz 0x3bfa7
outsd
insb
jnc 0x3bf75
iretd
inc ebx
add [esi],al
or edx,[edx+eax*2+0x65]
jna 0x3bfa8
insb
inc ebp
gs jnc 0x3bf4b
hlt
into
inc ebx
add [ebx+0x43cf54c0],cl
add [ebx],al
or dl,[edx+eax*2+0x65]
jna 0x3bfc0
insb
dec ebx
imul ebp,[esi+0x64],dword 0x1
add [ebx],al
add [eax],al
add [eax-0x31],dl
inc ebx
add [esi],al
bound ebp,[ebx+0x4e]
outsd
outsb
gs push es
bound ebp,[ebx+0x54]
imul ebp,[ebp+0x6],dword 0x6f536b62
o16 jz 0x3bf89
bound ebp,[ebx+0x46]
insb
popad
jz 0x3bf92
inc ebx
outsd
outsb
jz 0x3c001
outsd
insb
jnc 0x3bf1e
rcr byte [eax+0x10043cf],byte 0xb
push esp
inc edx
gs jna 0x3c004
insb
push edi
imul esp,[esp+esi*2+0x68],dword 0x105
add bh,bh
db 0xff
db 0xff
jg 0x3bf3a
db 0xc0
mov ah,0xcf
inc ebx
add [edi],cl
or al,0x49
inc esp
outsd
arpl [ebx+0x4d],bp
popad
outsb
popad
gs jc 0x3bfe7
adc [eax+0x0],eax
add [ecx-0x3],edi
sbb [esi+0x11d1c281],eax
stosb
pushad
add al,al
dec edi
mov [0x4308e870],eax
outsd
outsb
jz 0x3c04f
outsd
insb
jnc 0x3bfec
add bh,bh
db 0xff
call dword 0x80403b8
pop ss
push esp
inc ecx
insb
imul esp,[edi+0x6e],dword 0x65736e49
jc 0x3c06a
inc edx
gs outsw
jc 0x3c061
inc ebp
jna 0x3c064
outsb
jz 0x3c003
add ecx,[eax]
push es
push ebx
gs outsb
gs jc 0x3c017
push esp
push edi
imul ebp,[esi+0x43],dword 0x72746e6f
outsd
insb
or [edx],al
inc ebx
xor [eax],ecx
push esp
inc ebx
outsd
outsb
jz 0x3c094
outsd
insb
or [edx],al
inc ebx
xor cl,[eax]
push esp
inc ebx
outsd
outsb
jz 0x3c0a1
outsd
insb
pop es
inc edx
outsd
outsd
insb
gs popad
outsb
add [eax],dl
inc eax
add [eax],al
add al,0xd5
inc ebx
add [eax-0x35],bl
inc ebx
add [eax-0x35],bl
inc ebx
add [ebx+0x43d050c0],cl
add [eax],cl
adc edx,[ecx+eax*2+0x6c]
imul esp,[edi+0x6e],dword 0x69736f50
jz 0x3c0c7
outsd
outsb
inc ebp
jna 0x3c0c8
outsb
jz 0x3c066
or [eax],cl
push es
push ebx
gs outsb
gs jc 0x3c07b
push esp
push edi
imul ebp,[esi+0x43],dword 0x72746e6f
outsd
insb
or [edi],al
inc ebx
outsd
outsb
jz 0x3c0f4
outsd
insb
or [ebx+eax*2+0x6f],dl
outsb
jz 0x3c0fd
outsd
insb
add [edi],eax
dec esi
gs ja 0x3c0df
gs o16 jz 0x3c09e
dec ecx
outsb
jz 0x3c100
gs jc 0x3c0a0
push es
dec esi
gs ja 0x3c0f8
outsd
jo 0x3c0ae
dec ecx
outsb
jz 0x3c110
gs jc 0x3c0b0
or [esi+0x65],cl
ja 0x3c10b
imul esp,[esp+esi*2+0x68],dword 0x746e4907
gs jc 0x3c0c2
or [esi+0x65],ecx
ja 0x3c10e
imul esp,[gs:edi+0x68],dword 0x6e490774
jz 0x3c135
gs jc 0x3c0e5
or [ecx+0x6c],eax
imul esp,[edi+0x6e],dword 0x74636552
add eax,0x63655254
jz 0x3c0f5
or [ecx+0x6c],eax
imul esp,[edi+0x6e],dword 0x6f666e49
or dl,[ecx+eax*2+0x6c]
imul esp,[edi+0x6e],dword 0x6f666e49
add [edx*8-0x34a7ffbd],al
inc ebx
add [eax+edx],bh
inc eax
add [eax+edx],bh
inc eax
add [eax+edx],bh
inc eax
add [eax+edx],bh
inc eax
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax+0x43d168],dl
add [eax],al
add [eax],al
add [eax],al
add [eax],al
inc eax
rol byte [ebx+0x0],cl
or ch,dl
inc ebx
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [edx-0x2e],bl
inc ebx
add dh,dh
aam 0x43
add [edx+eax+0x0],cl
add [eax+0x280043c8],cl
mov ebp,0x3e440041
inc eax
add [esi+esi*4+0x41],ah
add [esi+edi+0x40],cl
add [ecx+ebp*2],bh
inc esp
add [eax-0x5bffbfc5],cl
cmp eax,[eax+0x0]
inc esp
inc edx
inc esp
add [edi+ebx*4+0x44],bh
add ah,bh
pop eax
inc esp
add [esp+edx*2+0x41],bh
add [edx+edi],dh
inc esp
add [ebx+edx*2],dl
inc esp
add al,bh
inc ebx
inc esp
add [eax+0x40004410],al
mov ebp,0xba240041
inc ecx
add [edx+edi*4],bl
inc ecx
add [eax-0x43],cl
inc ecx
add [eax],al
inc ecx
inc esp
add [eax-0x53ffbb67],ah
lahf
inc esp
add al,bh
sahf
inc esp
add [eax+0x3],dh
inc esp
add [esp+edx*4+0x44],ah
add [esp+edx*4-0x6f0fffbc],al
inc esp
add [eax-0x4bffbbfe],dh
add al,[eax+eax+0x4]
cmp al,0x44
add [eax],dh
cmp al,0x44
add al,dh
add al,0x44
add [eax+edx+0x44],ah
add ah,ch
add al,0x44
add al,dh
adc [eax+eax-0x34],eax
test al,0x44
add [eax+0x2c004414],dh
adc eax,[eax+eax+0x1c]
fs inc esp
add [esp+edi-0x6ebbffbc],dh
inc esp
add [edx+edx*4],al
inc esp
add al,bh
mov [eax+eax-0x18],es
xchg eax,ecx
inc esp
add [eax+0x44],dh
inc esp
add [eax],bh
dec esp
inc esp
add [edx+ebx*2+0x44],ah
add [eax+0x54],al
inc esp
add [edi+edx*2],bh
inc esp
add [ebp+edx*2+0x44],ch
add ah,bh
pop edx
inc esp
add [eax],ah
pop ebx
inc esp
add [ebx+ebx*2+0x59b80044],dh
inc esp
add [eax+0x59],bl
inc esp
add [edi-0x6ccfffbc],cl
inc esp
add al,ch
imul eax,[eax+eax+0x0],byte -0x59
inc esp
add [eax+0x5000448f],ah
test al,0x44
add [eax+0xe004492],bl
add [eax],al
add [eax],al
add [edx],al
add [eax],al
add [eax-0x4fffbc31],dh
add [eax],eax
add [eax-0x43ffbc32],al
add [eax],eax
add [edi+0x0],ch
lldt [ecx]
add [esi+0x0],ecx
adc eax,0x15011400
add [ecx],edi
add [dword 0x2c002b00],ch
add [eax+eax],dl
inc edi
add [esi+0x0],al
add eax,0x20000300
add [eax],al
add [ecx+eax],eax
add [ecx],eax
add eax,0x12010201
add [edi],ebp
add [eax],dl
add ch,[esi]
add [edx],al
add [ecx],ah
add [ebx-0x7bff7e00],al
add [ebp+0x11030f00],al
add ebx,[edx]
add [dword 0x7001e00],bl
add [eax],cl
add [dword 0x7b010e01],cl
add [edi],dh
mov al,0x2e
mov al,0x5
mov al,0x6
mov al,0x7
mov al,0xb
mov al,0xc
mov al,0xd
mov al,0xe
mov al,0x3b
mov al,0xf
mov al,0x10
mov al,0x11
mov al,0x19
mov al,0x22
mov al,0x1a
mov al,0x1b
mov al,0x1c
mov al,0x24
mov al,0x35
mov al,0x25
mov al,0x26
mov al,0x27
mov al,0x2f
mov al,0x0
mov ebp,0xbd02bd01
add al,0xbd
push es
mov ebp,0xb04cb02c
xor esi,[eax-0x4fc74fcc]
cmp [eax-0x4fc34fc6],esi
adc dh,[eax-0x10fce8]
out dx,al
db 0xff
in al,dx
inc esi
inc ebp
inc esp
inc ebx
inc edx
inc ecx
inc eax
db 0xff
mov edi,0xbdffbeff
db 0xff
fcos
std
db 0xff
mov esp,0xbaffbbff
db 0xff
mov ecx,0xd0ffb8ff
push dword [edi-0x31000601]
push dword [esi-0x4b004a01]
push dword [ebx-0x4e004d01]
dec eax
db 0xff
clc
jno 0x3c381
add [eax],ch
jz 0x3c385
add [eax+0x74],cl
inc esp
add [esp+esi*2+0x44],ch
add [esp+esi*2+0x74dc0044],bh
inc esp
add ah,bh
jz 0x3c399
add [eax],ah
jnz 0x3c39d
add [ebp+esi*2+0x44],al
add [eax+0x75],ch
inc esp
add [ebp+esi*2+0x765c0044],bh
inc esp
add [edi+esi*2],bl
inc esp
add [eax+0x77],dh
inc esp
add [eax-0x3bffbb89],ch
ja 0x3c3bd
add [ecx+eax*4+0x44],ch
add [eax+0x58004481],bl
db 0x82
inc esp
add [eax-0x7e],bh
inc esp
add [eax],ah
add dword [eax+eax-0x10],byte -0x7d
inc esp
add [esp+eax*4-0x7b43ffbc],bl
inc esp
add al,dh
test [eax+eax+0x10],al
test [eax+eax-0x78],eax
jnz 0x3c3e9
add [eax],ch
mov [0x85740044],al
inc esp
add [eax-0x47ffbb7b],dl
mov [0x860c0044],al
inc esp
add [eax],dh
xchg al,[eax+eax-0x78]
jz 0x3c405
add [esp+esi*2+0x74ac0044],bl
inc esp
add ah,al
js 0x3c411
add al,ah
js 0x3c415
add ah,bh
js 0x3c419
add [eax],dl
jns 0x3c41d
add [eax+0x400044a5],ch
xchg eax,[eax+eax+0x54]
xchg eax,[eax+eax+0x68]
xchg eax,[eax+eax+0x70]
xchg eax,[eax+eax+0x78]
xchg eax,[eax+eax-0x80]
xchg eax,[eax+eax-0x28]
xchg eax,[eax+eax+0x20]
mov [eax+eax+0x48],al
mov [eax+eax-0x3c],al
mov [eax+eax-0x7c],al
mov [eax+eax+0x4],al
mov [eax+eax+0x44],eax
mov [eax+eax-0x50],eax
xchg eax,[eax+eax+0x50]
xchg al,[eax+eax-0x60]
xchg al,[eax+eax+0x10]
xchg eax,[eax+eax+0x20]
xchg eax,[eax+eax-0x7c]
mov [eax+eax+0x2c],eax
mov al,[eax+eax-0x74]
mov [eax+eax-0x6c],eax
mov [eax+eax-0x64],eax
mov [eax+eax-0x5c],eax
mov [eax+eax-0x20],eax
mov al,[eax+eax-0x3c]
mov eax,[eax+eax+0x18]
mov [eax+eax+0x68],es
mov [eax+eax-0x3c],es
mov [eax+eax+0x4],es
mov al,[eax+eax+0x18]
mov al,[eax+eax+0x40]
pop esp
inc esp
add [ecx+edx*4+0x44],dl
add ah,bh
jng 0x3c4a9
add ah,ch
jg 0x3c4ad
add [eax+eax*4],dl
inc esp
add [eax-0x7a],ch
inc esp
add [eax-0x59],al
inc esp
add [esi+0x44],ch
add [edi+ebx*4],dh
inc esp
add [esp+edx*4-0x71e3ffbc],bl
inc esp
add [eax-0x5bffbb83],ah
jnl 0x3c4d1
add [ebx+edi*2],dh
inc esp
add [esp+edi*2],cl
inc esp
add al,bl
jpo 0x3c4dd
add [eax+0x7b],cl
inc esp
add [eax+0x7b],ch
inc esp
add [eax],al
dec esi
inc esp
add [ebx+edi*2+0x44],al
add [eax+0x7c],dl
inc esp
add [edi+ebx*4+0x44],dh
add [eax],bl
cdq
inc esp
add [eax],cl
jnl 0x3c4fd
add ah,cl
cmpsd
inc esp
add [eax-0x3bffbb80],bl
add dword [eax+eax-0x68],0xb4004482
test [eax+eax-0x54],eax
jl 0x3c515
add [eax-0x67],ah
inc esp
add [eax+0x58004490],dl
xchg eax,edx
inc esp
add [eax-0x2bffbb85],cl
dec esi
inc esp
add ah,dl
xchg eax,edx
inc esp
add [eax-0x67ffbb69],al
cmpsd
inc esp
add [eax],dl
jng 0x3c539
add [ebx],cl
push esp
push edi
imul ebp,[esi+0x43],dword 0x72746e6f
outsd
insb
mov eax,eax
or ch,dl
inc ebx
add [edi],al
or edx,[edi+edx*2+0x69]
outsb
inc ebx
outsd
outsb
jz 0x3c585
outsd
insb
push dword 0x580043d1
retf
inc ebx
add [dword 0x6f430800],cl
outsb
jz 0x3c597
outsd
insb
jnc 0x3c529
add [ebx+0x43d578c0],cl
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],ch
salc
inc ebx
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [esi+edx*8],cl
inc ebx
add [esi+edx*8],dl
inc ebx
add [ecx+eax-0x37780000],dl
inc ebx
add [eax],ch
mov ebp,0x3e440041
inc eax
add [esi+esi*4+0x41],ah
add [esi+edi+0x40],cl
add [ecx+ebp],dh
inc esp
add [eax-0x5bffbfc5],cl
cmp eax,[eax+0x0]
movsb
test eax,0x3a6c0044
inc esp
add [eax],dh
sub al,0x44
add [esp+edx*2+0x41],bh
add [edx+edi],dh
inc esp
add [ebp+eax+0x5200044],dh
inc esp
add [eax+0x40004410],al
mov ebp,0xba240041
inc ecx
add [edx+edi*4],bl
inc ecx
add [eax-0x43],cl
inc ecx
add [eax-0x57],cl
inc esp
add [eax+0x23],bl
inc esp
add [ebx+0x44],dl
add [esp],ah
inc esp
add [eax+0x3],dh
inc esp
add [eax-0x13ffbbf4],cl
or eax,[eax+eax-0x18]
adc eax,0x2b00044
inc esp
add [edx+eax+0x3c040044],dh
inc esp
add [eax],dh
cmp al,0x44
add al,dh
add al,0x44
add [eax+edx+0x44],ah
add ah,ch
add al,0x44
add al,dh
adc [eax+eax+0x6c],eax
adc [eax+eax-0x50],eax
adc al,0x44
add [ebx+edx],ch
inc esp
add [esi+0x44],ah
add [esp+edi+0x17a80044],dh
inc esp
add [eax+ebx+0x6f40044],ah
inc esp
add [eax+ebx-0x5573ffbc],al
inc esp
add [ecx],al
add [edi],cl
add ah,ah
test eax,0x540f0044
inc edi
jc 0x3c67a
jo 0x3c683
imul esp,[ebx+0x43],dword 0x72746e6f
outsd
insb
sub dh,dl
inc ebx
add [edi],al
andps xmm0,oword [edi+0x72]
popad
jo 0x3c698
imul esp,[ebx+0x43],dword 0x72746e6f
outsd
insb
js 0x3c610
inc ebx
add [eax-0x35],bl
inc ebx
add [dword 0x6f430800],cl
outsb
jz 0x3c6bb
outsd
insb
jnc 0x3c64d
add [ebx+0x43d69cc0],cl
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [edi+edx*8+0x43],dl
add [eax],al
add [eax],al
add [eax],al
js 0x3c645
inc ebx
add [eax+0x540043d7],al
add al,[eax]
add [ecx+edx*8],bl
inc ebx
add [eax],ch
mov ebp,0x3e440041
inc eax
add [esi+esi*4+0x41],ah
add [esi+edi+0x40],cl
add [ecx+ebp*2],bh
inc esp
add [eax-0x5bffbfc5],cl
cmp eax,[eax+0x0]
push eax
mov bl,0x44
add [edi+ebx*4+0x44],bh
add ah,bh
pop eax
inc esp
add [esp+edx*2+0x41],bh
add [edx+edi],dh
inc esp
add [ebx+edx*2],dl
inc esp
add al,bh
inc ebx
inc esp
add [eax+0x40004410],al
mov ebp,0xba240041
inc ecx
add [edx+edi*4],bl
inc ecx
add [eax-0x43],cl
inc ecx
add ah,dh
mov dl,0x44
add [eax-0x53ffbb67],ah
lahf
inc esp
add al,bh
sahf
inc esp
add [eax+0x3],dh
inc esp
add [esp+edx*4+0x44],ah
add [esp+edx*4-0x6f0fffbc],al
inc esp
add [eax-0x4bffbbfe],dh
add al,[eax+eax+0x4]
cmp al,0x44
add [eax],dh
cmp al,0x44
add al,dh
add al,0x44
add [eax+edx+0x44],ah
add ah,ch
add al,0x44
add al,dh
adc [eax+eax-0x34],eax
test al,0x44
add [eax+0x2c004414],dh
adc eax,[eax+eax+0x1c]
fs inc esp
add [esp+edi-0x6ebbffbc],dh
inc esp
add [edx+edx*4],al
inc esp
add al,bh
mov [eax+eax-0x18],es
xchg eax,ecx
inc esp
add [eax+0x44],dh
inc esp
add [eax],bh
dec esp
inc esp
add [edx+ebx*2+0x44],ah
add [eax+0x54],al
inc esp
add [edi+edx*2],bh
inc esp
add [ebp+edx*2+0x44],ch
add ah,bh
pop edx
inc esp
add [eax],ah
pop ebx
inc esp
add [ebx+ebx*2+0x59b80044],dh
inc esp
add [eax+0x59],bl
inc esp
add [edi-0x6ccfffbc],cl
inc esp
add [eax+0x44b3],ah
cmpsd
inc esp
add [eax+0x5000448f],ah
test al,0x44
add [eax+0x4c004492],bl
mov ah,0x44
add [ecx],al
add [edi],cl
add [eax+0xe0044b3],al
push esp
inc ebx
jnz 0x3c7f8
jz 0x3c7f6
insd
inc ebx
outsd
outsb
jz 0x3c7ff
outsd
insb
nop
xchg eax,esp
xlatb
inc ebx
add [edi],al
push cs
push esp
inc ebx
jnz 0x3c80d
jz 0x3c80b
insd
inc ebx
outsd
outsb
jz 0x3c814
outsd
insb
pushfd
salc
inc ebx
add [edx*8+0xd0043],al
or [ebx+0x6f],al
outsb
jz 0x3c826
outsd
insb
jnc 0x3c7b8
add [ebp-0x27f7ffc0],cl
inc ebx
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],ch
fld dword [ebx+0x0]
add [eax],al
add [eax],al
add [eax],al
add [eax],al
cld
fadd dword [ebx+0x0]
push ss
fld dword [ebx+0x0]
pushad
add al,[eax]
add [eax-0x2a],dl
inc ebx
add [eax],ch
mov ebp,0x3e440041
inc eax
add [esi+esi*4+0x41],ah
add [esi+edi+0x40],cl
add [ecx+ebp*2],bh
inc esp
add [eax-0x5bffbfc5],cl
cmp eax,[eax+0x0]
push eax
mov bl,0x44
add [edi+ebx*4+0x44],bh
add ah,bh
pop eax
inc esp
add [esp+edx*2+0x41],bh
add [edx+edi],dh
inc esp
add [ebx+edx*2],dl
inc esp
add al,bh
inc ebx
inc esp
add [eax+0x40004410],al
mov ebp,0xba240041
inc ecx
add [edx+edi*4],bl
inc ecx
add [eax-0x43],cl
inc ecx
add [eax-0x5fffbb56],dl
cdq
inc esp
add [edi+ebx*4-0x6107ffbc],ch
inc esp
add [eax+0x3],dh
inc esp
add [esp+edx*4+0x44],ah
add [esp+edx*4-0x6f0fffbc],al
inc esp
add [eax-0x4bffbbfe],dh
add al,[eax+eax+0x4]
cmp al,0x44
add [eax],dh
cmp al,0x44
add al,dh
add al,0x44
add [eax+edx+0x44],ah
add ah,ch
add al,0x44
add al,dh
adc [eax+eax-0x34],eax
test al,0x44
add [eax+0x2c004414],dh
adc eax,[eax+eax+0x1c]
fs inc esp
add [esp+edi-0x6ebbffbc],dh
inc esp
add [edx+edx*4],al
inc esp
add al,bh
mov [eax+eax-0x18],es
xchg eax,ecx
inc esp
add [eax+0x44],dh
inc esp
add [eax],bh
dec esp
inc esp
add [edx+ebx*2+0x44],ah
add ah,bh
stosb
inc esp
add [edi+edx*2],bh
inc esp
add [ebp+edx*2+0x44],ch
add ah,bh
pop edx
inc esp
add [eax],ah
pop ebx
inc esp
add [ebx+ebx*2+0x59b80044],dh
inc esp
add [eax+0x59],bl
inc esp
add [edi-0x6ccfffbc],cl
inc esp
add [eax+0x44b3],ah
cmpsd
inc esp
add [eax+0x5000448f],ah
test al,0x44
add [eax-0x33ffbb6e],bl
stosd
inc esp
add ah,dh
scasd
inc esp
add [ebp+ebp*4+0x44],bh
add [eax-0x51],dh
inc esp
add [eax+0x740044af],bl
lodsb
inc esp
add [eax+esi*4+0x40044],al
test [eax],al
test [eax],eax
adc dh,[eax-0x549ffce9]
inc esp
add [eax-0x55],ch
inc esp
add ah,ah
lodsb
inc esp
add [eax-0x50],ah
inc esp
add [ebx],cl
push esp
dec eax
imul ebp,[esi+0x74],dword 0x646e6957
outsd
ja 0x3c8ae
shr byte [eax],byte 0xd9
inc ebx
add [edi],al
or edx,[eax+ecx*2+0x69]
outsb
jz 0x3c987
imul ebp,[esi+0x64],dword 0xd808776f
inc ebx
add [eax+0xd0043d7],dl
add [eax],cl
inc ebx
outsd
outsb
jz 0x3c9b7
outsd
insb
jnc 0x3c949
add [ebx+0x43d998c0],cl
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax+0x280043d9],bl
add [eax],al
add [eax+0x38004010],dh
ds inc eax
add [esi+edi+0x40],al
add [eax+0x3e],cl
inc eax
add [esi+edi+0x40],cl
add [eax+0x3e],al
inc eax
add [eax-0x5bffbfc5],cl
cmp eax,[eax+0x0]
loopne 0x3c9d1
inc eax
add [ecx],cl
push esp
inc esp
outsd
arpl [ebx+0x5a],bp
outsd
outsb
gs mov eax,eax
int3
add eax,byte -0x78
jmp dword 0x4acf0
add eax,byte -0x78
jmp dword 0x4acf4
add eax,byte -0x78
jmp dword 0x4ade0
add eax,byte -0x78
push eax
mov eax,[eax]
mov eax,[eax+0xc]
xchg eax,[esp]
ret
add eax,byte -0x78
push eax
mov eax,[eax]
mov eax,[eax+0x10]
xchg eax,[esp]
ret
add eax,byte -0x78
push eax
mov eax,[eax]
mov eax,[eax+0x48]
xchg eax,[esp]
ret
add eax,byte -0x78
push eax
mov eax,[eax]
mov eax,[eax+0x24]
xchg eax,[esp]
ret
add eax,byte -0x78
push eax
mov eax,[eax]
mov eax,[eax+0x2c]
xchg eax,[esp]
ret
add eax,byte -0x78
push eax
mov eax,[eax]
mov eax,[eax+0x38]
xchg eax,[esp]
ret
add eax,byte -0x78
push eax
mov eax,[eax]
mov eax,[eax+0x30]
xchg eax,[esp]
ret
add eax,byte -0x78
jmp dword 0x4c774
add dword [esp+0x4],byte -0x78
jmp dword 0x531c
add dword [esp+0x4],byte -0x78
jmp dword 0x5344
add dword [esp+0x4],byte -0x78
jmp dword 0x5358
and dl,bl
inc ebx
add [edx],ch
fiadd dword [ebx+0x0]
xor al,0xda
inc ebx
add [ebp-0x52ffbc27],ah
fld dword [ebx+0x0]
mov ch,0xd9
inc ebx
add [ebp-0x35ffbc27],bh
fld dword [ebx+0x0]
xlatb
fld dword [ebx+0x0]
in al,0xd9
inc ebx
add cl,dh
fld dword [ebx+0x0]
db 0xfe
fld dword [ebx+0x0]
or ebx,edx
inc ebx
add [eax],bl
fiadd dword [ebx+0x0]
add [eax],eax
add [eax],al
jns 0x3ca79
sbb [esi+0x11d1c281],eax
stosb
pushad
add al,al
dec edi
mov [0xda3ee870],eax
inc ebx
add [eax+0x0],bh
add [eax],al
add [eax],al
add [eax],al
mov eax,eax
in al,0xda
inc ebx
add [esi-0x26],dh
inc ebx
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],dh
fild dword [ebx+0x0]
jl 0x3cabe
add [eax],al
movsb
adc [eax+0x0],eax
cmp [esi],bh
inc eax
add al,dh
bound eax,[eax+0x0]
cld
bound eax,[eax+0x0]
dec esp
ds inc eax
add [eax+0x3e],al
inc eax
add [ebx],cl
inc eax
add [ebx+edi-0x437bffc0],ah
inc esp
add al,bl
mov esp,0xe09c0044
inc esp
add [esi+edi*4+0x44],dl
add [esi+edi*4+0x44],ah
add [esi+eax*8],dl
inc esp
add ah,bl
loopne 0x3cb3f
add [eax-0x1fffbb1e],dl
loop 0x3cb47
add al,ah
retf 0x44
push dword 0x700044cd
loopne 0x3cb53
add [edi+ecx*8+0x44],dh
add [eax],cl
aad 0x44
add [ebx+0x44],dl
add [edx+edx*8+0x44],dl
add [eax-0x23],dh
inc esp
add [eax+0x1c0044c2],ah
mov ebx,0xcc340044
inc esp
add [ecx],cl
push esp
inc esp
outsd
arpl [ebx+0x54],bp
jc 0x3cb9e
gs mov eax,eax
mov bl,bl
inc ebx
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax+0x300043db],cl
add [eax],al
add [eax+0x38004010],dh
ds inc eax
add [esi+edi+0x40],al
add [eax+0x3e],cl
inc eax
add [esi+edi+0x40],cl
add [eax+0x3e],al
inc eax
add [eax-0x5bffbfc5],cl
cmp eax,[eax+0x0]
add al,0xe5
inc esp
add [esi],al
push esp
dec ebp
outsd
jnz 0x3cc01
gs nop
movzx edx,byte [eax]
sub dl,0x1
jc 0x3cb9c
jz 0x3cba0
jmp short 0x3cba3
mov byte [eax],0x1
ret
mov byte [eax],0x0
ret
push ebp
mov ebp,esp
push ecx
push ebx
lea ebx,[ebp-0x4]
mov eax,[0x4685ac]
mov edx,[ebp+0x8]
mov [eax+0x1b4],edx
mov eax,[ebp+0x8]
push eax
call dword 0x6190
test eax,eax
jz 0x3cc10
mov eax,[0x4685ac]
mov eax,[eax+0x1c0]
push eax
push byte -0x4
mov eax,[ebp+0x8]
push eax
call dword 0x6310
push byte -0x10
mov eax,[ebp+0x8]
push eax
call dword 0x6100
test eax,0x40000000
jz 0x3cc57
push byte -0xc
mov eax,[ebp+0x8]
push eax
call dword 0x6100
test eax,eax
jnz 0x3cc57
mov eax,[ebp+0x8]
push eax
push byte -0xc
mov eax,[ebp+0x8]
push eax
call dword 0x6310
jmp short 0x3cc57
mov eax,[0x4685ac]
mov eax,[eax+0x1c0]
push eax
push byte -0x4
mov eax,[ebp+0x8]
push eax
call dword 0x6308
push byte -0x10
mov eax,[ebp+0x8]
push eax
call dword 0x60f8
test eax,0x40000000
jz 0x3cc57
push byte -0xc
mov eax,[ebp+0x8]
push eax
call dword 0x60f8
test eax,eax
jnz 0x3cc57
mov eax,[ebp+0x8]
push eax
push byte -0xc
mov eax,[ebp+0x8]
push eax
call dword 0x6308
mov eax,[0x4685ac]
push eax
movzx eax,word [dword 0x46dc12]
push eax
mov eax,[ebp+0x8]
push eax
call dword 0x62d8
mov eax,[0x4685ac]
push eax
movzx eax,word [dword 0x46dc10]
push eax
mov eax,[ebp+0x8]
push eax
call dword 0x62d8
push dword [ebp+0x14]
push dword [ebp+0x10]
push dword [ebp+0xc]
push dword [ebp+0x8]
mov eax,[0x4685ac]
mov dword [dword 0x4685ac],0x0

call dword [eax+0x1c0]
mov [ebp-0x4],eax
mov eax,[ebx]
pop ebx
pop ecx
pop ebp
ret 0x10
lea eax,[eax+0x0]
push ebx
push ecx
mov ebx,eax
push esp
push ebx
call dword 0x6128
test eax,eax
jz 0x3cce0
call dword 0x5af0
cmp eax,[esp]
jnz 0x3cce0
push byte +0x0
push byte +0x0
mov eax,[0x46dc1c]
push eax
push ebx
call dword 0x6278
pop edx
pop ebx
ret
xor eax,eax
pop edx
pop ebx
ret
lea eax,[eax+0x0]
push ebx
push esi
push ecx
mov ebx,eax
xor esi,esi
test ebx,ebx
jz 0x3cd3c
push esp
push ebx
call dword 0x6128
test eax,eax
jz 0x3cd3c
call dword 0x5af0
cmp eax,[esp]
jnz 0x3cd3c
mov eax,[0x46dc18]
call dword 0x3eac
push eax
call dword 0x5b90
cmp ax,[dword 0x46dc12]
jnz 0x3cd33
movzx eax,word [dword 0x46dc12]
push eax
push ebx
call dword 0x6098
mov esi,eax
jmp short 0x3cd3c
mov eax,ebx
call dword 0x3ccb4
mov esi,eax
mov eax,esi
pop edx
pop esi
pop ebx
ret
mov eax,eax
push ebx
mov ebx,eax
mov eax,ebx
call dword 0x3cce8
test eax,eax
setnz al
test al,al
jnz 0x3cd6f
cmp word [dword 0x46dc02],byte +0x0
jz 0x3cd6f
mov edx,ebx
mov eax,[dword 0x46dc04]
call dword [dword 0x46dc00]
pop ebx
ret
lea eax,[eax+0x0]
push ebx
push esi
mov ebx,[dword 0x468d34]
mov ebx,[ebx]
mov esi,[ebx+0x30]
test esi,esi
jz 0x3cd96
push ecx
push edx
push eax
mov eax,[0x468d34]
push esi
call dword 0x6278
pop esi
pop ebx
ret
xor eax,eax
pop esi
pop ebx
ret
nop
db 0xff
db 0xff
db 0xff
dec dword [ecx]
add [eax],al
add [ebx+0x72],ah
inc esp
gs popaw
jnz 0x3ce18
jz 0x3cdae
add [eax],al
db 0xff
db 0xff
db 0xff
inc dword [edi]
add [eax],al
add [ebx+0x72],ah
inc ecx
jc 0x3ce2f
outsd
ja 0x3cdc0
db 0xff
db 0xff
db 0xff
inc dword [edi]
add [eax],al
add [ebx+0x72],ah
inc ebx
jc 0x3ce3c
jnc 0x3ce42
add bh,bh
db 0xff
db 0xff
inc dword [edi]
add [eax],al
add [ebx+0x72],ah
dec ecx
inc edx
gs popad
insd
add bh,bh
db 0xff
db 0xff
dec dword [edx]
add [eax],al
add [ebx+0x72],ah
push ebx
imul edi,[edx+0x65],dword 0x5753454e
add [eax],al
db 0xff
db 0xff
db 0xff
dec dword [eax]
add [eax],al
add [ebx+0x72],ah
push ebx
imul edi,[edx+0x65],dword 0x534e
add [eax],al
db 0xff
db 0xff
db 0xff
dec dword [edx]
add [eax],al
add [ebx+0x72],ah
push ebx
imul edi,[edx+0x65],dword 0x4553574e
add [eax],al
db 0xff
db 0xff
db 0xff
dec dword [eax]
add [eax],al
add [ebx+0x72],ah
push ebx
imul edi,[edx+0x65],dword 0x4557
add [eax],al
db 0xff
db 0xff
db 0xff
dec dword [ecx]
add [eax],al
add [ebx+0x72],ah
push ebp
jo 0x3ce7e
jc 0x3ceb1
outsd
ja 0x3ce42
add [eax],al
db 0xff
db 0xff
db 0xff
dec dword [ebx]
add [eax],al
add [ebx+0x72],ah
dec eax
outsd
jnz 0x3cec4
inc edi
insb
popad
jnc 0x3ceca
add bh,bh
db 0xff
db 0xff
inc dword [esi]
add [eax],al
add [ebx+0x72],ah
inc esp
jc 0x3cec6
add [bx+si],al
db 0xff
db 0xff
db 0xff
dec dword [eax]
add [eax],al
add [ebx+0x72],ah
dec esi
outsd
inc esp
jc 0x3cee6
jo 0x3ce79
add [eax],al
add bh,bh
db 0xff
db 0xff
dec dword [eax]
add [eax],al
add [ebx+0x72],ah
dec eax
push ebx
jo 0x3cef6
imul esi,[eax+eax+0x0],dword 0xffff0000
db 0xff
dec dword [eax]
add [eax],al
add [ebx+0x72],ah
push esi
push ebx
jo 0x3cf0a
imul esi,[eax+eax+0x0],dword 0xffff0000
db 0xff
dec dword [ebx]
add [eax],al
add [ebx+0x72],ah
dec ebp
jnz 0x3cf1d
jz 0x3cf1c
inc esp
jc 0x3cf17
add bh,bh
db 0xff
db 0xff
dec dword [ecx]
add [eax],al
add [ebx+0x72],ah
push ebx
push ecx
dec esp
push edi
popad
imul esi,[eax+eax+0x0],dword 0xffffff00
inc dword [eax+eax]
add [eax],al
arpl [edx+0x4e],si
outsd
add [eax],al
add [eax],al
db 0xff
db 0xff
db 0xff
dec dword [edx]
add [eax],al
add [ebx+0x72],ah
inc ecx
jo 0x3cf59
push ebx
jz 0x3cf4d
jc 0x3cf62
add [eax],al
db 0xff
db 0xff
db 0xff
inc dword [esi]
add [eax],al
add [ebx+0x72],ah
dec eax
gs insb
jo 0x3ceff
add bh,bh
db 0xff
db 0xff
dec dword [ebx]
add [eax],al
add [ebx+0x72],ah
dec eax
popad
outsb
fs push eax
outsd
imul ebp,[esi+0x74],dword 0xffffff00
dec dword [ecx]
add [eax],al
add [ebx+0x72],ah
push ebx
imul edi,[edx+0x65],dword 0x6c6c41
add [eax],al
db 0xff
db 0xff
db 0xff
inc dword [esi]
add [eax],al
add [ebx+0x72],ah
push ebx
imul edi,[edx+0x65],dword 0x156a0000
mov ecx,0x4685bc
call dword 0x1392c
ret
lea eax,[eax+0x0]
push byte +0x15
mov ecx,0x4685bc
call dword 0x138ec
ret
lea eax,[eax+0x0]
push ebx
push esi
push edi
mov edi,edx
mov esi,eax
mov edx,esi
mov eax,0x43df98
call dword 0xc1e8
mov ebx,eax
test ebx,ebx
jnz 0x3cf7c
mov eax,edi
mov edx,esi
call dword 0x3a70
jmp short 0x3cf8c
push edi
mov ecx,ebx
dec ecx
mov edx,0x1
mov eax,esi
call dword 0x3f14
pop edi
pop esi
pop ebx
ret
db 0xff
db 0xff
db 0xff
inc dword [ecx]
add [eax],al
add [eax+eax+0x0],bh
add [ebx+0x56],dl
push edi
mov edi,edx
mov esi,eax
mov edx,esi
mov eax,0x43dfdc
call dword 0xc1e8
mov ebx,eax
test ebx,ebx
jnz 0x3cfc0
mov eax,edi
mov edx,esi
call dword 0x3a70
jmp short 0x3cfd0
push edi
lea edx,[ebx+0x1]
mov ecx,0x7fffffff
mov eax,esi
call dword 0x3f14
pop edi
pop esi
pop ebx
ret
db 0xff
db 0xff
db 0xff
inc dword [ecx]
add [eax],al
add [eax+eax+0x0],bh
add [ebx+0x56],dl
add esp,byte -0x8
mov ebx,edx
mov esi,eax
push esp
push ebx
call dword 0x5d70
push byte +0x0
mov eax,[esp+0x8]
add eax,[esi+0x44]
push eax
mov eax,[esp+0x8]
add eax,[esi+0x40]
push eax
push ebx
call dword 0x5e38
mov eax,ebx
push eax
mov ecx,eax
mov edx,0x14
mov eax,[esi+0x30]
call dword 0x41588
push byte +0x0
mov eax,[esp+0x8]
push eax
mov eax,[esp+0x8]
push eax
push ebx
call dword 0x5e38
pop ecx
pop edx
pop esi
pop ebx
ret
lea eax,[eax+0x0]
call dword 0x5fa8
call dword 0x3cce8
test eax,eax
jz 0x3d05b
cmp dword [dword 0x46866c],byte +0x0
jz 0x3d05b
mov edx,[dword 0x46866c]
cmp eax,[edx+0x30]
jnz 0x3d05b
mov eax,[0x46866c]
ret
push ebx
mov ebx,eax
call dword 0x6248
xor eax,eax
mov [0x46866c],eax
test ebx,ebx
jz 0x3d09c
mov eax,ebx
mov edx,[dword 0x43d11c]
call dword 0x2d7c
test al,al
jnz 0x3d08f
cmp dword [ebx+0x30],byte +0x0
jz 0x3d09c
mov [dword 0x46866c],ebx
mov ebx,[ebx+0x30]
mov eax,ebx
call dword 0x4831c
push eax
call dword 0x6298
pop ebx
ret
mov eax,eax
in al,dx
loopne 0x3d0e6
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add ah,bh
loopne 0x3d106
add [eax],dl
add [eax],al
add [ecx+ebp+0x41],cl
add [eax],bh
ds inc eax
add [esi+edi+0x40],al
add [eax+0x3e],cl
inc eax
add [esi+edi+0x40],cl
add [eax+0x3e],al
inc eax
add [eax-0x5bffbfc5],cl
cmp eax,[eax+0x0]
add al,0x4d
inc ecx
add [esi+ecx*2+0x50e80041],ah
inc ecx
add al,dh
loope 0x3d13a
add al,dl
dec ebp
inc ecx
add [ecx],cl
push esp
push ebx
imul esi,[ebp+0x4c],dword 0x8b747369
rcl byte [ebx+0x56],byte 0x57
push ebp
mov edi,ecx
mov ebp,edx
mov esi,eax
xor eax,eax
mov [edi],eax
xor ebx,ebx
jmp short 0x3d12f
mov edx,[edi]
mov eax,esi
call dword 0x13e7c
cmp ebp,[eax+0x4]
setz bl
test bl,bl
jnz 0x3d136
inc dword [edi]
mov eax,[edi]
cmp eax,[esi+0x8]
jl 0x3d11a
mov eax,ebx
pop ebp
pop edi
pop esi
pop ebx
ret
lea eax,[eax+0x0]
push ebp
mov ebp,esp
push ebx
push esi
mov eax,[ebp+0x8]
mov eax,[eax-0x4]
call dword 0x4831c
mov ebx,eax
mov esi,ebx
test ebx,ebx
jz 0x3d166
mov esi,ebx
push ebx
call dword 0x6090
mov ebx,eax
test ebx,ebx
jnz 0x3d158
mov eax,esi
pop esi
pop ebx
pop ebp
ret
push ebp
mov ebp,esp
add esp,byte -0x8
push ebx
push esi
push edi
mov [ebp-0x4],edx
mov esi,eax
mov eax,0x8
call dword 0x1e60
mov ebx,eax
mov eax,[ebp-0x4]
mov [ebx],eax
push ebp
call dword 0x3d140
pop ecx
mov edi,eax
mov [ebx+0x4],edi
lea ecx,[ebp-0x8]
mov edx,edi
mov eax,esi
call dword 0x3d108
test al,al
jz 0x3d1dd
mov edx,[ebp-0x8]
mov eax,esi
call dword 0x13e7c
mov edi,eax
mov eax,[edi]
call dword 0x4831c
push eax
mov eax,[ebx]
call dword 0x4831c
push eax
call dword 0x6158
test eax,eax
jz 0x3d1cf
inc dword [ebp-0x8]
mov ecx,ebx
mov edx,[ebp-0x8]
mov eax,esi
call dword 0x13ef8
jmp short 0x3d1e6
mov edx,ebx
mov eax,esi
call dword 0x13d24
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
ret
lea eax,[eax+0x0]
push ebx
push esi
push edi
mov edi,eax
mov ebx,[edi+0x8]
dec ebx
test ebx,ebx
jl 0x3d217
inc ebx
xor esi,esi
mov edx,esi
mov eax,edi
call dword 0x13e7c
mov edx,0x8
call dword 0x1e7c
inc esi
dec ebx
jnz 0x3d200
mov eax,edi
call dword 0x13d58
pop edi
pop esi
pop ebx
ret
mov eax,eax
push ebx
push esi
push edi
push ecx
mov ebx,eax
xor edi,edi
mov eax,[ebx+0x8]
test eax,eax
jz 0x3d280
dec eax
jnz 0x3d243
xor edx,edx
mov eax,ebx
call dword 0x13e7c
mov edi,[eax]
jmp short 0x3d280
call dword 0x5ff0
push eax
call dword 0x60e0
mov esi,eax
jmp short 0x3d278
mov ecx,esp
mov edx,esi
mov eax,ebx
call dword 0x3d108
test al,al
jz 0x3d26e
mov eax,[ebx+0x4]
mov edx,[esp]
mov eax,[eax+edx*4]
mov edi,[eax]
jmp short 0x3d278
push byte +0x2
push esi
call dword 0x6088
mov esi,eax
test edi,edi
jnz 0x3d280
test esi,esi
jnz 0x3d252
mov eax,edi
pop edx
pop edi
pop esi
pop ebx
ret
nop
mov ecx,[edx+0x8]
mov [eax+0x8],ecx
mov ecx,[edx+0xc]
mov [eax+0xc],ecx
mov ecx,[edx+0x10]
mov [eax+0x10],ecx
mov ecx,[edx+0x14]
mov [eax+0x14],ecx
mov ecx,[edx+0x18]
mov [eax+0x18],ecx
mov ecx,[edx+0x1c]
mov [eax+0x1c],ecx
mov ecx,[edx+0x28]
mov [eax+0x28],ecx
mov ecx,[edx+0x2c]
mov [eax+0x2c],ecx
mov ecx,[edx+0x30]
mov [eax+0x30],ecx
mov ecx,[edx+0x34]
mov [eax+0x34],ecx
ret
lea eax,[eax+0x0]
push ebx
push eax
push dword 0x43e480
call dword 0x1b718
mov ebx,eax
push ebx
call dword 0x6298
mov eax,ebx
pop ebx
ret
push ebp
mov ebp,esp
pop ebp
ret 0x8
nop
push ebx
push esi
add esp,0xffffff00
mov esi,edx
mov ebx,eax
mov edx,esp
mov eax,[ebx]
call dword 0x2ad0
mov edx,esp
mov eax,esi
call dword 0x3c80
add esp,0x100
pop esi
pop ebx
ret
nop
push ebx
mov ebx,edx
call dword 0x6248
mov eax,ebx
call dword 0x1b7cc
pop ebx
ret
lea eax,[eax+0x0]
push ebp
mov ebp,esp
add esp,byte -0x18
push ebx
push esi
push edi
mov [ebp-0x4],eax
xor eax,eax
push ebp
push dword 0x43e423
push dword [fs:eax]
mov [fs:eax],esp
mov eax,[edx]
cmp eax,0x215
jg 0x3d35f
jz 0x3d3ab
sub eax,0x200
jz 0x3d372
sub eax,byte +0x2
jz 0x3d3b4
sub eax,byte +0x3
jz 0x3d3bd
jmp dword 0x3d419
sub eax,0xbd00
jz dword 0x3d3ed
dec eax
jz 0x3d3d8
jmp dword 0x3d419
mov eax,[edx+0x8]
mov [ebp-0x10],eax
movsx eax,word [ebp-0x10]
mov [ebp-0x18],eax
movsx eax,word [ebp-0xe]
mov [ebp-0x14],eax
mov eax,[ebp-0x18]
mov [ebp-0xc],eax
mov eax,[ebp-0x14]
mov [ebp-0x8],eax
lea eax,[ebp-0xc]
push eax
mov eax,[0x46dc2c]
push eax
call dword 0x5ea8
lea eax,[ebp-0xc]
call dword 0x3de00
jmp short 0x3d419
xor eax,eax
call dword 0x3e490
jmp short 0x3d419
mov al,0x1
call dword 0x3e490
jmp short 0x3d419
mov eax,[ebp-0x4]
cmp byte [eax+0x38],0x0
jz 0x3d3cf
xor eax,eax
call dword 0x3e490
jmp short 0x3d419
mov al,0x1
call dword 0x3e490
jmp short 0x3d419
cmp dword [edx+0x4],byte +0x11
jnz 0x3d419
mov eax,[0x46dc24]
add eax,byte +0x10
call dword 0x3de00
jmp short 0x3d419
mov eax,[edx+0x4]
sub eax,byte +0x11
jz 0x3d3fc
sub eax,byte +0xa
jz 0x3d40b
jmp short 0x3d419
mov eax,[0x46dc24]
add eax,byte +0x10
call dword 0x3de00
jmp short 0x3d419
mov dword [edx+0xc],0x1
xor eax,eax
call dword 0x3e490
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
jmp short 0x3d44c
jmp dword 0x30d0
cmp dword [dword 0x46dc20],byte +0x0
jz 0x3d438
xor eax,eax
call dword 0x3e490
mov eax,[0x468d34]
mov eax,[eax]
mov edx,[ebp-0x4]
call dword 0x5ecfc
call dword 0x34e0
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret
nop
xor eax,eax
ret
nop
push ebp
mov ebp,esp
test dl,dl
jz 0x3d465
mov ax,0xfff4
jmp short 0x3d469
mov ax,0xfff3
pop ebp
ret 0x4
lea eax,[eax+0x0]
ret
lea eax,[eax+0x0]
mov eax,[0x46b7f4]
ret
mov eax,eax
ret
lea eax,[eax+0x0]
push ebp
mov ebp,esp
push ecx
push ebx
push esi
push edi
mov [ebp-0x4],eax
xor eax,eax
push ebp
push dword 0x43e4aa
push dword [fs:eax]
mov [fs:eax],esp
mov eax,[ebp-0x4]
mov ecx,[eax]
call dword [ecx+0xc]
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
jmp short 0x3d4c3
jmp dword 0x30d0
mov eax,[0x468d34]
mov eax,[eax]
mov edx,[ebp-0x4]
call dword 0x5ecfc
call dword 0x34e0
pop edi
pop esi
pop ebx
pop ecx
pop ebp
ret
lea eax,[eax+0x0]
call dword 0x2e48
xor eax,eax
mov [0x46dc50],eax
ret
lea eax,[eax+0x0]
call dword 0x2e44
xor eax,eax
mov [0x46dc50],eax
ret
lea eax,[eax+0x0]
test dl,dl
jz 0x3d4f8
add esp,byte -0x10
call dword 0x2f14
mov [eax+0x40],ecx
test dl,dl
jz 0x3d50e
call dword 0x2f6c
pop dword [dword fs:0x0]
add esp,byte +0xc
ret
nop
push ebx
push esi
mov esi,edx
mov ebx,eax
mov edx,esi
mov eax,ebx
call dword 0x3d288
mov eax,esi
mov edx,[dword 0x43b4fc]
call dword 0x2d7c
test al,al
jz 0x3d536
mov eax,[esi+0x40]
mov [ebx+0x40],eax
pop esi
pop ebx
ret
lea eax,[eax+0x0]
push ebp
mov ebp,esp
push esi
push edi
mov esi,eax
mov edi,[esi+0x40]
test edi,edi
jz 0x3d559
mov eax,[ebp+0x8]
push eax
mov eax,edi
mov si,0xffdd
call dword 0x2dec
pop edi
pop esi
pop ebp
ret 0x4
nop
push ebp
mov ebp,esp
push ebx
push esi
push edi
mov edi,ecx
mov ebx,eax
cmp byte [ebp+0x8],0x0
jnz 0x3d57e
mov eax,[ebx+0x40]
mov si,0xffdf
call dword 0x2dec
xor edx,edx
mov eax,[ebp+0xc]
push eax
mov ecx,edi
mov eax,ebx
mov ebx,[eax]
call dword [ebx+0x24]
pop edi
pop esi
pop ebx
pop ebp
ret 0x8
mov eax,eax
push ebp
mov ebp,esp
test dl,dl
jz 0x3d5a4
mov eax,[eax+0x40]
movzx eax,word [eax+0x7e]
jmp short 0x3d5a8
mov ax,0xfff3
pop ebp
ret 0x4
mov eax,[eax+0x40]
mov edx,[eax]
call dword [edx+0x4c]
ret
lea eax,[eax+0x0]
push ebx
mov ebx,eax
mov eax,[ebx+0x40]
mov edx,[eax]
call dword [edx+0x4c]
test eax,eax
jz 0x3d5d4
mov eax,[ebx+0x40]
mov edx,[eax]
call dword [edx+0x4c]
call dword 0x4a28c
pop ebx
ret
mov eax,eax
push ebx
mov ebx,eax
mov eax,[ebx+0x40]
mov edx,[eax]
call dword [edx+0x4c]
test eax,eax
jz 0x3d5f4
mov eax,[ebx+0x40]
mov edx,[eax]
call dword [edx+0x4c]
call dword 0x4a274
pop ebx
ret
mov eax,eax
ret
lea eax,[eax+0x0]
push ebp
mov ebp,esp
push ecx
push ebx
push esi
test dl,dl
jz 0x3d60e
add esp,byte -0x10
call dword 0x2f14
mov [ebp-0x1],dl
mov ebx,eax
xor edx,edx
mov eax,ebx
call dword 0x3d4ec
mov byte [ebx+0x38],0x1
mov dl,0x1
mov eax,[0x41f410]
call dword 0x202ac
mov esi,eax
mov [ebx+0x48],esi
mov edx,0xffffff
xor eax,eax
call dword 0x26ccc
mov edx,eax
mov eax,esi
call dword 0x20428
mov eax,ebx
cmp byte [ebp-0x1],0x0
jz 0x3d65d
call dword 0x2f6c
pop dword [dword fs:0x0]
add esp,byte +0xc
mov eax,ebx
pop esi
pop ebx
pop ecx
pop ebp
ret
push ebx
push esi
call dword 0x2fbc
mov ebx,edx
mov esi,eax
mov eax,[esi+0x48]
call dword 0x2bf0
mov edx,ebx
and dl,0xfc
mov eax,esi
call dword 0x2be0
test bl,bl
jng 0x3d68e
mov eax,esi
call dword 0x2f64
pop esi
pop ebx
ret
lea eax,[eax+0x0]
push ebx
push esi
push edi
mov esi,edx
mov ebx,eax
mov edx,esi
mov eax,ebx
call dword 0x3d510
mov eax,esi
mov edx,[dword 0x43b6dc]
call dword 0x2d7c
test al,al
jz 0x3d6ee
mov eax,esi
movzx edx,byte [eax+0x5c]
mov [ebx+0x5c],dl
mov edx,[eax+0x60]
mov [ebx+0x60],edx
movzx edx,byte [eax+0x74]
mov [ebx+0x74],dl
push esi
lea esi,[eax+0x4c]
lea edi,[ebx+0x4c]
movsd
movsd
movsd
movsd
pop esi
push esi
lea esi,[eax+0x64]
lea edi,[ebx+0x64]
movsd
movsd
movsd
movsd
pop esi
mov edx,[eax+0x48]
mov eax,[ebx+0x48]
mov ecx,[eax]
call dword [ecx+0x8]
pop edi
pop esi
pop ebx
ret
mov eax,eax
push ebp
mov ebp,esp
push esi
mov esi,eax
mov eax,[ebp+0x8]
push eax
mov eax,[esi+0x40]
mov si,0xffe5
call dword 0x2dec
pop esi
pop ebp
ret 0x4
nop
push ebx
push esi
mov ebx,edx
mov ecx,eax
mov eax,ecx
cdq
xor eax,edx
sub eax,edx
mov esi,eax
mov eax,ebx
cdq
xor eax,edx
sub eax,edx
cmp esi,eax
jnl 0x3d72f
mov eax,ecx
pop esi
pop ebx
ret
mov eax,ebx
pop esi
pop ebx
ret
push ebx
push esi
push edi
add esp,byte -0x10
mov esi,edx
lea edi,[esp]
movsd
movsd
movsd
movsd
mov ebx,eax
mov eax,[ebx+0x10]
mov edx,[esp]
cmp eax,edx
jl 0x3d755
cmp eax,[esp+0x8]
jng 0x3d769
sub edx,eax
mov ecx,[esp+0x8]
sub ecx,eax
mov eax,ecx
xchg eax,edx
call dword 0x3d710
mov esi,eax
jmp short 0x3d76b
xor esi,esi
mov eax,[ebx+0x14]
mov edx,[esp+0x4]
cmp eax,edx
jl 0x3d77c
cmp eax,[esp+0xc]
jng 0x3d78e
sub edx,eax
mov ecx,[esp+0xc]
sub ecx,eax
mov eax,ecx
xchg eax,edx
call dword 0x3d710
jmp short 0x3d790
xor eax,eax
test esi,esi
jnz 0x3d798
test eax,eax
jz 0x3d7a7
neg eax
push eax
neg esi
push esi
lea eax,[ebx+0x4c]
push eax
call dword 0x61f8
add esp,byte +0x10
pop edi
pop esi
pop ebx
ret
mov eax,eax
push esi
mov edx,eax
mov eax,[eax+0x40]
mov si,0xffdb
call dword 0x2dec
pop esi
ret
lea eax,[eax+0x0]
push esi
mov edx,eax
mov eax,[eax+0x40]
mov si,0xffda
call dword 0x2dec
pop esi
ret
lea eax,[eax+0x0]
push ebp
mov ebp,esp
xor eax,eax
pop ebp
ret 0x4
lea eax,[eax+0x0]
mov al,0x1
ret
nop
mov eax,0x4
ret
mov eax,eax
ret
lea eax,[eax+0x0]
push ebp
mov ebp,esp
add esp,byte -0x10
push ebx
push esi
push edi
mov ebx,[ebp+0xc]
mov esi,[ebp+0x8]
mov edi,ebx
cmp esi,[edi+0x4]
jnz 0x3d80e
xor eax,eax
jmp short 0x3d854
cmp dword [edi+0x8],byte +0x0
jnz 0x3d834
lea eax,[ebp-0x10]
push eax
push esi
call dword 0x6110
push dword [edi+0x10]
push dword [edi+0xc]
lea eax,[ebp-0x10]
push eax
call dword 0x6220
test eax,eax
jz 0x3d834
mov [edi+0x8],esi
mov edx,ebx
cmp esi,[edx+0x8]
jnz 0x3d843
xor eax,eax
mov byte [edx+0x14],0x1
jmp short 0x3d854
cmp esi,[edx]
jnz 0x3d851
or eax,byte -0x1
xor ecx,ecx
mov [edx+0x8],ecx
jmp short 0x3d854
or eax,byte -0x1
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret 0x8
lea eax,[eax+0x0]
push ebp
mov ebp,esp
add esp,byte -0x3c
push ebx
push esi
push edi
mov ebx,eax
mov byte [ebp-0x1],0x1
mov eax,[ebp+0x8]
add eax,byte -0x9
call dword 0x3dca8
mov esi,eax
mov [ebp-0x14],esi
push byte +0x4
push esi
call dword 0x60e8
mov edx,[dword 0x468d34]
mov edx,[edx]
cmp eax,[edx+0x30]
jz 0x3d8bb
mov eax,[ebp-0x14]
call dword 0x3cce8
mov esi,eax
test esi,esi
jz dword 0x3d9ee
jmp short 0x3d8aa
mov esi,eax
mov eax,[esi+0x30]
test eax,eax
jnz 0x3d8a8
mov eax,esi
call dword 0x4831c
mov [ebp-0x14],eax
cmp dword [ebp-0x14],byte +0x0
jz dword 0x3d9ee
mov esi,ebx
jmp short 0x3d8cb
mov esi,eax
mov eax,[esi+0x30]
test eax,eax
jnz 0x3d8c9
mov eax,esi
call dword 0x4831c
mov edi,eax
mov [ebp-0x18],edi
cmp edi,[ebp-0x14]
jz dword 0x3d9ee
mov eax,[ebp+0x8]
mov eax,[eax-0x10]
mov eax,[eax+0x30]
test eax,eax
jz 0x3d910
mov edx,[ebp+0x8]
mov esi,eax
jmp short 0x3d8fd
mov esi,eax
mov eax,[esi+0x30]
test eax,eax
jnz 0x3d8fb
mov eax,esi
call dword 0x4831c
mov [ebp-0x1c],eax
jmp short 0x3d93a
mov eax,[ebp+0x8]
mov eax,[eax-0x10]
mov edx,[dword 0x43d11c]
call dword 0x2d7c
test al,al
jz 0x3d935
mov eax,[ebp+0x8]
mov eax,[eax-0x10]
call dword 0x4831c
mov [ebp-0x1c],eax
jmp short 0x3d93a
xor eax,eax
mov [ebp-0x1c],eax
mov byte [ebp-0x8],0x0
mov eax,[ebp+0x8]
mov edx,[eax-0x9]
mov [ebp-0x10],edx
mov edx,[eax-0x5]
mov [ebp-0xc],edx
lea eax,[ebp-0x1c]
push eax
push dword 0x43e7f4
call dword 0x5af8
push eax
call dword 0x5f70
cmp byte [ebp-0x8],0x0
jz dword 0x3d9ee
lea eax,[ebp-0x2c]
push eax
mov eax,[ebp-0x14]
push eax
call dword 0x6110
mov eax,[ebp+0x8]
add eax,byte -0x9
push eax
mov eax,[ebp+0x8]
dec eax
push eax
lea ecx,[ebp-0x3c]
mov eax,[ebp+0x8]
mov edx,[eax-0x10]
mov eax,ebx
mov si,0xffbc
call dword 0x2dec
mov eax,[0x46dc24]
mov edx,[dword 0x43b6dc]
call dword 0x2d7c
test al,al
jz 0x3d9d5
mov eax,[0x46dc24]
mov eax,[eax+0x40]
cmp dword [eax+0x94],byte +0x0
jz 0x3d9d5
mov eax,[0x46dc24]
mov eax,[eax+0x40]
mov eax,[eax+0x94]
call dword 0x4831c
cmp eax,[ebp-0x14]
jz 0x3d9ee
lea eax,[ebp-0x3c]
push eax
lea eax,[ebp-0x2c]
push eax
lea eax,[ebp-0x2c]
push eax
call dword 0x6148
test eax,eax
jz 0x3d9ee
mov byte [ebp-0x1],0x0
movzx eax,byte [ebp-0x1]
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret
lea eax,[eax+0x0]
push ebp
mov ebp,esp
mov eax,[ebp+0x8]
mov eax,[eax-0x10]
mov edx,[dword 0x43d11c]
call dword 0x2d7c
test al,al
jz 0x3da39
mov eax,[ebp+0x8]
mov eax,[eax-0x14]
call dword 0x4831c
push eax
mov eax,[ebp+0x8]
mov eax,[eax-0x10]
call dword 0x4831c
push eax
call dword 0x6158
cmp eax,byte +0x1
sbb eax,eax
inc eax
pop ebp
ret
xor eax,eax
pop ebp
ret
lea eax,[eax+0x0]
push ebp
mov ebp,esp
add esp,byte -0x28
push ebx
push esi
push edi
mov esi,eax
lea edi,[ebp-0x9]
movsd
movsd
mov [ebp-0x10],edx
xor eax,eax
mov [ebp-0x18],eax
cmp dword [dword 0x46dc48],byte +0x0
jz dword 0x3db89
push byte +0x11
call dword 0x6020
test ax,0x8000
setnz al
mov edx,[dword 0x468d34]
mov edx,[edx]
xor al,[edx+0xbc]
jz dword 0x3db89
mov eax,[0x46dc4c]
mov edx,[eax]
call dword [edx+0x8]
mov eax,[0x46dc48]
mov ebx,[eax+0x8]
dec ebx
test ebx,ebx
jl dword 0x3db58
inc ebx
xor edi,edi
mov edx,edi
mov eax,[0x46dc48]
call dword 0x13e7c
mov [ebp-0x14],eax
mov eax,[ebp-0x14]
cmp eax,[ebp-0x10]
jz dword 0x3db50
mov eax,[ebp-0x14]
cmp byte [eax+0x1da],0x0
jz dword 0x3db50
mov eax,[ebp-0x14]
mov edx,[eax]
call dword [edx+0x50]
test al,al
jz 0x3db50
mov eax,[ebp-0x14]
call dword 0x4831c
push eax
call dword 0x6198
test eax,eax
jz 0x3db50
push ebp
call dword 0x3d9fc
pop ecx
test al,al
jnz 0x3db50
mov edx,[ebp-0x10]
mov eax,[ebp-0x14]
mov si,0xffbb
call dword 0x2dec
test al,al
jz 0x3db50
mov byte [ebp-0x1],0x1
lea eax,[ebp-0x9]
push eax
lea eax,[ebp-0x1]
push eax
lea ecx,[ebp-0x28]
mov edx,[ebp-0x10]
mov eax,[ebp-0x14]
mov si,0xffbc
call dword 0x2dec
cmp byte [ebp-0x1],0x0
jz 0x3db50
push dword [ebp-0x5]
push dword [ebp-0x9]
lea eax,[ebp-0x28]
push eax
call dword 0x6220
test eax,eax
jz 0x3db50
mov edx,[ebp-0x14]
mov eax,[0x46dc4c]
call dword 0x3d16c
inc edi
dec ebx
jnz dword 0x3daa5
mov eax,[0x46dc4c]
cmp dword [eax+0x8],byte +0x0
jng 0x3db70
mov eax,[0x46dc4c]
call dword 0x3d224
mov [ebp-0x18],eax
cmp dword [ebp-0x18],byte +0x0
jz 0x3db89
push ebp
mov eax,[ebp-0x18]
call dword 0x3d860
pop ecx
test al,al
jnz 0x3db89
xor eax,eax
mov [ebp-0x18],eax
mov eax,[ebp-0x18]
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret
nop
push ebx
push esi
mov ebx,edx
mov esi,eax
test esi,esi
jz 0x3dbea
cmp dword [dword 0x46dc48],byte +0x0
jnz 0x3dbb8
mov dl,0x1
mov eax,[0x41294c]
call dword 0x2bc0
mov [0x46dc48],eax
mov edx,esi
mov eax,[0x46dc48]
call dword 0x13ed8
test bl,bl
jz 0x3dbd9
inc eax
jnz 0x3dbea
mov edx,esi
mov eax,[0x46dc48]
call dword 0x13d24
jmp short 0x3dbea
cmp eax,byte -0x1
jz 0x3dbea
mov edx,eax
mov eax,[0x46dc48]
call dword 0x13d70
pop esi
pop ebx
ret
lea eax,[eax+0x0]
push ebp
mov ebp,esp
add esp,byte -0x18
push ebx
mov [ebp-0x4],ecx
xor ecx,ecx
test eax,eax
jz 0x3dc3c
mov ecx,[ebp+0x8]
mov ebx,[ecx]
mov [ebp-0x18],ebx
mov ebx,[ecx+0x4]
mov [ebp-0x14],ebx
mov ecx,[ebp+0xc]
mov [ebp-0xc],ecx
mov ecx,[ebp-0x4]
mov [ebp-0x10],ecx
cmp byte [dword 0x46dc40],0x2
setz cl
mov [ebp-0x8],cl
lea ecx,[ebp-0x18]
push ecx
and edx,byte +0x7f
push edx
push dword 0xb02f
push eax
call dword 0x6278
mov ecx,eax
mov eax,ecx
pop ebx
mov esp,ebp
pop ebp
ret 0x8
lea eax,[eax+0x0]
push ebx
push esi
push ecx
mov esi,eax
xor ebx,ebx
test esi,esi
jz 0x3dca2
push esp
push esi
call dword 0x6128
test eax,eax
jz 0x3dca2
call dword 0x5af0
cmp eax,[esp]
jnz 0x3dca2
mov eax,[0x46dc14]
call dword 0x3eac
push eax
call dword 0x5b90
cmp ax,[dword 0x46dc10]
jnz 0x3dc96
movzx eax,word [dword 0x46dc10]
push eax
push esi
call dword 0x6098
test eax,eax
setnz bl
jmp short 0x3dca2
mov eax,esi
call dword 0x3ccb4
test eax,eax
setnz bl
mov eax,ebx
pop edx
pop esi
pop ebx
ret
push ebx
push dword [eax+0x4]
push dword [eax]
call dword 0x6390
mov ebx,eax
test ebx,ebx
jz 0x3dcd0
mov eax,ebx
call dword 0x3dc48
test al,al
jnz 0x3dcd0
push ebx
call dword 0x6090
mov ebx,eax
test ebx,ebx
jnz 0x3dcb9
mov eax,ebx
pop ebx
ret
push ebp
mov ebp,esp
push ebx
push esi
mov esi,edx
mov ebx,eax
test cl,cl
jnz 0x3dd00
mov eax,ebx
call dword 0x3dca8
mov [esi],eax
push byte +0x0
push ebx
mov eax,[esi]
mov ecx,[dword 0x46dc24]
mov dl,0x5
call dword 0x3dbf0
mov ebx,eax
jmp short 0x3dd19
mov eax,ebx
mov edx,[ebp+0x8]
call dword 0x3da40
mov ebx,eax
test ebx,ebx
jz 0x3dd19
mov eax,ebx
call dword 0x4831c
mov [esi],eax
mov eax,ebx
pop esi
pop ebx
pop ebp
ret 0x4
lea eax,[eax+0x0]
push ebx
push esi
mov ebx,eax
xor eax,eax
mov edx,[dword 0x46dc24]
mov esi,[edx+0x8]
test esi,esi
jz 0x3dd5c
push esi
mov eax,[0x46dc24]
add eax,byte +0x10
push eax
mov eax,[0x46dc24]
mov eax,[eax+0xc]
mov ecx,[dword 0x46dc24]
mov edx,ebx
call dword 0x3dbf0
cmp eax,byte +0x1
sbb eax,eax
inc eax
pop esi
pop ebx
ret
nop
push ebp
mov ebp,esp
push ecx
push ebx
push esi
push edi
xor eax,eax
mov [ebp-0x4],eax
mov eax,[0x46dc24]
mov esi,[eax+0x8]
test esi,esi
jz 0x3ddf7
cmp byte [esi+0x1db],0x0
jz 0x3ddf7
cmp dword [esi+0x1ac],byte +0x0
jz 0x3ddf7
mov eax,esi
call dword 0x46cd0
test eax,eax
jz 0x3ddf7
mov eax,esi
call dword 0x46cd0
dec eax
jnz 0x3ddb7
xor edx,edx
mov eax,[esi+0x1ac]
call dword 0x13e7c
mov edx,[dword 0x46dc24]
cmp eax,[edx+0x40]
jz 0x3ddf7
mov eax,[0x46dc24]
add eax,byte +0x10
xor edx,edx
call dword 0x3e800
mov ebx,eax
jmp short 0x3ddef
mov edx,ebx
mov eax,[esi+0x1ac]
call dword 0x13ed8
mov edi,eax
cmp edi,byte -0x1
jz 0x3ddec
mov edx,edi
mov eax,esi
call dword 0x46ce4
mov [ebp-0x4],eax
jmp short 0x3ddf7
mov ebx,[ebx+0x30]
test ebx,ebx
jz 0x3ddf7
cmp esi,ebx
jnz 0x3ddca
mov eax,[ebp-0x4]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
ret
push ebx
push esi
push edi
add esp,byte -0x10
mov ebx,eax
cmp byte [dword 0x46dc40],0x0
jnz 0x3de3e
mov eax,[0x46dc30]
sub eax,[ebx]
cdq
xor eax,edx
sub eax,edx
cmp eax,[dword 0x46dc3c]
jnl 0x3de3e
mov eax,[0x46dc34]
sub eax,[ebx+0x4]
cdq
xor eax,edx
sub eax,edx
cmp eax,[dword 0x46dc3c]
jl dword 0x3e0e1
mov eax,[0x46dc20]
push eax
mov eax,[0x46dc20]
movzx ecx,byte [eax+0x8f]
lea edx,[esp+0x4]
mov eax,ebx
call dword 0x3dcd4
mov esi,eax
cmp byte [dword 0x46dc40],0x0
jnz 0x3de8c
cmp dword [dword 0x46dc44],byte +0x0
jz 0x3de8c
mov eax,[0x46dc34]
push eax
call dword 0x5ff0
mov edx,eax
mov ecx,[dword 0x46dc30]
mov eax,[0x46dc44]
call dword 0x4a134
mov eax,[0x46dc20]
cmp byte [eax+0x8f],0x0
jnz 0x3dea8
mov byte [dword 0x46dc40],0x1
mov byte [esp+0x4],0x0
jmp short 0x3debb
cmp byte [dword 0x46dc40],0x0
setnz [esp+0x4]
mov byte [dword 0x46dc40],0x2
mov eax,[0x46dc24]
cmp esi,[eax+0x8]
jz 0x3df10
mov al,0x1
call dword 0x3dd24
cmp dword [dword 0x46dc24],byte +0x0
jz dword 0x3e0e1
mov eax,[0x46dc24]
mov [eax+0x8],esi
mov eax,[0x46dc24]
mov edx,[esp]
mov [eax+0xc],edx
mov eax,[0x46dc24]
mov edx,[ebx]
mov [eax+0x10],edx
mov edx,[ebx+0x4]
mov [eax+0x14],edx
xor eax,eax
call dword 0x3dd24
cmp dword [dword 0x46dc24],byte +0x0
jz dword 0x3e0e1
mov eax,[0x46dc24]
mov edx,[ebx]
mov [eax+0x10],edx
mov edx,[ebx+0x4]
mov [eax+0x14],edx
mov eax,[0x46dc24]
cmp dword [eax+0x8],byte +0x0
jz 0x3df51
lea ecx,[esp+0x8]
mov edx,ebx
mov eax,[0x46dc24]
mov eax,[eax+0x8]
call dword 0x3fdc8
mov eax,[0x46dc24]
mov edx,[esp+0x8]
mov [eax+0x18],edx
mov edx,[esp+0xc]
mov [eax+0x1c],edx
mov eax,[ebx+0x4]
push eax
mov al,0x2
call dword 0x3dd24
mov edx,eax
mov ecx,[ebx]
mov eax,[0x46dc24]
mov edi,[eax]
call dword [edi+0x4]
mov edi,eax
cmp dword [dword 0x46dc44],byte +0x0
jz 0x3dfea
test esi,esi
jz 0x3df8a
test byte [esi+0x51],0x20
jnz 0x3df8a
mov eax,[0x46dc24]
cmp byte [eax+0x4],0x0
jz 0x3dfcb
mov edx,edi
mov eax,[0x46dc44]
call dword 0x4a110
mov eax,[0x46dc44]
cmp byte [eax+0x6a],0x0
jnz 0x3dfba
mov eax,[ebx+0x4]
push eax
call dword 0x5ff0
mov edx,eax
mov ecx,[ebx]
mov eax,[0x46dc44]
call dword 0x4a134
jmp short 0x3dfea
mov ecx,[ebx+0x4]
mov edx,[ebx]
mov eax,[0x46dc44]
call dword 0x4a230
jmp short 0x3dfea
mov eax,[0x46dc44]
call dword 0x4a2a4
movsx edx,di
mov eax,[0x468e8c]
mov eax,[eax]
call dword 0x5c4b8
push eax
call dword 0x62a8
movsx edx,di
mov eax,[0x468e8c]
mov eax,[eax]
call dword 0x5c4b8
push eax
call dword 0x62a8
cmp byte [dword 0x46dc40],0x2
jnz dword 0x3e0e1
test esi,esi
jnz 0x3e02a
mov edx,[ebx+0x4]
push edx
mov ecx,[ebx]
mov eax,[0x46dc24]
mov edx,[eax+0x40]
xchg eax,edx
mov si,0xffe7
call dword 0x2dec
jmp short 0x3e086
call dword 0x3dd60
mov edi,eax
mov eax,[0x46dc24]
mov [eax+0x60],edi
test edi,edi
jnz 0x3e061
mov eax,[0x46dc24]
lea edx,[eax+0x18]
mov eax,[0x46dc24]
mov eax,[eax+0x8]
mov si,0xffd8
call dword 0x2dec
mov edx,[dword 0x46dc24]
mov [edx+0x5c],al
jmp short 0x3e086
lea ecx,[esp+0x8]
mov edx,ebx
mov eax,edi
call dword 0x3fdc8
lea edx,[esp+0x8]
mov eax,edi
mov si,0xffd8
call dword 0x2dec
mov edx,[dword 0x46dc24]
mov [edx+0x5c],al
cmp dword [dword 0x46dc24],byte +0x0
jz 0x3e0e1
mov ebx,[dword 0x46dc24]
lea edx,[ebx+0x64]
lea eax,[ebx+0x4c]
mov ecx,0x10
call dword 0x76f0
test al,al
jnz 0x3e0e1
cmp byte [esp+0x4],0x0
jz 0x3e0c8
mov eax,[0x46dc24]
mov edx,[eax]
call dword [edx+0x3c]
test al,al
jz 0x3e0c8
mov eax,[0x46dc24]
mov edx,[eax]
call dword [edx+0x34]
mov eax,[0x46dc24]
mov edx,[eax]
call dword [edx+0x30]
mov eax,[0x46dc24]
lea esi,[eax+0x4c]
lea edi,[eax+0x64]
movsd
movsd
movsd
movsd
add esp,byte +0x10
pop edi
pop esi
pop ebx
ret
push ebx
push esi
push edi
add esp,byte -0x8
mov edi,ecx
mov ebx,edx
mov esi,eax
mov [dword 0x46dc24],esi
mov eax,[0x46dc24]
xor edx,edx
mov [eax+0x8],edx
push dword 0x46dc30
call dword 0x5fd8
mov eax,[0x46dc24]
mov edx,[dword 0x46dc30]
mov [eax+0x10],edx
mov edx,[dword 0x46dc34]
mov [eax+0x14],edx
call dword 0x5fd0
mov [0x46dc38],eax
mov eax,[0x46dc24]
call dword 0x3d2c8
mov [0x46dc2c],eax
mov [dword 0x46dc3c],edi
mov eax,esi
mov edx,[dword 0x43b6dc]
call dword 0x2d7c
test al,al
jz dword 0x3e1e5
mov edx,esi
lea eax,[edx+0x4c]
mov edi,[eax+0x8]
mov ecx,[eax]
sub edi,ecx
test edi,edi
jng 0x3e189
mov edi,[edx+0x10]
sub edi,ecx
mov [esp],edi
fild dword [esp]
mov ecx,[eax+0x8]
sub ecx,[eax]
mov [esp+0x4],ecx
fild dword [esp+0x4]
fdivp st1
fstp qword [edx+0x28]
wait jmp short 0x3e191
xor ecx,ecx
mov [edx+0x28],ecx
mov [edx+0x2c],ecx
mov ecx,[eax+0xc]
mov edx,[eax+0x4]
sub ecx,edx
test ecx,ecx
jng 0x3e1c0
mov ecx,esi
mov edi,[ecx+0x14]
sub edi,edx
mov [esp],edi
fild dword [esp]
mov edx,[eax+0xc]
sub edx,[eax+0x4]
mov [esp+0x4],edx
fild dword [esp+0x4]
fdivp st1
fstp qword [ecx+0x30]
wait jmp short 0x3e1c8
xor eax,eax
mov [esi+0x30],eax
mov [esi+0x34],eax
test bl,bl
jz 0x3e1dc
mov byte [dword 0x46dc40],0x2
mov eax,esi
mov edx,[eax]
call dword [edx+0x30]
jmp short 0x3e1f9
mov byte [dword 0x46dc40],0x0
jmp short 0x3e1f9
test bl,bl
jz 0x3e1f2
mov byte [dword 0x46dc40],0x1
jmp short 0x3e1f9
mov byte [dword 0x46dc40],0x0
mov eax,[0x46dc24]
mov edx,[eax]
call dword [edx+0x8]
mov [0x46dc44],eax
cmp dword [dword 0x46dc44],byte +0x0
jz 0x3e22e
mov eax,[0x46dc34]
push eax
call dword 0x5ff0
mov edx,eax
mov ecx,[dword 0x46dc30]
mov eax,[0x46dc44]
call dword 0x4a134
mov dl,0x1
mov eax,[0x43e0a0]
call dword 0x2bc0
mov [0x46dc4c],eax
cmp byte [dword 0x46dc40],0x0
jz 0x3e252
mov eax,0x46dc30
call dword 0x3de00
pop ecx
pop edx
pop edi
pop esi
pop ebx
ret
push ebp
mov ebp,esp
add esp,byte -0x20
push ebx
push esi
push edi
mov [ebp-0x4],ecx
mov ebx,edx
mov edi,eax
mov [dword 0x46dc20],edi
xor edx,edx
push ebp
push dword 0x43f3fd
push dword [fs:edx]
mov [fs:edx],esp
xor eax,eax
mov [ebp-0x8],eax
mov byte [dword 0x46dc28],0x0
cmp byte [edi+0x8f],0x0
jnz 0x3e2dc
lea edx,[ebp-0x8]
mov eax,edi
mov si,0xffdc
call dword 0x2dec
cmp dword [dword 0x46dc20],byte +0x0
jnz 0x3e2b5
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
jmp dword 0x3e413
cmp dword [ebp-0x8],byte +0x0
jnz dword 0x3e3e6
mov ecx,edi
mov dl,0x1
mov eax,[0x43b64c]
call dword 0x3d4ec
mov [ebp-0x8],eax
mov byte [dword 0x46dc28],0x1
jmp dword 0x3e3e6
lea edx,[ebp-0x8]
mov eax,edi
mov si,0xffe3
call dword 0x2dec
cmp dword [dword 0x46dc20],byte +0x0
jnz 0x3e300
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
jmp dword 0x3e413
cmp dword [ebp-0x8],byte +0x0
jnz 0x3e31e
mov ecx,edi
mov dl,0x1
mov eax,[0x43b7a4]
call dword 0x3d5fc
mov [ebp-0x8],eax
mov byte [dword 0x46dc28],0x1
mov eax,[ebp-0x8]
mov esi,[eax+0x40]
mov eax,esi
mov edx,[dword 0x43d11c]
call dword 0x2d7c
test al,al
jz 0x3e34e
mov eax,[ebp-0x8]
add eax,byte +0x4c
push eax
mov eax,esi
call dword 0x4831c
push eax
call dword 0x6110
jmp dword 0x3e3d9
mov eax,[ebp-0x8]
mov esi,[eax+0x40]
cmp dword [esi+0x30],byte +0x0
jnz 0x3e385
mov eax,esi
mov edx,[dword 0x43d11c]
call dword 0x2d7c
test al,al
jnz 0x3e385
lea eax,[ebp-0x10]
push eax
call dword 0x5fd8
mov eax,[ebp-0x8]
mov edx,[ebp-0x10]
mov [eax+0x4c],edx
mov edx,[ebp-0xc]
mov [eax+0x50],edx
jmp short 0x3e3ad
lea ecx,[ebp-0x20]
xor edx,edx
xor eax,eax
call dword 0x12a04
lea edx,[ebp-0x20]
lea ecx,[ebp-0x18]
mov eax,esi
call dword 0x3fd18
mov eax,[ebp-0x8]
mov edx,[ebp-0x18]
mov [eax+0x4c],edx
mov edx,[ebp-0x14]
mov [eax+0x50],edx
mov esi,[ebp-0x8]
mov edx,[esi+0x50]
mov eax,[ebp-0x8]
mov edi,[eax+0x40]
add edx,[edi+0x4c]
mov eax,[esi+0x4c]
add eax,[edi+0x48]
lea ecx,[ebp-0x18]
call dword 0x12a04
mov eax,[ebp-0x8]
mov edx,[ebp-0x18]
mov [eax+0x54],edx
mov edx,[ebp-0x14]
mov [eax+0x58],edx
mov eax,[ebp-0x8]
lea esi,[eax+0x4c]
lea edi,[eax+0x64]
movsd
movsd
movsd
movsd
mov ecx,[ebp-0x4]
mov edx,ebx
mov eax,[ebp-0x8]
call dword 0x3e0e8
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
jmp short 0x3e413
jmp dword 0x30d0
xor eax,eax
mov [0x46dc20],eax
call dword 0x348c
call dword 0x34e0
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret
mov eax,eax
push ebp
mov ebp,esp
push ebx
push esi
mov eax,[0x46dc24]
cmp dword [eax+0x8],byte +0x0
setnz bl
mov eax,[ebp+0x8]
cmp byte [eax-0x1],0x0
jz 0x3e488
cmp byte [dword 0x46dc40],0x2
jnz 0x3e488
mov eax,[0x46dc20]
mov edx,[eax]
call dword [edx+0x54]
test al,al
jnz 0x3e45b
mov eax,[0x46dc20]
cmp dword [eax+0x94],byte +0x0
jnz 0x3e45f
mov bl,0x1
jmp short 0x3e488
mov eax,[0x46dc20]
mov eax,[eax+0x94]
test eax,eax
jz 0x3e488
mov edx,[dword 0x46dc24]
mov edx,[edx+0x8]
mov ecx,[dword 0x46dc20]
mov si,0xffbd
call dword 0x2dec
mov ebx,eax
mov eax,ebx
pop esi
pop ebx
pop ebp
ret
mov eax,eax
push ebp
mov ebp,esp
add esp,byte -0x14
push ebx
mov [ebp-0x1],al
xor ebx,ebx
mov byte [ebp-0x9],0x0
cmp dword [dword 0x46dc24],byte +0x0
jz dword 0x3e7ac
mov eax,[0x46dc24]
cmp byte [eax+0x5],0x0
jnz dword 0x3e7ac
xor edx,edx
push ebp
push dword 0x43f7a5
push dword [fs:edx]
mov [fs:edx],esp
mov eax,[0x46dc24]
mov [0x46dc50],eax
xor edx,edx
push ebp
push dword 0x43f733
push dword [fs:edx]
mov [fs:edx],esp
mov eax,[0x46dc24]
mov byte [eax+0x5],0x1
mov eax,[0x46dc24]
movzx edx,byte [ebp-0x1]
mov [eax+0x20],dl
mov edx,[dword 0x46dc2c]
mov eax,[0x46dc24]
call dword 0x3d310
cmp byte [dword 0x46dc40],0x2
jnz 0x3e533
mov eax,[0x46dc24]
mov edx,[dword 0x43b6dc]
call dword 0x2da0
mov ebx,eax
mov eax,ebx
mov edx,[eax]
call dword [edx+0x34]
cmp dword [ebx+0x8],byte +0x0
setz al
mov [ebx+0x74],al
mov eax,[0x46dc24]
cmp dword [eax+0x8],byte +0x0
jz 0x3e568
mov eax,[0x46dc24]
mov eax,[eax+0x8]
mov edx,[dword 0x43c888]
call dword 0x2d7c
test al,al
jz 0x3e568
mov eax,[0x46dc24]
mov edx,[eax+0x18]
mov [ebp-0x11],edx
mov edx,[eax+0x1c]
mov [ebp-0xd],edx
jmp short 0x3e579
mov eax,[0x46dc24]
mov edx,[eax+0x10]
mov [ebp-0x11],edx
mov edx,[eax+0x14]
mov [ebp-0xd],edx
push ebp
call dword 0x3e41c
pop ecx
test al,al
jz 0x3e5ad
cmp byte [dword 0x46dc40],0x2
jnz 0x3e593
cmp byte [ebx+0x74],0x0
jnz 0x3e5a7
cmp byte [dword 0x46dc40],0x0
jz 0x3e5ad
mov al,0x1
call dword 0x3dd24
test al,al
jz 0x3e5ad
cmp byte [ebp-0x1],0x0
jnz 0x3e5b1
xor eax,eax
jmp short 0x3e5b3
mov al,0x1
mov [ebp-0x9],al
cmp byte [dword 0x46dc40],0x2
jnz 0x3e604
cmp byte [ebp-0x9],0x0
jz 0x3e624
cmp byte [ebx+0x74],0x0
jz 0x3e624
mov eax,[ebx+0x40]
mov dl,0x1
call dword 0x53e38
test eax,eax
jz 0x3e5eb
mov edx,[eax+0x268]
cmp edx,[ebx+0x40]
jnz 0x3e5eb
xor edx,edx
call dword 0x58ca8
mov eax,[0x46dc24]
push eax
xor ecx,ecx
mov edx,0xb03a
mov eax,[0x46dc20]
call dword 0x41588
jmp short 0x3e624
cmp dword [dword 0x46dc44],byte +0x0
jz 0x3e619
mov eax,[0x46dc44]
call dword 0x4a2a4
jmp short 0x3e624
mov eax,[0x46dc38]
push eax
call dword 0x62a8
xor eax,eax
mov [0x46dc20],eax
xor eax,eax
mov [0x46dc24],eax
cmp dword [dword 0x46dc50],byte +0x0
jz dword 0x3e6de
mov eax,[0x46dc50]
cmp dword [eax+0x8],byte +0x0
jz dword 0x3e6de
mov al,0x3
cmp byte [ebp-0x9],0x0
jnz 0x3e678
mov al,0x4
mov edx,[dword 0x46dc50]
xor ecx,ecx
mov [edx+0x10],ecx
mov edx,[dword 0x46dc50]
xor ecx,ecx
mov [edx+0x14],ecx
xor edx,edx
mov [ebp-0x11],edx
xor edx,edx
mov [ebp-0xd],edx
mov edx,[dword 0x46dc50]
mov [ebp-0x8],edx
xor edx,edx
push ebp
push dword 0x43f6d7
push dword [fs:edx]
mov [fs:edx],esp
mov edx,[dword 0x46dc50]
mov edx,[edx+0x8]
push edx
mov edx,[dword 0x46dc50]
add edx,byte +0x10
push edx
mov edx,[dword 0x46dc50]
mov edx,[edx+0xc]
mov ecx,[dword 0x46dc50]
xchg eax,edx
call dword 0x3dbf0
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x43f6de
cmp dword [dword 0x46dc50],byte +0x0
jnz 0x3e6d6
mov eax,[ebp-0x8]
mov [0x46dc50],eax
ret
jmp dword 0x3384
jmp short 0x3e6c5
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x43f73a
mov eax,[0x46dc4c]
call dword 0x2bf0
xor eax,eax
mov [0x46dc4c],eax
cmp dword [dword 0x46dc50],byte +0x0
jz 0x3e72b
mov eax,[0x46dc50]
mov byte [eax+0x5],0x0
mov eax,[ebp-0xd]
push eax
movzx eax,byte [ebp-0x9]
push eax
mov eax,[0x46dc50]
mov edx,[eax+0x8]
mov ecx,[ebp-0x11]
mov eax,[0x46dc50]
mov ebx,[eax]
call dword [ebx]
xor eax,eax
mov [0x46dc24],eax
ret
jmp dword 0x3384
jmp short 0x3e6eb
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x43f7ac
xor eax,eax
mov [0x46dc20],eax
cmp dword [dword 0x46dc50],byte +0x0
jz 0x3e79d
mov eax,[0x46dc50]
mov edx,[dword 0x43b64c]
call dword 0x2d7c
test al,al
jnz 0x3e793
mov eax,[0x46dc50]
mov edx,[dword 0x46778c]
call dword 0x2d7c
test al,al
jnz 0x3e793
mov eax,[0x46dc50]
mov edx,[dword 0x43b7a4]
call dword 0x2d7c
test al,al
jz 0x3e79d
mov eax,[0x46dc50]
call dword 0x2bf0
mov byte [dword 0x46dc40],0x0
ret
jmp dword 0x3384
jmp short 0x3e747
pop ebx
mov esp,ebp
pop ebp
ret
lea eax,[eax+0x0]
cmp dword [dword 0x46dc24],byte +0x0
jz 0x3e7c4
xor eax,eax
call dword 0x3e490
xor eax,eax
mov [0x46dc20],eax
ret
push ebx
push esi
push dword [eax+0x4]
push dword [eax]
call dword 0x6390
mov ebx,eax
xor esi,esi
test ebx,ebx
jz 0x3e7f9
mov eax,ebx
call dword 0x3cce8
mov esi,eax
test esi,esi
jnz 0x3e7f9
push ebx
call dword 0x6090
mov ebx,eax
test ebx,ebx
jnz 0x3e7e0
mov eax,esi
pop esi
pop ebx
ret
mov eax,eax
push ebx
push esi
push edi
push ebp
add esp,byte -0x8
mov ebx,edx
mov edi,eax
xor esi,esi
mov eax,edi
call dword 0x3e7cc
mov ebp,eax
test ebp,ebp
jz 0x3e840
mov esi,ebp
push byte +0x0
push byte +0x0
lea ecx,[esp+0x8]
mov edx,edi
mov eax,ebp
call dword 0x3fdc8
lea edx,[esp+0x8]
mov ecx,ebx
mov eax,ebp
call dword 0x45158
test eax,eax
jz 0x3e840
mov esi,eax
mov eax,esi
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
ret
lea eax,[eax+0x0]
push ebx
push esi
mov esi,edx
mov ebx,eax
cmp dword [ebx],byte +0x0
jnz 0x3e865
mov dl,0x1
mov eax,[0x41294c]
call dword 0x2bc0
mov [ebx],eax
mov eax,[ebx]
mov edx,esi
call dword 0x13d24
pop esi
pop ebx
ret
lea eax,[eax+0x0]
push ebx
mov ebx,eax
mov eax,[ebx]
call dword 0x14018
mov eax,[ebx]
cmp dword [eax+0x8],byte +0x0
jnz 0x3e891
mov eax,[ebx]
call dword 0x2bf0
xor eax,eax
mov [ebx],eax
pop ebx
ret
nop
push ebx
push esi
push edi
add esp,byte -0x8
mov edi,ecx
mov esi,edx
mov ebx,eax
push esp
push ebx
call dword 0x5d70
push byte +0x0
mov eax,[esp+0x8]
sub eax,edi
push eax
mov eax,[esp+0x8]
sub eax,esi
push eax
push ebx
call dword 0x5e38
pop ecx
pop edx
pop edi
pop esi
pop ebx
ret
nop
push ebp
mov ebp,esp
add esp,byte -0x10
mov eax,[0x46dc54]
call dword 0x14244
mov [ebp-0x8],eax
xor eax,eax
push ebp
push dword 0x43f974
push dword [fs:eax]
mov [fs:eax],esp
mov eax,[ebp-0x8]
mov eax,[eax+0x8]
dec eax
test eax,eax
jl 0x3e95c
inc eax
mov [ebp-0xc],eax
mov dword [ebp-0x4],0x0
mov edx,[ebp-0x4]
mov eax,[ebp-0x8]
call dword 0x13e7c
mov [ebp-0x10],eax
mov eax,[ebp-0x10]
call dword 0x209c8
test al,al
jz 0x3e954
xor eax,eax
push ebp
push dword 0x43f94d
push dword [fs:eax]
mov [fs:eax],esp
mov eax,[ebp-0x10]
call dword 0x3eb00
call dword 0x3510
call dword 0x3510
jmp short 0x3e97b
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x43f954
mov eax,[ebp-0x10]
call dword 0x20a24
ret
jmp dword 0x3384
jmp short 0x3e944
inc dword [ebp-0x4]
dec dword [ebp-0xc]
jnz 0x3e8fb
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x43f97b
mov eax,[0x46dc54]
call dword 0x142a8
ret
jmp dword 0x3384
jmp short 0x3e969
mov esp,ebp
pop ebp
ret
nop
push ebp
mov ebp,esp
add esp,byte -0xc
mov eax,[0x46dc54]
call dword 0x14244
mov [ebp-0x8],eax
xor eax,eax
push ebp
push dword 0x43fa1e
push dword [fs:eax]
mov [fs:eax],esp
mov eax,[ebp-0x8]
mov eax,[eax+0x8]
dec eax
cmp eax,byte +0x0
jl 0x3ea06
mov [ebp-0x4],eax
mov edx,[ebp-0x4]
mov eax,[ebp-0x8]
call dword 0x13e7c
mov [ebp-0xc],eax
mov eax,[ebp-0xc]
call dword 0x209c8
test al,al
jz 0x3e9fd
xor eax,eax
push ebp
push dword 0x43f9f6
push dword [fs:eax]
mov [fs:eax],esp
mov eax,[ebp-0xc]
call dword 0x3eb00
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x43f9fd
mov eax,[ebp-0xc]
call dword 0x20a24
ret
jmp dword 0x3384
jmp short 0x3e9ed
dec dword [ebp-0x4]
cmp dword [ebp-0x4],byte -0x1
jnz 0x3e9b0
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x43fa25
mov eax,[0x46dc54]
call dword 0x142a8
ret
jmp dword 0x3384
jmp short 0x3ea13
mov esp,ebp
pop ebp
ret
lea eax,[eax+0x0]
push ebx
push esi
call dword 0x2fbc
mov ebx,edx
mov esi,eax
mov eax,esi
call dword 0x3eb00
mov edx,ebx
and dl,0xfc
mov eax,esi
call dword 0x20668
test bl,bl
jng 0x3ea55
mov eax,esi
call dword 0x2f64
pop esi
pop ebx
ret
push ebp
mov ebp,esp
push ecx
push ebx
mov [ebp-0x4],eax
mov eax,[ebp-0x4]
cmp dword [eax+0x58],byte +0x0
jnz 0x3ea76
mov eax,[ebp-0x4]
call dword 0x20bb4
jmp dword 0x3eafa
mov eax,[ebp-0x4]
cmp dword [eax+0x5c],byte +0x0
jnz 0x3eae4
mov eax,[0x46dc54]
call dword 0x14244
mov ebx,eax
xor eax,eax
push ebp
push dword 0x43fadd
push dword [fs:eax]
mov [fs:eax],esp
cmp dword [ebx+0x8],byte +0x4
jl 0x3eaa4
call dword 0x3e8c4
mov eax,[ebp-0x4]
lea edx,[eax+0x60]
mov eax,[ebp-0x4]
mov eax,[eax+0x58]
mov ecx,[eax]
call dword [ecx+0x48]
mov edx,[ebp-0x4]
mov [edx+0x5c],eax
mov edx,[ebp-0x4]
mov eax,ebx
call dword 0x13d24
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x43fae4
mov eax,[0x46dc54]
call dword 0x142a8
ret
jmp dword 0x3384
jmp short 0x3ead2
mov eax,[ebp-0x4]
mov edx,[eax+0x5c]
mov eax,[ebp-0x4]
call dword 0x20bb8
mov eax,[ebp-0x4]
call dword 0x3eb4c
pop ebx
pop ecx
pop ebp
ret
mov eax,eax
push ebx
mov ebx,eax
cmp dword [ebx+0x5c],byte +0x0
jz 0x3eb30
xor edx,edx
mov eax,ebx
call dword 0x20bb8
mov edx,ebx
mov eax,[0x46dc54]
call dword 0x14258
mov eax,[ebx+0x5c]
push eax
mov eax,[ebx+0x60]
push eax
call dword 0x6250
xor eax,eax
mov [ebx+0x5c],eax
pop ebx
ret
mov eax,eax
push ebx
push esi
mov esi,edx
mov ebx,eax
cmp esi,[ebx+0x58]
jz 0x3eb49
mov eax,ebx
call dword 0x3eb00
mov [ebx+0x58],esi
pop esi
pop ebx
ret
push ebx
push esi
mov ebx,eax
mov esi,[ebx+0x58]
test esi,esi
jz 0x3eb72
mov eax,esi
call dword 0x409a4
test al,al
jz 0x3eb6b
or dword [ebx+0x54],0x80
jmp short 0x3eb72
and dword [ebx+0x54],0xffffff7f
pop esi
pop ebx
ret
lea eax,[eax+0x0]
push ebx
push esi
push edi
test dl,dl
jz 0x3eb87
add esp,byte -0x10
call dword 0x2f14
mov esi,ecx
mov ebx,edx
mov edi,eax
xor edx,edx
mov eax,edi
call dword 0x2bc0
mov [edi+0x4],esi
mov eax,edi
test bl,bl
jz 0x3ebae
call dword 0x2f6c
pop dword [dword fs:0x0]
add esp,byte +0xc
mov eax,edi
pop edi
pop esi
pop ebx
ret
push ebx
push esi
mov ebx,edx
mov esi,eax
mov eax,ebx
mov edx,[dword 0x43bcd0]
call dword 0x2d7c
test al,al
jz 0x3ebed
mov eax,ebx
mov edx,[esi+0x10]
mov [eax+0x10],edx
mov edx,[esi+0x8]
mov [eax+0x8],edx
mov edx,[esi+0x14]
mov [eax+0x14],edx
mov edx,[esi+0xc]
mov [eax+0xc],edx
mov edx,[eax]
call dword [edx+0xc]
pop esi
pop ebx
ret
mov edx,ebx
mov eax,esi
call dword 0x14560
pop esi
pop ebx
ret
lea eax,[eax+0x0]
push esi
mov esi,eax
sub edx,byte +0x1
jc 0x3ec0e
jz 0x3ec2b
dec edx
jz 0x3ec48
dec edx
jz 0x3ec67
jmp short 0x3ec84
cmp ecx,[esi+0x8]
jz 0x3ec84
mov [esi+0x8],ecx
test ecx,ecx
jna 0x3ec22
cmp ecx,[esi+0x10]
jnc 0x3ec22
mov [esi+0x10],ecx
mov eax,esi
mov edx,[eax]
call dword [edx+0xc]
pop esi
ret
cmp ecx,[esi+0xc]
jz 0x3ec84
mov [esi+0xc],ecx
test ecx,ecx
jna 0x3ec3f
cmp ecx,[esi+0x14]
jnc 0x3ec3f
mov [esi+0x14],ecx
mov eax,esi
mov edx,[eax]
call dword [edx+0xc]
pop esi
ret
cmp ecx,[esi+0x10]
jz 0x3ec84
mov [esi+0x10],ecx
mov eax,[esi+0x8]
test eax,eax
jna 0x3ec5e
cmp eax,ecx
jnc 0x3ec5e
mov [esi+0x8],ecx
mov eax,esi
mov edx,[eax]
call dword [edx+0xc]
pop esi
ret
cmp ecx,[esi+0x14]
jz 0x3ec84
mov [esi+0x14],ecx
mov eax,[esi+0xc]
test eax,eax
jna 0x3ec7d
cmp eax,ecx
jnc 0x3ec7d
mov [esi+0xc],ecx
mov eax,esi
mov edx,[eax]
call dword [edx+0xc]
pop esi
ret
mov eax,eax
push ebx
cmp word [eax+0x1a],byte +0x0
jz 0x3ec9a
mov ebx,eax
mov edx,eax
mov eax,[ebx+0x1c]
call dword [ebx+0x18]
pop ebx
ret
push ebx
push esi
mov esi,edx
mov ebx,eax
mov eax,esi
mov edx,[dword 0x43c888]
call dword 0x2da0
mov [ebx+0x18],eax
pop esi
pop ebx
ret
lea eax,[eax+0x0]
push ebp
mov ebp,esp
add esp,byte -0x1c
push ebx
push esi
push edi
xor ecx,ecx
mov [ebp-0x8],ecx
mov [ebp-0x1c],ecx
mov edi,edx
mov ebx,eax
xor eax,eax
push ebp
push dword 0x43fd85
push dword [fs:eax]
mov [fs:eax],esp
mov byte [ebp-0x1],0x1
mov eax,[ebx+0x10]
mov edx,[dword 0x45160c]
call dword 0x2d7c
test al,al
jz 0x3ed67
mov edx,edi
mov eax,[ebx+0x10]
mov si,0xffee
call dword 0x2dec
test al,al
jz 0x3ed67
mov eax,[0x468d34]
mov eax,[eax]
cmp byte [eax+0x7c],0x0
jz 0x3ed67
mov eax,[ebx+0x10]
cmp word [eax+0x84],byte +0x0
jz 0x3ed67
cmp dword [edi],byte +0x0
jz 0x3ed67
lea eax,[ebp-0x8]
push eax
mov eax,[edi]
mov [ebp-0x18],eax
mov byte [ebp-0x14],0xb
lea edx,[ebp-0x1c]
mov eax,[ebx+0x10]
movzx eax,word [eax+0x84]
call dword 0x34960
mov eax,[ebp-0x1c]
mov [ebp-0x10],eax
mov byte [ebp-0xc],0xb
lea edx,[ebp-0x18]
mov ecx,0x1
mov eax,0x43fda0
call dword 0x8b24
mov edx,[ebp-0x8]
mov eax,edi
call dword 0x3a70
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x43fd8c
lea eax,[ebp-0x1c]
call dword 0x3a1c
lea eax,[ebp-0x8]
call dword 0x3a1c
ret
jmp dword 0x3384
jmp short 0x3ed74
movzx eax,byte [ebp-0x1]
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret
add bh,bh
db 0xff
db 0xff
inc dword [edi]
add [eax],al
add [dword 0x25282073],ah
jnc 0x3edd0
add [ebp-0x75],dl
in al,dx
push byte +0x0
push ebx
mov ebx,eax
xor eax,eax
push ebp
push dword 0x43fe0f
push dword [fs:eax]
mov [fs:eax],esp
mov eax,ebx
call dword 0x50e04
test al,al
jz 0x3edf1
lea edx,[ebp-0x4]
mov eax,[ebx+0x18]
call dword 0x40298
mov eax,[ebp-0x4]
push eax
mov eax,[ebx+0x10]
mov edx,[dword 0x45160c]
call dword 0x2da0
mov edx,[eax+0x64]
pop eax
call dword 0x3e44
jz 0x3edf5
xor eax,eax
jmp short 0x3edf7
mov al,0x1
mov ebx,eax
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x43fe16
lea eax,[ebp-0x4]
call dword 0x3a1c
ret
jmp dword 0x3384
jmp short 0x3ee06
mov eax,ebx
pop ebx
pop ecx
pop ebp
ret
push ebx
mov ebx,eax
mov eax,[ebx+0x10]
mov edx,[dword 0x43b8e4]
call dword 0x2d7c
pop ebx
ret
nop
push ebx
mov ebx,eax
mov eax,ebx
call dword 0x50e2c
test al,al
jz 0x3ee5b
mov eax,[ebx+0x18]
mov edx,[eax]
call dword [edx+0x50]
push eax
mov eax,[ebx+0x10]
mov edx,[dword 0x45160c]
call dword 0x2da0
pop edx
cmp dl,[eax+0x6a]
jz 0x3ee5f
xor eax,eax
pop ebx
ret
mov al,0x1
pop ebx
ret
nop
push ebx
mov ebx,eax
mov eax,[ebx+0x10]
mov edx,[dword 0x43b8e4]
call dword 0x2d7c
pop ebx
ret
nop
push ebx
mov ebx,eax
mov eax,ebx
call dword 0x50e7c
test al,al
jz 0x3eea7
mov eax,[ebx+0x10]
mov edx,[dword 0x45160c]
call dword 0x2da0
mov edx,[eax+0x7c]
mov eax,[ebx+0x18]
mov eax,[eax+0x84]
call dword 0x3e44
jz 0x3eeab
xor eax,eax
pop ebx
ret
mov al,0x1
pop ebx
ret
nop
push ebx
push esi
mov ebx,eax
mov esi,[ebx+0x10]
mov eax,esi
mov edx,[dword 0x43b8e4]
call dword 0x2d7c
test al,al
jz 0x3eee6
mov eax,esi
mov edx,[dword 0x43b8e4]
call dword 0x2da0
mov eax,[eax+0xa4]
mov edx,[ebx+0x18]
cmp eax,[edx+0x80]
jz 0x3eeeb
xor eax,eax
pop esi
pop ebx
ret
mov al,0x1
pop esi
pop ebx
ret
push ebx
mov ebx,eax
mov eax,ebx
call dword 0x50eb8
test al,al
jz 0x3ef1b
mov eax,[ebx+0x10]
mov edx,[dword 0x45160c]
call dword 0x2da0
movzx eax,byte [eax+0x86]
mov edx,[ebx+0x18]
cmp al,[edx+0x57]
jz 0x3ef1f
xor eax,eax
pop ebx
ret
mov al,0x1
pop ebx
ret
nop
push ebx
mov ebx,eax
mov eax,ebx
call dword 0x1aea8
test al,al
jz 0x3ef43
mov eax,[ebx+0x18]
mov eax,[eax+0x110]
mov edx,[ebx+0x10]
cmp eax,[edx+0x40]
jz 0x3ef47
xor eax,eax
pop ebx
ret
mov al,0x1
pop ebx
ret
nop
push ebx
push esi
mov esi,edx
mov ebx,eax
mov eax,ebx
mov edx,[eax]
call dword [edx+0x20]
test al,al
jz 0x3ef67
mov edx,esi
mov eax,[ebx+0x18]
call dword 0x402c8
pop esi
pop ebx
ret
mov eax,eax
ret
lea eax,[eax+0x0]
push ebx
push esi
mov ebx,edx
mov esi,eax
mov eax,esi
mov edx,[eax]
call dword [edx+0x28]
test al,al
jz 0x3ef8b
mov edx,ebx
mov eax,[esi+0x18]
mov ecx,[eax]
call dword [ecx+0x68]
pop esi
pop ebx
ret
mov eax,eax
ret
lea eax,[eax+0x0]
push ebx
push esi
mov esi,edx
mov ebx,eax
mov eax,ebx
mov edx,[eax]
call dword [edx+0x38]
test al,al
jz 0x3efb4
mov eax,[ebx+0x18]
add eax,0x84
mov edx,esi
call dword 0x3a70
pop esi
pop ebx
ret
nop
push ebx
push esi
mov ebx,edx
mov esi,eax
mov eax,esi
mov edx,[eax]
call dword [edx+0x44]
test al,al
jz 0x3efd3
mov edx,ebx
mov eax,[esi+0x18]
call dword 0x401b8
pop esi
pop ebx
ret
mov eax,eax
push ebp
mov ebp,esp
push ebx
mov ebx,eax
mov eax,ebx
mov edx,[eax]
call dword [edx+0x8]
test al,al
jz 0x3effe
mov eax,[ebx+0x18]
mov edx,[ebp+0x8]
mov [eax+0x110],edx
mov edx,[ebp+0xc]
mov [eax+0x114],edx
pop ebx
pop ebp
ret 0x8
nop
push ebx
push esi
push edi
mov ebx,eax
mov eax,[ebx+0x10]
mov edx,[dword 0x45160c]
call dword 0x2da0
mov edi,eax
mov eax,[edi+0x74]
mov esi,[ebx+0x18]
cmp eax,[esi+0x160]
jnz 0x3f05f
mov eax,[ebx+0x10]
mov edx,[dword 0x45160c]
call dword 0x2da0
mov edx,[edi+0x78]
mov eax,[esi+0x15c]
call dword 0x3e44
jnz 0x3f05f
mov eax,[ebx+0x10]
mov edx,[dword 0x45160c]
call dword 0x2da0
movzx eax,byte [edi+0x70]
cmp al,[esi+0x158]
jz 0x3f063
xor eax,eax
jmp short 0x3f065
mov al,0x1
pop edi
pop esi
pop ebx
ret
lea eax,[eax+0x0]
push ebx
push esi
mov esi,edx
mov ebx,eax
mov eax,ebx
mov edx,[eax]
call dword [edx+0x34]
test al,al
jz 0x3f087
mov edx,esi
mov eax,[ebx+0x18]
call dword 0x3fb84
pop esi
pop ebx
ret
mov eax,eax
push ebx
push esi
mov esi,edx
mov ebx,eax
mov eax,ebx
mov edx,[eax]
call dword [edx+0x34]
test al,al
jz 0x3f0a7
mov edx,esi
mov eax,[ebx+0x18]
call dword 0x3fb70
pop esi
pop ebx
ret
mov eax,eax
push ebx
push esi
mov ebx,edx
mov esi,eax
mov eax,esi
mov edx,[eax]
call dword [edx+0x34]
test al,al
jz 0x3f0c6
mov eax,[esi+0x18]
mov [eax+0x158],bl
pop esi
pop ebx
ret
lea eax,[eax+0x0]
push ebx
push esi
mov esi,edx
mov ebx,eax
mov eax,ebx
mov edx,[eax]
call dword [edx+0x80]
test al,al
jz 0x3f0ea
mov edx,esi
mov eax,[ebx+0x18]
call dword 0x4024c
pop esi
pop ebx
ret
lea eax,[eax+0x0]
push ebp
mov ebp,esp
push ecx
push ebx
push esi
test dl,dl
jz 0x3f102
add esp,byte -0x10
call dword 0x2f14
mov [ebp-0x1],dl
mov ebx,eax
xor edx,edx
mov eax,ebx
call dword 0x1a59c
mov [ebx+0x3c],ebx
mov eax,[ebx]
mov eax,[eax+0x78]
mov [ebx+0x38],eax
mov eax,[0x4401e0]
mov [ebx+0x50],eax
mov dl,0x1
mov eax,[0x41f170]
call dword 0x1f9c4
mov esi,eax
mov [ebx+0x68],esi
mov [esi+0xc],ebx
mov dword [esi+0x8],0x441348
movzx eax,byte [dword 0x4401e4]
mov [ebx+0x61],al
mov ecx,ebx
mov dl,0x1
mov eax,[0x43bcd0]
call dword 0x3eb78
mov esi,eax
mov [ebx+0x74],esi
mov [esi+0x1c],ebx
mov dword [esi+0x18],0x442344
mov ecx,ebx
mov dl,0x1
mov eax,[0x43be1c]
call dword 0x4dc60
mov esi,eax
mov [ebx+0x78],esi
mov [esi+0x1c],ebx
mov dword [esi+0x18],0x443fac
mov dword [ebx+0x70],0xff000005
mov byte [ebx+0x57],0x1
mov byte [ebx+0x58],0x1
mov byte [ebx+0x59],0x1
mov byte [ebx+0x5a],0x1
mov byte [ebx+0x8e],0x1
mov byte [ebx+0x60],0x1
mov byte [ebx+0x5e],0x0
mov word [ebx+0x7e],0xfff4
mov eax,[0x454278]
mov [ebx+0xac],eax
mov byte [ebx+0x158],0x1
mov eax,ebx
cmp byte [ebp-0x1],0x0
jz 0x3f1d7
call dword 0x2f6c
pop dword [dword fs:0x0]
add esp,byte +0xc
mov eax,ebx
pop esi
pop ebx
pop ecx
pop ebp
ret
add [eax],al
stosb
add [eax],al
add [ebx],al
add [eax],al
add [ebx+0x56],dl
push edi
add esp,byte -0x10
call dword 0x2fbc
mov ebx,edx
mov edi,eax
mov eax,[0x468d34]
mov eax,[eax]
mov edx,edi
call dword 0x5d494
mov eax,[edi+0x94]
test eax,eax
jz 0x3f25b
test byte [eax+0x1c],0x8
jnz 0x3f25b
mov edx,edi
call dword 0x1a8b0
push edi
mov eax,[edi+0x94]
xor ecx,ecx
mov edx,0xb039
call dword 0x41588
xor edx,edx
mov eax,edi
mov ecx,[eax]
call dword [ecx+0x6c]
mov edx,esp
mov eax,edi
call dword 0x3fba8
mov ecx,esp
or edx,byte -0x1
mov eax,edi
mov si,0xffcc
call dword 0x2dec
xor eax,eax
mov [edi+0x94],eax
jmp short 0x3f264
xor edx,edx
mov eax,edi
mov ecx,[eax]
call dword [ecx+0x6c]
mov eax,[edi+0x6c]
call dword 0x2bf0
xor eax,eax
mov [edi+0x6c],eax
mov eax,[edi+0x74]
call dword 0x2bf0
mov eax,[edi+0x68]
call dword 0x2bf0
mov eax,[edi+0x64]
call dword 0x8694
mov eax,[edi+0x78]
call dword 0x2bf0
mov edx,ebx
and dl,0xfc
mov eax,edi
call dword 0x1a5e8
test bl,bl
jng 0x3f2a8
mov eax,edi
call dword 0x2f64
add esp,byte +0x10
pop edi
pop esi
pop ebx
ret
nop
xor eax,eax
ret
nop
movzx eax,byte [eax+0x58]
ret
lea eax,[eax+0x0]
xor eax,eax
ret
nop
cmp dword [eax+0x30],byte +0x0
setnz al
ret
mov eax,[eax+0x30]
ret
push ebx
push esi
mov esi,edx
mov ebx,eax
cmp esi,[ebx+0x30]
jz 0x3f2f1
mov eax,esi
mov edx,[dword 0x43d11c]
call dword 0x2d7c
test al,al
jz 0x3f2f1
mov edx,esi
mov eax,ebx
mov ecx,[eax]
call dword [ecx+0x6c]
pop esi
pop ebx
ret
push ebx
push esi
push edi
push ebp
add esp,byte -0x8
mov [esp],dl
mov edi,eax
xor ebx,ebx
cmp byte [edi+0x57],0x0
jz 0x3f364
mov eax,edi
mov si,0xffd7
call dword 0x2dec
mov ebp,eax
test ebp,ebp
jz 0x3f364
lea edx,[esp+0x4]
mov eax,edi
mov ecx,[eax]
call dword [ecx+0x48]
mov esi,eax
movzx eax,byte [esp]
xor al,0x1
neg al
sbb eax,eax
push eax
push ebp
push esi
call dword 0x5dd8
mov ebp,eax
push esi
call dword 0x5da8
test eax,eax
jz 0x3f34e
mov eax,edi
mov edx,[eax]
call dword [edx+0x80]
push byte -0x1
push ebp
push esi
call dword 0x5dd8
push esi
mov eax,[esp+0x8]
push eax
call dword 0x6250
mov bl,0x1
mov eax,ebx
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
ret
lea eax,[eax+0x0]
mov edx,[eax+0x6c]
test edx,edx
jz 0x3f37b
mov eax,[edx+0x10]
ret
xor eax,eax
ret
mov eax,eax
push ebx
push esi
push ecx
mov [esp],dl
mov esi,eax
movzx eax,byte [esp]
cmp al,[esi+0x61]
jz dword 0x3f416
movzx ebx,byte [esi+0x61]
movzx eax,byte [esp]
mov [esi+0x61],al
test byte [esi+0x1c],0x1
jnz 0x3f416
movzx eax,byte [dword 0x44041c]
cmp al,bl
jz 0x3f40f
movzx eax,byte [dword 0x44041c]
cmp al,[esi+0x61]
jnz 0x3f40f
mov eax,[esi+0x180]
cmp eax,[esi+0x40]
jnz 0x3f3e9
mov eax,[esi+0x184]
cmp eax,[esi+0x44]
jnz 0x3f3e9
mov eax,[esi+0x188]
cmp eax,[esi+0x48]
jnz 0x3f3e9
mov eax,[esi+0x18c]
cmp eax,[esi+0x4c]
jz 0x3f40f
mov eax,[esi+0x188]
push eax
mov eax,[esi+0x18c]
push eax
mov ecx,[esi+0x184]
mov edx,[esi+0x180]
mov eax,esi
mov ebx,[eax]
call dword [ebx+0x88]
jmp short 0x3f416
mov eax,esi
call dword 0x3f794
pop edx
pop esi
pop ebx
ret
add [eax],al
add eax,[eax]
add [eax],al
push ebx
push esi
push edi
mov edi,edx
mov ebx,eax
test edi,edi
jnz 0x3f441
mov eax,[ebx+0x6c]
call dword 0x2bf0
xor eax,eax
mov [ebx+0x6c],eax
and dword [ebx+0x50],0xffff7fff
jmp short 0x3f497
or dword [ebx+0x50],0x8000
cmp dword [ebx+0x6c],byte +0x0
jnz 0x3f463
mov eax,ebx
mov si,0xffd9
call dword 0x2dec
mov ecx,ebx
mov dl,0x1
call dword [eax+0x14]
mov [ebx+0x6c],eax
mov edx,edi
mov eax,[ebx+0x6c]
mov ecx,[eax]
call dword [ecx+0xc]
mov eax,[ebx+0x6c]
mov [eax+0xc],ebx
mov dword [eax+0x8],0x443948
test byte [edi+0x1c],0x1
setnz cl
mov edx,edi
mov eax,ebx
mov si,0xffef
call dword 0x2dec
mov edx,ebx
mov eax,edi
call dword 0x1a670
pop edi
pop esi
pop ebx
ret
nop
push ebx
mov ebx,eax
movzx eax,byte [ebx+0x5b]
movzx eax,byte [eax+0x4685b4]
cmp al,[ebx+0x61]
setnz al
pop ebx
ret
mov eax,eax
push ebx
mov ebx,eax
test byte [ebx+0x1c],0x10
jz 0x3f4e7
test byte [ebx+0x55],0x8
setnz al
xor al,0x1
cmp dl,al
jz 0x3f4e7
test dl,dl
jnz 0x3f4d6
or word [ebx+0x54],0x800
jmp short 0x3f4dc
and word [ebx+0x54],0xf7ff
xor ecx,ecx
mov dl,0x1
mov eax,ebx
call dword 0x4071c
pop ebx
ret
lea eax,[eax+0x0]
mov [eax+0x5d],dl
ret
mov edx,[eax+0x30]
test edx,edx
jz 0x3f4fd
xchg eax,edx
call dword 0x43d3c
ret
mov eax,eax
push ebx
cmp word [eax+0xea],byte +0x0
jz 0x3f51b
mov ebx,eax
mov edx,eax
mov eax,[ebx+0xec]
call dword [ebx+0xe8]
pop ebx
ret
lea eax,[eax+0x0]
push ebx
push esi
push edi
mov esi,edx
mov ebx,eax
or word [ebx+0x54],byte +0x8
mov edi,[esi+0x2c]
mov eax,edi
mov edx,[dword 0x43d11c]
call dword 0x2d7c
test al,al
jz 0x3f549
mov edx,edi
mov eax,ebx
mov ecx,[eax]
call dword [ecx+0x6c]
mov edx,esi
mov eax,ebx
call dword 0x1aa14
and word [ebx+0x54],byte -0x9
cmp dword [ebx+0x30],byte +0x0
jz 0x3f5ad
push byte +0x0
xor ecx,ecx
mov edx,0xb009
mov eax,ebx
call dword 0x41588
push byte +0x0
xor ecx,ecx
mov edx,0xb008
mov eax,ebx
call dword 0x41588
push byte +0x0
xor ecx,ecx
mov edx,0xb023
mov eax,ebx
call dword 0x41588
push byte +0x0
xor ecx,ecx
mov edx,0xb035
mov eax,ebx
call dword 0x41588
push byte +0x0
xor ecx,ecx
mov edx,0xb03d
mov eax,ebx
call dword 0x41588
pop edi
pop esi
pop ebx
ret
lea eax,[eax+0x0]
push ebx
push esi
push edi
mov ebx,ecx
mov edi,edx
mov esi,eax
mov ecx,ebx
mov edx,edi
mov eax,esi
call dword 0x1a8cc
cmp bl,0x1
jnz 0x3f606
cmp edi,[esi+0x80]
jnz 0x3f5e0
xor edx,edx
mov eax,esi
call dword 0x4024c
jmp short 0x3f606
mov eax,esi
mov edx,[eax]
call dword [edx+0x3c]
cmp edi,eax
jnz 0x3f5f6
xor edx,edx
mov eax,esi
call dword 0x3f420
jmp short 0x3f606
cmp edi,[esi+0x94]
jnz 0x3f606
xor eax,eax
mov [esi+0x94],eax
pop edi
pop esi
pop ebx
ret
mov eax,eax
push ebx
push esi
push edi
push ecx
mov ebx,edx
mov edi,eax
movzx eax,byte [edi+0x5b]
cmp bl,al
jz dword 0x3f6e8
mov [esp],al
mov [edi+0x5b],bl
movzx eax,bl
movzx edx,byte [eax+0x4685b4]
mov eax,edi
call dword 0x3f380
test byte [edi+0x1c],0x1
jnz dword 0x3f6e8
test byte [edi+0x1c],0x10
jz 0x3f651
cmp dword [edi+0x30],byte +0x0
jz dword 0x3f6e8
cmp bl,0x6
jz dword 0x3f6e8
cmp byte [esp],0x6
jz dword 0x3f6e8
movzx eax,byte [esp]
dec eax
sub al,0x2
setc al
mov edx,ebx
add dl,0xfd
sub dl,0x2
setc dl
cmp al,dl
jnz 0x3f6ad
movzx eax,byte [esp]
test al,al
jz 0x3f6ad
sub al,0x5
jz 0x3f6ad
mov eax,ebx
test al,al
jz 0x3f6ad
sub al,0x5
jz 0x3f6ad
mov eax,[edi+0x4c]
push eax
mov eax,[edi+0x48]
push eax
mov ecx,[edi+0x44]
mov edx,[edi+0x40]
mov eax,edi
mov ebx,[eax]
call dword [ebx+0x88]
jmp short 0x3f6e8
cmp byte [esp],0x0
jz 0x3f6dd
test bl,bl
jnz 0x3f6dd
mov eax,[edi+0x188]
push eax
mov eax,[edi+0x18c]
push eax
mov ecx,[edi+0x184]
mov edx,[edi+0x180]
mov eax,edi
mov ebx,[eax]
call dword [ebx+0x88]
jmp short 0x3f6e8
mov eax,edi
mov si,0xffee
call dword 0x2dec
mov eax,edi
mov edx,[eax]
call dword [edx+0x5c]
pop edx
pop edi
pop esi
pop ebx
ret
push ebp
mov ebp,esp
push ebx
push esi
push edi
mov edi,ecx
mov esi,edx
mov ebx,eax
lea ecx,[ebp+0x8]
lea edx,[ebp+0xc]
mov eax,ebx
call dword 0x41fcc
test al,al
jz 0x3f78a
cmp esi,[ebx+0x40]
jnz 0x3f72b
cmp edi,[ebx+0x44]
jnz 0x3f72b
mov eax,[ebp+0xc]
cmp eax,[ebx+0x48]
jnz 0x3f72b
mov eax,[ebp+0x8]
cmp eax,[ebx+0x4c]
jz 0x3f78a
xor ecx,ecx
movzx edx,byte [ebx+0x57]
mov eax,ebx
call dword 0x4071c
mov [ebx+0x40],esi
mov [ebx+0x44],edi
mov eax,[ebp+0xc]
mov [ebx+0x48],eax
mov eax,[ebp+0x8]
mov [ebx+0x4c],eax
mov eax,ebx
call dword 0x3f794
mov eax,ebx
call dword 0x42ff8
mov eax,ebx
mov edx,[eax]
call dword [edx+0x80]
push byte +0x0
xor ecx,ecx
mov edx,0x47
mov eax,ebx
call dword 0x41588
mov eax,ebx
mov edx,[eax]
call dword [edx+0x5c]
test byte [ebx+0x1c],0x1
jnz 0x3f78a
mov eax,ebx
mov si,0xffcf
call dword 0x2dec
pop edi
pop esi
pop ebx
pop ebp
ret 0x8
lea eax,[eax+0x0]
push ebx
push esi
push edi
add esp,byte -0x8
mov esi,eax
cmp byte [esi+0x164],0x0
jnz dword 0x3f90d
test byte [esi+0x1c],0x1
jnz dword 0x3f90d
movzx ebx,byte [esi+0x61]
mov edx,0x1
mov eax,[esi+0x78]
mov ecx,[eax]
call dword [ecx+0x10]
mov edi,eax
mov edx,0x3
mov eax,[esi+0x78]
mov ecx,[eax]
call dword [ecx+0x10]
sar eax,1
jns 0x3f7da
adc eax,byte +0x0
add edi,eax
push edi
xor edx,edx
mov eax,[esi+0x78]
mov ecx,[eax]
call dword [ecx+0x10]
mov edi,eax
mov edx,0x2
mov eax,[esi+0x78]
mov ecx,[eax]
call dword [ecx+0x10]
sar eax,1
jns 0x3f7fd
adc eax,byte +0x0
add edi,eax
mov eax,edi
lea ecx,[esp+0x4]
pop edx
call dword 0x12a04
mov eax,[esp]
mov [esi+0x16d],eax
mov eax,[esp+0x4]
mov [esi+0x171],eax
movzx eax,byte [dword 0x440914]
cmp al,bl
jnz 0x3f83e
xor eax,eax
mov [esi+0x175],eax
xor eax,eax
mov [esi+0x179],eax
jmp dword 0x3f90d
test bl,0x4
jz 0x3f86f
test bl,0x1
jz 0x3f85d
mov edx,0x2
mov eax,[esi+0x78]
mov ecx,[eax]
call dword [ecx+0x10]
mov [esi+0x165],eax
jmp short 0x3f897
xor edx,edx
mov eax,[esi+0x78]
mov ecx,[eax]
call dword [ecx+0x10]
mov [esi+0x165],eax
jmp short 0x3f897
xor edx,edx
mov eax,[esi+0x78]
mov ecx,[eax]
call dword [ecx+0x10]
mov edi,eax
mov edx,0x2
mov eax,[esi+0x78]
mov ecx,[eax]
call dword [ecx+0x10]
sar eax,1
jns 0x3f88f
adc eax,byte +0x0
add edi,eax
mov [esi+0x165],edi
test bl,0x8
jz 0x3f8cb
test bl,0x2
jz 0x3f8b6
mov edx,0x3
mov eax,[esi+0x78]
mov ecx,[eax]
call dword [ecx+0x10]
mov [esi+0x169],eax
jmp short 0x3f8f6
mov edx,0x1
mov eax,[esi+0x78]
mov ecx,[eax]
call dword [ecx+0x10]
mov [esi+0x169],eax
jmp short 0x3f8f6
mov edx,0x1
mov eax,[esi+0x78]
mov ecx,[eax]
call dword [ecx+0x10]
mov ebx,eax
mov edx,0x3
mov eax,[esi+0x78]
mov ecx,[eax]
call dword [ecx+0x10]
sar eax,1
jns 0x3f8ee
adc eax,byte +0x0
add ebx,eax
mov [esi+0x169],ebx
mov eax,[esi+0x30]
test eax,eax
jz 0x3f90d
lea ecx,[esi+0x175]
mov edx,esi
mov ebx,[eax]
call dword [ebx+0xd0]
pop ecx
pop edx
pop edi
pop esi
pop ebx
ret
add [ebx],al
add [eax],al
add [ebx+0x56],dl
mov ebx,eax
mov eax,[ebx+0x48]
push eax
mov eax,[ebx+0x4c]
push eax
mov ecx,[ebx+0x44]
mov eax,ebx
mov esi,[eax]
call dword [esi+0x88]
or byte [ebx+0x8c],0x1
test byte [ebx+0x1c],0x2
jz 0x3f947
mov eax,[ebx+0x40]
mov [ebx+0x180],eax
pop esi
pop ebx
ret
mov eax,eax
push ebx
push esi
mov ebx,eax
mov eax,[ebx+0x48]
push eax
mov eax,[ebx+0x4c]
push eax
mov ecx,edx
mov eax,ebx
mov edx,[ebx+0x40]
mov esi,[eax]
call dword [esi+0x88]
or byte [ebx+0x8c],0x2
test byte [ebx+0x1c],0x2
jz 0x3f97d
mov eax,[ebx+0x44]
mov [ebx+0x184],eax
pop esi
pop ebx
ret
push ebx
push esi
mov ebx,eax
push edx
mov eax,[ebx+0x4c]
push eax
mov ecx,[ebx+0x44]
mov eax,ebx
mov edx,[ebx+0x40]
mov esi,[eax]
call dword [esi+0x88]
or byte [ebx+0x8c],0x4
test byte [ebx+0x1c],0x2
jz 0x3f9af
mov eax,[ebx+0x48]
mov [ebx+0x188],eax
pop esi
pop ebx
ret
mov eax,eax
push ebx
push esi
mov ebx,eax
mov eax,[ebx+0x48]
push eax
push edx
mov ecx,[ebx+0x44]
mov eax,ebx
mov edx,[ebx+0x40]
mov esi,[eax]
call dword [esi+0x88]
or byte [ebx+0x8c],0x8
test byte [ebx+0x1c],0x2
jz 0x3f9e3
mov eax,[ebx+0x4c]
mov [ebx+0x18c],eax
pop esi
pop ebx
ret
mov eax,eax
push ebp
mov ebp,esp
add esp,byte -0x18
push esi
push edi
mov esi,ecx
lea edi,[ebp-0x18]
movsd
movsd
movsd
movsd
mov edi,edx
mov [ebp-0x4],eax
mov eax,[ebp-0x4]
cmp edi,[eax+0x94]
jz 0x3fa5e
mov eax,[ebp-0x4]
mov eax,[eax+0x94]
test eax,eax
jz 0x3fa3e
cmp dword [eax+0x1ac],byte +0x0
jz 0x3fa3e
mov eax,[eax+0x1ac]
mov edx,[ebp-0x4]
call dword 0x14018
mov eax,[ebp-0x4]
mov eax,[eax+0x94]
mov edx,[ebp-0x4]
call dword 0x1a8b0
test edi,edi
jz 0x3fa5e
cmp edi,byte -0x1
jz 0x3fa5e
cmp dword [edi+0x1ac],byte +0x0
jz 0x3fa5e
mov eax,[edi+0x1ac]
mov edx,[ebp-0x4]
call dword 0x13d24
mov eax,[ebp-0x4]
or word [eax+0x54],0x400
xor edx,edx
push ebp
push dword 0x440b08
push dword [fs:edx]
mov [fs:edx],esp
cmp edi,byte -0x1
jz 0x3fa8b
lea ecx,[ebp-0x18]
mov edx,edi
mov eax,[ebp-0x4]
mov si,0xffe4
call dword 0x2dec
mov eax,[ebp-0x4]
mov eax,[eax+0x94]
cmp edi,eax
jz 0x3faf1
mov [ebp-0x8],eax
cmp edi,byte -0x1
jz 0x3fad1
mov eax,[ebp-0x4]
mov [eax+0x94],edi
test edi,edi
jz 0x3fadc
lea ecx,[ebp-0x18]
mov edx,[ebp-0x4]
mov eax,edi
mov si,0xffc4
call dword 0x2dec
mov eax,[ebp-0x4]
mov eax,[eax+0x94]
mov edx,[ebp-0x4]
call dword 0x1a670
jmp short 0x3fadc
mov eax,[ebp-0x4]
xor edx,edx
mov [eax+0x94],edx
cmp dword [ebp-0x8],byte +0x0
jz 0x3faf1
mov edx,[ebp-0x4]
mov eax,[ebp-0x8]
mov si,0xffbe
call dword 0x2dec
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x440b0f
mov eax,[ebp-0x4]
and word [eax+0x54],0xfbff
ret
jmp dword 0x3384
jmp short 0x3fafe
pop edi
pop esi
mov esp,ebp
pop ebp
ret
lea eax,[eax+0x0]
push ebx
push esi
push edi
mov edi,ecx
mov esi,edx
mov ebx,eax
mov eax,ebx
mov edx,[dword 0x43d11c]
call dword 0x2d7c
test al,al
jnz 0x3fb3f
xor ecx,ecx
movzx edx,byte [ebx+0x57]
mov eax,ebx
call dword 0x4071c
cmp esi,[ebx+0x30]
jz 0x3fb4f
mov edx,edi
mov eax,ebx
call dword 0x41630
jmp short 0x3fb58
mov edx,edi
mov eax,ebx
call dword 0x3fbc8
test esi,esi
jz 0x3fb61
cmp esi,byte -0x1
jnz 0x3fb6a
xor edx,edx
mov eax,ebx
mov ecx,[eax]
call dword [ecx+0x6c]
pop edi
pop esi
pop ebx
ret
mov eax,eax
test byte [eax+0x1c],0x1
jnz 0x3fb7d
mov byte [eax+0x158],0x1
mov [eax+0x160],edx
ret
push ebx
push esi
mov esi,edx
mov ebx,eax
test byte [ebx+0x1c],0x1
jnz 0x3fb97
mov byte [ebx+0x158],0x0
lea eax,[ebx+0x15c]
mov edx,esi
call dword 0x3a70
pop esi
pop ebx
ret
nop
mov ecx,[eax+0x40]
mov [edx],ecx
mov ecx,[eax+0x44]
mov [edx+0x4],ecx
mov ecx,[eax+0x40]
add ecx,[eax+0x48]
mov [edx+0x8],ecx
mov ecx,[eax+0x44]
add ecx,[eax+0x4c]
mov [edx+0xc],ecx
ret
mov eax,eax
push ebx
push esi
push edi
mov ecx,[edx+0x8]
mov esi,[edx]
sub ecx,esi
push ecx
mov ecx,[edx+0xc]
mov edi,[edx+0x4]
sub ecx,edi
push ecx
mov ecx,edi
mov edx,esi
mov ebx,[eax]
call dword [ebx+0x88]
pop edi
pop esi
pop ebx
ret
xor ecx,ecx
mov [edx],ecx
xor ecx,ecx
mov [edx+0x4],ecx
mov ecx,[eax+0x48]
mov [edx+0x8],ecx
mov eax,[eax+0x4c]
mov [edx+0xc],eax
ret
mov eax,eax
push ebx
add esp,byte -0x10
mov ebx,eax
mov edx,esp
mov eax,ebx
mov ecx,[eax]
call dword [ecx+0x44]
mov eax,[esp+0x8]
add esp,byte +0x10
pop ebx
ret
push ebx
push esi
add esp,byte -0x8
mov esi,edx
mov ebx,eax
mov eax,ebx
call dword 0x3fc48
mov edx,eax
mov ecx,esp
mov eax,esi
call dword 0x12a04
mov edx,esp
mov eax,ebx
call dword 0x40124
pop ecx
pop edx
pop esi
pop ebx
ret
lea eax,[eax+0x0]
push ebx
add esp,byte -0x10
mov ebx,eax
mov edx,esp
mov eax,ebx
mov ecx,[eax]
call dword [ecx+0x44]
mov eax,[esp+0xc]
add esp,byte +0x10
pop ebx
ret
push ebx
push esi
add esp,byte -0x8
mov esi,edx
mov ebx,eax
mov eax,ebx
call dword 0x3fc04
mov ecx,esp
mov edx,esi
call dword 0x12a04
mov edx,esp
mov eax,ebx
call dword 0x40124
pop ecx
pop edx
pop esi
pop ebx
ret
nop
push ebp
mov ebp,esp
add esp,byte -0xc
push ebx
push esi
xor ecx,ecx
mov [ebp-0xc],ecx
mov esi,edx
mov ebx,eax
xor eax,eax
push ebp
push dword 0x440d09
push dword [fs:eax]
mov [fs:eax],esp
cmp dword [ebx+0x30],byte +0x0
jnz 0x3fcde
mov eax,[ebx+0x8]
mov [ebp-0x8],eax
mov byte [ebp-0x4],0xb
lea eax,[ebp-0x8]
push eax
push byte +0x0
lea edx,[ebp-0xc]
mov eax,[0x468d70]
call dword 0x5750
mov ecx,[ebp-0xc]
mov dl,0x1
mov eax,[0x4128ec]
call dword 0xb48c
call dword 0x3464
mov edx,esi
mov eax,[ebx+0x30]
mov ecx,[eax]
call dword [ecx+0x40]
mov eax,[ebx+0x40]
add [esi],eax
mov eax,[ebx+0x44]
add [esi+0x4],eax
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x440d10
lea eax,[ebp-0xc]
call dword 0x3a1c
ret
jmp dword 0x3384
jmp short 0x3fd00
pop esi
pop ebx
mov esp,ebp
pop ebp
ret
mov eax,eax
push ebx
push esi
push edi
add esp,byte -0x8
mov edi,ecx
mov esi,edx
mov ebx,eax
mov edx,esp
mov eax,ebx
mov ecx,[eax]
call dword [ecx+0x40]
mov eax,[esi]
add eax,[esp]
mov [edi],eax
mov eax,[esi+0x4]
add eax,[esp+0x4]
mov [edi+0x4],eax
pop ecx
pop edx
pop edi
pop esi
pop ebx
ret
push ebx
push esi
push edi
push ebp
mov edi,ecx
mov esi,edx
mov ebx,[eax+0x74]
mov ebp,[ebx+0x14]
test ebp,ebp
jna 0x3fd6c
push edi
push esi
push ebp
call dword 0x5bc0
mov ecx,eax
mov edx,0x3
mov eax,ebx
call dword 0x3ebfc
mov ebp,[ebx+0xc]
test ebp,ebp
jna 0x3fd89
push edi
push esi
push ebp
call dword 0x5bc0
mov ecx,eax
mov edx,0x1
mov eax,ebx
call dword 0x3ebfc
mov ebp,[ebx+0x10]
test ebp,ebp
jna 0x3fda6
push edi
push esi
push ebp
call dword 0x5bc0
mov ecx,eax
mov edx,0x2
mov eax,ebx
call dword 0x3ebfc
mov ebp,[ebx+0x8]
test ebp,ebp
jna 0x3fdc0
push edi
push esi
push ebp
call dword 0x5bc0
mov ecx,eax
xor edx,edx
mov eax,ebx
call dword 0x3ebfc
pop ebp
pop edi
pop esi
pop ebx
ret
lea eax,[eax+0x0]
push ebx
push esi
push edi
add esp,byte -0x8
mov edi,ecx
mov esi,edx
mov ebx,eax
mov edx,esp
mov eax,ebx
mov ecx,[eax]
call dword [ecx+0x40]
mov eax,[esi]
sub eax,[esp]
mov [edi],eax
mov eax,[esi+0x4]
sub eax,[esp+0x4]
mov [edi+0x4],eax
pop ecx
pop edx
pop edi
pop esi
pop ebx
ret
push ebx
push esi
mov esi,edx
mov ebx,eax
test ebx,ebx
jz 0x3fe1f
mov eax,ebx
mov edx,[dword 0x453010]
call dword 0x2d7c
test al,al
jz 0x3fe18
mov edx,esi
mov eax,ebx
call dword 0x59158
mov ebx,[ebx+0x30]
test ebx,ebx
jnz 0x3fdfe
pop esi
pop ebx
ret
mov eax,eax
push ebp
mov ebp,esp
add esp,byte -0x10
push ebx
push esi
push edi
mov [ebp-0x4],ecx
mov edi,edx
mov ebx,eax
mov esi,[ebx+0x94]
test esi,esi
jz 0x3fe7f
cmp dword [dword 0x46dc24],byte +0x0
jnz 0x3fe7f
movzx eax,word [dword 0x440e88]
and ax,[ebx+0x1c]
movzx edx,word [dword 0x440e8c]
cmp dx,ax
jnz 0x3fe7f
mov [ebp-0x10],edi
mov eax,[ebp-0x4]
mov [ebp-0xc],eax
mov eax,[ebp+0x8]
mov [ebp-0x8],eax
lea eax,[ebp-0x10]
push eax
mov ecx,ebx
mov edx,0xb042
mov eax,esi
call dword 0x41588
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret 0x4
or [eax],eax
add [eax],al
add [eax],al
add [eax],al
push eax
xor ecx,ecx
mov edx,0xb037
call dword 0x41588
ret
mov eax,eax
push ebx
push esi
push edi
push ebp
add esp,byte -0x10
mov [esp],ecx
mov edi,edx
mov esi,eax
cmp edi,[esp]
jz dword 0x4003e
test byte [esi+0x1c],0x1
jz 0x3fec6
movzx ebx,byte [esi+0x8c]
jmp short 0x3fecd
movzx ebx,byte [dword 0x441054]
test bl,0x1
jz 0x3fee4
mov eax,[esp]
push eax
push edi
mov eax,[esi+0x40]
push eax
call dword 0x5bc0
mov ebp,eax
jmp short 0x3fee7
mov ebp,[esi+0x40]
test bl,0x2
jz 0x3ff00
mov eax,[esp]
push eax
push edi
mov eax,[esi+0x44]
push eax
call dword 0x5bc0
mov [esp+0x4],eax
jmp short 0x3ff07
mov eax,[esi+0x44]
mov [esp+0x4],eax
test bl,0x4
jz 0x3ff44
test byte [esi+0x51],0x1
jnz 0x3ff44
test bl,0x1
jz 0x3ff30
mov eax,[esp]
push eax
push edi
mov eax,[esi+0x40]
add eax,[esi+0x48]
push eax
call dword 0x5bc0
sub eax,ebp
mov [esp+0x8],eax
jmp short 0x3ff4b
mov eax,[esp]
push eax
push edi
mov eax,[esi+0x48]
push eax
call dword 0x5bc0
mov [esp+0x8],eax
jmp short 0x3ff4b
mov eax,[esi+0x48]
mov [esp+0x8],eax
test bl,0x8
setnz al
test al,al
jz 0x3ff94
test byte [esi+0x51],0x2
jnz 0x3ff94
test bl,0x8
setnz dl
test al,al
jz 0x3ff80
mov eax,[esp]
push eax
push edi
mov eax,[esi+0x44]
add eax,[esi+0x4c]
push eax
call dword 0x5bc0
sub eax,[esp+0x4]
mov [esp+0xc],eax
jmp short 0x3ff9b
mov eax,[esp]
push eax
push edi
mov eax,[esi+0x44]
push eax
call dword 0x5bc0
mov [esp+0xc],eax
jmp short 0x3ff9b
mov eax,[esi+0x4c]
mov [esp+0xc],eax
mov ecx,[esp]
mov edx,edi
mov eax,esi
call dword 0x3fd44
mov eax,[esp+0x8]
push eax
mov eax,[esp+0x10]
push eax
mov ecx,[esp+0xc]
mov edx,ebp
mov eax,esi
mov ebp,[eax]
call dword [ebp+0x88]
mov eax,ebx
and al,[dword 0x441058]
movzx edx,byte [dword 0x44105c]
cmp dl,al
jz 0x3ffeb
mov eax,[esp]
push eax
push edi
mov eax,[esi+0x175]
push eax
call dword 0x5bc0
mov [esi+0x175],eax
mov eax,ebx
and al,[dword 0x441060]
movzx edx,byte [dword 0x44105c]
cmp dl,al
jz 0x40015
mov eax,[esp]
push eax
push edi
mov eax,[esi+0x179]
push eax
call dword 0x5bc0
mov [esi+0x179],eax
cmp byte [esi+0x59],0x0
jnz 0x4003e
test bl,0x10
jz 0x4003e
mov eax,[esp]
push eax
push edi
mov ebx,[esi+0x68]
mov eax,ebx
call dword 0x1fedc
push eax
call dword 0x5bc0
mov edx,eax
mov eax,ebx
call dword 0x1fef8
movzx eax,byte [dword 0x44105c]
mov [esi+0x8c],al
add esp,byte +0x10
pop ebp
pop edi
pop esi
pop ebx
ret
add [edi],bl
add [eax],al
add [dword 0x0],al
add [eax],al
add [edx],cl
add [eax],al
add [esi-0x75],dl
lock cmp dl,[esi+0x5c]
jz 0x4007e
mov [esi+0x5c],dl
test dl,dl
jz 0x4007e
mov eax,esi
mov si,0xffee
call dword 0x2dec
pop esi
ret
push ebp
mov ebp,esp
add esp,byte -0x8
push ebx
push esi
push edi
xor ecx,ecx
mov [ebp-0x8],ecx
mov [ebp-0x4],edx
mov edi,eax
xor eax,eax
push ebp
push dword 0x441116
push dword [fs:eax]
mov [fs:eax],esp
test byte [edi+0x50],0x20
jz 0x400e2
test byte [edi+0x1c],0x1
jnz 0x400e2
lea edx,[ebp-0x8]
mov eax,edi
call dword 0x40298
mov edx,[ebp-0x8]
mov eax,[edi+0x8]
call dword 0x3e44
jnz 0x400e2
mov esi,[edi+0x4]
test esi,esi
jz 0x400e6
mov eax,esi
mov edx,[dword 0x43c888]
call dword 0x2d7c
test al,al
jz 0x400e6
test byte [esi+0x1c],0x1
jz 0x400e6
xor ebx,ebx
jmp short 0x400e8
mov bl,0x1
mov edx,[ebp-0x4]
mov eax,edi
call dword 0x1ab0c
test bl,bl
jz 0x40100
mov edx,[ebp-0x4]
mov eax,edi
call dword 0x402c8
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x44111d
lea eax,[ebp-0x8]
call dword 0x3a1c
ret
jmp dword 0x3384
jmp short 0x4010d
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
ret
push ebx
push esi
push edi
add esp,byte -0x18
mov esi,edx
lea edi,[esp]
movsd
movsd
mov ebx,eax
lea edx,[esp+0x8]
mov eax,ebx
mov ecx,[eax]
call dword [ecx+0x44]
mov eax,[ebx+0x48]
sub eax,[esp+0x10]
add eax,[esp]
push eax
mov eax,[ebx+0x4c]
sub eax,[esp+0x18]
add eax,[esp+0x8]
push eax
mov ecx,[ebx+0x44]
mov edx,[ebx+0x40]
mov eax,ebx
mov ebx,[eax]
call dword [ebx+0x88]
add esp,byte +0x18
pop edi
pop esi
pop ebx
ret
push ebx
push esi
mov esi,edx
mov ebx,eax
cmp esi,[ebx+0x30]
jz 0x401b4
cmp ebx,esi
jnz 0x40192
mov ecx,[dword 0x468d74]
mov dl,0x1
mov eax,[0x4128ec]
call dword 0xb50c
call dword 0x3464
mov eax,[ebx+0x30]
test eax,eax
jz 0x401a0
mov edx,ebx
call dword 0x441d8
test esi,esi
jz 0x401b4
mov edx,ebx
mov eax,esi
call dword 0x440e4
mov eax,ebx
call dword 0x3f794
pop esi
pop ebx
ret
nop
push ebx
push esi
push edi
mov ebx,edx
mov edi,eax
cmp bl,[edi+0x57]
jz 0x401ea
mov eax,edi
mov si,0xffcd
call dword 0x2dec
mov [edi+0x57],bl
push byte +0x0
movzx ecx,bl
mov edx,0xb00b
mov eax,edi
call dword 0x41588
mov eax,edi
mov edx,[eax]
call dword [edx+0x5c]
pop edi
pop esi
pop ebx
ret
mov eax,eax
cmp dl,[eax+0x58]
jz 0x40206
mov [eax+0x58],dl
push byte +0x0
xor ecx,ecx
mov edx,0xb00c
call dword 0x41588
ret
nop
push byte +0x0
xor ecx,ecx
mov edx,0xe
call dword 0x41588
ret
nop
push edx
mov edx,0xd
call dword 0x41588
ret
mov edx,[eax+0xa0]
test edx,edx
jng 0x40231
mov eax,edx
ret
mov eax,[eax+0x4c]
ret
lea eax,[eax+0x0]
mov edx,[eax+0x9c]
test edx,edx
jng 0x40245
mov eax,edx
ret
mov eax,[eax+0x48]
ret
lea eax,[eax+0x0]
push ebx
push esi
mov esi,edx
mov ebx,eax
mov [ebx+0x80],esi
test esi,esi
jz 0x4026e
mov edx,ebx
mov eax,esi
call dword 0x39628
mov edx,ebx
mov eax,esi
call dword 0x1a670
pop esi
pop ebx
ret
lea eax,[eax+0x0]
push ebx
mov ebx,eax
push edx
xor ecx,ecx
mov eax,ebx
mov edx,0xc
call dword 0x41588
push byte +0x0
xor ecx,ecx
mov edx,0xb012
mov eax,ebx
call dword 0x41588
pop ebx
ret
push ebx
push esi
push edi
mov edi,edx
mov esi,eax
mov eax,esi
call dword 0x40208
mov ebx,eax
mov eax,edi
mov ecx,ebx
xor edx,edx
call dword 0x3b0c
test ebx,ebx
jz 0x402c3
lea ecx,[ebx+0x1]
mov edx,[edi]
mov eax,esi
call dword 0x40218
pop edi
pop esi
pop ebx
ret
nop
push ebp
mov ebp,esp
push byte +0x0
push ebx
push esi
mov esi,edx
mov ebx,eax
xor eax,eax
push ebp
push dword 0x44131d
push dword [fs:eax]
mov [fs:eax],esp
lea edx,[ebp-0x4]
mov eax,ebx
call dword 0x40298
mov eax,[ebp-0x4]
mov edx,esi
call dword 0x3e44
jz 0x40307
mov eax,esi
call dword 0x3eac
mov edx,eax
mov eax,ebx
call dword 0x40274
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x441324
lea eax,[ebp-0x4]
call dword 0x3a1c
ret
jmp dword 0x3384
jmp short 0x40314
pop esi
pop ebx
pop ecx
pop ebp
ret
lea eax,[eax+0x0]
cmp dl,[eax+0x5f]
jz 0x40346
mov [eax+0x5f],dl
mov byte [eax+0x60],0x0
push byte +0x0
xor ecx,ecx
mov edx,0xb03c
call dword 0x41588
ret
nop
push ebx
mov ebx,eax
mov byte [ebx+0x59],0x0
mov byte [ebx+0x56],0x0
mov eax,[ebx+0x68]
call dword 0x1fe38
cmp eax,[ebx+0x88]
jz 0x40378
or byte [ebx+0x8c],0x10
mov eax,[ebx+0x68]
call dword 0x1fe38
mov [ebx+0x88],eax
push byte +0x0
xor ecx,ecx
mov edx,0xb00e
mov eax,ebx
call dword 0x41588
pop ebx
ret
mov eax,eax
push esi
mov esi,eax
mov eax,[esi+0x68]
mov ecx,[eax]
call dword [ecx+0x8]
pop esi
ret
lea eax,[eax+0x0]
cmp byte [eax+0x59],0x0
jnz 0x403a8
cmp byte [eax+0x56],0x0
jz 0x403ab
xor eax,eax
ret
mov al,0x1
ret
mov eax,eax
movzx eax,byte [eax+0x8e]
xor al,0x1
ret
mov eax,eax
movzx eax,byte [eax+0x60]
xor al,0x1
ret
nop
cmp dl,[eax+0x59]
jz 0x403e6
mov [eax+0x59],dl
cmp dword [eax+0x30],byte +0x0
jz 0x403e6
test byte [eax+0x1c],0x2
jnz 0x403e6
push byte +0x0
xor ecx,ecx
mov edx,0xb008
call dword 0x41588
ret
nop
cmp dl,[eax+0x8d]
jz 0x4040b
mov [eax+0x8d],dl
mov byte [eax+0x8e],0x0
push byte +0x0
xor ecx,ecx
mov edx,0xb022
call dword 0x41588
ret
cmp dl,[eax+0x8e]
jz 0x40434
mov [eax+0x8e],dl
cmp dword [eax+0x30],byte +0x0
jz 0x40434
test byte [eax+0x1c],0x2
jnz 0x40434
push byte +0x0
xor ecx,ecx
mov edx,0xb023
call dword 0x41588
ret
lea eax,[eax+0x0]
push ebx
mov ebx,eax
cmp edx,[ebx+0x70]
jz 0x40480
mov [ebx+0x70],edx
mov byte [ebx+0x5a],0x0
test byte [ebx+0x1c],0x10
jz 0x40470
test byte [ebx+0x1c],0x2
jnz 0x40470
mov eax,ebx
mov edx,[dword 0x43d11c]
call dword 0x2d7c
test al,al
jz 0x40470
xor edx,edx
mov eax,ebx
mov ecx,[eax]
call dword [ecx+0xc8]
push byte +0x0
xor ecx,ecx
mov edx,0xb00d
mov eax,ebx
call dword 0x41588
pop ebx
ret
mov eax,eax
movzx eax,byte [eax+0x5a]
xor al,0x1
ret
nop
cmp dl,[eax+0x5a]
jz 0x404ae
mov [eax+0x5a],dl
cmp dword [eax+0x30],byte +0x0
jz 0x404ae
test byte [eax+0x1c],0x2
jnz 0x404ae
push byte +0x0
xor ecx,ecx
mov edx,0xb009
call dword 0x41588
ret
nop
cmp dl,[eax+0x60]
jz 0x404d2
mov [eax+0x60],dl
cmp dword [eax+0x30],byte +0x0
jz 0x404d2
test byte [eax+0x1c],0x2
jnz 0x404d2
push byte +0x0
xor ecx,ecx
mov edx,0xb03d
call dword 0x41588
ret
nop
cmp dx,[eax+0x7c]
jz 0x404ec
mov [eax+0x7c],dx
push byte +0x0
xor ecx,ecx
mov edx,0xb00f
call dword 0x41588
ret
lea eax,[eax+0x0]
push ebx
mov ebx,eax
call dword 0x3d034
cmp ebx,eax
setz al
pop ebx
ret
nop
push ebx
push esi
mov ebx,edx
mov esi,eax
mov eax,esi
call dword 0x404f0
cmp bl,al
jz 0x40525
test bl,bl
jz 0x4051e
mov eax,esi
call dword 0x3d05c
jmp short 0x40525
xor eax,eax
call dword 0x3d05c
pop esi
pop ebx
ret
push esi
mov esi,eax
mov dl,0x1
mov eax,esi
mov si,0xffce
call dword 0x2dec
pop esi
ret
mov eax,eax
push ebx
push esi
push edi
mov esi,edx
mov ebx,eax
mov eax,[ebx+0x30]
test eax,eax
jz 0x405bf
mov eax,[eax+0x1cc]
mov edx,ebx
call dword 0x13ed8
test eax,eax
jl 0x405bf
mov edx,[ebx+0x30]
mov edi,[edx+0x1cc]
mov edx,[edi+0x8]
test esi,esi
jnl 0x4056d
xor esi,esi
cmp edx,esi
jg 0x40574
mov esi,edx
dec esi
cmp eax,esi
jz 0x405bf
mov edx,edi
xchg eax,edx
call dword 0x13d70
mov eax,[ebx+0x30]
mov eax,[eax+0x1cc]
mov ecx,ebx
mov edx,esi
call dword 0x13ef8
mov cl,0x1
movzx edx,byte [ebx+0x57]
mov eax,ebx
call dword 0x4071c
test byte [ebx+0x1c],0x1
jnz 0x405bf
mov dl,0x1
mov eax,ebx
call dword 0x53e48
test byte [eax+0x54],0x4
jz 0x405bf
mov dl,0x1
mov si,0xffd0
call dword 0x2dec
pop edi
pop esi
pop ebx
ret
nop
mov ecx,[eax+0x30]
test ecx,ecx
jz 0x405e7
test dl,dl
jz 0x405e0
mov edx,[ecx+0x1cc]
mov edx,[edx+0x8]
dec edx
call dword 0x4053c
jmp short 0x405e7
xor edx,edx
call dword 0x4053c
ret
push ebp
mov ebp,esp
add esp,byte -0xc
push ebx
push esi
xor ecx,ecx
mov [ebp-0xc],ecx
mov ebx,eax
xor eax,eax
push ebp
push dword 0x44167e
push dword [fs:eax]
mov [fs:eax],esp
cmp dword [ebx+0x30],byte +0x0
jnz 0x4063c
mov eax,[ebx+0x8]
mov [ebp-0x8],eax
mov byte [ebp-0x4],0xb
lea eax,[ebp-0x8]
push eax
push byte +0x0
lea edx,[ebp-0xc]
mov eax,[0x468d70]
call dword 0x5750
mov ecx,[ebp-0xc]
mov dl,0x1
mov eax,[0x4128ec]
call dword 0xb48c
call dword 0x3464
mov eax,[ebx+0x30]
mov ecx,[eax]
call dword [ecx+0x48]
mov esi,eax
push byte +0x0
mov eax,[ebx+0x44]
push eax
mov eax,[ebx+0x40]
push eax
push esi
call dword 0x5e28
mov eax,[ebx+0x4c]
push eax
mov eax,[ebx+0x48]
push eax
push byte +0x0
push byte +0x0
push esi
call dword 0x5d78
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x441685
lea eax,[ebp-0xc]
call dword 0x3a1c
ret
jmp dword 0x3384
jmp short 0x40675
mov eax,esi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret
lea eax,[eax+0x0]
push ebp
mov ebp,esp
add esp,byte -0x24
push ebx
push esi
push edi
mov byte [ebp-0x1],0x1
mov eax,[ebp+0x8]
mov eax,[eax-0x4]
mov eax,[eax+0x30]
mov edi,[eax+0x1cc]
mov eax,[ebp+0x8]
mov edx,[eax-0x4]
mov eax,edi
call dword 0x13ed8
mov esi,eax
test esi,esi
jng 0x4070d
dec esi
mov edx,esi
mov eax,edi
call dword 0x13e7c
mov ebx,eax
cmp byte [ebx+0x57],0x0
jz 0x40709
test byte [ebx+0x50],0x40
jz 0x40709
lea edx,[ebp-0x24]
mov eax,ebx
call dword 0x3fba8
lea eax,[ebp-0x24]
push eax
mov eax,[ebp+0x8]
add eax,byte -0x14
push eax
lea eax,[ebp-0x11]
push eax
call dword 0x6148
mov eax,[ebp+0x8]
add eax,byte -0x14
push eax
lea eax,[ebp-0x11]
push eax
call dword 0x5f80
test eax,eax
jnz 0x40711
test esi,esi
jg 0x406bf
mov byte [ebp-0x1],0x0
movzx eax,byte [ebp-0x1]
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret
push ebp
mov ebp,esp
add esp,byte -0x18
push ebx
mov [ebp-0x15],cl
mov ebx,edx
mov [ebp-0x4],eax
test bl,bl
jnz 0x40741
mov eax,[ebp-0x4]
test byte [eax+0x1c],0x10
jz 0x407a1
mov eax,[ebp-0x4]
test byte [eax+0x51],0x4
jnz 0x407a1
mov eax,[ebp-0x4]
cmp dword [eax+0x30],byte +0x0
jz 0x407a1
mov eax,[ebp-0x4]
mov eax,[eax+0x30]
call dword 0x486bc
test al,al
jz 0x407a1
lea edx,[ebp-0x14]
mov eax,[ebp-0x4]
call dword 0x3fba8
cmp byte [ebp-0x15],0x0
jnz 0x40781
mov eax,[ebp-0x4]
mov eax,[eax+0x30]
test byte [eax+0x50],0x40
jnz 0x40781
push ebp
call dword 0x40690
pop ecx
test al,al
jz 0x40785
xor eax,eax
jmp short 0x40787
mov al,0x1
neg al
sbb eax,eax
push eax
lea eax,[ebp-0x14]
push eax
mov eax,[ebp-0x4]
mov eax,[eax+0x30]
call dword 0x4831c
push eax
call dword 0x6150
pop ebx
mov esp,ebp
pop ebp
ret
mov eax,eax
test byte [eax+0x50],0x40
setnz cl
movzx edx,byte [eax+0x57]
call dword 0x4071c
ret
lea eax,[eax+0x0]
push ebp
mov ebp,esp
push ecx
push ebx
mov [ebp-0x1],cl
mov byte [ebp-0x2],0x0
cmp word [eax+0x12a],byte +0x0
jz 0x407f9
movzx ecx,byte [ebp-0x1]
push ecx
mov ecx,[ebp+0x10]
push ecx
mov ecx,[ebp+0xc]
push ecx
mov ecx,[ebp+0x8]
push ecx
lea ecx,[ebp-0x2]
push ecx
mov ebx,eax
mov ecx,edx
mov edx,eax
mov eax,[ebx+0x12c]
call dword [ebx+0x128]
movzx eax,byte [ebp-0x2]
pop ebx
pop ecx
pop ebp
ret 0xc
nop
push esi
push edi
push ebp
push ecx
mov [esp],edx
mov edi,eax
mov dl,0x1
mov eax,edi
call dword 0x53e38
mov ebp,eax
call dword 0x3d034
mov esi,eax
test esi,esi
jz 0x4083b
cmp ebp,esi
jz 0x4083b
cmp edi,esi
jz 0x4083b
cmp dword [esi+0x30],byte +0x0
jnz 0x4083b
mov edx,[esp]
mov eax,esi
mov ecx,[eax]
call dword [ecx+0x78]
mov eax,[esp]
cmp dword [eax+0xc],byte +0x0
jnz 0x4087c
test ebp,ebp
jz 0x4085c
cmp edi,ebp
jz 0x4085c
mov edx,[esp]
mov eax,ebp
mov si,0xffc9
call dword 0x2dec
jmp short 0x4087c
mov eax,[esp]
mov eax,[eax+0x8]
push eax
mov ecx,[esp+0x4]
mov ecx,[ecx+0x4]
mov edx,0xb043
mov eax,edi
call dword 0x41588
mov edx,[esp]
mov [edx+0xc],eax
pop edx
pop ebp
pop edi
pop esi
ret
lea eax,[eax+0x0]
push esi
mov esi,[eax+0x30]
test esi,esi
jz 0x40896
mov eax,esi
mov edx,[eax]
call dword [edx+0x8c]
pop esi
ret
mov edx,[eax]
call dword [edx+0x84]
ret
lea eax,[eax+0x0]
push ebp
mov ebp,esp
add esp,byte -0x8
push ebx
mov [ebp-0x4],eax
mov eax,[ebp-0x4]
cmp byte [eax+0x57],0x0
jnz 0x408d1
mov eax,[ebp-0x4]
test byte [eax+0x1c],0x10
jz dword 0x4099a
mov eax,[ebp-0x4]
test byte [eax+0x51],0x4
jnz dword 0x4099a
mov eax,[ebp-0x4]
cmp dword [eax+0x30],byte +0x0
jz dword 0x4099a
mov eax,[ebp-0x4]
mov eax,[eax+0x30]
call dword 0x486bc
test al,al
jz dword 0x4099a
mov eax,[ebp-0x4]
test byte [eax+0x50],0x40
jz dword 0x40984
mov eax,[ebp-0x4]
mov eax,[eax+0x30]
call dword 0x4831c
push eax
call dword 0x5fe0
mov [ebp-0x8],eax
xor ecx,ecx
push ebp
push dword 0x44197d
push dword [fs:ecx]
mov [fs:ecx],esp
mov edx,[ebp-0x4]
mov edx,[edx+0x44]
mov ecx,edx
mov ebx,[ebp-0x4]
add ecx,[ebx+0x4c]
push ecx
mov eax,[ebp-0x4]
mov eax,[eax+0x40]
mov ecx,eax
mov ebx,[ebp-0x4]
add ecx,[ebx+0x48]
push ecx
push edx
push eax
mov eax,[ebp-0x8]
push eax
call dword 0x5d78
mov eax,[ebp-0x4]
mov eax,[eax+0x30]
mov ecx,[ebp-0x4]
mov edx,[ebp-0x8]
call dword 0x45c10
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x44199a
mov eax,[ebp-0x8]
push eax
mov eax,[ebp-0x4]
mov eax,[eax+0x30]
call dword 0x4831c
push eax
call dword 0x6250
ret
jmp dword 0x3384
jmp short 0x40967
mov eax,[ebp-0x4]
mov edx,[eax]
call dword [edx+0x80]
mov eax,[ebp-0x4]
mov edx,[eax]
call dword [edx+0x8c]
pop ebx
pop ecx
pop ecx
pop ebp
ret
nop
xor eax,eax
ret
nop
mov edx,[dword 0x468eb4]
cmp byte [edx+0xd],0x0
jz 0x409b6
cmp byte [eax+0x5f],0x0
jnz 0x409b9
xor eax,eax
ret
mov al,0x1
ret
mov edx,[dword 0x468eb4]
cmp byte [edx+0xd],0x0
jz 0x409ce
cmp byte [eax+0x5f],0x1
jz 0x409d1
xor eax,eax
ret
mov al,0x1
ret
mov edx,[dword 0x468eb4]
cmp byte [edx+0xd],0x0
jz 0x409e9
movzx eax,byte [eax+0x5f]
dec eax
sub al,0x2
jc 0x409ec
xor eax,eax
ret
mov al,0x1
ret
nop
mov edx,[dword 0x46dbfc]
mov ecx,[edx+0x8]
mov edx,[dword 0x46dbfc]
movzx edx,byte [edx+0x4]
call dword 0x40a0c
ret
lea eax,[eax+0x0]
push ebx
push esi
push edi
add esp,byte -0x14
mov esi,ecx
mov ebx,edx
mov edi,eax
mov eax,[0x46dbfc]
call dword 0x4d558
test al,al
jz 0x40a32
xor edx,edx
mov eax,[0x46dbfc]
call dword 0x4d618
mov eax,edi
mov edx,[dword 0x453010]
call dword 0x2d7c
test al,al
jz 0x40a63
cmp byte [edi+0x8f],0x1
jz 0x40a63
mov ecx,[dword 0x468d68]
mov dl,0x1
mov eax,[0x4128ec]
call dword 0xb50c
call dword 0x3464
mov eax,edi
call dword 0x415bc
cmp dword [dword 0x46dc20],byte +0x0
jz 0x40a7c
cmp dword [dword 0x46dc20],byte -0x1
jnz 0x40af1
xor eax,eax
mov [0x46dc20],eax
test byte [edi+0x54],0x1
jz 0x40ad1
push esp
call dword 0x5fd8
lea ecx,[esp+0xc]
mov edx,esp
mov eax,edi
call dword 0x3fdc8
mov eax,[esp+0xc]
mov [esp],eax
mov eax,[esp+0x10]
mov [esp+0x4],eax
movzx eax,word [esp]
mov [esp+0x8],ax
movzx eax,word [esp+0x4]
mov [esp+0xa],ax
mov eax,[esp+0x8]
push eax
xor ecx,ecx
mov edx,0x202
mov eax,edi
call dword 0x41588
test esi,esi
jnl 0x40add
mov eax,[0x46dbfc]
mov esi,[eax+0x8]
cmp dword [dword 0x46dc20],byte -0x1
jz 0x40af1
mov ecx,esi
mov edx,ebx
mov eax,edi
call dword 0x3e258
add esp,byte +0x14
pop edi
pop esi
pop ebx
ret
ret
lea eax,[eax+0x0]
cmp eax,[dword 0x46dc20]
setz al
ret
mov eax,eax
push ebp
mov ebp,esp
push ebx
push esi
mov esi,[ebp+0x8]
mov byte [esi],0x0
cmp word [eax+0xe2],byte +0x0
jz 0x40b3d
mov byte [esi],0x1
push ecx
mov ecx,[ebp+0x10]
push ecx
movzx ecx,byte [ebp+0xc]
push ecx
push esi
mov ebx,eax
mov ecx,edx
mov edx,eax
mov eax,[ebx+0xe4]
call dword [ebx+0xe0]
pop esi
pop ebx
pop ebp
ret 0xc
nop
push ebp
mov ebp,esp
push ebx
cmp word [eax+0xda],byte +0x0
jz 0x40b69
push ecx
mov ecx,[ebp+0x8]
push ecx
mov ebx,eax
mov ecx,edx
mov edx,eax
mov eax,[ebx+0xdc]
call dword [ebx+0xd8]
pop ebx
pop ebp
ret 0x4
mov eax,eax
push ebx
cmp word [eax+0x102],byte +0x0
jz 0x40b8d
mov ecx,edx
mov ebx,eax
mov edx,eax
mov eax,[ebx+0x104]
call dword [ebx+0x100]
pop ebx
ret
nop
push ebp
mov ebp,esp
push ebx
cmp word [eax+0x10a],byte +0x0
jz 0x40bb5
push ecx
mov ecx,[ebp+0x8]
push ecx
mov ebx,eax
mov ecx,edx
mov edx,eax
mov eax,[ebx+0x10c]
call dword [ebx+0x108]
pop ebx
pop ebp
ret 0x4
mov eax,eax
push ebx
push esi
push edi
push ebp
add esp,byte -0x14
mov ebx,edx
cmp dword [ebx+0x8],byte +0x0
jz 0x40bd7
mov eax,[ebx+0x8]
cmp byte [eax+0x1db],0x0
jnz 0x40c44
mov eax,[ebx+0x40]
call dword 0x40238
mov edi,eax
mov eax,[ebx+0x40]
call dword 0x40224
mov ebp,eax
mov [esp+0x10],edi
fild dword [esp+0x10]
fmul qword [ebx+0x28]
fild dword [ebx+0x10]
fsubrp st1
fstp qword [esp]
wait mov [esp+0x10],ebp
fild dword [esp+0x10]
fmul qword [ebx+0x30]
fild dword [ebx+0x14]
fsubrp st1
fstp qword [esp+0x8]
wait lea esi,[ebx+0x4c]
fld qword [esp]
call dword 0x2324
mov [esi],eax
fld qword [esp+0x8]
call dword 0x2324
mov [esi+0x4],eax
add edi,[esi]
mov [esi+0x8],edi
add ebp,[esi+0x4]
mov [esi+0xc],ebp
lea edx,[ebx+0x4c]
mov eax,ebx
mov ecx,[eax]
call dword [ecx+0x2c]
jmp short 0x40c85
lea eax,[ebx+0x4c]
push eax
mov eax,[ebx+0x8]
call dword 0x4831c
push eax
call dword 0x6110
mov eax,[ebx+0x8]
cmp byte [eax+0x1db],0x0
jz 0x40c85
cmp dword [eax+0x1b0],byte +0x0
jz 0x40c85
movzx edx,byte [ebx+0x5c]
push edx
lea edx,[ebx+0x4c]
push edx
mov eax,[eax+0x1b0]
mov ecx,[ebx+0x60]
mov edx,[ebx+0x40]
mov ebx,[eax]
call dword [ebx+0x24]
add esp,byte +0x14
pop ebp
pop edi
pop esi
pop ebx
ret
lea eax,[eax+0x0]
push ebp
mov ebp,esp
push esi
mov esi,edx
mov edx,esi
mov si,0xffd1
call dword 0x2dec
pop esi
pop ebp
ret 0x4
mov eax,eax
push ebp
mov ebp,esp
push ebx
cmp word [eax+0xfa],byte +0x0
jz 0x40ccd
push ecx
mov ecx,[ebp+0x8]
push ecx
mov ebx,eax
mov ecx,edx
mov edx,eax
mov eax,[ebx+0xfc]
call dword [ebx+0xf8]
pop ebx
pop ebp
ret 0x4
mov eax,eax
push ebx
cmp word [eax+0xf2],byte +0x0
jz 0x40cf1
mov ecx,edx
mov ebx,eax
mov edx,eax
mov eax,[ebx+0xf4]
call dword [ebx+0xf0]
pop ebx
ret
nop
push ebx
push esi
push edi
push ebp
mov ebx,edx
mov ebp,eax
mov edi,[ebx+0x8]
mov eax,[edi]
push eax
mov eax,[edi+0x4]
push eax
mov eax,[edi+0x8]
push eax
movzx ecx,byte [edi+0xd]
movzx edx,byte [edi+0xc]
mov eax,ebp
mov si,0xffd5
call dword 0x2dec
and eax,byte +0x7f
mov [ebx+0xc],eax
pop ebp
pop edi
pop esi
pop ebx
ret
push ebp
mov ebp,esp
add esp,byte -0xc
push ebx
push esi
push edi
mov esi,[ebp+0x8]
lea edi,[ebp-0x9]
movsd
movsd
mov ebx,ecx
mov [ebp-0x1],dl
mov edi,eax
mov byte [ebp-0xa],0x0
cmp word [edi+0x142],byte +0x0
jz 0x40d69
push ebx
lea eax,[ebp-0x9]
push eax
lea eax,[ebp-0xa]
push eax
movzx ecx,byte [ebp-0x1]
mov edx,edi
mov eax,[edi+0x144]
call dword [edi+0x140]
cmp byte [ebp-0xa],0x0
jnz 0x40dec
add [edi+0x98],ebx
jmp short 0x40ddc
cmp dword [edi+0x98],byte +0x0
setl bl
mov eax,[edi+0x98]
cdq
xor eax,edx
sub eax,edx
sub eax,byte +0x78
mov [edi+0x98],eax
test bl,bl
jz 0x40dc7
cmp dword [edi+0x98],byte +0x0
jz 0x40db0
mov eax,[edi+0x98]
neg eax
mov [edi+0x98],eax
lea ecx,[ebp-0x9]
movzx edx,byte [ebp-0x1]
mov eax,edi
mov si,0xffe1
call dword 0x2dec
mov [ebp-0xa],al
jmp short 0x40ddc
lea ecx,[ebp-0x9]
movzx edx,byte [ebp-0x1]
mov eax,edi
mov si,0xffe0
call dword 0x2dec
mov [ebp-0xa],al
mov eax,[edi+0x98]
cdq
xor eax,edx
sub eax,edx
cmp eax,byte +0x78
jnl 0x40d77
movzx eax,byte [ebp-0xa]
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret 0x4
lea eax,[eax+0x0]
push ebx
push esi
push edi
add esp,byte -0xc
mov esi,ecx
lea edi,[esp+0x1]
movsd
movsd
mov [esp],dl
mov byte [esp+0x9],0x0
cmp word [eax+0x14a],byte +0x0
jz 0x40e3b
lea edx,[esp+0x1]
push edx
lea edx,[esp+0xd]
push edx
mov ebx,eax
movzx ecx,byte [esp+0x8]
mov edx,eax
mov eax,[ebx+0x14c]
call dword [ebx+0x148]
movzx eax,byte [esp+0x9]
add esp,byte +0xc
pop edi
pop esi
pop ebx
ret
nop
push ebx
push esi
push edi
add esp,byte -0xc
mov esi,ecx
lea edi,[esp+0x1]
movsd
movsd
mov [esp],dl
mov byte [esp+0x9],0x0
cmp word [eax+0x152],byte +0x0
jz 0x40e87
lea edx,[esp+0x1]
push edx
lea edx,[esp+0xd]
push edx
mov ebx,eax
movzx ecx,byte [esp+0x8]
mov edx,eax
mov eax,[ebx+0x154]
call dword [ebx+0x150]
movzx eax,byte [esp+0x9]
add esp,byte +0xc
pop edi
pop esi
pop ebx
ret
nop
push ebp
mov ebp,esp
add esp,byte -0x20
push ebx
push esi
push edi
mov [ebp-0x1],cl
mov esi,edx
mov eax,esi
mov edx,[eax]
call dword [edx+0x38]
mov ebx,eax
cmp byte [ebp-0x1],0x0
jz 0x40ebf
push esi
add esi,byte +0x64
lea edi,[ebp-0x20]
movsd
movsd
movsd
movsd
pop esi
jmp short 0x40ecb
push esi
add esi,byte +0x4c
lea edi,[ebp-0x20]
movsd
movsd
movsd
movsd
pop esi
call dword 0x5ff0
mov [ebp-0x8],eax
push dword 0x402
push byte +0x0
mov eax,[ebp-0x8]
push eax
call dword 0x5fe8
mov [ebp-0xc],eax
xor eax,eax
push ebp
push dword 0x441faf
push dword [fs:eax]
mov [fs:eax],esp
mov eax,[esi+0x48]
call dword 0x20488
push eax
mov eax,[ebp-0xc]
push eax
call dword 0x5dd0
mov [ebp-0x10],eax
push dword 0x5a0049
push ebx
mov eax,[ebp-0x18]
mov esi,[ebp-0x20]
sub eax,esi
sub eax,ebx
push eax
mov edi,[ebp-0x1c]
push edi
mov eax,esi
add eax,ebx
push eax
mov eax,[ebp-0xc]
push eax
call dword 0x5d98
push dword 0x5a0049
mov eax,[ebp-0x14]
sub eax,edi
sub eax,ebx
push eax
push ebx
mov eax,edi
add eax,ebx
push eax
mov eax,[ebp-0x18]
sub eax,ebx
push eax
mov eax,[ebp-0xc]
push eax
call dword 0x5d98
push dword 0x5a0049
push ebx
mov eax,[ebp-0x18]
sub eax,[ebp-0x20]
sub eax,ebx
push eax
mov eax,[ebp-0x14]
sub eax,ebx
push eax
push esi
mov eax,[ebp-0xc]
push eax
call dword 0x5d98
push dword 0x5a0049
mov eax,[ebp-0x14]
sub eax,[ebp-0x1c]
sub eax,ebx
push eax
push ebx
push edi
push esi
mov eax,[ebp-0xc]
push eax
call dword 0x5d98
mov eax,[ebp-0x10]
push eax
mov eax,[ebp-0xc]
push eax
call dword 0x5dd0
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x441fb6
mov eax,[ebp-0xc]
push eax
mov eax,[ebp-0x8]
push eax
call dword 0x6250
ret
jmp dword 0x3384
jmp short 0x40fa1
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret
lea eax,[eax+0x0]
push esi
xor ecx,ecx
mov si,0xffe8
call dword 0x2dec
pop esi
ret
mov eax,eax
push esi
mov cl,0x1
mov si,0xffe8
call dword 0x2dec
pop esi
ret
mov eax,eax
push ebx
push esi
push edi
push ebp
add esp,byte -0x10
mov ebp,edx
mov [esp],eax
mov edi,[ebp+0x8]
mov esi,[edi+0x8]
mov eax,esi
mov edx,[dword 0x43b6dc]
call dword 0x2d7c
mov ebx,eax
cmp byte [dword 0x46dc28],0x0
jz 0x4101e
test bl,bl
jnz 0x4101e
mov eax,esi
mov edx,[dword 0x43b5c0]
call dword 0x2da0
mov esi,[eax+0x40]
lea ecx,[esp+0x5]
mov edx,edi
mov eax,[esp]
call dword 0x3fdc8
movzx eax,byte [ebp+0x4]
sub al,0x3
jc 0x4103b
jz 0x41093
jmp dword 0x410c8
mov byte [esp+0x4],0x1
test bl,bl
jz 0x41067
mov eax,[esp+0x9]
push eax
movzx eax,byte [ebp+0x4]
push eax
lea eax,[esp+0xc]
push eax
mov ecx,[esp+0x11]
mov edx,esi
mov eax,[edi+0xc]
mov si,0xffc3
call dword 0x2dec
jmp short 0x41089
mov eax,[esp+0x9]
push eax
movzx eax,byte [ebp+0x4]
push eax
lea eax,[esp+0xc]
push eax
mov ecx,[esp+0x11]
mov edx,esi
mov eax,[esp+0xc]
mov si,0xffde
call dword 0x2dec
movzx eax,byte [esp+0x4]
mov [ebp+0xc],eax
jmp short 0x410c8
test bl,bl
jz 0x410b0
mov eax,[esp+0x9]
push eax
mov ecx,[esp+0x9]
mov edx,esi
mov eax,[edi+0xc]
mov si,0xffb5
call dword 0x2dec
jmp short 0x410c8
mov eax,[esp+0x9]
push eax
mov ecx,[esp+0x9]
mov edx,esi
mov eax,[esp+0x4]
mov si,0xffcb
call dword 0x2dec
add esp,byte +0x10
pop ebp
pop edi
pop esi
pop ebx
ret
push ebp
mov ebp,esp
add esp,byte -0x34
push ebx
push esi
push edi
mov [ebp-0x4],ecx
mov edi,edx
mov ebx,eax
test edi,edi
jz 0x410ed
cmp edi,byte -0x1
jnz dword 0x411aa
mov eax,[ebx+0x94]
test eax,eax
jz 0x41134
cmp byte [eax+0x1db],0x0
jz 0x41134
cmp dword [eax+0x1b0],byte +0x0
jz 0x41134
lea ecx,[ebp-0x1c]
mov eax,[eax+0x1b0]
mov edx,ebx
mov esi,[eax]
call dword [esi+0x14]
push byte +0x2
lea eax,[ebp-0x1c]
push eax
push byte +0x0
mov eax,[ebx+0x94]
call dword 0x4831c
push eax
call dword 0x61e0
jmp short 0x4116e
lea ecx,[ebp-0x24]
mov edx,[ebx+0x44]
mov eax,[ebx+0x40]
call dword 0x12a04
mov eax,[ebp-0x24]
mov [ebp-0x1c],eax
mov eax,[ebp-0x20]
mov [ebp-0x18],eax
mov esi,[ebx+0x30]
test esi,esi
jz 0x4116e
lea ecx,[ebp-0x24]
lea edx,[ebp-0x1c]
mov eax,esi
call dword 0x3fd18
mov eax,[ebp-0x24]
mov [ebp-0x1c],eax
mov eax,[ebp-0x20]
mov [ebp-0x18],eax
mov eax,ebx
call dword 0x40224
push eax
lea eax,[ebp-0x34]
push eax
mov eax,ebx
call dword 0x40238
mov ecx,eax
mov edx,[ebp-0x18]
mov eax,[ebp-0x1c]
call dword 0x12a54
lea esi,[ebp-0x34]
lea edi,[ebp-0x1c]
movsd
movsd
movsd
movsd
lea edx,[ebp-0x1c]
mov eax,ebx
call dword 0x412b0
mov [ebp-0x5],al
jmp dword 0x412a3
mov eax,ebx
call dword 0x415bc
cmp dword [ebx+0x94],byte +0x0
jz 0x411d5
mov eax,[ebx+0x94]
mov ecx,ebx
mov edx,edi
mov si,0xffbd
call dword 0x2dec
test al,al
jnz 0x411d5
xor eax,eax
jmp short 0x411d7
mov al,0x1
mov [ebp-0x5],al
cmp byte [ebp-0x5],0x0
jz dword 0x412a3
mov ecx,ebx
mov dl,0x1
mov eax,[0x43b6dc]
call dword 0x3d5fc
mov [ebp-0xc],eax
xor edx,edx
push ebp
push dword 0x44229c
push dword [fs:edx]
mov [fs:edx],esp
mov eax,[ebx+0x94]
test eax,eax
jz 0x41216
call dword 0x4831c
mov esi,eax
jmp short 0x41218
xor esi,esi
lea edx,[ebp-0x1c]
mov eax,ebx
call dword 0x3fba8
test esi,esi
jz 0x41234
push byte +0x2
lea eax,[ebp-0x1c]
push eax
push byte +0x0
push esi
call dword 0x61e0
mov eax,[ebp-0xc]
mov [eax+0x8],edi
mov eax,[ebp-0xc]
movzx edx,byte [ebp+0x8]
mov [eax+0x5c],dl
mov eax,[ebp-0xc]
mov edx,[ebp-0x4]
mov [eax+0x60],edx
mov eax,[ebp-0xc]
push edi
lea edi,[eax+0x4c]
lea esi,[ebp-0x1c]
movsd
movsd
movsd
movsd
pop edi
push byte +0x1
lea eax,[ebp-0x1c]
push eax
mov eax,edi
call dword 0x4831c
push eax
push byte +0x0
call dword 0x61e0
mov eax,[ebp-0x18]
push eax
mov ecx,[ebp-0x1c]
mov edx,[ebp-0xc]
mov eax,edi
mov si,0xffb5
call dword 0x2dec
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x4422a3
mov eax,[ebp-0xc]
call dword 0x2bf0
ret
jmp dword 0x3384
jmp short 0x41293
movzx eax,byte [ebp-0x5]
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret 0x4
push ebx
push esi
push edi
add esp,byte -0x20
mov esi,edx
lea edi,[esp]
movsd
movsd
movsd
movsd
mov edi,eax
mov ebx,[edi+0x94]
test ebx,ebx
jz 0x412e2
mov ecx,edi
xor edx,edx
mov eax,ebx
mov si,0xffbd
call dword 0x2dec
test al,al
jnz 0x412e2
xor eax,eax
jmp short 0x412e4
mov al,0x1
mov ebx,eax
test bl,bl
jz 0x4133a
mov edx,esp
mov eax,edi
call dword 0x426d8
mov esi,eax
test esi,esi
jz 0x4132b
mov eax,esi
call dword 0x3fc48
push eax
lea eax,[esp+0x14]
push eax
mov eax,esi
call dword 0x3fc04
mov ecx,eax
xor edx,edx
xor eax,eax
call dword 0x12a2c
lea ecx,[esp+0x10]
mov edx,esi
mov eax,edi
mov si,0xffcc
call dword 0x2dec
jmp short 0x4133a
mov ecx,esp
mov edx,esi
mov eax,edi
mov si,0xffcc
call dword 0x2dec
mov eax,ebx
add esp,byte +0x20
pop edi
pop esi
pop ebx
ret
nop
push esi
mov esi,eax
mov eax,esi
mov si,0xffee
call dword 0x2dec
pop esi
ret
mov al,0x1
ret
nop
push ebx
push ecx
mov byte [esp],0x1
cmp word [eax+0xb2],byte +0x0
jz 0x41380
push ecx
lea ecx,[esp+0x4]
push ecx
mov ecx,edx
mov ebx,eax
mov edx,eax
mov eax,[ebx+0xb4]
call dword [ebx+0xb0]
movzx eax,byte [esp]
pop edx
pop ebx
ret
nop
push ebx
push esi
add esp,byte -0x10
mov [esp+0x4],ecx
mov [esp],edx
mov esi,eax
cmp byte [esi+0x5b],0x5
jz 0x413ea
mov eax,[esp]
mov eax,[eax]
mov [esp+0x8],eax
mov eax,[esp+0x4]
mov eax,[eax]
mov [esp+0xc],eax
lea ecx,[esp+0xc]
lea edx,[esp+0x8]
mov eax,esi
mov ebx,[eax]
call dword [ebx+0x34]
movzx edx,byte [esi+0x5b]
mov ecx,edx
test cl,cl
jz 0x413d0
add cl,0xfd
sub cl,0x2
jnc 0x413d9
mov ecx,[esp]
mov ebx,[esp+0x8]
mov [ecx],ebx
sub dl,0x3
jnc 0x413ec
mov edx,[esp+0x4]
mov ecx,[esp+0xc]
mov [edx],ecx
jmp short 0x413ec
mov al,0x1
add esp,byte +0x10
pop esi
pop ebx
ret
mov eax,eax
push ebx
push esi
push edi
push ecx
mov [esp],ecx
mov edi,edx
mov esi,eax
mov ecx,[esp]
mov edx,edi
mov eax,esi
mov ebx,[eax]
call dword [ebx+0x30]
mov ebx,eax
test bl,bl
jz 0x4141d
mov ecx,[esp]
mov edx,edi
mov eax,esi
call dword 0x414b4
mov eax,ebx
pop edx
pop edi
pop esi
pop ebx
ret
push ebp
mov ebp,esp
push ebx
cmp word [eax+0xba],byte +0x0
jz 0x4144d
push ecx
mov ecx,[ebp+0xc]
push ecx
mov ecx,[ebp+0x8]
push ecx
mov ecx,edx
mov ebx,eax
mov edx,eax
mov eax,[ebx+0xbc]
call dword [ebx+0xb8]
pop ebx
pop ebp
ret 0x8
mov eax,eax
push ebx
push esi
add esp,byte -0x8
mov ebx,edx
mov esi,eax
push ebx
call dword 0x5fd8
mov ecx,esp
mov edx,ebx
mov eax,esi
call dword 0x3fdc8
mov eax,[esp]
mov [ebx],eax
mov eax,[esp+0x4]
mov [ebx+0x4],eax
pop ecx
pop edx
pop esi
pop ebx
ret
nop
push esi
test byte [eax+0x50],0x4
jz 0x414a9
mov esi,[edx]
cmp esi,0x204
jz 0x414ad
cmp esi,0x205
jz 0x414ad
cmp esi,0x200
jz 0x414ad
cmp esi,0x206
jz 0x414ad
xor eax,eax
pop esi
ret
mov al,0x1
pop esi
ret
lea eax,[eax+0x0]
push ebx
push esi
push edi
add esp,byte -0x10
mov esi,ecx
mov ebx,edx
mov edx,[eax+0x74]
mov edx,[edx+0x14]
test edx,edx
jna 0x414cd
mov [esp],edx
jmp short 0x414d2
xor edx,edx
mov [esp],edx
mov edx,[eax+0x74]
mov edx,[edx+0x10]
test edx,edx
jna 0x414e2
mov [esp+0x4],edx
jmp short 0x414e8
xor edx,edx
mov [esp+0x4],edx
mov edx,[eax+0x74]
mov edx,[edx+0xc]
test edx,edx
jna 0x414f8
mov [esp+0x8],edx
jmp short 0x414fe
xor edx,edx
mov [esp+0x8],edx
mov edx,[eax+0x74]
mov edx,[edx+0x8]
test edx,edx
jna 0x4150e
mov [esp+0xc],edx
jmp short 0x41514
xor edx,edx
mov [esp+0xc],edx
lea edx,[esp+0x8]
push edx
lea edx,[esp+0x10]
push edx
lea ecx,[esp+0xc]
lea edx,[esp+0x8]
mov edi,[eax]
call dword [edi+0x38]
cmp dword [esp+0x8],byte +0x0
jng 0x41542
mov eax,[ebx]
cmp eax,[esp+0x8]
jng 0x41542
mov eax,[esp+0x8]
mov [ebx],eax
jmp short 0x41554
cmp dword [esp],byte +0x0
jng 0x41554
mov eax,[ebx]
cmp eax,[esp]
jnl 0x41554
mov eax,[esp]
mov [ebx],eax
cmp dword [esp+0xc],byte +0x0
jng 0x4156b
mov eax,[esi]
cmp eax,[esp+0xc]
jng 0x4156b
mov eax,[esp+0xc]
mov [esi],eax
jmp short 0x41580
cmp dword [esp+0x4],byte +0x0
jng 0x41580
mov eax,[esi]
cmp eax,[esp+0x4]
jnl 0x41580
mov eax,[esp+0x4]
mov [esi],eax
add esp,byte +0x10
pop edi
pop esi
pop ebx
ret
nop
push ebp
mov ebp,esp
add esp,byte -0x10
push ebx
mov [ebp-0x10],edx
mov [ebp-0xc],ecx
mov edx,[ebp+0x8]
mov [ebp-0x8],edx
xor edx,edx
mov [ebp-0x4],edx
test eax,eax
jz 0x415af
lea edx,[ebp-0x10]
mov ebx,eax
mov eax,[ebx+0x3c]
call dword [ebx+0x38]
mov eax,[ebp-0x4]
pop ebx
mov esp,ebp
pop ebp
ret 0x4
lea eax,[eax+0x0]
push ebx
mov ebx,eax
mov eax,ebx
mov edx,[eax]
call dword [edx+0x54]
test al,al
jz 0x415de
mov eax,[ebx+0x4c]
mov [ebx+0xa0],eax
mov eax,[ebx+0x48]
mov [ebx+0x9c],eax
pop ebx
ret
cmp dword [ebx+0x94],byte +0x0
jz 0x4162c
cmp byte [ebx+0x90],0x2
jz 0x415ff
mov eax,[ebx+0x94]
movzx eax,byte [eax+0x5b]
dec eax
sub al,0x2
jnc 0x4160a
mov eax,[ebx+0x4c]
mov [ebx+0xa8],eax
jmp short 0x4162c
cmp byte [ebx+0x90],0x1
jz 0x41623
mov eax,[ebx+0x94]
movzx eax,byte [eax+0x5b]
add al,0xfd
sub al,0x2
jnc 0x4162c
mov eax,[ebx+0x48]
mov [ebx+0xa4],eax
pop ebx
ret
mov eax,eax
push ebx
mov ebx,eax
mov eax,[edx]
mov [ebx+0x40],eax
mov eax,[edx+0x4]
mov [ebx+0x44],eax
mov eax,[edx+0x8]
sub eax,[edx]
mov [ebx+0x48],eax
mov eax,[edx+0xc]
sub eax,[edx+0x4]
mov [ebx+0x4c],eax
mov eax,ebx
call dword 0x3f794
mov eax,ebx
call dword 0x42ff8
pop ebx
ret
nop
ret
lea eax,[eax+0x0]
push ebp
mov ebp,esp
add esp,0xfffffee8
push ebx
push esi
push edi
mov ebx,edx
mov esi,eax
test byte [esi+0x1c],0x10
jz 0x416b2
xor edx,edx
mov eax,esi
call dword 0x53e38
mov [ebp-0x14],eax
cmp dword [ebp-0x14],byte +0x0
jz 0x416b2
mov eax,[ebp-0x14]
cmp dword [eax+0x298],byte +0x0
jz 0x416b2
mov ecx,ebx
mov eax,[ebp-0x14]
mov eax,[eax+0x298]
mov edx,esi
mov edi,[eax]
call dword [edi+0x24]
test al,al
jnz dword 0x41922
mov eax,[ebx]
cmp eax,0x100
jc 0x416f4
cmp eax,0x109
ja 0x416f4
mov dl,0x1
mov eax,esi
call dword 0x53e38
mov [ebp-0x14],eax
cmp dword [ebp-0x14],byte +0x0
jz dword 0x41919
mov ecx,ebx
mov edx,esi
mov eax,[ebp-0x14]
mov edi,[eax]
call dword [edi+0x100]
test al,al
jnz dword 0x41922
jmp dword 0x41919
mov eax,[ebx]
cmp eax,0x200
jc dword 0x41902
cmp eax,0x20a
ja dword 0x41902
test byte [esi+0x50],0x80
jnz 0x41726
sub eax,0x203
jz 0x41723
sub eax,byte +0x3
jz 0x41723
sub eax,byte +0x3
jnz 0x41726
sub dword [ebx],byte +0x2
mov eax,[ebx]
add eax,0xfffffe00
cmp eax,byte +0x7
ja dword 0x418a2
jmp dword [eax*4+0x44273d]
pop ebp
daa
inc esp
add [esi+0x28],bh
inc esp
add [ebx+0x7e004428],bl
sub [eax+eax-0x5e],al
sub [eax+eax-0x5e],al
sub [eax+eax-0x5e],al
sub [eax+eax+0x72],al
daa
inc esp
add [ebx-0x72cb5e35],cl
inc esi
add [ebx-0x17297500],cl
jmp eax
add [eax],eax
jmp dword 0x41919
test byte [esi+0x52],0x8
jz dword 0x41919
movzx eax,word [dword 0x44292c]
and ax,[esi+0x54]
movzx edx,word [dword 0x442930]
cmp dx,ax
jnz dword 0x41919
mov eax,[0x46dbfc]
call dword 0x4d54c
test al,al
jnz dword 0x41919
mov eax,[0x46dbfc]
call dword 0x4d4d8
mov byte [ebp-0x15],0x0
mov eax,[0x46dbfc]
mov edi,[eax+0x28]
test edi,edi
jz 0x41840
mov eax,esi
mov edx,[dword 0x43d11c]
call dword 0x2d7c
test al,al
jz 0x417ee
mov eax,esi
call dword 0x4831c
mov edx,eax
mov eax,edi
mov ecx,esi
mov edi,[eax]
call dword [edi+0xe0]
mov [ebp-0x15],al
jmp short 0x41840
cmp dword [esi+0x30],byte +0x0
jz 0x4180f
mov eax,[esi+0x30]
call dword 0x4831c
mov edx,eax
mov eax,edi
mov ecx,esi
mov edi,[eax]
call dword [edi+0xe0]
mov [ebp-0x15],al
jmp short 0x41840
xor edx,edx
mov eax,esi
call dword 0x53e38
mov [ebp-0x14],eax
cmp dword [ebp-0x14],byte +0x0
jz 0x41840
mov eax,[ebp-0x14]
call dword 0x4831c
mov edx,eax
mov eax,[0x46dbfc]
mov eax,[eax+0x28]
mov ecx,esi
mov edi,[eax]
call dword [edi+0xe0]
mov [ebp-0x15],al
cmp byte [ebp-0x15],0x0
jz 0x4185e
mov dword [ebx+0xc],0x1
mov eax,[0x468d34]
mov eax,[eax]
call dword 0x5f9c4
jmp dword 0x41919
mov eax,[0x46dbfc]
cmp dword [eax+0x28],byte +0x0
jz dword 0x41919
xor edx,edx
mov eax,[0x46dbfc]
call dword 0x4d618
jmp dword 0x41919
cmp byte [esi+0x5d],0x1
jnz 0x41894
mov eax,esi
mov si,0xffed
call dword 0x2dec
jmp dword 0x41922
or word [esi+0x54],byte +0x1
jmp short 0x41919
and word [esi+0x54],byte -0x2
jmp short 0x41919
mov eax,[0x46dbfc]
cmp byte [eax+0x20],0x0
jz 0x41919
mov eax,[0x46dbfc]
cmp dword [eax+0x1c],byte +0x0
jz 0x41919
mov eax,[ebx]
mov edx,[dword 0x46dbfc]
cmp eax,[edx+0x1c]
jnz 0x41919
lea eax,[ebp-0x115]
push eax
call dword 0x6040
mov eax,[ebx]
mov [ebp-0x10],eax
lea eax,[ebp-0x115]
call dword 0x53d38
mov [ebp-0xc],al
movzx eax,word [ebx+0x4]
mov [ebp-0xa],ax
mov eax,[ebx+0x8]
mov [ebp-0x8],eax
lea edx,[ebp-0x10]
mov eax,esi
mov si,0xffc9
call dword 0x2dec
jmp short 0x41922
cmp eax,0xb00b
jnz 0x41919
mov edx,[ebx+0x8]
push edx
mov ecx,[ebx+0x4]
mov edx,eax
mov eax,esi
call dword 0x3fe24
mov edx,ebx
mov eax,esi
mov ecx,[eax]
call dword [ecx-0x14]
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret
add [eax],al
add [eax],al
adc al,[eax]
add [eax],al
add [eax],al
add [ebx+0x56],dl
push edi
mov ebx,edx
mov esi,eax
mov eax,[ebx]
sub eax,byte +0xc
jz 0x4198c
dec eax
jz 0x4194a
dec eax
jz 0x41972
jmp short 0x419b1
mov eax,[esi+0x64]
test eax,eax
jz 0x41955
mov edi,eax
jmp short 0x4195a
mov edi,0x4429b8
mov ecx,[ebx+0x4]
dec ecx
mov eax,[ebx+0x8]
mov edx,edi
call dword 0x8458
call dword 0x83cc
mov [ebx+0xc],eax
jmp short 0x419b1
mov edi,[esi+0x64]
test edi,edi
jnz 0x41980
xor eax,eax
mov [ebx+0xc],eax
jmp short 0x419b1
mov eax,edi
call dword 0x83cc
mov [ebx+0xc],eax
jmp short 0x419b1
mov eax,[ebx+0x8]
call dword 0x8668
mov edi,eax
mov eax,[esi+0x64]
call dword 0x8694
mov [esi+0x64],edi
mov eax,[ebx+0x8]
push eax
mov ecx,[ebx+0x4]
mov edx,[ebx]
mov eax,esi
call dword 0x3fe24
pop edi
pop esi
pop ebx
ret
add [eax],al
add [eax],al
add [eax],al
add [ebx+0x56],dl
mov esi,edx
mov ebx,eax
mov eax,esi
call dword 0x17d14
mov [ebx+0x5e],al
pop esi
pop ebx
ret
nop
movzx eax,byte [eax+0x5e]
xchg eax,edx
call dword 0x1a1a4
ret
nop
push ebp
mov ebp,esp
mov eax,[ebp+0x8]
mov eax,[eax-0x4]
mov eax,[eax+0x20]
test eax,eax
jz 0x41a01
mov edx,[ebp+0x8]
movzx eax,byte [eax+0x5e]
mov edx,[ebp+0x8]
mov edx,[edx-0x8]
cmp al,[edx+0x5e]
setnz al
pop ebp
ret
mov eax,[ebp+0x8]
mov eax,[eax-0x8]
movzx eax,byte [eax+0x5e]
pop ebp
ret
lea eax,[eax+0x0]
push ebp
mov ebp,esp
push ebx
sub al,0x1
jc 0x41a33
jz dword 0x41aad
dec al
jz dword 0x41b27
dec al
jz dword 0x41b9e
jmp dword 0x41c15
mov eax,[ebp+0x8]
mov eax,[eax-0x4]
mov ebx,[eax+0x20]
test ebx,ebx
jz 0x41a57
mov eax,[ebp+0x8]
mov eax,[ebx+0x180]
mov edx,[ebp+0x8]
mov edx,[edx-0x8]
cmp eax,[edx+0x180]
jnz 0x41aa8
mov eax,[ebp+0x8]
mov eax,[eax-0x4]
cmp dword [eax+0x20],byte +0x0
jnz 0x41aa1
mov eax,[ebp+0x8]
mov eax,[eax-0x8]
cmp byte [eax+0x5b],0x0
jnz 0x41a8a
mov eax,[ebp+0x8]
mov eax,[eax-0x8]
movzx eax,byte [eax+0x61]
and al,[dword 0x442c1c]
movzx edx,byte [dword 0x442c20]
cmp dl,al
jnz 0x41aa1
mov eax,[ebp+0x8]
mov eax,[eax-0x8]
mov eax,[eax+0x180]
mov edx,[ebp+0x8]
mov edx,[edx-0x8]
cmp eax,[edx+0x40]
jnz 0x41aa8
xor eax,eax
jmp dword 0x41c17
mov al,0x1
pop ebx
pop ebp
ret
mov eax,[ebp+0x8]
mov eax,[eax-0x4]
mov ebx,[eax+0x20]
test ebx,ebx
jz 0x41ad1
mov eax,[ebp+0x8]
mov eax,[ebx+0x184]
mov edx,[ebp+0x8]
mov edx,[edx-0x8]
cmp eax,[edx+0x184]
jnz 0x41b22
mov eax,[ebp+0x8]
mov eax,[eax-0x4]
cmp dword [eax+0x20],byte +0x0
jnz 0x41b1b
mov eax,[ebp+0x8]
mov eax,[eax-0x8]
cmp byte [eax+0x5b],0x0
jnz 0x41b04
mov eax,[ebp+0x8]
mov eax,[eax-0x8]
movzx eax,byte [eax+0x61]
and al,[dword 0x442c24]
movzx edx,byte [dword 0x442c20]
cmp dl,al
jnz 0x41b1b
mov eax,[ebp+0x8]
mov eax,[eax-0x8]
mov eax,[eax+0x184]
mov edx,[ebp+0x8]
mov edx,[edx-0x8]
cmp eax,[edx+0x44]
jnz 0x41b22
xor eax,eax
jmp dword 0x41c17
mov al,0x1
pop ebx
pop ebp
ret
mov eax,[ebp+0x8]
mov eax,[eax-0x4]
mov ebx,[eax+0x20]
test ebx,ebx
jz 0x41b4b
mov eax,[ebp+0x8]
mov eax,[ebx+0x188]
mov edx,[ebp+0x8]
mov edx,[edx-0x8]
cmp eax,[edx+0x188]
jnz 0x41b99
mov eax,[ebp+0x8]
mov eax,[eax-0x4]
cmp dword [eax+0x20],byte +0x0
jnz 0x41b95
mov eax,[ebp+0x8]
mov eax,[eax-0x8]
cmp byte [eax+0x5b],0x0
jnz 0x41b7e
mov eax,[ebp+0x8]
mov eax,[eax-0x8]
movzx eax,byte [eax+0x61]
and al,[dword 0x442c28]
movzx edx,byte [dword 0x442c28]
cmp dl,al
jnz 0x41b95
mov eax,[ebp+0x8]
mov eax,[eax-0x8]
mov eax,[eax+0x188]
mov edx,[ebp+0x8]
mov edx,[edx-0x8]
cmp eax,[edx+0x48]
jnz 0x41b99
xor eax,eax
jmp short 0x41c17
mov al,0x1
pop ebx
pop ebp
ret
mov eax,[ebp+0x8]
mov eax,[eax-0x4]
mov ebx,[eax+0x20]
test ebx,ebx
jz 0x41bc2
mov eax,[ebp+0x8]
mov eax,[ebx+0x18c]
mov edx,[ebp+0x8]
mov edx,[edx-0x8]
cmp eax,[edx+0x18c]
jnz 0x41c10
mov eax,[ebp+0x8]
mov eax,[eax-0x4]
cmp dword [eax+0x20],byte +0x0
jnz 0x41c0c
mov eax,[ebp+0x8]
mov eax,[eax-0x8]
cmp byte [eax+0x5b],0x0
jnz 0x41bf5
mov eax,[ebp+0x8]
mov eax,[eax-0x8]
movzx eax,byte [eax+0x61]
and al,[dword 0x442c2c]
movzx edx,byte [dword 0x442c2c]
cmp dl,al
jnz 0x41c0c
mov eax,[ebp+0x8]
mov eax,[eax-0x8]
mov eax,[eax+0x18c]
mov edx,[ebp+0x8]
mov edx,[edx-0x8]
cmp eax,[edx+0x4c]
jnz 0x41c10
xor eax,eax
jmp short 0x41c17
mov al,0x1
pop ebx
pop ebp
ret
xor eax,eax
pop ebx
pop ebp
ret
add [eax],al
add [eax],eax
add [eax],al
add [eax],al
add [eax],al
add al,[eax]
add [eax],al
add eax,0xa000000
add [eax],al
add [ebp-0x75],dl
in al,dx
add esp,byte -0x8
push ebx
push esi
mov [ebp-0x4],edx
mov [ebp-0x8],eax
lea ebx,[ebp-0x8]
mov eax,[ebx]
push eax
push dword 0x4429bc
mov eax,[ebx]
push eax
push dword 0x4429d0
push ebp
call dword 0x419dc
pop ecx
mov ecx,eax
mov edx,0x442d58
mov eax,[ebp-0x4]
mov esi,[eax]
call dword [esi+0x4]
mov eax,[ebx]
push eax
push dword 0x4440b4
mov eax,[ebx]
push eax
push dword 0x44404c
mov eax,[ebx]
test byte [eax+0x1c],0x2
jnz 0x41c8c
push ebp
xor eax,eax
call dword 0x41a10
pop ecx
test al,al
jnz 0x41c90
xor ecx,ecx
jmp short 0x41c92
mov cl,0x1
mov edx,0x442d6c
mov eax,[ebp-0x4]
mov esi,[eax]
call dword [esi+0x4]
mov eax,[ebx]
push eax
push dword 0x444084
mov eax,[ebx]
push eax
push dword 0x44402c
mov eax,[ebx]
test byte [eax+0x1c],0x2
jnz 0x41cc4
push ebp
mov al,0x1
call dword 0x41a10
pop ecx
test al,al
jnz 0x41cc8
xor ecx,ecx
jmp short 0x41cca
mov cl,0x1
mov edx,0x442d84
mov eax,[ebp-0x4]
mov esi,[eax]
call dword [esi+0x4]
mov eax,[ebx]
push eax
push dword 0x44405c
mov eax,[ebx]
push eax
push dword 0x444074
mov eax,[ebx]
test byte [eax+0x1c],0x2
jnz 0x41cfc
push ebp
mov al,0x2
call dword 0x41a10
pop ecx
test al,al
jnz 0x41d00
xor ecx,ecx
jmp short 0x41d02
mov cl,0x1
mov edx,0x442d98
mov eax,[ebp-0x4]
mov esi,[eax]
call dword [esi+0x4]
mov eax,[ebx]
push eax
push dword 0x44409c
mov eax,[ebx]
push eax
push dword 0x44403c
mov eax,[ebx]
test byte [eax+0x1c],0x2
jnz 0x41d34
push ebp
mov al,0x3
call dword 0x41a10
pop ecx
test al,al
jnz 0x41d38
xor ecx,ecx
jmp short 0x41d3a
mov cl,0x1
mov edx,0x442db0
mov eax,[ebp-0x4]
mov ebx,[eax]
call dword [ebx+0x4]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
ret
add [eax],al
add bh,bh
db 0xff
db 0xff
dec dword [ecx]
add [eax],al
add [ecx+0x73],cl
inc ebx
outsd
outsb
jz 0x41dd1
outsd
insb
add [eax],al
add bh,bh
db 0xff
db 0xff
dec dword [eax+eax]
add [eax],al
inc ebp
js 0x41ddf
insb
imul esp,[ebx+0x69],dword 0x66654c74
jz 0x41d79
add [eax],al
add bh,bh
db 0xff
db 0xff
dec dword [ebx]
add [eax],al
add [ebp+0x78],al
jo 0x41df4
imul esp,[ebx+0x69],dword 0x706f5474
add bh,bh
db 0xff
db 0xff
dec dword [dword 0x45000000]
js 0x41e0b
insb
imul esp,[ebx+0x69],dword 0x64695774
jz 0x41e0d
add [eax],al
add bh,bh
db 0xff
db 0xff
dec dword [esi]
add [eax],al
add [ebp+0x78],al
jo 0x41e20
imul esp,[ebx+0x69],dword 0x69654874
push dword 0x53000074
mov ebx,eax
cmp word [ebx+0x112],byte +0x0
jz 0x41dfa
mov eax,ebx
mov edx,[eax]
call dword [edx+0x3c]
test eax,eax
jz 0x41dfa
mov eax,ebx
mov edx,[eax]
call dword [edx+0x3c]
mov eax,[eax+0x40]
cmp eax,[ebx+0x110]
jz 0x41dfa
mov edx,ebx
mov eax,[ebx+0x114]
call dword [ebx+0x110]
pop ebx
ret
test byte [ebx+0x1c],0x10
jnz 0x41e12
cmp dword [ebx+0x6c],byte +0x0
jz 0x41e12
mov edx,ebx
mov eax,[ebx+0x6c]
mov ecx,[eax]
call dword [ecx+0x18]
jmp short 0x41e2a
cmp word [ebx+0x112],byte +0x0
jz 0x41e2a
mov edx,ebx
mov eax,[ebx+0x114]
call dword [ebx+0x110]
pop ebx
ret
push ebx
cmp word [eax+0x11a],byte +0x0
jz 0x41e47
mov ebx,eax
mov edx,eax
mov eax,[ebx+0x11c]
call dword [ebx+0x118]
pop ebx
ret
lea eax,[eax+0x0]
push ebp
mov ebp,esp
push ecx
push ebx
mov [ebp-0x1],cl
cmp word [eax+0xc2],byte +0x0
jz 0x41e7d
movzx ecx,byte [ebp-0x1]
push ecx
mov ecx,[ebp+0xc]
push ecx
mov ecx,[ebp+0x8]
push ecx
mov ebx,eax
mov ecx,edx
mov edx,eax
mov eax,[ebx+0xc4]
call dword [ebx+0xc0]
pop ebx
pop ecx
pop ebp
ret 0x8
nop
push ebp
mov ebp,esp
add esp,byte -0x8
push ebx
push esi
push edi
mov ebx,ecx
mov esi,edx
mov edi,eax
test byte [edi+0x51],0x10
jnz 0x41eff
cmp dword [edi+0x48],0x8000
jg 0x41eab
cmp dword [edi+0x4c],0x8000
jng 0x41eda
lea edx,[ebp-0x8]
mov eax,edi
call dword 0x41454
mov eax,[ebp-0x8]
push eax
mov eax,[ebp-0x4]
push eax
movzx eax,word [esi+0x4]
call dword 0x53ca0
mov ecx,eax
or cl,[ebp+0x8]
mov edx,ebx
mov eax,edi
mov si,0xffd4
call dword 0x2dec
jmp short 0x41eff
movsx eax,word [esi+0x8]
push eax
movsx eax,word [esi+0xa]
push eax
movzx eax,word [esi+0x4]
call dword 0x53ca0
mov ecx,eax
or cl,[ebp+0x8]
mov edx,ebx
mov eax,edi
mov si,0xffd4
call dword 0x2dec
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
ret 0x4
push ebx
push esi
mov esi,edx
mov ebx,eax
mov edx,ebx
mov eax,ebx
call dword 0x3fdf4
mov edx,esi
mov eax,ebx
mov ecx,[eax]
call dword [ecx-0x10]
test byte [ebx+0x50],0x2
jz 0x41f2f
mov dl,0x1
mov eax,ebx
call dword 0x40500
test byte [ebx+0x50],0x8
jz 0x41f3a
or word [ebx+0x54],byte +0x2
movzx eax,byte [dword 0x442f50]
push eax
mov edx,esi
xor ecx,ecx
mov eax,ebx
call dword 0x41e84
pop esi
pop ebx
ret
add [eax],al
add [eax],al
push ebx
push esi
mov esi,edx
mov ebx,eax
mov edx,ebx
mov eax,ebx
call dword 0x3fdf4
mov edx,esi
mov eax,ebx
mov ecx,[eax]
call dword [ecx-0x10]
pop esi
pop ebx
ret
nop
push ebx
push esi
push edi
mov edi,edx
mov ebx,eax
mov edx,ebx
mov eax,ebx
call dword 0x3fdf4
mov edx,edi
mov eax,ebx
mov ecx,[eax]
call dword [ecx-0x10]
test byte [ebx+0x50],0x2
jz 0x41f98
mov dl,0x1
mov eax,ebx
call dword 0x40500
test byte [ebx+0x50],0x8
jz 0x41fa9
mov eax,ebx
mov si,0xffe9
call dword 0x2dec
movzx eax,byte [dword 0x442fc0]
push eax
mov edx,edi
xor ecx,ecx
mov eax,ebx
call dword 0x41e84
pop edi
pop esi
pop ebx
ret
inc eax
add [eax],al
add [ebx+0x8080],cl
add bl,al
nop
push ebx
push esi
push edi
push ebp
add esp,byte -0x10
mov ebp,ecx
mov edi,edx
mov esi,eax
xor ebx,ebx
mov eax,[edi]
mov [esp],eax
mov eax,[ebp+0x0]
mov [esp+0x4],eax
lea ecx,[esp+0x4]
mov edx,esp
mov eax,esi
call dword 0x413f4
test al,al
jz 0x4205d
mov eax,[esp]
mov [esp+0x8],eax
mov eax,[esp+0x4]
mov [esp+0xc],eax
cmp byte [esi+0x5c],0x0
jz 0x4204a
lea ecx,[esp+0xc]
lea edx,[esp+0x8]
mov eax,esi
call dword 0x41388
test al,al
jz 0x42033
mov eax,[esp+0x8]
cmp eax,[esp]
jnz 0x42033
mov eax,[esp+0xc]
cmp eax,[esp+0x4]
jz 0x4204a
lea ecx,[esp+0xc]
lea edx,[esp+0x8]
mov eax,esi
call dword 0x413f4
test al,al
jnz 0x4204a
xor ebx,ebx
jmp short 0x4204c
mov bl,0x1
test bl,bl
jz 0x4205d
mov eax,[esp+0x8]
mov [edi],eax
mov eax,[esp+0xc]
mov [ebp+0x0],eax
mov eax,ebx
add esp,byte +0x10
pop ebp
pop edi
pop esi
pop ebx
ret
nop
push ebx
push esi
mov esi,edx
mov ebx,eax
mov edx,esi
mov eax,ebx
mov ecx,[eax]
call dword [ecx-0x10]
movzx eax,byte [dword 0x443090]
push eax
mov edx,esi
mov cl,0x1
mov eax,ebx
call dword 0x41e84
pop esi
pop ebx
ret
add [eax],al
add [eax],al
add [eax],al
add [ebx+0x56],dl
mov esi,edx
mov ebx,eax
mov edx,esi
mov eax,ebx
mov ecx,[eax]
call dword [ecx-0x10]
movzx eax,byte [dword 0x4430bc]
push eax
mov edx,esi
mov cl,0x1
mov eax,ebx
call dword 0x41e84
pop esi
pop ebx
ret
add [eax],al
add [eax+0x0],al
add [eax],al
push ebx
push esi
mov esi,edx
mov ebx,eax
mov edx,esi
mov eax,ebx
mov ecx,[eax]
call dword [ecx-0x10]
movzx eax,byte [dword 0x4430e8]
push eax
mov edx,esi
mov cl,0x2
mov eax,ebx
call dword 0x41e84
pop esi
pop ebx
ret
add [eax],al
add [eax],al
add [eax],al
add [ebx+0x56],dl
mov esi,edx
mov ebx,eax
mov edx,esi
mov eax,ebx
mov ecx,[eax]
call dword [ecx-0x10]
movzx eax,byte [dword 0x443114]
push eax
mov edx,esi
mov cl,0x2
mov eax,ebx
call dword 0x41e84
pop esi
pop ebx
ret
add [eax],al
add [eax+0x0],al
add [eax],al
push ebp
mov ebp,esp
push ecx
push ebx
mov [ebp-0x1],dl
cmp word [eax+0xca],byte +0x0
jz 0x42143
push ecx
mov edx,[ebp+0x8]
push edx
mov ebx,eax
mov edx,eax
movzx ecx,byte [ebp-0x1]
mov eax,[ebx+0xcc]
call dword [ebx+0xc8]
pop ebx
pop ecx
pop ebp
ret 0x4
lea eax,[eax+0x0]
push ebx
push esi
add esp,byte -0x8
mov esi,edx
mov ebx,eax
mov edx,esi
mov eax,ebx
mov ecx,[eax]
call dword [ecx-0x10]
test byte [ebx+0x51],0x10
jnz 0x421bf
cmp dword [ebx+0x48],0x8000
jg 0x42176
cmp dword [ebx+0x4c],0x8000
jng 0x421a0
mov edx,esp
mov eax,ebx
call dword 0x41454
mov eax,[esp+0x4]
push eax
movzx eax,word [esi+0x4]
call dword 0x53ca0
mov edx,eax
mov ecx,[esp+0x4]
mov eax,ebx
mov si,0xffd3
call dword 0x2dec
jmp short 0x421bf
movsx eax,word [esi+0xa]
push eax
movzx eax,word [esi+0x4]
call dword 0x53ca0
mov edx,eax
movsx ecx,word [esi+0x8]
mov eax,ebx
mov si,0xffd3
call dword 0x2dec
pop ecx
pop edx
pop esi
pop ebx
ret
push ebp
mov ebp,esp
push ecx
push ebx
mov [ebp-0x1],cl
cmp word [eax+0xd2],byte +0x0
jz 0x421f5
movzx ecx,byte [ebp-0x1]
push ecx
mov ecx,[ebp+0xc]
push ecx
mov ecx,[ebp+0x8]
push ecx
mov ebx,eax
mov ecx,edx
mov edx,eax
mov eax,[ebx+0xd4]
call dword [ebx+0xd0]
pop ebx
pop ecx
pop ebp
ret 0x8
nop
push ebx
push esi
push edi
mov ebx,ecx
mov esi,edx
mov edi,eax
test byte [edi+0x51],0x10
jnz 0x4222d
movsx eax,word [esi+0x8]
push eax
movsx eax,word [esi+0xa]
push eax
movzx eax,word [esi+0x4]
call dword 0x53ca0
mov ecx,eax
mov edx,ebx
mov eax,edi
mov si,0xffd2
call dword 0x2dec
pop edi
pop esi
pop ebx
ret
lea eax,[eax+0x0]
push ebx
push esi
push edi
add esp,byte -0x1c
mov edi,edx
mov ebx,eax
mov edx,edi
mov eax,ebx
mov ecx,[eax]
call dword [ecx-0x10]
test byte [ebx+0x50],0x2
jz 0x42256
xor edx,edx
mov eax,ebx
call dword 0x40500
test byte [ebx+0x54],0x2
jz 0x422a4
and word [ebx+0x54],byte -0x3
mov eax,[edi+0x8]
mov [esp],eax
movsx eax,word [esp]
mov [esp+0x4],eax
movsx eax,word [esp+0x2]
mov [esp+0x8],eax
push dword [esp+0x8]
push dword [esp+0x8]
lea edx,[esp+0x14]
mov eax,ebx
mov ecx,[eax]
call dword [ecx+0x44]
lea eax,[esp+0x14]
push eax
call dword 0x6220
test eax,eax
jz 0x422a4
mov eax,ebx
mov si,0xffeb
call dword 0x2dec
mov edx,edi
xor ecx,ecx
mov eax,ebx
call dword 0x421fc
add esp,byte +0x1c
pop edi
pop esi
pop ebx
ret
mov eax,eax
push ebx
push esi
mov esi,edx
mov ebx,eax
mov edx,esi
mov eax,ebx
mov ecx,[eax]
call dword [ecx-0x10]
mov edx,esi
mov cl,0x1
mov eax,ebx
call dword 0x421fc
pop esi
pop ebx
ret
lea eax,[eax+0x0]
push ebx
push esi
mov esi,edx
mov ebx,eax
mov edx,esi
mov eax,ebx
mov ecx,[eax]
call dword [ecx-0x10]
mov edx,esi
mov cl,0x2
mov eax,ebx
call dword 0x421fc
pop esi
pop ebx
ret
lea eax,[eax+0x0]
push ebx
push esi
push edi
mov ebx,edx
mov edi,eax
mov eax,[0x46dbfc]
cmp byte [eax+0x20],0x0
jnz 0x42322
mov eax,[0x46dbfc]
mov byte [eax+0x20],0x1
mov edx,0x68
mov eax,[0x46dbfc]
call dword 0x4d638
movzx eax,word [ebx+0x4]
call dword 0x53ca0
mov [ebx+0x4],al
mov edx,ebx
mov eax,edi
mov si,0xffc9
call dword 0x2dec
cmp dword [ebx+0xc],byte +0x0
jnz 0x4234a
mov edx,ebx
mov eax,edi
mov ecx,[eax]
call dword [ecx-0x10]
pop edi
pop esi
pop ebx
ret
mov eax,eax
push esi
mov esi,eax
mov eax,esi
mov ecx,[eax]
call dword [ecx-0x10]
mov eax,esi
call dword 0x404f0
test al,al
jz 0x42386
xor edx,edx
mov eax,esi
call dword 0x40500
test byte [esi+0x54],0x1
jz 0x4238b
push byte -0x1
xor ecx,ecx
mov edx,0x202
mov eax,esi
call dword 0x41588
pop esi
ret
and word [esi+0x54],byte -0x2
pop esi
ret
lea eax,[eax+0x0]
push ebx
push esi
mov esi,edx
mov ebx,eax
mov edx,esi
mov eax,ebx
mov ecx,[eax]
call dword [ecx-0x10]
movzx eax,word [dword 0x443438]
and ax,[ebx+0x1c]
movzx edx,word [dword 0x44343c]
cmp dx,ax
jnz 0x42434
mov eax,[ebx+0x74]
mov edx,[eax+0xc]
test edx,edx
jna 0x423cd
cmp edx,[ebx+0x48]
jnl 0x423cd
mov edx,[ebx+0x48]
mov [eax+0xc],edx
jmp short 0x423df
mov edx,[eax+0x14]
test edx,edx
jna 0x423df
cmp edx,[ebx+0x48]
jng 0x423df
mov edx,[ebx+0x48]
mov [eax+0x14],edx
mov edx,[eax+0x8]
test edx,edx
jna 0x423f3
cmp edx,[ebx+0x4c]
jnl 0x423f3
mov edx,[ebx+0x4c]
mov [eax+0x8],edx
jmp short 0x42405
mov edx,[eax+0x10]
test edx,edx
jna 0x42405
cmp edx,[ebx+0x4c]
jng 0x42405
mov edx,[ebx+0x4c]
mov [eax+0x10],edx
mov eax,[esi+0x8]
test eax,eax
jz 0x42434
cmp dword [ebx+0x94],byte +0x0
jz 0x42434
test byte [ebx+0x55],0x4
jnz 0x42434
test byte [eax+0x18],0x1
jnz 0x42434
cmp dword [eax+0x10],byte +0x0
jz 0x42434
cmp dword [eax+0x14],byte +0x0
jz 0x42434
mov eax,ebx
call dword 0x415bc
pop esi
pop ebx
ret
add [ebx],al
add [eax],al
add [eax],al
add [eax],al
add dh,dh
inc eax
sbb al,0x10
jz 0x4244c
test byte [eax+0x51],0x4
jz 0x42465
cmp byte [eax+0x57],0x0
jz 0x42458
test byte [eax+0x50],0x40
jnz 0x4245c
xor ecx,ecx
jmp short 0x4245e
mov cl,0x1
mov dl,0x1
call dword 0x4071c
ret
mov eax,eax
push esi
mov esi,eax
mov eax,esi
mov edx,[eax]
call dword [edx+0x80]
pop esi
ret
nop
push esi
mov esi,eax
mov eax,esi
mov edx,[eax]
call dword [edx+0x80]
pop esi
ret
nop
push esi
mov esi,eax
mov eax,esi
mov edx,[eax]
call dword [edx+0x80]
pop esi
ret
nop
push ebp
mov ebp,esp
mov edx,[ebp+0x8]
mov edx,[edx-0x4]
cmp eax,[edx+0x70]
jz 0x424cd
mov edx,[ebp+0x8]
mov edx,[edx-0x4]
mov [edx+0x70],eax
mov eax,[ebp+0x8]
mov eax,[eax-0x4]
mov byte [eax+0x5a],0x0
push byte +0x0
mov eax,[ebp+0x8]
mov eax,[eax-0x4]
xor ecx,ecx
mov edx,0xb00d
call dword 0x41588
pop ebp
ret
nop
push ebp
mov ebp,esp
push ecx
mov [ebp-0x4],eax
mov eax,[ebp-0x4]
cmp byte [eax+0x5a],0x0
jz 0x42509
cmp dword [edx+0x4],byte +0x0
jz 0x424f2
push ebp
mov eax,[edx+0x8]
call dword 0x42498
pop ecx
jmp short 0x42502
push ebp
mov eax,[ebp-0x4]
mov eax,[eax+0x30]
mov eax,[eax+0x70]
call dword 0x42498
pop ecx
mov eax,[ebp-0x4]
mov byte [eax+0x5a],0x1
pop ecx
pop ebp
ret
push esi
push edi
mov esi,eax
cmp byte [esi+0x60],0x0
jz 0x4252c
mov edi,[esi+0x30]
test edi,edi
jz 0x42528
movzx edx,byte [edi+0x5f]
mov eax,esi
mov ecx,[eax]
call dword [ecx+0x74]
mov byte [esi+0x60],0x1
pop edi
pop esi
ret
nop
push ebx
push esi
push edi
add esp,byte -0xc
mov ebx,edx
mov edi,eax
xor eax,eax
mov [ebx+0xc],eax
mov eax,[ebx+0x8]
mov [esp],eax
movsx eax,word [esp]
mov [esp+0x4],eax
movsx eax,word [esp+0x2]
mov [esp+0x8],eax
lea eax,[esp+0x4]
push eax
movsx ecx,word [ebx+0x6]
movzx edx,byte [ebx+0x4]
mov eax,edi
mov si,0xffe2
call dword 0x2dec
test al,al
jz 0x4257b
mov dword [ebx+0xc],0x1
jmp short 0x42598
mov esi,[edi+0x30]
test esi,esi
jz 0x42598
mov eax,[ebx+0x8]
push eax
mov ecx,[ebx+0x4]
mov edx,0xb043
mov eax,esi
call dword 0x41588
mov [ebx+0xc],eax
add esp,byte +0xc
pop edi
pop esi
pop ebx
ret
nop
push esi
mov esi,eax
mov eax,[0x468eb4]
cmp byte [eax+0xd],0x0
jz 0x425be
cmp dword [edx+0x4],byte +0x0
jnz 0x425be
mov eax,esi
mov edx,[eax]
call dword [edx+0x80]
pop esi
ret
push ebx
mov ebx,eax
cmp byte [ebx+0x8e],0x0
jz 0x425f9
test byte [ebx+0x1c],0x10
setnz al
mov edx,[ebx+0x30]
test byte [edx+0x1c],0x10
setnz dl
cmp al,dl
jnz 0x425f9
mov eax,[ebx+0x30]
movzx edx,byte [eax+0x8d]
mov eax,ebx
call dword 0x403e8
mov byte [ebx+0x8e],0x1
pop ebx
ret
nop
push ebx
mov ebx,eax
cmp byte [ebx+0x59],0x0
jz 0x42628
cmp dword [edx+0x4],byte +0x0
jz 0x42617
mov edx,[edx+0x8]
mov eax,ebx
call dword 0x4038c
jmp short 0x42624
mov eax,[ebx+0x30]
mov edx,[eax+0x68]
mov eax,ebx
call dword 0x4038c
mov byte [ebx+0x59],0x1
pop ebx
ret
mov eax,eax
push ebx
mov ebx,eax
cmp byte [ebx+0x56],0x0
jz 0x4264d
mov eax,[0x468e8c]
mov eax,[eax]
mov edx,[eax+0x84]
mov eax,ebx
call dword 0x4038c
mov byte [ebx+0x56],0x1
pop ebx
ret
nop
mov dword [edx+0xc],0x1
ret
push ebx
push esi
mov esi,edx
mov ebx,eax
mov eax,[ebx+0x30]
test eax,eax
jz 0x42672
push ebx
xor ecx,ecx
mov edx,0xb013
call dword 0x41588
cmp dword [esi+0x8],byte +0x0
jnz 0x42690
cmp word [ebx+0x13a],byte +0x0
jz 0x42690
mov edx,ebx
mov eax,[ebx+0x13c]
call dword [ebx+0x138]
pop esi
pop ebx
ret
nop
push ebx
push esi
mov esi,edx
mov ebx,eax
mov eax,[ebx+0x30]
test eax,eax
jz 0x426ae
push ebx
xor ecx,ecx
mov edx,0xb014
call dword 0x41588
cmp dword [esi+0x8],byte +0x0
jnz 0x426cc
cmp word [ebx+0x132],byte +0x0
jz 0x426cc
mov edx,ebx
mov eax,[ebx+0x134]
call dword [ebx+0x130]
pop esi
pop ebx
ret
nop
xor eax,eax
mov [edx+0xc],eax
ret
mov eax,eax
push ebx
push esi
push edi
add esp,byte -0x10
mov esi,edx
lea edi,[esp]
movsd
movsd
movsd
movsd
mov ebx,eax
xor esi,esi
mov eax,ebx
mov edx,[eax]
call dword [edx+0x58]
test eax,eax
jz 0x42752
mov eax,ebx
mov edx,[eax]
call dword [edx+0x58]
mov edi,eax
mov eax,ebx
call dword 0x2ac8
cmp edi,eax
jz 0x42752
mov eax,ebx
mov edx,[eax]
call dword [edx+0x58]
mov ecx,[dword 0x468d34]
mov ecx,[ecx]
mov dl,0x1
call dword [eax+0x2c]
mov esi,eax
mov edx,[esp+0x4]
mov eax,esi
call dword 0x3f94c
mov edx,[esp]
mov eax,esi
call dword 0x3f918
mov edx,[esp+0x8]
sub edx,[esp]
mov eax,esi
call dword 0x3fc1c
mov edx,[esp+0xc]
sub edx,[esp+0x4]
mov eax,esi
call dword 0x3fc60
mov eax,esi
add esp,byte +0x10
pop edi
pop esi
pop ebx
ret
nop
push ebp
mov ebp,esp
add esp,byte -0x20
push ebx
push esi
push edi
mov edi,[ebp+0x8]
add edi,byte -0x4
lea ecx,[ebp-0x10]
mov eax,[edi]
mov edx,[eax+0x44]
mov eax,[edi]
mov eax,[eax+0x40]
call dword 0x12a04
lea edx,[ebp-0x10]
lea ecx,[ebp-0x8]
mov eax,[edi]
mov eax,[eax+0x30]
call dword 0x3fd18
mov eax,[ebp+0x8]
mov eax,[eax-0x8]
mov eax,[eax+0x8]
lea ebx,[eax+0x4c]
mov eax,[ebx+0xc]
sub eax,[ebx+0x4]
mov edx,[edi]
mov esi,[edx+0x30]
add eax,[esi+0x4c]
mov edx,[edi]
sub eax,[edx+0x4c]
push eax
lea eax,[ebp-0x20]
push eax
mov ecx,[ebx+0x8]
sub ecx,[ebx]
add ecx,[esi+0x48]
mov eax,[edi]
sub ecx,[eax+0x48]
mov edx,[esi+0x44]
add edx,[ebx+0x4]
sub edx,[ebp-0x4]
mov eax,[esi+0x40]
add eax,[ebx]
sub eax,[ebp-0x8]
call dword 0x12a54
lea edx,[ebp-0x20]
mov eax,esi
call dword 0x3fbc8
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret
lea eax,[eax+0x0]
push ebp
mov ebp,esp
add esp,byte -0x8
push ebx
mov [ebp-0x8],edx
mov [ebp-0x4],eax
mov eax,[ebp-0x4]
mov edx,[eax]
call dword [edx+0x54]
test al,al
jz 0x42813
mov eax,[ebp-0x4]
cmp dword [eax+0x30],byte +0x0
jz 0x42813
push ebp
call dword 0x4275c
pop ecx
jmp short 0x42843
mov eax,[ebp-0x8]
mov eax,[eax+0x8]
lea edx,[eax+0x4c]
mov eax,[ebp-0x4]
call dword 0x426d8
mov ebx,eax
test ebx,ebx
jz 0x42843
mov eax,[ebp-0x8]
mov eax,[eax+0x8]
mov [eax+0x8],ebx
mov eax,ebx
call dword 0x4831c
mov edx,[ebp-0x8]
mov edx,[edx+0x8]
mov [edx+0xc],eax
pop ebx
pop ecx
pop ecx
pop ebp
ret
push ebp
mov ebp,esp
push byte +0x0
push byte +0x0
push ebx
push esi
push edi
mov ebx,ecx
mov edi,edx
mov esi,eax
xor eax,eax
push ebp
push dword 0x443938
push dword [fs:eax]
mov [fs:eax],esp
mov eax,edi
mov edx,[dword 0x45160c]
call dword 0x2d7c
test al,al
jz dword 0x4291d
test bl,bl
jz 0x428a6
lea edx,[ebp-0x4]
mov eax,esi
call dword 0x40298
cmp dword [ebp-0x4],byte +0x0
jz 0x428a6
lea edx,[ebp-0x8]
mov eax,esi
call dword 0x40298
mov eax,[ebp-0x8]
mov edx,[esi+0x8]
call dword 0x3e44
jnz 0x428b0
mov edx,[edi+0x64]
mov eax,esi
call dword 0x402c8
test bl,bl
jz 0x428bf
mov eax,esi
mov edx,[eax]
call dword [edx+0x50]
cmp al,0x1
jnz 0x428ca
movzx edx,byte [edi+0x6a]
mov eax,esi
mov ecx,[eax]
call dword [ecx+0x68]
test bl,bl
jz 0x428d7
cmp dword [esi+0x84],byte +0x0
jnz 0x428e5
lea eax,[esi+0x84]
mov edx,[edi+0x7c]
call dword 0x3a70
test bl,bl
jz 0x428ef
cmp byte [esi+0x57],0x1
jnz 0x428fd
movzx edx,byte [edi+0x86]
mov eax,esi
call dword 0x401b8
test bl,bl
jz 0x4290b
cmp word [esi+0x112],byte +0x0
jnz 0x4291d
mov eax,[edi+0x40]
mov [esi+0x110],eax
mov eax,[edi+0x44]
mov [esi+0x114],eax
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x44393f
lea eax,[ebp-0x8]
mov edx,0x2
call dword 0x3a40
ret
jmp dword 0x3384
jmp short 0x4292a
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
ret
mov eax,eax
push esi
push edi
mov edi,edx
mov esi,eax
mov eax,esi
mov edx,[eax]
call dword [edx+0x3c]
cmp edi,eax
jnz 0x42968
xor ecx,ecx
mov edx,edi
mov eax,esi
mov si,0xffef
call dword 0x2dec
pop edi
pop esi
ret
nop
mov eax,[0x43b9cc]
ret
mov eax,eax
push ebx
push esi
mov ebx,eax
mov esi,[ebx+0x6c]
test esi,esi
jz 0x4298f
mov eax,esi
mov edx,[eax]
call dword [edx+0x20]
test al,al
jz 0x4298f
xor eax,eax
pop esi
pop ebx
ret
mov al,0x1
pop esi
pop ebx
ret
push ebx
push esi
mov ebx,eax
mov esi,[ebx+0x6c]
test esi,esi
jz 0x429af
mov eax,esi
mov edx,[eax]
call dword [edx+0x28]
test al,al
jz 0x429af
xor eax,eax
pop esi
pop ebx
ret
mov al,0x1
pop esi
pop ebx
ret
push ebx
push esi
mov ebx,eax
mov esi,[ebx+0x6c]
test esi,esi
jz 0x429cf
mov eax,esi
mov edx,[eax]
call dword [edx+0x38]
test al,al
jz 0x429cf
xor eax,eax
pop esi
pop ebx
ret
mov al,0x1
pop esi
pop ebx
ret
push ebx
push esi
mov ebx,eax
mov esi,[ebx+0x6c]
test esi,esi
jz 0x429ef
mov eax,esi
mov edx,[eax]
call dword [edx+0x30]
test al,al
jz 0x429ef
xor eax,eax
pop esi
pop ebx
ret
mov al,0x1
pop esi
pop ebx
ret
push ebx
push esi
mov ebx,eax
mov esi,[ebx+0x6c]
test esi,esi
jz 0x42a0f
mov eax,esi
mov edx,[eax]
call dword [edx+0x44]
test al,al
jz 0x42a0f
xor eax,eax
pop esi
pop ebx
ret
mov al,0x1
pop esi
pop ebx
ret
push ebx
push esi
mov ebx,eax
mov esi,[ebx+0x6c]
test esi,esi
jz 0x42a2f
mov eax,esi
mov edx,[eax]
call dword [edx+0x8]
test al,al
jz 0x42a2f
xor eax,eax
pop esi
pop ebx
ret
mov al,0x1
pop esi
pop ebx
ret
push ebx
push esi
mov ebx,eax
mov eax,ebx
call dword 0x1aa04
mov eax,ebx
mov edx,[eax]
call dword [edx+0x3c]
test eax,eax
jz 0x42a60
mov eax,ebx
mov edx,[eax]
call dword [edx+0x3c]
mov edx,eax
mov cl,0x1
mov eax,ebx
mov si,0xffef
call dword 0x2dec
mov eax,ebx
call dword 0x3f794
pop esi
pop ebx
ret
mov eax,eax
push ebp
mov ebp,esp
push byte +0x0
push ebx
push esi
push edi
mov esi,edx
mov ebx,eax
xor eax,eax
push ebp
push dword 0x443b09
push dword [fs:eax]
mov [fs:eax],esp
mov eax,esi
mov edx,[dword 0x45160c]
call dword 0x2d7c
test al,al
jz 0x42aea
mov eax,ebx
mov edx,[eax]
call dword [edx+0x50]
mov edx,eax
mov edi,esi
mov eax,edi
call dword 0x511b8
mov edx,[ebx+0x84]
mov eax,edi
call dword 0x512f4
lea edx,[ebp-0x4]
mov eax,ebx
call dword 0x40298
mov edx,[ebp-0x4]
mov eax,edi
call dword 0x51050
movzx edx,byte [ebx+0x57]
mov eax,edi
call dword 0x51414
push dword [ebx+0x114]
push dword [ebx+0x110]
mov eax,edi
mov edx,[eax]
call dword [edx+0x34]
jmp short 0x42af3
mov edx,esi
mov eax,ebx
call dword 0x14560
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x443b10
lea eax,[ebp-0x4]
call dword 0x3a1c
ret
jmp dword 0x3384
jmp short 0x42b00
pop edi
pop esi
pop ebx
pop ecx
pop ebp
ret
mov eax,eax
push ebp
mov ebp,esp
push ecx
push ebx
push esi
mov [ebp-0x4],eax
xor ebx,ebx
mov ecx,edx
test ecx,ecx
jng 0x42b4b
mov esi,0x1
mov edx,[ebp-0x4]
add edx,byte +0x8
fld qword [edx]
mov eax,[ebp-0x4]
fcomp qword [eax+ebx*8]
fstsw ax
sahf
jnc 0x42b44
mov ebx,esi
inc esi
add edx,byte +0x8
dec ecx
jnz 0x42b34
mov eax,ebx
pop esi
pop ebx
pop ecx
pop ebp
ret
mov eax,eax
push ebx
push esi
push edi
push ebp
add esp,byte -0x38
mov esi,edx
lea edi,[esp]
movsd
movsd
xor ebx,ebx
mov esi,[eax+0x48]
mov edi,[eax+0x4c]
mov eax,[esp]
test eax,eax
jg 0x42b78
mov bl,0x3
jmp dword 0x42bf9
cmp esi,eax
jg 0x42b80
mov bl,0x4
jmp short 0x42bf9
mov edx,[esp+0x4]
test edx,edx
jg 0x42b8c
mov bl,0x1
jmp short 0x42bf9
cmp edi,edx
jg 0x42b94
mov bl,0x2
jmp short 0x42bf9
mov ebp,edx
sub edi,edx
mov [esp+0x8],eax
sub esi,eax
fild dword [esp+0x8]
fstp qword [esp+0xc]
wait mov [esp+0x2c],esi
fild dword [esp+0x2c]
fstp qword [esp+0x14]
wait mov [esp+0x30],ebp
fild dword [esp+0x30]
fstp qword [esp+0x1c]
wait mov [esp+0x34],edi
fild dword [esp+0x34]
fstp qword [esp+0x24]
wait lea eax,[esp+0xc]
mov edx,0x3
call dword 0x42b18
sub eax,byte +0x1
jc 0x42beb
jz 0x42bef
dec eax
jz 0x42bf3
dec eax
jz 0x42bf7
jmp short 0x42bf9
mov bl,0x3
jmp short 0x42bf9
mov bl,0x4
jmp short 0x42bf9
mov bl,0x1
jmp short 0x42bf9
mov bl,0x2
mov eax,ebx
add esp,byte +0x38
pop ebp
pop edi
pop esi
pop ebx
ret
nop
push ebx
mov ebx,eax
cmp dword [ebx+0x94],byte +0x0
jz 0x42c28
mov eax,ebx
mov edx,[eax]
call dword [edx+0x58]
mov edx,eax
mov eax,[ebx+0x94]
call dword 0x2d7c
test al,al
jnz 0x42c2c
xor eax,eax
pop ebx
ret
mov al,0x1
pop ebx
ret
mov eax,[eax+0xac]
ret
nop
push ebx
test byte [eax+0x1c],0x1
jnz 0x42c55
mov edx,[eax+0x48]
push edx
mov edx,[eax+0x4c]
push edx
mov ecx,[eax+0x44]
mov edx,[eax+0x40]
mov ebx,[eax]
call dword [ebx+0x88]
pop ebx
ret
nop
push ebx
push esi
push edi
mov edi,eax
mov ebx,edx
mov eax,edi
mov si,0xffc7
call dword 0x2dec
test al,al
jz 0x42c88
mov eax,ebx
and eax,byte +0x2
cmp eax,byte +0x2
jnz 0x42c7d
and ebx,byte -0x3
jmp short 0x42c88
mov eax,ebx
and eax,byte +0x1
dec eax
jz 0x42c88
or ebx,byte +0x2
mov eax,edi
call dword 0x42c98
or ebx,eax
mov eax,ebx
pop edi
pop esi
pop ebx
ret
nop
push ebx
mov ebx,eax
mov eax,ebx
call dword 0x409a4
test al,al
jz 0x42cad
mov eax,0x20000
pop ebx
ret
xor eax,eax
pop ebx
ret
lea eax,[eax+0x0]
mov edx,[eax+0x6c]
test edx,edx
jz 0x42cc2
mov eax,edx
mov edx,[eax]
call dword [edx+0x1c]
ret
nop
push ebx
push esi
push edi
mov edi,edx
mov ebx,eax
mov esi,[ebx+0x6c]
test esi,esi
jz 0x42ced
mov eax,[edi+0x8]
lea edx,[eax+0x38]
mov eax,esi
mov ecx,[eax]
call dword [ecx+0x84]
test al,al
jnz 0x42ced
mov dword [edi+0xc],0x1
pop edi
pop esi
pop ebx
ret
lea eax,[eax+0x0]
push ebx
push esi
push edi
push ebp
add esp,byte -0x38
mov ebp,edx
mov edi,eax
cmp dword [ebp+0xc],byte +0x0
jnz dword 0x42e30
test byte [edi+0x1c],0x10
jz 0x42d1d
mov edx,ebp
mov eax,edi
mov ecx,[eax]
call dword [ecx-0x10]
jmp dword 0x42e30
mov eax,[ebp+0x8]
mov [esp+0x11],eax
movsx eax,word [esp+0x11]
mov [esp+0x15],eax
movsx eax,word [esp+0x13]
mov [esp+0x19],eax
mov eax,[esp+0x15]
mov [esp],eax
mov eax,[esp+0x19]
mov [esp+0x4],eax
mov eax,esp
call dword 0x12a7c
test al,al
jz 0x42d61
mov eax,[esp]
mov [esp+0x8],eax
mov eax,[esp+0x4]
mov [esp+0xc],eax
jmp short 0x42d9d
lea ecx,[esp+0x8]
mov edx,esp
mov eax,edi
call dword 0x3fdc8
push dword [esp+0xc]
push dword [esp+0xc]
lea edx,[esp+0x28]
mov eax,edi
mov ecx,[eax]
call dword [ecx+0x44]
lea eax,[esp+0x28]
push eax
call dword 0x6220
test eax,eax
jnz 0x42d9d
mov edx,ebp
mov eax,edi
mov ecx,[eax]
call dword [ecx-0x10]
jmp dword 0x42e30
mov byte [esp+0x10],0x0
lea ecx,[esp+0x10]
lea edx,[esp+0x8]
mov eax,edi
mov si,0xffe6
call dword 0x2dec
movzx eax,byte [esp+0x10]
mov [ebp+0xc],eax
cmp byte [esp+0x10],0x0
jnz 0x42e30
mov eax,edi
mov si,0xffd6
call dword 0x2dec
mov ebx,eax
test ebx,ebx
jz 0x42e21
cmp byte [ebx+0x61],0x0
jz 0x42e21
mov edx,edi
mov eax,edi
call dword 0x3fdf4
mov [ebx+0x64],edi
mov eax,esp
call dword 0x12a7c
test al,al
jz 0x42e0c
lea ecx,[esp+0x30]
xor edx,edx
xor eax,eax
call dword 0x12a04
lea edx,[esp+0x30]
mov ecx,esp
mov eax,edi
call dword 0x3fd18
mov ecx,[esp+0x4]
mov edx,[esp]
mov eax,ebx
mov ebx,[eax]
call dword [ebx+0x40]
mov dword [ebp+0xc],0x1
cmp dword [ebp+0xc],byte +0x0
jnz 0x42e30
mov edx,ebp
mov eax,edi
mov ecx,[eax]
call dword [ecx-0x10]
add esp,byte +0x38
pop ebp
pop edi
pop esi
pop ebx
ret
push ebx
push esi
push edi
add esp,byte -0x8
mov esi,edx
lea edi,[esp]
movsd
movsd
cmp word [eax+0x122],byte +0x0
jz 0x42e64
push ecx
mov ebx,eax
mov edx,eax
lea ecx,[esp+0x4]
mov eax,[ebx+0x124]
call dword [ebx+0x120]
pop ecx
pop edx
pop edi
pop esi
pop ebx
ret
mov eax,eax
mov eax,[eax+0x74]
mov ecx,[eax]
call dword [ecx+0x8]
ret
lea eax,[eax+0x0]
push ebp
mov ebp,esp
add esp,byte -0x18
push ebx
push esi
xor ebx,ebx
mov [ebp-0x18],ebx
mov [ebp-0x14],ebx
mov esi,ecx
mov [ebp-0x8],edx
mov [ebp-0x4],eax
mov ebx,[ebp+0x8]
xor eax,eax
push ebp
push dword 0x443f78
push dword [fs:eax]
mov [fs:eax],esp
test esi,esi
jnz 0x42eab
mov eax,[ebp-0x4]
mov esi,[eax+0x30]
test esi,esi
jnz 0x42ee3
mov eax,[ebp-0x4]
mov eax,[eax+0x8]
mov [ebp-0x10],eax
mov byte [ebp-0xc],0xb
lea eax,[ebp-0x10]
push eax
push byte +0x0
lea edx,[ebp-0x14]
mov eax,[0x468d70]
call dword 0x5750
mov ecx,[ebp-0x14]
mov dl,0x1
mov eax,[0x4128ec]
call dword 0xb48c
call dword 0x3464
mov eax,[ebp-0x8]
mov edx,[eax]
mov [ebx],edx
mov edx,[eax+0x4]
mov [ebx+0x4],edx
mov eax,[ebp-0x4]
mov eax,[eax+0x40]
add [ebx],eax
mov eax,[ebp-0x4]
mov eax,[eax+0x44]
add [ebx+0x4],eax
mov eax,[ebp-0x4]
mov eax,[eax+0x30]
jmp short 0x42f1d
cmp dword [eax+0x30],byte +0x0
jz 0x42f1a
mov edx,[eax+0x40]
add [ebx],edx
mov edx,[eax+0x44]
add [ebx+0x4],edx
mov eax,[eax+0x30]
test eax,eax
jz 0x42f25
cmp esi,eax
jnz 0x42f09
test eax,eax
jnz 0x42f5d
mov eax,[ebp-0x4]
mov eax,[eax+0x8]
mov [ebp-0x10],eax
mov byte [ebp-0xc],0xb
lea eax,[ebp-0x10]
push eax
push byte +0x0
lea edx,[ebp-0x18]
mov eax,[0x468c44]
call dword 0x5750
mov ecx,[ebp-0x18]
mov dl,0x1
mov eax,[0x4128ec]
call dword 0xb48c
call dword 0x3464
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x443f7f
lea eax,[ebp-0x18]
mov edx,0x2
call dword 0x3a40
ret
jmp dword 0x3384
jmp short 0x42f6a
pop esi
pop ebx
mov esp,ebp
pop ebp
ret 0x4
nop
push ebx
push esi
mov esi,edx
mov ebx,eax
mov edx,esi
mov eax,ebx
call dword 0x40cf4
cmp dword [esi+0xc],byte +0x0
jnz 0x42fa6
mov edx,esi
mov eax,ebx
mov ecx,[eax]
call dword [ecx-0x10]
pop esi
pop ebx
ret
lea eax,[eax+0x0]
mov edx,[eax]
call dword [edx+0x5c]
ret
mov eax,eax
mov eax,[eax+0x78]
mov ecx,[eax]
call dword [ecx+0x8]
ret
lea eax,[eax+0x0]
test byte [eax+0x52],0x10
setnz al
ret
push ebx
push esi
mov ebx,edx
mov esi,eax
mov eax,esi
call dword 0x42fc0
cmp bl,al
jz 0x42ff4
test bl,bl
jz 0x42fe6
or dword [esi+0x50],0x100000
jmp short 0x42fed
and dword [esi+0x50],0xffefffff
mov eax,esi
mov edx,[eax]
call dword [edx+0x5c]
pop esi
pop ebx
ret
nop
test byte [eax+0x55],0x40
jnz 0x43028
test byte [eax+0x1c],0x2
jnz 0x43028
mov edx,[eax+0x40]
mov [eax+0x180],edx
mov edx,[eax+0x44]
mov [eax+0x184],edx
mov edx,[eax+0x48]
mov [eax+0x188],edx
mov edx,[eax+0x4c]
mov [eax+0x18c],edx
ret
lea eax,[eax+0x0]
mov eax,[eax+0x184]
xchg eax,edx
call dword 0x1a1b8
ret
lea eax,[eax+0x0]
mov eax,[eax+0x18c]
xchg eax,edx
call dword 0x1a1b8
ret
lea eax,[eax+0x0]
mov eax,[eax+0x180]
xchg eax,edx
call dword 0x1a1b8
ret
lea eax,[eax+0x0]
push ebx
push esi
mov esi,edx
mov ebx,eax
mov eax,esi
call dword 0x18874
mov [ebx+0x188],eax
pop esi
pop ebx
ret
mov eax,eax
mov eax,[eax+0x188]
xchg eax,edx
call dword 0x1a1b8
ret
lea eax,[eax+0x0]
push ebx
push esi
mov esi,edx
mov ebx,eax
mov eax,esi
call dword 0x18874
mov [ebx+0x184],eax
pop esi
pop ebx
ret
mov eax,eax
push ebx
push esi
mov esi,edx
mov ebx,eax
mov eax,esi
call dword 0x18874
mov [ebx+0x18c],eax
pop esi
pop ebx
ret
mov eax,eax
push ebx
push esi
mov esi,edx
mov ebx,eax
mov eax,esi
call dword 0x18874
mov [ebx+0x180],eax
pop esi
pop ebx
ret
mov eax,eax
push ebx
push esi
mov esi,edx
mov ebx,eax
mov edx,esi
mov eax,ebx
call dword 0x3ec9c
mov eax,esi
mov edx,[dword 0x43d11c]
call dword 0x2da0
mov [ebx+0x20],eax
pop esi
pop ebx
ret
mov eax,eax
mov edx,[eax]
call dword [edx+0x34]
ret
mov eax,eax
call dword 0x3f08c
ret
mov eax,eax
push ebp
mov ebp,esp
add esp,byte -0x8
push ebx
push esi
xor ebx,ebx
mov [ebp-0x8],ebx
test dl,dl
jz 0x43119
add esp,byte -0x10
call dword 0x2f14
mov [ebp-0x1],dl
mov ebx,eax
xor eax,eax
push ebp
push dword 0x44421a
push dword [fs:eax]
mov [fs:eax],esp
xor edx,edx
mov eax,ebx
call dword 0x3f0f0
push ebx
push dword 0x446014
call dword 0x1b65c
mov [ebx+0x1c0],eax
mov dl,0x1
mov eax,[0x41f410]
call dword 0x202ac
mov esi,eax
mov [ebx+0x1a4],esi
mov edx,[ebx+0x70]
mov eax,esi
call dword 0x20454
mov byte [ebx+0x1dd],0x1
mov dword [ebx+0x1d4],0xffffffff

mov byte [ebx+0x1b8],0x3
mov eax,[0x468eb4]
cmp dword [eax+0x4],byte +0x11
jnz 0x43194
lea eax,[ebx+0x1bc]
call dword 0x3a1c
jmp short 0x431b1
lea edx,[ebp-0x8]
mov eax,[0x468e8c]
mov eax,[eax]
call dword 0x5c430
mov edx,[ebp-0x8]
lea eax,[ebx+0x1bc]
call dword 0x3a70
mov byte [ebx+0x1db],0x0
movzx eax,byte [dword 0x444240]
mov [ebx+0x192],al
mov byte [ebx+0x193],0x2
mov byte [ebx+0x194],0x1
mov dword [ebx+0x198],0x1

mov byte [ebx+0x158],0x1
mov ecx,ebx
mov dl,0x1
mov eax,[0x43bf34]
call dword 0x4dc60
mov esi,eax
mov [ebx+0x1a0],esi
mov [esi+0x1c],ebx
mov dword [esi+0x18],0x44a7f0
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x444221
lea eax,[ebp-0x8]
call dword 0x3a1c
ret
jmp dword 0x3384
jmp short 0x43211
mov eax,ebx
cmp byte [ebp-0x1],0x0
jz 0x43238
call dword 0x2f6c
pop dword [dword fs:0x0]
add esp,byte +0xc
mov eax,ebx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
ret
sldt [eax]
add [ebx+0x56],dl
push edi
push ebp
call dword 0x2fbc
mov ebx,edx
mov ebp,eax
mov eax,ebp
call dword 0x1a850
cmp byte [ebp+0x1dc],0x0
jz 0x43271
mov byte [ebp+0x1dc],0x0
xor edx,edx
mov eax,ebp
call dword 0x3db94
lea eax,[ebp+0x1b0]
call dword 0x5270
mov eax,[ebp+0x1ac]
call dword 0x2bf0
cmp dword [ebp+0x30],byte +0x0
jz 0x43296
mov dl,0x1
mov eax,ebp
call dword 0x44030
cmp dword [ebp+0x1b4],byte +0x0
jz 0x432a9
mov eax,ebp
mov edx,[eax]
call dword [edx+0xb4]
mov eax,ebp
call dword 0x442b4
mov esi,eax
test esi,esi
jz 0x432e1
mov edx,esi
dec edx
mov eax,ebp
call dword 0x44278
mov edi,eax
mov edx,edi
mov eax,ebp
call dword 0x4409c
mov dl,0x1
mov eax,edi
mov ecx,[eax]
call dword [ecx-0x4]
mov eax,ebp
call dword 0x442b4
mov esi,eax
test esi,esi
jnz 0x432b6
mov eax,[ebp+0x1a4]
call dword 0x2bf0
mov eax,[ebp+0x1c0]
test eax,eax
jz 0x432fb
call dword 0x1b6f4
mov eax,[ebp+0x1a0]
call dword 0x2bf0
mov edx,ebx
and dl,0xfc
mov eax,ebp
call dword 0x3f1e8
test bl,bl
jng 0x4331d
mov eax,ebp
call dword 0x2f64
pop ebp
pop edi
pop esi
pop ebx
ret
mov eax,eax
push ebp
mov ebp,esp
add esp,byte -0xc
push ebx
push esi
mov [ebp-0x4],eax
mov eax,[ebp-0x4]
cmp dword [eax+0x1d0],byte +0x0
jz dword 0x433ef
mov dl,0x1
mov eax,[0x41294c]
call dword 0x2bc0
mov [ebp-0xc],eax
xor ecx,ecx
push ebp
push dword 0x4443e8
push dword [fs:ecx]
mov [fs:ecx],esp
mov eax,[ebp-0x4]
mov eax,[eax+0x1d0]
mov eax,[eax+0x8]
mov [ebp-0x8],eax
mov edx,[ebp-0x8]
mov eax,[ebp-0xc]
call dword 0x14074
mov ebx,[ebp-0x8]
dec ebx
test ebx,ebx
jl 0x433ae
inc ebx
xor esi,esi
mov eax,[ebp-0x4]
mov eax,[eax+0x1d0]
mov edx,esi
call dword 0x13e7c
mov edx,[eax+0x1d4]
test edx,edx
jl 0x433aa
cmp edx,[ebp-0x8]
jnl 0x433aa
mov ecx,eax
mov eax,[ebp-0xc]
call dword 0x13fc8
inc esi
dec ebx
jnz 0x43381
mov ebx,[ebp-0x8]
dec ebx
test ebx,ebx
jl 0x433d2
inc ebx
xor esi,esi
mov edx,esi
mov eax,[ebp-0xc]
call dword 0x13e7c
test eax,eax
jz 0x433ce
mov edx,esi
call dword 0x48578
inc esi
dec ebx
jnz 0x433b9
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x4443ef
mov eax,[ebp-0xc]
call dword 0x2bf0
ret
jmp dword 0x3384
jmp short 0x433df
pop esi
pop ebx
mov esp,ebp
pop ebp
ret
lea eax,[eax+0x0]
push ebp
mov ebp,esp
push ecx
push ebx
mov ebx,edx
mov [ebp-0x4],eax
mov eax,[ebp-0x4]
call dword 0x43dd0
xor eax,eax
push ebp
push dword 0x444438
push dword [fs:eax]
mov [fs:eax],esp
mov edx,ebx
mov eax,[ebp-0x4]
call dword 0x3f520
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x44443f
mov eax,[ebp-0x4]
call dword 0x43dd8
ret
jmp dword 0x3384
jmp short 0x4342f
mov eax,[ebp-0x4]
call dword 0x43324
mov eax,[ebp-0x4]
cmp dword [eax+0x30],byte +0x0
jz 0x43461
push byte +0x0
xor ecx,ecx
mov edx,0xb011
mov eax,[ebp-0x4]
call dword 0x41588
mov eax,[ebp-0x4]
call dword 0x44e3c
pop ebx
pop ecx
pop ebp
ret
lea eax,[eax+0x0]
mov ecx,[eax+0x1a0]
mov ecx,[ecx+0x8]
add [edx],ecx
mov ecx,[eax+0x1a0]
mov ecx,[ecx+0xc]
add [edx+0x4],ecx
mov ecx,[eax+0x1a0]
mov ecx,[ecx+0x10]
sub [edx+0x8],ecx
mov eax,[eax+0x1a0]
mov eax,[eax+0x14]
sub [edx+0xc],eax
ret
push ebp
mov ebp,esp
add esp,byte -0x24
push ebx
push esi
push edi
mov esi,[ebp+0x10]
lea edi,[ebp-0x24]
movsd
movsd
movsd
movsd
mov ebx,ecx
mov esi,edx
mov [ebp-0x4],eax
mov edi,[ebp+0xc]
cmp byte [ebp+0x14],0x0
jz 0x434d7
movzx eax,byte [ebp+0x14]
movzx eax,byte [eax+0x4685b4]
cmp al,[esi+0x61]
jz dword 0x43690
cmp dword [esi+0x175],byte +0x0
jz dword 0x43686
cmp dword [esi+0x179],byte +0x0
jz dword 0x43686
xor edx,edx
mov eax,[esi+0x78]
mov ecx,[eax]
call dword [ecx+0x10]
mov [ebp-0x8],eax
mov edx,0x1
mov eax,[esi+0x78]
mov ecx,[eax]
call dword [ecx+0x10]
mov [ebp-0xc],eax
mov edx,0x2
mov eax,[esi+0x78]
mov ecx,[eax]
call dword [ecx+0x10]
mov [ebp-0x10],eax
mov edx,0x3
mov eax,[esi+0x78]
mov ecx,[eax]
call dword [ecx+0x10]
mov [ebp-0x14],eax
test byte [esi+0x61],0x4
jz 0x43564
test byte [esi+0x61],0x1
jz 0x4354f
mov eax,[ebx]
mov edx,[esi+0x175]
sub edx,[esi+0x165]
sub eax,edx
mov [ebp-0x10],eax
jmp short 0x4358f
mov eax,[ebx]
mov edx,[esi+0x175]
sub edx,[esi+0x165]
sub eax,edx
mov [ebp-0x8],eax
jmp short 0x4358f
test byte [esi+0x61],0x1
jnz 0x4358f
mov eax,[esi+0x175]
push eax
mov eax,[ebx]
push eax
mov eax,[esi+0x165]
push eax
call dword 0x5bc0
mov edx,[ebp-0x10]
sar edx,1
jns 0x4358a
adc edx,byte +0x0
sub eax,edx
mov [ebp-0x8],eax
test byte [esi+0x61],0x8
jz 0x435c7
test byte [esi+0x61],0x2
jz 0x435b1
mov eax,[ebx+0x4]
mov edx,[esi+0x179]
sub edx,[esi+0x169]
sub eax,edx
mov [ebp-0x14],eax
jmp short 0x435f3
mov eax,[ebx+0x4]
mov edx,[esi+0x179]
sub edx,[esi+0x169]
sub eax,edx
mov [ebp-0xc],eax
jmp short 0x435f3
test byte [esi+0x61],0x2
jnz 0x435f3
mov eax,[esi+0x179]
push eax
mov eax,[ebx+0x4]
push eax
mov eax,[esi+0x169]
push eax
call dword 0x5bc0
mov edx,[ebp-0x14]
sar edx,1
jns 0x435ee
adc edx,byte +0x0
sub eax,edx
mov [ebp-0xc],eax
cmp byte [ebp+0x8],0x0
jz 0x4366e
movzx eax,byte [dword 0x444874]
and al,[esi+0x61]
movzx edx,byte [dword 0x444878]
cmp dl,al
jz 0x43633
mov eax,[esi+0x175]
push eax
mov eax,[ebx]
push eax
mov eax,[esi+0x16d]
push eax
call dword 0x5bc0
mov edx,[ebp-0x10]
sar edx,1
jns 0x4362e
adc edx,byte +0x0
sub eax,edx
mov [ebp-0x8],eax
movzx eax,byte [dword 0x44487c]
and al,[esi+0x61]
movzx edx,byte [dword 0x444878]
cmp dl,al
jz 0x4366e
mov eax,[esi+0x179]
push eax
mov eax,[ebx+0x4]
push eax
mov eax,[esi+0x171]
push eax
call dword 0x5bc0
mov edx,[ebp-0x14]
sar edx,1
jns 0x43669
adc edx,byte +0x0
sub eax,edx
mov [ebp-0xc],eax
mov eax,[ebp-0x10]
push eax
mov eax,[ebp-0x14]
push eax
push byte +0x1
mov ecx,[ebp-0xc]
mov edx,[ebp-0x8]
mov eax,[esi+0x78]
call dword 0x4dd78
cmp byte [ebp+0x14],0x0
jz dword 0x43868
mov eax,[edi+0x8]
sub eax,[edi]
mov [ebp-0x10],eax
cmp dword [ebp-0x10],byte +0x0
jl 0x436ac
movzx eax,byte [ebp+0x14]
add al,0xfd
sub al,0x2
jc 0x436ac
sub al,0x1
jnz 0x436bc
mov edx,0x2
mov eax,[esi+0x78]
mov ecx,[eax]
call dword [ecx+0x10]
mov [ebp-0x10],eax
mov eax,[edi+0xc]
sub eax,[edi+0x4]
mov [ebp-0x14],eax
cmp dword [ebp-0x14],byte +0x0
jl 0x436d8
movzx eax,byte [ebp+0x14]
dec eax
sub al,0x2
jc 0x436d8
sub al,0x3
jnz 0x436e8
mov edx,0x3
mov eax,[esi+0x78]
mov ecx,[eax]
call dword [ecx+0x10]
mov [ebp-0x14],eax
mov eax,[edi]
mov [ebp-0x8],eax
mov eax,[edi+0x4]
mov [ebp-0xc],eax
movzx eax,byte [ebp+0x14]
cmp eax,byte +0x6
ja 0x43777
jmp dword [eax*4+0x444703]
ja 0x4374c
inc esp
add [edi],bl
inc edi
inc esp
add [edi],ah
inc edi
inc esp
add [dword 0x3c004447],dh
inc edi
inc esp
add [edi+0x47],dh
inc esp
add [edx+0x47],cl
inc esp
add [ebx+0x4701ec45],cl
add al,0xeb
push eax
mov eax,[ebp-0x14]
sub [edi+0xc],eax
mov eax,[edi+0xc]
mov [ebp-0xc],eax
jmp short 0x43777
mov eax,[ebp-0x10]
add [edi],eax
jmp short 0x43777
mov eax,[ebp-0x10]
sub [edi+0x8],eax
mov eax,[edi+0x8]
mov [ebp-0x8],eax
jmp short 0x43777
mov eax,[esi+0x40]
mov [ebp-0x8],eax
mov eax,[esi+0x44]
mov [ebp-0xc],eax
lea eax,[ebp-0xc]
push eax
lea eax,[ebp-0x10]
push eax
lea eax,[ebp-0x14]
push eax
push edi
lea eax,[ebp-0x24]
push eax
lea ecx,[ebp-0x8]
mov edx,esi
mov eax,[ebp-0x4]
mov ebx,[eax]
call dword [ebx+0xac]
mov eax,[ebp-0x10]
push eax
mov eax,[ebp-0x14]
push eax
push byte +0x1
mov ecx,[ebp-0xc]
mov edx,[ebp-0x8]
mov eax,[esi+0x78]
call dword 0x4dd78
mov edx,0x2
mov eax,[esi+0x78]
mov ecx,[eax]
call dword [ecx+0x10]
cmp eax,[ebp-0x10]
jnz 0x437b7
mov edx,0x3
mov eax,[esi+0x78]
mov ecx,[eax]
call dword [ecx+0x10]
cmp eax,[ebp-0x14]
jz dword 0x43868
movzx eax,byte [ebp+0x14]
cmp eax,byte +0x5
ja dword 0x43868
jmp dword [eax*4+0x4447cb]
push dword 0xe3004448
inc edi
inc esp
add dl,bh
inc edi
inc esp
add [ecx],dl
dec eax
inc esp
add [edi],ah
dec eax
inc esp
add [esi],bh
dec eax
inc esp
add [edx+0x3],bh
mov eax,[esi+0x78]
mov ecx,[eax]
call dword [ecx+0x10]
mov edx,[ebp-0x14]
sub edx,eax
sub [edi+0x4],edx
jmp short 0x43868
mov edx,0x3
mov eax,[esi+0x78]
mov ecx,[eax]
call dword [ecx+0x10]
mov edx,[ebp-0x14]
sub edx,eax
add [edi+0xc],edx
jmp short 0x43868
mov edx,0x2
mov eax,[esi+0x78]
mov ecx,[eax]
call dword [ecx+0x10]
mov edx,[ebp-0x10]
sub edx,eax
sub [edi],edx
jmp short 0x43868
mov edx,0x2
mov eax,[esi+0x78]
mov ecx,[eax]
call dword [ecx+0x10]
mov edx,[ebp-0x10]
sub edx,eax
add [edi+0x8],edx
jmp short 0x43868
mov edx,0x2
mov eax,[esi+0x78]
mov ecx,[eax]
call dword [ecx+0x10]
mov edx,[ebp-0x10]
sub edx,eax
add [edi+0x8],edx
mov edx,0x3
mov eax,[esi+0x78]
mov ecx,[eax]
call dword [ecx+0x10]
mov edx,[ebp-0x14]
sub edx,eax
add [edi+0xc],edx
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret 0x10
add [eax],al
add [dword 0x0],al
add [eax],al
add [edx],cl
add [eax],al
add [ebp-0x75],dl
in al,dx
add esp,byte -0x10
push ebx
push esi
mov esi,edx
mov ebx,eax
mov eax,ebx
call dword 0x486bc
test al,al
jz 0x438ae
lea edx,[ebp-0x10]
mov eax,ebx
mov ecx,[eax]
call dword [ecx+0x44]
mov eax,[ebp-0x8]
mov [esi],eax
mov eax,[ebp-0x4]
mov [esi+0x4],eax
jmp short 0x438bb
mov ecx,esi
mov edx,[ebx+0x4c]
mov eax,[ebx+0x48]
call dword 0x12a04
mov eax,[ebx+0x1a0]
mov edx,[eax+0x8]
add edx,[eax+0x10]
sub [esi],edx
mov eax,[ebx+0x1a0]
mov edx,[eax+0xc]
add edx,[eax+0x14]
sub [esi+0x4],edx
pop esi
pop ebx
mov esp,ebp
pop ebp
ret
mov eax,eax
push ebp
mov ebp,esp
add esp,byte -0x8
push ebx
push esi
mov [ebp-0x5],cl
mov [ebp-0x4],edx
mov esi,eax
xor eax,eax
movzx edx,byte [ebp-0x5]
cmp edx,byte +0x6
ja dword 0x43a0a
jmp dword [edx*4+0x444906]
or cl,[edx+0x44]
add [edx],ah
dec ecx
inc esp
add [ebx+0x49],cl
inc esp
add [ecx+ecx*2+0x49b40044],dl
inc esp
add [edx],cl
dec edx
inc esp
add bh,dh
dec ecx
inc esp
add [edx+0x1],bh
mov eax,[esi+0x78]
mov ecx,[eax]
call dword [ecx+0x10]
mov ebx,eax
mov eax,[ebp-0x4]
mov eax,[eax+0x78]
mov edx,0x1
mov ecx,[eax]
call dword [ecx+0x10]
cmp ebx,eax
setl al
jmp dword 0x43a0a
mov edx,0x1
mov eax,[esi+0x78]
mov ecx,[eax]
call dword [ecx+0x10]
mov ebx,eax
mov edx,0x3
mov eax,[esi+0x78]
mov ecx,[eax]
call dword [ecx+0x10]
add ebx,eax
mov eax,[ebp-0x4]
mov eax,[eax+0x78]
mov edx,0x1
mov ecx,[eax]
call dword [ecx+0x10]
mov esi,eax
mov eax,[ebp-0x4]
mov eax,[eax+0x78]
mov edx,0x3
mov ecx,[eax]
call dword [ecx+0x10]
add esi,eax
cmp ebx,esi
setnl al
jmp short 0x43a0a
xor edx,edx
mov eax,[esi+0x78]
mov ecx,[eax]
call dword [ecx+0x10]
mov ebx,eax
mov eax,[ebp-0x4]
mov eax,[eax+0x78]
xor edx,edx
mov ecx,[eax]
call dword [ecx+0x10]
cmp ebx,eax
setl al
jmp short 0x43a0a
xor edx,edx
mov eax,[esi+0x78]
mov ecx,[eax]
call dword [ecx+0x10]
mov ebx,eax
mov edx,0x2
mov eax,[esi+0x78]
mov ecx,[eax]
call dword [ecx+0x10]
add ebx,eax
mov eax,[ebp-0x4]
mov eax,[eax+0x78]
xor edx,edx
mov ecx,[eax]
call dword [ecx+0x10]
mov esi,eax
mov eax,[ebp-0x4]
mov eax,[eax+0x78]
mov edx,0x2
mov ecx,[eax]
call dword [ecx+0x10]
add esi,eax
cmp ebx,esi
setnl al
jmp short 0x43a0a
mov eax,[ebp+0x8]
mov eax,[eax-0x4]
mov ecx,[ebp-0x4]
mov edx,esi
mov ebx,[eax]
call dword [ebx+0xa8]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
ret
push ebp
mov ebp,esp
add esp,byte -0x18
push ebx
push esi
push edi
mov esi,ecx
lea edi,[ebp-0x10]
movsd
movsd
movsd
movsd
mov ebx,edx
mov esi,eax
push ebx
lea eax,[ebp-0x10]
push eax
mov eax,[ebp+0x8]
mov eax,[eax-0x8]
push eax
push byte +0x0
lea edx,[ebp-0x18]
mov eax,[esi+0x30]
call dword 0x43880
lea ecx,[ebp-0x18]
mov eax,[ebp+0x8]
mov eax,[eax-0x4]
mov edx,esi
call dword 0x434a0
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret
mov eax,eax
push ebp
mov ebp,esp
add esp,byte -0x18
push ebx
push esi
push edi
mov ebx,eax
mov eax,[ebp+0x8]
mov eax,[eax-0xc]
mov edx,[eax]
call dword [edx+0x8]
mov eax,[ebp+0x8]
cmp dword [eax-0x10],byte +0x0
jz 0x43abb
test bl,bl
jz 0x43a9f
mov eax,[ebp+0x8]
mov eax,[eax-0x10]
cmp byte [eax+0x57],0x0
jnz 0x43a9f
mov eax,[ebp+0x8]
mov eax,[eax-0x10]
test byte [eax+0x1c],0x10
jz 0x43abb
mov eax,[ebp+0x8]
mov eax,[eax-0x10]
test byte [eax+0x51],0x4
jnz 0x43abb
mov eax,[ebp+0x8]
mov eax,[eax-0x10]
cmp bl,[eax+0x5b]
jnz 0x43abb
mov eax,[ebp+0x8]
mov edx,[eax-0x10]
mov eax,[ebp+0x8]
mov eax,[eax-0xc]
call dword 0x13d24
mov eax,[ebp+0x8]
mov eax,[eax-0x4]
call dword 0x442b4
dec eax
test eax,eax
jl dword 0x43b86
inc eax
mov [ebp-0x8],eax
mov dword [ebp-0x4],0x0
mov eax,[ebp+0x8]
mov eax,[eax-0x4]
mov edx,[ebp-0x4]
call dword 0x44278
mov edi,eax
cmp bl,[edi+0x5b]
jnz dword 0x43b7a
test bl,bl
jz 0x43b1b
cmp byte [edi+0x57],0x0
jnz 0x43b1b
mov eax,[0x444be0]
and eax,[edi+0x50]
mov edx,[dword 0x444be0]
cmp edx,eax
jz 0x43b1b
test byte [edi+0x1c],0x10
jz 0x43b7a
test byte [edi+0x51],0x4
jnz 0x43b7a
mov eax,edi
mov edx,[dword 0x453010]
call dword 0x2d7c
test al,al
jz 0x43b32
test byte [edi+0x1c],0x10
jnz 0x43b7a
mov eax,[ebp+0x8]
cmp edi,[eax-0x10]
jz 0x43b7a
xor esi,esi
jmp short 0x43b3f
inc esi
mov eax,[ebp+0x8]
mov eax,[eax-0xc]
cmp esi,[eax+0x8]
jnl 0x43b6b
mov eax,[ebp+0x8]
push eax
mov eax,[ebp+0x8]
mov eax,[eax-0xc]
mov edx,esi
call dword 0x13e7c
mov edx,eax
mov ecx,ebx
mov eax,edi
call dword 0x438e0
pop ecx
test al,al
jz 0x43b3e
mov eax,[ebp+0x8]
mov eax,[eax-0xc]
mov ecx,edi
mov edx,esi
call dword 0x13ef8
inc dword [ebp-0x4]
dec dword [ebp-0x8]
jnz dword 0x43ada
mov eax,[ebp+0x8]
mov eax,[eax-0xc]
mov eax,[eax+0x8]
dec eax
test eax,eax
jl 0x43bd6
inc eax
mov [ebp-0x8],eax
mov dword [ebp-0x4],0x0
mov eax,[ebp+0x8]
mov eax,[eax-0xc]
mov [ebp-0x18],eax
mov eax,[ebp-0x4]
mov [ebp-0x14],eax
mov [ebp-0x10],bl
mov eax,[ebp+0x8]
push eax
mov eax,[ebp+0x8]
mov eax,[eax-0xc]
mov edx,[ebp-0x4]
call dword 0x13e7c
lea ecx,[ebp-0x18]
mov edx,ebx
call dword 0x43a10
pop ecx
inc dword [ebp-0x4]
dec dword [ebp-0x8]
jnz 0x43b9f
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret
add [eax],al
add [ecx],al
add al,0x0
add [ebp-0x75],dl
in al,dx
push ebx
push esi
push edi
mov edi,[ebp+0x8]
add edi,byte -0x4
mov bl,0x1
mov eax,[edi]
call dword 0x442b4
mov esi,eax
dec esi
cmp esi,byte +0x0
jl 0x43c2b
mov eax,[edi]
mov edx,esi
call dword 0x44278
cmp byte [eax+0x5b],0x0
jnz 0x43c2d
mov eax,[edi]
mov edx,esi
call dword 0x44278
movzx edx,byte [dword 0x444c34]
cmp dl,[eax+0x61]
jnz 0x43c2d
dec esi
cmp esi,byte -0x1
jnz 0x43c01
xor ebx,ebx
mov eax,ebx
pop edi
pop esi
pop ebx
pop ebp
ret
add eax,[eax]
add [eax],al
push ebp
mov ebp,esp
add esp,byte -0x10
push esi
mov [ebp-0x8],ecx
mov [ebp-0x10],edx
mov [ebp-0x4],eax
mov eax,[ebp-0x4]
cmp byte [eax+0x1dc],0x0
jz 0x43c7c
mov eax,[ebp-0x4]
cmp byte [eax+0x1db],0x0
jz 0x43c7c
mov eax,[ebp-0x4]
cmp dword [eax+0x1b0],byte +0x0
jz 0x43c7c
mov eax,[ebp-0x4]
mov eax,[eax+0x1b0]
xor edx,edx
mov ecx,[eax]
call dword [ecx+0x2c]
push ebp
call dword 0x43be4
pop ecx
test al,al
jz dword 0x43d1e
mov edx,[ebp-0x8]
mov eax,[ebp-0x4]
mov ecx,[eax]
call dword [ecx+0x90]
mov dl,0x1
mov eax,[0x41294c]
call dword 0x2bc0
mov [ebp-0xc],eax
xor eax,eax
push ebp
push dword 0x444d17
push dword [fs:eax]
mov [fs:eax],esp
push ebp
mov al,0x1
call dword 0x43a58
pop ecx
push ebp
mov al,0x2
call dword 0x43a58
pop ecx
push ebp
mov al,0x3
call dword 0x43a58
pop ecx
push ebp
mov al,0x4
call dword 0x43a58
pop ecx
push ebp
mov al,0x5
call dword 0x43a58
pop ecx
push ebp
mov al,0x6
call dword 0x43a58
pop ecx
push ebp
xor eax,eax
call dword 0x43a58
pop ecx
mov eax,[ebp-0x4]
mov si,0xffc6
call dword 0x2dec
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x444d1e
mov eax,[ebp-0xc]
call dword 0x2bf0
ret
jmp dword 0x3384
jmp short 0x43d0e
mov eax,[ebp-0x4]
cmp byte [eax+0x1da],0x0
jz 0x43d36
mov eax,[ebp-0x4]
mov si,0xffee
call dword 0x2dec
pop esi
mov esp,ebp
pop ebp
ret
nop
push ebp
mov ebp,esp
add esp,byte -0x14
push ebx
mov ebx,edx
mov [ebp-0x4],eax
mov eax,[ebp-0x4]
call dword 0x486bc
test al,al
jz 0x43dca
mov eax,[ebp-0x4]
test byte [eax+0x1c],0x8
jnz 0x43dca
mov eax,[ebp-0x4]
cmp word [eax+0x190],byte +0x0
jz 0x43d74
mov eax,[ebp-0x4]
or word [eax+0x54],byte +0x10
jmp short 0x43dca
mov eax,[ebp-0x4]
call dword 0x43dd0
xor eax,eax
push ebp
push dword 0x444dc3
push dword [fs:eax]
mov [fs:eax],esp
lea edx,[ebp-0x14]
mov eax,[ebp-0x4]
mov ecx,[eax]
call dword [ecx+0x44]
lea ecx,[ebp-0x14]
mov edx,ebx
mov eax,[ebp-0x4]
mov ebx,[eax]
call dword [ebx+0x94]
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x444dca
mov eax,[ebp-0x4]
and word [eax+0x54],byte -0x11
mov eax,[ebp-0x4]
call dword 0x43dd8
ret
jmp dword 0x3384
jmp short 0x43db2
pop ebx
mov esp,ebp
pop ebp
ret
nop
inc word [eax+0x190]
ret
dec word [eax+0x190]
cmp word [eax+0x190],byte +0x0
jnz 0x43df4
test byte [eax+0x54],0x10
jz 0x43df4
call dword 0x43df8
ret
lea eax,[eax+0x0]
xor edx,edx
call dword 0x43d3c
ret
push ebp
mov ebp,esp
add esp,byte -0xc
push ebx
push esi
push edi
mov [ebp-0x4],eax
mov dl,0x1
mov eax,[0x41294c]
call dword 0x2bc0
mov [ebp-0xc],eax
xor eax,eax
push ebp
push dword 0x444ec5
push dword [fs:eax]
mov [fs:eax],esp
mov eax,[ebp-0x4]
call dword 0x3fc04
mov [ebp-0x8],eax
mov eax,[ebp-0x4]
call dword 0x442b4
mov ebx,eax
dec ebx
test ebx,ebx
jl 0x43e85
inc ebx
xor esi,esi
mov edx,esi
mov eax,[ebp-0x4]
call dword 0x44278
mov edi,eax
mov eax,[edi+0x4]
mov edx,[ebp-0x4]
cmp eax,[edx+0x4]
jnz 0x43e81
mov edx,esi
mov eax,[ebp-0x4]
call dword 0x44278
mov edx,eax
mov eax,[ebp-0xc]
call dword 0x13d24
mov edx,[ebp-0x8]
sub edx,[edi+0x48]
sub edx,[edi+0x40]
mov eax,edi
call dword 0x3f918
inc esi
dec ebx
jnz 0x43e46
mov eax,[ebp-0xc]
mov ebx,[eax+0x8]
dec ebx
test ebx,ebx
jl 0x43eaf
inc ebx
xor esi,esi
push byte +0x0
mov edx,esi
mov eax,[ebp-0xc]
call dword 0x13e7c
xor ecx,ecx
mov edx,0xb03e
call dword 0x41588
inc esi
dec ebx
jnz 0x43e93
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x444ecc
mov eax,[ebp-0xc]
call dword 0x2bf0
ret
jmp dword 0x3384
jmp short 0x43ebc
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret
nop
push ebp
mov ebp,esp
add esp,byte -0xc
push ebx
push esi
push edi
mov [ebp-0x5],dl
mov [ebp-0x4],eax
mov eax,[ebp-0x4]
call dword 0x442b4
test eax,eax
jz dword 0x44013
mov dl,0x1
mov eax,[0x41294c]
call dword 0x2bc0
mov [ebp-0xc],eax
mov eax,[ebp-0x4]
call dword 0x43dd0
xor edx,edx
push ebp
push dword 0x444fc2
push dword [fs:edx]
mov [fs:edx],esp
mov eax,[ebp-0x4]
call dword 0x442b4
mov edi,eax
dec edi
test edi,edi
jl 0x43f56
inc edi
xor ebx,ebx
mov edx,ebx
mov eax,[ebp-0x4]
call dword 0x44278
movzx eax,byte [eax+0x5b]
add al,0xfd
sub al,0x2
jnc 0x43f52
mov edx,ebx
mov eax,[ebp-0x4]
call dword 0x44278
mov edx,eax
mov eax,[ebp-0xc]
call dword 0x13d24
inc ebx
dec edi
jnz 0x43f2a
mov eax,[ebp-0x4]
mov si,0xffbf
call dword 0x2dec
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x444fc9
jmp short 0x43fa7
mov edx,esi
dec edx
mov eax,[ebp-0xc]
call dword 0x13e7c
mov ebx,eax
cmp byte [ebx+0x5b],0x3
jnz 0x43f8f
mov dl,0x4
mov eax,ebx
call dword 0x3f60c
jmp short 0x43f98
mov dl,0x3
mov eax,ebx
call dword 0x3f60c
mov eax,[ebp-0xc]
mov edx,[eax+0x8]
dec edx
mov eax,[ebp-0xc]
call dword 0x13d70
mov eax,[ebp-0xc]
mov esi,[eax+0x8]
test esi,esi
jg 0x43f71
mov eax,[ebp-0xc]
call dword 0x2bf0
mov eax,[ebp-0x4]
call dword 0x43dd8
ret
jmp dword 0x3384
jmp short 0x43fa7
cmp byte [ebp-0x5],0x0
jz 0x44013
mov eax,[ebp-0x4]
call dword 0x442b4
mov edi,eax
dec edi
test edi,edi
jl 0x44013
inc edi
xor ebx,ebx
mov edx,ebx
mov eax,[ebp-0x4]
call dword 0x44278
mov edx,[dword 0x43d11c]
call dword 0x2d7c
test al,al
jz 0x4400f
mov edx,ebx
mov eax,[ebp-0x4]
call dword 0x44278
mov dl,0x1
mov si,0xffb4
call dword 0x2dec
inc ebx
dec edi
jnz 0x43fe1
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret
mov eax,eax
jmp short 0x44021
mov edx,[edx+0x30]
test edx,edx
jz 0x44029
cmp eax,edx
jnz 0x4401e
test edx,edx
setnz al
ret
nop
push ebx
push esi
mov ebx,edx
mov esi,eax
mov dl,0x1
mov eax,esi
call dword 0x53e38
test eax,eax
jz 0x4404c
mov ecx,ebx
mov edx,esi
call dword 0x58d68
pop esi
pop ebx
ret
nop
push ebx
push esi
mov ebx,edx
mov esi,eax
test ebx,ebx
jz 0x44097
mov eax,ebx
mov edx,[dword 0x43d11c]
call dword 0x2d7c
test al,al
jz 0x44087
lea eax,[esi+0x1d0]
mov edx,ebx
call dword 0x3e84c
lea eax,[esi+0x1c8]
mov edx,ebx
call dword 0x3e84c
jmp short 0x44094
lea eax,[esi+0x1cc]
mov edx,ebx
call dword 0x3e84c
mov [ebx+0x30],esi
pop esi
pop ebx
ret
mov eax,eax
push ebx
push esi
mov ebx,edx
mov esi,eax
mov eax,ebx
mov edx,[dword 0x43d11c]
call dword 0x2d7c
test al,al
jz 0x440cf
lea eax,[esi+0x1c8]
mov edx,ebx
call dword 0x3e874
lea eax,[esi+0x1d0]
mov edx,ebx
call dword 0x3e874
jmp short 0x440dc
lea eax,[esi+0x1cc]
mov edx,ebx
call dword 0x3e874
xor eax,eax
mov [ebx+0x30],eax
pop esi
pop ebx
ret
push ebx
push esi
push edi
add esp,byte -0x8
mov ebx,edx
mov edi,eax
mov edx,edi
mov eax,ebx
mov si,0xfff5
call dword 0x2dec
mov [esp],ebx
mov [esp+0x4],edi
push byte +0x1
lea ecx,[esp+0x4]
mov edx,0xb04c
mov eax,edi
call dword 0x41588
push byte +0x1
mov esi,ebx
mov ecx,esi
mov edx,0xb02c
mov eax,edi
call dword 0x41588
mov edx,ebx
mov eax,edi
call dword 0x44050
test byte [ebx+0x1c],0x2
jnz dword 0x441c1
push byte +0x0
xor ecx,ecx
mov edx,0xb009
mov eax,ebx
call dword 0x41588
push byte +0x0
xor ecx,ecx
mov edx,0xb008
mov eax,ebx
call dword 0x41588
push byte +0x0
xor ecx,ecx
mov edx,0xb023
mov eax,ebx
call dword 0x41588
push byte +0x0
xor ecx,ecx
mov edx,0xb03d
mov eax,ebx
call dword 0x41588
mov eax,ebx
mov edx,[dword 0x43d11c]
call dword 0x2d7c
test al,al
jz 0x441a3
push byte +0x0
xor ecx,ecx
mov edx,0xb011
mov eax,ebx
call dword 0x41588
mov eax,edi
call dword 0x44e3c
jmp short 0x441b8
mov eax,edi
call dword 0x486bc
test al,al
jz 0x441b8
mov eax,ebx
mov edx,[eax]
call dword [edx+0x80]
mov edx,ebx
mov eax,edi
call dword 0x43d3c
push byte +0x1
mov ecx,esi
mov edx,0xb036
mov eax,edi
call dword 0x41588
pop ecx
pop edx
pop edi
pop esi
pop ebx
ret
nop
push ebx
push esi
push edi
push ebp
add esp,byte -0x8
mov esi,edx
mov ebx,eax
mov [esp],esi
mov [esp+0x4],ebx
push byte +0x0
mov edi,esi
mov ecx,edi
mov edx,0xb036
mov eax,ebx
call dword 0x41588
mov eax,esi
mov edx,[dword 0x43d11c]
call dword 0x2d7c
test al,al
jz 0x44224
mov dl,0x1
mov ebp,esi
mov eax,ebp
call dword 0x44030
mov eax,ebp
mov edx,[eax]
call dword [edx+0xb0]
jmp short 0x4423c
mov eax,ebx
call dword 0x486bc
test al,al
jz 0x4423c
xor ecx,ecx
movzx edx,byte [esi+0x57]
mov eax,esi
call dword 0x4071c
mov edx,esi
mov eax,ebx
call dword 0x4409c
push byte +0x0
mov ecx,edi
mov edx,0xb02c
mov eax,ebx
call dword 0x41588
push byte +0x0
lea ecx,[esp+0x4]
mov edx,0xb04c
mov eax,ebx
call dword 0x41588
mov eax,ebx
call dword 0x43df8
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
ret
lea eax,[eax+0x0]
push ebx
push esi
push edi
push ebp
mov edi,edx
mov ebx,eax
mov ebp,[ebx+0x1cc]
test ebp,ebp
jz 0x4428f
mov esi,[ebp+0x8]
jmp short 0x44291
xor esi,esi
cmp esi,edi
jng 0x442a0
mov edx,edi
mov eax,ebp
call dword 0x13e7c
jmp short 0x442af
mov edx,edi
sub edx,esi
mov eax,[ebx+0x1d0]
call dword 0x13e7c
pop ebp
pop edi
pop esi
pop ebx
ret
xor edx,edx
mov ecx,[eax+0x1cc]
test ecx,ecx
jz 0x442c3
add edx,[ecx+0x8]
mov ecx,[eax+0x1d0]
test ecx,ecx
jz 0x442d0
add edx,[ecx+0x8]
mov eax,edx
ret
nop
push ebx
push esi
push edi
push ebp
push ecx
mov esi,edx
mov [esp],eax
mov eax,[esp]
call dword 0x442b4
mov ebx,eax
dec ebx
test ebx,ebx
jl 0x4430e
inc ebx
xor edi,edi
mov edx,edi
mov eax,[esp]
call dword 0x44278
mov ebp,eax
mov edx,esi
mov eax,[ebp+0x3c]
call dword [ebp+0x38]
cmp dword [esi+0xc],byte +0x0
jnz 0x4430e
inc edi
dec ebx
jnz 0x442f0
pop edx
pop ebp
pop edi
pop esi
pop ebx
ret
push ebx
push esi
push edi
mov ebx,ecx
mov esi,edx
mov edi,eax
mov ecx,ebx
mov edx,esi
mov eax,edi
call dword 0x3f5b4
cmp esi,[edi+0x23c]
jnz 0x4433d
cmp bl,0x1
jnz 0x4433d
xor eax,eax
mov [edi+0x23c],eax
pop edi
pop esi
pop ebx
ret
lea eax,[eax+0x0]
add esp,byte -0x10
movzx edx,dx
mov [esp],edx
xor edx,edx
mov [esp+0x4],edx
xor edx,edx
mov [esp+0x8],edx
xor edx,edx
mov [esp+0xc],edx
mov edx,esp
call dword 0x442d4
add esp,byte +0x10
ret
mov eax,eax
push ebx
push esi
push edi
mov esi,ecx
mov ebx,edx
test esi,esi
jz 0x443d3
mov edi,[ebx+0x34]
lea eax,[ebx+0x24]
push eax
push esi
mov eax,[0x46b7f4]
push eax
call dword 0x5fb0
test eax,eax
jnz 0x443c2
lea eax,[ebx+0x24]
push eax
push esi
push byte +0x0
call dword 0x5fb0
test eax,eax
jnz 0x443c2
lea eax,[ebx+0x24]
push eax
push esi
mov eax,[0x468bcc]
mov eax,[eax]
push eax
call dword 0x5fb0
test eax,eax
jnz 0x443c2
lea eax,[ebx+0x24]
push eax
push esi
mov eax,[ebx+0x34]
push eax
call dword 0x5fb0
mov [ebx+0x34],edi
mov eax,[ebx+0x24]
and eax,0xffffbf1f
or eax,byte +0x3
mov [ebx+0x24],eax
pop edi
pop esi
pop ebx
ret
nop
push ebx
push esi
push edi
mov edi,edx
mov ebx,eax
mov eax,ebx
call dword 0x409a4
test al,al
jz 0x443f0
or dword [edi],0x2000
mov eax,ebx
call dword 0x409d4
test al,al
jz 0x44401
or dword [edi],0x4000
mov eax,ebx
mov si,0xffc7
call dword 0x2dec
test al,al
jz 0x44439
mov eax,ebx
mov si,0xffca
call dword 0x2dec
test al,al
jnz 0x44427
or dword [edi],0x1000
jmp short 0x44439
mov eax,ebx
mov si,0xffca
call dword 0x2dec
cmp al,0x1
jnz 0x44439
or dword [edi],byte +0x0
pop edi
pop esi
pop ebx
ret
lea eax,[eax+0x0]
push ebp
mov ebp,esp
add esp,0xfffffefc
push ebx
push esi
push edi
xor ecx,ecx
mov [ebp-0x4],ecx
mov ebx,edx
mov esi,eax
xor eax,eax
push ebp
push dword 0x44555e
push dword [fs:eax]
mov [fs:eax],esp
mov eax,ebx
xor ecx,ecx
mov edx,0x8c
call dword 0x252c
mov eax,[esi+0x64]
mov [ebx],eax
mov dword [ebx+0x4],0x44000000
lea edx,[ebx+0x8]
mov eax,esi
call dword 0x443d8
test byte [esi+0x50],0x1
jz 0x4449b
or dword [ebx+0x4],0x2000000
or dword [ebx+0x8],0x10000
test byte [esi+0x1c],0x10
jnz 0x444b3
mov eax,esi
mov edx,[eax]
call dword [edx+0x50]
test al,al
jnz 0x444b3
or dword [ebx+0x4],0x8000000
cmp byte [esi+0x1d8],0x0
jz 0x444c3
or dword [ebx+0x4],0x10000
mov eax,[esi+0x40]
mov [ebx+0xc],eax
mov eax,[esi+0x44]
mov [ebx+0x10],eax
mov eax,[esi+0x48]
mov [ebx+0x14],eax
mov eax,[esi+0x4c]
mov [ebx+0x18],eax
mov edi,[esi+0x30]
test edi,edi
jz 0x444ee
mov eax,edi
call dword 0x4831c
mov [ebx+0x1c],eax
jmp short 0x444f7
mov eax,[esi+0x1c4]
mov [ebx+0x1c],eax
mov dword [ebx+0x24],0xb
mov eax,0x406ed8
mov [ebx+0x28],eax
push dword 0x7f00
push byte +0x0
call dword 0x61b8
mov [ebx+0x3c],eax
xor eax,eax
mov [ebx+0x40],eax
mov eax,[0x46b7f4]
mov [ebx+0x34],eax
lea edx,[ebp-0x104]
mov eax,[esi]
call dword 0x2ad0
lea edx,[ebp-0x104]
lea eax,[ebp-0x4]
call dword 0x3c80
mov edx,[ebp-0x4]
lea eax,[ebx+0x4c]
call dword 0x848c
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x445565
lea eax,[ebp-0x4]
call dword 0x3a1c
ret
jmp dword 0x3384
jmp short 0x44555
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret
push ebp
mov ebp,esp
add esp,0xffffff40
push ebx
push esi
xor edx,edx
mov [ebp-0xc0],edx
mov esi,eax
xor eax,eax
push ebp
push dword 0x44572d
push dword [fs:eax]
mov [fs:eax],esp
lea edx,[ebp-0x8c]
mov eax,esi
mov ecx,[eax]
call dword [ecx+0x9c]
cmp dword [ebp-0x70],byte +0x0
jnz 0x44618
test byte [ebp-0x85],0x40
jz 0x44618
mov ebx,[esi+0x4]
test ebx,ebx
jz 0x445d8
test byte [ebx+0x1c],0x2
jz 0x445d8
mov eax,ebx
mov edx,[dword 0x43d11c]
call dword 0x2d7c
test al,al
jz 0x445d8
mov eax,ebx
call dword 0x4831c
mov [ebp-0x70],eax
jmp short 0x44618
mov eax,[esi+0x8]
mov [ebp-0xbc],eax
mov byte [ebp-0xb8],0xb
lea eax,[ebp-0xbc]
push eax
push byte +0x0
lea edx,[ebp-0xc0]
mov eax,[0x468d70]
call dword 0x5750
mov ecx,[ebp-0xc0]
mov dl,0x1
mov eax,[0x4128ec]
call dword 0xb48c
call dword 0x3464
mov eax,[ebp-0x64]
mov [esi+0x1a8],eax
lea eax,[ebp-0xb4]
push eax
lea eax,[ebp-0x40]
push eax
mov eax,[ebp-0x58]
push eax
call dword 0x5fb0
cmp eax,byte +0x1
sbb eax,eax
inc eax
test al,al
jz 0x4464c
mov edx,0x43dba4
cmp edx,[ebp-0xb0]
jz 0x4467d
test al,al
jz 0x4465d
mov eax,[ebp-0x58]
push eax
lea eax,[ebp-0x40]
push eax
call dword 0x6378
mov dword [ebp-0x64],0x43dba4
lea eax,[ebp-0x40]
mov [ebp-0x44],eax
lea eax,[ebp-0x68]
push eax
call dword 0x6230
test ax,ax
jnz 0x4467d
call dword 0xcb58
mov [dword 0x4685ac],esi
lea edx,[ebp-0x8c]
mov eax,esi
mov ecx,[eax]
call dword [ecx+0xa0]
cmp dword [esi+0x1b4],byte +0x0
jnz 0x446a1
call dword 0xcb58
push byte -0x10
mov eax,[esi+0x1b4]
push eax
call dword 0x60f8
test eax,0x40000000
jz 0x446d7
push byte -0xc
mov eax,[esi+0x1b4]
push eax
call dword 0x60f8
test eax,eax
jnz 0x446d7
mov eax,[esi+0x1b4]
push eax
push byte -0xc
push eax
call dword 0x6308
mov eax,[esi+0x64]
call dword 0x8694
xor eax,eax
mov [esi+0x64],eax
mov eax,esi
call dword 0x486c8
push byte +0x1
mov eax,[esi+0x68]
call dword 0x1fbd8
mov ecx,eax
mov edx,0x30
mov eax,esi
call dword 0x41588
cmp byte [esi+0x5c],0x0
jz 0x44714
mov eax,esi
mov si,0xffee
call dword 0x2dec
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x445734
lea eax,[ebp-0xc0]
call dword 0x3a1c
ret
jmp dword 0x3384
jmp short 0x44721
pop esi
pop ebx
mov esp,ebp
pop ebp
ret
mov eax,eax
push ebx
push esi
mov ebx,edx
mov esi,eax
mov eax,[ebx+0x4]
push eax
mov eax,[ebx+0xc]
push eax
mov eax,[ebx+0x10]
push eax
mov eax,[ebx+0x14]
push eax
mov eax,[ebx+0x18]
push eax
mov eax,[ebx+0x1c]
push eax
push byte +0x0
mov eax,[ebx+0x34]
push eax
mov eax,[ebx+0x20]
push eax
mov ecx,[ebx]
lea edx,[ebx+0x4c]
mov eax,[ebx+0x8]
call dword 0x63a8
mov [esi+0x1b4],eax
pop esi
pop ebx
ret
mov eax,eax
push ebx
push esi
mov esi,edx
mov ebx,eax
mov eax,esi
call dword 0x18924
mov eax,esi
call dword 0x18874
mov [ebx+0x242],eax
mov eax,esi
call dword 0x18874
mov [ebx+0x246],eax
or byte [ebx+0x8c],0x20
mov eax,esi
call dword 0x1892c
pop esi
pop ebx
ret
push ebx
push esi
add esp,byte -0x10
mov esi,edx
mov ebx,eax
mov edx,esp
mov eax,ebx
mov ecx,[eax]
call dword [ecx+0x44]
mov eax,[esp+0x8]
mov [ebx+0x242],eax
mov eax,[esp+0xc]
mov [ebx+0x246],eax
mov eax,esi
call dword 0x1a22c
mov edx,[ebx+0x242]
mov eax,esi
call dword 0x1a1b8
mov edx,[ebx+0x246]
mov eax,esi
call dword 0x1a1b8
mov eax,esi
call dword 0x1a234
add esp,byte +0x10
pop esi
pop ebx
ret
mov ecx,[eax]
cmp ecx,[edx]
jnz 0x44816
mov eax,[eax+0x4]
cmp eax,[edx+0x4]
jz 0x44819
xor eax,eax
ret
mov al,0x1
ret
push ebp
mov ebp,esp
push ecx
push ebx
push esi
push edi
mov byte [ebp-0x1],0x1
mov eax,[ebp+0x8]
mov eax,[eax-0x4]
mov ebx,[eax+0x20]
test ebx,ebx
jz 0x44855
mov eax,[ebp+0x8]
lea edx,[ebx+0x242]
mov eax,[ebp+0x8]
mov eax,[eax-0x8]
add eax,0x242
call dword 0x44808
test al,al
jnz dword 0x448e7
mov eax,[ebp+0x8]
mov eax,[eax-0x8]
mov eax,[eax+0x1cc]
test eax,eax
jz 0x4489e
mov edx,[ebp+0x8]
mov ebx,[eax+0x8]
dec ebx
test ebx,ebx
jl 0x4489e
inc ebx
xor esi,esi
mov eax,[ebp+0x8]
mov eax,[eax-0x8]
mov eax,[eax+0x1cc]
mov edx,esi
call dword 0x13e7c
mov edi,eax
cmp byte [edi+0x5b],0x0
jnz 0x4489a
movzx eax,byte [dword 0x4458f8]
cmp al,[edi+0x61]
jnz 0x448eb
inc esi
dec ebx
jnz 0x44873
mov eax,[ebp+0x8]
mov eax,[eax-0x8]
mov eax,[eax+0x1d0]
test eax,eax
jz 0x448e7
mov edx,[ebp+0x8]
mov ebx,[eax+0x8]
dec ebx
test ebx,ebx
jl 0x448e7
inc ebx
xor esi,esi
mov eax,[ebp+0x8]
mov eax,[eax-0x8]
mov eax,[eax+0x1d0]
mov edx,esi
call dword 0x13e7c
mov edi,eax
cmp byte [edi+0x5b],0x0
jnz 0x448e3
movzx eax,byte [dword 0x4458f8]
cmp al,[edi+0x61]
jnz 0x448eb
inc esi
dec ebx
jnz 0x448bc
mov byte [ebp-0x1],0x0
movzx eax,byte [ebp-0x1]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
ret
add [eax],al
add [ebx],al
add [eax],al
add [ebp-0x75],dl
in al,dx
add esp,byte -0x8
push ebx
mov [ebp-0x4],edx
mov [ebp-0x8],eax
mov edx,[ebp-0x4]
mov eax,[ebp-0x8]
call dword 0x41c30
mov eax,[ebp-0x8]
push eax
push dword 0x44577c
mov eax,[ebp-0x8]
push eax
push dword 0x4457b4
push ebp
call dword 0x4481c
pop ecx
mov ecx,eax
mov edx,0x44594c
mov eax,[ebp-0x4]
mov ebx,[eax]
call dword [ebx+0x4]
pop ebx
pop ecx
pop ecx
pop ebp
ret
add [eax],al
add bh,bh
db 0xff
db 0xff
dec dword [edx]
add [eax],al
add [ebp+0x73],al
imul esp,[edi+0x6e],dword 0x657a6953
add [eax],al
push ebx
push esi
push edi
mov esi,eax
cmp dword [esi+0x64],byte +0x0
jnz 0x4499f
mov eax,esi
call dword 0x40208
mov ebx,eax
cmp ebx,byte +0x1
jnl 0x44980
mov eax,0x4459b4
call dword 0x8668
mov [esi+0x64],eax
jmp short 0x4499f
lea eax,[ebx+0x1]
call dword 0x8648
mov edi,eax
mov [esi+0x64],edi
mov eax,edi
call dword 0x865c
mov ecx,eax
mov edx,edi
mov eax,esi
call dword 0x40218
call dword 0x3e980
mov eax,esi
mov edx,[eax]
call dword [edx+0xb4]
pop edi
pop esi
pop ebx
ret
add [eax],al
add [eax],al
add [eax],al
push ebp
mov ebp,esp
push ecx
mov [ebp-0x4],eax
mov eax,[ebp-0x4]
or word [eax+0x54],0x200
xor eax,eax
push ebp
push dword 0x445a05
push dword [fs:eax]
mov [fs:eax],esp
mov eax,[ebp-0x4]
mov eax,[eax+0x1b4]
push eax
call dword 0x5f00
test eax,eax
jnz 0x449ee
call dword 0xcb58
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x445a0c
mov eax,[ebp-0x4]
and word [eax+0x54],0xfdff
ret
jmp dword 0x3384
jmp short 0x449fb
mov eax,[ebp-0x4]
xor edx,edx
mov [eax+0x1b4],edx
pop ecx
pop ebp
ret
mov eax,eax
push ebx
push esi
push edi
mov ebx,edx
mov edi,eax
mov eax,[edi+0x1d0]
mov edx,ebx
call dword 0x13ed8
mov esi,eax
inc esi
mov eax,[edi+0x1d0]
mov ebx,[eax+0x8]
dec ebx
sub ebx,esi
jl 0x44a5d
inc ebx
mov eax,[edi+0x1d0]
mov edx,esi
call dword 0x13e7c
mov eax,[eax+0x1b4]
test eax,eax
jnz 0x44a5f
inc esi
dec ebx
jnz 0x44a42
xor eax,eax
pop edi
pop esi
pop ebx
ret
nop
push ebx
push esi
push edi
mov ebx,eax
cmp dword [ebx+0x1b4],byte +0x0
jnz dword 0x44af6
mov eax,ebx
mov edx,[eax]
call dword [edx+0xa4]
mov esi,ebx
push esi
movzx eax,word [dword 0x46dc12]
push eax
mov eax,[ebx+0x1b4]
push eax
call dword 0x62d8
push esi
movzx eax,word [dword 0x46dc10]
push eax
mov eax,[ebx+0x1b4]
push eax
call dword 0x62d8
mov esi,[ebx+0x30]
test esi,esi
jz 0x44ad3
push byte +0x13
push byte +0x0
push byte +0x0
push byte +0x0
push byte +0x0
mov edx,ebx
mov eax,esi
call dword 0x44a1c
push eax
mov eax,[ebx+0x1b4]
push eax
call dword 0x6320
mov eax,ebx
call dword 0x442b4
mov esi,eax
dec esi
test esi,esi
jl 0x44af6
inc esi
xor edi,edi
mov edx,edi
mov eax,ebx
call dword 0x44278
call dword 0x3f794
inc edi
dec esi
jnz 0x44ae4
pop edi
pop esi
pop ebx
ret
mov eax,eax
push ebx
cmp word [eax+0x22a],byte +0x0
jz 0x44b1c
push ecx
mov ebx,eax
mov ecx,edx
mov edx,eax
mov eax,[ebx+0x22c]
call dword [ebx+0x228]
pop ebx
ret
xor eax,eax
pop ebx
ret
push ebp
mov ebp,esp
add esp,byte -0x10
push esi
push edi
mov esi,[ebp+0x8]
lea edi,[ebp-0x10]
movsd
movsd
movsd
movsd
mov esi,eax
cmp word [esi+0x232],byte +0x0
jz 0x44b65
push ecx
mov eax,[ebp+0x18]
push eax
mov eax,[ebp+0x14]
push eax
mov eax,[ebp+0x10]
push eax
mov eax,[ebp+0xc]
push eax
lea eax,[ebp-0x10]
push eax
mov eax,esi
mov ecx,edx
mov edx,eax
mov eax,[esi+0x234]
call dword [esi+0x230]
pop edi
pop esi
mov esp,ebp
pop ebp
ret 0x14
lea eax,[eax+0x0]
push ebp
mov ebp,esp
push ebx
push esi
mov esi,[ebp+0xc]
mov ebx,[ebp+0x8]
cmp ebx,[esi]
jz 0x44ba8
mov eax,ebx
call dword 0x3cce8
test eax,eax
jnz 0x44ba8
push byte -0x8
push ebx
call dword 0x60f8
cmp eax,[esi]
jnz 0x44ba8
push byte +0x0
movzx eax,byte [esi+0x4]
push eax
push dword 0xb04a
push ebx
call dword 0x6278
or eax,byte -0x1
pop esi
pop ebx
pop ebp
ret 0x8
lea eax,[eax+0x0]
push ebx
push esi
push edi
add esp,byte -0x8
mov esi,eax
cmp dword [esi+0x1b4],byte +0x0
jz 0x44c1f
mov eax,[esi+0x1d0]
test eax,eax
jz 0x44bf3
mov ebx,[eax+0x8]
dec ebx
test ebx,ebx
jl 0x44bf3
inc ebx
xor edi,edi
mov edx,edi
mov eax,[esi+0x1d0]
call dword 0x13e7c
mov edx,[eax]
call dword [edx+0xb0]
inc edi
dec ebx
jnz 0x44bda
mov eax,[esi+0x1b4]
mov [esp],eax
test byte [esi+0x55],0x20
setnz dl
mov [esp+0x4],dl
mov edx,esp
push edx
push dword 0x445b70
push eax
call dword 0x5f68
mov eax,esi
mov edx,[eax]
call dword [edx+0xb8]
pop ecx
pop edx
pop edi
pop esi
pop ebx
ret
lea eax,[eax+0x0]
cmp dword [eax+0x1b4],byte +0x0
jz 0x44c3f
push byte +0x0
xor ecx,ecx
mov edx,0xb033
call dword 0x41588
ret
push ebp
mov ebp,esp
add esp,byte -0x8
push esi
mov [ebp-0x4],eax
mov eax,[ebp-0x4]
mov si,0xffb3
call dword 0x2dec
mov [ebp-0x5],al
mov dl,0x1
mov eax,[ebp-0x4]
call dword 0x49804
xor eax,eax
push ebp
push dword 0x445c9c
push dword [fs:eax]
mov [fs:eax],esp
mov eax,[ebp-0x4]
mov edx,[eax]
call dword [edx+0xb0]
mov eax,[ebp-0x4]
call dword 0x44e3c
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x445ca3
xor edx,edx
mov eax,[ebp-0x4]
call dword 0x49804
ret
jmp dword 0x3384
jmp short 0x44c91
cmp byte [ebp-0x5],0x0
jz 0x44cc4
mov eax,[ebp-0x4]
cmp dword [eax+0x1b4],byte +0x0
jz 0x44cc4
mov eax,[ebp-0x4]
mov eax,[eax+0x1b4]
push eax
call dword 0x62b0
pop esi
pop ecx
pop ecx
pop ebp
ret
lea eax,[eax+0x0]
push ebp
mov ebp,esp
add esp,byte -0x8
push ebx
push esi
push edi
mov [ebp-0x4],eax
mov eax,[ebp-0x4]
cmp byte [eax+0x57],0x0
jz 0x44cf3
mov eax,[ebp-0x4]
test byte [eax+0x1c],0x10
jz 0x44d0e
mov eax,[ebp-0x4]
test byte [eax+0x55],0x8
jz 0x44d0e
mov eax,[ebp-0x4]
test byte [eax+0x1c],0x10
jz 0x44d20
mov eax,[ebp-0x4]
test byte [eax+0x55],0x8
jnz 0x44d20
mov eax,[ebp-0x4]
test byte [eax+0x51],0x4
jnz 0x44d20
mov eax,[ebp-0x4]
test byte [eax+0x54],0x8
jnz 0x44d20
mov eax,[ebp-0x4]
test byte [eax+0x1c],0x8
jz 0x44d24
xor eax,eax
jmp short 0x44d26
mov al,0x1
mov [ebp-0x5],al
cmp byte [ebp-0x5],0x0
jz 0x44d77
mov eax,[ebp-0x4]
cmp dword [eax+0x1b4],byte +0x0
jnz 0x44d46
mov eax,[ebp-0x4]
mov edx,[eax]
call dword [edx+0x98]
mov eax,[ebp-0x4]
mov eax,[eax+0x1d0]
test eax,eax
jz 0x44d77
mov ebx,[eax+0x8]
dec ebx
test ebx,ebx
jl 0x44d77
inc ebx
xor esi,esi
mov eax,[ebp-0x4]
mov eax,[eax+0x1d0]
mov edx,esi
call dword 0x13e7c
call dword 0x44ccc
inc esi
dec ebx
jnz 0x44d5e
mov eax,[ebp-0x4]
cmp dword [eax+0x1b4],byte +0x0
jz dword 0x44e33
mov eax,[ebp-0x4]
movzx eax,byte [eax+0x1da]
cmp al,[ebp-0x5]
jz dword 0x44e33
mov eax,[ebp-0x4]
movzx edx,byte [ebp-0x5]
mov [eax+0x1da],dl
xor edx,edx
push ebp
push dword 0x445e15
push dword [fs:edx]
mov [fs:edx],esp
mov eax,[ebp-0x4]
mov edx,[eax+0x50]
or edx,[dword 0x468670]
mov [eax+0x50],edx
xor edx,edx
push ebp
push dword 0x445e04
push dword [fs:edx]
mov [fs:edx],esp
push byte +0x0
xor ecx,ecx
mov edx,0xb019
mov eax,[ebp-0x4]
call dword 0x41588
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x445e0b
mov eax,[ebp-0x4]
mov edx,[eax+0x50]
mov ecx,[dword 0x468670]
not ecx
and edx,ecx
mov [eax+0x50],edx
ret
jmp dword 0x3384
jmp short 0x44df0
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
jmp short 0x44e33
jmp dword 0x30d0
movzx eax,byte [ebp-0x5]
xor al,0x1
mov edx,[ebp-0x4]
mov [edx+0x1da],al
call dword 0x348c
call dword 0x34e0
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
ret
mov eax,eax
push ebp
mov ebp,esp
add esp,byte -0x8
push ebx
push esi
push edi
mov [ebp-0x4],eax
mov ebx,[ebp-0x4]
jmp dword 0x44ef0
mov ebx,esi
cmp byte [ebx+0x1da],0x0
jnz dword 0x44ef0
mov eax,[ebp-0x4]
cmp byte [eax+0x1da],0x0
jz dword 0x44f26
mov eax,[ebp-0x4]
mov eax,[eax+0x50]
and eax,[dword 0x468670]
cmp eax,[dword 0x468670]
jz dword 0x44f26
mov edi,[ebp-0x4]
mov eax,[edi+0x50]
or eax,[dword 0x468670]
mov [edi+0x50],eax
xor eax,eax
push ebp
push dword 0x445ee9
push dword [fs:eax]
mov [fs:eax],esp
mov eax,[ebp-0x4]
mov byte [eax+0x1da],0x0
push byte +0x0
xor ecx,ecx
mov edx,0xb019
mov eax,[ebp-0x4]
call dword 0x41588
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x445f26
mov eax,[ebp-0x4]
mov [ebp-0x8],eax
mov eax,[ebp-0x8]
mov eax,[eax+0x50]
mov edx,[dword 0x468670]
not edx
and eax,edx
mov edx,[ebp-0x8]
mov [edx+0x50],eax
ret
jmp dword 0x3384
jmp short 0x44ecc
mov esi,[ebx+0x30]
test esi,esi
jnz dword 0x44e50
mov eax,[ebp-0x4]
test byte [eax+0x1c],0x8
jnz 0x44f26
mov eax,ebx
mov edx,[dword 0x453010]
call dword 0x2d7c
test al,al
jnz 0x44f1e
cmp dword [ebx+0x1c4],byte +0x0
jz 0x44f26
mov eax,[ebp-0x4]
call dword 0x44ccc
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
ret
lea eax,[eax+0x0]
push ebp
mov ebp,esp
push ecx
push ebx
mov ebx,edx
mov [ebp-0x4],eax
mov eax,[ebp-0x4]
cmp dword [eax+0x30],byte +0x0
jnz dword 0x45010
mov eax,[ebp-0x4]
cmp ebx,[eax+0x1c4]
jz dword 0x45010
mov eax,[ebp-0x4]
cmp dword [eax+0x1b4],byte +0x0
jz 0x44fbd
mov eax,[ebp-0x4]
cmp dword [eax+0x1c4],byte +0x0
jz 0x44fbd
test ebx,ebx
jz 0x44fbd
mov eax,[ebp-0x4]
mov [eax+0x1c4],ebx
push ebx
mov eax,[ebp-0x4]
mov eax,[eax+0x1b4]
push eax
call dword 0x62d0
mov eax,[0x468bd4]
cmp dword [eax],byte +0x5
jl 0x44fb3
mov eax,[0x468ea4]
cmp dword [eax],byte +0x2
jnz 0x44fb3
push byte +0x0
mov ecx,0x30003
mov edx,0x127
mov eax,[ebp-0x4]
call dword 0x41588
mov eax,[ebp-0x4]
call dword 0x44e3c
jmp short 0x45010
mov dl,0x1
mov eax,[ebp-0x4]
call dword 0x49804
xor eax,eax
push ebp
push dword 0x446009
push dword [fs:eax]
mov [fs:eax],esp
mov eax,[ebp-0x4]
mov edx,[eax]
call dword [edx+0xb0]
mov eax,[ebp-0x4]
mov [eax+0x1c4],ebx
mov eax,[ebp-0x4]
call dword 0x44e3c
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x446010
xor edx,edx
mov eax,[ebp-0x4]
call dword 0x49804
ret
jmp dword 0x3384
jmp short 0x44ffe
pop ebx
pop ecx
pop ebp
ret
push ebp
mov ebp,esp
push ecx
push ebx
push esi
push edi
mov [ebp-0x4],eax
xor eax,eax
push ebp
push dword 0x44606c
push dword [fs:eax]
mov [fs:eax],esp
xor eax,eax
push ebp
push dword 0x44605b
push dword [fs:eax]
mov [fs:eax],esp
mov ebx,[ebp-0x4]
mov eax,[ebx+0x3c]
call dword [ebx+0x38]
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x446062
call dword 0x3e980
call dword 0x23c30
ret
jmp dword 0x3384
jmp short 0x45050
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
jmp short 0x45085
jmp dword 0x30d0
mov eax,[0x468d34]
mov eax,[eax]
mov edx,[ebp-0x4]
call dword 0x5ecfc
call dword 0x34e0
pop edi
pop esi
pop ebx
pop ecx
pop ebp
ret
nop
push ebp
mov ebp,esp
add esp,byte -0x1c
push ebx
mov ebx,eax
lea ecx,[ebp-0xc]
mov eax,[ebp+0x8]
mov edx,[eax-0x4]
mov edx,[edx+0x4]
sub edx,[ebx+0x44]
mov eax,[ebp+0x8]
mov eax,[eax-0x4]
mov eax,[eax]
sub eax,[ebx+0x40]
call dword 0x12a04
mov eax,[ebp+0x8]
mov edx,[ebp-0xc]
mov [eax-0xc],edx
mov edx,[ebp-0x8]
mov [eax-0x8],edx
mov eax,[ebp+0x8]
push dword [eax-0x8]
push dword [eax-0xc]
lea edx,[ebp-0x1c]
mov eax,ebx
mov ecx,[eax]
call dword [ecx+0x44]
lea eax,[ebp-0x1c]
push eax
call dword 0x6220
test eax,eax
jz 0x45146
test byte [ebx+0x1c],0x10
jz 0x450f9
cmp byte [ebx+0x57],0x0
jnz 0x450f5
test byte [ebx+0x51],0x4
jnz 0x450f9
mov al,0x1
jmp short 0x45148
cmp byte [ebx+0x57],0x0
jz 0x45142
mov eax,ebx
mov edx,[eax]
call dword [edx+0x50]
test al,al
jnz 0x45113
mov eax,[ebp+0x8]
cmp byte [eax-0xd],0x0
jz 0x45142
mov eax,[ebp+0x8]
movzx eax,word [eax-0xc]
mov [ebp-0x4],ax
mov eax,[ebp+0x8]
movzx eax,word [eax-0x8]
mov [ebp-0x2],ax
mov eax,[ebp-0x4]
push eax
xor ecx,ecx
mov edx,0xb00a
mov eax,ebx
call dword 0x41588
test eax,eax
setnz al
jmp short 0x45148
xor eax,eax
jmp short 0x45148
xor eax,eax
test al,al
jz 0x45152
mov edx,[ebp+0x8]
mov [edx-0x14],ebx
pop ebx
mov esp,ebp
pop ebp
ret
nop
push ebp
mov ebp,esp
add esp,byte -0x14
push ebx
push esi
push edi
mov [ebp-0xd],cl
mov [ebp-0x4],edx
mov esi,eax
mov ebx,[ebp+0x8]
xor eax,eax
mov [ebp-0x14],eax
cmp byte [ebp+0xc],0x0
jz 0x451d7
cmp dword [esi+0x1d0],byte +0x0
jz 0x451d7
mov eax,[esi+0x1d0]
mov edi,[eax+0x8]
dec edi
cmp edi,byte +0x0
jl 0x451d7
test bl,bl
jz 0x451b3
push byte +0x1
push byte +0x1
mov edx,edi
mov eax,[esi+0x1d0]
call dword 0x13e7c
mov edx,[ebp-0x4]
movzx ecx,byte [ebp-0xd]
call dword 0x45158
mov [ebp-0x14],eax
cmp dword [ebp-0x14],byte +0x0
jnz 0x451d1
push ebp
mov edx,edi
mov eax,[esi+0x1d0]
call dword 0x13e7c
call dword 0x4508c
pop ecx
test al,al
jnz 0x451d7
dec edi
cmp edi,byte -0x1
jnz 0x4518f
mov eax,[esi+0x1cc]
test eax,eax
jz 0x4520e
cmp dword [ebp-0x14],byte +0x0
jnz 0x4520e
mov edi,[eax+0x8]
dec edi
cmp edi,byte +0x0
jl 0x4520e
push ebp
mov edx,edi
mov eax,[esi+0x1cc]
call dword 0x13e7c
call dword 0x4508c
pop ecx
test al,al
jnz 0x4520e
dec edi
cmp edi,byte -0x1
jnz 0x451f0
mov eax,[ebp-0x14]
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret 0x8
mov eax,eax
push ebx
push esi
push edi
add esp,0xfffffed8
mov ebx,ecx
mov edi,edx
mov esi,eax
call dword 0x6080
call dword 0x593c
mov [esp+0x8],eax
movsx eax,word [esp+0x8]
mov [esp+0xc],eax
movsx eax,word [esp+0xa]
mov [esp+0x10],eax
mov ecx,esp
lea edx,[esp+0xc]
mov eax,esi
call dword 0x3fdc8
test ebx,ebx
jnz 0x4526f
push byte +0x0
push byte +0x0
lea edx,[esp+0x8]
xor ecx,ecx
mov eax,esi
call dword 0x45158
mov ebx,eax
test ebx,ebx
jz dword 0x4535a
cmp esi,ebx
jz 0x45298
mov eax,[esp]
sub eax,[ebx+0x40]
mov [esp+0x114],eax
mov eax,[esp+0x4]
sub eax,[ebx+0x44]
mov [esp+0x118],eax
jmp short 0x452ad
mov eax,[esp]
mov [esp+0x114],eax
mov eax,[esp+0x4]
mov [esp+0x118],eax
movzx eax,word [edi+0x8]
mov [esp+0x11c],eax
mov eax,[edi+0x4]
mov [esp+0x124],eax
movzx eax,word [edi+0xa]
cmp eax,0x201
jnl 0x452e5
add eax,0xffffff5f
sub eax,byte +0x2
jc 0x452fd
dec eax
sub eax,byte +0x2
jc 0x45311
dec eax
sub eax,byte +0x2
jc 0x45307
jmp short 0x4531b
add eax,0xfffffdff
sub eax,byte +0x2
jc 0x452fd
dec eax
sub eax,byte +0x2
jc 0x45311
dec eax
sub eax,byte +0x2
jc 0x45307
jmp short 0x4531b
mov byte [esp+0x120],0x0
jmp short 0x45323
mov byte [esp+0x120],0x2
jmp short 0x45323
mov byte [esp+0x120],0x1
jmp short 0x45323
mov byte [esp+0x120],0x0
lea eax,[esp+0x14]
push eax
call dword 0x6040
lea eax,[esp+0x14]
call dword 0x53d38
mov [esp+0x121],al
lea eax,[esp+0x114]
push eax
xor ecx,ecx
mov edx,0xb04b
mov eax,ebx
call dword 0x41588
mov [edi+0xc],eax
mov al,0x1
jmp short 0x4535c
xor eax,eax
add esp,0x128
pop edi
pop esi
pop ebx
ret
mov eax,eax
push ebx
push esi
push edi
add esp,byte -0x18
mov esi,edx
mov ebx,eax
mov eax,ebx
call dword 0x4831c
mov edi,eax
call dword 0x5fa8
cmp edi,eax
jnz 0x453a3
cmp dword [dword 0x46866c],byte +0x0
jz 0x4539f
mov eax,[0x46866c]
cmp ebx,[eax+0x30]
jnz 0x4539f
mov ebx,[dword 0x46866c]
jmp short 0x453cf
xor ebx,ebx
jmp short 0x453cf
mov eax,[esi+0x8]
mov [esp+0x8],eax
movsx eax,word [esp+0x8]
mov [esp+0xc],eax
movsx eax,word [esp+0xa]
mov [esp+0x10],eax
push byte +0x0
push byte +0x0
lea edx,[esp+0x14]
xor ecx,ecx
mov eax,ebx
call dword 0x45158
mov ebx,eax
xor eax,eax
test ebx,ebx
jz 0x45413
movsx eax,word [esi+0x8]
sub eax,[ebx+0x40]
mov [esp],eax
movsx eax,word [esi+0xa]
sub eax,[ebx+0x44]
mov [esp+0x4],eax
movzx eax,word [esp]
mov [esp+0x14],ax
movzx eax,word [esp+0x4]
mov [esp+0x16],ax
mov eax,[esp+0x14]
push eax
mov ecx,[esi+0x4]
mov edx,[esi]
mov eax,ebx
call dword 0x41588
mov [esi+0xc],eax
mov al,0x1
add esp,byte +0x18
pop edi
pop esi
pop ebx
ret
mov eax,eax
push ebp
mov ebp,esp
add esp,byte -0x34
push ebx
mov [ebp-0x8],edx
mov [ebp-0x4],eax
mov eax,[ebp-0x8]
mov eax,[eax]
mov edx,eax
cmp edx,0x100
jnl 0x4546f
cmp edx,byte +0x1f
jg 0x45458
jz dword 0x45878
sub edx,byte +0x7
jz dword 0x45552
dec edx
jz dword 0x45590
jmp dword 0x45910
sub edx,byte +0x21
jz dword 0x45821
sub edx,byte +0x63
jz dword 0x455a2
jmp dword 0x45910
cmp edx,0xb047
jg 0x454ac
jz dword 0x45517
add edx,0xffffff00
sub edx,byte +0xa
jc dword 0x45863
add edx,0xffffff0a
sub edx,byte +0xb
jc dword 0x4564f
sub edx,0x98
jz dword 0x45607
jmp dword 0x45910
sub edx,0xb04a
jz dword 0x458ba
sub edx,byte +0x4
jnz dword 0x45910
mov eax,[ebp-0x4]
test byte [eax+0x1c],0x10
jz dword 0x45910
mov eax,[0x468eb0]
cmp dword [eax],byte +0x0
jz dword 0x45910
push dword 0x446938
push dword 0x446938
mov eax,[ebp-0x4]
call dword 0x4831c
push eax
mov eax,[0x468eb0]
mov eax,[eax]
call eax
push byte +0x77
push byte +0x0
push byte +0x0
push byte +0x0
push byte +0x0
push byte +0x0
mov eax,[ebp-0x4]
call dword 0x4831c
push eax
call dword 0x6320
jmp dword 0x45910
mov dl,0x1
mov eax,[ebp-0x4]
call dword 0x53e38
mov ebx,eax
test ebx,ebx
jz dword 0x45910
cmp ebx,[ebp-0x4]
jz dword 0x45910
mov eax,[ebp-0x8]
mov eax,[eax+0x8]
push eax
mov ecx,[ebp-0x8]
mov ecx,[ecx+0x4]
mov edx,0xb047
mov eax,ebx
call dword 0x41588
jmp dword 0x45910
mov dl,0x1
mov eax,[ebp-0x4]
call dword 0x53e38
mov ebx,eax
test ebx,ebx
jz dword 0x45910
test byte [ebx+0x1c],0x10
jz 0x45576
cmp dword [ebx+0x30],byte +0x0
jnz dword 0x45910
mov edx,[ebp-0x4]
mov eax,ebx
mov ecx,[eax]
call dword [ecx+0xf8]
test al,al
jz dword 0x45931
jmp dword 0x45910
mov eax,[ebp-0x4]
test byte [eax+0x54],0x20
jnz dword 0x45931
jmp dword 0x45910
mov edx,[ebp-0x8]
mov eax,[ebp-0x4]
call dword 0x41664
mov eax,[ebp-0x8]
cmp dword [eax+0xc],byte -0x1
jnz dword 0x45931
mov eax,[ebp-0x8]
mov eax,[eax+0x8]
mov [ebp-0x14],eax
movsx eax,word [ebp-0x14]
mov [ebp-0x1c],eax
movsx eax,word [ebp-0x12]
mov [ebp-0x18],eax
push byte +0x0
push byte +0x0
lea ecx,[ebp-0x34]
lea edx,[ebp-0x1c]
mov eax,[ebp-0x4]
call dword 0x3fdc8
lea edx,[ebp-0x34]
xor ecx,ecx
mov eax,[ebp-0x4]
call dword 0x45158
test eax,eax
jz dword 0x45931
mov eax,[ebp-0x8]
mov dword [eax+0xc],0x1
jmp dword 0x45931
mov eax,[ebp-0x4]
mov byte [eax+0x238],0x0
mov eax,[ebp-0x4]
mov eax,[eax+0x23c]
test eax,eax
jz 0x4562e
push byte +0x0
xor ecx,ecx
mov edx,0xb014
call dword 0x41588
jmp short 0x4563f
push byte +0x0
xor ecx,ecx
mov edx,0xb014
mov eax,[ebp-0x4]
call dword 0x41588
mov eax,[ebp-0x4]
xor edx,edx
mov [eax+0x23c],edx
jmp dword 0x45910
mov edx,[ebp-0x8]
cmp eax,0x200
jnz dword 0x457ca
lea ecx,[ebp-0x34]
mov edx,[ebp-0x8]
movsx edx,word [edx+0xa]
mov eax,[ebp-0x8]
movsx eax,word [eax+0x8]
call dword 0x12a04
lea edx,[ebp-0x34]
lea ecx,[ebp-0x10]
mov eax,[ebp-0x4]
call dword 0x3fd18
call dword 0x3d034
mov [0x46866c],eax
cmp dword [dword 0x46866c],byte +0x0
jnz 0x456a2
lea eax,[ebp-0x10]
mov dl,0x1
call dword 0x3e800
mov ebx,eax
jmp short 0x456a8
mov ebx,[dword 0x46866c]
mov eax,[ebp-0x4]
cmp ebx,[eax+0x23c]
jz dword 0x4578b
mov eax,[ebp-0x4]
cmp dword [eax+0x23c],byte +0x0
jz 0x456cc
cmp dword [dword 0x46866c],byte +0x0
jz 0x45702
cmp dword [dword 0x46866c],byte +0x0
jz 0x456e6
mov eax,[ebp-0x4]
mov eax,[eax+0x23c]
cmp eax,[dword 0x46866c]
jz 0x45702
cmp dword [dword 0x46866c],byte +0x0
jz 0x45719
mov eax,[0x46866c]
mov eax,[eax+0x30]
mov edx,[ebp-0x4]
cmp eax,[edx+0x23c]
jnz 0x45719
push byte +0x0
mov eax,[ebp-0x4]
mov eax,[eax+0x23c]
xor ecx,ecx
mov edx,0xb014
call dword 0x41588
mov eax,[ebp-0x4]
mov eax,[eax+0x23c]
test eax,eax
jz 0x4572e
mov edx,[ebp-0x4]
call dword 0x1a8b0
mov edx,[ebp-0x4]
mov eax,ebx
mov [edx+0x23c],eax
test eax,eax
jz 0x45745
mov edx,[ebp-0x4]
call dword 0x1a670
mov eax,[ebp-0x4]
cmp dword [eax+0x23c],byte +0x0
jz 0x4575a
cmp dword [dword 0x46866c],byte +0x0
jz 0x45774
cmp dword [dword 0x46866c],byte +0x0
jz 0x4578b
mov eax,[ebp-0x4]
mov eax,[eax+0x23c]
cmp eax,[dword 0x46866c]
jnz 0x4578b
push byte +0x0
mov eax,[ebp-0x4]
mov eax,[eax+0x23c]
xor ecx,ecx
mov edx,0xb013
call dword 0x41588
mov eax,[ebp-0x4]
cmp byte [eax+0x238],0x0
jnz 0x457ca
mov eax,[ebp-0x4]
mov byte [eax+0x238],0x1
mov dword [ebp-0x2c],0x10
mov dword [ebp-0x28],0x2
mov eax,[ebp-0x4]
call dword 0x4831c
mov [ebp-0x24],eax
mov dword [ebp-0x20],0xffffffff
lea eax,[ebp-0x2c]
push eax
call dword 0x1d4b0
mov edx,[ebp-0x8]
mov eax,[ebp-0x4]
call dword 0x45368
test al,al
jz dword 0x45910
mov eax,[ebp-0x8]
cmp dword [eax+0xc],byte +0x0
jnz dword 0x45931
mov eax,[ebp-0x4]
call dword 0x486bc
test al,al
jz dword 0x45931
mov eax,[ebp-0x8]
mov eax,[eax+0x8]
push eax
mov eax,[ebp-0x8]
mov eax,[eax+0x4]
push eax
mov eax,[ebp-0x8]
mov eax,[eax]
push eax
mov eax,[ebp-0x4]
call dword 0x4831c
push eax
call dword 0x5ed8
jmp dword 0x45931
mov edx,[ebp-0x8]
xor ecx,ecx
mov eax,[ebp-0x4]
call dword 0x4521c
test al,al
jz dword 0x45910
mov eax,[ebp-0x8]
cmp dword [eax+0xc],byte +0x0
jnz dword 0x45931
mov eax,[ebp-0x4]
call dword 0x486bc
test al,al
jz dword 0x45931
mov edx,[ebp-0x8]
mov eax,[ebp-0x4]
call dword 0x41664
jmp dword 0x45931
mov eax,[ebp-0x4]
call dword 0x40afc
test al,al
jnz dword 0x45931
jmp dword 0x45910
mov eax,[ebp-0x4]
call dword 0x4831c
mov ebx,eax
call dword 0x5fa8
cmp ebx,eax
jnz dword 0x45910
cmp dword [dword 0x46866c],byte +0x0
jz 0x45910
mov eax,[0x46866c]
mov eax,[eax+0x30]
cmp eax,[ebp-0x4]
jnz 0x45910
push byte +0x0
xor ecx,ecx
mov edx,0x1f
mov eax,[0x46866c]
call dword 0x41588
jmp short 0x45910
mov eax,[ebp-0x8]
mov eax,[eax+0x4]
test al,al
jz 0x458ce
mov dl,0x1
mov eax,[ebp-0x4]
call dword 0x49804
xor eax,eax
push ebp
push dword 0x446909
push dword [fs:eax]
mov [fs:eax],esp
mov eax,[ebp-0x4]
mov edx,[eax]
call dword [edx+0xb0]
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x446931
mov eax,[ebp-0x8]
mov eax,[eax+0x4]
test al,al
jz 0x45908
xor edx,edx
mov eax,[ebp-0x4]
call dword 0x49804
ret
jmp dword 0x3384
jmp short 0x458f4
mov edx,[ebp-0x8]
mov eax,[ebp-0x4]
call dword 0x41664
mov eax,[ebp-0x8]
cmp dword [eax],0x128
jnz 0x45931
mov eax,[ebp-0x4]
mov edx,[eax]
call dword [edx+0x80]
pop ebx
mov esp,ebp
pop ebp
ret
add [eax],al
and [eax],al
add [eax],al
push ebx
push esi
push edi
push ebp
mov ebx,edx
mov esi,eax
cmp dword [esi+0x1b4],byte +0x0
jz dword 0x45a34
mov edi,[ebx]
cmp edi,byte +0x7b
jnz 0x4597c
cmp dword [esi+0x30],byte +0x0
jz 0x4597c
mov eax,[ebx+0x8]
push eax
mov ecx,[ebx+0x4]
mov edx,edi
mov eax,[esi+0x30]
call dword 0x41588
mov ebp,eax
mov [ebx+0xc],ebp
test ebp,ebp
jnz dword 0x45a3d
mov edi,[ebx]
mov eax,edi
add eax,0xfffffece
sub eax,byte +0x7
jc 0x45996
add eax,0xffff4407
sub eax,byte +0x7
jc 0x459b0
jmp short 0x459ef
mov ebp,[ebx+0x8]
push ebp
mov eax,[ebx+0x4]
push eax
add edi,0xbc00
push edi
push ebp
call dword 0x6278
mov [ebx+0xc],eax
jmp short 0x45a1b
mov eax,[esi+0x68]
mov eax,[eax+0x18]
call dword 0x1f6cc
push eax
mov eax,[ebx+0x4]
push eax
call dword 0x5e20
mov eax,[esi+0x1a4]
call dword 0x2044c
call dword 0x1f6cc
push eax
mov eax,[ebx+0x4]
push eax
call dword 0x5de0
mov eax,[esi+0x1a4]
call dword 0x20488
mov [ebx+0xc],eax
jmp short 0x45a1b
cmp edi,[dword 0x46dc1c]
jnz 0x459fc
mov [ebx+0xc],esi
jmp short 0x45a1b
mov eax,[ebx+0x8]
push eax
mov eax,[ebx+0x4]
push eax
push edi
mov eax,[esi+0x1b4]
push eax
mov eax,[esi+0x1a8]
push eax
call dword 0x5e78
mov [ebx+0xc],eax
mov eax,[ebx]
cmp eax,byte +0xc
jnz 0x45a3d
mov edx,[ebx+0x8]
push edx
mov ecx,[ebx+0x4]
mov edx,eax
mov eax,esi
call dword 0x3fe24
jmp short 0x45a3d
mov edx,ebx
mov eax,esi
call dword 0x41934
pop ebp
pop edi
pop esi
pop ebx
ret
mov eax,eax
push ebx
push esi
push edi
mov esi,edx
xor ebx,ebx
call dword 0x3cce8
mov edi,eax
test edi,edi
jz 0x45a71
mov eax,[esi+0x8]
push eax
mov ecx,[esi+0x4]
mov edx,[esi]
add edx,0xbc00
mov eax,edi
call dword 0x41588
mov [esi+0xc],eax
mov bl,0x1
mov eax,ebx
pop edi
pop esi
pop ebx
ret
nop
push ebp
mov ebp,esp
add esp,byte -0x50
push ebx
push esi
push edi
mov [ebp-0x8],edx
mov [ebp-0x4],eax
mov eax,[ebp-0x8]
mov eax,[eax+0x4]
mov [ebp-0x10],eax
cmp dword [ebp-0x10],byte +0x0
jnz 0x45aab
lea eax,[ebp-0x50]
push eax
mov eax,[ebp-0x4]
call dword 0x4831c
push eax
call dword 0x5e68
mov [ebp-0x10],eax
xor ecx,ecx
push ebp
push dword 0x446bd7
push dword [fs:ecx]
mov [fs:ecx],esp
mov eax,[ebp-0x4]
cmp dword [eax+0x1cc],byte +0x0
jnz 0x45ad8
mov edx,[ebp-0x10]
mov eax,[ebp-0x4]
mov ecx,[eax]
call dword [ecx+0xc4]
jmp dword 0x45ba1
mov eax,[ebp-0x10]
push eax
call dword 0x5dc8
mov [ebp-0xc],eax
xor ecx,ecx
push ebp
push dword 0x446b9a
push dword [fs:ecx]
mov [fs:ecx],esp
mov edi,0x2
mov eax,[ebp-0x4]
mov eax,[eax+0x1cc]
mov ebx,[eax+0x8]
dec ebx
test ebx,ebx
jl 0x45b6e
inc ebx
xor esi,esi
mov eax,[ebp-0x4]
mov eax,[eax+0x1cc]
mov edx,esi
call dword 0x13e7c
cmp byte [eax+0x57],0x0
jz 0x45b2d
test byte [eax+0x1c],0x10
jz 0x45b3f
test byte [eax+0x55],0x8
jz 0x45b3f
test byte [eax+0x1c],0x10
jz 0x45b6a
test byte [eax+0x55],0x8
jnz 0x45b6a
test byte [eax+0x51],0x4
jnz 0x45b6a
test byte [eax+0x50],0x40
jz 0x45b6a
mov ecx,[eax+0x44]
add ecx,[eax+0x4c]
push ecx
mov edx,[eax+0x40]
mov ecx,edx
add ecx,[eax+0x48]
push ecx
mov ecx,[eax+0x44]
push ecx
push edx
mov eax,[ebp-0x10]
push eax
call dword 0x5cc8
mov edi,eax
cmp edi,byte +0x1
jz 0x45b6e
inc esi
dec ebx
jnz 0x45b0b
dec edi
jz 0x45b7f
mov edx,[ebp-0x10]
mov eax,[ebp-0x4]
mov ecx,[eax]
call dword [ecx+0xc4]
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x446ba1
mov eax,[ebp-0xc]
push eax
mov eax,[ebp-0x10]
push eax
call dword 0x5dc0
ret
jmp dword 0x3384
jmp short 0x45b8c
xor ecx,ecx
mov edx,[ebp-0x10]
mov eax,[ebp-0x4]
call dword 0x45c10
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x446bde
mov eax,[ebp-0x8]
cmp dword [eax+0x4],byte +0x0
jnz 0x45bd6
lea eax,[ebp-0x50]
push eax
mov eax,[ebp-0x4]
call dword 0x4831c
push eax
call dword 0x5f60
ret
jmp dword 0x3384
jmp short 0x45bbb
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret
lea eax,[eax+0x0]
add esp,byte -0x10
mov dword [esp],0xf
mov [esp+0x4],edx
xor edx,edx
mov [esp+0x8],edx
xor edx,edx
mov [esp+0xc],edx
mov edx,esp
mov ecx,[eax]
call dword [ecx-0x10]
add esp,byte +0x10
ret
lea eax,[eax+0x0]
push ebp
mov ebp,esp
add esp,byte -0x28
push ebx
push esi
push edi
mov ebx,ecx
mov [ebp-0x8],edx
mov [ebp-0x4],eax
mov eax,[ebp-0x4]
cmp byte [eax+0x1dc],0x0
jz 0x45c56
mov eax,[ebp-0x4]
cmp byte [eax+0x1db],0x0
jz 0x45c56
mov eax,[ebp-0x4]
cmp dword [eax+0x1b0],byte +0x0
jz 0x45c56
mov eax,[ebp-0x4]
mov eax,[eax+0x1b0]
mov edx,[ebp-0x8]
mov ecx,[eax]
call dword [ecx+0x20]
mov eax,[ebp-0x4]
mov eax,[eax+0x1cc]
test eax,eax
jz dword 0x45ddc
xor edx,edx
mov [ebp-0xc],edx
test ebx,ebx
jz 0x45c85
mov edx,ebx
call dword 0x13ed8
mov [ebp-0xc],eax
cmp dword [ebp-0xc],byte +0x0
jnl 0x45c85
xor eax,eax
mov [ebp-0xc],eax
mov eax,[ebp-0x4]
mov eax,[eax+0x1cc]
mov eax,[eax+0x8]
mov [ebp-0x10],eax
mov eax,[ebp-0xc]
cmp eax,[ebp-0x10]
jnl dword 0x45ddc
mov eax,[ebp-0x4]
mov eax,[eax+0x1cc]
mov edx,[ebp-0xc]
call dword 0x13e7c
mov [ebp-0x18],eax
mov eax,[ebp-0x18]
cmp byte [eax+0x57],0x0
jz 0x45ccf
mov eax,[ebp-0x18]
test byte [eax+0x1c],0x10
jz 0x45cf6
mov eax,[ebp-0x18]
test byte [eax+0x55],0x8
jz 0x45cf6
mov eax,[ebp-0x18]
test byte [eax+0x1c],0x10
jz dword 0x45dcd
mov eax,[ebp-0x18]
test byte [eax+0x55],0x8
jnz dword 0x45dcd
mov eax,[ebp-0x18]
test byte [eax+0x51],0x4
jnz dword 0x45dcd
mov eax,[ebp-0x18]
mov esi,[eax+0x44]
mov eax,esi
mov edx,[ebp-0x18]
add eax,[edx+0x4c]
push eax
lea eax,[ebp-0x28]
push eax
mov eax,[ebp-0x18]
mov ebx,[eax+0x40]
mov ecx,ebx
mov eax,[ebp-0x18]
add ecx,[eax+0x48]
mov edx,esi
mov eax,ebx
call dword 0x12a2c
lea eax,[ebp-0x28]
push eax
mov eax,[ebp-0x8]
push eax
call dword 0x5db0
test eax,eax
jz dword 0x45dcd
mov eax,[ebp-0x4]
test byte [eax+0x54],0x80
jz 0x45d47
mov eax,[ebp-0x18]
or word [eax+0x54],0x80
mov eax,[ebp-0x8]
push eax
call dword 0x5dc8
mov [ebp-0x14],eax
xor eax,eax
push ebp
push dword 0x446dbd
push dword [fs:eax]
mov [fs:eax],esp
mov eax,[ebp-0x18]
mov ecx,[eax+0x44]
mov eax,[ebp-0x18]
mov edx,[eax+0x40]
mov eax,[ebp-0x8]
call dword 0x3e894
mov eax,[ebp-0x18]
mov eax,[eax+0x4c]
push eax
mov eax,[ebp-0x18]
mov eax,[eax+0x48]
push eax
push byte +0x0
push byte +0x0
mov eax,[ebp-0x8]
push eax
call dword 0x5d78
push byte +0x0
mov ecx,[ebp-0x8]
mov edx,0xf
mov eax,[ebp-0x18]
call dword 0x41588
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x446dc4
mov eax,[ebp-0x14]
push eax
mov eax,[ebp-0x8]
push eax
call dword 0x5dc0
ret
jmp dword 0x3384
jmp short 0x45daf
mov eax,[ebp-0x18]
and word [eax+0x54],0xff7f
inc dword [ebp-0xc]
mov eax,[ebp-0xc]
cmp eax,[ebp-0x10]
jl dword 0x45ca0
mov eax,[ebp-0x4]
mov eax,[eax+0x1d0]
test eax,eax
jz dword 0x45ee7
mov edi,[eax+0x8]
dec edi
test edi,edi
jl dword 0x45ee7
inc edi
mov dword [ebp-0xc],0x0
mov eax,[ebp-0x4]
mov eax,[eax+0x1d0]
mov edx,[ebp-0xc]
call dword 0x13e7c
mov ebx,eax
cmp byte [ebx+0x1d9],0x0
jz dword 0x45edd
test byte [ebx+0x50],0x10
jz dword 0x45edd
test byte [ebx+0x1c],0x10
jnz 0x45e37
cmp byte [ebx+0x57],0x0
jnz 0x45e55
test byte [ebx+0x1c],0x10
jz dword 0x45edd
test byte [ebx+0x51],0x4
jnz dword 0x45edd
test byte [ebx+0x55],0x8
jnz dword 0x45edd
mov eax,0xff000010
call dword 0x1f6cc
push eax
call dword 0x5ca8
mov esi,eax
push esi
mov eax,[ebx+0x44]
add eax,[ebx+0x4c]
push eax
lea eax,[ebp-0x28]
push eax
mov ecx,[ebx+0x40]
add ecx,[ebx+0x48]
mov edx,[ebx+0x44]
dec edx
mov eax,[ebx+0x40]
dec eax
call dword 0x12a2c
lea eax,[ebp-0x28]
push eax
mov eax,[ebp-0x8]
push eax
call dword 0x5f98
push esi
call dword 0x5cc0
mov eax,0xff000014
call dword 0x1f6cc
push eax
call dword 0x5ca8
mov esi,eax
push esi
mov eax,[ebx+0x44]
add eax,[ebx+0x4c]
inc eax
push eax
lea eax,[ebp-0x28]
push eax
mov ecx,[ebx+0x40]
add ecx,[ebx+0x48]
inc ecx
mov edx,[ebx+0x44]
mov eax,[ebx+0x40]
call dword 0x12a2c
lea eax,[ebp-0x28]
push eax
mov eax,[ebp-0x8]
push eax
call dword 0x5f98
push esi
call dword 0x5cc0
inc dword [ebp-0xc]
dec edi
jnz dword 0x45e01
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret
mov eax,eax
push ebp
mov ebp,esp
add esp,byte -0x18
mov [ebp-0x8],edx
mov [ebp-0x4],eax
mov eax,[ebp-0x4]
push eax
call dword 0x5dc8
mov [ebp-0xc],eax
xor eax,eax
push ebp
push dword 0x446f86
push dword [fs:eax]
mov [fs:eax],esp
mov eax,[ebp-0x8]
mov eax,[eax+0xc]
sub eax,byte +0x2
push eax
mov eax,[ebp-0x8]
mov eax,[eax+0x8]
sub eax,byte +0x2
push eax
mov eax,[ebp-0x8]
mov eax,[eax+0x4]
add eax,byte +0x2
push eax
mov eax,[ebp-0x8]
mov eax,[eax]
add eax,byte +0x2
push eax
mov eax,[ebp-0x4]
push eax
call dword 0x5cc8
call dword 0x4e314
lea ecx,[ebp-0x18]
mov dl,0x2
call dword 0x4e584
mov eax,[ebp-0x8]
push eax
push byte +0x0
call dword 0x4e314
lea ecx,[ebp-0x18]
mov edx,[ebp-0x4]
call dword 0x4e4d8
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x446f8d
mov eax,[ebp-0xc]
push eax
mov eax,[ebp-0x4]
push eax
call dword 0x5dc0
ret
jmp dword 0x3384
jmp short 0x45f78
push byte -0x2
push byte -0x2
mov eax,[ebp-0x8]
push eax
call dword 0x6130
mov esp,ebp
pop ebp
ret
mov eax,eax
push ebp
mov ebp,esp
add esp,byte -0x1c
push ebx
push esi
mov ebx,ecx
mov [ebp-0x8],edx
mov [ebp-0x4],eax
mov eax,[ebp-0x4]
or word [eax+0x54],0x80
mov eax,[ebp-0x8]
push eax
call dword 0x5dc8
mov [ebp-0xc],eax
xor edx,edx
push ebp
push dword 0x4471d9
push dword [fs:edx]
mov [fs:edx],esp
mov ecx,[ebp+0x8]
mov edx,ebx
mov eax,[ebp-0x8]
call dword 0x3e894
mov eax,[ebp-0x4]
mov eax,[eax+0x4c]
push eax
mov eax,[ebp-0x4]
mov eax,[eax+0x48]
push eax
push byte +0x0
push byte +0x0
mov eax,[ebp-0x8]
push eax
call dword 0x5d78
xor esi,esi
xor ebx,ebx
push byte -0x14
mov eax,[ebp-0x4]
call dword 0x4831c
push eax
call dword 0x60f8
test ah,0x2
jz 0x46020
mov ebx,0xa
mov esi,0x200f
jmp short 0x46041
push byte -0x10
mov eax,[ebp-0x4]
call dword 0x4831c
push eax
call dword 0x60f8
test eax,0x800000
jz 0x46041
mov ebx,0x3
mov esi,0xa00f
cmp ebx,byte +0xa
jnz dword 0x46102
call dword 0x4e314
call dword 0x4e41c
test al,al
jz dword 0x46102
mov eax,[ebp-0x4]
test byte [eax+0x1c],0x10
jz 0x46075
mov eax,[ebp-0x4]
call dword 0x4e2bc
test al,al
jnz dword 0x46102
mov eax,[ebp-0x4]
mov eax,[eax+0x4c]
push eax
mov eax,[ebp-0x4]
mov eax,[eax+0x48]
push eax
push byte +0x0
push byte +0x0
lea eax,[ebp-0x1c]
push eax
call dword 0x62e0
mov eax,[ebp-0x4]
test byte [eax+0x52],0x2
jz 0x460a6
lea edx,[ebp-0x1c]
mov eax,[ebp-0x8]
call dword 0x45ef0
jmp short 0x460d7
mov eax,[ebp-0x4]
mov eax,[eax+0x50]
or eax,[dword 0x4471f4]
mov edx,[ebp-0x4]
mov [edx+0x50],eax
lea edx,[ebp-0x1c]
mov eax,[ebp-0x8]
call dword 0x45ef0
mov eax,[ebp-0x4]
mov edx,[dword 0x4471f4]
not edx
and edx,[eax+0x50]
mov eax,[ebp-0x4]
mov [eax+0x50],edx
mov ecx,[ebp-0x18]
mov edx,[ebp-0x1c]
mov eax,[ebp-0x8]
call dword 0x3e894
mov eax,[ebp-0x10]
sub eax,[ebp-0x18]
push eax
mov eax,[ebp-0x14]
sub eax,[ebp-0x1c]
push eax
push byte +0x0
push byte +0x0
mov eax,[ebp-0x8]
push eax
call dword 0x5d78
jmp short 0x46159
test esi,esi
jz 0x46159
mov eax,[ebp-0x4]
mov eax,[eax+0x4c]
push eax
mov eax,[ebp-0x4]
mov eax,[eax+0x48]
push eax
push byte +0x0
push byte +0x0
lea eax,[ebp-0x1c]
push eax
call dword 0x62e0
push esi
push ebx
lea eax,[ebp-0x1c]
push eax
mov eax,[ebp-0x8]
push eax
call dword 0x5f18
mov ecx,[ebp-0x18]
mov edx,[ebp-0x1c]
mov eax,[ebp-0x8]
call dword 0x3e894
mov eax,[ebp-0x10]
sub eax,[ebp-0x18]
push eax
mov eax,[ebp-0x14]
sub eax,[ebp-0x1c]
push eax
push byte +0x0
push byte +0x0
mov eax,[ebp-0x8]
push eax
call dword 0x5d78
push byte +0x0
mov ecx,[ebp-0x8]
mov edx,0x14
mov eax,[ebp-0x4]
call dword 0x41588
push byte +0x0
mov ecx,[ebp-0x8]
mov edx,0xf
mov eax,[ebp-0x4]
call dword 0x41588
mov eax,[ebp-0x4]
mov eax,[eax+0x1d0]
test eax,eax
jz 0x461be
mov ebx,[eax+0x8]
dec ebx
test ebx,ebx
jl 0x461be
inc ebx
xor esi,esi
mov eax,[ebp-0x4]
mov eax,[eax+0x1d0]
mov edx,esi
call dword 0x13e7c
cmp byte [eax+0x57],0x0
jz 0x461ba
mov edx,[eax+0x44]
push edx
mov ecx,[eax+0x40]
mov edx,[ebp-0x8]
call dword 0x45fa0
inc esi
dec ebx
jnz 0x46195
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x4471e0
mov eax,[ebp-0xc]
push eax
mov eax,[ebp-0x8]
push eax
call dword 0x5dc0
ret
jmp dword 0x3384
jmp short 0x461cb
mov eax,[ebp-0x4]
and word [eax+0x54],0xff7f
pop esi
pop ebx
mov esp,ebp
pop ebp
ret 0x4
add [eax],al
add [eax],al
add [edx],al
add [ebp-0x75],dl
in al,dx
add esp,byte -0x50
push ebx
push esi
mov ebx,edx
mov [ebp-0x4],eax
mov eax,[ebp-0x4]
cmp byte [eax+0x240],0x0
jz 0x46217
cmp dword [ebx+0x4],byte +0x0
jz 0x4624a
mov eax,[ebp-0x4]
test byte [eax+0x55],0x1
jnz 0x4623b
mov eax,[ebp-0x4]
call dword 0x442b4
test eax,eax
jnz 0x4623b
mov edx,ebx
mov eax,[ebp-0x4]
mov ecx,[eax]
call dword [ecx-0x10]
jmp dword 0x46421
mov edx,ebx
mov eax,[ebp-0x4]
call dword 0x45a78
jmp dword 0x46421
call dword 0x27c2c
test al,al
jz dword 0x46305
lea eax,[ebp-0x50]
push eax
mov eax,[ebp-0x4]
call dword 0x4831c
push eax
call dword 0x5e68
mov esi,eax
xor eax,eax
push ebp
push dword 0x4472fe
push dword [fs:eax]
mov [fs:eax],esp
push byte +0x0
lea eax,[ebp-0x8]
push eax
lea edx,[ebp-0x48]
mov ecx,0x2
mov eax,esi
call dword 0x26ff0
mov ebx,eax
mov eax,[ebp-0x8]
push eax
mov ecx,[ebp-0x8]
mov edx,0x14
mov eax,[ebp-0x4]
call dword 0x41588
push byte +0x4
mov ecx,[ebp-0x8]
mov edx,0x318
mov eax,[ebp-0x4]
call dword 0x41588
mov eax,[ebp-0x4]
mov edx,[dword 0x453010]
call dword 0x2d7c
test al,al
jnz 0x462d4
lea edx,[ebp-0x48]
mov cl,0xff
mov eax,ebx
call dword 0x270e8
or edx,byte -0x1
mov eax,ebx
call dword 0x2707c
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x447421
lea eax,[ebp-0x50]
push eax
mov eax,[ebp-0x4]
call dword 0x4831c
push eax
call dword 0x5f60
ret
jmp dword 0x3384
jmp short 0x462eb
lea eax,[ebp-0x50]
push eax
mov eax,[ebp-0x4]
call dword 0x4831c
push eax
call dword 0x5e68
mov esi,eax
mov eax,[ebp-0x3c]
sub eax,[ebp-0x44]
push eax
mov eax,[ebp-0x40]
sub eax,[ebp-0x48]
push eax
push esi
call dword 0x5c68
mov [ebp-0xc],eax
xor ecx,ecx
push ebp
push dword 0x44741a
push dword [fs:ecx]
mov [fs:ecx],esp
push esi
call dword 0x5c70
mov [ebp-0x8],eax
mov eax,[ebp-0xc]
push eax
mov eax,[ebp-0x8]
push eax
call dword 0x5dd0
mov [ebp-0x10],eax
xor ecx,ecx
push ebp
push dword 0x4473e1
push dword [fs:ecx]
mov [fs:ecx],esp
push byte +0x0
mov eax,[ebp-0x44]
push eax
mov eax,[ebp-0x48]
push eax
mov eax,[ebp-0x8]
push eax
call dword 0x5e38
mov eax,[ebp-0x8]
push eax
mov ecx,[ebp-0x8]
mov edx,0x14
mov eax,[ebp-0x4]
call dword 0x41588
mov eax,[ebp-0x8]
mov [ebx+0x4],eax
mov edx,ebx
mov eax,[ebp-0x4]
call dword 0x461f8
xor eax,eax
mov [ebx+0x4],eax
push dword 0xcc0020
mov edx,[ebp-0x44]
push edx
mov eax,[ebp-0x48]
push eax
mov ecx,[ebp-0x8]
push ecx
mov ecx,[ebp-0x3c]
sub ecx,edx
push ecx
mov ecx,[ebp-0x40]
sub ecx,eax
push ecx
push edx
push eax
push esi
call dword 0x5c48
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x4473e8
mov eax,[ebp-0x10]
push eax
mov eax,[ebp-0x8]
push eax
call dword 0x5dd0
ret
jmp dword 0x3384
jmp short 0x463d3
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x447421
lea eax,[ebp-0x50]
push eax
mov eax,[ebp-0x4]
call dword 0x4831c
push eax
call dword 0x5f60
mov eax,[ebp-0x8]
push eax
call dword 0x5cb0
mov eax,[ebp-0xc]
push eax
call dword 0x5cc0
ret
jmp dword 0x3384
jmp short 0x463f5
pop esi
pop ebx
mov esp,ebp
pop ebp
ret
nop
push ebx
push esi
mov ebx,edx
mov esi,eax
mov edx,ebx
mov eax,[ebx+0x8]
call dword 0x45a44
test al,al
jnz 0x46445
mov edx,ebx
mov eax,esi
mov ecx,[eax]
call dword [ecx-0x10]
pop esi
pop ebx
ret
push ebx
push esi
mov ebx,edx
mov esi,eax
mov edx,ebx
mov eax,[ebx+0x8]
mov eax,[eax]
call dword 0x45a44
test al,al
jnz 0x46467
mov edx,ebx
mov eax,esi
mov ecx,[eax]
call dword [ecx-0x10]
pop esi
pop ebx
ret
mov eax,eax
push ebx
mov ebx,eax
call dword 0x1f1e0
push byte +0x0
xor ecx,ecx
mov edx,0xb024
mov eax,ebx
call dword 0x41588
pop ebx
ret
mov eax,eax
mov ecx,[edx+0x8]
push ecx
mov ecx,[edx+0x4]
mov edx,0xb025
call dword 0x41588
ret
mov eax,eax
push byte +0x0
xor ecx,ecx
mov edx,0xb026
call dword 0x41588
ret
nop
push byte +0x0
xor ecx,ecx
mov edx,0xb027
call dword 0x41588
ret
nop
push ebx
push esi
mov ebx,edx
mov esi,eax
mov edx,ebx
mov eax,[ebx+0x8]
call dword 0x45a44
test al,al
jnz 0x464d9
mov edx,ebx
mov eax,esi
mov ecx,[eax]
call dword [ecx-0x10]
pop esi
pop ebx
ret
push ebx
push esi
mov ebx,edx
mov esi,eax
mov edx,ebx
mov eax,[ebx+0x8]
call dword 0x45a44
test al,al
jnz 0x464f9
mov edx,ebx
mov eax,esi
mov ecx,[eax]
call dword [ecx-0x10]
pop esi
pop ebx
ret
push ebx
push esi
mov ebx,edx
mov esi,eax
mov edx,ebx
mov eax,[ebx+0x8]
mov eax,[eax+0x8]
call dword 0x45a44
test al,al
jnz 0x4651c
mov edx,ebx
mov eax,esi
mov ecx,[eax]
call dword [ecx-0x10]
pop esi
pop ebx
ret
nop
push ebx
push esi
mov ebx,edx
mov esi,eax
mov edx,ebx
mov eax,[ebx+0x8]
mov eax,[eax+0xc]
call dword 0x45a44
test al,al
jnz 0x46540
mov edx,ebx
mov eax,esi
mov ecx,[eax]
call dword [ecx-0x10]
pop esi
pop ebx
ret
nop
push ebx
push esi
mov ebx,edx
mov esi,eax
mov edx,ebx
mov eax,[ebx+0x8]
mov eax,[eax+0x14]
call dword 0x45a44
test al,al
jnz 0x46564
mov edx,ebx
mov eax,esi
mov ecx,[eax]
call dword [ecx-0x10]
pop esi
pop ebx
ret
nop
push ebx
push esi
mov ebx,edx
mov esi,eax
mov edx,ebx
mov eax,[ebx+0x4]
call dword 0x45a44
test al,al
jnz 0x46585
mov edx,ebx
mov eax,esi
mov ecx,[eax]
call dword [ecx-0x10]
pop esi
pop ebx
ret
push ebx
push esi
mov esi,edx
mov ebx,eax
mov edx,esi
mov ecx,ebx
mov eax,ebx
call dword 0x4521c
test al,al
jz 0x465b7
cmp dword [esi+0xc],byte +0x0
jnz 0x465b7
mov eax,ebx
call dword 0x486bc
test al,al
jz 0x465b7
mov edx,esi
mov eax,ebx
mov ecx,[eax]
call dword [ecx-0x10]
pop esi
pop ebx
ret
mov eax,eax
push ebx
push esi
push edi
add esp,byte -0x10
mov esi,edx
mov ebx,eax
call dword 0x4e314
mov edi,eax
mov eax,edi
call dword 0x4e41c
test al,al
jz 0x46617
cmp dword [ebx+0x30],byte +0x0
jz 0x46617
test byte [ebx+0x52],0x4
jz 0x46617
mov eax,[ebx+0x30]
cmp byte [eax+0x240],0x0
jz 0x465fc
mov edx,[esi+0x4]
mov eax,ebx
call dword 0x3cfe0
jmp short 0x4664d
push byte +0x0
push byte +0x0
push byte +0x0
mov eax,ebx
call dword 0x4831c
mov edx,eax
mov ecx,[esi+0x4]
mov eax,edi
call dword 0x4e51c
jmp short 0x4664d
cmp byte [ebx+0x240],0x0
jz 0x46628
mov eax,[esi+0x4]
cmp eax,[esi+0x8]
jnz 0x4664d
mov eax,[ebx+0x1a4]
call dword 0x20488
push eax
lea edx,[esp+0x4]
mov eax,ebx
mov ecx,[eax]
call dword [ecx+0x44]
lea eax,[esp+0x4]
push eax
mov eax,[esi+0x4]
push eax
call dword 0x5f88
mov dword [esi+0xc],0x1
add esp,byte +0x10
pop edi
pop esi
pop ebx
ret
nop
push ebx
push esi
push edi
push ecx
mov esi,edx
mov edi,eax
cmp byte [edi+0x1d9],0x0
jz 0x46682
test byte [edi+0x50],0x10
jz 0x46682
cmp dword [edi+0x30],byte +0x0
jz 0x46682
mov eax,[esi+0x8]
test byte [eax+0x18],0x8
jz 0x46686
xor ebx,ebx
jmp short 0x46688
mov bl,0x1
mov eax,[esi+0x8]
test byte [eax+0x18],0x2
jnz 0x466a1
mov eax,[edi+0x1b4]
push eax
call dword 0x6198
test eax,eax
jnz 0x466a5
xor eax,eax
jmp short 0x466a7
mov al,0x1
mov [esp],al
mov eax,[esi+0x8]
test byte [eax+0x18],0x1
jnz 0x466c3
mov eax,[edi+0x1b4]
push eax
call dword 0x6198
test eax,eax
jnz 0x466c7
xor eax,eax
jmp short 0x466c9
mov al,0x1
mov [esp+0x1],al
test bl,bl
jz 0x466e2
movzx eax,byte [esp]
or al,[esp+0x1]
jz 0x466e2
mov eax,edi
call dword 0x48220
test byte [edi+0x55],0x2
jnz 0x466ef
mov eax,edi
call dword 0x486c8
mov edx,esi
mov eax,edi
call dword 0x42390
test bl,bl
jz 0x46716
movzx eax,byte [esp]
or al,[esp+0x1]
jnz 0x4670f
mov eax,[esi+0x8]
test byte [eax+0x18],0xc0
jz 0x46716
mov eax,edi
call dword 0x48220
pop edx
pop edi
pop esi
pop ebx
ret
nop
push ebx
push esi
push edi
mov edi,edx
mov ebx,eax
movzx eax,word [dword 0x447768]
and ax,[ebx+0x1c]
movzx edx,word [dword 0x44776c]
cmp dx,ax
jnz 0x46758
mov esi,[edi+0x8]
test byte [esi+0x18],0x1
jnz 0x46758
lea ecx,[esi+0x14]
lea edx,[esi+0x10]
mov eax,ebx
call dword 0x41fcc
test al,al
jnz 0x46758
or dword [esi+0x18],byte +0x1
mov edx,edi
mov eax,ebx
mov ecx,[eax]
call dword [ecx-0x10]
pop edi
pop esi
pop ebx
ret
add [eax],al
add [edx],cl
add [eax],al
add [eax],al
add [eax],al
add [ebx+0x56],dl
mov ebx,edx
mov esi,eax
mov eax,esi
call dword 0x486c8
mov eax,esi
call dword 0x42ff8
mov edx,ebx
mov eax,esi
mov ecx,[eax]
call dword [ecx-0x10]
mov eax,esi
call dword 0x43df8
test byte [esi+0x1c],0x1
jnz 0x467a5
mov eax,esi
mov si,0xffcf
call dword 0x2dec
pop esi
pop ebx
ret
push esi
mov esi,eax
mov eax,esi
mov ecx,[eax]
call dword [ecx-0x10]
mov eax,esi
call dword 0x486c8
mov eax,esi
call dword 0x42ff8
pop esi
ret
mov eax,eax
push ebx
push esi
push edi
add esp,byte -0x10
mov esi,edx
mov ebx,eax
mov eax,[esi+0x4]
cmp eax,[ebx+0x1b4]
jnz dword 0x468b3
movzx eax,word [esi+0x8]
sub ax,byte -0x2
jz dword 0x46877
sub ax,byte +0x3
jnz dword 0x468b3
mov eax,[0x468e8c]
mov eax,[eax]
movzx edi,word [eax+0x44]
test di,di
jnz 0x46854
push esp
call dword 0x5fd8
push byte +0x0
push byte +0x0
lea ecx,[esp+0x10]
lea edx,[esp+0x8]
mov eax,ebx
call dword 0x3fdc8
lea edx,[esp+0x10]
xor ecx,ecx
mov eax,ebx
call dword 0x45158
test eax,eax
jz 0x4683f
test byte [eax+0x1c],0x10
jz 0x4683b
mov di,0xfffe
jmp short 0x4683f
movzx edi,word [eax+0x7c]
test di,di
jnz 0x46854
test byte [ebx+0x1c],0x10
jz 0x46850
mov di,0xfffe
jmp short 0x46854
movzx edi,word [ebx+0x7c]
test di,di
jz 0x468b3
movsx edx,di
mov eax,[0x468e8c]
mov eax,[eax]
call dword 0x5c4b8
push eax
call dword 0x62a8
mov dword [esi+0xc],0x1
jmp short 0x468bc
cmp word [esi+0xa],0x201
jnz 0x468b3
mov eax,[0x468d34]
mov eax,[eax]
cmp dword [eax+0x30],byte +0x0
jz 0x468b3
mov eax,[0x468d34]
mov eax,[eax]
mov eax,[eax+0x30]
push eax
call dword 0x6048
mov edi,eax
call dword 0x6008
cmp edi,eax
jz 0x468b3
mov eax,[0x468d34]
mov eax,[eax]
call dword 0x5e3fc
mov edx,esi
mov eax,ebx
mov ecx,[eax]
call dword [ecx-0x10]
add esp,byte +0x10
pop edi
pop esi
pop ebx
ret
nop
push esi
mov esi,eax
mov eax,esi
mov ecx,[eax]
call dword [ecx-0x10]
mov eax,esi
call dword 0x46924
xor edx,edx
mov eax,esi
call dword 0x49758
pop esi
ret
push esi
mov esi,eax
mov eax,esi
mov ecx,[eax]
call dword [ecx-0x10]
mov eax,esi
call dword 0x46a54
mov dl,0x1
mov eax,esi
call dword 0x49758
pop esi
ret
push esi
mov esi,eax
mov byte [esi+0x241],0x1
mov eax,esi
mov ecx,[eax]
call dword [ecx-0x10]
pop esi
ret
nop
push esi
mov esi,eax
mov byte [esi+0x241],0x0
mov eax,esi
mov ecx,[eax]
call dword [ecx-0x10]
pop esi
ret
nop
push ebp
mov ebp,esp
add esp,byte -0x8
push ebx
push esi
push edi
xor edx,edx
mov [ebp-0x8],edx
mov esi,eax
xor eax,eax
push ebp
push dword 0x447a43
push dword [fs:eax]
mov [fs:eax],esp
mov eax,[0x468eb4]
cmp byte [eax+0xc],0x0
jz dword 0x46a2d
cmp dword [esi+0x1bc],byte +0x0
jz dword 0x46a1a
lea edx,[ebp-0x8]
mov eax,[0x468e8c]
mov eax,[eax]
call dword 0x5c430
mov eax,[ebp-0x8]
mov [ebp-0x4],eax
mov ebx,[esi+0x1bc]
test ebx,ebx
jz 0x46982
sub ebx,byte +0x4
mov ebx,[ebx]
mov edi,[ebp-0x4]
test edi,edi
jz 0x4698e
sub edi,byte +0x4
mov edi,[edi]
push edi
mov eax,[ebp-0x4]
call dword 0x3eac
push eax
push ebx
mov eax,[esi+0x1bc]
call dword 0x3eac
push eax
push byte +0x1
push dword 0x400
call dword 0x5a78
sub eax,byte +0x2
test eax,eax
jz 0x46a1a
mov eax,[0x468e8c]
mov eax,[eax]
call dword 0x5c230
mov edx,[eax]
call dword [edx+0x14]
test eax,eax
jz 0x46a1a
mov eax,[0x468e8c]
mov eax,[eax]
mov edi,[eax+0x3c]
cmp byte [esi+0x1b8],0x0
jz 0x46a12
mov eax,[0x468e8c]
mov eax,[eax]
call dword 0x5c230
mov edx,[esi+0x1bc]
mov ecx,[eax]
call dword [ecx+0x54]
mov ebx,eax
test ebx,ebx
jl 0x46a12
mov eax,[0x468e8c]
mov eax,[eax]
call dword 0x5c230
mov edx,ebx
mov ecx,[eax]
call dword [ecx+0x18]
mov edi,eax
push byte +0x1
push edi
call dword 0x5e50
mov eax,esi
call dword 0x4831c
movzx edx,byte [esi+0x1b8]
call dword 0x4d920
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x447a4a
lea eax,[ebp-0x8]
call dword 0x3a1c
ret
jmp dword 0x3384
jmp short 0x46a3a
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
ret
lea eax,[eax+0x0]
push ebp
mov ebp,esp
add esp,byte -0x8
push ebx
push esi
push edi
xor edx,edx
mov [ebp-0x8],edx
mov ebx,eax
xor eax,eax
push ebp
push dword 0x447b23
push dword [fs:eax]
mov [fs:eax],esp
mov eax,[0x468eb4]
cmp byte [eax+0xc],0x0
jz dword 0x46b0d
cmp dword [ebx+0x1bc],byte +0x0
jz 0x46af6
lea edx,[ebp-0x8]
mov eax,[0x468e8c]
mov eax,[eax]
call dword 0x5c430
mov eax,[ebp-0x8]
mov [ebp-0x4],eax
mov esi,[ebx+0x1bc]
test esi,esi
jz 0x46aae
sub esi,byte +0x4
mov esi,[esi]
mov edi,[ebp-0x4]
test edi,edi
jz 0x46aba
sub edi,byte +0x4
mov edi,[edi]
push edi
mov eax,[ebp-0x4]
call dword 0x3eac
push eax
push esi
mov eax,[ebx+0x1bc]
call dword 0x3eac
push eax
push byte +0x1
push dword 0x400
call dword 0x5a78
sub eax,byte +0x2
test eax,eax
jz 0x46af6
push byte +0x1
mov eax,[0x468e8c]
mov eax,[eax]
mov eax,[eax+0x3c]
push eax
call dword 0x5e50
cmp byte [ebx+0x1b8],0x0
jnz 0x46b0d
mov eax,ebx
call dword 0x4831c
mov dl,0x1
call dword 0x4d904
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x447b2a
lea eax,[ebp-0x8]
call dword 0x3a1c
ret
jmp dword 0x3384
jmp short 0x46b1a
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
ret
lea eax,[eax+0x0]
push esi
mov esi,edx
mov edx,eax
mov eax,esi
mov ecx,[eax]
call dword [ecx+0x6c]
pop esi
ret
mov eax,eax
ret
lea eax,[eax+0x0]
push ebx
cmp word [eax+0x1f2],byte +0x0
jz 0x46b63
mov ebx,eax
mov edx,eax
mov eax,[ebx+0x1f4]
call dword [ebx+0x1f0]
pop ebx
ret
lea eax,[eax+0x0]
push ebx
cmp word [eax+0x1fa],byte +0x0
jz 0x46b83
mov ebx,eax
mov edx,eax
mov eax,[ebx+0x1fc]
call dword [ebx+0x1f8]
pop ebx
ret
lea eax,[eax+0x0]
push ebp
mov ebp,esp
push ebx
push esi
push edi
mov edi,ecx
mov esi,edx
mov ebx,eax
movzx edx,word [ebp+0x8]
mov eax,edi
call dword 0x12a1c
push eax
mov ecx,esi
mov edx,0xb038
mov eax,ebx
call dword 0x41588
test eax,eax
jl 0x46bd1
cmp word [ebx+0x1e2],byte +0x0
jz 0x46bd1
push edi
mov eax,[ebp+0x8]
push eax
mov ecx,esi
mov edx,ebx
mov eax,[ebx+0x1e4]
call dword [ebx+0x1e0]
pop edi
pop esi
pop ebx
pop ebp
ret 0x4
push ebp
mov ebp,esp
push ebx
cmp word [eax+0x1ea],byte +0x0
jz 0x46c06
push ecx
mov ecx,[ebp+0x10]
push ecx
movzx ecx,byte [ebp+0xc]
push ecx
mov ecx,[ebp+0x8]
push ecx
mov ebx,eax
mov ecx,edx
mov edx,eax
mov eax,[ebx+0x1ec]
call dword [ebx+0x1e8]
pop ebx
pop ebp
ret 0xc
nop
push ebp
mov ebp,esp
add esp,byte -0x8
push esi
push edi
mov [ebp-0x8],ecx
mov [ebp-0x4],edx
mov edi,eax
mov edx,[ebp-0x4]
mov eax,edi
mov si,0xffd1
call dword 0x2dec
mov eax,[ebp+0x10]
push eax
movzx eax,byte [ebp+0xc]
push eax
mov eax,[ebp+0x8]
push eax
mov ecx,[ebp-0x8]
mov edx,[ebp-0x4]
mov eax,edi
mov si,0xffc2
call dword 0x2dec
pop edi
pop esi
pop ecx
pop ecx
pop ebp
ret 0xc
push ebx
push esi
push edi
push ecx
mov edi,ecx
mov esi,edx
mov ebx,eax
mov byte [esp],0x1
cmp word [ebx+0x222],byte +0x0
jz 0x46c7e
push esi
lea eax,[esp+0x4]
push eax
mov ecx,edi
mov edx,ebx
mov eax,[ebx+0x224]
call dword [ebx+0x220]
cmp byte [esp],0x0
jz 0x46c97
push edi
mov ecx,esi
mov edx,0xb039
mov eax,ebx
call dword 0x41588
test eax,eax
jz 0x46c9b
xor eax,eax
jmp short 0x46c9d
mov al,0x1
mov [esp],al
movzx eax,byte [esp]
pop edx
pop edi
pop esi
pop ebx
ret
lea eax,[eax+0x0]
push ebx
push esi
push edi
mov edi,ecx
mov esi,edx
mov ebx,eax
mov edx,esi
mov eax,[ebx+0x4]
call dword 0x1aabc
mov edx,[dword 0x43c888]
call dword 0x2da0
mov [edi],eax
pop edi
pop esi
pop ebx
ret
mov edx,[eax+0x1ac]
test edx,edx
jz 0x46cde
mov eax,[edx+0x8]
ret
xor eax,eax
ret
lea eax,[eax+0x0]
push ebx
push esi
push edi
mov edi,edx
mov ebx,eax
mov esi,[ebx+0x1ac]
test esi,esi
jz 0x46d00
mov edx,edi
mov eax,esi
call dword 0x13e7c
jmp short 0x46d02
xor eax,eax
pop edi
pop esi
pop ebx
ret
mov eax,eax
push ebp
mov ebp,esp
add esp,byte -0x8
push ebx
push esi
push edi
mov esi,[ebp+0xc]
lea edi,[ebp-0x8]
movsd
movsd
mov esi,ecx
mov edi,edx
mov ebx,eax
push esi
mov eax,ebx
call dword 0x4831c
push eax
call dword 0x6110
push byte +0xa
push byte +0xa
push esi
call dword 0x6130
cmp word [ebx+0x202],byte +0x0
jz 0x46d5a
push esi
lea eax,[ebp-0x8]
push eax
mov eax,[ebp+0x8]
push eax
mov ecx,edi
mov edx,ebx
mov eax,[ebx+0x204]
call dword [ebx+0x200]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
ret 0x8
nop
push ebx
push esi
push edi
mov esi,eax
mov eax,esi
call dword 0x46cd0
mov edi,eax
test edi,edi
jng 0x46d98
mov ebx,edi
dec ebx
cmp ebx,byte +0x0
jl 0x46d98
mov edx,ebx
mov eax,[esi+0x1ac]
call dword 0x13e7c
cmp byte [eax+0x57],0x0
jnz 0x46d92
dec edi
dec ebx
cmp ebx,byte -0x1
jnz 0x46d7e
mov eax,edi
pop edi
pop esi
pop ebx
ret
mov eax,eax
ret
lea eax,[eax+0x0]
push ebx
push esi
mov esi,edx
mov ebx,eax
cmp dword [ebx+0x1b0],byte +0x0
jnz 0x46de3
cmp byte [ebx+0x1dc],0x0
jz 0x46de3
cmp byte [ebx+0x1db],0x0
jz 0x46de3
mov ecx,ebx
mov dl,0x1
mov eax,[0x4685b0]
call dword [eax+0x44]
mov edx,eax
test edx,edx
jz 0x46dda
sub edx,byte -0x78
mov eax,esi
call dword 0x5288
jmp short 0x46df0
mov eax,esi
mov edx,[ebx+0x1b0]
call dword 0x5288
cmp byte [ebx+0x240],0x0
jnz 0x46e02
cmp dword [esi],byte +0x0
jnz 0x46e02
xor eax,eax
jmp short 0x46e04
mov al,0x1
mov [ebx+0x240],al
pop esi
pop ebx
ret
lea eax,[eax+0x0]
push ebx
mov ebx,eax
test byte [ebx+0x1c],0x10
jz 0x46e3f
test byte [ebx+0x55],0x8
setnz al
xor al,0x1
cmp dl,al
jz 0x46e3f
test dl,dl
jnz 0x46e32
or word [ebx+0x54],0x800
jmp short 0x46e38
and word [ebx+0x54],0xf7ff
mov eax,ebx
call dword 0x44ccc
pop ebx
ret
lea eax,[eax+0x0]
push ebp
mov ebp,esp
push byte +0x0
push ebx
push esi
push edi
mov ebx,edx
mov edi,eax
xor eax,eax
push ebp
push dword 0x447eec
push dword [fs:eax]
mov [fs:eax],esp
cmp bl,[edi+0x1dc]
jz 0x46ed6
mov [edi+0x1dc],bl
test byte [edi+0x1c],0x10
jnz 0x46ed6
mov edx,ebx
mov eax,edi
call dword 0x3db94
test bl,bl
jnz 0x46e9f
mov eax,[edi+0x1ac]
call dword 0x2bf0
xor eax,eax
mov [edi+0x1ac],eax
lea eax,[edi+0x1b0]
call dword 0x5270
jmp short 0x46ed6
cmp dword [edi+0x1ac],byte +0x0
jnz 0x46eba
mov dl,0x1
mov eax,[0x41294c]
call dword 0x2bc0
mov [edi+0x1ac],eax
lea edx,[ebp-0x4]
mov eax,edi
mov si,0xffc5
call dword 0x2dec
mov edx,[ebp-0x4]
lea eax,[edi+0x1b0]
call dword 0x5288
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x447ef3
lea eax,[ebp-0x4]
call dword 0x5270
ret
jmp dword 0x3384
jmp short 0x46ee3
pop edi
pop esi
pop ebx
pop ecx
pop ebp
ret
lea eax,[eax+0x0]
push ebp
mov ebp,esp
add esp,byte -0x18
push ebx
push esi
push edi
mov [ebp-0x8],edx
mov [ebp-0x4],eax
mov eax,[ebp-0x8]
cmp dword [eax+0xc],byte +0x0
jnz dword 0x46fe3
mov eax,[ebp-0x8]
mov eax,[eax+0x4]
lea esi,[eax+0x4c]
lea edi,[ebp-0x18]
movsd
movsd
movsd
movsd
push byte +0x2
lea eax,[ebp-0x18]
push eax
mov eax,[ebp-0x4]
call dword 0x4831c
push eax
push byte +0x0
call dword 0x61e0
mov eax,[ebp-0x4]
call dword 0x43dd0
xor edx,edx
push ebp
push dword 0x447fbf
push dword [fs:edx]
mov [fs:edx],esp
mov eax,[ebp-0x8]
mov eax,[eax+0x4]
mov eax,[eax+0x40]
lea ecx,[ebp-0x18]
mov edx,[ebp-0x4]
mov si,0xffcc
call dword 0x2dec
mov eax,[ebp-0x4]
cmp byte [eax+0x1db],0x0
jz 0x46fa9
mov eax,[ebp-0x4]
cmp dword [eax+0x1b0],byte +0x0
jz 0x46fa9
mov eax,[ebp-0x8]
mov eax,[eax+0x4]
mov edx,[eax+0x60]
push edx
mov edx,[ebp-0x8]
movzx ecx,byte [eax+0x5c]
mov edx,[ebp-0x8]
mov edx,[eax+0x40]
mov eax,[ebp-0x4]
mov eax,[eax+0x1b0]
mov ebx,[eax]
call dword [ebx+0x18]
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x447fc6
mov eax,[ebp-0x4]
call dword 0x43dd8
ret
jmp dword 0x3384
jmp short 0x46fb6
mov dl,0x1
mov eax,[ebp-0x4]
call dword 0x53e38
test eax,eax
jz 0x46fd9
call dword 0x40528
mov eax,[ebp-0x8]
mov dword [eax+0xc],0x1
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret
mov eax,eax
xor ecx,ecx
mov [edx+0xc],ecx
cmp byte [eax+0x1db],0x0
jz 0x47011
cmp dword [eax+0x1b0],byte +0x0
jz 0x47011
mov edx,[edx+0x8]
mov eax,[eax+0x1b0]
mov ecx,[eax]
call dword [ecx+0x28]
ret
mov eax,eax
push ebp
mov ebp,esp
add esp,byte -0x8
push ebx
push esi
mov ebx,edx
mov [ebp-0x4],eax
mov eax,[ebp-0x4]
mov edx,[eax]
call dword [edx+0x58]
mov esi,eax
mov eax,[ebp-0x4]
call dword 0x2ac8
cmp esi,eax
jnz 0x47086
mov eax,[ebp-0x4]
movzx eax,byte [eax+0x57]
mov [ebp-0x5],al
xor eax,eax
push ebp
push dword 0x44807f
push dword [fs:eax]
mov [fs:eax],esp
mov eax,[ebx+0x8]
lea ecx,[eax+0x4c]
xor edx,edx
mov eax,[ebp-0x4]
mov si,0xffcc
call dword 0x2dec
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x448090
cmp byte [ebp-0x5],0x0
jz 0x4707e
mov eax,[ebp-0x4]
call dword 0x40528
ret
jmp dword 0x3384
jmp short 0x47070
mov edx,ebx
mov eax,[ebp-0x4]
call dword 0x427e8
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
ret
mov eax,eax
push ebx
push ecx
mov [esp],cl
cmp word [eax+0x20a],byte +0x0
jz 0x470be
movzx ecx,byte [esp]
push ecx
mov ecx,edx
mov ebx,eax
mov edx,eax
mov eax,[ebx+0x20c]
call dword [ebx+0x208]
pop edx
pop ebx
ret
lea eax,[eax+0x0]
push ebx
push esi
push edi
push ebp
add esp,byte -0x8
mov edi,edx
mov esi,eax
mov bl,0x1
xor edx,edx
mov eax,esi
call dword 0x53e38
mov ebp,eax
test ebp,ebp
jz 0x47136
cmp esi,ebp
jz 0x47136
cmp byte [ebp+0x275],0x0
jz 0x470fa
mov edx,edi
mov eax,ebp
call dword 0x470c4
test al,al
jnz 0x47162
cmp dword [ebp+0x30],byte +0x0
jz 0x47136
mov dl,0x1
mov eax,ebp
call dword 0x53e38
mov [esp+0x4],eax
cmp dword [esp+0x4],byte +0x0
jz 0x47136
cmp ebp,[esp+0x4]
jz 0x47136
mov eax,[esp+0x4]
cmp byte [eax+0x275],0x0
jz 0x47136
mov edx,edi
mov eax,[esp+0x4]
call dword 0x470c4
test al,al
jnz 0x47162
mov eax,[edi+0x8]
call dword 0x53cf8
mov [esp],al
test byte [esi+0x51],0x10
jnz 0x47160
lea edx,[edi+0x4]
movzx ecx,byte [esp]
mov eax,esi
mov si,0xffba
call dword 0x2dec
cmp word [edi+0x4],byte +0x0
jz 0x47162
xor ebx,ebx
mov eax,ebx
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
ret
nop
push ebx
push esi
mov esi,edx
mov ebx,eax
mov edx,esi
mov eax,ebx
call dword 0x470c4
test al,al
jnz 0x47188
mov edx,esi
mov eax,ebx
mov ecx,[eax]
call dword [ecx-0x10]
movzx edx,word [esi+0x4]
mov eax,ebx
call dword 0x49620
pop esi
pop ebx
ret
mov eax,eax
push ebx
push esi
mov esi,edx
mov ebx,eax
mov edx,esi
mov eax,ebx
call dword 0x470c4
test al,al
jnz 0x471b4
mov edx,esi
mov eax,ebx
mov ecx,[eax]
call dword [ecx-0x10]
movzx edx,word [esi+0x4]
mov eax,ebx
call dword 0x49620
pop esi
pop ebx
ret
mov eax,eax
push ebx
push ecx
mov [esp],cl
cmp word [eax+0x21a],byte +0x0
jz 0x471ea
movzx ecx,byte [esp]
push ecx
mov ecx,edx
mov ebx,eax
mov edx,eax
mov eax,[ebx+0x21c]
call dword [ebx+0x218]
pop edx
pop ebx
ret
lea eax,[eax+0x0]
push ebx
push esi
push edi
push ebp
push ecx
mov edi,edx
mov esi,eax
mov bl,0x1
mov dl,0x1
mov eax,esi
call dword 0x53e38
mov ebp,eax
test ebp,ebp
jz 0x47224
cmp esi,ebp
jz 0x47224
cmp byte [ebp+0x275],0x0
jz 0x47224
mov edx,edi
mov eax,ebp
call dword 0x471f0
test al,al
jnz 0x47250
mov eax,[edi+0x8]
call dword 0x53cf8
mov [esp],al
test byte [esi+0x51],0x10
jnz 0x4724e
lea edx,[edi+0x4]
movzx ecx,byte [esp]
mov eax,esi
mov si,0xffb9
call dword 0x2dec
cmp word [edi+0x4],byte +0x0
jz 0x47250
xor ebx,ebx
mov eax,ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
ret
push ebx
push esi
mov esi,edx
mov ebx,eax
mov edx,esi
mov eax,ebx
call dword 0x471f0
test al,al
jnz 0x47274
mov edx,esi
mov eax,ebx
mov ecx,[eax]
call dword [ecx-0x10]
pop esi
pop ebx
ret
nop
push ebx
push esi
mov esi,edx
mov ebx,eax
mov edx,esi
mov eax,ebx
call dword 0x471f0
test al,al
jnz 0x47294
mov edx,esi
mov eax,ebx
mov ecx,[eax]
call dword [ecx-0x10]
pop esi
pop ebx
ret
nop
push ebx
cmp word [eax+0x212],byte +0x0
jz 0x472b5
mov ecx,edx
mov ebx,eax
mov edx,eax
mov eax,[ebx+0x214]
call dword [ebx+0x210]
pop ebx
ret
nop
push ebx
push esi
push edi
push ebp
push ecx
mov edi,edx
mov esi,eax
mov bl,0x1
mov dl,0x1
mov eax,esi
call dword 0x53e38
mov ebp,eax
test ebp,ebp
jz 0x472ec
cmp esi,ebp
jz 0x472ec
cmp byte [ebp+0x275],0x0
jz 0x472ec
mov edx,edi
mov eax,ebp
call dword 0x472b8
test al,al
jnz 0x47316
test byte [esi+0x51],0x10
jnz 0x47314
movzx eax,byte [edi+0x4]
mov [esp],al
mov edx,esp
mov eax,esi
mov si,0xffb8
call dword 0x2dec
movzx eax,byte [esp]
mov [edi+0x4],ax
cmp byte [edi+0x4],0x0
jz 0x47316
xor ebx,ebx
mov eax,ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
ret
mov eax,eax
push ebx
push esi
mov esi,edx
mov ebx,eax
mov edx,esi
mov eax,ebx
call dword 0x472b8
test al,al
jnz 0x4733c
mov edx,esi
mov eax,ebx
mov ecx,[eax]
call dword [ecx-0x10]
pop esi
pop ebx
ret
nop
push ebp
mov ebp,esp
add esp,byte -0x8
push ebx
push esi
push edi
mov [ebp-0x4],eax
mov byte [ebp-0x5],0x0
mov eax,[ebp-0x4]
cmp byte [eax+0x1da],0x0
jz dword 0x473e3
mov eax,[ebp-0x4]
call dword 0x442b4
mov esi,eax
dec esi
test esi,esi
jl 0x473e3
inc esi
xor edi,edi
mov edx,edi
mov eax,[ebp-0x4]
call dword 0x44278
mov ebx,eax
cmp byte [ebx+0x57],0x0
jz 0x473df
mov eax,ebx
mov edx,[eax]
call dword [edx+0x50]
test al,al
jz 0x473df
test byte [ebx+0x52],0x1
jz 0x473b8
mov eax,[ebp+0x8]
mov eax,[eax-0x4]
mov eax,[eax+0x8]
push eax
mov eax,[ebp+0x8]
mov ecx,[eax-0x4]
mov ecx,[ecx+0x4]
mov edx,0x112
mov eax,ebx
call dword 0x41588
test eax,eax
jnz 0x473d9
mov eax,ebx
mov edx,[dword 0x43d11c]
call dword 0x2d7c
test al,al
jz 0x473df
mov eax,[ebp+0x8]
push eax
mov eax,ebx
call dword 0x47340
pop ecx
test al,al
jz 0x473df
mov byte [ebp-0x5],0x1
jmp short 0x473e3
inc edi
dec esi
jnz 0x47372
movzx eax,byte [ebp-0x5]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
ret
mov eax,eax
push ebp
mov ebp,esp
push ecx
push ebx
push esi
mov [ebp-0x4],edx
mov ebx,eax
mov eax,[ebp-0x4]
mov eax,[eax+0x4]
and eax,0xfff0
cmp eax,0xf100
jnz 0x4746b
mov eax,[ebp-0x4]
cmp word [eax+0x8],byte +0x20
jz 0x4746b
mov eax,[ebp-0x4]
cmp word [eax+0x8],byte +0x2d
jz 0x4746b
mov eax,[ebx+0x1b4]
push eax
call dword 0x6170
test eax,eax
jnz 0x4746b
call dword 0x5fa8
test eax,eax
jnz 0x4746b
mov eax,[0x468d34]
mov eax,[eax]
cmp ebx,[eax+0x44]
jz 0x4746b
mov dl,0x1
mov eax,ebx
call dword 0x53e38
mov esi,eax
test esi,esi
jz 0x4746b
mov eax,[ebp-0x4]
push eax
xor ecx,ecx
mov edx,0xb017
mov eax,esi
call dword 0x41588
test eax,eax
jnz 0x47494
mov eax,[ebp-0x4]
mov eax,[eax+0x4]
and eax,0xfff0
cmp eax,0xf100
jnz 0x4748a
push ebp
mov eax,ebx
call dword 0x47340
pop ecx
test al,al
jnz 0x47494
mov edx,[ebp-0x4]
mov eax,ebx
mov ecx,[eax]
call dword [ecx-0x10]
pop esi
pop ebx
pop ecx
pop ebp
ret
lea eax,[eax+0x0]
push ebx
push esi
mov ebx,edx
mov esi,eax
mov edx,ebx
mov eax,[ebx+0x8]
call dword 0x45a44
test al,al
jnz 0x474b9
mov edx,ebx
mov eax,esi
mov ecx,[eax]
call dword [ecx-0x10]
pop esi
pop ebx
ret
push ebx
push esi
push edi
mov ebx,edx
mov edi,eax
movzx esi,word [ebx+0x4]
cmp si,byte +0x1
jz 0x474d3
cmp si,byte +0x2
jnz 0x474e1
mov edx,ebx
mov eax,[ebx+0x8]
call dword 0x45a44
test al,al
jnz 0x474ea
mov edx,ebx
mov eax,edi
mov ecx,[eax]
call dword [ecx-0x10]
pop edi
pop esi
pop ebx
ret
mov eax,eax
push ebx
push esi
mov ebx,edx
mov esi,eax
mov edx,ebx
mov eax,[ebx+0x8]
call dword 0x45a44
test al,al
jnz 0x4750d
mov edx,ebx
mov eax,esi
mov ecx,[eax]
call dword [ecx-0x10]
pop esi
pop ebx
ret
push ebx
push esi
push edi
push ebp
mov edi,edx
mov ebx,eax
cmp dword [ebx+0x64],byte +0x0
jnz 0x4755a
mov eax,ebx
call dword 0x40208
mov esi,eax
cmp esi,byte +0x1
jnl 0x4753b
mov eax,0x448570
call dword 0x8668
mov [ebx+0x64],eax
jmp short 0x4755a
lea eax,[esi+0x1]
call dword 0x8648
mov ebp,eax
mov [ebx+0x64],ebp
mov eax,ebp
call dword 0x865c
mov ecx,eax
mov edx,ebp
mov eax,ebx
call dword 0x40218
mov edx,edi
mov eax,ebx
mov ecx,[eax]
call dword [ecx-0x10]
mov eax,ebx
call dword 0x4979c
pop ebp
pop edi
pop esi
pop ebx
ret
add [eax],al
add [eax],al
add [esi-0x75],dl
lock mov eax,esi
mov ecx,[eax]
call dword [ecx-0x10]
xor eax,eax
mov [esi+0x1b4],eax
mov byte [esi+0x1da],0x0
pop esi
ret
nop
push esi
mov esi,eax
test byte [esi+0x1c],0x10
jz 0x475a8
cmp dword [esi+0x30],byte +0x0
jz 0x475a8
mov dword [edx+0xc],0x1
pop esi
ret
mov eax,esi
mov ecx,[eax]
call dword [ecx-0x10]
pop esi
ret
lea eax,[eax+0x0]
push ebx
push esi
push edi
push ebp
push ecx
mov [esp],dl
mov ebp,eax
movzx edx,byte [esp]
mov eax,ebp
call dword 0x3f2f4
mov ebx,eax
cmp byte [ebp+0x57],0x0
jz 0x47603
mov eax,ebp
call dword 0x442b4
mov edi,eax
dec edi
cmp edi,byte +0x0
jl 0x47603
test [esp],bl
jnz 0x47603
mov edx,edi
mov eax,ebp
call dword 0x44278
movzx edx,byte [esp]
mov si,0xffd0
call dword 0x2dec
or bl,al
dec edi
cmp edi,byte -0x1
jnz 0x475e0
mov eax,ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
ret
nop
push ebx
push esi
push edi
mov edi,edx
mov ebx,eax
or word [ebx+0x54],byte +0x4
mov dl,0x1
mov eax,ebx
mov si,0xffd0
call dword 0x2dec
and eax,byte +0x7f
mov [edi+0xc],eax
pop edi
pop esi
pop ebx
ret
nop
push ebx
push esi
push edi
mov edi,edx
mov ebx,eax
xor edx,edx
mov eax,ebx
mov si,0xffd0
call dword 0x2dec
and eax,byte +0x7f
mov [edi+0xc],eax
pop edi
pop esi
pop ebx
ret
mov eax,eax
push esi
mov esi,eax
mov eax,esi
mov ecx,[eax]
call dword [ecx-0x10]
mov dx,0xb023
mov eax,esi
call dword 0x44344
pop esi
ret
nop
push ebx
push esi
mov esi,edx
mov ebx,eax
mov edx,esi
mov eax,ebx
call dword 0x425a0
mov eax,[0x468eb4]
cmp byte [eax+0xd],0x0
jz 0x4768f
cmp dword [esi+0x4],byte +0x0
jnz 0x4768f
mov eax,ebx
call dword 0x44c28
mov dx,0xb03d
mov eax,ebx
call dword 0x44344
pop esi
pop ebx
ret
lea eax,[eax+0x0]
push esi
mov esi,eax
mov eax,[0x468eb4]
cmp byte [eax+0xd],0x0
jz 0x47703
mov eax,esi
call dword 0x409a4
test al,al
jz 0x476df
mov eax,[0x468d34]
mov eax,[eax]
cmp dword [eax+0x38],byte +0x0
jz 0x47703
push byte +0x1
mov eax,[0x468d34]
mov eax,[eax]
mov eax,[eax+0x38]
call dword 0x3eac
push eax
call dword 0x61c8
jmp short 0x47703
mov eax,[0x468d34]
mov eax,[eax]
cmp dword [eax+0x3c],byte +0x0
jz 0x47703
push byte +0x1
mov eax,[0x468d34]
mov eax,[eax]
mov eax,[eax+0x3c]
call dword 0x3eac
push eax
call dword 0x61c8
mov eax,esi
mov si,0xffc1
call dword 0x2dec
pop esi
ret
push esi
mov esi,eax
mov eax,esi
mov si,0xffc0
call dword 0x2dec
pop esi
ret
push ebx
push esi
mov esi,edx
mov ebx,eax
mov edx,esi
mov eax,ebx
call dword 0x45368
test al,al
jnz 0x4773c
mov edx,esi
mov eax,ebx
call dword 0x426d0
pop esi
pop ebx
ret
nop
push ebx
mov ecx,[eax+0x30]
test ecx,ecx
jz 0x47750
mov ebx,ecx
mov eax,[ebx+0x3c]
call dword [ebx+0x38]
pop ebx
ret
mov eax,eax
push ebx
mov ecx,[eax+0x30]
test ecx,ecx
jz 0x47764
mov ebx,ecx
mov eax,[ebx+0x3c]
call dword [ebx+0x38]
pop ebx
ret
mov eax,eax
call dword 0x442d4
ret
mov eax,eax
call dword 0x442d4
ret
mov eax,eax
call dword 0x442d4
ret
mov eax,eax
push ebx
mov ebx,eax
cmp byte [ebx+0x57],0x0
jnz 0x47798
cmp dword [ebx+0x30],byte +0x0
jz 0x47798
xor edx,edx
mov eax,ebx
call dword 0x44030
test byte [ebx+0x1c],0x10
jz 0x477a4
test byte [ebx+0x51],0x4
jz 0x477ab
mov eax,ebx
call dword 0x44e3c
pop ebx
ret
lea eax,[eax+0x0]
movzx edx,byte [eax+0x1da]
movzx edx,word [edx*2+0x468674]
push edx
push byte +0x0
push byte +0x0
push byte +0x0
push byte +0x0
push byte +0x0
mov eax,[eax+0x1b4]
push eax
call dword 0x6320
ret
nop
push ebx
mov ebx,eax
mov eax,ebx
mov edx,[eax]
call dword [edx+0x50]
test al,al
jnz 0x477f5
cmp dword [ebx+0x30],byte +0x0
jz 0x477f5
xor edx,edx
mov eax,ebx
call dword 0x44030
mov eax,ebx
call dword 0x486bc
test al,al
jz 0x4781e
test byte [ebx+0x1c],0x10
jnz 0x4781e
mov eax,ebx
mov edx,[eax]
call dword [edx+0x50]
neg al
sbb eax,eax
push eax
mov eax,[ebx+0x1b4]
push eax
call dword 0x5f58
pop ebx
ret
push ebx
mov ebx,eax
mov eax,ebx
call dword 0x42488
mov edx,[ebx+0x70]
mov eax,[ebx+0x1a4]
call dword 0x20454
mov dx,0xb009
mov eax,ebx
call dword 0x44344
pop ebx
ret
lea eax,[eax+0x0]
push ebx
mov ebx,eax
mov eax,ebx
call dword 0x42478
mov eax,ebx
call dword 0x486bc
test al,al
jz 0x47875
push byte +0x0
mov eax,[ebx+0x68]
call dword 0x1fbd8
mov ecx,eax
mov edx,0x30
mov eax,ebx
call dword 0x41588
mov dx,0xb008
mov eax,ebx
call dword 0x44344
pop ebx
ret
mov eax,eax
push ebx
add esp,byte -0x8
mov ebx,eax
call dword 0x5fa8
test eax,eax
jnz 0x478bd
push esp
call dword 0x5fd8
mov eax,esp
xor edx,edx
call dword 0x3e800
cmp ebx,eax
jnz 0x478bd
push byte +0x1
mov eax,ebx
call dword 0x4831c
mov ecx,eax
mov edx,0x20
mov eax,ebx
call dword 0x41588
pop ecx
pop edx
pop ebx
ret
lea eax,[eax+0x0]
push esi
mov esi,eax
mov eax,esi
mov ecx,[eax]
call dword [ecx-0x10]
mov eax,esi
call dword 0x486bc
test al,al
jz 0x47902
push byte +0x37
push byte +0x0
push byte +0x0
push byte +0x0
push byte +0x0
push byte +0x0
mov eax,esi
call dword 0x4831c
push eax
call dword 0x6320
cmp byte [esi+0x57],0x0
jz 0x47902
mov eax,esi
mov edx,[eax]
call dword [edx+0x80]
pop esi
ret
push ebx
mov ebx,eax
test byte [ebx+0x50],0x10
jz 0x47935
cmp dword [ebx+0x30],byte +0x0
jz 0x47935
mov eax,ebx
call dword 0x486bc
test al,al
jz 0x47935
mov eax,[ebx+0x1b4]
push eax
call dword 0x6198
test eax,eax
jz 0x47935
mov eax,ebx
call dword 0x48220
mov dx,0xb011
mov eax,ebx
call dword 0x44344
pop ebx
ret
mov eax,eax
push ebx
mov ebx,eax
cmp byte [ebx+0x1dd],0x0
jz 0x47980
cmp dword [edx+0x4],byte +0x0
jz 0x47968
cmp dword [edx+0x8],byte +0x0
setnz al
mov edx,eax
mov eax,ebx
call dword 0x484f8
jmp short 0x47979
mov eax,[ebx+0x30]
movzx edx,byte [eax+0x1d9]
mov eax,ebx
call dword 0x484f8
mov byte [ebx+0x1dd],0x1
pop ebx
ret
mov eax,eax
call dword 0x442d4
ret
mov eax,eax
call dword 0x442d4
ret
mov eax,eax
call dword 0x442d4
ret
mov eax,eax
call dword 0x442d4
ret
mov eax,eax
push ebx
push esi
push edi
push ebp
add esp,byte -0x8
mov ebx,edx
mov esi,eax
mov edi,[ebx+0x8]
movzx eax,byte [ebx+0x4]
sub al,0x4
jc 0x479c0
dec al
jz 0x479d2
jmp short 0x479fc
cmp dword [edi+0xc],byte +0x0
jz 0x479fc
mov edx,ebx
mov eax,[edi+0xc]
call dword 0x40fe0
jmp short 0x479fc
push byte +0x0
push byte +0x0
lea ecx,[esp+0x8]
mov edx,edi
mov eax,esi
call dword 0x3fdc8
lea edx,[esp+0x8]
xor ecx,ecx
mov eax,esi
call dword 0x45158
mov ebp,eax
mov [ebx+0xc],ebp
test ebp,ebp
jnz 0x479fc
mov [ebx+0xc],esi
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
ret
nop
push ebx
mov ecx,[eax+0x30]
test ecx,ecx
jz 0x47a14
mov ebx,ecx
mov eax,[ebx+0x3c]
call dword [ebx+0x38]
pop ebx
ret
mov eax,eax
push ebx
mov ecx,[eax+0x30]
test ecx,ecx
jz 0x47a28
mov ebx,ecx
mov eax,[ebx+0x3c]
call dword [ebx+0x38]
pop ebx
ret
mov eax,eax
push ebx
push esi
mov esi,edx
mov ebx,eax
mov edx,esi
mov eax,ebx
call dword 0x4262c
mov edx,esi
mov eax,ebx
call dword 0x442d4
pop esi
pop ebx
ret
nop
push ebx
push esi
push edi
push ebp
add esp,byte -0x8
mov ebp,edx
mov [esp],eax
mov byte [esp+0x4],0x1
mov eax,[esp]
test byte [eax+0x1c],0x10
jnz 0x47ab9
mov ebx,[esp]
test ebx,ebx
jz 0x47a98
mov eax,ebx
mov si,0xffd6
call dword 0x2dec
mov edi,eax
test edi,edi
jz 0x47a91
cmp dword [edi+0x38],byte +0x0
jz 0x47a91
mov edx,ebp
mov eax,edi
mov si,0xffee
call dword 0x2dec
test al,al
jnz 0x47ad3
mov ebx,[ebx+0x30]
test ebx,ebx
jnz 0x47a69
mov dl,0x1
mov eax,[esp]
call dword 0x53e38
mov ebx,eax
test ebx,ebx
jz 0x47ab9
mov edx,ebp
mov eax,ebx
mov si,0xffa5
call dword 0x2dec
test al,al
jnz 0x47ad3
mov ecx,[ebp+0x8]
movzx edx,word [ebp+0x4]
mov eax,0xb016
call dword 0x3cd74
test eax,eax
jnz 0x47ad3
mov byte [esp+0x4],0x0
movzx eax,byte [esp+0x4]
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
ret
nop
push ebx
push esi
push edi
mov esi,edx
mov ebx,eax
mov dword [esi+0xc],0x1
movzx edx,word [esi+0x4]
mov eax,ebx
call dword 0x49620
mov edx,esi
mov eax,ebx
call dword 0x47a48
test al,al
jnz dword 0x47bbf
test byte [ebx+0x1c],0x10
jnz dword 0x47bba
push ebx
movzx ecx,word [esi+0x4]
mov edx,0xb02e
mov eax,ebx
call dword 0x41588
test eax,eax
jnz dword 0x47bbf
xor edi,edi
movzx eax,word [esi+0x4]
cmp eax,byte +0x1b
jg 0x47b4b
jz 0x47b68
sub eax,byte +0x3
jz 0x47b68
sub eax,byte +0x6
jz 0x47b5a
sub eax,byte +0x4
jz 0x47b68
jmp short 0x47b6d
add eax,byte -0x25
sub eax,byte +0x4
jc 0x47b61
sub eax,byte +0x2
jz 0x47b68
jmp short 0x47b6d
mov edi,0x2
jmp short 0x47b6d
mov edi,0x1
jmp short 0x47b6d
mov edi,0x4
test edi,edi
jz 0x47bba
push byte +0x0
movzx ecx,word [esi+0x4]
mov edx,0xb01e
mov eax,ebx
call dword 0x41588
test eax,eax
jnz 0x47bba
push byte +0x0
xor ecx,ecx
mov edx,0x87
mov eax,ebx
call dword 0x41588
test eax,edi
jnz 0x47bba
mov eax,[esi+0x8]
push eax
mov dl,0x1
mov eax,ebx
call dword 0x53e38
movzx ecx,word [esi+0x4]
mov edx,0xb005
call dword 0x41588
test eax,eax
jnz 0x47bbf
xor eax,eax
mov [esi+0xc],eax
pop edi
pop esi
pop ebx
ret
nop
push ebx
push esi
push edi
mov esi,edx
mov ebx,eax
test byte [ebx+0x1c],0x10
jnz 0x47c11
movzx edi,word [esi+0x4]
movzx eax,di
cmp eax,byte +0x1b
jg 0x47bf0
jz 0x47bfd
sub eax,byte +0x3
jz 0x47bfd
sub eax,byte +0x6
jz 0x47bfd
sub eax,byte +0x4
jz 0x47bfd
jmp short 0x47c11
add eax,byte -0x25
sub eax,byte +0x4
jc 0x47bfd
sub eax,byte +0x2
jnz 0x47c11
push byte +0x0
movzx ecx,di
mov edx,0xb01e
mov eax,ebx
call dword 0x41588
mov [esi+0xc],eax
pop edi
pop esi
pop ebx
ret
lea eax,[eax+0x0]
push ebx
push esi
mov esi,edx
mov ebx,eax
test byte [ebx+0x1c],0x10
jnz 0x47c63
mov dword [esi+0xc],0x1
push byte +0x0
xor ecx,ecx
mov edx,0x87
mov eax,ebx
call dword 0x41588
test al,0x80
jnz 0x47c5e
mov eax,[esi+0x8]
push eax
mov dl,0x1
mov eax,ebx
call dword 0x53e38
movzx ecx,word [esi+0x4]
mov edx,0xb006
call dword 0x41588
test eax,eax
jnz 0x47c63
xor eax,eax
mov [esi+0xc],eax
pop esi
pop ebx
ret
mov eax,eax
push ebx
push esi
mov esi,edx
mov ebx,eax
mov dword [esi+0xc],0x1
mov edx,esi
mov eax,ebx
call dword 0x47a48
test al,al
jnz 0x47cc1
test byte [ebx+0x1c],0x10
jnz 0x47cbc
push ebx
movzx ecx,word [esi+0x4]
mov edx,0xb02e
mov eax,ebx
call dword 0x41588
test eax,eax
jnz 0x47cc1
mov eax,[esi+0x8]
push eax
mov dl,0x1
mov eax,ebx
call dword 0x53e38
movzx ecx,word [esi+0x4]
mov edx,0xb005
call dword 0x41588
test eax,eax
jnz 0x47cc1
xor eax,eax
mov [esi+0xc],eax
pop esi
pop ebx
ret
push ebx
push esi
mov esi,edx
mov ebx,eax
test byte [ebx+0x1c],0x10
jnz 0x47cf5
cmp word [esi+0x4],byte +0x20
jz 0x47cf5
mov eax,[esi+0x8]
push eax
mov dl,0x1
mov eax,ebx
call dword 0x53e38
movzx ecx,word [esi+0x4]
mov edx,0xb006
call dword 0x41588
mov [esi+0xc],eax
pop esi
pop ebx
ret
push ebp
mov ebp,esp
add esp,byte -0x3c
push ebx
push esi
push edi
mov edi,ecx
mov esi,edx
mov ebx,eax
cmp esi,[ebx+0x40]
jnz 0x47d25
cmp edi,[ebx+0x44]
jnz 0x47d25
mov eax,[ebp+0xc]
cmp eax,[ebx+0x48]
jnz 0x47d25
mov eax,[ebp+0x8]
cmp eax,[ebx+0x4c]
jz dword 0x47dc9
mov eax,ebx
call dword 0x486bc
test al,al
jz 0x47d5c
mov eax,[ebx+0x1b4]
push eax
call dword 0x6170
test eax,eax
jnz 0x47d5c
push byte +0x14
mov eax,[ebp+0x8]
push eax
mov eax,[ebp+0xc]
push eax
push edi
push esi
push byte +0x0
mov eax,[ebx+0x1b4]
push eax
call dword 0x6320
jmp short 0x47db4
mov [ebx+0x40],esi
mov [ebx+0x44],edi
mov eax,[ebp+0xc]
mov [ebx+0x48],eax
mov eax,[ebp+0x8]
mov [ebx+0x4c],eax
mov eax,ebx
call dword 0x486bc
test al,al
jz 0x47db4
mov dword [ebp-0x2c],0x2c
lea eax,[ebp-0x2c]
push eax
mov eax,[ebx+0x1b4]
push eax
call dword 0x6108
lea edx,[ebp-0x3c]
mov eax,ebx
call dword 0x3fba8
lea esi,[ebp-0x3c]
lea edi,[ebp-0x10]
movsd
movsd
movsd
movsd
lea eax,[ebp-0x2c]
push eax
mov eax,[ebx+0x1b4]
push eax
call dword 0x6318
mov eax,ebx
call dword 0x3f794
mov eax,ebx
call dword 0x42ff8
mov eax,ebx
mov edx,[eax]
call dword [edx+0x5c]
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret 0x8
mov eax,eax
push ebx
push esi
push edi
push ebp
add esp,byte -0x8
mov [esp+0x4],ecx
mov [esp],edx
mov ebp,eax
mov eax,ebp
call dword 0x442b4
mov ebx,eax
dec ebx
test ebx,ebx
jl 0x47e12
inc ebx
xor edi,edi
mov edx,edi
mov eax,ebp
call dword 0x44278
mov ecx,[esp+0x4]
mov edx,[esp]
mov si,0xffec
call dword 0x2dec
inc edi
dec ebx
jnz 0x47df5
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
ret
lea eax,[eax+0x0]
push ebp
mov ebp,esp
push ecx
push ebx
push esi
mov esi,ecx
mov ebx,edx
mov [ebp-0x4],eax
mov eax,[ebp-0x4]
call dword 0x43dd0
xor eax,eax
push ebp
push dword 0x448eba
push dword [fs:eax]
mov [fs:eax],esp
mov ecx,esi
mov edx,ebx
mov eax,[ebp-0x4]
call dword 0x47dd4
cmp esi,ebx
jz 0x47e98
mov eax,[ebp-0x4]
test byte [eax+0x1c],0x2
jz 0x47e98
mov eax,[ebp-0x4]
test byte [eax+0x8c],0x20
jz 0x47e98
push esi
push ebx
mov eax,[ebp-0x4]
mov eax,[eax+0x242]
push eax
call dword 0x5bc0
mov edx,[ebp-0x4]
mov [edx+0x242],eax
push esi
push ebx
mov eax,[ebp-0x4]
mov eax,[eax+0x246]
push eax
call dword 0x5bc0
mov edx,[ebp-0x4]
mov [edx+0x246],eax
mov ecx,esi
mov edx,ebx
mov eax,[ebp-0x4]
call dword 0x3fea0
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x448ec1
mov eax,[ebp-0x4]
call dword 0x43dd8
ret
jmp dword 0x3384
jmp short 0x47eb1
pop esi
pop ebx
pop ecx
pop ebp
ret
mov eax,eax
push ebx
push esi
push edi
push ebp
add esp,byte -0xc
mov [esp+0x4],ecx
mov [esp],edx
mov edi,eax
mov ebx,[edi+0x1b4]
test ebx,ebx
jz 0x47eec
push ebx
call dword 0x6198
test eax,eax
jnz 0x47ef0
xor eax,eax
jmp short 0x47ef2
mov al,0x1
mov [esp+0x8],al
cmp byte [esp+0x8],0x0
jz 0x47f17
push byte +0x0
push byte +0x0
mov eax,[esp+0xc]
push eax
mov eax,[esp+0xc]
push eax
mov eax,[edi+0x1b4]
push eax
call dword 0x6270
mov eax,edi
call dword 0x442b4
mov esi,eax
dec esi
test esi,esi
jl 0x47f91
inc esi
xor ebp,ebp
mov edx,ebp
mov eax,edi
call dword 0x44278
mov ebx,eax
mov eax,ebx
mov edx,[dword 0x43d11c]
call dword 0x2d7c
test al,al
jz 0x47f4d
cmp dword [ebx+0x1b4],byte +0x0
jnz 0x47f5c
mov eax,[esp]
add [ebx+0x40],eax
mov eax,[esp+0x4]
add [ebx+0x44],eax
jmp short 0x47f8d
cmp byte [esp+0x8],0x0
jnz 0x47f8d
push byte +0x14
mov eax,ebx
mov edx,[eax+0x4c]
push edx
mov edx,[eax+0x48]
push edx
mov edx,[eax+0x44]
add edx,[esp+0x10]
push edx
mov edx,[eax+0x40]
add edx,[esp+0x10]
push edx
push byte +0x0
mov eax,[eax+0x1b4]
push eax
call dword 0x6320
inc ebp
dec esi
jnz 0x47f28
mov eax,edi
call dword 0x43df8
add esp,byte +0xc
pop ebp
pop edi
pop esi
pop ebx
ret
push esi
mov esi,[eax+0x30]
test esi,esi
jz 0x47fb4
mov edx,eax
mov eax,esi
mov ecx,[eax]
call dword [ecx+0xcc]
pop esi
ret
mov eax,eax
push ebx
push esi
push edi
push ebp
mov esi,edx
mov ebx,eax
mov eax,[ebx+0x30]
test eax,eax
jz dword 0x4808a
mov edx,[eax+0x1cc]
test edx,edx
jz 0x47fd8
sub esi,[edx+0x8]
mov eax,[eax+0x1d0]
mov edx,ebx
call dword 0x13ed8
mov edi,eax
test edi,edi
jl 0x48023
mov eax,[ebx+0x30]
mov edx,[eax+0x1d0]
mov eax,[edx+0x8]
test esi,esi
jnl 0x47ffd
xor esi,esi
cmp eax,esi
jg 0x48004
mov esi,eax
dec esi
cmp edi,esi
jz 0x48023
mov eax,edx
mov edx,edi
call dword 0x13d70
mov eax,[ebx+0x30]
mov eax,[eax+0x1d0]
mov ecx,ebx
mov edx,esi
call dword 0x13ef8
cmp dword [ebx+0x1b4],byte +0x0
jz 0x4808a
test esi,esi
jnz 0x48037
mov eax,0x1
jmp short 0x48073
mov eax,[ebx+0x30]
mov ebp,[eax+0x1d0]
mov eax,[ebp+0x8]
dec eax
cmp esi,eax
jnz 0x4804c
xor eax,eax
jmp short 0x48073
cmp edi,esi
jnl 0x48061
lea edx,[esi+0x1]
mov eax,ebp
call dword 0x13e7c
call dword 0x4831c
jmp short 0x48073
cmp edi,esi
jng 0x4808a
mov eax,ebp
mov edx,esi
call dword 0x13e7c
call dword 0x4831c
push byte +0x3
push byte +0x0
push byte +0x0
push byte +0x0
push byte +0x0
push eax
mov eax,[ebx+0x1b4]
push eax
call dword 0x6320
pop ebp
pop edi
pop esi
pop ebx
ret
nop
push ebx
push esi
mov ebx,[eax+0x30]
test ebx,ebx
jz 0x480c6
test dl,dl
jz 0x480a9
mov edx,[ebx+0x1d0]
mov ecx,[edx+0x8]
dec ecx
jmp short 0x480ab
xor ecx,ecx
xor edx,edx
mov esi,[ebx+0x1cc]
test esi,esi
jz 0x480ba
mov edx,[esi+0x8]
add ecx,edx
mov edx,ecx
call dword 0x47fb8
pop esi
pop ebx
ret
mov ecx,[eax+0x1b4]
test ecx,ecx
jz 0x480ec
push byte +0x3
push byte +0x0
push byte +0x0
push byte +0x0
push byte +0x0
and edx,byte +0x7f
movzx edx,word [edx*2+0x468678]
push edx
push ecx
call dword 0x6320
pop esi
pop ebx
ret
nop
push ebx
push esi
mov esi,edx
mov ebx,eax
test byte [ebx+0x1c],0x10
jz 0x4810f
push byte +0x12
push byte +0x0
mov eax,ebx
call dword 0x4831c
push eax
call dword 0x5fe8
jmp short 0x4811c
mov eax,ebx
call dword 0x4831c
push eax
call dword 0x5fe0
test eax,eax
jnz 0x48137
mov ecx,[dword 0x468d18]
mov dl,0x1
mov eax,[0x412890]
call dword 0xb50c
call dword 0x3464
mov edx,[ebx+0x1b4]
mov [esi],edx
pop esi
pop ebx
ret
mov eax,eax
push byte +0x0
xor ecx,ecx
mov edx,0xb034
call dword 0x41588
ret
nop
push ebx
push esi
push edi
mov esi,edx
mov ebx,eax
mov eax,ebx
call dword 0x486bc
test al,al
jz 0x481e3
mov eax,[ebx+0x30]
test eax,eax
jz 0x4817e
push byte +0x0
mov ecx,0x1
mov edx,0xb034
call dword 0x41588
cmp dword [esi+0x4],byte +0x0
jnz 0x481e3
test byte [ebx+0x50],0x40
setnz al
xor al,0x1
neg al
sbb eax,eax
push eax
push byte +0x0
mov eax,[ebx+0x1b4]
push eax
call dword 0x6150
call dword 0x4e314
call dword 0x4e41c
test al,al
jz 0x481e3
mov eax,ebx
call dword 0x442b4
mov edi,eax
dec edi
test edi,edi
jl 0x481e3
inc edi
xor esi,esi
mov edx,esi
mov eax,ebx
call dword 0x44278
test byte [eax+0x52],0x4
jz 0x481df
mov edx,esi
mov eax,ebx
call dword 0x44278
mov edx,[eax]
call dword [edx+0x80]
inc esi
dec edi
jnz 0x481bf
pop edi
pop esi
pop ebx
ret
nop
push ebx
mov ebx,eax
mov eax,ebx
call dword 0x486bc
test al,al
jz 0x48202
mov eax,[ebx+0x1b4]
push eax
call dword 0x6380
pop ebx
ret
push ebx
mov ebx,eax
mov eax,ebx
mov edx,[eax]
call dword [edx+0x80]
mov eax,ebx
mov edx,[eax]
call dword [edx+0x8c]
pop ebx
ret
lea eax,[eax+0x0]
push ebx
add esp,byte -0x10
mov ebx,eax
mov edx,esp
mov eax,ebx
call dword 0x3fba8
push byte +0x1
push byte +0x1
lea eax,[esp+0x8]
push eax
call dword 0x6130
push byte -0x1
lea eax,[esp+0x4]
push eax
mov eax,[ebx+0x30]
mov eax,[eax+0x1b4]
push eax
call dword 0x6150
add esp,byte +0x10
pop ebx
ret
push ebx
push esi
push ecx
mov ebx,eax
mov byte [esp],0x0
mov dl,0x1
mov eax,ebx
call dword 0x53e38
mov esi,eax
test esi,esi
jz 0x48290
cmp esi,ebx
jz 0x4828c
cmp byte [ebx+0x57],0x0
jz 0x48290
mov eax,ebx
mov edx,[eax]
call dword [edx+0x50]
test al,al
jz 0x48290
mov ebx,[ebx+0x30]
cmp esi,ebx
jnz 0x48274
mov byte [esp],0x1
movzx eax,byte [esp]
pop edx
pop esi
pop ebx
ret
push ebx
mov ebx,eax
mov dl,0x1
mov eax,ebx
call dword 0x53e38
test eax,eax
jz 0x482b1
mov edx,ebx
call dword 0x58db0
pop ebx
ret
cmp dword [ebx+0x1c4],byte +0x0
jz 0x482c9
mov eax,ebx
call dword 0x4831c
push eax
call dword 0x62b0
jmp short 0x482d2
mov dl,0x1
mov eax,ebx
call dword 0x53e48
pop ebx
ret
push ebx
mov ebx,eax
cmp dword [ebx+0x1b4],byte +0x0
jz 0x482ed
call dword 0x6000
cmp eax,[ebx+0x1b4]
jz 0x482f1
xor eax,eax
pop ebx
ret
mov al,0x1
pop ebx
ret
lea eax,[eax+0x0]
push ebx
mov ebx,eax
cmp dword [ebx+0x1b4],byte +0x0
jnz 0x4831a
mov eax,[ebx+0x30]
test eax,eax
jz 0x48310
call dword 0x482f8
mov eax,ebx
mov edx,[eax]
call dword [edx+0x98]
pop ebx
ret
push ebx
mov ebx,eax
mov eax,ebx
call dword 0x482f8
mov eax,[ebx+0x1b4]
pop ebx
ret
mov eax,eax
push ebx
push esi
push edi
push ebp
add esp,byte -0x8
mov esi,edx
mov [esp],eax
push byte +0x0
push esi
xor ecx,ecx
mov edx,0x7fffffff
mov eax,0x7fffffff
call dword 0x12a2c
mov eax,[esp]
call dword 0x442b4
mov edi,eax
dec edi
test edi,edi
jl dword 0x4845d
inc edi
mov dword [esp+0x4],0x0
mov edx,[esp+0x4]
mov eax,[esp]
call dword 0x44278
mov ebx,eax
cmp byte [ebx+0x57],0x0
jnz 0x48394
test byte [ebx+0x1c],0x10
jz dword 0x48452
test byte [ebx+0x51],0x4
jnz dword 0x48452
xor edx,edx
mov eax,[ebx+0x78]
mov ecx,[eax]
call dword [ecx+0x10]
cmp eax,[esi]
jnl 0x483ae
xor edx,edx
mov eax,[ebx+0x78]
mov ecx,[eax]
call dword [ecx+0x10]
mov [esi],eax
mov edx,0x1
mov eax,[ebx+0x78]
mov ecx,[eax]
call dword [ecx+0x10]
cmp eax,[esi+0x4]
jnl 0x483d0
mov edx,0x1
mov eax,[ebx+0x78]
mov ecx,[eax]
call dword [ecx+0x10]
mov [esi+0x4],eax
xor edx,edx
mov eax,[ebx+0x78]
mov ecx,[eax]
call dword [ecx+0x10]
mov ebp,eax
mov edx,0x2
mov eax,[ebx+0x78]
mov ecx,[eax]
call dword [ecx+0x10]
add ebp,eax
cmp ebp,[esi+0x8]
jng 0x4840e
xor edx,edx
mov eax,[ebx+0x78]
mov ecx,[eax]
call dword [ecx+0x10]
mov ebp,eax
mov edx,0x2
mov eax,[ebx+0x78]
mov ecx,[eax]
call dword [ecx+0x10]
add ebp,eax
mov [esi+0x8],ebp
mov edx,0x1
mov eax,[ebx+0x78]
mov ecx,[eax]
call dword [ecx+0x10]
mov ebp,eax
mov edx,0x3
mov eax,[ebx+0x78]
mov ecx,[eax]
call dword [ecx+0x10]
add ebp,eax
cmp ebp,[esi+0xc]
jng 0x48452
mov edx,0x1
mov eax,[ebx+0x78]
mov ecx,[eax]
call dword [ecx+0x10]
mov ebp,eax
mov edx,0x3
mov eax,[ebx+0x78]
mov ecx,[eax]
call dword [ecx+0x10]
add ebp,eax
mov [esi+0xc],ebp
inc dword [esp+0x4]
dec edi
jnz dword 0x4836c
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
ret
push ebx
push esi
mov ebx,edx
mov esi,eax
xor eax,eax
mov [ebx],eax
xor eax,eax
mov [ebx+0x4],eax
push ebx
mov eax,esi
call dword 0x4831c
push eax
call dword 0x5ea8
pop esi
pop ebx
ret
push ebx
push esi
mov esi,edx
mov ebx,eax
push esi
mov eax,ebx
call dword 0x4831c
push eax
call dword 0x5fc0
pop esi
pop ebx
ret
nop
push ebx
mov ebx,eax
test byte [ebx+0x1c],0x1
jnz 0x484d4
mov eax,ebx
call dword 0x486bc
test al,al
jz 0x484d4
push byte +0x16
mov eax,[ebx+0x4c]
push eax
mov eax,[ebx+0x48]
push eax
push byte +0x0
push byte +0x0
push byte +0x0
mov eax,ebx
call dword 0x4831c
push eax
call dword 0x6320
mov eax,ebx
mov edx,[eax]
call dword [edx+0x5c]
pop ebx
ret
mov eax,eax
cmp edx,[eax+0x19c]
jz 0x484f4
mov [eax+0x19c],edx
push byte +0x0
xor ecx,ecx
mov edx,0xb03b
call dword 0x41588
ret
lea eax,[eax+0x0]
cmp dl,[eax+0x1d9]
jz 0x4851b
mov [eax+0x1d9],dl
mov byte [eax+0x1dd],0x0
push byte +0x0
xor ecx,ecx
mov edx,0xb010
call dword 0x41588
ret
movzx eax,byte [eax+0x1dd]
xor al,0x1
ret
mov eax,eax
cmp dl,[eax+0x1dd]
jz 0x48550
mov [eax+0x1dd],dl
cmp dword [eax+0x30],byte +0x0
jz 0x48550
test byte [eax+0x1c],0x2
jnz 0x48550
push byte +0x0
xor ecx,ecx
mov edx,0xb011
call dword 0x41588
ret
lea eax,[eax+0x0]
push ebx
push esi
mov ebx,eax
mov esi,[ebx+0x30]
test esi,esi
jz 0x4856f
mov eax,[esi+0x1c8]
mov edx,ebx
call dword 0x13ed8
pop esi
pop ebx
ret
or eax,byte -0x1
pop esi
pop ebx
ret
lea eax,[eax+0x0]
push ebx
push esi
push edi
push ebp
mov esi,edx
mov ebx,eax
mov eax,ebx
call dword 0x48554
movsx eax,ax
test eax,eax
jl 0x485cc
mov edx,[ebx+0x30]
mov ebp,[edx+0x1c8]
mov edx,[ebp+0x8]
test si,si
jnl 0x485a1
xor esi,esi
movsx ecx,si
cmp edx,ecx
jg 0x485ab
mov esi,edx
dec esi
movsx edi,si
cmp eax,edi
jz 0x485cc
mov edx,ebp
xchg eax,edx
call dword 0x13d70
mov edx,edi
mov eax,[ebx+0x30]
mov eax,[eax+0x1c8]
mov ecx,ebx
call dword 0x13ef8
pop ebp
pop edi
pop esi
pop ebx
ret
lea eax,[eax+0x0]
test byte [eax+0x54],0x8
jz 0x485e4
movsx edx,dx
mov [eax+0x1d4],edx
ret
call dword 0x48578
ret
mov eax,eax
push ebx
push esi
mov ebx,edx
mov esi,eax
cmp bl,[esi+0x1d8]
jz 0x48646
mov [esi+0x1d8],bl
mov eax,esi
call dword 0x486bc
test al,al
jz 0x48636
push byte -0x10
mov eax,[esi+0x1b4]
push eax
call dword 0x60f8
and eax,0xfffeffff
test bl,bl
jz 0x48627
or eax,0x10000
push eax
push byte -0x10
mov eax,[esi+0x1b4]
push eax
call dword 0x6308
push byte +0x0
xor ecx,ecx
mov edx,0xb028
mov eax,esi
call dword 0x41588
pop esi
pop ebx
ret
lea eax,[eax+0x0]
push ebp
mov ebp,esp
push byte +0x0
push ebx
push esi
mov ebx,eax
xor eax,eax
push ebp
push dword 0x4496b0
push dword [fs:eax]
mov [fs:eax],esp
cmp dl,[ebx+0x1db]
jz 0x4869a
mov [ebx+0x1db],dl
test byte [ebx+0x1c],0x10
setnz al
xor al,0x1
test al,dl
jz 0x4869a
lea edx,[ebp-0x4]
mov eax,ebx
mov si,0xffc5
call dword 0x2dec
mov edx,[ebp-0x4]
lea eax,[ebx+0x1b0]
call dword 0x5288
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x4496b7
lea eax,[ebp-0x4]
call dword 0x5270
ret
jmp dword 0x3384
jmp short 0x486a7
pop esi
pop ebx
pop ecx
pop ebp
ret
cmp dword [eax+0x1b4],byte +0x0
setnz al
ret
nop
push ebx
push esi
push edi
add esp,byte -0x3c
mov ebx,eax
mov eax,[ebx+0x1b4]
push eax
call dword 0x6170
test eax,eax
jz 0x48705
mov dword [esp+0x10],0x2c
lea eax,[esp+0x10]
push eax
mov eax,[ebx+0x1b4]
push eax
call dword 0x6108
lea esi,[esp+0x2c]
mov edi,esp
movsd
movsd
movsd
movsd
jmp short 0x48712
push esp
mov eax,[ebx+0x1b4]
push eax
call dword 0x6110
push byte -0x10
mov eax,[ebx+0x1b4]
push eax
call dword 0x60f8
test eax,0x40000000
jz 0x4874d
push byte -0x8
mov eax,[ebx+0x1b4]
push eax
call dword 0x60f8
mov esi,eax
test esi,esi
jz 0x4874d
push esp
push esi
call dword 0x6268
lea eax,[esp+0x8]
push eax
push esi
call dword 0x6268
mov eax,[esp]
mov [ebx+0x40],eax
mov eax,[esp+0x4]
mov [ebx+0x44],eax
mov eax,[esp+0x8]
sub eax,[esp]
mov [ebx+0x48],eax
mov eax,[esp+0xc]
sub eax,[esp+0x4]
mov [ebx+0x4c],eax
mov eax,ebx
call dword 0x3f794
add esp,byte +0x3c
pop edi
pop esi
pop ebx
ret
lea eax,[eax+0x0]
push ebx
push esi
push edi
push ebp
add esp,byte -0x8
mov [esp],edx
mov ebp,eax
mov eax,[ebp+0x1c8]
test eax,eax
jz 0x487d7
mov edi,[eax+0x8]
dec edi
test edi,edi
jl 0x487d7
inc edi
mov dword [esp+0x4],0x0
mov eax,[ebp+0x1c8]
mov edx,[esp+0x4]
call dword 0x13e7c
mov ebx,eax
mov edx,ebx
mov eax,[esp]
call dword 0x13d24
mov edx,[esp]
mov eax,ebx
mov si,0xffb2
call dword 0x2dec
inc dword [esp+0x4]
dec edi
jnz 0x487a7
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
ret
mov eax,eax
push ebp
mov ebp,esp
add esp,byte -0x14
push ebx
push esi
push edi
mov [ebp-0x5],cl
mov edi,edx
mov [ebp-0x4],eax
xor eax,eax
mov [ebp-0xc],eax
mov dl,0x1
mov eax,[0x41294c]
call dword 0x2bc0
mov [ebp-0x14],eax
xor eax,eax
push ebp
push dword 0x4498d6
push dword [fs:eax]
mov [fs:eax],esp
mov edx,[ebp-0x14]
mov eax,[ebp-0x4]
mov si,0xffb2
call dword 0x2dec
mov eax,[ebp-0x14]
cmp dword [eax+0x8],byte +0x0
jng dword 0x488c0
mov edx,edi
mov eax,[ebp-0x14]
call dword 0x13ed8
mov [ebp-0x10],eax
cmp dword [ebp-0x10],byte -0x1
jnz 0x48859
cmp byte [ebp-0x5],0x0
jz 0x48854
mov eax,[ebp-0x14]
mov eax,[eax+0x8]
dec eax
mov [ebp-0x10],eax
jmp short 0x48859
xor eax,eax
mov [ebp-0x10],eax
mov ebx,[ebp-0x10]
cmp byte [ebp-0x5],0x0
jz 0x4886f
inc ebx
mov eax,[ebp-0x14]
cmp ebx,[eax+0x8]
jnz 0x4887a
xor ebx,ebx
jmp short 0x4887a
test ebx,ebx
jnz 0x48879
mov eax,[ebp-0x14]
mov ebx,[eax+0x8]
dec ebx
mov edx,ebx
mov eax,[ebp-0x14]
call dword 0x13e7c
mov edi,eax
mov eax,edi
mov si,0xffb6
call dword 0x2dec
test al,al
jz 0x488b5
cmp byte [ebp+0xc],0x0
jz 0x488a4
cmp byte [edi+0x1d8],0x0
jz 0x488b5
cmp byte [ebp+0x8],0x0
jz 0x488b2
mov eax,[edi+0x30]
cmp eax,[ebp-0x4]
jnz 0x488b5
mov [ebp-0xc],edi
cmp dword [ebp-0xc],byte +0x0
jnz 0x488c0
cmp ebx,[ebp-0x10]
jnz 0x4885c
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x4498dd
mov eax,[ebp-0x14]
call dword 0x2bf0
ret
jmp dword 0x3384
jmp short 0x488cd
mov eax,[ebp-0xc]
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret 0x8
lea eax,[eax+0x0]
push ebp
mov ebp,esp
push esi
mov esi,edx
mov edx,[ebp+0x8]
push edx
xor dl,0x1
push edx
mov edx,esi
call dword 0x487e0
mov esi,eax
test esi,esi
jz 0x48911
mov eax,esi
mov edx,[eax]
call dword [edx+0xd4]
pop esi
pop ebp
ret 0x4
mov eax,eax
push ebp
mov ebp,esp
add esp,byte -0x8
push ebx
push esi
mov [ebp-0x8],edx
mov [ebp-0x4],eax
mov eax,[ebp-0x4]
call dword 0x442b4
mov ebx,eax
dec ebx
test ebx,ebx
jl 0x48956
inc ebx
xor esi,esi
mov edx,esi
mov eax,[ebp-0x4]
call dword 0x44278
mov edx,[eax+0x4]
cmp edx,[ebp-0x8]
jnz 0x48952
mov edx,eax
mov eax,[ebp+0xc]
call dword [ebp+0x8]
inc esi
dec ebx
jnz 0x48938
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
ret 0x8
mov eax,eax
push ebx
push esi
mov esi,ecx
mov ebx,edx
mov eax,ebx
mov edx,[dword 0x43d11c]
call dword 0x2d7c
test al,al
jz 0x48983
mov edx,esi
mov eax,ebx
call dword 0x47fb8
pop esi
pop ebx
ret
mov eax,ebx
mov edx,[dword 0x43c888]
call dword 0x2d7c
test al,al
jz 0x4899d
mov edx,esi
mov eax,ebx
call dword 0x4053c
pop esi
pop ebx
ret
call dword 0x41358
ret
mov eax,eax
push ebp
mov ebp,esp
push ebx
push esi
push edi
mov esi,eax
mov eax,[esi+0x74]
cmp dword [eax+0x14],byte +0x0
jna 0x489c3
mov ebx,[esi+0x74]
mov ebx,[ebx+0x14]
mov [edx],ebx
jmp short 0x489c7
xor ebx,ebx
mov [edx],ebx
cmp dword [eax+0x10],byte +0x0
jna 0x489d7
mov ebx,[esi+0x74]
mov ebx,[ebx+0x10]
mov [ecx],ebx
jmp short 0x489db
xor ebx,ebx
mov [ecx],ebx
cmp dword [eax+0xc],byte +0x0
jna 0x489ee
mov ebx,[esi+0x74]
mov ebx,[ebx+0xc]
mov edi,[ebp+0xc]
mov [edi],ebx
jmp short 0x489f5
mov ebx,[ebp+0xc]
xor edi,edi
mov [ebx],edi
cmp dword [eax+0x8],byte +0x0
jna 0x48a08
mov eax,[esi+0x74]
mov eax,[eax+0x8]
mov ebx,[ebp+0x8]
mov [ebx],eax
jmp short 0x48a0f
mov eax,[ebp+0x8]
xor ebx,ebx
mov [eax],ebx
test byte [esi+0x52],0x10
jz 0x48a53
mov eax,[esi+0x78]
mov eax,[eax+0x8]
mov ebx,[esi+0x78]
add eax,[ebx+0x10]
cmp dword [edx],byte +0x0
jng 0x48a28
add [edx],eax
mov ebx,[ebp+0xc]
cmp eax,[ebx]
jg 0x48a34
mov ebx,[ebp+0xc]
sub [ebx],eax
mov eax,[esi+0x78]
mov eax,[eax+0xc]
mov ebx,[esi+0x78]
add eax,[ebx+0x14]
cmp dword [ecx],byte +0x0
jng 0x48a47
add [ecx],eax
mov ebx,[ebp+0x8]
cmp eax,[ebx]
jg 0x48a53
mov ebx,[ebp+0x8]
sub [ebx],eax
mov eax,[ebp+0xc]
push eax
mov eax,[ebp+0x8]
push eax
mov eax,esi
mov ebx,[eax]
call dword [ebx+0x38]
pop edi
pop esi
pop ebx
pop ebp
ret 0x8
lea eax,[eax+0x0]
push ebp
mov ebp,esp
add esp,byte -0x60
push ebx
push esi
push edi
mov [ebp-0x8],ecx
mov [ebp-0x4],edx
mov esi,eax
mov eax,esi
call dword 0x486bc
test al,al
jz dword 0x48ee5
mov eax,esi
call dword 0x442b4
test eax,eax
jz dword 0x48ee5
lea edx,[ebp-0x5e]
mov eax,esi
mov ecx,[eax]
call dword [ecx+0x44]
lea edx,[ebp-0x5e]
mov eax,esi
mov ecx,[eax]
call dword [ecx+0x90]
lea eax,[ebp-0x5e]
push eax
call dword 0x6178
test eax,eax
jnz dword 0x48ee5
mov eax,[esi+0x78]
mov edx,0x2
mov ecx,[eax]
call dword [ecx+0x10]
mov edx,[ebp-0x56]
sub edx,[ebp-0x5e]
sub eax,edx
mov [ebp-0xc],eax
mov eax,[esi+0x78]
mov edx,0x3
mov ecx,[eax]
call dword [ecx+0x10]
mov edx,[ebp-0x52]
sub edx,[ebp-0x5a]
sub eax,edx
mov [ebp-0x10],eax
mov eax,[esi+0x78]
mov edx,0x2
mov ecx,[eax]
call dword [ecx+0x10]
mov edx,[ebp-0x56]
sub edx,[ebp-0x5e]
sub eax,edx
mov [ebp-0x14],eax
mov eax,[esi+0x78]
mov edx,0x3
mov ecx,[eax]
call dword [ecx+0x10]
mov edx,[ebp-0x52]
sub edx,[ebp-0x5a]
sub eax,edx
mov [ebp-0x18],eax
mov eax,[ebp-0x4]
cmp dword [eax],byte +0x0
jng 0x48b33
mov eax,[ebp-0x4]
mov edx,[ebp-0xc]
sub [eax],edx
mov eax,[ebp-0x8]
cmp dword [eax],byte +0x0
jng 0x48b43
mov eax,[ebp-0x8]
mov edx,[ebp-0x10]
sub [eax],edx
mov eax,[ebp+0xc]
cmp dword [eax],byte +0x0
jng 0x48b53
mov eax,[ebp+0xc]
mov edx,[ebp-0x14]
sub [eax],edx
mov eax,[ebp+0x8]
cmp dword [eax],byte +0x0
jng 0x48b63
mov eax,[ebp+0x8]
mov edx,[ebp-0x18]
sub [eax],edx
xor eax,eax
push ebp
push dword 0x449ede
push dword [fs:eax]
mov [fs:eax],esp
xor eax,eax
mov [ebp-0x20],eax
xor eax,eax
mov [ebp-0x30],eax
xor eax,eax
mov [ebp-0x24],eax
xor eax,eax
mov [ebp-0x34],eax
xor eax,eax
mov [ebp-0x28],eax
xor eax,eax
mov [ebp-0x38],eax
xor eax,eax
mov [ebp-0x2c],eax
xor eax,eax
mov [ebp-0x3c],eax
mov eax,esi
call dword 0x442b4
mov edi,eax
dec edi
test edi,edi
jl dword 0x48e08
inc edi
mov dword [ebp-0x1c],0x0
mov edx,[ebp-0x1c]
mov eax,esi
call dword 0x44278
mov ebx,eax
cmp byte [ebx+0x57],0x0
jnz 0x48bd9
test byte [ebx+0x1c],0x10
jz dword 0x48dfe
test byte [ebx+0x51],0x4
jnz dword 0x48dfe
lea eax,[ebp-0x44]
push eax
lea eax,[ebp-0x4c]
push eax
lea ecx,[ebp-0x48]
lea edx,[ebp-0x40]
mov eax,ebx
call dword 0x489a8
movzx eax,byte [ebx+0x5b]
sub al,0x1
jc 0x48c0c
sub al,0x2
jc 0x48c00
sub al,0x2
jz 0x48c06
jmp short 0x48c6f
mov byte [ebp-0x4d],0x1
jmp short 0x48c73
mov byte [ebp-0x4d],0x2
jmp short 0x48c73
movzx eax,byte [ebx+0x61]
and al,[dword 0x449ef0]
movzx edx,byte [dword 0x449ef0]
cmp dl,al
jnz 0x48c69
mov byte [ebp-0x4d],0x1
cmp dword [ebp-0x40],byte +0x0
jng 0x48c46
mov eax,[ebx+0x78]
mov edx,0x2
mov ecx,[eax]
call dword [ecx+0x10]
mov edx,[ebp-0x56]
sub edx,[ebp-0x5e]
sub edx,eax
sub edx,[ebp-0x40]
mov [ebp-0x40],edx
cmp dword [ebp-0x44],byte +0x0
jng 0x48c73
mov eax,[ebx+0x78]
mov edx,0x2
mov ecx,[eax]
call dword [ecx+0x10]
mov edx,[ebp-0x56]
sub edx,[ebp-0x5e]
add edx,[ebp-0x44]
sub edx,eax
mov [ebp-0x44],edx
jmp short 0x48c73
mov byte [ebp-0x4d],0x0
jmp short 0x48c73
mov byte [ebp-0x4d],0x3
movzx eax,byte [ebx+0x5b]
sub al,0x1
jc 0x48c91
add al,0xfe
sub al,0x2
jc 0x48c85
jz 0x48c8b
jmp short 0x48cf4
mov byte [ebp-0x4e],0x1
jmp short 0x48cf8
mov byte [ebp-0x4e],0x2
jmp short 0x48cf8
movzx eax,byte [ebx+0x61]
and al,[dword 0x449ef4]
movzx edx,byte [dword 0x449ef4]
cmp dl,al
jnz 0x48cee
mov byte [ebp-0x4e],0x1
cmp dword [ebp-0x48],byte +0x0
jng 0x48ccb
mov eax,[ebx+0x78]
mov edx,0x3
mov ecx,[eax]
call dword [ecx+0x10]
mov edx,[ebp-0x52]
sub edx,[ebp-0x5a]
sub edx,eax
sub edx,[ebp-0x48]
mov [ebp-0x48],edx
cmp dword [ebp-0x4c],byte +0x0
jng 0x48cf8
mov eax,[ebx+0x78]
mov edx,0x3
mov ecx,[eax]
call dword [ecx+0x10]
mov edx,[ebp-0x52]
sub edx,[ebp-0x5a]
add edx,[ebp-0x4c]
sub edx,eax
mov [ebp-0x4c],edx
jmp short 0x48cf8
mov byte [ebp-0x4e],0x0
jmp short 0x48cf8
mov byte [ebp-0x4e],0x3
movzx eax,byte [ebp-0x4d]
dec eax
sub al,0x2
jc 0x48d05
jz 0x48d5b
jmp short 0x48d7b
cmp dword [ebp-0x40],byte +0x0
jng 0x48d2f
mov eax,[ebp-0x4]
mov eax,[eax]
cmp eax,[ebp-0x40]
jnl 0x48d2f
mov eax,[ebp-0x4]
mov edx,[ebp-0x40]
mov [eax],edx
mov eax,[ebp-0x4]
mov eax,[eax]
cmp eax,[ebp-0x20]
jng 0x48d2f
mov eax,[ebp-0x4]
mov eax,[eax]
mov [ebp-0x20],eax
cmp dword [ebp-0x44],byte +0x0
jng 0x48d7b
mov eax,[ebp+0xc]
mov eax,[eax]
cmp eax,[ebp-0x44]
jng 0x48d7b
mov eax,[ebp+0xc]
mov edx,[ebp-0x44]
mov [eax],edx
mov eax,[ebp+0xc]
mov eax,[eax]
cmp eax,[ebp-0x24]
jng 0x48d7b
mov eax,[ebp+0xc]
mov eax,[eax]
mov [ebp-0x24],eax
jmp short 0x48d7b
mov eax,[ebx+0x78]
mov edx,0x2
mov ecx,[eax]
call dword [ecx+0x10]
add [ebp-0x30],eax
mov eax,[ebx+0x78]
mov edx,0x2
mov ecx,[eax]
call dword [ecx+0x10]
add [ebp-0x34],eax
movzx eax,byte [ebp-0x4e]
dec eax
sub al,0x2
jc 0x48d88
jz 0x48dde
jmp short 0x48dfe
cmp dword [ebp-0x48],byte +0x0
jng 0x48db2
mov eax,[ebp-0x8]
mov eax,[eax]
cmp eax,[ebp-0x48]
jnl 0x48db2
mov eax,[ebp-0x8]
mov edx,[ebp-0x48]
mov [eax],edx
mov eax,[ebp-0x8]
mov eax,[eax]
cmp eax,[ebp-0x28]
jng 0x48db2
mov eax,[ebp-0x8]
mov eax,[eax]
mov [ebp-0x28],eax
cmp dword [ebp-0x4c],byte +0x0
jng 0x48dfe
mov eax,[ebp+0x8]
mov eax,[eax]
cmp eax,[ebp-0x4c]
jng 0x48dfe
mov eax,[ebp+0x8]
mov edx,[ebp-0x4c]
mov [eax],edx
mov eax,[ebp+0x8]
mov eax,[eax]
cmp eax,[ebp-0x2c]
jng 0x48dfe
mov eax,[ebp+0x8]
mov eax,[eax]
mov [ebp-0x2c],eax
jmp short 0x48dfe
mov eax,[ebx+0x78]
mov edx,0x3
mov ecx,[eax]
call dword [ecx+0x10]
add [ebp-0x38],eax
mov eax,[ebx+0x78]
mov edx,0x3
mov ecx,[eax]
call dword [ecx+0x10]
add [ebp-0x3c],eax
inc dword [ebp-0x1c]
dec edi
jnz dword 0x48bb3
cmp dword [ebp-0x20],byte +0x0
jng 0x48e26
mov eax,[ebp-0x20]
add eax,[ebp-0x30]
mov edx,[ebp-0x4]
cmp eax,[edx]
jng 0x48e26
mov eax,[ebp-0x20]
add eax,[ebp-0x30]
mov edx,[ebp-0x4]
mov [edx],eax
cmp dword [ebp-0x24],byte +0x0
jng 0x48e4c
mov eax,[ebp+0xc]
cmp dword [eax],byte +0x0
jz 0x48e41
mov eax,[ebp-0x24]
add eax,[ebp-0x34]
mov edx,[ebp+0xc]
cmp eax,[edx]
jng 0x48e4c
mov eax,[ebp-0x24]
add eax,[ebp-0x34]
mov edx,[ebp+0xc]
mov [edx],eax
cmp dword [ebp-0x28],byte +0x0
jng 0x48e6a
mov eax,[ebp-0x28]
add eax,[ebp-0x38]
mov edx,[ebp-0x8]
cmp eax,[edx]
jng 0x48e6a
mov eax,[ebp-0x28]
add eax,[ebp-0x38]
mov edx,[ebp-0x8]
mov [edx],eax
cmp dword [ebp-0x2c],byte +0x0
jng 0x48e90
mov eax,[ebp+0x8]
cmp dword [eax],byte +0x0
jz 0x48e85
mov eax,[ebp-0x2c]
add eax,[ebp-0x3c]
mov edx,[ebp+0x8]
cmp eax,[edx]
jng 0x48e90
mov eax,[ebp-0x2c]
add eax,[ebp-0x3c]
mov edx,[ebp+0x8]
mov [edx],eax
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x449ee5
mov eax,[ebp-0x4]
cmp dword [eax],byte +0x0
jng 0x48ead
mov eax,[ebp-0x4]
mov edx,[ebp-0xc]
add [eax],edx
mov eax,[ebp-0x8]
cmp dword [eax],byte +0x0
jng 0x48ebd
mov eax,[ebp-0x8]
mov edx,[ebp-0x10]
add [eax],edx
mov eax,[ebp+0xc]
cmp dword [eax],byte +0x0
jng 0x48ecd
mov eax,[ebp+0xc]
mov edx,[ebp-0x14]
add [eax],edx
mov eax,[ebp+0x8]
cmp dword [eax],byte +0x0
jng 0x48edd
mov eax,[ebp+0x8]
mov edx,[ebp-0x18]
add [eax],edx
ret
jmp dword 0x3384
jmp short 0x48e9d
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret 0x8
add [eax],al
add eax,0xa000000
add [eax],al
add [ebp-0x75],dl
in al,dx
push ebx
push esi
push edi
mov edi,ecx
mov esi,edx
mov ebx,eax
mov eax,[ebp+0xc]
push eax
mov eax,[ebp+0x8]
push eax
mov ecx,edi
mov edx,esi
mov eax,ebx
call dword 0x48a6c
mov eax,[ebp+0xc]
push eax
mov eax,[ebp+0x8]
push eax
mov ecx,edi
mov edx,esi
mov eax,ebx
call dword 0x41424
pop edi
pop esi
pop ebx
pop ebp
ret 0x8
lea eax,[eax+0x0]
push ebx
push esi
push edi
mov ebx,ecx
mov esi,edx
mov edi,eax
mov ecx,ebx
mov edx,esi
mov eax,edi
call dword 0x42848
mov eax,esi
mov edx,[dword 0x45160c]
call dword 0x2d7c
test al,al
jz 0x48f70
test bl,bl
jz 0x48f66
cmp dword [edi+0x160],byte +0x0
jnz 0x48f70
mov edx,[esi+0x74]
mov eax,edi
call dword 0x3fb70
pop edi
pop esi
pop ebx
ret
mov eax,[0x43ccf8]
ret
mov eax,eax
push ebx
push esi
mov esi,edx
mov ebx,eax
mov edx,esi
mov eax,ebx
call dword 0x42a6c
mov eax,esi
mov edx,[dword 0x45160c]
call dword 0x2d7c
test al,al
jz 0x48fa9
mov edx,[ebx+0x160]
mov eax,esi
mov ecx,[eax]
call dword [ecx+0x48]
pop esi
pop ebx
ret
push ebp
mov ebp,esp
add esp,byte -0x34
push ebx
push esi
push edi
mov [ebp-0xc],ecx
mov [ebp-0x8],edx
mov [ebp-0x4],eax
mov byte [ebp-0xd],0x1
mov eax,[ebp-0x4]
call dword 0x486bc
test al,al
jz dword 0x49167
mov eax,[ebp-0x4]
cmp byte [eax+0x5b],0x5
jz dword 0x49167
mov eax,[ebp-0x4]
test byte [eax+0x1c],0x10
jz 0x48ff8
mov eax,[ebp-0x4]
call dword 0x442b4
test eax,eax
jng dword 0x49167
lea edx,[ebp-0x24]
mov eax,[ebp-0x4]
mov ecx,[eax]
call dword [ecx+0xc0]
lea edx,[ebp-0x34]
mov eax,[ebp-0x4]
mov ecx,[eax]
call dword [ecx+0x44]
lea edx,[ebp-0x34]
mov eax,[ebp-0x4]
mov ecx,[eax]
call dword [ecx+0x90]
mov eax,[ebp-0x4]
call dword 0x43dd0
xor edx,edx
push ebp
push dword 0x44a0da
push dword [fs:edx]
mov [fs:edx],esp
mov eax,[ebp-0x4]
call dword 0x442b4
mov ebx,eax
dec ebx
test ebx,ebx
jl 0x490bc
inc ebx
mov dword [ebp-0x14],0x0
mov edx,[ebp-0x14]
mov eax,[ebp-0x4]
call dword 0x44278
cmp byte [eax+0x57],0x0
jnz 0x49069
test byte [eax+0x1c],0x10
jz 0x490b6
test byte [eax+0x51],0x4
jnz 0x490b6
mov edx,[ebp-0x4]
movzx edx,byte [edx+0x5b]
test dl,dl
jz 0x4907c
add dl,0xfd
sub dl,0x2
jnc 0x49084
mov esi,[ebp-0x24]
sub esi,[ebp-0x34]
jmp short 0x49086
xor esi,esi
mov edx,[ebp-0x4]
movzx edx,byte [edx+0x5b]
sub dl,0x3
jnc 0x4909a
mov edi,[ebp-0x20]
sub edi,[ebp-0x30]
jmp short 0x4909c
xor edi,edi
mov edx,[eax+0x48]
push edx
mov edx,[eax+0x4c]
push edx
mov ecx,[eax+0x44]
sub ecx,edi
mov edx,[eax+0x40]
sub edx,esi
mov esi,[eax]
call dword [esi+0x88]
inc dword [ebp-0x14]
dec ebx
jnz 0x4904c
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x44a0e1
mov eax,[ebp-0x4]
and word [eax+0x54],byte -0x11
mov eax,[ebp-0x4]
call dword 0x43dd8
ret
jmp dword 0x3384
jmp short 0x490c9
mov eax,[ebp-0x4]
movzx edx,byte [eax+0x5b]
mov eax,edx
test al,al
jz 0x490f4
add al,0xfd
sub al,0x2
jnc 0x49127
mov eax,[ebp-0x1c]
sub eax,[ebp-0x24]
test eax,eax
jng 0x49120
mov ecx,[ebp-0x4]
add eax,[ecx+0x48]
mov ecx,[ebp-0x2c]
sub ecx,[ebp-0x34]
sub eax,ecx
mov ecx,[ebp-0x8]
mov [ecx],eax
cmp dl,0x4
jnz 0x49127
mov eax,[ebp-0x4]
mov edx,[eax]
call dword [edx+0x5c]
jmp short 0x49127
mov eax,[ebp-0x8]
xor edx,edx
mov [eax],edx
mov eax,[ebp-0x4]
movzx edx,byte [eax+0x5b]
mov eax,edx
sub al,0x3
jnc 0x49167
mov eax,[ebp-0x18]
sub eax,[ebp-0x20]
test eax,eax
jng 0x49160
mov ecx,[ebp-0x4]
add eax,[ecx+0x4c]
mov ecx,[ebp-0x28]
sub ecx,[ebp-0x30]
sub eax,ecx
mov ecx,[ebp-0xc]
mov [ecx],eax
cmp dl,0x2
jnz 0x49167
mov eax,[ebp-0x4]
mov edx,[eax]
call dword [edx+0x5c]
jmp short 0x49167
mov eax,[ebp-0xc]
xor edx,edx
mov [eax],edx
movzx eax,byte [ebp-0xd]
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret
mov eax,eax
sub edx,byte +0x1
jc 0x4917d
jz 0x4919a
jmp short 0x491b6
cmp cl,[eax+0x193]
jz 0x491b6
mov [eax+0x193],cl
push byte +0x0
xor ecx,ecx
mov edx,0xb03b
call dword 0x41588
ret
cmp cl,[eax+0x194]
jz 0x491b6
mov [eax+0x194],cl
push byte +0x0
xor ecx,ecx
mov edx,0xb03b
call dword 0x41588
ret
nop
push ebx
push ecx
mov [esp],dl
mov ebx,eax
movzx eax,byte [ebx+0x192]
cmp al,[esp]
jz 0x491e5
movzx eax,byte [esp]
mov [ebx+0x192],al
push byte +0x0
xor ecx,ecx
mov edx,0xb03b
mov eax,ebx
call dword 0x41588
pop edx
pop ebx
ret
cmp dl,[eax+0x195]
jz 0x49204
mov [eax+0x195],dl
push byte +0x0
xor ecx,ecx
mov edx,0xb03b
call dword 0x41588
ret
lea eax,[eax+0x0]
cmp edx,[eax+0x198]
jz 0x49224
mov [eax+0x198],edx
push byte +0x0
xor ecx,ecx
mov edx,0xb03b
call dword 0x41588
ret
lea eax,[eax+0x0]
push ebx
push esi
push edi
mov esi,edx
mov ebx,eax
mov edx,esi
mov eax,ebx
mov ecx,[eax]
call dword [ecx-0x10]
mov eax,[esi+0x8]
mov esi,eax
mov eax,[ebx+0x19c]
neg eax
push eax
mov edx,[ebx+0x19c]
neg edx
push eax
mov edi,esi
push edi
call dword 0x6130
cmp byte [ebx+0x195],0x0
jz 0x492b1
xor eax,eax
cmp byte [ebx+0x193],0x0
jz 0x49271
add eax,[ebx+0x198]
cmp byte [ebx+0x194],0x0
jz 0x49280
add eax,[ebx+0x198]
mov esi,edi
test byte [ebx+0x192],0x1
jz 0x4928d
add [esi],eax
test byte [ebx+0x192],0x2
jz 0x49299
add [esi+0x4],eax
test byte [ebx+0x192],0x4
jz 0x492a5
sub [esi+0x8],eax
test byte [ebx+0x192],0x8
jz 0x492b1
sub [esi+0xc],eax
pop edi
pop esi
pop ebx
ret
lea eax,[eax+0x0]
push ebp
mov ebp,esp
add esp,byte -0x3c
push ebx
push esi
push edi
mov [ebp-0x8],edx
mov [ebp-0x4],eax
mov eax,[ebp-0x4]
cmp byte [eax+0x195],0x0
jnz 0x492e3
mov eax,[ebp-0x4]
cmp dword [eax+0x19c],byte +0x0
jna dword 0x49572
mov eax,[ebp-0x4]
call dword 0x4831c
push eax
call dword 0x60f0
mov [ebp-0xc],eax
xor ecx,ecx
push ebp
push dword 0x44a56b
push dword [fs:ecx]
mov [fs:ecx],esp
lea eax,[ebp-0x1c]
push eax
mov eax,[ebp-0x4]
call dword 0x4831c
push eax
call dword 0x5fc0
lea eax,[ebp-0x2c]
push eax
mov eax,[ebp-0x4]
call dword 0x4831c
push eax
call dword 0x6110
push byte +0x2
lea eax,[ebp-0x2c]
push eax
mov eax,[ebp-0x4]
call dword 0x4831c
push eax
push byte +0x0
call dword 0x61e0
mov eax,[ebp-0x28]
neg eax
push eax
mov eax,[ebp-0x2c]
neg eax
push eax
lea eax,[ebp-0x1c]
push eax
call dword 0x61f8
mov eax,[ebp-0x10]
push eax
mov eax,[ebp-0x14]
push eax
mov eax,[ebp-0x18]
push eax
mov eax,[ebp-0x1c]
push eax
mov eax,[ebp-0xc]
push eax
call dword 0x5cc8
lea esi,[ebp-0x2c]
lea edi,[ebp-0x3c]
movsd
movsd
movsd
movsd
mov eax,[ebp-0x4]
mov eax,[eax+0x19c]
push eax
push eax
lea eax,[ebp-0x1c]
push eax
call dword 0x6130
lea esi,[ebp-0x1c]
lea edi,[ebp-0x2c]
movsd
movsd
movsd
movsd
push byte -0x10
mov eax,[ebp-0x4]
call dword 0x4831c
push eax
call dword 0x60f8
mov ebx,eax
test ebx,0x200000
jz 0x493ba
push byte +0x14
mov eax,[0x468be8]
mov eax,[eax]
call eax
add [ebp-0x24],eax
test ebx,0x100000
jz 0x493d0
push byte +0x15
mov eax,[0x468be8]
mov eax,[eax]
call eax
add [ebp-0x20],eax
mov eax,[ebp-0x4]
cmp byte [eax+0x195],0x0
jz dword 0x494a1
xor esi,esi
mov eax,[ebp-0x4]
movzx edx,byte [eax+0x193]
test dl,dl
jz 0x493f9
mov eax,[ebp-0x4]
add esi,[eax+0x198]
mov eax,[ebp-0x4]
movzx eax,byte [eax+0x194]
test al,al
jz 0x49410
mov ecx,[ebp-0x4]
add esi,[ecx+0x198]
mov ecx,[ebp-0x4]
test byte [ecx+0x192],0x1
jz 0x4941f
sub [ebp-0x2c],esi
mov ecx,[ebp-0x4]
test byte [ecx+0x192],0x2
jz 0x4942e
sub [ebp-0x28],esi
mov ecx,[ebp-0x4]
test byte [ecx+0x192],0x4
jz 0x4943d
add [ebp-0x24],esi
mov ecx,[ebp-0x4]
test byte [ecx+0x192],0x8
jz 0x4944c
add [ebp-0x20],esi
mov ecx,[ebp-0x4]
movzx ecx,byte [ecx+0x192]
mov ebx,[ebp-0x4]
movzx ebx,byte [ebx+0x195]
or ecx,[ebx*4+0x46869c]
mov ebx,[ebp-0x4]
movzx ebx,byte [ebx+0x1d9]
or ecx,[ebx*4+0x4686ac]
or ecx,0x2000
push ecx
and edx,byte +0x7f
mov edx,[edx*4+0x46867c]
and eax,byte +0x7f
or edx,[eax*4+0x46868c]
push edx
lea eax,[ebp-0x2c]
push eax
mov eax,[ebp-0xc]
push eax
call dword 0x5f18
mov eax,[ebp-0x20]
push eax
mov eax,[ebp-0x24]
push eax
mov eax,[ebp-0x28]
push eax
mov eax,[ebp-0x2c]
push eax
mov eax,[ebp-0xc]
push eax
call dword 0x5d78
lea esi,[ebp-0x3c]
lea edi,[ebp-0x2c]
movsd
movsd
movsd
movsd
mov eax,[ebp-0x8]
mov eax,[eax+0x4]
cmp eax,byte +0x1
jnz 0x494e6
mov eax,[ebp-0x28]
neg eax
push eax
mov eax,[ebp-0x2c]
neg eax
push eax
lea eax,[ebp-0x2c]
push eax
call dword 0x61f8
jmp short 0x4952f
lea edx,[ebp-0x1c]
push edx
mov edx,[ebp-0x8]
push eax
call dword 0x5d40
push byte +0x2
lea eax,[ebp-0x1c]
push eax
mov eax,[ebp-0x4]
call dword 0x4831c
push eax
push byte +0x0
call dword 0x61e0
lea eax,[ebp-0x1c]
push eax
lea eax,[ebp-0x2c]
push eax
lea eax,[ebp-0x2c]
push eax
call dword 0x6148
mov eax,[ebp-0x38]
neg eax
push eax
mov eax,[ebp-0x3c]
neg eax
push eax
lea eax,[ebp-0x2c]
push eax
call dword 0x61f8
mov eax,[ebp-0x4]
mov eax,[eax+0x1a4]
call dword 0x20488
push eax
lea eax,[ebp-0x2c]
push eax
mov eax,[ebp-0xc]
push eax
call dword 0x5f88
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x44a572
mov eax,[ebp-0xc]
push eax
mov eax,[ebp-0x4]
call dword 0x4831c
push eax
call dword 0x6250
ret
jmp dword 0x3384
jmp short 0x49558
mov edx,[ebp-0x8]
mov eax,[ebp-0x4]
mov ecx,[eax]
call dword [ecx-0x10]
mov eax,[ebp-0x4]
call dword 0x4eb70
test al,al
jz 0x495a1
mov eax,[ebp-0x4]
test byte [eax+0x52],0x2
jz 0x495a1
call dword 0x4e314
xor ecx,ecx
mov edx,[ebp-0x4]
call dword 0x4e9e8
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret
push ebx
push esi
push edi
add esp,byte -0x14
mov ebx,edx
mov esi,eax
cmp dword [ebx+0xc],byte +0x0
jnz 0x49619
mov eax,[ebx+0x8]
mov [esp],eax
movsx eax,word [esp]
mov [esp+0x4],eax
movsx eax,word [esp+0x2]
mov [esp+0x8],eax
push byte +0x0
push byte +0x0
lea ecx,[esp+0x14]
lea edx,[esp+0xc]
mov eax,esi
call dword 0x3fdc8
lea edx,[esp+0x14]
xor ecx,ecx
mov eax,esi
call dword 0x45158
mov edi,eax
test edi,edi
jz 0x4960a
mov eax,[ebx+0x8]
push eax
xor ecx,ecx
mov edx,0x7b
mov eax,edi
call dword 0x41588
mov [ebx+0xc],eax
cmp dword [ebx+0xc],byte +0x0
jnz 0x49619
mov edx,ebx
mov eax,esi
call dword 0x42cf4
add esp,byte +0x14
pop edi
pop esi
pop ebx
ret
push ebx
mov ebx,edx
mov dl,0x1
call dword 0x53e38
test eax,eax
jz 0x49667
sub bx,byte +0x9
jz 0x49643
sub bx,byte +0x9
jz 0x49656
add ebx,byte -0x13
sub bx,byte +0x4
jnc 0x49667
push byte +0x0
mov ecx,0x10002
mov edx,0x127
call dword 0x41588
jmp short 0x49667
push byte +0x0
mov ecx,0x20002
mov edx,0x127
call dword 0x41588
pop ebx
ret
lea eax,[eax+0x0]
push ebp
mov ebp,esp
add esp,byte -0x8
push ebx
mov [ebp-0x4],edx
mov ebx,eax
mov eax,[ebp-0x4]
cmp dword [eax+0xc],byte +0x1
jz 0x496e8
mov eax,[ebp-0x4]
test byte [eax+0x8],0x1
jz 0x49690
cmp byte [ebx+0x57],0x0
jz 0x496dc
mov eax,[ebp-0x4]
mov eax,[eax+0x4]
push eax
call dword 0x5dc8
mov [ebp-0x8],eax
xor eax,eax
push ebp
push dword 0x44a6d5
push dword [fs:eax]
mov [fs:eax],esp
mov edx,[ebp-0x4]
mov eax,ebx
call dword 0x45a78
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x44a6f2
mov eax,[ebp-0x8]
push eax
mov eax,[ebp-0x4]
mov eax,[eax+0x4]
push eax
call dword 0x5dc0
ret
jmp dword 0x3384
jmp short 0x496c4
mov edx,[ebp-0x4]
mov eax,ebx
mov ecx,[eax]
call dword [ecx-0x10]
jmp short 0x496f2
mov edx,[ebp-0x4]
mov eax,ebx
mov ecx,[eax]
call dword [ecx-0x10]
pop ebx
pop ecx
pop ecx
pop ebp
ret
nop
test byte [eax+0x52],0x4
setnz al
ret
push ebx
push esi
mov ebx,edx
mov esi,eax
mov eax,esi
call dword 0x496f8
cmp bl,al
jz 0x49739
test bl,bl
jz 0x49722
mov eax,[0x44a73c]
or eax,[esi+0x50]
mov [esi+0x50],eax
jmp short 0x4972f
mov eax,[0x44a73c]
not eax
and eax,[esi+0x50]
mov [esi+0x50],eax
mov eax,esi
mov edx,[eax]
call dword [edx+0x80]
pop esi
pop ebx
ret
add [eax],al
add al,0x0
push esi
mov esi,eax
mov eax,esi
mov ecx,[eax]
call dword [ecx-0x10]
xor edx,edx
mov eax,esi
call dword 0x49758
pop esi
ret
lea eax,[eax+0x0]
push esi
mov esi,eax
mov ecx,[eax+0x30]
jmp short 0x49765
mov esi,ecx
mov ecx,[ecx+0x30]
cmp dword [esi+0x94],byte +0x0
jnz 0x49772
test ecx,ecx
jnz 0x49760
test esi,esi
jz 0x49788
and edx,byte +0x7f
push edx
mov ecx,eax
mov eax,esi
mov edx,0xb046
call dword 0x3fe24
pop esi
ret
mov eax,eax
push ebp
mov ebp,esp
xor eax,eax
pop ebp
ret 0xc
lea eax,[eax+0x0]
xor eax,eax
ret
nop
push ebx
mov ebx,eax
movzx eax,word [dword 0x46dc12]
push eax
mov eax,[ebx+0x1b4]
push eax
call dword 0x6260
movzx eax,word [dword 0x46dc10]
push eax
mov eax,[ebx+0x1b4]
push eax
call dword 0x6260
pop ebx
ret
lea eax,[eax+0x0]
push ebx
push esi
mov esi,edx
mov ebx,eax
cmp ebx,[esi+0x94]
jnz 0x497e9
mov eax,ebx
call dword 0x46d64
dec eax
jg 0x497e9
xor eax,eax
pop esi
pop ebx
ret
mov al,0x1
pop esi
pop ebx
ret
mov eax,eax
call dword 0x43df8
ret
mov eax,eax
mov eax,[eax+0x1a0]
mov ecx,[eax]
call dword [ecx+0x8]
ret
push ebx
push esi
push edi
push ebp
mov ebx,edx
mov ebp,eax
test bl,bl
jz 0x49818
or word [ebp+0x54],0x2000
jmp short 0x4981e
and word [ebp+0x54],0xdfff
mov eax,[ebp+0x1d0]
test eax,eax
jz 0x4984b
mov esi,[eax+0x8]
dec esi
test esi,esi
jl 0x4984b
inc esi
xor edi,edi
mov edx,edi
mov eax,[ebp+0x1d0]
call dword 0x13e7c
mov edx,ebx
call dword 0x49804
inc edi
dec esi
jnz 0x49833
pop ebp
pop edi
pop esi
pop ebx
ret
push ebx
push esi
add esp,byte -0x10
mov esi,ecx
mov ebx,eax
test byte [ebx+0x1c],0x2
jz 0x49878
test byte [edx+0x1c],0x10
jnz 0x498a6
mov eax,[ebx+0x242]
mov [esi],eax
mov eax,[ebx+0x246]
mov [esi+0x4],eax
jmp short 0x498a6
mov eax,ebx
call dword 0x486bc
test al,al
jz 0x4989b
mov edx,esp
mov eax,ebx
mov ecx,[eax]
call dword [ecx+0x44]
mov eax,[esp+0x8]
mov [esi],eax
mov eax,[esp+0xc]
mov [esi+0x4],eax
jmp short 0x498a6
mov eax,[ebx+0x48]
mov [esi],eax
mov eax,[ebx+0x4c]
mov [esi+0x4],eax
mov eax,[ebx+0x1a0]
mov edx,[eax+0x8]
add edx,[eax+0x10]
sub [esi],edx
mov eax,[ebx+0x1a0]
mov edx,[eax+0xc]
add edx,[eax+0x14]
sub [esi+0x4],edx
add esp,byte +0x10
pop esi
pop ebx
ret
lea eax,[eax+0x0]
push ebp
mov ebp,esp
add esp,byte -0x8
push ebx
mov ebx,edx
mov [ebp-0x4],eax
mov eax,[ebp-0x4]
call dword 0x486bc
test al,al
jz 0x498ed
mov eax,[ebp-0x4]
test byte [eax+0x55],0x20
jz 0x498f1
xor eax,eax
jmp short 0x498f3
mov al,0x1
mov [ebp-0x5],al
cmp byte [ebp-0x5],0x0
jz 0x49906
mov dl,0x1
mov eax,[ebp-0x4]
call dword 0x49804
xor eax,eax
push ebp
push dword 0x44a93c
push dword [fs:eax]
mov [fs:eax],esp
mov edx,ebx
mov eax,[ebp-0x4]
call dword 0x4016c
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x44a943
cmp byte [ebp-0x5],0x0
jz 0x4993b
xor edx,edx
mov eax,[ebp-0x4]
call dword 0x49804
ret
jmp dword 0x3384
jmp short 0x4992b
pop ebx
pop ecx
pop ecx
pop ebp
ret
push ebp
mov ebp,esp
push ecx
push ebx
push esi
test dl,dl
jz 0x4995a
add esp,byte -0x10
call dword 0x2f14
mov [ebp-0x1],dl
mov ebx,eax
xor edx,edx
mov eax,ebx
call dword 0x3f0f0
mov dl,0x1
mov eax,[0x43b844]
call dword 0x205a4
mov esi,eax
mov [ebx+0x190],esi
mov eax,esi
mov edx,ebx
call dword 0x3eb34
mov eax,ebx
cmp byte [ebp-0x1],0x0
jz 0x4999c
call dword 0x2f6c
pop dword [dword fs:0x0]
add esp,byte +0xc
mov eax,ebx
pop esi
pop ebx
pop ecx
pop ebp
ret
nop
push ebx
push esi
call dword 0x2fbc
mov ebx,edx
mov esi,eax
cmp esi,[dword 0x46866c]
jnz 0x499be
xor eax,eax
call dword 0x3d05c
mov eax,[esi+0x190]
call dword 0x2bf0
mov edx,ebx
and dl,0xfc
mov eax,esi
call dword 0x3f1e8
test bl,bl
jng 0x499e0
mov eax,esi
call dword 0x2f64
pop esi
pop ebx
ret
nop
push ebp
mov ebp,esp
push ecx
push ebx
mov ebx,edx
mov [ebp-0x4],eax
cmp dword [ebx+0x4],byte +0x0
jz dword 0x49a86
mov eax,[ebp-0x4]
mov eax,[eax+0x190]
call dword 0x2086c
xor eax,eax
push ebp
push dword 0x44aa7f
push dword [fs:eax]
mov [fs:eax],esp
mov edx,[ebx+0x4]
mov eax,[ebp-0x4]
mov eax,[eax+0x190]
call dword 0x20bb8
xor eax,eax
push ebp
push dword 0x44aa5c
push dword [fs:eax]
mov [fs:eax],esp
mov eax,[ebp-0x4]
mov edx,[eax]
call dword [edx+0x90]
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x44aa63
mov eax,[ebp-0x4]
mov eax,[eax+0x190]
xor edx,edx
call dword 0x20bb8
ret
jmp dword 0x3384
jmp short 0x49a4b
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x44aa86
mov eax,[ebp-0x4]
mov eax,[eax+0x190]
call dword 0x20a24
ret
jmp dword 0x3384
jmp short 0x49a70
pop ebx
pop ecx
pop ebp
ret
mov eax,eax
ret
lea eax,[eax+0x0]
push ebx
push esi
test dl,dl
jz 0x49a9e
add esp,byte -0x10
call dword 0x2f14
mov ebx,edx
mov esi,eax
xor edx,edx
mov eax,esi
call dword 0x4a2f4
mov edx,0x80ffff
mov eax,esi
call dword 0x40438
mov eax,[0x468e8c]
mov eax,[eax]
mov edx,[eax+0x80]
mov eax,[esi+0x250]
call dword 0x20a4c
mov eax,[esi+0x250]
mov eax,[eax+0x14]
mov dl,0x1
call dword 0x20570
mov eax,esi
test bl,bl
jz 0x49af4
call dword 0x2f6c
pop dword [dword fs:0x0]
add esp,byte +0xc
mov eax,esi
pop esi
pop ebx
ret
lea eax,[eax+0x0]
push ebx
push esi
mov ebx,edx
mov esi,eax
mov edx,ebx
mov eax,esi
call dword 0x44440
mov dword [ebx+0x4],0x80800000
or dword [ebx+0x24],0x800
cmp byte [dword 0x46dc08],0x0
jz 0x49b29
mov dword [ebx+0x8],0x80
mov edx,0x1
mov eax,0x5
call dword 0xbc90
test al,al
jz 0x49b43
or dword [ebx+0x24],0x20000
cmp byte [dword 0x46dc08],0x0
jz 0x49b53
mov dword [ebx+0x8],0x80
lea edx,[ebx+0x8]
mov eax,esi
call dword 0x443d8
pop esi
pop ebx
ret
mov dword [edx+0xc],0xffffffff
ret
push ebp
mov ebp,esp
add esp,byte -0x8
mov [ebp-0x4],eax
mov eax,[ebp-0x4]
call dword 0x4831c
push eax
call dword 0x60f0
mov [ebp-0x8],eax
xor eax,eax
push ebp
push dword 0x44abbe
push dword [fs:eax]
mov [fs:eax],esp
mov edx,[ebp-0x8]
mov eax,[ebp-0x4]
mov ecx,[eax]
call dword [ecx+0xdc]
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x44abc5
mov eax,[ebp-0x8]
push eax
mov eax,[ebp-0x4]
call dword 0x4831c
push eax
call dword 0x6250
ret
jmp dword 0x3384
jmp short 0x49bab
pop ecx
pop ecx
pop ebp
ret
lea eax,[eax+0x0]
push ebp
mov ebp,esp
add esp,byte -0x14
push ebx
xor edx,edx
mov [ebp-0x14],edx
mov ebx,eax
xor eax,eax
push ebp
push dword 0x44ac65
push dword [fs:eax]
mov [fs:eax],esp
lea edx,[ebp-0x10]
mov eax,ebx
mov ecx,[eax]
call dword [ecx+0x44]
add dword [ebp-0x10],byte +0x2
add dword [ebp-0xc],byte +0x2
mov eax,[0x468e8c]
mov eax,[eax]
mov eax,[eax+0x80]
mov edx,[eax+0x18]
mov eax,[ebx+0x250]
mov eax,[eax+0xc]
call dword 0x1fb98
mov eax,ebx
call dword 0x42c98
or eax,0x810
push eax
lea eax,[ebp-0x10]
push eax
push byte -0x1
lea edx,[ebp-0x14]
mov eax,ebx
call dword 0x40298
mov eax,[ebp-0x14]
call dword 0x3eac
push eax
mov eax,[ebx+0x250]
call dword 0x20b30
push eax
call dword 0x5f40
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x44ac6c
lea eax,[ebp-0x14]
call dword 0x3a1c
ret
jmp dword 0x3384
jmp short 0x49c5c
pop ebx
mov esp,ebp
pop ebp
ret
lea eax,[eax+0x0]
push esi
mov eax,[edx+0x4]
cmp eax,0x100
jc 0x49c86
cmp eax,0x109
jna 0x49cd4
mov ecx,[edx+0x4]
cmp ecx,0xb000
jz 0x49cd4
cmp ecx,0xb001
jz 0x49cd4
cmp dword [edx+0x4],0xb016
jz 0x49cd4
cmp dword [edx+0x4],0xb017
jz 0x49cd4
cmp dword [edx+0x4],0x111
jz 0x49cd4
mov esi,[edx+0x4]
cmp esi,0x200
jna 0x49cc7
cmp esi,0x20a
jna 0x49cd4
cmp dword [edx+0x4],0xa0
jz 0x49cd4
xor eax,eax
pop esi
ret
mov al,0x1
pop esi
ret
mov edx,[eax]
call dword [edx+0xb0]
ret
lea eax,[eax+0x0]
push ebp
mov ebp,esp
push byte +0x0
push byte +0x0
push ebx
mov ebx,eax
xor eax,eax
push ebp
push dword 0x44ad6f
push dword [fs:eax]
mov [fs:eax],esp
mov eax,ebx
call dword 0x49740
cmp byte [ebx+0x258],0x0
jnz 0x49d54
lea edx,[ebp-0x4]
mov eax,ebx
call dword 0x40298
mov edx,[ebp-0x4]
mov eax,[ebx+0x250]
call dword 0x2098c
mov edx,eax
add edx,byte +0x6
mov eax,ebx
call dword 0x3f980
lea edx,[ebp-0x8]
mov eax,ebx
call dword 0x40298
mov edx,[ebp-0x8]
mov eax,[ebx+0x250]
call dword 0x209a8
mov edx,eax
add edx,byte +0x4
mov eax,ebx
call dword 0x3f9b4
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x44ad76
lea eax,[ebp-0x8]
mov edx,0x2
call dword 0x3a40
ret
jmp dword 0x3384
jmp short 0x49d61
pop ebx
pop ecx
pop ecx
pop ebp
ret
nop
push ebp
mov ebp,esp
add esp,byte -0x20
push ebx
push esi
push edi
mov esi,edx
lea edi,[ebp-0x18]
movsd
movsd
movsd
movsd
mov ebx,ecx
mov [ebp-0x4],eax
mov esi,[dword 0x468e8c]
mov eax,[ebp-0x4]
mov byte [eax+0x258],0x1
xor edx,edx
push ebp
push dword 0x44af60
push dword [fs:edx]
mov [fs:edx],esp
mov edx,ebx
mov eax,[ebp-0x4]
call dword 0x402c8
add dword [ebp-0xc],byte +0x4
lea edx,[ebp-0x18]
mov eax,[ebp-0x4]
call dword 0x41630
mov eax,[esi]
call dword 0x5bfe0
mov edx,[ebp-0x4]
mov edx,[edx+0x4c]
add edx,[ebp-0x14]
cmp eax,edx
jnl 0x49dee
mov eax,[esi]
call dword 0x5bfe0
mov edx,[ebp-0x4]
sub eax,[edx+0x4c]
mov [ebp-0x14],eax
mov eax,[esi]
call dword 0x5bfec
mov edx,[ebp-0x4]
mov edx,[edx+0x48]
add edx,[ebp-0x18]
cmp eax,edx
jnl 0x49e12
mov eax,[esi]
call dword 0x5bfec
mov edx,[ebp-0x4]
sub eax,[edx+0x48]
mov [ebp-0x18],eax
mov eax,[esi]
call dword 0x5bfd4
cmp eax,[ebp-0x18]
jng 0x49e28
mov eax,[esi]
call dword 0x5bfd4
mov [ebp-0x18],eax
mov eax,[esi]
call dword 0x5bfc8
cmp eax,[ebp-0xc]
jng 0x49e3e
mov eax,[esi]
call dword 0x5bfc8
mov [ebp-0xc],eax
push byte +0x10
mov eax,[ebp-0x4]
mov eax,[eax+0x4c]
push eax
mov eax,[ebp-0x4]
mov eax,[eax+0x48]
push eax
mov eax,[ebp-0x14]
push eax
mov eax,[ebp-0x18]
push eax
push byte -0x1
mov eax,[ebp-0x4]
call dword 0x4831c
push eax
call dword 0x6320
call dword 0x5b68
mov edx,[ebp-0x4]
sub eax,[edx+0x25c]
cmp eax,0xfa
jna 0x49e8e
mov eax,ebx
test eax,eax
jz 0x49e86
sub eax,byte +0x4
mov eax,[eax]
cmp eax,byte +0x64
setl al
jmp short 0x49e90
xor eax,eax
test al,al
jz 0x49f0d
cmp dword [dword 0x4685a8],byte +0x0
jz 0x49f0d
push byte +0x0
lea eax,[ebp-0x8]
push eax
push byte +0x0
push dword 0x1016
call dword 0x6350
cmp dword [ebp-0x8],byte +0x0
jz 0x49f0d
push byte +0x0
lea eax,[ebp-0x8]
push eax
push byte +0x0
push dword 0x1018
call dword 0x6350
cmp dword [ebp-0x8],byte +0x0
jz 0x49ed1
mov bl,0x2
jmp short 0x49eec
lea edx,[ebp-0x20]
mov eax,[0x46dbfc]
call dword 0x4d53c
mov eax,[ebp-0x1c]
cmp eax,[ebp-0x14]
jng 0x49eea
xor ebx,ebx
jmp short 0x49eec
mov bl,0x1
movzx eax,bl
mov eax,[eax*4+0x4686b4]
or eax,0x40000
push eax
push byte +0x64
mov eax,[ebp-0x4]
call dword 0x4831c
push eax
call dword [dword 0x4685a8]
mov eax,[0x468d34]
mov eax,[eax]
mov edx,[eax+0x30]
mov eax,[ebp-0x4]
call dword 0x44f30
push byte +0x4
mov eax,[ebp-0x4]
call dword 0x4831c
push eax
call dword 0x6348
mov eax,[ebp-0x4]
mov edx,[eax]
call dword [edx+0x80]
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x44af67
call dword 0x5b68
mov edx,[ebp-0x4]
mov [edx+0x25c],eax
mov eax,[ebp-0x4]
mov byte [eax+0x258],0x0
ret
jmp dword 0x3384
jmp short 0x49f47
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret
mov eax,eax
push ebp
mov ebp,esp
add esp,byte -0x10
push ebx
push esi
push edi
mov esi,edx
lea edi,[ebp-0x10]
movsd
movsd
movsd
movsd
lea edx,[ebp-0x10]
mov ebx,[eax]
call dword [ebx+0xe0]
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret 0x4
mov eax,eax
push ebp
mov ebp,esp
push ecx
push ebx
push esi
push edi
mov [ebp-0x4],ecx
mov edi,edx
mov esi,eax
mov ebx,[ebp+0x8]
push byte +0x0
push ebx
mov ecx,edi
xor edx,edx
xor eax,eax
call dword 0x12a2c
mov eax,esi
call dword 0x42c98
or eax,0xc10
push eax
push ebx
push byte -0x1
mov eax,[ebp-0x4]
call dword 0x3eac
push eax
mov eax,[esi+0x250]
call dword 0x20b30
push eax
call dword 0x5f40
add dword [ebx+0x8],byte +0x6
add dword [ebx+0xc],byte +0x2
pop edi
pop esi
pop ebx
pop ecx
pop ebp
ret 0x8
lea eax,[eax+0x0]
push ebx
push esi
add esp,byte -0x1c
mov esi,edx
mov ebx,eax
mov eax,[ebx+0x4c]
push eax
lea eax,[esp+0x4]
push eax
mov ecx,[ebx+0x48]
xor edx,edx
xor eax,eax
call dword 0x12a2c
call dword 0x4e314
call dword 0x4e41c
test al,al
jnz 0x4a031
push byte +0xf
push byte +0x1
lea eax,[esp+0x8]
push eax
push esi
call dword 0x5f18
jmp short 0x4a058
call dword 0x4e314
lea ecx,[esp+0x10]
mov dl,0x1
call dword 0x4e65c
push esp
push byte +0x1
push byte +0xf
push byte +0x0
call dword 0x4e314
lea ecx,[esp+0x20]
mov edx,esi
call dword 0x4e48c
add esp,byte +0x1c
pop esi
pop ebx
ret
mov eax,eax
push ebx
push esi
mov esi,edx
mov ebx,eax
push byte +0x0
mov edx,[esi+0x4]
xor ecx,ecx
mov eax,ebx
call dword 0x45fa0
mov edx,[esi+0x4]
mov eax,ebx
mov ecx,[eax]
call dword [ecx+0xdc]
pop esi
pop ebx
ret
mov al,0x1
ret
nop
push ebp
mov ebp,esp
add esp,byte -0x18
push ebx
push esi
mov ebx,eax
mov esi,[ebp+0x8]
mov [ebp-0x8],edx
mov [ebp-0x4],ecx
lea eax,[ebp-0x8]
push eax
push ebx
call dword 0x5ea8
lea eax,[ebp-0x18]
push eax
push ebx
call dword 0x6110
mov eax,[ebp-0x8]
sub eax,[ebp-0x18]
mov [esi],eax
mov eax,[ebp-0x4]
sub eax,[ebp-0x14]
mov [esi+0x4],eax
pop esi
pop ebx
mov esp,ebp
pop ebp
ret 0x4
push ebp
mov ebp,esp
push ebx
push esi
push edi
mov edi,ecx
mov esi,edx
mov ebx,eax
mov eax,ebx
call dword 0x4ef10
test al,al
jz 0x4a105
mov [ebx+0x78],esi
mov [ebx+0x70],edi
mov eax,[ebp+0x8]
mov [ebx+0x74],eax
mov eax,[ebp+0x8]
push eax
push edi
push esi
mov eax,ebx
call dword 0x4f04c
push eax
call dword 0x1d460
mov al,0x1
mov [ebx+0x6a],al
jmp short 0x4a107
xor eax,eax
pop edi
pop esi
pop ebx
pop ebp
ret 0x4
mov eax,eax
cmp dx,[eax+0x68]
jz 0x4a132
mov ecx,edx
mov [eax+0x68],cx
cmp byte [eax+0x6a],0x0
jz 0x4a132
mov edx,[dword 0x468e8c]
mov edx,[edx]
mov eax,ecx
xchg eax,edx
call dword 0x5c4e0
ret
nop
push ebp
mov ebp,esp
push ecx
push ebx
push esi
push edi
mov [ebp-0x4],ecx
mov edi,edx
mov esi,eax
xor ebx,ebx
mov eax,esi
call dword 0x4ef10
test al,al
jz 0x4a19b
cmp byte [esi+0x6a],0x0
jnz 0x4a166
mov eax,[esi+0x74]
push eax
mov ecx,[esi+0x70]
mov edx,[esi+0x78]
mov eax,esi
call dword 0x4a0c8
mov eax,[ebp+0x8]
push eax
mov ecx,[ebp-0x4]
mov edx,edi
mov eax,esi
call dword 0x4a1a8
mov ebx,eax
test bl,bl
jz 0x4a19b
mov eax,[0x468e8c]
mov eax,[eax]
movzx eax,word [eax+0x44]
mov [esi+0x7c],ax
mov eax,[0x468e8c]
mov eax,[eax]
movzx edx,word [esi+0x68]
call dword 0x5c4e0
mov eax,ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
ret 0x4
lea eax,[eax+0x0]
push ebp
mov ebp,esp
add esp,byte -0xc
push ebx
push esi
push edi
mov [ebp-0x4],ecx
mov esi,edx
mov edi,eax
xor ebx,ebx
mov eax,edi
call dword 0x4ef10
test al,al
jz 0x4a1fe
cmp esi,[edi+0x6c]
jz 0x4a1fe
mov eax,edi
call dword 0x4a20c
mov ebx,esi
mov [edi+0x6c],ebx
lea eax,[ebp-0xc]
push eax
mov ecx,[ebp+0x8]
mov edx,[ebp-0x4]
mov eax,ebx
call dword 0x4a088
mov eax,[ebp-0x8]
push eax
mov eax,[ebp-0xc]
push eax
mov eax,[edi+0x6c]
push eax
call dword 0x1d470
cmp eax,byte +0x1
sbb ebx,ebx
inc ebx
mov eax,ebx
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret 0x4
lea eax,[eax+0x0]
push ebx
mov ebx,eax
mov eax,ebx
call dword 0x4ef10
test al,al
jz 0x4a22e
cmp dword [ebx+0x6c],byte +0x0
jz 0x4a22e
mov eax,[ebx+0x6c]
push eax
call dword 0x1d478
xor eax,eax
mov [ebx+0x6c],eax
pop ebx
ret
push ebx
push esi
push edi
add esp,byte -0x8
mov edi,ecx
mov esi,edx
mov ebx,eax
mov eax,ebx
call dword 0x4ef10
test al,al
jz 0x4a26b
push esp
mov ecx,edi
mov edx,esi
mov eax,[ebx+0x6c]
call dword 0x4a088
mov eax,[esp+0x4]
push eax
mov eax,[esp+0x4]
push eax
call dword 0x1d480
cmp eax,byte +0x1
sbb eax,eax
inc eax
jmp short 0x4a26d
xor eax,eax
pop ecx
pop edx
pop edi
pop esi
pop ebx
ret
nop
push ebx
mov ebx,eax
mov eax,ebx
call dword 0x4ef10
test al,al
jz 0x4a289
push byte -0x1
call dword 0x1d488
pop ebx
ret
nop
push ebx
mov ebx,eax
mov eax,ebx
call dword 0x4ef10
test al,al
jz 0x4a2a1
push byte +0x0
call dword 0x1d488
pop ebx
ret
nop
push ebx
push esi
mov esi,eax
mov eax,esi
call dword 0x4ef10
test al,al
jz 0x4a2eb
cmp byte [esi+0x6a],0x0
jz 0x4a2eb
mov eax,esi
call dword 0x4a20c
call dword 0x1d468
cmp eax,byte +0x1
sbb ebx,ebx
inc ebx
mov byte [esi+0x6a],0x0
or edx,byte -0x1
mov eax,esi
call dword 0x4a110
mov eax,[0x468e8c]
mov eax,[eax]
movzx edx,word [esi+0x7c]
call dword 0x5c4e0
jmp short 0x4a2ed
xor ebx,ebx
mov eax,ebx
pop esi
pop ebx
ret
mov eax,eax
push ebp
mov ebp,esp
push ecx
push ebx
push esi
test dl,dl
jz 0x4a306
add esp,byte -0x10
call dword 0x2f14
mov [ebp-0x1],dl
mov ebx,eax
xor edx,edx
mov eax,ebx
call dword 0x43100
mov dl,0x1
mov eax,[0x43b844]
call dword 0x205a4
mov esi,eax
mov [ebx+0x250],esi
mov eax,esi
mov edx,ebx
call dword 0x3eb34
mov eax,ebx
cmp byte [ebp-0x1],0x0
jz 0x4a348
call dword 0x2f6c
pop dword [dword fs:0x0]
add esp,byte +0xc
mov eax,ebx
pop esi
pop ebx
pop ecx
pop ebp
ret
nop
push ebx
push esi
call dword 0x2fbc
mov ebx,edx
mov esi,eax
mov eax,[esi+0x250]
call dword 0x2bf0
mov edx,ebx
and dl,0xfc
mov eax,esi
call dword 0x43244
test bl,bl
jng 0x4a37d
mov eax,esi
call dword 0x2f64
pop esi
pop ebx
ret
push ebx
push esi
mov esi,edx
mov ebx,eax
or word [ebx+0x54],0x100
mov edx,esi
mov eax,ebx
call dword 0x461f8
and word [ebx+0x54],0xfeff
pop esi
pop ebx
ret
mov eax,eax
push ebp
mov ebp,esp
push ecx
push ebx
mov ebx,edx
mov [ebp-0x4],eax
mov eax,[ebp-0x4]
mov eax,[eax+0x250]
call dword 0x2086c
xor eax,eax
push ebp
push dword 0x44b43e
push dword [fs:eax]
mov [fs:eax],esp
mov eax,[ebp-0x4]
mov eax,[eax+0x250]
mov edx,ebx
call dword 0x20bb8
xor eax,eax
push ebp
push dword 0x44b41b
push dword [fs:eax]
mov [fs:eax],esp
mov eax,[ebp-0x4]
mov eax,[eax+0x250]
call dword 0x3eb4c
mov eax,[ebp-0x4]
mov edx,[eax]
call dword [edx+0xd8]
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x44b422
mov eax,[ebp-0x4]
mov eax,[eax+0x250]
xor edx,edx
call dword 0x20bb8
ret
jmp dword 0x3384
jmp short 0x4a40a
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x44b445
mov eax,[ebp-0x4]
mov eax,[eax+0x250]
call dword 0x20a24
ret
jmp dword 0x3384
jmp short 0x4a42f
pop ebx
pop ecx
pop ebp
ret
lea eax,[eax+0x0]
ret
lea eax,[eax+0x0]
push ebx
mov ebx,eax
jmp short 0x4a458
mov ebx,[ebx+0xc]
test ebx,ebx
jz 0x4a467
mov eax,ebx
call dword 0x4a4ec
test al,al
jz 0x4a455
mov eax,ebx
pop ebx
ret
nop
mov edx,[eax+0x14]
test edx,edx
jz 0x4a479
cmp byte [edx+0x10],0x0
jnz 0x4a48a
mov edx,[eax+0x1c]
cmp eax,[edx+0x64]
jnz 0x4a487
cmp byte [eax+0x10],0x0
jnz 0x4a48a
xor eax,eax
ret
mov al,0x1
ret
lea eax,[eax+0x0]
test dl,dl
jz 0x4a49c
add esp,byte -0x10
call dword 0x2f14
mov [eax+0x1c],ecx
test dl,dl
jz 0x4a4b2
call dword 0x2f6c
pop dword [dword fs:0x0]
add esp,byte +0xc
ret
nop
xor edx,edx
mov eax,[eax+0x8]
test eax,eax
jz 0x4a4c5
mov eax,[eax+0xc]
inc edx
test eax,eax
jnz 0x4a4bd
mov eax,edx
ret
push ebx
push esi
xor esi,esi
call dword 0x4ab10
mov ebx,eax
test ebx,ebx
jz 0x4a4e5
mov eax,ebx
call dword 0x4aae8
mov ebx,eax
inc esi
test ebx,ebx
jnz 0x4a4d7
mov eax,esi
pop esi
pop ebx
ret
mov eax,eax
push ebx
push esi
mov edx,[eax+0x4]
test edx,edx
jz 0x4a4fb
movzx ebx,byte [edx+0x57]
jmp short 0x4a51c
mov bl,0x1
call dword 0x4ab10
mov esi,eax
test esi,esi
jz 0x4a51a
mov eax,esi
call dword 0x4a4ec
test al,al
jnz 0x4a51c
mov esi,[esi+0xc]
test esi,esi
jnz 0x4a508
xor ebx,ebx
mov eax,ebx
pop esi
pop ebx
ret
lea eax,[eax+0x0]
mov edx,[eax+0x1c]
cmp eax,[edx+0x64]
jnz 0x4a530
mov edx,eax
jmp short 0x4a533
mov edx,[eax+0x14]
movzx ecx,byte [edx+0x10]
cmp cl,0x1
jnz 0x4a547
mov edx,0x1
call dword 0x4a5b4
ret
cmp cl,0x2
jnz 0x4a558
mov edx,0x2
call dword 0x4a5b4
jmp short 0x4a56b
xor ecx,ecx
mov dl,0x1
mov eax,[0x407858]
call dword 0xb450
call dword 0x3464
ret
mov edx,[eax+0x1c]
cmp eax,[edx+0x64]
jnz 0x4a578
mov edx,eax
jmp short 0x4a57b
mov edx,[eax+0x14]
movzx ecx,byte [edx+0x10]
cmp cl,0x1
jnz 0x4a58f
mov edx,0x1
call dword 0x4a638
ret
cmp cl,0x2
jnz 0x4a5a0
mov edx,0x2
call dword 0x4a638
jmp short 0x4a5b3
xor ecx,ecx
mov dl,0x1
mov eax,[0x407858]
call dword 0xb450
call dword 0x3464
ret
push ebx
push esi
push edi
push ebp
add esp,byte -0x14
mov edi,edx
mov esi,eax
mov ebx,esi
jmp short 0x4a5e2
mov eax,edi
mov ebp,[ebx+0x14]
cmp al,[ebp+0x10]
jnz 0x4a5e0
cmp dword [ebx+0x18],byte +0x0
jz 0x4a5e0
mov eax,[ebx+0x18]
call dword 0x4aa0c
mov [esp],eax
jmp short 0x4a62c
mov ebx,ebp
mov eax,[esi+0x1c]
cmp ebx,[eax+0x64]
jnz 0x4a5c3
lea edx,[esp+0x4]
mov eax,[esi+0x1c]
mov eax,[eax+0x14]
mov ecx,[eax]
call dword [ecx+0x44]
lea edx,[esp+0x4]
mov eax,[esi+0x1c]
mov eax,[eax+0x14]
mov ecx,[eax]
call dword [ecx+0x90]
mov eax,edi
dec al
jz 0x4a61e
dec al
jnz 0x4a627
mov eax,[esp+0x4]
mov [esp],eax
jmp short 0x4a62c
mov eax,[esp+0x8]
mov [esp],eax
jmp short 0x4a62c
xor eax,eax
mov [esp],eax
mov eax,[esp]
add esp,byte +0x14
pop ebp
pop edi
pop esi
pop ebx
ret
nop
push ebx
push esi
push edi
push ebp
add esp,byte -0x10
mov edi,edx
mov ebx,eax
mov eax,[ebx+0x1c]
cmp ebx,[eax+0x64]
jz 0x4a666
mov eax,[ebx+0x1c]
mov esi,[eax+0x64]
cmp esi,[ebx+0x14]
jnz 0x4a69c
cmp dword [ebx+0x4],byte +0x0
jz 0x4a69c
mov eax,esi
call dword 0x4a4c8
dec eax
jnz 0x4a69c
mov edx,esp
mov eax,[ebx+0x1c]
mov eax,[eax+0x14]
mov ecx,[eax]
call dword [ecx+0x44]
mov edx,esp
mov eax,[ebx+0x1c]
mov eax,[eax+0x14]
mov ecx,[eax]
call dword [ecx+0x90]
mov eax,edi
cmp al,0x1
jnz 0x4a693
mov ebp,[esp+0xc]
sub ebp,[esp+0x4]
jmp short 0x4a6e4
mov ebp,[esp+0x8]
sub ebp,[esp]
jmp short 0x4a6e4
mov esi,ebx
jmp short 0x4a6c1
mov eax,edi
mov edx,[esi+0x14]
cmp al,[edx+0x10]
jnz 0x4a6be
mov eax,esi
call dword 0x4aa0c
mov ebp,eax
mov eax,esi
call dword 0x4a524
sub ebp,eax
jmp short 0x4a6e4
mov esi,[esi+0x14]
mov eax,[ebx+0x1c]
cmp esi,[eax+0x64]
jnz 0x4a6a0
mov ecx,edi
mov eax,[ebx+0x1c]
mov edx,[eax+0x64]
cmp cl,[edx+0x10]
jnz 0x4a6db
mov ebp,[eax+0x68]
jmp short 0x4a6e4
mov eax,edx
call dword 0x4aa0c
mov ebp,eax
mov eax,ebp
add esp,byte +0x10
pop ebp
pop edi
pop esi
pop ebx
ret
mov eax,eax
push ebx
push esi
push edi
mov esi,eax
mov eax,esi
call dword 0x4a4c8
test eax,eax
jz dword 0x4a794
cmp byte [esi+0x10],0x0
jz dword 0x4a794
mov eax,esi
call dword 0x4ab10
mov ebx,eax
movzx eax,byte [esi+0x10]
dec al
jz 0x4a725
dec al
jz 0x4a735
jmp short 0x4a745
mov edx,0x1
mov eax,esi
call dword 0x4a638
mov edi,eax
jmp short 0x4a747
mov edx,0x2
mov eax,esi
call dword 0x4a638
mov edi,eax
jmp short 0x4a747
xor edi,edi
mov eax,esi
call dword 0x4a4c8
push eax
mov eax,edi
pop edx
mov ecx,edx
cdq
idiv ecx
mov esi,eax
test ebx,ebx
jz 0x4a794
cmp dword [ebx+0xc],byte +0x0
jnz 0x4a76e
mov edx,edi
mov eax,ebx
call dword 0x4aa34
jmp short 0x4a780
mov eax,ebx
call dword 0x4a524
mov edx,eax
add edx,esi
mov eax,ebx
call dword 0x4aa34
mov eax,ebx
call dword 0x4a890
mov eax,ebx
call dword 0x4aae8
mov ebx,eax
test ebx,ebx
jnz 0x4a75d
pop edi
pop esi
pop ebx
ret
push ebx
push esi
push edi
mov esi,edx
mov ebx,eax
mov eax,esi
call dword 0x3a1c
mov edi,[ebx+0x4]
test edi,edi
jz 0x4a7d7
cmp dword [edi+0x8],byte +0x0
jnz 0x4a7ca
mov ecx,[dword 0x468c80]
mov dl,0x1
mov eax,[0x407858]
call dword 0xb50c
call dword 0x3464
mov eax,esi
mov edx,[ebx+0x4]
mov edx,[edx+0x8]
call dword 0x3a70
pop edi
pop esi
pop ebx
ret
nop
push ebp
mov ebp,esp
add esp,byte -0xc
push ebx
push esi
mov ebx,eax
xor eax,eax
mov [ebp-0x8],eax
mov eax,[ebx+0x1c]
mov [ebp-0xc],eax
lea ecx,[ebp-0x8]
mov eax,[ebp-0xc]
mov eax,[eax+0x14]
mov si,0xffb7
call dword 0x2dec
cmp dword [ebp-0x8],byte +0x0
setnz [ebp-0x1]
cmp byte [ebp-0x1],0x0
jz 0x4a854
mov eax,[ebp-0xc]
mov [eax+0x38],ebx
xor eax,eax
push ebp
push dword 0x44b84d
push dword [fs:eax]
mov [fs:eax],esp
push byte +0x0
mov eax,[ebp-0xc]
mov edx,[eax+0x14]
xor ecx,ecx
mov eax,[ebp-0x8]
call dword 0x410d0
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x44b854
mov eax,[ebp-0xc]
xor edx,edx
mov [eax+0x38],edx
ret
jmp dword 0x3384
jmp short 0x4a844
movzx eax,byte [ebp-0x1]
pop esi
pop ebx
mov esp,ebp
pop ebp
ret
mov eax,eax
push ebp
mov ebp,esp
push ebx
push esi
xor ebx,ebx
mov eax,[ebp+0x8]
mov eax,[eax-0x4]
mov esi,[eax+0x14]
test esi,esi
jz 0x4a88a
mov eax,esi
call dword 0x4aae8
test eax,eax
jz 0x4a883
mov bl,0x1
jmp short 0x4a88a
mov esi,[esi+0x14]
test esi,esi
jnz 0x4a874
mov eax,ebx
pop esi
pop ebx
pop ebp
ret
push ebp
mov ebp,esp
add esp,byte -0x14
push ebx
push esi
push edi
mov [ebp-0x4],eax
mov eax,[ebp-0x4]
mov eax,[eax+0x4]
test eax,eax
jz dword 0x4aa02
cmp byte [eax+0x57],0x0
jz dword 0x4aa02
mov edx,[ebp-0x4]
mov edx,[edx+0x1c]
cmp dword [edx+0x6c],byte +0x0
jnz dword 0x4aa02
mov edx,[ebp-0x4]
mov edx,[edx+0x14]
movzx edx,byte [edx+0x10]
mov [eax+0x90],dl
mov edx,0x2
mov eax,[ebp-0x4]
call dword 0x4a638
mov ebx,eax
mov edx,0x1
mov eax,[ebp-0x4]
call dword 0x4a638
mov esi,eax
push ebp
call dword 0x4a860
pop ecx
test al,al
jz 0x4a91d
mov eax,[ebp-0x4]
mov eax,[eax+0x14]
cmp byte [eax+0x10],0x1
jnz 0x4a914
mov eax,[ebp-0x4]
mov eax,[eax+0x1c]
sub ebx,[eax+0xc]
jmp short 0x4a91d
mov eax,[ebp-0x4]
mov eax,[eax+0x1c]
sub esi,[eax+0xc]
mov eax,[ebp-0x4]
call dword 0x4aae8
test eax,eax
jnz 0x4a999
mov eax,[ebp-0x4]
mov eax,[eax+0x14]
mov edx,[ebp-0x4]
mov edx,[edx+0x1c]
cmp eax,[edx+0x64]
jz 0x4a965
mov eax,[ebp-0x4]
mov eax,[eax+0x14]
movzx eax,byte [eax+0x10]
mov edx,[ebp-0x4]
mov edx,[edx+0x1c]
mov edx,[edx+0x64]
cmp al,[edx+0x10]
jnz 0x4a965
mov eax,[ebp-0x4]
call dword 0x4aa0c
mov edx,[ebp-0x4]
mov edx,[edx+0x1c]
cmp eax,[edx+0x68]
jl 0x4a999
mov eax,[ebp-0x4]
mov eax,[eax+0x14]
movzx eax,byte [eax+0x10]
mov edx,[ebp-0x4]
mov edx,[edx+0x1c]
mov edx,[edx+0x64]
cmp al,[edx+0x10]
jz 0x4a9b9
mov eax,[ebp-0x4]
call dword 0x4aa0c
mov edi,eax
mov eax,[ebp-0x4]
mov eax,[eax+0x1c]
mov eax,[eax+0x64]
call dword 0x4aa0c
cmp edi,eax
jnl 0x4a9b9
mov eax,[ebp-0x4]
mov eax,[eax+0x14]
cmp byte [eax+0x10],0x1
jnz 0x4a9b0
mov eax,[ebp-0x4]
mov eax,[eax+0x1c]
sub esi,[eax+0xc]
jmp short 0x4a9b9
mov eax,[ebp-0x4]
mov eax,[eax+0x1c]
sub ebx,[eax+0xc]
push esi
lea eax,[ebp-0x14]
push eax
mov edx,0x1
mov eax,[ebp-0x4]
call dword 0x4a5b4
push eax
mov edx,0x2
mov eax,[ebp-0x4]
call dword 0x4a5b4
mov ecx,ebx
pop edx
call dword 0x12a54
lea ecx,[ebp-0x14]
mov eax,[ebp-0x4]
mov edx,[eax+0x4]
mov eax,[ebp-0x4]
mov eax,[eax+0x1c]
mov ebx,[eax]
call dword [ebx]
lea edx,[ebp-0x14]
mov eax,[ebp-0x4]
mov eax,[eax+0x4]
call dword 0x3fbc8
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret
lea eax,[eax+0x0]
push ebx
mov ebx,eax
mov eax,ebx
call dword 0x4a4ec
test al,al
jnz 0x4aa2e
mov eax,ebx
call dword 0x4a46c
test al,al
jz 0x4aa2e
mov eax,ebx
call dword 0x4a524
pop ebx
ret
mov eax,[ebx+0x20]
pop ebx
ret
nop
mov [eax+0x20],edx
ret
mov eax,[eax+0x8]
jmp short 0x4aa3f
mov eax,edx
mov edx,[eax+0xc]
test edx,edx
jnz 0x4aa3d
ret
nop
push ebx
push esi
push edi
mov edi,edx
mov ebx,eax
mov edx,edi
mov eax,ebx
call dword 0x4aa34
mov ebx,[ebx+0x8]
test ebx,ebx
jz 0x4aa83
mov eax,ebx
call dword 0x4a4b4
test eax,eax
jng 0x4aa7c
mov eax,ebx
call dword 0x4aa38
mov esi,eax
mov edx,edi
mov eax,esi
call dword 0x4aa48
mov ebx,[ebx+0xc]
test ebx,ebx
jnz 0x4aa5f
pop edi
pop esi
pop ebx
ret
nop
push ebx
push esi
push edi
mov esi,eax
mov ebx,[esi+0x8]
test ebx,ebx
jz 0x4aae3
mov eax,ebx
call dword 0x4aa0c
mov edi,eax
mov eax,ebx
call dword 0x4a524
cmp edi,eax
jl 0x4aabc
mov eax,ebx
call dword 0x4aa0c
mov edi,eax
mov eax,esi
call dword 0x4a56c
cmp edi,eax
jng 0x4aad5
mov eax,esi
call dword 0x4a6f0
mov edi,[esi+0x1c]
push edi
push dword 0x44d8c4
mov edx,esi
mov eax,edi
call dword 0x4adc8
mov eax,ebx
call dword 0x4aa88
mov ebx,[ebx+0xc]
test ebx,ebx
jnz 0x4aa94
pop edi
pop esi
pop ebx
ret
nop
mov eax,[eax+0xc]
call dword 0x4a450
ret
lea eax,[eax+0x0]
push ebx
mov ebx,[eax+0x18]
jmp short 0x4aafd
mov ebx,[ebx+0x18]
test ebx,ebx
jz 0x4ab0c
mov eax,ebx
call dword 0x4a4ec
test al,al
jz 0x4aafa
mov eax,ebx
pop ebx
ret
mov eax,[eax+0x8]
call dword 0x4a450
ret
lea eax,[eax+0x0]
push ebp
mov ebp,esp
add esp,byte -0xc
push ebx
push esi
push edi
test dl,dl
jz 0x4ab31
add esp,byte -0x10
call dword 0x2f14
mov [ebp-0xc],ecx
mov [ebp-0x5],dl
mov [ebp-0x4],eax
xor edx,edx
mov eax,[ebp-0x4]
call dword 0x2bc0
mov eax,[ebp-0x4]
mov dword [eax+0xc],0x4
mov eax,[ebp-0x4]
mov edx,[ebp-0xc]
mov [eax+0x14],edx
mov eax,[ebp-0x4]
mov dword [eax+0x70],0x80000
mov eax,[ebp-0x4]
mov dword [eax+0x18],0xc
mov eax,[ebp-0xc]
movzx eax,byte [eax+0x5b]
cmp al,0x1
jz 0x4ab7a
cmp al,0x2
jnz 0x4ab7e
xor eax,eax
jmp short 0x4ab80
mov al,0x1
mov edx,[ebp-0x4]
mov [edx+0x1c],al
mov ecx,[ebp-0x4]
mov dl,0x1
mov eax,[0x43d94c]
call dword 0x4a490
mov edx,[ebp-0x4]
mov [edx+0x64],eax
mov dl,0x1
mov eax,[0x41f410]
call dword 0x202ac
mov ebx,eax
mov eax,[ebp-0x4]
mov [eax+0x10],ebx
mov edx,0xffffff
xor eax,eax
call dword 0x26ccc
mov edx,eax
mov eax,ebx
call dword 0x20428
mov eax,[ebp-0x4]
call dword 0x4acf0
xor eax,eax
push ebp
push dword 0x44bc29
push dword [fs:eax]
mov [fs:eax],esp
mov eax,[ebp-0xc]
call dword 0x442b4
mov ebx,eax
dec ebx
test ebx,ebx
jl 0x4ac08
inc ebx
xor esi,esi
push byte +0x0
mov edx,esi
mov eax,[ebp-0xc]
call dword 0x44278
mov edx,eax
mov cl,0x3
mov eax,[ebp-0x4]
mov edi,[eax]
call dword [edi+0xc]
inc esi
dec ebx
jnz 0x4abec
mov eax,[ebp-0x4]
mov eax,[eax+0x64]
call dword 0x4a6f0
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x44bc30
mov eax,[ebp-0x4]
call dword 0x4acf4
ret
jmp dword 0x3384
jmp short 0x4ac20
mov eax,[ebp-0xc]
test byte [eax+0x1c],0x10
jnz 0x4ac61
mov eax,[ebp-0x4]
mov edx,[ebp-0x4]
mov edx,[edx+0x14]
mov ecx,[edx+0x38]
mov [eax+0x30],ecx
mov ecx,[edx+0x3c]
mov [eax+0x34],ecx
mov eax,[ebp-0x4]
mov eax,[eax+0x14]
mov edx,[ebp-0x4]
mov [eax+0x3c],edx
mov dword [eax+0x38],0x44d8d4
mov eax,[ebp-0x4]
cmp byte [ebp-0x5],0x0
jz 0x4ac79
call dword 0x2f6c
pop dword [dword fs:0x0]
add esp,byte +0xc
mov eax,[ebp-0x4]
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret
nop
push ebx
push esi
call dword 0x2fbc
mov ebx,edx
mov esi,eax
cmp dword [esi+0x30],byte +0x0
jz 0x4acac
mov eax,[esi+0x14]
mov edx,[esi+0x30]
mov [eax+0x38],edx
mov edx,[esi+0x34]
mov [eax+0x3c],edx
xor eax,eax
mov [esi+0x30],eax
mov [esi+0x34],eax
mov edx,[esi+0x64]
mov eax,esi
call dword 0x4bf18
mov eax,[esi+0x10]
call dword 0x2bf0
mov edx,ebx
and dl,0xfc
mov eax,esi
call dword 0x2be0
test bl,bl
jng 0x4acd5
mov eax,esi
call dword 0x2f64
pop esi
pop ebx
ret
mov eax,[eax+0x14]
movzx eax,byte [eax+0x5b]
dec eax
sub al,0x2
jnc 0x4ace8
add dword [ecx],byte +0xc
ret
add dword [ecx+0x4],byte +0xc
ret
lea eax,[eax+0x0]
inc dword [eax+0x6c]
ret
dec dword [eax+0x6c]
cmp dword [eax+0x6c],byte +0x0
jg 0x4ad07
xor edx,edx
mov [eax+0x6c],edx
call dword 0x4c89c
ret
push ebp
mov ebp,esp
push ebx
mov ebx,eax
mov eax,[ebp+0x8]
mov eax,[eax-0x4]
cmp eax,[ebx+0x4]
jnz 0x4ad22
mov eax,[ebp+0x8]
mov [eax-0x8],ebx
pop ebx
pop ebp
ret
mov eax,[ebp+0x8]
cmp dword [eax-0x8],byte +0x0
jnz 0x4ad3e
cmp dword [ebx+0xc],byte +0x0
jz 0x4ad3e
mov eax,[ebp+0x8]
push eax
mov eax,[ebx+0xc]
call dword 0x4ad08
pop ecx
mov eax,[ebp+0x8]
cmp dword [eax-0x8],byte +0x0
jnz 0x4ad5a
cmp dword [ebx+0x8],byte +0x0
jz 0x4ad5a
mov eax,[ebp+0x8]
push eax
mov eax,[ebx+0x8]
call dword 0x4ad08
pop ecx
pop ebx
pop ebp
ret
lea eax,[eax+0x0]
push ebp
mov ebp,esp
add esp,byte -0x8
mov [ebp-0x4],edx
xor edx,edx
mov [ebp-0x8],edx
cmp dword [ebp-0x4],byte +0x0
jz 0x4ad84
cmp dword [eax+0x64],byte +0x0
jz 0x4ad84
push ebp
mov eax,[eax+0x64]
call dword 0x4ad08
pop ecx
mov eax,[ebp-0x8]
pop ecx
pop ecx
pop ebp
ret
nop
push ebp
mov ebp,esp
push ebx
push esi
mov ebx,eax
mov eax,[ebp+0x8]
lea esi,[eax+0x8]
mov edx,ebx
mov eax,[esi+0x4]
call dword [esi]
mov eax,[ebx+0xc]
test eax,eax
jz 0x4adb1
mov edx,[ebp+0x8]
push edx
call dword 0x4ad8c
pop ecx
mov eax,[ebx+0x8]
test eax,eax
jz 0x4adc2
mov edx,[ebp+0x8]
push edx
call dword 0x4ad8c
pop ecx
pop esi
pop ebx
pop ebp
ret
mov eax,eax
push ebp
mov ebp,esp
test edx,edx
jnz 0x4add2
mov edx,[eax+0x64]
push ebp
mov eax,edx
call dword 0x4ad8c
pop ecx
pop ebp
ret 0x8
nop
push ebx
push esi
push edi
add esp,byte -0x10
mov esi,ecx
call dword 0x4ad60
mov ebx,eax
test ebx,ebx
jnz 0x4ae03
mov eax,esi
xor ecx,ecx
mov edx,0x10
call dword 0x252c
jmp short 0x4ae4a
mov edx,0x1
mov eax,ebx
call dword 0x4a638
push eax
lea eax,[esp+0x4]
push eax
mov edx,0x2
mov eax,ebx
call dword 0x4a638
push eax
mov edx,0x1
mov eax,ebx
call dword 0x4a5b4
push eax
mov edx,0x2
mov eax,ebx
call dword 0x4a5b4
pop edx
pop ecx
call dword 0x12a54
mov edi,esi
mov esi,esp
movsd
movsd
movsd
movsd
add esp,byte +0x10
pop edi
pop esi
pop ebx
ret
lea eax,[eax+0x0]
call dword 0x4b544
test eax,eax
jz 0x4ae61
mov eax,[eax+0x4]
ret
xor eax,eax
ret
push ebp
mov ebp,esp
add esp,byte -0x30
push ebx
push esi
push edi
mov [ebp-0x1],cl
mov esi,edx
mov ebx,eax
cmp byte [esi+0x57],0x0
jz dword 0x4b074
mov eax,[ebx+0x38]
test eax,eax
jz 0x4ae92
mov [eax+0x4],esi
call dword 0x4a890
jmp dword 0x4b069
mov eax,[ebx+0x64]
cmp dword [eax+0x8],byte +0x0
jnz dword 0x4af42
lea edx,[ebp-0x20]
mov eax,[ebx+0x14]
mov ecx,[eax]
call dword [ecx+0x44]
lea edx,[ebp-0x20]
mov eax,[ebx+0x14]
mov ecx,[eax]
call dword [ecx+0x90]
mov edi,[ebp-0x18]
sub edi,[ebp-0x20]
mov eax,[ebp-0x14]
sub eax,[ebp-0x1c]
mov [ebp-0x10],eax
mov eax,[ebx+0x14]
cmp byte [eax+0x5c],0x0
jz 0x4aeed
test edi,edi
jnz 0x4aedd
mov eax,esi
call dword 0x40238
mov edi,eax
cmp dword [ebp-0x10],byte +0x0
jnz 0x4aeed
mov eax,esi
call dword 0x40224
mov [ebp-0x10],eax
mov eax,[ebp-0x10]
push eax
lea eax,[ebp-0x30]
push eax
mov ecx,edi
mov edx,[ebp-0x1c]
mov eax,[ebp-0x20]
call dword 0x12a54
push esi
lea esi,[ebp-0x30]
lea edi,[ebp-0x20]
movsd
movsd
movsd
movsd
pop esi
lea ecx,[ebp-0x20]
mov edx,esi
mov eax,ebx
mov edi,[eax]
call dword [edi]
lea edx,[ebp-0x20]
mov eax,esi
call dword 0x3fbc8
mov ecx,ebx
mov dl,0x1
mov eax,[0x43d94c]
call dword 0x4a490
mov edx,[ebx+0x64]
mov [edx+0x8],eax
mov [eax+0x14],edx
mov [eax+0x4],esi
jmp dword 0x4b069
movzx eax,byte [ebp-0x1]
test al,al
jz 0x4af4e
sub al,0x5
jnz 0x4af52
mov byte [ebp-0x1],0x4
mov edx,esi
mov eax,ebx
call dword 0x4ad60
test eax,eax
jz 0x4af68
mov edx,eax
mov eax,ebx
call dword 0x4bfb4
mov edx,[ebp+0x8]
mov eax,ebx
call dword 0x4ad60
mov [ebp-0x8],eax
movzx eax,byte [ebp-0x1]
movzx eax,byte [eax+0x4686c0]
mov [ebp-0x9],al
mov eax,[ebx+0x64]
call dword 0x4a4b4
dec eax
jnz 0x4affa
mov edi,[ebx+0x64]
movzx eax,byte [ebp-0x9]
mov [edi+0x10],al
movzx eax,byte [ebp-0x9]
dec al
jz 0x4afa6
dec al
jz 0x4afd1
jmp short 0x4affa
mov eax,[edi+0x8]
mov edx,0x2
call dword 0x4a638
mov edx,eax
mov eax,edi
call dword 0x4aa34
mov eax,[ebx+0x64]
mov eax,[eax+0x8]
mov edx,0x1
call dword 0x4a638
mov [ebx+0x68],eax
jmp short 0x4affa
mov eax,[edi+0x8]
mov edx,0x1
call dword 0x4a638
mov edx,eax
mov eax,edi
call dword 0x4aa34
mov eax,[ebx+0x64]
mov eax,[eax+0x8]
mov edx,0x2
call dword 0x4a638
mov [ebx+0x68],eax
mov ecx,ebx
mov dl,0x1
mov eax,[0x43d94c]
call dword 0x4a490
mov [eax+0x4],esi
cmp dword [ebp-0x8],byte +0x0
jz 0x4b01d
mov edx,[ebp-0x8]
mov edx,[edx+0x14]
movzx edx,byte [edx+0x10]
jmp short 0x4b024
mov edx,[ebx+0x64]
movzx edx,byte [edx+0x10]
cmp byte [ebp-0x9],0x0
jnz 0x4b02d
mov [ebp-0x9],dl
cmp dl,[ebp-0x9]
jnz 0x4b04c
movzx edx,byte [ebp-0x1]
movzx edx,byte [edx+0x4686c8]
push edx
mov ecx,[ebp-0x8]
mov edx,eax
mov eax,ebx
call dword 0x4b228
jmp short 0x4b069
movzx edx,byte [ebp-0x9]
push edx
movzx edx,byte [ebp-0x1]
movzx edx,byte [edx+0x4686c8]
push edx
mov ecx,[ebp-0x8]
mov edx,eax
mov eax,ebx
call dword 0x4b080
mov eax,[ebx+0x14]
mov edx,[eax]
call dword [edx+0x80]
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret 0x4
lea eax,[eax+0x0]
push ebp
mov ebp,esp
push ecx
push ebx
push esi
push edi
mov edi,ecx
mov [ebp-0x4],edx
mov esi,eax
mov ecx,esi
mov dl,0x1
mov eax,[0x43d94c]
call dword 0x4a490
mov ebx,eax
movzx eax,byte [ebp+0xc]
mov [ebx+0x10],al
test edi,edi
jnz dword 0x4b18b
mov edx,[esi+0x68]
mov eax,ebx
call dword 0x4aa34
mov eax,[esi+0x64]
call dword 0x4aa0c
mov [esi+0x68],eax
movzx eax,byte [ebp+0xc]
mov [esi+0x48],al
xor eax,eax
mov [esi+0x40],eax
mov dword [esi+0x44],0x3fe00000
cmp byte [ebp+0x8],0x0
jz 0x4b10e
mov eax,[esi+0x64]
mov [ebx+0x8],eax
mov eax,[esi+0x64]
mov [eax+0x14],ebx
mov edx,[ebp-0x4]
mov [eax+0xc],edx
mov edx,[ebp-0x4]
mov [edx+0x18],eax
mov eax,[ebp-0x4]
mov [eax+0x14],ebx
mov [esi+0x64],ebx
push esi
push dword 0x44d33c
mov edx,[ebx+0x8]
mov eax,esi
call dword 0x4adc8
jmp short 0x4b17a
mov eax,[ebp-0x4]
mov [ebx+0x8],eax
mov eax,[esi+0x64]
mov [eax+0x14],ebx
mov edx,[ebp-0x4]
mov [eax+0x18],edx
mov edx,[ebp-0x4]
mov [edx+0xc],eax
mov eax,[ebp-0x4]
mov [eax+0x14],ebx
mov [esi+0x64],ebx
push esi
push dword 0x44d33c
mov edx,[ebx+0x8]
mov eax,esi
call dword 0x4adc8
mov eax,[esi+0x64]
call dword 0x4aa0c
sar eax,1
jns 0x4b14e
adc eax,byte +0x0
mov [esi+0x4c],eax
push esi
push dword 0x44d78c
mov edx,[ebx+0x8]
mov eax,esi
call dword 0x4adc8
mov eax,[esi+0x64]
call dword 0x4aa0c
mov edx,eax
sar edx,1
jns 0x4b172
adc edx,byte +0x0
mov eax,[ebp-0x4]
call dword 0x4aa34
push esi
push dword 0x44d8c4
xor edx,edx
mov eax,esi
call dword 0x4adc8
jmp short 0x4b202
mov eax,edi
call dword 0x4aa0c
mov edx,eax
mov eax,ebx
call dword 0x4aa34
mov eax,[edi+0x14]
mov [ebx+0x14],eax
mov eax,[edi+0x18]
mov [ebx+0x18],eax
test eax,eax
jz 0x4b1ae
mov [eax+0xc],ebx
mov eax,[edi+0xc]
mov [ebx+0xc],eax
test eax,eax
jz 0x4b1bb
mov [eax+0x18],ebx
mov eax,[ebx+0x14]
cmp edi,[eax+0x8]
jnz 0x4b1c6
mov [eax+0x8],ebx
mov eax,[ebp-0x4]
mov [eax+0x14],ebx
mov [edi+0x14],ebx
cmp byte [ebp+0x8],0x0
jz 0x4b1eb
mov [ebx+0x8],edi
xor eax,eax
mov [edi+0x18],eax
mov eax,[ebp-0x4]
mov [edi+0xc],eax
mov eax,[ebp-0x4]
mov [eax+0x18],edi
jmp short 0x4b202
mov eax,[ebp-0x4]
mov [ebx+0x8],eax
mov eax,[ebp-0x4]
mov [edi+0x18],eax
xor eax,eax
mov [edi+0xc],eax
mov eax,[ebp-0x4]
mov [eax+0xc],edi
mov eax,ebx
call dword 0x4a6f0
mov eax,ebx
call dword 0x4aa88
push esi
push dword 0x44d8c4
xor edx,edx
mov eax,esi
call dword 0x4adc8
pop edi
pop esi
pop ebx
pop ecx
pop ebp
ret 0x8
nop
push ebp
mov ebp,esp
push ebx
mov ebx,ecx
mov ecx,[ebp+0x8]
test ebx,ebx
jnz 0x4b24a
mov eax,[eax+0x64]
mov ebx,[eax+0x8]
test cl,cl
jz 0x4b24a
jmp short 0x4b243
mov ebx,eax
mov eax,[ebx+0xc]
test eax,eax
jnz 0x4b241
test cl,cl
jz 0x4b269
mov eax,[ebx+0x14]
mov [edx+0x14],eax
mov [edx+0x18],ebx
mov eax,[ebx+0xc]
mov [edx+0xc],eax
test eax,eax
jz 0x4b264
mov [eax+0x18],edx
mov [ebx+0xc],edx
jmp short 0x4b28a
mov [edx+0xc],ebx
mov eax,[ebx+0x18]
mov [edx+0x18],eax
test eax,eax
jz 0x4b279
mov [eax+0xc],edx
mov [ebx+0x18],edx
mov eax,[ebx+0x14]
mov [edx+0x14],eax
cmp ebx,[eax+0x8]
jnz 0x4b28a
mov [eax+0x8],edx
mov eax,[ebx+0x14]
call dword 0x4a6f0
mov eax,[ebx+0x14]
call dword 0x4aa88
pop ebx
pop ebp
ret 0x4
nop
push ebp
mov ebp,esp
add esp,byte -0xc
push ebx
push esi
push edi
mov ebx,ecx
mov esi,edx
mov [ebp-0x4],eax
mov byte [ebp-0x5],0x0
mov edx,0x1
mov eax,esi
call dword 0x4a5b4
mov edi,eax
mov edx,0x2
mov eax,esi
call dword 0x4a5b4
mov [ebp-0xc],eax
mov eax,[ebp-0x4]
cmp byte [eax+0x1c],0x0
jz 0x4b340
cmp edi,[ebx+0x4]
jg dword 0x4b396
mov eax,[ebx+0x4]
mov edx,[ebp-0x4]
add edi,[edx+0x18]
cmp eax,edi
jg dword 0x4b396
mov eax,[ebx]
cmp eax,[ebp-0xc]
jl dword 0x4b396
mov edx,0x2
mov eax,esi
call dword 0x4a638
add eax,[ebp-0xc]
cmp eax,[ebx]
jl dword 0x4b396
mov byte [ebp-0x5],0x1
mov eax,[esi+0x4]
mov edx,[eax+0x40]
add edx,[eax+0x48]
sub edx,byte +0xf
cmp edx,[ebx]
jnl 0x4b335
mov eax,[ebp+0x8]
mov dword [eax],0x14
jmp short 0x4b396
mov eax,[ebp+0x8]
mov dword [eax],0x2
jmp short 0x4b396
mov eax,[ebx]
cmp eax,[ebp-0xc]
jl 0x4b396
mov eax,[ebx]
mov edx,[ebp-0x4]
mov edx,[edx+0x18]
add edx,[ebp-0xc]
cmp eax,edx
jg 0x4b396
cmp edi,[ebx+0x4]
jg 0x4b396
mov edx,0x1
mov eax,esi
call dword 0x4a638
add edi,eax
cmp edi,[ebx+0x4]
jl 0x4b396
mov byte [ebp-0x5],0x1
mov eax,[ebx+0x4]
mov edx,[esi+0x4]
mov edx,[edx+0x44]
add edx,byte +0xf
cmp eax,edx
jnl 0x4b38d
mov eax,[ebp+0x8]
mov dword [eax],0x14
jmp short 0x4b396
mov eax,[ebp+0x8]
mov dword [eax],0x2
movzx eax,byte [ebp-0x5]
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret 0x4
nop
push ebx
push esi
push edi
push ebp
add esp,byte -0x18
mov edi,edx
mov ebp,eax
mov eax,[ebp+0x14]
call dword 0x442b4
mov esi,eax
dec esi
cmp esi,byte +0x0
jl 0x4b424
mov eax,[ebp+0x14]
mov edx,esi
call dword 0x44278
mov ebx,eax
cmp byte [ebx+0x57],0x0
jz 0x4b41e
mov eax,ebx
mov edx,[dword 0x43d11c]
call dword 0x2d7c
test al,al
jz 0x4b3eb
cmp byte [ebx+0x1da],0x0
jz 0x4b41e
mov edx,[edi+0x4]
sub edx,[ebx+0x44]
mov eax,[edi]
sub eax,[ebx+0x40]
mov ecx,esp
call dword 0x12a04
push dword [esp+0x4]
push dword [esp+0x4]
lea edx,[esp+0x10]
mov eax,ebx
mov ecx,[eax]
call dword [ecx+0x44]
lea eax,[esp+0x10]
push eax
call dword 0x6220
test eax,eax
jnz 0x4b426
dec esi
cmp esi,byte -0x1
jnz 0x4b3bf
xor ebx,ebx
mov eax,ebx
add esp,byte +0x18
pop ebp
pop edi
pop esi
pop ebx
ret
push ebp
mov ebp,esp
push ebx
push esi
mov ebx,eax
mov eax,[ebx+0x14]
cmp byte [eax+0x10],0x1
jnz 0x4b481
mov eax,ebx
call dword 0x4aa0c
mov edx,[ebp+0x8]
mov edx,[edx-0x4]
cmp eax,[edx+0x4]
jl 0x4b481
mov eax,ebx
call dword 0x4aa0c
mov edx,[ebp+0x8]
mov edx,[edx-0x8]
sub eax,[edx+0xc]
mov edx,[ebp+0x8]
mov edx,[edx-0x4]
cmp eax,[edx+0x4]
jg 0x4b481
mov eax,[ebp+0x8]
mov eax,[eax-0xc]
mov dword [eax],0x12
mov eax,[ebp+0x8]
mov [eax-0x10],ebx
jmp short 0x4b4f3
mov eax,[ebx+0x14]
cmp byte [eax+0x10],0x2
jnz 0x4b4c9
mov eax,ebx
call dword 0x4aa0c
mov edx,[ebp+0x8]
mov edx,[edx-0x4]
cmp eax,[edx]
jl 0x4b4c9
mov eax,ebx
call dword 0x4aa0c
mov edx,[ebp+0x8]
mov edx,[edx-0x8]
sub eax,[edx+0xc]
mov edx,[ebp+0x8]
mov edx,[edx-0x4]
cmp eax,[edx]
jg 0x4b4c9
mov eax,[ebp+0x8]
mov eax,[eax-0xc]
mov dword [eax],0x12
mov eax,[ebp+0x8]
mov [eax-0x10],ebx
jmp short 0x4b4f3
cmp dword [ebx+0x4],byte +0x0
jz 0x4b4f3
mov eax,[ebp+0x8]
mov eax,[eax-0xc]
push eax
mov eax,[ebp+0x8]
mov ecx,[eax-0x4]
mov eax,[ebp+0x8]
mov eax,[eax-0x8]
mov edx,ebx
mov esi,[eax]
call dword [esi+0x40]
test al,al
jz 0x4b4f3
mov eax,[ebp+0x8]
mov [eax-0x10],ebx
mov eax,[ebp+0x8]
cmp dword [eax-0x10],byte +0x0
jnz 0x4b518
mov eax,ebx
call dword 0x4aae8
test eax,eax
jz 0x4b518
mov eax,[ebp+0x8]
push eax
mov eax,ebx
call dword 0x4aae8
call dword 0x4b430
pop ecx
mov eax,[ebp+0x8]
cmp dword [eax-0x10],byte +0x0
jnz 0x4b53d
mov eax,ebx
call dword 0x4ab10
test eax,eax
jz 0x4b53d
mov eax,[ebp+0x8]
push eax
mov eax,ebx
call dword 0x4ab10
call dword 0x4b430
pop ecx
pop esi
pop ebx
pop ebp
ret
lea eax,[eax+0x0]
push ebp
mov ebp,esp
add esp,byte -0x10
push ebx
mov [ebp-0xc],ecx
mov [ebp-0x4],edx
mov [ebp-0x8],eax
xor eax,eax
mov [ebp-0x10],eax
mov eax,[ebp-0xc]
xor edx,edx
mov [eax],edx
mov edx,[ebp-0x4]
mov eax,[ebp-0x8]
call dword 0x4b3a4
mov ebx,eax
test ebx,ebx
jz 0x4b59d
mov eax,[ebp-0x8]
mov eax,[eax+0x14]
cmp eax,[ebx+0x94]
jnz 0x4b59d
mov edx,ebx
mov eax,[ebp-0x8]
call dword 0x4ad60
mov [ebp-0x10],eax
cmp dword [ebp-0x10],byte +0x0
jz 0x4b5c2
mov eax,[ebp-0xc]
mov dword [eax],0x1
jmp short 0x4b5c2
mov eax,[ebp-0x8]
mov eax,[eax+0x64]
call dword 0x4ab10
test eax,eax
jz 0x4b5c2
test ebx,ebx
jnz 0x4b5c2
push ebp
mov eax,[ebp-0x8]
mov eax,[eax+0x64]
call dword 0x4ab10
call dword 0x4b430
pop ecx
mov eax,[ebp-0x10]
pop ebx
mov esp,ebp
pop ebp
ret
mov eax,eax
push ebp
mov ebp,esp
push ecx
push ebx
push esi
mov ebx,eax
mov eax,ebx
call dword 0x3a1c
lea edx,[ebp-0x4]
mov eax,[ebp+0x8]
mov eax,[eax-0x4]
mov ecx,0x4
mov esi,[eax]
call dword [esi+0xc]
cmp dword [ebp-0x4],byte +0x0
jng 0x4b60e
mov eax,ebx
mov edx,[ebp-0x4]
call dword 0x413c
mov edx,[ebx]
mov eax,[ebp+0x8]
mov eax,[eax-0x4]
mov ecx,[ebp-0x4]
mov ebx,[eax]
call dword [ebx+0xc]
pop esi
pop ebx
pop ecx
pop ebp
ret
nop
push ebp
mov ebp,esp
add esp,byte -0x44
push ebx
push esi
push edi
xor ecx,ecx
mov [ebp-0x44],ecx
mov [ebp-0x8],ecx
mov [ebp-0x4],edx
mov [ebp-0xc],eax
xor eax,eax
push ebp
push dword 0x44c957
push dword [fs:eax]
mov [fs:eax],esp
mov eax,[ebp-0xc]
mov edx,[eax+0x64]
mov eax,[ebp-0xc]
call dword 0x4bf18
mov eax,[ebp-0xc]
movzx eax,byte [eax+0x74]
mov [ebp-0x25],al
mov eax,[ebp-0xc]
call dword 0x4acf0
xor eax,eax
push ebp
push dword 0x44c932
push dword [fs:eax]
mov [fs:eax],esp
lea edx,[ebp-0x1c]
mov ecx,0x4
mov eax,[ebp-0x4]
mov ebx,[eax]
call dword [ebx+0xc]
cmp dword [ebp-0x1c],0x40000
jnz 0x4b68d
mov eax,[ebp-0xc]
mov byte [eax+0x74],0x0
mov byte [ebp-0x26],0x0
jmp short 0x4b6fb
mov eax,[ebp-0xc]
mov eax,[eax+0x70]
cmp eax,[ebp-0x1c]
jnz 0x4b6bd
mov eax,[ebp-0xc]
lea edx,[eax+0x74]
mov ecx,0x1
mov eax,[ebp-0x4]
mov ebx,[eax]
call dword [ebx+0xc]
lea edx,[ebp-0x26]
mov ecx,0x1
mov eax,[ebp-0x4]
mov ebx,[eax]
call dword [ebx+0xc]
jmp short 0x4b6fb
mov eax,[ebp-0xc]
mov eax,[eax+0x70]
mov [ebp-0x40],eax
mov byte [ebp-0x3c],0x0
mov eax,[ebp-0x1c]
mov [ebp-0x38],eax
mov byte [ebp-0x34],0x0
lea eax,[ebp-0x40]
push eax
push byte +0x1
lea edx,[ebp-0x44]
mov eax,[0x468b58]
call dword 0x5750
mov ecx,[ebp-0x44]
mov dl,0x1
mov eax,[0x407858]
call dword 0xb48c
call dword 0x3464
lea edx,[ebp-0x20]
mov ecx,0x4
mov eax,[ebp-0x4]
mov ebx,[eax]
call dword [ebx+0xc]
mov eax,[ebp-0x20]
dec eax
test eax,eax
jl 0x4b76d
inc eax
mov [ebp-0x30],eax
mov dword [ebp-0x1c],0x0
push ebp
lea eax,[ebp-0x8]
call dword 0x4b5cc
pop ecx
cmp dword [ebp-0x8],byte +0x0
jz 0x4b765
lea ecx,[ebp-0x10]
mov eax,[ebp-0xc]
mov eax,[eax+0x14]
mov edx,[ebp-0x8]
mov si,0xffb7
call dword 0x2dec
cmp dword [ebp-0x10],byte +0x0
jz 0x4b765
xor edx,edx
mov eax,[ebp-0x10]
call dword 0x401b8
push byte +0x0
mov eax,[ebp-0xc]
mov edx,[eax+0x14]
xor ecx,ecx
mov eax,[ebp-0x10]
call dword 0x410d0
inc dword [ebp-0x1c]
dec dword [ebp-0x30]
jnz 0x4b71e
mov eax,[ebp-0xc]
lea edx,[eax+0x68]
mov ecx,0x4
mov eax,[ebp-0x4]
mov ebx,[eax]
call dword [ebx+0xc]
mov eax,[ebp-0xc]
cmp byte [eax+0x74],0x0
jz 0x4b7ab
movzx edx,byte [ebp-0x26]
mov eax,[ebp-0xc]
mov ecx,[eax]
call dword [ecx+0x28]
mov ecx,eax
mov eax,[ebp-0xc]
mov edx,[eax+0x68]
mov eax,[ebp-0xc]
call dword 0x4d008
mov edx,[ebp-0xc]
mov [edx+0x68],eax
xor eax,eax
mov [ebp-0x18],eax
xor esi,esi
lea edx,[ebp-0x14]
mov ecx,0x4
mov eax,[ebp-0x4]
mov ebx,[eax]
call dword [ebx+0xc]
mov eax,[ebp-0x14]
cmp eax,[dword 0x4686d0]
jz dword 0x4b8f4
mov ecx,[ebp-0xc]
mov dl,0x1
mov eax,[0x43d94c]
call dword 0x4a490
mov ebx,eax
lea edx,[ebx+0x10]
mov ecx,0x1
mov eax,[ebp-0x4]
mov edi,[eax]
call dword [edi+0xc]
lea edx,[ebx+0x20]
mov ecx,0x4
mov eax,[ebp-0x4]
mov edi,[eax]
call dword [edi+0xc]
mov eax,[ebp-0xc]
cmp byte [eax+0x74],0x0
jz 0x4b827
movzx edx,byte [ebx+0x10]
mov eax,[ebp-0xc]
mov ecx,[eax]
call dword [ecx+0x28]
mov ecx,eax
mov edx,[ebx+0x20]
mov eax,[ebp-0xc]
call dword 0x4d008
mov [ebx+0x20],eax
push ebp
lea eax,[ebp-0x8]
call dword 0x4b5cc
pop ecx
cmp dword [ebp-0x8],byte +0x0
jz 0x4b851
mov edx,[ebp-0x8]
mov eax,ebx
call dword 0x4a7dc
test al,al
jnz 0x4b851
mov eax,ebx
call dword 0x2bf0
jmp dword 0x4b7b2
cmp dword [ebp-0x14],byte +0x0
jnz 0x4b862
mov eax,[ebp-0xc]
mov [eax+0x64],ebx
jmp dword 0x4b8e7
mov eax,[ebp-0x14]
cmp eax,[ebp-0x18]
jnz 0x4b892
cmp dword [esi+0x18],byte +0x0
jz 0x4b884
cmp dword [esi+0x4],byte +0x0
jnz 0x4b884
mov [ebp-0x2c],esi
mov esi,[esi+0x18]
mov eax,[ebp-0x2c]
call dword 0x2bf0
mov [esi+0xc],ebx
mov [ebx+0x18],esi
mov eax,[esi+0x14]
mov [ebx+0x14],eax
jmp short 0x4b8e7
mov eax,[ebp-0x14]
cmp eax,[ebp-0x18]
jng 0x4b8a2
mov [esi+0x8],ebx
mov [ebx+0x14],esi
jmp short 0x4b8e7
mov eax,[ebp-0x14]
cmp eax,[ebp-0x18]
jnl 0x4b8e7
mov [ebp-0x24],esi
mov eax,[ebp-0x18]
sub eax,[ebp-0x14]
test eax,eax
jng 0x4b8d2
mov [ebp-0x30],eax
mov dword [ebp-0x1c],0x1
mov eax,[ebp-0x24]
mov eax,[eax+0x14]
mov [ebp-0x24],eax
inc dword [ebp-0x1c]
dec dword [ebp-0x30]
jnz 0x4b8c1
mov eax,[ebp-0x24]
mov [eax+0xc],ebx
mov eax,[ebp-0x24]
mov [ebx+0x18],eax
mov eax,[ebp-0x24]
mov eax,[eax+0x14]
mov [ebx+0x14],eax
mov eax,[ebp-0x14]
mov [ebp-0x18],eax
mov esi,ebx
jmp dword 0x4b7b2
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x44c939
mov eax,[ebp-0xc]
movzx edx,byte [ebp-0x25]
mov [eax+0x74],dl
mov eax,[ebp-0xc]
cmp dword [eax+0x64],byte +0x0
jnz 0x4b929
mov ecx,[ebp-0xc]
mov dl,0x1
mov eax,[0x43d94c]
call dword 0x4a490
mov edx,[ebp-0xc]
mov [edx+0x64],eax
mov eax,[ebp-0xc]
call dword 0x4acf4
ret
jmp dword 0x3384
jmp short 0x4b901
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x44c95e
lea eax,[ebp-0x44]
call dword 0x3a1c
lea eax,[ebp-0x8]
call dword 0x3a1c
ret
jmp dword 0x3384
jmp short 0x4b946
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret
lea eax,[eax+0x0]
push ebp
mov ebp,esp
add esp,byte -0x1c
push ebx
push esi
push edi
mov esi,edx
mov ebx,eax
mov eax,[ebp+0x8]
mov eax,[eax-0x4]
mov edi,[eax+0x18]
mov eax,edi
add eax,esi
sub eax,byte +0x2
push eax
lea eax,[ebp-0x1c]
push eax
mov eax,[ebp+0x8]
mov ecx,edi
add ecx,ebx
sub ecx,byte +0x2
mov edx,esi
mov eax,ebx
call dword 0x12a2c
call dword 0x4e314
call dword 0x4e41c
test al,al
jz 0x4b9dc
call dword 0x4e314
lea ecx,[ebp-0xc]
mov dl,0x34
call dword 0x4e65c
lea eax,[ebp-0x1c]
push eax
push byte +0x0
mov eax,[ebp+0x8]
mov eax,[eax-0x8]
call dword 0x20b30
push eax
call dword 0x4e314
lea ecx,[ebp-0xc]
pop edx
call dword 0x4e4d8
jmp short 0x4b9f5
push byte +0x0
push byte +0x1
lea eax,[ebp-0x1c]
push eax
mov eax,[ebp+0x8]
mov eax,[eax-0x8]
call dword 0x20b30
push eax
call dword 0x5f20
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret
push ebp
mov ebp,esp
push ebx
push esi
push edi
mov esi,ecx
mov ebx,edx
mov edi,eax
mov eax,[ebp+0xc]
mov eax,[eax-0x8]
mov eax,[eax+0x10]
mov edx,0xff000014
call dword 0x20174
mov eax,[ebp+0xc]
mov eax,[eax-0x8]
mov ecx,ebx
mov edx,esi
call dword 0x20894
mov eax,[ebp+0xc]
mov eax,[eax-0x8]
mov ecx,ebx
mov edx,edi
call dword 0x20834
mov eax,[ebp+0xc]
mov eax,[eax-0x8]
mov ecx,[ebp+0x8]
mov edx,edi
call dword 0x20834
mov eax,[ebp+0xc]
mov eax,[eax-0x8]
mov eax,[eax+0x10]
mov edx,0xff000010
call dword 0x20174
mov eax,[ebp+0xc]
mov eax,[eax-0x8]
mov ecx,[ebp+0x8]
mov edx,esi
call dword 0x20834
mov ecx,ebx
dec ecx
mov eax,[ebp+0xc]
mov eax,[eax-0x8]
mov edx,esi
call dword 0x20834
pop edi
pop esi
pop ebx
pop ebp
ret 0x4
nop
push ebp
mov ebp,esp
add esp,byte -0x1c
push ebx
push esi
push edi
mov edi,ecx
mov esi,edx
mov ebx,eax
mov eax,[ebp+0x8]
push eax
lea eax,[ebp-0x1c]
push eax
mov ecx,[ebp+0xc]
mov edx,edi
mov eax,esi
call dword 0x12a2c
call dword 0x4e314
lea ecx,[ebp-0xc]
mov edx,ebx
call dword 0x4e5c0
lea eax,[ebp-0x1c]
push eax
push byte +0x0
mov eax,[ebp+0x10]
mov eax,[eax-0x8]
call dword 0x20b30
push eax
call dword 0x4e314
lea ecx,[ebp-0xc]
pop edx
call dword 0x4e4d8
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret 0x8
nop
push ebp
mov ebp,esp
add esp,byte -0x8
push ebx
mov [ebp-0x8],edx
mov [ebp-0x4],eax
mov ebx,[ebp+0x8]
mov eax,[ebp-0x4]
mov eax,[eax+0x14]
movzx eax,byte [eax+0x5b]
dec eax
sub al,0x2
jnc dword 0x4bb92
push ebp
mov edx,[ebx+0x4]
inc edx
mov eax,[ebx]
inc eax
call dword 0x4b968
pop ecx
call dword 0x4e314
call dword 0x4e41c
test al,al
jz 0x4bb49
push ebp
mov eax,[ebx]
mov edx,eax
add edx,byte +0xa
push edx
mov edx,[ebx+0xc]
sub edx,byte +0x2
push edx
mov ecx,[ebx+0x4]
mov edx,[ebp-0x4]
add ecx,[edx+0x18]
inc ecx
mov edx,eax
inc edx
mov al,0x3
call dword 0x4ba84
pop ecx
jmp dword 0x4bc2a
push ebp
mov edx,[ebx+0xc]
sub edx,byte +0x2
push edx
mov edx,[ebx+0x4]
mov ecx,[ebp-0x4]
add edx,[ecx+0x18]
inc edx
mov eax,[ebx]
mov ecx,eax
add ecx,byte +0x5
add eax,byte +0x3
call dword 0x4b9fc
pop ecx
push ebp
mov edx,[ebx+0xc]
sub edx,byte +0x2
push edx
mov edx,[ebx+0x4]
mov ecx,[ebp-0x4]
add edx,[ecx+0x18]
inc edx
mov eax,[ebx]
mov ecx,eax
add ecx,byte +0x8
add eax,byte +0x6
call dword 0x4b9fc
pop ecx
jmp dword 0x4bc2a
push ebp
mov eax,[ebx+0x8]
mov edx,[ebp-0x4]
sub eax,[edx+0x18]
inc eax
mov edx,[ebx+0x4]
inc edx
call dword 0x4b968
pop ecx
call dword 0x4e314
call dword 0x4e41c
test al,al
jz 0x4bbde
push ebp
mov edx,[ebx+0x8]
mov ecx,[ebp-0x4]
sub edx,[ecx+0x18]
sub edx,byte +0x2
push edx
mov eax,[ebx+0x4]
mov edx,eax
add edx,byte +0xa
push edx
mov ecx,eax
inc ecx
mov edx,[ebx]
add edx,byte +0x2
mov al,0x2
call dword 0x4ba84
pop ecx
jmp short 0x4bc2a
push ebp
mov eax,[ebx+0x4]
mov edx,eax
add edx,byte +0x5
push edx
mov ecx,[ebx+0x8]
mov edx,[ebp-0x4]
sub ecx,[edx+0x18]
sub ecx,byte +0x2
mov edx,eax
add edx,byte +0x3
mov eax,[ebx]
add eax,byte +0x2
call dword 0x4b9fc
pop ecx
push ebp
mov eax,[ebx+0x4]
mov edx,eax
add edx,byte +0x8
push edx
mov ecx,[ebx+0x8]
mov edx,[ebp-0x4]
sub ecx,[edx+0x18]
sub ecx,byte +0x2
mov edx,eax
add edx,byte +0x6
mov eax,[ebx]
add eax,byte +0x2
call dword 0x4b9fc
pop ecx
pop ebx
pop ecx
pop ecx
pop ebp
ret 0x4
lea eax,[eax+0x0]
push ebp
mov ebp,esp
add esp,byte -0x1c
push ebx
push esi
push edi
mov ebx,edx
mov esi,eax
mov dl,0x1
mov eax,[0x43b844]
call dword 0x205a4
mov [ebp-0x4],eax
xor eax,eax
push ebp
push dword 0x44cd58
push dword [fs:eax]
mov [fs:eax],esp
mov edx,[esi+0x14]
mov eax,[ebp-0x4]
call dword 0x3eb34
mov eax,[ebp-0x4]
call dword 0x2086c
xor eax,eax
push ebp
push dword 0x44cd3b
push dword [fs:eax]
mov [fs:eax],esp
mov edx,ebx
mov eax,[ebp-0x4]
call dword 0x20bb8
xor eax,eax
push ebp
push dword 0x44cd1e
push dword [fs:eax]
mov [fs:eax],esp
mov eax,[esi+0x14]
call dword 0x442b4
dec eax
test eax,eax
jl 0x4bd06
inc eax
mov [ebp-0xc],eax
mov dword [ebp-0x8],0x0
mov eax,[esi+0x14]
mov edx,[ebp-0x8]
call dword 0x44278
mov ebx,eax
cmp byte [ebx+0x57],0x0
jz 0x4bcfe
mov eax,[ebx+0x94]
cmp eax,[esi+0x14]
jnz 0x4bcfe
lea edx,[ebp-0x1c]
mov eax,ebx
call dword 0x3fba8
lea ecx,[ebp-0x1c]
mov edx,ebx
mov eax,esi
mov edi,[eax]
call dword [edi]
lea ecx,[ebp-0x1c]
mov edx,ebx
mov eax,esi
mov edi,[eax]
call dword [edi+0x4]
lea eax,[ebp-0x1c]
push eax
mov ecx,ebx
mov edx,[ebp-0x4]
mov eax,esi
mov ebx,[eax]
call dword [ebx+0x20]
inc dword [ebp-0x8]
dec dword [ebp-0xc]
jnz 0x4bcaf
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x44cd25
xor edx,edx
mov eax,[ebp-0x4]
call dword 0x20bb8
ret
jmp dword 0x3384
jmp short 0x4bd13
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x44cd42
mov eax,[ebp-0x4]
call dword 0x20a24
ret
jmp dword 0x3384
jmp short 0x4bd32
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x44cd5f
mov eax,[ebp-0x4]
call dword 0x2bf0
ret
jmp dword 0x3384
jmp short 0x4bd4f
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret
mov eax,eax
push ebp
mov ebp,esp
add esp,byte -0x1c
push ebx
push esi
push edi
mov ebx,ecx
mov esi,eax
mov eax,[esi+0x14]
call dword 0x46d64
mov edi,eax
test ebx,ebx
jz 0x4bd95
cmp byte [ebx+0x90],0x0
jz 0x4bd95
cmp edi,byte +0x2
jnl dword 0x4be44
mov eax,[esi+0x14]
call dword 0x3fc48
push eax
lea eax,[ebp-0x1c]
push eax
mov eax,[esi+0x14]
call dword 0x3fc04
mov ecx,eax
xor edx,edx
xor eax,eax
call dword 0x12a2c
mov eax,[ebp+0x8]
push esi
push edi
lea esi,[ebp-0x1c]
mov edi,eax
movsd
movsd
movsd
movsd
pop edi
pop esi
test edi,edi
jng dword 0x4bec2
movzx eax,byte [ebp+0xc]
dec al
jz 0x4be16
dec al
jz 0x4be2f
dec al
jz 0x4bde6
dec al
jz 0x4bdff
jmp dword 0x4bec2
mov eax,[ebp+0x8]
mov ecx,0x2
add eax,byte +0x8
push eax
mov eax,[eax]
cdq
idiv ecx
pop edx
mov [edx],eax
jmp dword 0x4bec2
mov eax,[ebp+0x8]
mov eax,[eax+0x8]
sar eax,1
jns 0x4be0c
adc eax,byte +0x0
mov edx,[ebp+0x8]
mov [edx],eax
jmp dword 0x4bec2
mov eax,[ebp+0x8]
mov ecx,0x2
add eax,byte +0xc
push eax
mov eax,[eax]
cdq
idiv ecx
pop edx
mov [edx],eax
jmp dword 0x4bec2
mov eax,[ebp+0x8]
mov eax,[eax+0xc]
sar eax,1
jns 0x4be3c
adc eax,byte +0x0
mov edx,[ebp+0x8]
mov [edx+0x4],eax
jmp short 0x4bec2
mov eax,[ebx+0x40]
mov [ebp-0x4],eax
mov eax,[ebx+0x44]
mov [ebp-0x8],eax
mov eax,[ebx+0x48]
mov edi,eax
mov edx,[ebx+0x4c]
mov [ebp-0xc],edx
movzx edx,byte [ebp+0xc]
add dl,0xfd
sub dl,0x2
jnc 0x4be72
mov edi,eax
sar edi,1
jns 0x4be88
adc edi,byte +0x0
jmp short 0x4be88
movzx eax,byte [ebp+0xc]
dec eax
sub al,0x2
jnc 0x4be88
mov eax,[ebx+0x4c]
sar eax,1
jns 0x4be85
adc eax,byte +0x0
mov [ebp-0xc],eax
movzx eax,byte [ebp+0xc]
sub al,0x2
jz 0x4be99
sub al,0x2
jnz 0x4be9f
add [ebp-0x4],edi
jmp short 0x4be9f
mov eax,[ebp-0xc]
add [ebp-0x8],eax
mov eax,[ebp-0xc]
push eax
lea eax,[ebp-0x1c]
push eax
mov ecx,edi
mov edx,[ebp-0x8]
mov eax,[ebp-0x4]
call dword 0x12a54
mov eax,[ebp+0x8]
push esi
lea esi,[ebp-0x1c]
mov edi,eax
movsd
movsd
movsd
movsd
pop esi
push byte +0x2
mov eax,[ebp+0x8]
push eax
push byte +0x0
mov eax,[esi+0x14]
call dword 0x4831c
push eax
call dword 0x61e0
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret 0x8
lea eax,[eax+0x0]
push ebp
mov ebp,esp
push ebx
mov ebx,eax
mov eax,[ebx+0xc]
test eax,eax
jz 0x4befb
mov edx,[ebp+0x8]
push edx
call dword 0x4bee4
pop ecx
mov eax,[ebx+0x8]
test eax,eax
jz 0x4bf0c
mov edx,[ebp+0x8]
push edx
call dword 0x4bee4
pop ecx
mov eax,ebx
call dword 0x2bf0
pop ebx
pop ebp
ret
mov eax,eax
push ebp
mov ebp,esp
push ebx
push esi
mov ebx,edx
mov esi,eax
test ebx,ebx
jz 0x4bf6d
mov eax,[ebx+0x8]
test eax,eax
jz 0x4bf33
push ebp
call dword 0x4bee4
pop ecx
mov eax,[ebx+0x18]
test eax,eax
jz 0x4bf42
mov edx,[ebx+0xc]
mov [eax+0xc],edx
jmp short 0x4bf4f
mov eax,[ebx+0x14]
test eax,eax
jz 0x4bf4f
mov edx,[ebx+0xc]
mov [eax+0x8],edx
mov eax,[ebx+0xc]
test eax,eax
jz 0x4bf5c
mov edx,[ebx+0x18]
mov [eax+0x18],edx
cmp ebx,[esi+0x64]
jnz 0x4bf66
xor eax,eax
mov [esi+0x64],eax
mov eax,ebx
call dword 0x2bf0
pop esi
pop ebx
pop ebp
ret
lea eax,[eax+0x0]
push ebx
push esi
mov esi,edx
mov ebx,eax
mov edx,esi
mov eax,ebx
call dword 0x4ad60
test eax,eax
jz 0x4bfae
cmp eax,[ebx+0x38]
jnz 0x4bf93
xor edx,edx
mov [eax+0x4],edx
jmp short 0x4bf9c
mov edx,eax
mov eax,ebx
call dword 0x4bfb4
mov byte [esi+0x90],0x0
mov eax,[ebx+0x14]
mov edx,[eax]
call dword [edx+0x80]
pop esi
pop ebx
ret
lea eax,[eax+0x0]
push ebp
mov ebp,esp
xor ecx,ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov ebx,edx
mov esi,eax
xor eax,eax
push ebp
push dword 0x44d245
push dword [fs:eax]
mov [fs:eax],esp
test ebx,ebx
jnz 0x4c011
lea edx,[ebp-0x4]
mov eax,[0x468bf4]
call dword 0x5750
lea eax,[ebp-0x4]
push eax
lea edx,[ebp-0x8]
mov eax,[0x468b0c]
call dword 0x5750
mov edx,[ebp-0x8]
pop eax
call dword 0x3ce8
mov ecx,[ebp-0x4]
mov dl,0x1
mov eax,[0x407858]
call dword 0xb450
call dword 0x3464
cmp dword [ebx+0x4],byte +0x0
jnz 0x4c052
lea edx,[ebp-0xc]
mov eax,[0x468bf4]
call dword 0x5750
lea eax,[ebp-0xc]
push eax
lea edx,[ebp-0x10]
mov eax,[0x468d90]
call dword 0x5750
mov edx,[ebp-0x10]
pop eax
call dword 0x3ce8
mov ecx,[ebp-0xc]
mov dl,0x1
mov eax,[0x407858]
call dword 0xb450
call dword 0x3464
mov eax,[ebx+0x14]
call dword 0x4a4b4
cmp eax,byte +0x1
jnz 0x4c070
mov eax,[esi+0x64]
xor edx,edx
mov [eax+0x8],edx
mov byte [eax+0x10],0x0
jmp dword 0x4c223
cmp eax,byte +0x2
jnz dword 0x4c1cb
mov eax,[ebx+0x18]
test eax,eax
jnz 0x4c085
mov edi,[ebx+0xc]
jmp short 0x4c087
mov edi,eax
cmp dword [edi+0x4],byte +0x0
jz 0x4c0ec
mov edx,[esi+0x64]
mov eax,[ebx+0x14]
cmp edx,eax
jnz 0x4c0c1
mov eax,[esi+0x64]
mov [eax+0x8],edi
xor eax,eax
mov [edi+0x18],eax
xor eax,eax
mov [edi+0xc],eax
mov eax,[esi+0x64]
call dword 0x4a56c
mov edx,eax
mov eax,edi
call dword 0x4aa34
mov eax,edi
call dword 0x4a890
jmp short 0x4c0d7
mov byte [eax+0x10],0x0
mov edx,[edi+0x4]
mov [eax+0x4],edx
xor edx,edx
mov [eax+0x8],edx
mov eax,edi
call dword 0x2bf0
push esi
push dword 0x44d8c4
mov edx,[ebx+0x14]
mov eax,esi
call dword 0x4adc8
jmp dword 0x4c223
mov eax,[ebx+0x14]
cmp eax,[esi+0x64]
jnz 0x4c12f
mov edx,[esi+0x68]
mov eax,edi
call dword 0x4aa48
mov eax,[esi+0x64]
call dword 0x4aa0c
mov [esi+0x68],eax
mov eax,[esi+0x64]
call dword 0x2bf0
mov [esi+0x64],edi
xor eax,eax
mov [edi+0xc],eax
xor eax,eax
mov [edi+0x18],eax
xor eax,eax
mov [edi+0x14],eax
mov eax,esi
call dword 0x4c89c
jmp dword 0x4c223
mov eax,[edi+0x8]
test eax,eax
jz dword 0x4c1ba
mov edx,[ebx+0x14]
mov edx,[edx+0x18]
mov [eax+0x18],edx
mov edx,[edi+0x8]
cmp dword [edx+0x18],byte +0x0
jnz 0x4c157
mov edx,[ebx+0x14]
mov edx,[edx+0x14]
mov [edx+0x8],eax
jmp short 0x4c160
mov edx,[edi+0x8]
mov edx,[edx+0x18]
mov [edx+0xc],eax
mov eax,[edi+0x8]
mov edx,[ebx+0x14]
mov edx,[edx+0x14]
mov [eax+0x14],edx
cmp dword [eax+0xc],byte +0x0
jz 0x4c184
mov eax,[eax+0xc]
mov edx,[ebx+0x14]
mov edx,[edx+0x14]
mov [eax+0x14],edx
cmp dword [eax+0xc],byte +0x0
jnz 0x4c172
mov edx,[ebx+0x14]
mov edx,[edx+0xc]
mov [eax+0xc],edx
cmp dword [eax+0xc],byte +0x0
jz 0x4c199
mov edx,[eax+0xc]
mov [edx+0x18],eax
push esi
push dword 0x44d8c4
mov edx,[eax+0x14]
mov eax,esi
call dword 0x4adc8
mov eax,[ebx+0x14]
call dword 0x2bf0
mov eax,edi
call dword 0x2bf0
jmp short 0x4c223
mov eax,[edi+0x14]
xor edx,edx
mov [eax+0x8],edx
mov eax,edi
call dword 0x2bf0
jmp short 0x4c223
mov eax,[ebx+0x18]
test eax,eax
jnz 0x4c1ea
mov eax,[ebx+0x14]
mov edx,[ebx+0xc]
mov [eax+0x8],edx
mov eax,[ebx+0xc]
xor edx,edx
mov [eax+0x18],edx
call dword 0x4a890
jmp short 0x4c213
mov edx,[ebx+0xc]
mov [eax+0xc],edx
mov edx,[ebx+0xc]
test edx,edx
jz 0x4c1fa
mov [edx+0x18],eax
mov eax,ebx
call dword 0x4aa0c
mov edx,eax
mov eax,[ebx+0x18]
call dword 0x4aa48
mov eax,[ebx+0x18]
call dword 0x4a890
push esi
push dword 0x44d8c4
mov edx,[ebx+0x14]
mov eax,esi
call dword 0x4adc8
mov eax,ebx
call dword 0x2bf0
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x44d24c
lea eax,[ebp-0x10]
mov edx,0x4
call dword 0x3a40
ret
jmp dword 0x3384
jmp short 0x4c237
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret
nop
push ebx
push esi
push edi
add esp,byte -0x10
mov ebx,edx
mov edi,eax
mov esi,[edi+0x14]
test byte [esi+0x1c],0x1
jnz dword 0x4c334
cmp dword [edi+0x64],byte +0x0
jz dword 0x4c334
mov eax,esi
call dword 0x46d64
test eax,eax
jng dword 0x4c334
cmp dword [edi+0x38],byte +0x0
jnz dword 0x4c334
mov edx,esp
mov eax,[edi+0x14]
mov ecx,[eax]
call dword [ecx+0x44]
mov edx,esp
mov eax,[edi+0x14]
mov ecx,[eax]
call dword [ecx+0x90]
test bl,bl
jnz 0x4c2bc
lea edx,[edi+0x1d]
mov eax,esp
mov ecx,0x10
call dword 0x76f0
test al,al
jnz 0x4c334
push edi
lea esi,[esp+0x4]
add edi,byte +0x1d
movsd
movsd
movsd
movsd
pop edi
mov eax,[edi+0x64]
movzx edx,byte [eax+0x10]
dec dl
jz 0x4c2da
dec dl
jz 0x4c2f3
jmp short 0x4c30a
mov edx,[esp+0x8]
sub edx,[esp]
call dword 0x4aa34
mov eax,[esp+0xc]
sub eax,[esp+0x4]
mov [edi+0x68],eax
jmp short 0x4c30a
mov edx,[esp+0xc]
sub edx,[esp+0x4]
call dword 0x4aa34
mov eax,[esp+0x8]
sub eax,[esp]
mov [edi+0x68],eax
mov eax,[edi+0x14]
call dword 0x46cd0
test eax,eax
jng 0x4c334
xor edx,edx
mov eax,edi
call dword 0x4c744
cmp dword [edi+0x6c],byte +0x0
jnz 0x4c334
push edi
push dword 0x44d8c4
xor edx,edx
mov eax,edi
call dword 0x4adc8
add esp,byte +0x10
pop edi
pop esi
pop ebx
ret
nop
push ebx
push esi
push ecx
mov ebx,edx
mov esi,eax
test ebx,ebx
jz 0x4c375
test ebx,ebx
jz 0x4c375
mov eax,[ebx+0x14]
movzx eax,byte [eax+0x10]
cmp al,[esi+0x48]
jnz 0x4c375
mov eax,ebx
call dword 0x4aa0c
mov [esp],eax
fild dword [esp]
fmul qword [esi+0x40]
call dword 0x2324
mov edx,eax
mov eax,ebx
call dword 0x4aa34
pop edx
pop esi
pop ebx
ret
lea eax,[eax+0x0]
push ebp
mov ebp,esp
add esp,byte -0x8
push ebx
mov [ebp-0x4],eax
mov eax,[ebp-0x4]
call dword 0x3e9c
xor eax,eax
push ebp
push dword 0x44d3eb
push dword [fs:eax]
mov [fs:eax],esp
mov eax,[ebp-0x4]
test eax,eax
jz 0x4c3a8
sub eax,byte +0x4
mov eax,[eax]
mov [ebp-0x8],eax
lea edx,[ebp-0x8]
mov eax,[ebp+0x8]
mov eax,[eax-0x4]
mov ecx,0x4
mov ebx,[eax]
call dword [ebx+0x10]
cmp dword [ebp-0x8],byte +0x0
jng 0x4c3d5
mov edx,[ebp-0x4]
mov eax,[ebp+0x8]
mov eax,[eax-0x4]
mov ecx,[ebp-0x8]
mov ebx,[eax]
call dword [ebx+0x10]
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x44d3f2
lea eax,[ebp-0x4]
call dword 0x3a1c
ret
jmp dword 0x3384
jmp short 0x4c3e2
pop ebx
pop ecx
pop ecx
pop ebp
ret
nop
push ebp
mov ebp,esp
add esp,byte -0xc
push ebx
push esi
xor ecx,ecx
mov [ebp-0xc],ecx
mov [ebp-0x4],edx
mov ebx,eax
xor eax,eax
push ebp
push dword 0x44d4f8
push dword [fs:eax]
mov [fs:eax],esp
mov eax,[ebp+0x8]
mov eax,[eax-0x8]
cmp ebx,[eax+0x64]
jz 0x4c433
cmp dword [ebx+0x8],byte +0x0
jnz 0x4c433
cmp dword [ebx+0x4],byte +0x0
jz dword 0x4c4b9
lea edx,[ebp-0x4]
mov eax,[ebp+0x8]
mov eax,[eax-0x4]
mov ecx,0x4
mov esi,[eax]
call dword [esi+0x10]
lea edx,[ebx+0x10]
mov eax,[ebp+0x8]
mov eax,[eax-0x4]
mov ecx,0x1
mov esi,[eax]
call dword [esi+0x10]
mov eax,[ebp+0x8]
mov eax,[eax-0x8]
cmp byte [eax+0x74],0x0
jz 0x4c489
mov eax,[ebp+0x8]
mov eax,[eax-0x8]
movzx edx,byte [ebx+0x10]
mov ecx,[eax]
call dword [ecx+0x28]
mov ecx,eax
mov eax,[ebp+0x8]
mov eax,[eax-0x8]
mov edx,[ebx+0x20]
call dword 0x4d038
mov [ebp-0x8],eax
jmp short 0x4c48f
mov eax,[ebx+0x20]
mov [ebp-0x8],eax
lea edx,[ebp-0x8]
mov eax,[ebp+0x8]
mov eax,[eax-0x4]
mov ecx,0x4
mov esi,[eax]
call dword [esi+0x10]
mov eax,[ebp+0x8]
push eax
lea edx,[ebp-0xc]
mov eax,ebx
call dword 0x4a798
mov eax,[ebp-0xc]
call dword 0x4c37c
pop ecx
mov eax,[ebx+0x8]
test eax,eax
jz 0x4c4ce
mov edx,[ebp+0x8]
push edx
mov edx,[ebp-0x4]
inc edx
call dword 0x4c3f8
pop ecx
mov eax,[ebx+0xc]
test eax,eax
jz 0x4c4e2
mov edx,[ebp+0x8]
push edx
mov edx,[ebp-0x4]
call dword 0x4c3f8
pop ecx
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x44d4ff
lea eax,[ebp-0xc]
call dword 0x3a1c
ret
jmp dword 0x3384
jmp short 0x4c4ef
pop esi
pop ebx
mov esp,ebp
pop ebp
ret
lea eax,[eax+0x0]
push ebp
mov ebp,esp
add esp,byte -0x18
push ebx
push esi
xor ecx,ecx
mov [ebp-0x18],ecx
mov [ebp-0x4],edx
mov [ebp-0x8],eax
xor eax,eax
push ebp
push dword 0x44d6af
push dword [fs:eax]
mov [fs:eax],esp
mov eax,[ebp-0x8]
lea edx,[eax+0x70]
mov ecx,0x4
mov eax,[ebp-0x4]
mov ebx,[eax]
call dword [ebx+0x10]
mov eax,[ebp-0x8]
lea edx,[eax+0x74]
mov ecx,0x1
mov eax,[ebp-0x4]
mov ebx,[eax]
call dword [ebx+0x10]
mov eax,[ebp-0x8]
mov eax,[eax+0x64]
lea edx,[eax+0x10]
mov ecx,0x1
mov eax,[ebp-0x4]
mov ebx,[eax]
call dword [ebx+0x10]
mov dl,0x1
mov eax,[0x412efc]
call dword 0x2bc0
mov [ebp-0x14],eax
xor eax,eax
push ebp
push dword 0x44d628
push dword [fs:eax]
mov [fs:eax],esp
mov eax,[ebp-0x8]
mov eax,[eax+0x14]
call dword 0x46cd0
mov ebx,eax
dec ebx
test ebx,ebx
jl 0x4c5c9
inc ebx
mov dword [ebp-0xc],0x0
mov eax,[ebp-0x8]
mov eax,[eax+0x14]
mov edx,[ebp-0xc]
call dword 0x46ce4
mov esi,eax
cmp byte [esi+0x57],0x0
jnz 0x4c5c3
cmp dword [esi+0x8],byte +0x0
jz 0x4c5c3
mov edx,[esi+0x8]
mov eax,[ebp-0x14]
mov ecx,[eax]
call dword [ecx+0x38]
inc dword [ebp-0xc]
dec ebx
jnz 0x4c59c
mov eax,[ebp-0x14]
mov edx,[eax]
call dword [edx+0x14]
mov [ebp-0x10],eax
lea edx,[ebp-0x10]
mov ecx,0x4
mov eax,[ebp-0x4]
mov ebx,[eax]
call dword [ebx+0x10]
mov ebx,[ebp-0x10]
dec ebx
test ebx,ebx
jl 0x4c612
inc ebx
mov dword [ebp-0xc],0x0
push ebp
lea ecx,[ebp-0x18]
mov edx,[ebp-0xc]
mov eax,[ebp-0x14]
mov esi,[eax]
call dword [esi+0xc]
mov eax,[ebp-0x18]
call dword 0x4c37c
pop ecx
inc dword [ebp-0xc]
dec ebx
jnz 0x4c5f4
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x44d62f
mov eax,[ebp-0x14]
call dword 0x2bf0
ret
jmp dword 0x3384
jmp short 0x4c61f
mov eax,[ebp-0x8]
cmp byte [eax+0x74],0x0
jz 0x4c65f
mov eax,[ebp-0x8]
mov eax,[eax+0x64]
movzx edx,byte [eax+0x10]
mov eax,[ebp-0x8]
mov ecx,[eax]
call dword [ecx+0x28]
mov ecx,eax
mov eax,[ebp-0x8]
mov edx,[eax+0x68]
mov eax,[ebp-0x8]
call dword 0x4d038
mov [ebp-0xc],eax
jmp short 0x4c668
mov eax,[ebp-0x8]
mov eax,[eax+0x68]
mov [ebp-0xc],eax
lea edx,[ebp-0xc]
mov ecx,0x4
mov eax,[ebp-0x4]
mov ebx,[eax]
call dword [ebx+0x10]
push ebp
mov eax,[ebp-0x8]
mov eax,[eax+0x64]
xor edx,edx
call dword 0x4c3f8
pop ecx
mov edx,0x4686d0
mov ecx,0x4
mov eax,[ebp-0x4]
mov ebx,[eax]
call dword [ebx+0x10]
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x44d6b6
lea eax,[ebp-0x18]
call dword 0x3a1c
ret
jmp dword 0x3384
jmp short 0x4c6a6
pop esi
pop ebx
mov esp,ebp
pop ebp
ret
push ebp
mov ebp,esp
push ebx
push esi
mov ebx,eax
test ebx,ebx
jz 0x4c73d
mov eax,ebx
call dword 0x4aae8
test eax,eax
jnz 0x4c71b
mov eax,[ebp+0x8]
mov eax,[eax-0x4]
cmp ebx,[eax+0x64]
jz 0x4c71b
mov eax,ebx
call dword 0x4a4ec
test al,al
jz 0x4c71b
mov eax,[ebp+0x8]
mov eax,[eax-0x4]
mov eax,[eax+0x64]
mov esi,[ebx+0x14]
cmp eax,esi
jnz 0x4c70a
mov eax,[ebp+0x8]
mov eax,[eax-0x4]
mov edx,[eax+0x68]
mov eax,ebx
call dword 0x4aa34
jmp short 0x4c71b
mov eax,[esi+0x14]
call dword 0x4aa0c
mov edx,eax
mov eax,ebx
call dword 0x4aa34
mov eax,[ebp+0x8]
push eax
mov eax,ebx
call dword 0x4ab10
call dword 0x4c6bc
pop ecx
mov eax,[ebp+0x8]
push eax
mov eax,ebx
call dword 0x4aae8
call dword 0x4c6bc
pop ecx
pop esi
pop ebx
pop ebp
ret
lea eax,[eax+0x0]
push ebp
mov ebp,esp
push ecx
mov [ebp-0x4],eax
test edx,edx
jnz 0x4c758
mov eax,[ebp-0x4]
mov eax,[eax+0x64]
mov edx,[eax+0x8]
push ebp
mov eax,edx
call dword 0x4c6bc
pop ecx
mov eax,[ebp-0x4]
mov eax,[eax+0x14]
mov edx,[eax]
call dword [edx+0x80]
pop ecx
pop ebp
ret
mov eax,eax
push ebx
push esi
mov esi,edx
mov ebx,eax
mov edx,esi
mov eax,ebx
call dword 0x4ad60
mov [ebx+0x38],eax
pop esi
pop ebx
ret
lea eax,[eax+0x0]
push ebx
push esi
mov ebx,edx
mov esi,eax
test ebx,ebx
jz 0x4c7ba
cmp ebx,[esi+0x64]
jz 0x4c7ba
mov eax,[ebx+0x14]
movzx eax,byte [eax+0x10]
cmp al,[esi+0x48]
jnz 0x4c7ba
mov eax,ebx
call dword 0x4aa0c
mov edx,eax
add edx,[esi+0x4c]
mov eax,ebx
call dword 0x4aa34
pop esi
pop ebx
ret
lea eax,[eax+0x0]
push ebx
push esi
push edi
add esp,byte -0x8
mov esi,ecx
lea edi,[esp]
movsd
movsd
mov ebx,eax
mov [ebx+0x60],edx
mov eax,[ebx+0x14]
call dword 0x4831c
mov edx,eax
mov eax,[0x46dbfc]
call dword 0x4d5f0
mov eax,[ebx+0x14]
call dword 0x4831c
mov esi,eax
mov [ebx+0x5c],esi
push dword 0x412
push byte +0x0
push esi
call dword 0x5fe8
mov [ebx+0x58],eax
mov eax,[esp]
mov [ebx+0x50],eax
mov eax,[esp+0x4]
mov [ebx+0x54],eax
mov eax,ebx
call dword 0x4c8e8
pop ecx
pop edx
pop edi
pop esi
pop ebx
ret
lea eax,[eax+0x0]
push ebx
mov ebx,eax
xor edx,edx
mov eax,[0x46dbfc]
call dword 0x4d5f0
mov eax,ebx
call dword 0x4c8e8
mov eax,[ebx+0x58]
push eax
mov eax,[ebx+0x5c]
push eax
call dword 0x6250
mov eax,[ebx+0x60]
mov edx,[eax+0x14]
cmp byte [edx+0x10],0x1
jnz 0x4c863
mov edx,[ebx+0xc]
sar edx,1
jns 0x4c859
adc edx,byte +0x0
add edx,[ebx+0x54]
call dword 0x4aa34
jmp short 0x4c875
mov edx,[ebx+0xc]
sar edx,1
jns 0x4c86d
adc edx,byte +0x0
add edx,[ebx+0x50]
call dword 0x4aa34
mov eax,[ebx+0x60]
mov edx,[eax+0x14]
mov eax,ebx
call dword 0x4c744
push ebx
push dword 0x44d8c4
mov eax,[ebx+0x60]
mov edx,[eax+0x14]
mov eax,ebx
call dword 0x4adc8
xor eax,eax
mov [ebx+0x60],eax
pop ebx
ret
push ebx
mov ebx,eax
cmp dword [ebx+0x6c],byte +0x0
jnz 0x4c8c0
mov eax,[ebx+0x14]
call dword 0x46cd0
test eax,eax
jng 0x4c8c0
push ebx
push dword 0x44d8c4
xor edx,edx
mov eax,ebx
call dword 0x4adc8
pop ebx
ret
mov eax,eax
cmp dword [eax+0x6c],byte +0x0
jnz 0x4c8d1
mov eax,edx
call dword 0x4a890
ret
mov eax,eax
push esi
push edi
mov edi,edx
mov esi,eax
mov edx,edi
mov eax,esi
mov ecx,[eax]
call dword [ecx+0x3c]
pop edi
pop esi
ret
mov eax,eax
push ebx
push esi
add esp,byte -0x10
mov ebx,eax
mov esi,[ebx+0x60]
test esi,esi
jz dword 0x4c9cb
mov eax,[esi+0x14]
cmp byte [eax+0x10],0x1
jnz 0x4c946
mov edx,0x2
mov eax,esi
call dword 0x4a5b4
mov [esp],eax
mov eax,[ebx+0xc]
sar eax,1
jns 0x4c91c
adc eax,byte +0x0
mov edx,[ebx+0x54]
sub edx,eax
mov [esp+0x4],edx
mov edx,0x2
mov eax,[ebx+0x60]
call dword 0x4a638
add eax,[esp]
mov [esp+0x8],eax
mov eax,[esp+0x4]
add eax,[ebx+0xc]
mov [esp+0xc],eax
jmp short 0x4c987
mov eax,[ebx+0xc]
sar eax,1
jns 0x4c950
adc eax,byte +0x0
mov edx,[ebx+0x50]
sub edx,eax
mov [esp],edx
mov edx,0x1
mov eax,esi
call dword 0x4a5b4
mov [esp+0x4],eax
mov eax,[esp]
add eax,[ebx+0xc]
mov [esp+0x8],eax
mov edx,0x1
mov eax,[ebx+0x60]
call dword 0x4a638
add eax,[esp+0x4]
mov [esp+0xc],eax
mov eax,[ebx+0x10]
call dword 0x20488
push eax
mov eax,[ebx+0x58]
push eax
call dword 0x5dd0
mov esi,eax
push dword 0x5a0049
mov ecx,[esp+0x10]
mov edx,[esp+0x8]
sub ecx,edx
push ecx
mov ecx,[esp+0x10]
mov eax,[esp+0x8]
sub ecx,eax
push ecx
push edx
push eax
mov eax,[ebx+0x58]
push eax
call dword 0x5d98
push esi
mov eax,[ebx+0x58]
push eax
call dword 0x5dd0
add esp,byte +0x10
pop esi
pop ebx
ret
lea eax,[eax+0x0]
push ebp
mov ebp,esp
push ebx
push esi
push edi
mov ebx,eax
mov eax,[ebp+0x8]
cmp ebx,[eax-0x4]
jz 0x4ca3d
mov eax,[ebx+0x14]
movzx eax,byte [eax+0x10]
mov edx,[ebp+0x8]
mov edx,[edx-0x4]
mov edx,[edx+0x14]
cmp al,[edx+0x10]
jnz 0x4ca3d
mov eax,ebx
call dword 0x4aa0c
mov edi,eax
mov eax,[ebp+0x8]
mov eax,[eax-0x4]
call dword 0x4aa0c
cmp edi,eax
jng 0x4ca3d
cmp dword [ebx+0x4],byte +0x0
jz 0x4ca24
mov esi,[ebx+0x4]
test esi,esi
jz 0x4ca3d
cmp byte [esi+0x57],0x0
jz 0x4ca3d
mov eax,[ebp+0x8]
mov esi,[eax-0x8]
mov eax,ebx
call dword 0x4aa0c
cmp eax,esi
jng 0x4ca37
mov eax,esi
mov edx,[ebp+0x8]
mov [edx-0x8],eax
mov eax,[ebx+0xc]
test eax,eax
jz 0x4ca4e
mov edx,[ebp+0x8]
push edx
call dword 0x4c9d4
pop ecx
mov eax,[ebx+0x8]
test eax,eax
jz 0x4ca5f
mov edx,[ebp+0x8]
push edx
call dword 0x4c9d4
pop ecx
pop edi
pop esi
pop ebx
pop ebp
ret
push ebp
mov ebp,esp
add esp,byte -0x8
push ebx
push esi
mov [ebp-0x4],edx
mov ebx,eax
mov eax,[ebp-0x4]
mov esi,[eax+0xc]
test esi,esi
jz 0x4ca87
mov eax,esi
call dword 0x4aa0c
mov [ebp-0x8],eax
jmp short 0x4ca9e
mov eax,[ebp-0x4]
call dword 0x4aa0c
mov esi,eax
mov eax,[ebp-0x4]
call dword 0x4a56c
add esi,eax
mov [ebp-0x8],esi
push ebp
mov eax,[ebx+0x64]
mov eax,[eax+0x8]
call dword 0x4c9d4
pop ecx
mov eax,[ebp-0x8]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
ret
push ebp
mov ebp,esp
add esp,byte -0x20
push ebx
push esi
push edi
mov esi,edx
mov edi,eax
mov bl,0x4
test esi,esi
jz 0x4cb27
lea edx,[ebp-0x10]
mov eax,edi
call dword 0x3fba8
lea edx,[ebp-0x20]
mov eax,esi
call dword 0x3fba8
mov eax,[ebp-0xc]
cmp eax,[ebp-0x1c]
jg 0x4caf7
mov eax,[ebp-0x4]
cmp eax,[ebp-0x14]
jnl 0x4caf7
mov eax,[ebp-0x8]
cmp eax,[ebp-0x18]
jl 0x4caf7
mov bl,0x1
jmp short 0x4cb27
mov eax,[ebp-0x10]
cmp eax,[ebp-0x20]
jg 0x4cb13
mov eax,[ebp-0x8]
cmp eax,[ebp-0x18]
jnl 0x4cb13
mov eax,[ebp-0x4]
cmp eax,[ebp-0x14]
jl 0x4cb13
mov bl,0x3
jmp short 0x4cb27
mov eax,[ebp-0x1c]
add eax,[ebp-0x14]
sar eax,1
jns 0x4cb20
adc eax,byte +0x0
cmp eax,[ebp-0xc]
jg 0x4cb27
mov bl,0x2
mov eax,ebx
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret
push ebp
mov ebp,esp
push ebx
push esi
mov ebx,eax
mov eax,ebx
call dword 0x4a46c
test al,al
jz 0x4cb53
mov eax,ebx
call dword 0x4a524
mov edx,[ebx+0x20]
sub edx,eax
mov [ebx+0x24],edx
jmp short 0x4cb58
xor eax,eax
mov [ebx+0x24],eax
mov esi,[ebx+0x14]
test esi,esi
jz 0x4cb77
mov eax,esi
call dword 0x4a4ec
test al,al
jnz 0x4cb77
mov eax,[ebp+0x8]
push eax
mov eax,[ebx+0x14]
call dword 0x4cb30
pop ecx
mov eax,ebx
call dword 0x4aaf4
test eax,eax
jz 0x4cb91
mov eax,ebx
call dword 0x4aaf4
mov edx,[ebx+0x20]
call dword 0x4aa48
mov eax,[ebp+0x8]
mov eax,[eax-0x4]
push eax
push dword 0x44d8c4
mov eax,[ebp+0x8]
mov eax,[eax-0x4]
mov edx,[ebx+0x14]
call dword 0x4adc8
pop esi
pop ebx
pop ebp
ret
nop
push ebp
mov ebp,esp
push ecx
push ebx
push esi
push edi
mov edi,eax
mov esi,[edi+0x14]
test esi,esi
jz 0x4cbe2
mov eax,[ebp+0x8]
mov eax,[eax-0x4]
cmp esi,[eax+0x64]
jz 0x4cbe2
mov eax,esi
call dword 0x4a4c8
dec eax
jnz 0x4cbe2
mov eax,[ebp+0x8]
push eax
mov eax,[edi+0x14]
call dword 0x4cbb0
pop ecx
mov eax,[edi+0x14]
call dword 0x4a4c8
dec eax
jz 0x4cbf3
cmp dword [edi+0x24],byte +0x0
jnz 0x4cbfa
mov bl,0x1
jmp dword 0x4ccbc
xor ebx,ebx
mov eax,[ebp+0x8]
mov eax,[eax-0x4]
mov eax,[eax+0x18]
mov edx,[ebp+0x8]
mov edx,[edx-0x4]
add eax,[edx+0xc]
add eax,byte +0xe
mov [ebp-0x4],eax
mov eax,edi
call dword 0x4aaf4
test eax,eax
jz 0x4cc7a
mov eax,edi
call dword 0x4aaf4
mov esi,eax
mov eax,esi
call dword 0x4aa0c
push eax
mov eax,esi
call dword 0x4a524
pop edx
sub edx,eax
sub edx,[edi+0x24]
cmp edx,[ebp-0x4]
jnl 0x4cc46
mov bl,0x1
jmp short 0x4ccbc
mov eax,esi
call dword 0x4aa0c
mov edx,eax
sub edx,[edi+0x24]
mov eax,esi
call dword 0x4aa34
mov eax,esi
call dword 0x4aa0c
mov edx,eax
add edx,[edi+0x24]
mov eax,edi
call dword 0x4aa34
mov eax,edi
call dword 0x4aaf4
call dword 0x4aa88
jmp short 0x4ccbc
mov eax,edi
call dword 0x4aae8
test eax,eax
jz 0x4ccbc
mov eax,edi
call dword 0x4aae8
call dword 0x4aa0c
sub eax,[edi+0x24]
cmp eax,[ebp-0x4]
jnl 0x4cc9d
mov bl,0x1
jmp short 0x4ccbc
mov eax,edi
call dword 0x4a524
mov edx,eax
add edx,[edi+0x24]
mov eax,edi
call dword 0x4aa34
mov eax,edi
call dword 0x4aae8
call dword 0x4aa88
test bl,bl
jz 0x4ccc8
mov eax,[edi+0x14]
call dword 0x4a6f0
mov eax,[ebp+0x8]
mov eax,[eax-0x4]
push eax
push dword 0x44d8c4
mov eax,[ebp+0x8]
mov eax,[eax-0x4]
mov edx,[edi+0x14]
call dword 0x4adc8
pop edi
pop esi
pop ebx
pop ecx
pop ebp
ret
push ebp
mov ebp,esp
add esp,byte -0x10
push ebx
push esi
mov ebx,ecx
mov esi,edx
mov [ebp-0x4],eax
mov edx,esi
mov eax,[ebp-0x4]
call dword 0x4ad60
test eax,eax
jz 0x4cd29
test bl,bl
jz 0x4cd12
push ebp
call dword 0x4cbb0
pop ecx
jmp short 0x4cd19
push ebp
call dword 0x4cb30
pop ecx
mov eax,[ebp-0x4]
mov eax,[eax+0x14]
mov edx,[eax]
call dword [edx+0x80]
jmp short 0x4cd6a
test bl,bl
jz 0x4cd6a
lea ecx,[ebp-0x10]
mov edx,[esi+0x44]
mov eax,[esi+0x40]
call dword 0x12a04
lea edx,[ebp-0x10]
lea ecx,[ebp-0x8]
mov eax,[ebp-0x4]
call dword 0x4b544
test eax,eax
jz 0x4cd52
mov ebx,[eax+0x4]
jmp short 0x4cd54
xor ebx,ebx
push ebx
mov edx,ebx
mov eax,esi
call dword 0x4cab4
mov ecx,eax
mov edx,esi
mov eax,[ebp-0x4]
mov ebx,[eax]
call dword [ebx+0xc]
pop esi
pop ebx
mov esp,ebp
pop ebp
ret
push ebx
push esi
push edi
push ebp
add esp,byte -0x18
mov esi,edx
mov edi,eax
mov byte [esp+0xc],0x0
mov eax,[esi]
cmp eax,0x204
jg 0x4cdc4
jz dword 0x4ceb4
cmp eax,0x201
jg 0x4cdb1
jz dword 0x4ce8c
sub eax,byte +0x20
jz dword 0x4cf2c
sub eax,0x1e0
jz 0x4ce0b
jmp dword 0x4cfe3
sub eax,0x202
jz dword 0x4cedc
dec eax
jz 0x4ce30
jmp dword 0x4cfe3
sub eax,0x205
jz dword 0x4cf04
dec eax
jz dword 0x4ce5e
sub eax,0xae2a
jz dword 0x4cfbc
sub eax,byte +0x12
jnz dword 0x4cfe3
mov eax,[esi+0x8]
cmp dword [eax],0xb00b
jnz dword 0x4cfe3
mov ecx,[eax+0x4]
mov edx,[esi+0x4]
mov eax,edi
call dword 0x4cce8
jmp dword 0x4cfe3
movsx eax,word [esi+0xa]
push eax
lea eax,[esp+0x10]
push eax
movzx eax,word [esi+0x4]
call dword 0x53ca0
mov edx,eax
movsx ecx,word [esi+0x8]
mov eax,edi
mov ebx,[eax]
call dword [ebx+0x18]
jmp dword 0x4cfe3
movsx eax,word [esi+0x8]
push eax
movsx eax,word [esi+0xa]
push eax
lea eax,[esp+0x14]
push eax
movzx eax,word [esi+0x4]
call dword 0x53ca0
mov ecx,eax
or cl,[dword 0x44e004]
xor edx,edx
mov eax,edi
mov ebx,[eax]
call dword [ebx+0x14]
jmp dword 0x4cfe3
movsx eax,word [esi+0x8]
push eax
movsx eax,word [esi+0xa]
push eax
lea eax,[esp+0x14]
push eax
movzx eax,word [esi+0x4]
call dword 0x53ca0
mov ecx,eax
or cl,[dword 0x44e004]
mov dl,0x1
mov eax,edi
mov ebx,[eax]
call dword [ebx+0x14]
jmp dword 0x4cfe3
movsx eax,word [esi+0x8]
push eax
movsx eax,word [esi+0xa]
push eax
lea eax,[esp+0x14]
push eax
movzx eax,word [esi+0x4]
call dword 0x53ca0
mov ecx,eax
xor edx,edx
mov eax,edi
mov ebx,[eax]
call dword [ebx+0x14]
jmp dword 0x4cfe3
movsx eax,word [esi+0x8]
push eax
movsx eax,word [esi+0xa]
push eax
lea eax,[esp+0x14]
push eax
movzx eax,word [esi+0x4]
call dword 0x53ca0
mov ecx,eax
mov dl,0x1
mov eax,edi
mov ebx,[eax]
call dword [ebx+0x14]
jmp dword 0x4cfe3
movsx eax,word [esi+0x8]
push eax
movsx eax,word [esi+0xa]
push eax
lea eax,[esp+0x14]
push eax
movzx eax,word [esi+0x4]
call dword 0x53ca0
mov ecx,eax
xor edx,edx
mov eax,edi
mov ebx,[eax]
call dword [ebx+0x1c]
jmp dword 0x4cfe3
movsx eax,word [esi+0x8]
push eax
movsx eax,word [esi+0xa]
push eax
lea eax,[esp+0x14]
push eax
movzx eax,word [esi+0x4]
call dword 0x53ca0
mov ecx,eax
mov dl,0x1
mov eax,edi
mov ebx,[eax]
call dword [ebx+0x1c]
jmp dword 0x4cfe3
push esp
call dword 0x5fd8
lea ecx,[esp+0x10]
mov edx,esp
mov eax,[edi+0x14]
call dword 0x3fdc8
mov eax,[esp+0x10]
mov [esp],eax
mov eax,[esp+0x14]
mov [esp+0x4],eax
cmp word [esi+0x8],byte +0x1
jnz dword 0x4cfe3
mov eax,[edi+0x14]
call dword 0x4831c
cmp eax,[esi+0x4]
jnz 0x4cfe3
mov eax,[edi+0x14]
call dword 0x46d64
test eax,eax
jng 0x4cfe3
lea ecx,[esp+0x8]
mov edx,esp
mov eax,edi
call dword 0x4b544
mov ebx,eax
test ebx,ebx
jz 0x4cfe3
cmp dword [esp+0x8],byte +0x12
jnz 0x4cfe3
mov eax,[ebx+0x14]
movzx eax,byte [eax+0x10]
movsx edx,word [eax*2+0x4686d4]
mov eax,[0x468e8c]
mov eax,[eax]
call dword 0x5c4b8
push eax
call dword 0x62a8
mov dword [esi+0xc],0x1
mov byte [esp+0xc],0x1
jmp short 0x4cfe3
mov edx,esi
mov eax,[edi+0x34]
call dword [edi+0x30]
cmp dword [esi+0xc],byte +0x0
jnz 0x4cfde
mov ebp,[esi+0x8]
lea eax,[ebp+0x38]
push eax
lea ecx,[ebp+0x18]
lea edx,[ebp+0x28]
mov eax,edi
mov ebx,[eax]
call dword [ebx+0x34]
mov byte [esp+0xc],0x1
cmp byte [esp+0xc],0x0
jnz 0x4cff9
cmp word [edi+0x32],byte +0x0
jz 0x4cff9
mov edx,esi
mov eax,[edi+0x34]
call dword [edi+0x30]
add esp,byte +0x18
pop ebp
pop edi
pop esi
pop ebx
ret
add [eax],al
add [eax+0x0],al
add [eax],al
push ebx
push esi
add esp,byte -0x8
mov esi,ecx
mov ebx,edx
mov [esp],ebx
fild dword [esp]
fdiv dword [dword 0x44e034]
mov [esp+0x4],esi
fild dword [esp+0x4]
fmulp st1
call dword 0x2324
pop ecx
pop edx
pop esi
pop ebx
ret
add [eax],al
add [eax],al
inc eax
sbb al,0x46
push ebx
push esi
add esp,byte -0x8
mov ebx,ecx
mov esi,edx
test ebx,ebx
jz 0x4d062
mov [esp],esi
fild dword [esp]
mov [esp+0x4],ebx
fild dword [esp+0x4]
fdivp st1
fmul dword [dword 0x44e06c]
call dword 0x2324
jmp short 0x4d064
xor eax,eax
pop ecx
pop edx
pop esi
pop ebx
ret
add [eax],al
add [eax],al
inc eax
sbb al,0x46
cmp dl,0x1
jnz 0x4d087
mov eax,[0x468e8c]
mov eax,[eax]
call dword 0x5cf08
call dword 0x5bcf0
ret
mov eax,[0x468e8c]
mov eax,[eax]
call dword 0x5cf08
call dword 0x5bcbc
ret
lea eax,[eax+0x0]
push ebx
mov eax,[ecx]
sub eax,[edx+0x40]
add eax,eax
sub [ecx],eax
mov eax,[ecx+0x4]
sub eax,[edx+0x44]
add eax,eax
sub [ecx+0x4],eax
mov eax,[ecx+0x8]
sub eax,[ecx]
mov ebx,[edx+0x48]
sub ebx,eax
mov eax,ebx
add eax,eax
sub [ecx+0x8],eax
mov eax,[ecx+0xc]
sub eax,[ecx+0x4]
mov edx,[edx+0x4c]
sub edx,eax
mov eax,edx
add eax,eax
test eax,eax
jng 0x4d0d8
sub [ecx+0xc],eax
pop ebx
ret
mov eax,eax
push ebp
mov ebp,esp
add esp,byte -0x2c
push ebx
push esi
mov [ebp-0x1],cl
mov ebx,eax
test dl,dl
jnz dword 0x4d1f6
test byte [ebp-0x1],0x40
jz 0x4d148
lea ecx,[ebp-0x2c]
mov edx,[ebp+0xc]
mov eax,[ebp+0x10]
call dword 0x12a04
lea edx,[ebp-0x2c]
lea ecx,[ebp-0x8]
mov eax,ebx
call dword 0x4b544
mov esi,eax
test esi,esi
jz dword 0x4d1f6
cmp dword [esi+0x4],byte +0x0
jz dword 0x4d1f6
cmp dword [ebp-0x8],byte +0x2
jnz dword 0x4d1f6
call dword 0x3e7b4
push byte +0x1
xor ecx,ecx
xor edx,edx
mov eax,[esi+0x4]
call dword 0x410d0
jmp dword 0x4d1f6
lea ecx,[ebp-0x2c]
mov edx,[ebp+0xc]
mov eax,[ebp+0x10]
call dword 0x12a04
lea edx,[ebp-0x2c]
lea ecx,[ebp-0x8]
mov eax,ebx
call dword 0x4b544
mov esi,eax
test esi,esi
jz dword 0x4d1f6
cmp dword [ebp-0x8],byte +0x12
jnz 0x4d18f
lea ecx,[ebp-0x2c]
mov edx,[ebp+0xc]
mov eax,[ebp+0x10]
call dword 0x12a04
lea ecx,[ebp-0x2c]
mov edx,esi
mov eax,ebx
call dword 0x4c7c0
jmp short 0x4d1f6
cmp dword [ebp-0x8],byte +0x2
jnz 0x4d1f6
push byte +0x0
push dword 0x203
push dword 0x203
mov eax,[ebx+0x14]
call dword 0x4831c
push eax
lea eax,[ebp-0x24]
push eax
call dword 0x6200
test eax,eax
jnz 0x4d1d4
mov eax,[esi+0x4]
mov edx,[dword 0x43d11c]
call dword 0x2d7c
test al,al
jz 0x4d1d4
mov eax,[esi+0x4]
mov edx,[eax]
call dword [edx+0xd4]
mov eax,[esi+0x4]
cmp byte [eax+0x8f],0x1
jnz 0x4d1f0
cmp byte [eax+0x5d],0x1
jnz 0x4d1f0
or ecx,byte -0x1
xor edx,edx
call dword 0x40a0c
mov eax,[ebp+0x8]
mov byte [eax],0x1
pop esi
pop ebx
mov esp,ebp
pop ebp
ret 0xc
mov eax,eax
push ebp
mov ebp,esp
push ebx
push esi
push edi
mov edi,[ebp+0x8]
add edi,byte -0x4
mov eax,[edi]
mov ebx,[eax+0x18]
mov eax,[edi]
mov esi,[eax+0x60]
mov eax,[esi+0x14]
cmp byte [eax+0x10],0x1
jnz 0x4d255
mov eax,esi
mov edx,0x1
call dword 0x4a5b4
add eax,ebx
mov edx,[edi]
cmp eax,[edx+0x54]
jl 0x4d239
mov edx,[edi]
mov [edx+0x54],eax
mov eax,[edi]
mov edx,[eax+0x60]
mov eax,[edi]
call dword 0x4ca64
sub eax,ebx
mov edx,[edi]
cmp eax,[edx+0x54]
jg 0x4d289
mov edx,[edi]
mov [edx+0x54],eax
jmp short 0x4d289
mov eax,esi
mov edx,0x2
call dword 0x4a5b4
add eax,ebx
mov edx,[edi]
cmp eax,[edx+0x50]
jl 0x4d26f
mov edx,[edi]
mov [edx+0x50],eax
mov eax,[edi]
mov edx,[eax+0x60]
mov eax,[edi]
call dword 0x4ca64
sub eax,ebx
mov edx,[edi]
cmp eax,[edx+0x50]
jg 0x4d289
mov edx,[edi]
mov [edx+0x50],eax
pop edi
pop esi
pop ebx
pop ebp
ret
mov eax,eax
push ebp
mov ebp,esp
add esp,byte -0xc
push ebx
mov ebx,ecx
mov [ebp-0x4],eax
mov eax,[ebp-0x4]
cmp dword [eax+0x60],byte +0x0
jz 0x4d2d8
mov eax,[ebp-0x4]
call dword 0x4c8e8
lea ecx,[ebp-0xc]
mov edx,[ebp+0xc]
mov eax,ebx
call dword 0x12a04
mov eax,[ebp-0x4]
mov edx,[ebp-0xc]
mov [eax+0x50],edx
mov edx,[ebp-0x8]
mov [eax+0x54],edx
push ebp
call dword 0x4d200
pop ecx
mov eax,[ebp-0x4]
call dword 0x4c8e8
pop ebx
mov esp,ebp
pop ebp
ret 0x8
nop
push ebp
mov ebp,esp
add esp,byte -0xc
push ebx
push esi
mov ebx,eax
test dl,dl
jnz 0x4d34a
cmp dword [ebx+0x60],byte +0x0
jnz 0x4d343
lea ecx,[ebp-0xc]
mov edx,[ebp+0xc]
mov eax,[ebp+0x10]
call dword 0x12a04
lea edx,[ebp-0xc]
lea ecx,[ebp-0x4]
mov eax,ebx
call dword 0x4b544
mov ebx,eax
test ebx,ebx
jz 0x4d34a
cmp dword [ebp-0x4],byte +0x14
jnz 0x4d34a
mov esi,[ebx+0x4]
mov eax,esi
mov edx,[dword 0x453010]
call dword 0x2d7c
test al,al
jz 0x4d338
mov eax,esi
call dword 0x5abe8
jmp short 0x4d34a
mov eax,esi
xor edx,edx
call dword 0x401b8
jmp short 0x4d34a
mov eax,ebx
call dword 0x4c820
pop esi
pop ebx
mov esp,ebp
pop ebp
ret 0xc
mov eax,eax
push ebp
mov ebp,esp
add esp,byte -0x24
push ebx
push esi
push edi
xor ebx,ebx
mov [ebp-0x24],ebx
mov esi,edx
lea edi,[ebp-0x8]
movsd
movsd
mov [ebp-0xc],ecx
mov esi,eax
xor eax,eax
push ebp
push dword 0x44e435
push dword [fs:eax]
mov [fs:eax],esp
lea ecx,[ebp-0x10]
lea edx,[ebp-0x8]
mov eax,esi
mov ebx,[eax]
call dword [ebx+0x8]
mov ebx,eax
cmp dword [ebp-0x10],byte +0x12
jnz 0x4d39e
mov eax,[ebp+0x8]
call dword 0x3a1c
jmp dword 0x4d41f
test ebx,ebx
jz 0x4d41f
mov eax,[ebp-0x10]
sub eax,byte +0x2
jz 0x4d3af
sub eax,byte +0x12
jnz 0x4d41f
lea edx,[ebp-0x20]
mov eax,ebx
call dword 0x3fba8
lea ecx,[ebp-0x20]
mov edx,ebx
mov eax,esi
mov esi,[eax]
call dword [esi]
mov eax,[ebp-0x20]
sub eax,[ebx+0x40]
add eax,eax
sub [ebp-0x20],eax
mov eax,[ebp-0x1c]
sub eax,[ebx+0x44]
add eax,eax
sub [ebp-0x1c],eax
mov eax,[ebp-0x18]
sub eax,[ebp-0x20]
mov edx,[ebx+0x48]
sub edx,eax
mov eax,edx
add eax,eax
sub [ebp-0x18],eax
mov eax,[ebp-0x14]
sub eax,[ebp-0x1c]
mov edx,[ebx+0x4c]
sub edx,eax
mov eax,edx
add eax,eax
sub [ebp-0x14],eax
lea edx,[ebp-0x24]
mov eax,ebx
call dword 0x40298
mov edx,[ebp-0x24]
mov eax,[ebp+0x8]
call dword 0x3a70
mov eax,[ebp-0xc]
mov edi,eax
lea esi,[ebp-0x20]
movsd
movsd
movsd
movsd
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x44e43c
lea eax,[ebp-0x24]
call dword 0x3a1c
ret
jmp dword 0x3384
jmp short 0x4d42c
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret 0x4
lea eax,[eax+0x0]
push ebx
push esi
test dl,dl
jz 0x4d456
add esp,byte -0x10
call dword 0x2f14
mov ebx,edx
mov esi,eax
xor edx,edx
mov eax,esi
call dword 0x2bc0
mov byte [esi+0x4],0x1
mov dword [esi+0x8],0x5
mov eax,[0x468ea4]
cmp dword [eax],byte +0x2
jnz 0x4d482
mov eax,[0x468bd4]
cmp dword [eax],byte +0x4
jnl 0x4d4ae
mov eax,[0x468ea4]
cmp dword [eax],byte +0x1
jnz 0x4d4aa
mov eax,[0x468bd4]
cmp dword [eax],byte +0x4
jg 0x4d4ae
mov eax,[0x468bd4]
cmp dword [eax],byte +0x4
jnz 0x4d4aa
mov eax,[0x468d80]
cmp dword [eax],byte +0xa
jnl 0x4d4ae
xor eax,eax
jmp short 0x4d4b0
mov al,0x1
mov [esi+0xd],al
xor edx,edx
mov eax,esi
call dword 0x4d638
mov eax,esi
test bl,bl
jz 0x4d4d1
call dword 0x2f6c
pop dword [dword fs:0x0]
add esp,byte +0xc
mov eax,esi
pop esi
pop ebx
ret
mov eax,eax
push ebx
mov ebx,eax
xor eax,eax
cmp dword [ebx+0x2c],byte +0x0
jz 0x4d4ff
cmp byte [ebx+0x20],0x0
jz 0x4d4ff
xor edx,edx
mov eax,ebx
call dword 0x4d618
xor ecx,ecx
mov dl,0x1
mov eax,[ebx+0x2c]
call dword [eax+0x2c]
mov [ebx+0x28],eax
pop ebx
ret
lea eax,[eax+0x0]
push ebx
push esi
call dword 0x2fbc
mov ebx,edx
mov esi,eax
xor edx,edx
mov eax,esi
call dword 0x4d5f0
mov edx,ebx
and dl,0xfc
mov eax,esi
call dword 0x2be0
test bl,bl
jng 0x4d52f
mov eax,esi
call dword 0x2f64
pop esi
pop ebx
ret
mov eax,eax
call dword 0x5fa8
ret
mov eax,eax
push ebx
mov ebx,edx
push ebx
call dword 0x5fd8
call dword 0xcbfc
pop ebx
ret
cmp byte [dword 0x46dc40],0x0
setnz al
ret
nop
push ebx
push esi
mov ebx,eax
mov esi,[ebx+0x28]
test esi,esi
jz 0x4d571
mov eax,esi
mov edx,[eax]
call dword [edx+0xdc]
test al,al
jnz 0x4d576
xor eax,eax
pop esi
pop ebx
ret
mov al,0x1
pop esi
pop ebx
ret
nop
push ebx
mov ebx,eax
push byte +0x13
mov eax,[0x468be8]
mov eax,[eax]
call eax
cmp eax,byte +0x1
sbb eax,eax
inc eax
mov [ebx+0xc],al
pop ebx
ret
lea eax,[eax+0x0]
push ebx
push esi
mov esi,eax
push byte +0x4b
mov eax,[0x468be8]
mov eax,[eax]
call eax
cmp eax,byte +0x1
sbb ebx,ebx
inc ebx
mov [esi+0x20],bl
test bl,bl
jz 0x4d5c3
push byte +0x0
lea eax,[esi+0x10]
push eax
push byte +0x0
push byte +0x68
call dword 0x6350
pop esi
pop ebx
ret
mov eax,eax
push ebx
push ecx
mov ebx,eax
push esp
lea eax,[ebx+0x10]
push eax
lea ecx,[ebx+0x14]
lea edx,[ebx+0x24]
lea eax,[ebx+0x1c]
call dword 0x6400
mov [ebx+0x18],eax
cmp dword [ebx+0x1c],byte +0x0
setnz al
mov [ebx+0x20],al
pop edx
pop ebx
ret
nop
push ebx
push esi
mov esi,edx
mov ebx,eax
mov eax,ebx
call dword 0x4d534
cmp esi,eax
jz 0x4d612
test esi,esi
jnz 0x4d60c
call dword 0x6248
jmp short 0x4d612
push esi
call dword 0x6298
pop esi
pop ebx
ret
lea eax,[eax+0x0]
push ebx
push esi
mov esi,edx
mov ebx,eax
mov eax,[ebx+0x28]
cmp esi,eax
jz 0x4d634
test eax,eax
jz 0x4d631
lea eax,[ebx+0x28]
call dword 0xd0e8
mov [ebx+0x28],esi
pop esi
pop ebx
ret
nop
push ebx
mov ebx,eax
sub edx,byte +0x1
jc 0x4d647
sub edx,byte +0x67
jz 0x4d666
jmp short 0x4d697
mov eax,ebx
call dword 0x4d57c
cmp byte [ebx+0xd],0x0
jnz 0x4d65d
mov eax,ebx
call dword 0x4d5c8
jmp short 0x4d697
mov eax,ebx
call dword 0x4d598
pop ebx
ret
cmp byte [ebx+0x20],0x0
jz 0x4d697
cmp byte [ebx+0xd],0x0
jz 0x4d683
push byte +0x0
lea eax,[ebx+0x10]
push eax
push byte +0x0
push byte +0x68
call dword 0x6350
jmp short 0x4d697
push byte +0x0
push byte +0x0
mov eax,[ebx+0x14]
push eax
mov eax,[ebx+0x18]
push eax
call dword 0x6278
mov [ebx+0x10],eax
pop ebx
ret
lea eax,[eax+0x0]
push ebp
mov ebp,esp
push ecx
push ebx
mov eax,[0x468eb4]
cmp byte [eax+0xc],0x0
jz dword 0x4d809
push dword 0x8000
call dword 0x5be0
mov [ebp-0x4],eax
xor eax,eax
push ebp
push dword 0x44e802
push dword [fs:eax]
mov [fs:eax],esp
cmp dword [dword 0x46dc58],byte +0x0
jnz 0x4d6f0
push dword 0x44e810
call dword 0x5b48
mov ebx,eax
push dword 0x44e818
push ebx
call dword 0x5b50
mov [0x46dc58],eax
cmp dword [dword 0x4686dc],byte +0x0
jnz dword 0x4d7eb
push dword 0x44e828
call dword 0x5ba8
mov [0x4686dc],eax
cmp dword [dword 0x4686dc],byte +0x0
jz dword 0x4d7eb
push dword 0x44e834
mov eax,[0x4686dc]
push eax
call dword 0x5b50
mov [0x46dc5c],eax
push dword 0x44e844
mov eax,[0x4686dc]
push eax
call dword 0x5b50
mov [0x46dc60],eax
push dword 0x44e858
mov eax,[0x4686dc]
push eax
call dword 0x5b50
mov [0x46dc64],eax
push dword 0x44e870
mov eax,[0x4686dc]
push eax
call dword 0x5b50
mov [0x46dc68],eax
push dword 0x44e888
mov eax,[0x4686dc]
push eax
call dword 0x5b50
mov [0x46dc6c],eax
push dword 0x44e89c
mov eax,[0x4686dc]
push eax
call dword 0x5b50
mov [0x46dc70],eax
push dword 0x44e8b4
mov eax,[0x4686dc]
push eax
call dword 0x5b50
mov [0x46dc74],eax
push dword 0x44e8cc
mov eax,[0x4686dc]
push eax
call dword 0x5b50
mov [0x46dc78],eax
push dword 0x44e8e8
mov eax,[0x4686dc]
push eax
call dword 0x5b50
mov [0x46dc7c],eax
push dword 0x44e8f4
mov eax,[0x4686dc]
push eax
call dword 0x5b50
mov [0x46dc80],eax
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x44e809
mov eax,[ebp-0x4]
push eax
call dword 0x5be0
ret
jmp dword 0x3384
jmp short 0x4d7f8
pop ebx
pop ecx
pop ebp
ret
add [eax],al
add [ebp+0x53],dl
inc ebp
push edx
xor esi,[edx]
add [eax],al
push edi
dec ecx
dec esi
dec esi
dec esp
push ebx
inc ebp
outsb
popad
bound ebp,[ebp+0x49]
dec ebp
inc ebp
add [ecx+0x6d],ch
insd
xor esi,[edx]
fs insb
insb
add [eax],al
add [ecx+0x6d],cl
insd
inc edi
gs jz 0x4d87e
outsd
outsb
jz 0x4d8a4
js 0x4d8b5
add [eax],al
add [ecx+0x6d],cl
insd
push edx
gs insb
gs popad
jnc 0x4d8b3
inc ebx
outsd
outsb
jz 0x4d8b8
js 0x4d8c9
add [eax],al
add [ecx+0x6d],cl
insd
inc edi
gs jz 0x4d8a2
outsd
outsb
jna 0x4d8c8
jc 0x4d8d8
imul ebp,[edi+0x6e],dword 0x74617453
jnz 0x4d8e1
add [eax],al
dec ecx
insd
insd
push ebx
gs jz 0x4d8ba
outsd
outsb
jna 0x4d8e0
jc 0x4d8f0
imul ebp,[edi+0x6e],dword 0x74617453
jnz 0x4d8f9
add [eax],al
dec ecx
insd
insd
push ebx
gs jz 0x4d8de
jo 0x4d8f6
outsb
push ebx
jz 0x4d8f6
jz 0x4d90c
jnc 0x4d899
add [eax],al
add [ecx+0x6d],cl
insd
push ebx
gs jz 0x4d8e6
outsd
insd
jo 0x4d916
jnc 0x4d912
jz 0x4d914
outsd
outsb
push edi
imul ebp,[esi+0x64],dword 0x4900776f
insd
insd
push ebx
gs jz 0x4d8fe
outsd
insd
jo 0x4d92e
jnc 0x4d92a
jz 0x4d92c
outsd
outsb
inc esi
outsd
outsb
jz 0x4d90b
add [eax],al
dec ecx
insd
insd
inc edi
gs jz 0x4d916
outsd
insd
jo 0x4d946
jnc 0x4d942
jz 0x4d944
outsd
outsb
push ebx
jz 0x4d952
imul ebp,[esi+0x67],dword 0x41
add [ecx+0x6d],cl
insd
dec ecx
jnc 0x4d937
dec ebp
inc ebp
add [eax],al
add [eax],al
dec ecx
insd
insd
dec esi
outsd
jz 0x4d964
o16 jns 0x4d947
dec ebp
inc ebp
add [eax],al
add [eax],al
cmp dword [dword 0x46dc58],byte +0x0
jz 0x4d91c
cmp dl,0x1
cmc
sbb edx,edx
push edx
push eax
call dword [dword 0x46dc58]
ret
xor eax,eax
ret
nop
push ebx
push esi
push edi
add esp,byte -0x8
mov ebx,edx
mov esi,eax
mov eax,[0x468eb4]
cmp byte [eax+0xc],0x0
jz dword 0x4d9f2
cmp bl,0x3
jz dword 0x4d9f2
test bl,bl
jnz 0x4d954
xor edx,edx
mov eax,esi
call dword 0x4d904
jmp dword 0x4d9f2
mov dl,0x1
mov eax,esi
call dword 0x4d904
cmp dword [dword 0x4686dc],byte +0x0
jz dword 0x4d9f2
push esi
call dword [dword 0x46dc5c]
mov edi,eax
test edi,edi
jz 0x4d9f2
lea eax,[esp+0x4]
push eax
lea eax,[esp+0x4]
push eax
push edi
call dword [dword 0x46dc64]
mov eax,ebx
dec al
jz 0x4d994
dec al
jz 0x4d99f
jmp short 0x4d9aa
push byte +0x0
push edi
call dword [dword 0x46dc6c]
jmp short 0x4d9d9
push byte +0x1
push edi
call dword [dword 0x46dc6c]
jmp short 0x4d9d9
push byte +0x1
push edi
call dword [dword 0x46dc6c]
lea eax,[esp+0x4]
push eax
lea eax,[esp+0x4]
push eax
push edi
call dword [dword 0x46dc64]
mov eax,[esp]
and eax,byte -0xc
movzx edx,bl
movzx edx,byte [edx+0x4686dc]
or eax,edx
mov [esp],eax
mov eax,[esp+0x4]
push eax
mov eax,[esp+0x4]
push eax
push edi
call dword [dword 0x46dc68]
push edi
push esi
call dword [dword 0x46dc60]
pop ecx
pop edx
pop edi
pop esi
pop ebx
ret
cmp dword [dword 0x4686dc],byte +0x0
jz 0x4da09
push eax
call dword [dword 0x46dc7c]
ret
xor eax,eax
ret
mov eax,[0x468d34]
mov eax,[eax]
call dword 0x2bf0
mov eax,[0x468d34]
xor edx,edx
mov [eax],edx
mov eax,[0x468e8c]
mov eax,[eax]
call dword 0x2bf0
mov eax,[0x468e8c]
xor edx,edx
mov [eax],edx
mov eax,[0x46dbfc]
call dword 0x2bf0
xor eax,eax
mov [0x46dbfc],eax
mov eax,[0x46dc54]
call dword 0x2bf0
movzx eax,word [dword 0x46dc12]
push eax
call dword 0x5b88
mov eax,0x46dc18
call dword 0x3a1c
movzx eax,word [dword 0x46dc10]
push eax
call dword 0x5b88
mov eax,0x46dc14
call dword 0x3a1c
cmp dword [dword 0x4686dc],byte +0x0
jz 0x4da93
mov eax,[0x4686dc]
push eax
call dword 0x5ad0
ret
push ebp
mov ebp,esp
add esp,byte -0x20
push ebx
xor eax,eax
mov [ebp-0x10],eax
mov [ebp-0x4],eax
xor eax,eax
push ebp
push dword 0x44ec0c
push dword [fs:eax]
mov [fs:eax],esp
lea eax,[ebp-0x4]
push eax
call dword 0x5af0
mov [ebp-0xc],eax
mov byte [ebp-0x8],0x0
lea edx,[ebp-0xc]
xor ecx,ecx
mov eax,0x44ec20
call dword 0x8b24
mov edx,[ebp-0x4]
mov eax,0x46dc14
call dword 0x3a70
mov eax,[0x46dc14]
call dword 0x3eac
push eax
call dword 0x5b80
mov [0x46dc10],ax
lea eax,[ebp-0x10]
push eax
mov eax,[0x46b7f4]
mov [ebp-0x20],eax
mov byte [ebp-0x1c],0x0
call dword 0x5af8
mov [ebp-0x18],eax
mov byte [ebp-0x14],0x0
lea edx,[ebp-0x20]
mov ecx,0x1
mov eax,0x44ec34
call dword 0x8b24
mov edx,[ebp-0x10]
mov eax,0x46dc18
call dword 0x3a70
mov eax,[0x46dc18]
call dword 0x3eac
push eax
call dword 0x5b80
mov [0x46dc12],ax
mov eax,[0x46dc18]
call dword 0x3eac
push eax
call dword 0x6240
mov [0x46dc1c],eax
mov dl,0x1
mov eax,[0x4129b0]
call dword 0x140ec
mov [0x46dc54],eax
call dword 0x4d69c
mov dl,0x1
mov eax,[0x43db3c]
call dword 0x4d448
mov [0x46dbfc],eax
xor ecx,ecx
mov dl,0x1
mov eax,[0x4544b8]
call dword 0x5bd90
mov edx,[dword 0x468e8c]
mov [edx],eax
xor ecx,ecx
mov dl,0x1
mov eax,[0x4545bc]
call dword 0x5cf98
mov edx,[dword 0x468d34]
mov [edx],eax
mov eax,[0x468d34]
mov eax,[eax]
mov dl,0x1
call dword 0x5f2f4
mov ecx,0x43df38
mov edx,0x43df48
mov eax,[0x43b3e4]
call dword 0x13844
push dword 0x44ec48
call dword 0x5b48
mov ebx,eax
test ebx,ebx
jz 0x4dbee
push dword 0x44ec50
push ebx
call dword 0x5b50
mov [0x4685a8],eax
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x44ec13
lea eax,[ebp-0x10]
call dword 0x3a1c
lea eax,[ebp-0x4]
call dword 0x3a1c
ret
jmp dword 0x3384
jmp short 0x4dbfb
pop ebx
mov esp,ebp
pop ebp
ret
db 0xff
db 0xff
db 0xff
dec dword [edx]
add [eax],al
add [ebp+0x6c],al
jo 0x4dc8d
imul esp,[dword 0x58382e],dword 0xffffff00

call dword [edx]
add [eax],al
add [ebx+0x6f],al
outsb
jz 0x4dcab
outsd
insb
dec edi
o16 jnc 0x4dc64
cmp [cs:eax+0x25],bl
cmp [cs:eax+0x0],bl
add [ebp+0x53],dl
inc ebp
push edx
xor esi,[edx]
add [eax],al
inc ecx
outsb
imul ebp,[ebp+0x61],dword 0x69576574
outsb
fs outsd
ja 0x4dc5e
add [eax],al
push ebx
push esi
push edi
test dl,dl
jz 0x4dc6f
add esp,byte -0x10
call dword 0x2f14
mov esi,ecx
mov ebx,edx
mov edi,eax
xor edx,edx
mov eax,edi
call dword 0x2bc0
mov [edi+0x4],esi
mov eax,[edi]
mov edx,edi
call dword [eax+0x14]
mov eax,edi
test bl,bl
jz 0x4dc9d
call dword 0x2f6c
pop dword [dword fs:0x0]
add esp,byte +0xc
mov eax,edi
pop edi
pop esi
pop ebx
ret
nop
push ebx
push esi
mov ebx,edx
mov esi,eax
mov eax,ebx
mov edx,[dword 0x43be1c]
call dword 0x2d7c
test al,al
jz 0x4dcdd
mov eax,ebx
mov edx,[esi+0x8]
mov [eax+0x8],edx
mov edx,[esi+0xc]
mov [eax+0xc],edx
mov edx,[esi+0x10]
mov [eax+0x10],edx
mov edx,[esi+0x14]
mov [eax+0x14],edx
mov edx,[eax]
call dword [edx+0xc]
pop esi
pop ebx
ret
mov edx,ebx
mov eax,esi
call dword 0x14560
pop esi
pop ebx
ret
lea eax,[eax+0x0]
push ebx
cmp word [eax+0x1a],byte +0x0
jz 0x4dcfe
mov ebx,eax
mov edx,eax
mov eax,[ebx+0x1c]
call dword [ebx+0x18]
pop ebx
ret
mov dword [edx+0x8],0x3
mov dword [edx+0x10],0x3
mov dword [edx+0xc],0x3
mov dword [edx+0x14],0x3
ret
lea eax,[eax+0x0]
push esi
mov esi,eax
sub edx,byte +0x1
jc 0x4dd32
jz 0x4dd43
dec edx
jz 0x4dd54
dec edx
jz 0x4dd65
jmp short 0x4dd74
cmp ecx,[esi+0x8]
jz 0x4dd74
mov [esi+0x8],ecx
mov eax,esi
mov edx,[eax]
call dword [edx+0xc]
pop esi
ret
cmp ecx,[esi+0xc]
jz 0x4dd74
mov [esi+0xc],ecx
mov eax,esi
mov edx,[eax]
call dword [edx+0xc]
pop esi
ret
cmp ecx,[esi+0x10]
jz 0x4dd74
mov [esi+0x10],ecx
mov eax,esi
mov edx,[eax]
call dword [edx+0xc]
pop esi
ret
cmp ecx,[esi+0x14]
jz 0x4dd74
mov [esi+0x14],ecx
mov eax,esi
mov edx,[eax]
call dword [edx+0xc]
pop esi
ret
mov eax,eax
push ebp
mov ebp,esp
push ecx
push ebx
push esi
push edi
mov edi,ecx
mov esi,edx
mov [ebp-0x4],eax
mov eax,[ebp-0x4]
mov ebx,[eax+0x4]
test ebx,ebx
jz dword 0x4de5a
cmp byte [ebp+0x8],0x0
jz 0x4dda7
mov byte [ebx+0x164],0x1
or word [ebx+0x54],0x4000
xor edx,edx
push ebp
push dword 0x44ee53
push dword [fs:edx]
mov [fs:edx],esp
mov eax,[ebp-0x4]
mov eax,[eax+0x4]
call dword 0x42fc0
test al,al
jz 0x4de12
mov eax,[ebp-0x4]
mov eax,[eax+0x4]
cmp dword [eax+0x30],byte +0x0
jz 0x4de12
mov eax,[ebp-0x4]
mov eax,[eax+0x8]
mov edx,eax
mov ecx,[ebp-0x4]
add edx,[ecx+0x10]
mov ecx,[ebp+0x10]
sub ecx,edx
push ecx
mov edx,[ebp-0x4]
mov edx,[edx+0xc]
mov ecx,[ebp-0x4]
add edx,[ecx+0x14]
mov ecx,[ebp+0xc]
sub ecx,edx
push ecx
mov edx,[ebp-0x4]
mov ecx,[edx+0xc]
add ecx,edi
mov edx,eax
add edx,esi
mov eax,[ebp-0x4]
mov eax,[eax+0x4]
mov ebx,[eax]
call dword [ebx+0x88]
jmp short 0x4de2c
mov eax,[ebp+0x10]
push eax
mov eax,[ebp+0xc]
push eax
mov eax,[ebp-0x4]
mov eax,[eax+0x4]
mov ecx,edi
mov edx,esi
mov ebx,[eax]
call dword [ebx+0x88]
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x44ee5a
cmp byte [ebp+0x8],0x0
jz 0x4de52
mov eax,[ebp-0x4]
mov ebx,[eax+0x4]
mov byte [ebx+0x164],0x0
and word [ebx+0x54],0xbfff
ret
jmp dword 0x3384
jmp short 0x4de39
pop edi
pop esi
pop ebx
pop ecx
pop ebp
ret 0xc
mov eax,eax
push ebx
mov ebx,eax
xor eax,eax
cmp dword [ebx+0x4],byte +0x0
jz dword 0x4e023
cmp edx,byte +0x7
ja dword 0x4e023
jmp dword [edx*4+0x44ee83]
mov [0xd10044ee],eax
out dx,al
inc esp
add bh,bh
out dx,al
inc esp
add [eax],dh
out dx,eax
inc esp
add [ecx-0x11],ah
inc esp
add [ebp-0x3cffbb11],dl
out dx,eax
inc esp
add ah,dh
out dx,eax
inc esp
add [ebx+0x15e80443],cl
push ecx
db 0xff
inc dword [eax+eax*8+0x438b1774]
add al,0x83
js 0x4dee5
add [esi+ecx-0x75],dh
inc ebx
add al,0x8b
inc eax
inc eax
sub eax,[ebx+0x8]
jmp dword 0x4e023
mov eax,[ebx+0x4]
mov eax,[eax+0x40]
jmp dword 0x4e023
mov eax,[ebx+0x4]
call dword 0x42fc0
test al,al
jz 0x4def4
mov eax,[ebx+0x4]
cmp dword [eax+0x30],byte +0x0
jz 0x4def4
mov eax,[ebx+0x4]
mov eax,[eax+0x44]
sub eax,[ebx+0xc]
jmp dword 0x4e023
mov eax,[ebx+0x4]
mov eax,[eax+0x44]
jmp dword 0x4e023
mov eax,[ebx+0x4]
call dword 0x42fc0
test al,al
jz 0x4df25
mov eax,[ebx+0x4]
cmp dword [eax+0x30],byte +0x0
jz 0x4df25
mov eax,[ebx+0x4]
mov eax,[eax+0x48]
add eax,[ebx+0x8]
add eax,[ebx+0x10]
jmp dword 0x4e023
mov eax,[ebx+0x4]
mov eax,[eax+0x48]
jmp dword 0x4e023
mov eax,[ebx+0x4]
call dword 0x42fc0
test al,al
jz 0x4df56
mov eax,[ebx+0x4]
cmp dword [eax+0x30],byte +0x0
jz 0x4df56
mov eax,[ebx+0x4]
mov eax,[eax+0x4c]
add eax,[ebx+0xc]
add eax,[ebx+0x14]
jmp dword 0x4e023
mov eax,[ebx+0x4]
mov eax,[eax+0x4c]
jmp dword 0x4e023
mov eax,[ebx+0x4]
call dword 0x42fc0
test al,al
jz 0x4df87
mov eax,[ebx+0x4]
cmp dword [eax+0x30],byte +0x0
jz 0x4df87
mov eax,[ebx+0x4]
mov eax,[eax+0x180]
sub eax,[ebx+0x8]
jmp dword 0x4e023
mov eax,[ebx+0x4]
mov eax,[eax+0x180]
jmp dword 0x4e023
mov eax,[ebx+0x4]
call dword 0x42fc0
test al,al
jz 0x4dfb8
mov eax,[ebx+0x4]
cmp dword [eax+0x30],byte +0x0
jz 0x4dfb8
mov eax,[ebx+0x4]
mov eax,[eax+0x184]
sub eax,[ebx+0xc]
jmp short 0x4e023
mov eax,[ebx+0x4]
mov eax,[eax+0x184]
jmp short 0x4e023
mov eax,[ebx+0x4]
call dword 0x42fc0
test al,al
jz 0x4dfe9
mov eax,[ebx+0x4]
cmp dword [eax+0x30],byte +0x0
jz 0x4dfe9
mov eax,[ebx+0x4]
mov eax,[eax+0x188]
add eax,[ebx+0x8]
add eax,[ebx+0x10]
jmp short 0x4e023
mov eax,[ebx+0x4]
mov eax,[eax+0x188]
jmp short 0x4e023
mov eax,[ebx+0x4]
call dword 0x42fc0
test al,al
jz 0x4e01a
mov eax,[ebx+0x4]
cmp dword [eax+0x30],byte +0x0
jz 0x4e01a
mov eax,[ebx+0x4]
mov eax,[eax+0x18c]
add eax,[ebx+0xc]
add eax,[ebx+0x14]
jmp short 0x4e023
mov eax,[ebx+0x4]
mov eax,[eax+0x18c]
pop ebx
ret
lea eax,[eax+0x0]
ret
lea eax,[eax+0x0]
push ebp
mov ebp,esp
xor eax,eax
push ebp
push dword 0x44f08b
push dword [fs:eax]
mov [fs:eax],esp
inc dword [dword 0x46dc0c]
jnz 0x4e07d
mov eax,0x46dc48
call dword 0xd0e8
call dword 0x4da0c
mov eax,0x46dc14
call dword 0x3a1c
mov eax,0x46dc18
call dword 0x3a1c
mov eax,0x4685bc
mov ecx,0x16
mov edx,[dword 0x4139e0]
call dword 0x465c
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x44f092
ret
jmp dword 0x3384
jmp short 0x4e08a
pop ebp
ret
loopne 0x4e086
inc esp
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add al,ch
lock inc esp
add [eax+0x0],dh
add [eax],al
mov al,0x10
inc eax
add [eax],bh
ds inc eax
add [esi+edi+0x40],al
add [eax+0x3e],cl
inc eax
add [esi+edi+0x40],cl
add [eax+0x3e],al
inc eax
add [eax-0x5bffbfc5],cl
cmp eax,[eax+0x0]
test al,0xf3
inc esp
add [esp+esi*8],dh
inc esp
add [ebx+esi*8],dh
inc esp
add [esi],cl
push esp
push esp
push dword 0x53656d65
gs jc 0x4e169
imul esp,[ebx+0x65],dword 0xffff9073
db 0xff
jmp dword [edi]
add [eax],al
add [eax+ebp*2+0x65],dl
insd
and [gs:ebp+0x61],ch
outsb
popad
gs jc 0x4e12e
test eax,0x30303220
xor [eax],ebp
xor dh,[eax]
xor [edx],dh
and [ebp+0x69],cl
imul esp,[ebp+0x20],byte +0x4c
imul esi,[ebx+0x63],dword 0x656b68
bound eax,[eax]
jnz 0x4e12c
jz 0x4e12e
jz 0x4e130
outsd
add [esi+0x0],ch
add [eax],al
add [eax],al
arpl [eax],ax
insb
add [edi+0x0],ch
arpl [eax],ax
imul eax,[eax],byte +0x0
add [ebx+0x0],ah
outsd
add [ebp+0x0],ch
bound eax,[eax]
outsd
add [edx+0x0],ah
outsd
add [eax+0x0],bh
add [eax],al
add [eax],al
add [gs:eax+eax+0x69],ah
add [eax+eax+0x0],dh
add [eax],al
add [ebp+0x0],ah
js 0x4e168
jo 0x4e16a
insb
add [edi+0x0],ch
jc 0x4e170
add [gs:edx+0x0],dh
bound eax,[eax]
popad
add [edx+0x0],dh
add [eax],al
push dword 0x61006500
add [eax+eax+0x65],ah
add [edx+0x0],dh
add [eax],al
add [eax],al
insb
add [ecx+0x0],ch
jnc 0x4e192
jz 0x4e194
jna 0x4e196
imul eax,[eax],dword 0x770065
add [eax],al
add [eax],al
insd
add [ebp+0x0],ah
outsb
add [ebp+0x0],dh
add [eax],al
add [eax],al
jo 0x4e1ae
popad
add [edi+0x0],ah
add [gs:eax],al
add [eax],al
add [eax+0x0],dh
jc 0x4e1bc
outsd
add [edi+0x0],ah
jc 0x4e1c2
add [gs:ebx+0x0],dh
jnc 0x4e1c8
add [eax],al
add [eax],al
jc 0x4e1ce
add [gs:edx+0x0],ah
popad
add [edx+0x0],dh
add [eax],al
jnc 0x4e1da
arpl [eax],ax
jc 0x4e1de
outsd
add [eax+eax+0x6c],ch
add [edx+0x0],ah
popad
add [edx+0x0],dh
add [eax],al
jnc 0x4e1ee
jo 0x4e1f0
imul eax,[eax],dword 0x6e
add [eax],al
jnc 0x4e1fa
jz 0x4e1fc
popad
add [edx+0x0],dh
jz 0x4e202
jo 0x4e204
popad
add [esi+0x0],ch
add [gs:eax+eax+0x0],ch
add [eax],al
add [ebx+0x0],dh
jz 0x4e214
popad
add [eax+eax+0x75],dh
add [ebx+0x0],dh
add [eax],al
add [eax],al
jz 0x4e222
popad
add [edx+0x0],ah
add [eax],al
jz 0x4e22a
popad
add [ebx+0x0],dh
imul eax,[eax],byte +0x62
add [ecx+0x0],ah
outsb
add [eax+eax+0x0],ah
add [eax],al
add [eax+eax+0x61],dh
add [ebx+0x0],dh
imul eax,[eax],byte +0x62
add [ecx+0x0],ah
jc 0x4e24a
add [eax],al
jz 0x4e24e
outsd
add [edi+0x0],ch
insb
add [edx+0x0],ah
popad
add [edx+0x0],dh
add [eax],al
jz 0x4e25e
outsd
add [edi+0x0],ch
insb
add [eax+eax+0x69],dh
add [eax+0x0],dh
add [eax],al
jz 0x4e26e
jc 0x4e270
popad
add [ebx+0x0],ah
imul eax,[eax],byte +0x62
add [ecx+0x0],ah
jc 0x4e27c
add [eax],al
add [eax],al
jz 0x4e282
jc 0x4e284
popad
add [ecx+0x0],bh
outsb
add [edi+0x0],ch
jz 0x4e28e
imul eax,[eax],dword 0x790066
add [eax],al
add [eax],al
jz 0x4e29a
jc 0x4e29c
add [gs:ebp+0x0],ah
jna 0x4e2a2
imul eax,[eax],dword 0x770065
add [eax],al
add [eax],al
ja 0x4e2ae
imul eax,[eax],dword 0x64006e
outsd
add [edi+0x0],dh
add [eax],al
add [eax],al
push ebx
mov ebx,eax
xor eax,eax
test ebx,ebx
jz 0x4e2fd
test byte [ebx+0x1c],0x10
jz 0x4e2fd
cmp dword [dword 0x46dc8c],byte +0x0
jnz 0x4e2e3
push dword 0x44f300
call dword 0x6240
mov [0x46dc8c],eax
push byte +0x0
mov ecx,0x64
mov edx,[dword 0x46dc8c]
mov eax,ebx
call dword 0x41588
cmp eax,byte +0x64
setz al
pop ebx
ret
add [edx+0x44],al
push ebx
push ebp
outsb
jz 0x4e36f
gs insd
fs inc esp
gs jnc 0x4e378
a16 outsb
gs jc 0x4e314
cmp dword [dword 0x46dc88],byte +0x0
jnz 0x4e32c
mov dl,0x1
mov eax,[0x4686e8]
call dword [eax+0x4]
mov [0x46dc88],eax
mov eax,[0x46dc88]
ret
mov eax,eax
push ebx
push esi
test dl,dl
jz 0x4e342
add esp,byte -0x10
call dword 0x2f14
mov ebx,edx
mov esi,eax
xor edx,edx
mov eax,esi
call dword 0x2bc0
call dword 0x27320
mov [esi+0x5],al
mov eax,0x44f398
call dword 0xbcb0
cmp eax,0x60000
setnc al
mov [esi+0x4],al
mov eax,esi
call dword 0x4eb54
mov eax,esi
test bl,bl
jz 0x4e388
call dword 0x2f6c
pop dword [dword fs:0x0]
add esp,byte +0xc
mov eax,esi
pop esi
pop ebx
ret
add [eax],al
add bh,bh
db 0xff
db 0xff
dec dword [eax+eax]
add [eax],al
arpl [edi+0x6d],bp
arpl [esp+ebp*2+0x33],si
xor ch,[esi]
fs insb
insb
add [eax],al
add [eax],al
push ebx
push esi
call dword 0x2fbc
mov ebx,edx
mov esi,eax
mov eax,esi
call dword 0x4e448
call dword 0x27160
mov edx,ebx
and dl,0xfc
mov eax,esi
call dword 0x2be0
test bl,bl
jng 0x4e3d6
mov eax,esi
call dword 0x2f64
pop esi
pop ebx
ret
lea eax,[eax+0x0]
push ebx
push esi
push edi
mov ebx,edx
mov esi,eax
cmp byte [esi+0x6],0x0
jz 0x4e40f
movzx eax,bl
cmp dword [esi+eax*4+0x8],byte +0x0
jnz 0x4e40f
mov edi,ebx
and edi,byte +0x7f
mov eax,[edi*4+0x4686f0]
push eax
push byte +0x0
mov eax,[0x468b98]
mov eax,[eax]
call eax
mov [esi+edi*4+0x8],eax
movzx eax,bl
mov eax,[esi+eax*4+0x8]
pop edi
pop esi
pop ebx
ret
mov eax,eax
cmp byte [eax+0x5],0x0
jz 0x4e42e
cmp byte [eax+0x6],0x0
jz 0x4e42e
cmp byte [eax+0x4],0x0
jnz 0x4e431
xor eax,eax
ret
mov al,0x1
ret
push ebx
cmp word [eax+0x6a],byte +0x0
jz 0x4e446
mov ebx,eax
mov edx,eax
mov eax,[ebx+0x6c]
call dword [ebx+0x68]
pop ebx
ret
push ebx
push esi
push edi
mov esi,eax
xor ebx,ebx
mov edi,ebx
and edi,byte +0x7f
mov eax,[esi+edi*4+0x8]
test eax,eax
jz 0x4e46c
push eax
mov eax,[0x468ca0]
mov eax,[eax]
call eax
xor eax,eax
mov [esi+edi*4+0x8],eax
inc ebx
cmp bl,0x18
jnz 0x4e44f
pop edi
pop esi
pop ebx
ret
mov eax,eax
push ebx
mov ebx,eax
mov eax,ebx
call dword 0x4eb54
mov eax,ebx
mov edx,[eax]
call dword [edx]
pop ebx
ret
mov eax,eax
push ebp
mov ebp,esp
add esp,byte -0xc
push ebx
push esi
push edi
mov esi,ecx
lea edi,[ebp-0xc]
movsd
movsd
movsd
mov esi,edx
mov ebx,eax
mov eax,[ebp+0x8]
push eax
mov eax,[ebp+0xc]
push eax
mov eax,[ebp+0x10]
push eax
mov eax,[ebp+0x14]
push eax
mov eax,[ebp-0x4]
push eax
mov eax,[ebp-0x8]
push eax
push esi
movzx edx,byte [ebp-0xc]
mov eax,ebx
call dword 0x4e3dc
push eax
mov eax,[0x468cc4]
mov eax,[eax]
call eax
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret 0x10
push ebp
mov ebp,esp
add esp,byte -0xc
push ebx
push esi
push edi
mov esi,ecx
lea edi,[ebp-0xc]
movsd
movsd
movsd
mov esi,edx
mov ebx,eax
mov eax,[ebp+0x8]
push eax
mov eax,[ebp+0xc]
push eax
mov eax,[ebp-0x4]
push eax
mov eax,[ebp-0x8]
push eax
push esi
movzx edx,byte [ebp-0xc]
mov eax,ebx
call dword 0x4e3dc
push eax
mov eax,[0x468c8c]
mov eax,[eax]
call eax
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret 0x8
push ebp
mov ebp,esp
add esp,byte -0x8
push ebx
push esi
mov [ebp-0x8],ecx
mov [ebp-0x4],edx
mov esi,eax
mov eax,[ebp+0x10]
cmp byte [ebp+0xc],0x0
jz 0x4e55f
test eax,eax
jz 0x4e55f
mov ebx,eax
mov eax,[ebx+0x8]
push eax
mov eax,[ebx+0x4]
push eax
movzx edx,byte [ebx]
mov eax,esi
call dword 0x4e3dc
push eax
mov eax,[0x468b7c]
mov eax,[eax]
call eax
cmp eax,byte +0x1
sbb eax,eax
inc eax
jmp short 0x4e561
mov al,0x1
test al,al
jz 0x4e57a
mov eax,[ebp+0x8]
push eax
mov eax,[ebp-0x8]
push eax
mov eax,[ebp-0x4]
push eax
mov eax,[0x468d14]
mov eax,[eax]
call eax
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
ret 0xc
mov eax,eax
mov byte [ecx],0x3
mov eax,edx
add al,0xfe
sub al,0x7
jc 0x4e593
jz 0x4e5a1
jmp short 0x4e5af
mov dword [ecx+0x4],0x1
mov eax,0x2
jmp short 0x4e5b6
mov dword [ecx+0x4],0x2
mov eax,0x9
jmp short 0x4e5b6
xor eax,eax
mov [ecx+0x4],eax
xor eax,eax
and edx,byte +0x7f
sub edx,eax
inc edx
mov [ecx+0x8],edx
ret
mov byte [ecx],0xa
movzx eax,dl
cmp eax,byte +0x11
ja 0x4e649
movzx eax,byte [eax+0x44f5d9]
jmp dword [eax*4+0x44f5eb]
add [eax],al
add [edx],eax
add eax,[ebx]
add eax,[ebx]
add eax,[ebx]
add al,0x4
add al,0x4
add eax,0x49050505
test byte [eax+eax+0x3],0xf6
inc esp
add [ecx],dl
test byte [eax+eax+0x1f],0xf6
inc esp
add [dword 0x3b0044f6],ch
test byte [eax+eax-0x39],0x41
add al,0x1
add [eax],al
add [eax+0x2],bh
jmp short 0x4e650
mov dword [ecx+0x4],0x2
mov eax,0x3
jmp short 0x4e650
mov dword [ecx+0x4],0x3
mov eax,0x4
jmp short 0x4e650
mov dword [ecx+0x4],0x4
mov eax,0xa
jmp short 0x4e650
mov dword [ecx+0x4],0x5
mov eax,0xe
jmp short 0x4e650
xor eax,eax
mov [ecx+0x4],eax
xor eax,eax
and edx,byte +0x7f
sub edx,eax
inc edx
mov [ecx+0x8],edx
ret
mov eax,eax
mov byte [ecx],0x17
movzx eax,dl
cmp eax,byte +0x68
ja dword 0x4e9d4
movzx eax,byte [eax+0x44f679]
jmp dword [eax*4+0x44f6e2]
add [eax],al
add [ecx],eax
add [edx],eax
add al,[edx]
add eax,[ebx]
add eax,[esp+eax]
add al,0x5
add eax,0x6060605
pop es
pop es
or [eax],cl
or [ecx],ecx
or cl,[edx]
or ecx,[ebx]
or al,0xc
or eax,0xe0d0d0d
push cs
push cs
push cs
db 0x0f
db 0x0f
db 0x0f
movups xmm2,oword [eax]
adc [eax],dl
adc [ecx],edx
adc [ecx],edx
adc dl,[edx]
adc dl,[edx]
adc edx,[ebx]
adc edx,[ebx]
adc al,0x14
adc al,0x14
adc eax,0x16151515
push ss
push ss
push ss
pop ss
pop ss
pop ss
pop ss
sbb [eax],bl
sbb [eax],bl
sbb [ecx],ebx
sbb [ecx],ebx
sbb bl,[edx]
sbb bl,[edx]
sbb ebx,[ebx]
sbb ebx,[ebx]
sbb al,0x1c
sbb al,0x1c
sbb eax,0x21201f1e
and ah,[ebx]
and al,0x25
aam 0xf9
inc esp
add [edx-0x9],bh
inc esp
add [ebx-0x63ffbb09],cl
test dword [eax+eax-0x53],0xbe0044f7
test dword [eax+eax-0x31],0xe00044f7
test dword [eax+eax-0xf],0x20044f7
clc
inc esp
add [ebx],dl
clc
inc esp
add [eax+edi*8],ah
inc esp
add [dword 0x460044f8],dh
clc
inc esp
add [edi-0x8],dl
inc esp
add [eax-0x8],ch
inc esp
add [ecx-0x8],bh
inc esp
add [edx-0x64ffbb08],cl
clc
inc esp
add [eax+edi*8-0x742ffbc],ch
inc esp
add dh,cl
clc
inc esp
add bh,bl
clc
inc esp
add al,dh
clc
inc esp
add [ecx],al
stc
inc esp
add [edx],dl
stc
inc esp
add [ebx],ah
stc
inc esp
add [ecx+edi*8],dh
inc esp
add [ebp-0x7],al
inc esp
add [esi-0x7],dl
inc esp
add [ecx+edi*8+0x44],ah
add [edx-0x7],dh
inc esp
add [eax-0x71ffbb07],al
stc
inc esp
add [ecx+edi*8-0x655ffbc],bl
inc esp
add [eax-0x39ffbb07],bh
stc
inc esp
add bh,al
inc ecx
add al,0x1
add [eax],al
add [eax+0x2],bh
jmp dword 0x4e9db
mov dword [ecx+0x4],0x2
mov eax,0x5
jmp dword 0x4e9db
mov dword [ecx+0x4],0x3
mov eax,0x8
jmp dword 0x4e9db
mov dword [ecx+0x4],0x4
mov eax,0xb
jmp dword 0x4e9db
mov dword [ecx+0x4],0x5
mov eax,0xe
jmp dword 0x4e9db
mov dword [ecx+0x4],0x6
mov eax,0x11
jmp dword 0x4e9db
mov dword [ecx+0x4],0x7
mov eax,0x14
jmp dword 0x4e9db
mov dword [ecx+0x4],0x8
mov eax,0x16
jmp dword 0x4e9db
mov dword [ecx+0x4],0x9
mov eax,0x18
jmp dword 0x4e9db
mov dword [ecx+0x4],0xa
mov eax,0x1a
jmp dword 0x4e9db
mov dword [ecx+0x4],0xb
mov eax,0x1c
jmp dword 0x4e9db
mov dword [ecx+0x4],0xc
mov eax,0x1e
jmp dword 0x4e9db
mov dword [ecx+0x4],0xd
mov eax,0x20
jmp dword 0x4e9db
mov dword [ecx+0x4],0xe
mov eax,0x24
jmp dword 0x4e9db
mov dword [ecx+0x4],0xf
mov eax,0x28
jmp dword 0x4e9db
mov dword [ecx+0x4],0x10
mov eax,0x2c
jmp dword 0x4e9db
mov dword [ecx+0x4],0x11
mov eax,0x30
jmp dword 0x4e9db
mov dword [ecx+0x4],0x12
mov eax,0x34
jmp dword 0x4e9db
mov dword [ecx+0x4],0x13
mov eax,0x38
jmp dword 0x4e9db
mov dword [ecx+0x4],0x14
mov eax,0x3c
jmp dword 0x4e9db
mov dword [ecx+0x4],0x15
mov eax,0x40
jmp dword 0x4e9db
mov dword [ecx+0x4],0x16
mov eax,0x44
jmp dword 0x4e9db
mov dword [ecx+0x4],0x17
mov eax,0x48
jmp dword 0x4e9db
mov dword [ecx+0x4],0x18
mov eax,0x4c
jmp dword 0x4e9db
mov dword [ecx+0x4],0x19
mov eax,0x50
jmp dword 0x4e9db
mov dword [ecx+0x4],0x1a
mov eax,0x54
jmp dword 0x4e9db
mov dword [ecx+0x4],0x1b
mov eax,0x58
jmp dword 0x4e9db
mov dword [ecx+0x4],0x1c
mov eax,0x5c
jmp dword 0x4e9db
mov dword [ecx+0x4],0x1d
mov eax,0x60
jmp short 0x4e9db
mov dword [ecx+0x4],0x1e
mov eax,0x61
jmp short 0x4e9db
mov dword [ecx+0x4],0x1f
mov eax,0x62
jmp short 0x4e9db
mov dword [ecx+0x4],0x20
mov eax,0x63
jmp short 0x4e9db
mov dword [ecx+0x4],0x21
mov eax,0x64
jmp short 0x4e9db
mov dword [ecx+0x4],0x22
mov eax,0x65
jmp short 0x4e9db
mov dword [ecx+0x4],0x23
mov eax,0x66
jmp short 0x4e9db
mov dword [ecx+0x4],0x24
mov eax,0x67
jmp short 0x4e9db
mov dword [ecx+0x4],0x25
mov eax,0x68
jmp short 0x4e9db
xor eax,eax
mov [ecx+0x4],eax
xor eax,eax
and edx,byte +0x7f
sub edx,eax
inc edx
mov [ecx+0x8],edx
ret
lea eax,[eax+0x0]
push ebp
mov ebp,esp
add esp,byte -0x44
push ebx
push esi
push edi
mov ebx,ecx
mov [ebp-0x4],edx
mov esi,eax
push byte -0x14
mov eax,[ebp-0x4]
call dword 0x4831c
push eax
call dword 0x60f8
test ah,0x2
jz dword 0x4eb4a
lea eax,[ebp-0x28]
push eax
mov eax,[ebp-0x4]
call dword 0x4831c
push eax
call dword 0x6110
mov eax,[ebp-0x24]
neg eax
push eax
mov eax,[ebp-0x28]
neg eax
push eax
lea eax,[ebp-0x28]
push eax
call dword 0x61f8
mov eax,[ebp-0x4]
call dword 0x4831c
push eax
call dword 0x60f0
mov [ebp-0x8],eax
xor edx,edx
push ebp
push dword 0x44fb43
push dword [fs:edx]
mov [fs:edx],esp
push esi
lea esi,[ebp-0x28]
lea edi,[ebp-0x18]
movsd
movsd
movsd
movsd
pop esi
test bl,bl
jz 0x4eadf
push byte -0x10
mov eax,[ebp-0x4]
call dword 0x4831c
push eax
call dword 0x60f8
test eax,0x100000
jz 0x4eadf
test eax,0x200000
jz 0x4eadf
push byte +0x2
call dword 0x60d8
mov edi,eax
push byte +0x3
call dword 0x60d8
mov ebx,eax
push byte -0x2
push byte -0x2
lea eax,[ebp-0x18]
push eax
call dword 0x6130
mov eax,[ebp-0xc]
push eax
lea eax,[ebp-0x44]
push eax
mov edx,[ebp-0xc]
sub edx,ebx
mov eax,[ebp-0x10]
sub eax,edi
mov ecx,[ebp-0x10]
call dword 0x12a2c
push esi
lea esi,[ebp-0x44]
lea edi,[ebp-0x18]
movsd
movsd
movsd
movsd
pop esi
push byte +0xf
call dword 0x60c8
push eax
lea eax,[ebp-0x18]
push eax
mov eax,[ebp-0x8]
push eax
call dword 0x5f88
mov eax,[ebp-0x1c]
sub eax,byte +0x2
push eax
mov eax,[ebp-0x20]
sub eax,byte +0x2
push eax
mov eax,[ebp-0x24]
add eax,byte +0x2
push eax
mov eax,[ebp-0x28]
add eax,byte +0x2
push eax
mov eax,[ebp-0x8]
push eax
call dword 0x5cc8
lea ecx,[ebp-0x34]
mov dl,0x2
mov eax,esi
call dword 0x4e584
lea eax,[ebp-0x28]
push eax
push byte +0x0
lea ecx,[ebp-0x34]
mov edx,[ebp-0x8]
mov eax,esi
call dword 0x4e4d8
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x44fb4a
mov eax,[ebp-0x8]
push eax
mov eax,[ebp-0x4]
call dword 0x4831c
push eax
call dword 0x6250
ret
jmp dword 0x3384
jmp short 0x4eb30
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret
lea eax,[eax+0x0]
push ebx
mov ebx,eax
cmp byte [ebx+0x6],0x0
jz 0x4eb64
mov eax,ebx
call dword 0x4e448
call dword 0x27a84
mov [ebx+0x6],al
pop ebx
ret
mov eax,eax
push ebx
mov ebx,eax
xor eax,eax
test ebx,ebx
jz 0x4ebb9
test byte [ebx+0x1c],0x10
jnz 0x4eb8d
call dword 0x4e314
call dword 0x4e41c
test al,al
jnz 0x4ebb7
test byte [ebx+0x1c],0x10
jz 0x4ebb3
cmp dword [ebx+0x30],byte +0x0
jz 0x4ebb3
call dword 0x4e314
call dword 0x4e41c
test al,al
jz 0x4ebb3
mov eax,[ebx+0x30]
call dword 0x4e2bc
test al,al
jz 0x4ebb7
xor eax,eax
jmp short 0x4ebb9
mov al,0x1
pop ebx
ret
nop
push ebp
mov ebp,esp
xor eax,eax
push ebp
push dword 0x44fc01
push dword [fs:eax]
mov [fs:eax],esp
inc dword [dword 0x46dc84]
jnz 0x4ebf3
mov eax,[0x468acc]
cmp byte [eax],0x0
jnz 0x4ebe9
mov eax,[0x46dc88]
call dword 0x2bf0
mov eax,0x4686ec
call dword 0x3a1c
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x44fc08
ret
jmp dword 0x3384
jmp short 0x4ec00
pop ebp
ret
mov eax,eax
pop eax
cld
inc esp
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax-0x4],bl
inc esp
add [eax-0x4],ah
inc esp
add [eax],dl
add [eax],al
add [eax+0x38004010],dh
ds inc eax
add [esi+edi+0x40],al
add [eax+0x3e],cl
inc eax
add [esi+edi+0x40],cl
add [eax+0x3e],al
inc eax
add [eax-0x5bffbfc5],cl
cmp eax,[eax+0x0]
mov al,[0x1004512]
add bh,bh
call esp
adc al,[ebp+0x0]
or edx,[ebx+eax*2+0x68]
popad
outsb
gs dec esp
imul ebp,[esi+0x6b],dword 0x44fc70
add [ebx],ecx
push esp
dec ecx
insd
popad
gs dec ecx
outsb
gs js 0x4ec82
add [eax],al
add [eax+0x7fffffff],al
mov eax,eax
aam 0xfc
inc esp
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],bh
std
inc esp
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],bl
std
inc esp
add [eax],ah
std
inc esp
add [eax+0x0],ch
add [eax],al
sub al,0x37
inc ecx
add [eax],ch
mov ebp,0x3e440041
inc eax
add [esi+esi*4+0x41],ah
add [esi+edi+0x40],cl
add [eax+0x3e],al
inc eax
add [eax-0x5bffbfc5],cl
cmp eax,[eax+0x0]
in al,dx
std
inc esp
add [eax+ecx+0x45],al
add al,dl
or eax,[ebp+0x0]
add byte [edi],0x45
add [edx+edi*4],al
inc ecx
add ah,cl
mov eax,0xba140041
inc ecx
add [ebx+edi*4],cl
inc ecx
add [eax-0x43],al
inc ecx
add [edx+edi*4],ah
inc ecx
add [edx+edi*4],bl
inc ecx
add [eax-0x43],cl
inc ecx
add [eax+0x700044fd],ah
add eax,[ebp+0x0]
pop eax
inc byte [eax+eax-0x7c]
adc [ebp+0x0],al
cmp [ecx],dl
inc ebp
add [eax+0x1004509],cl
add bh,ch
call dword far [eax+0x10004509]
push esp
inc ebx
jnz 0x4ed98
jz 0x4ed96
insd
dec ecx
insd
popad
gs dec esp
imul esi,[ebx+0x74],dword 0x3800408d
std
inc esp
add [edi],al
adc [ebx+eax*2+0x75],dl
jnc 0x4edb3
outsd
insd
dec ecx
insd
popad
gs dec esp
imul esi,[ebx+0x74],dword 0x44fcd4
sub [eax],bh
inc ecx
add [edx],al
add [edi],al
dec ecx
insd
dec esp
imul esi,[ebx+0x74],dword 0xc08b0000
call dword 0x1f6cc
mov edx,eax
sub edx,0x1fffffff
jz 0x4ed74
dec edx
jz 0x4ed78
jmp short 0x4ed7d
or eax,byte -0x1
ret
mov eax,0xff000000
ret
mov eax,eax
mov edx,eax
sub edx,0xff000000
jz 0x4ed98
sub edx,0xffffff
jnz 0x4ed9d
mov eax,0x1fffffff
ret
mov eax,0x20000000
ret
mov eax,eax
push ebx
push esi
test dl,dl
jz 0x4edae
add esp,byte -0x10
call dword 0x2f14
mov ebx,edx
mov esi,eax
xor edx,edx
mov eax,esi
call dword 0x1a59c
mov dword [esi+0x34],0x10
mov dword [esi+0x30],0x10
mov eax,esi
mov edx,[eax]
call dword [edx+0x34]
mov eax,esi
test bl,bl
jz 0x4ede5
call dword 0x2f6c
pop dword [dword fs:0x0]
add esp,byte +0xc
mov eax,esi
pop esi
pop ebx
ret
mov eax,eax
push ebx
push esi
push edi
call dword 0x2fbc
mov ebx,edx
mov edi,eax
jmp short 0x4ee0a
mov eax,esi
call dword 0x13f64
mov edx,eax
mov eax,edi
call dword 0x4f9e8
mov esi,[edi+0x4c]
cmp dword [esi+0x8],byte +0x0
jg 0x4edfa
mov eax,[edi+0x50]
call dword 0x2bf0
mov eax,edi
call dword 0x4f0b0
mov eax,[edi+0x4c]
call dword 0x2bf0
xor eax,eax
mov [edi+0x4c],eax
mov eax,[edi+0x54]
test eax,eax
jz 0x4ee3b
call dword 0x2bf0
mov edx,ebx
and dl,0xfc
mov eax,edi
call dword 0x1a5e8
test bl,bl
jng 0x4ee52
mov eax,edi
call dword 0x2f64
pop edi
pop esi
pop ebx
ret
mov eax,eax
push ebp
mov ebp,esp
push byte +0x0
push ebx
mov ebx,eax
xor eax,eax
push ebp
push dword 0x44ff05
push dword [fs:eax]
mov [fs:eax],esp
mov dl,0x1
mov eax,[0x41294c]
call dword 0x2bc0
mov [ebx+0x4c],eax
mov eax,[ebx+0x30]
cmp eax,byte +0x1
jl 0x4ee92
cmp eax,0x8000
jg 0x4ee92
cmp dword [ebx+0x34],byte +0x1
jnl 0x4eeb3
lea edx,[ebp-0x4]
mov eax,[0x468b9c]
call dword 0x5750
mov ecx,[ebp-0x4]
mov dl,0x1
mov eax,[0x4128ec]
call dword 0xb450
call dword 0x3464
mov dword [ebx+0x38],0x4
mov byte [ebx+0x41],0x1
mov dl,0x2
mov eax,ebx
call dword 0x4f970
mov byte [ebx+0x43],0x0
mov dword [ebx+0x44],0x1fffffff
mov dword [ebx+0x48],0x1fffffff
mov dl,0x1
mov eax,[0x41fb38]
call dword 0x249f4
mov [ebx+0x50],eax
mov eax,ebx
call dword 0x4ef24
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x44ff0c
lea eax,[ebp-0x4]
call dword 0x3a1c
ret
jmp dword 0x3384
jmp short 0x4eefc
pop ebx
pop ecx
pop ebp
ret
cmp dword [eax+0x3c],byte +0x0
setnz al
ret
cmp dword [eax+0x3c],byte +0x0
jnz 0x4ef23
call dword 0x4f0e8
ret
push ebp
mov ebp,esp
add esp,byte -0x18
push ebx
mov [ebp-0x4],eax
push byte +0x0
call dword 0x5fe0
mov [ebp-0x8],eax
xor eax,eax
push ebp
push dword 0x44ffc5
push dword [fs:eax]
mov [fs:eax],esp
mov eax,[ebp-0x4]
mov ebx,[eax+0x50]
mov eax,[ebp-0x4]
mov eax,[eax+0x30]
push eax
mov eax,[ebp-0x4]
mov eax,[eax+0x34]
push eax
mov eax,[ebp-0x8]
push eax
call dword 0x5c68
mov edx,eax
mov eax,ebx
call dword 0x25af0
mov eax,ebx
call dword 0x24fc8
mov eax,[eax+0x14]
xor edx,edx
call dword 0x20454
mov eax,ebx
mov edx,[eax]
call dword [edx+0x20]
push eax
lea eax,[ebp-0x18]
push eax
mov eax,ebx
mov edx,[eax]
call dword [edx+0x2c]
mov ecx,eax
xor edx,edx
xor eax,eax
call dword 0x12a2c
lea eax,[ebp-0x18]
push eax
mov eax,ebx
call dword 0x24fc8
pop edx
call dword 0x207f8
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x44ffcc
mov eax,[ebp-0x8]
push eax
push byte +0x0
call dword 0x6250
ret
jmp dword 0x3384
jmp short 0x4efb9
mov eax,[ebp-0x4]
mov eax,[eax+0x54]
test eax,eax
jz 0x4efe3
call dword 0x2bf0
mov eax,[ebp-0x4]
xor edx,edx
mov [eax+0x54],edx
pop ebx
mov esp,ebp
pop ebp
ret
push ebx
add esp,byte -0x8
mov ebx,eax
mov eax,[ebx+0x34]
mov [esp+0x4],eax
mov eax,[ebx+0x30]
mov [esp],eax
push esp
lea eax,[esp+0x8]
push eax
push edx
call dword 0x1d4a0
mov eax,[esp+0x4]
mov [ebx+0x34],eax
mov eax,[esp]
mov [ebx+0x30],eax
mov eax,ebx
call dword 0x4ef24
pop ecx
pop edx
pop ebx
ret
nop
push ebx
push esi
mov esi,edx
mov ebx,eax
mov eax,ebx
call dword 0x4f0b0
test esi,esi
jz 0x4f048
mov edx,esi
mov eax,ebx
call dword 0x4efe8
mov [ebx+0x3c],esi
mov eax,ebx
mov si,0xffef
call dword 0x2dec
pop esi
pop ebx
ret
nop
push ebx
mov ebx,eax
mov eax,ebx
call dword 0x4ef18
mov eax,[ebx+0x3c]
pop ebx
ret
nop
push ebx
push esi
push edi
mov edi,ecx
mov esi,edx
mov ebx,eax
mov edx,esi
mov eax,ebx
call dword 0x4f8f8
test esi,esi
jz 0x4f0a1
mov eax,esi
call dword 0x25034
cmp al,0x1
jnz 0x4f086
mov eax,esi
mov edx,[eax]
call dword [edx+0x68]
jmp short 0x4f0a9
mov edx,esi
mov eax,edi
mov ecx,[eax]
call dword [ecx+0x8]
mov dl,0x1
mov eax,edi
mov ecx,[eax]
call dword [ecx+0x70]
mov eax,edi
mov edx,[eax]
call dword [edx+0x68]
jmp short 0x4f0a9
mov eax,[ebx+0x50]
mov edx,[eax]
call dword [edx+0x68]
pop edi
pop esi
pop ebx
ret
lea eax,[eax+0x0]
push ebx
push esi
mov ebx,eax
mov eax,ebx
call dword 0x4ef10
test al,al
jz 0x4f0d2
cmp byte [ebx+0x42],0x0
jnz 0x4f0d2
mov eax,ebx
call dword 0x4f04c
push eax
call dword 0x1d418
xor eax,eax
mov [ebx+0x3c],eax
mov eax,ebx
mov si,0xffef
call dword 0x2dec
pop esi
pop ebx
ret
lea eax,[eax+0x0]
push ebp
mov ebp,esp
push byte +0x0
push ebx
push esi
mov ebx,eax
xor eax,eax
push ebp
push dword 0x45017a
push dword [fs:eax]
mov [fs:eax],esp
mov esi,[ebx+0x38]
push esi
push esi
movzx eax,byte [ebx+0x41]
mov eax,[eax*4+0x468768]
or eax,0xfe
push eax
mov eax,[ebx+0x30]
push eax
mov eax,[ebx+0x34]
push eax
call dword 0x1d410
mov [ebx+0x3c],eax
mov eax,ebx
call dword 0x4ef10
test al,al
jnz 0x4f151
lea edx,[ebp-0x4]
mov eax,[0x468d44]
call dword 0x5750
mov ecx,[ebp-0x4]
mov dl,0x1
mov eax,[0x4128ec]
call dword 0xb450
call dword 0x3464
mov eax,[ebx+0x44]
cmp eax,0x1fffffff
jz 0x4f164
mov edx,eax
mov eax,ebx
call dword 0x4f310
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x450181
lea eax,[ebp-0x4]
call dword 0x3a1c
ret
jmp dword 0x3384
jmp short 0x4f171
pop esi
pop ebx
pop ecx
pop ebp
ret
mov eax,eax
push ebp
mov ebp,esp
add esp,byte -0x10
push ebx
push esi
mov esi,ecx
mov ebx,edx
mov [ebp-0x4],eax
mov dl,0x1
mov eax,[0x41fb38]
call dword 0x249f4
mov [ebp-0xc],eax
xor eax,eax
push ebp
push dword 0x450237
push dword [fs:eax]
mov [fs:eax],esp
mov dl,0x1
mov eax,[0x41fb38]
call dword 0x249f4
mov [ebp-0x10],eax
xor eax,eax
push ebp
push dword 0x45021a
push dword [fs:eax]
mov [fs:eax],esp
mov eax,[ebp-0x4]
call dword 0x4ef18
mov ecx,[ebp-0x10]
mov edx,esi
mov eax,[ebp-0x4]
call dword 0x4f05c
push eax
mov ecx,[ebp-0xc]
mov edx,ebx
mov eax,[ebp-0x4]
call dword 0x4f05c
push eax
mov eax,[ebp-0x4]
mov eax,[eax+0x3c]
push eax
call dword 0x1d430
mov [ebp-0x8],eax
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x450221
mov eax,[ebp-0x10]
call dword 0x2bf0
ret
jmp dword 0x3384
jmp short 0x4f211
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x45023e
mov eax,[ebp-0xc]
call dword 0x2bf0
ret
jmp dword 0x3384
jmp short 0x4f22e
mov eax,[ebp-0x4]
mov si,0xffef
call dword 0x2dec
mov eax,[ebp-0x8]
pop esi
pop ebx
mov esp,ebp
pop ebp
ret
nop
push ebx
mov ebx,eax
mov eax,ebx
call dword 0x4ef10
test al,al
jz 0x4f271
mov eax,ebx
call dword 0x4f04c
push eax
call dword 0x1d420
pop ebx
ret
xor eax,eax
pop ebx
ret
lea eax,[eax+0x0]
push ebp
mov ebp,esp
push byte +0x0
push ebx
push esi
mov esi,edx
mov ebx,eax
xor eax,eax
push ebp
push dword 0x4502f7
push dword [fs:eax]
mov [fs:eax],esp
mov eax,ebx
call dword 0x4f254
cmp esi,eax
jl 0x4f2bd
lea edx,[ebp-0x4]
mov eax,[0x468bac]
call dword 0x5750
mov ecx,[ebp-0x4]
mov dl,0x1
mov eax,[0x4128ec]
call dword 0xb450
call dword 0x3464
mov eax,ebx
call dword 0x4ef10
test al,al
jz 0x4f2d6
push esi
mov eax,ebx
call dword 0x4f04c
push eax
call dword 0x1d458
mov eax,ebx
mov si,0xffef
call dword 0x2dec
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x4502fe
lea eax,[ebp-0x4]
call dword 0x3a1c
ret
jmp dword 0x3384
jmp short 0x4f2ee
pop esi
pop ebx
pop ecx
pop ebp
ret
nop
or edx,byte -0x1
call dword 0x4f278
ret
lea eax,[eax+0x0]
push ebx
push esi
mov esi,edx
mov ebx,eax
mov eax,ebx
call dword 0x4ef10
test al,al
jz 0x4f334
mov eax,esi
call dword 0x4ed60
push eax
mov eax,[ebx+0x3c]
push eax
call dword 0x1d438
jmp short 0x4f337
mov [ebx+0x44],esi
mov eax,ebx
mov si,0xffef
call dword 0x2dec
pop esi
pop ebx
ret
lea eax,[eax+0x0]
push ebx
mov ebx,eax
mov eax,ebx
call dword 0x4ef10
test al,al
jz 0x4f36a
mov eax,ebx
call dword 0x4f04c
push eax
call dword 0x1d440
call dword 0x4ed80
pop ebx
ret
mov eax,[ebx+0x44]
pop ebx
ret
nop
push ebp
mov ebp,esp
add esp,byte -0x28
push ebx
push esi
push edi
mov edi,ecx
mov [ebp-0x4],edx
mov ebx,eax
mov eax,ebx
call dword 0x4ef10
test al,al
jz dword 0x4f53b
cmp byte [ebp+0x8],0x0
jz 0x4f3d9
mov eax,[ebp+0xc]
push eax
mov eax,[ebx+0x48]
call dword 0x4ed60
push eax
mov eax,ebx
call dword 0x4f348
call dword 0x4ed60
push eax
push byte +0x0
push byte +0x0
mov eax,[ebp+0x10]
push eax
mov eax,[ebp+0x14]
push eax
mov eax,edi
call dword 0x20b30
push eax
mov eax,[ebp-0x4]
push eax
mov eax,ebx
call dword 0x4f04c
push eax
call dword 0x1d450
jmp dword 0x4f53b
cmp dword [ebx+0x54],byte +0x0
jnz 0x4f40d
mov dl,0x1
mov eax,[0x41fb38]
call dword 0x249f4
mov esi,eax
mov [ebx+0x54],esi
mov dl,0x1
mov eax,esi
call dword 0x25d0c
mov edx,[ebx+0x34]
mov eax,esi
mov ecx,[eax]
call dword [ecx+0x40]
mov edx,[ebx+0x30]
mov eax,esi
mov ecx,[eax]
call dword [ecx+0x34]
mov eax,[ebx+0x54]
call dword 0x24fc8
mov eax,[eax+0x14]
mov edx,0xffffff
call dword 0x20454
mov eax,[ebx+0x30]
push eax
lea eax,[ebp-0x28]
push eax
mov ecx,[ebx+0x34]
xor edx,edx
xor eax,eax
call dword 0x12a2c
lea eax,[ebp-0x28]
push eax
mov eax,[ebx+0x54]
call dword 0x24fc8
pop edx
call dword 0x207f8
push byte +0x0
push byte +0x0
push byte -0x1
push byte +0x0
push byte +0x0
push byte +0x0
push byte +0x0
mov eax,[ebx+0x54]
call dword 0x24fc8
call dword 0x20b30
push eax
mov eax,[ebp-0x4]
push eax
mov eax,ebx
call dword 0x4f04c
push eax
call dword 0x1d450
mov eax,[ebp+0x10]
add eax,[ebx+0x30]
push eax
lea eax,[ebp-0x18]
push eax
mov ecx,[ebp+0x14]
add ecx,[ebx+0x34]
mov edx,[ebp+0x10]
mov eax,[ebp+0x14]
call dword 0x12a2c
mov eax,[ebx+0x54]
call dword 0x24fc8
call dword 0x20b30
mov [ebp-0x8],eax
mov eax,[edi+0x14]
mov edx,0xff000014
call dword 0x20454
mov eax,edi
call dword 0x20b30
mov esi,eax
push dword 0xffffff
push esi
call dword 0x5e20
push byte +0x0
push esi
call dword 0x5de0
push dword 0xe20746
push byte +0x0
push byte +0x0
mov eax,[ebp-0x8]
push eax
mov eax,[ebx+0x30]
push eax
mov eax,[ebx+0x34]
push eax
mov eax,[ebp+0x10]
inc eax
push eax
mov eax,[ebp+0x14]
inc eax
push eax
push esi
call dword 0x5c48
mov eax,[edi+0x14]
mov edx,0xff000010
call dword 0x20454
mov eax,edi
call dword 0x20b30
mov esi,eax
push dword 0xffffff
push esi
call dword 0x5e20
push byte +0x0
push esi
call dword 0x5de0
push dword 0xe20746
push byte +0x0
push byte +0x0
mov eax,[ebp-0x8]
push eax
mov eax,[ebx+0x30]
push eax
mov eax,[ebx+0x34]
push eax
mov eax,[ebp+0x10]
push eax
mov eax,[ebp+0x14]
push eax
push esi
call dword 0x5c48
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret 0x10
push ebp
mov ebp,esp
push ebx
mov ebx,[ebp+0x10]
push ebx
mov ebx,[ebp+0xc]
push ebx
movzx ebx,byte [eax+0x40]
push ebx
movzx ebx,byte [eax+0x43]
push ebx
movzx ebx,byte [ebp+0x8]
push ebx
call dword 0x4f56c
pop ebx
pop ebp
ret 0xc
lea eax,[eax+0x0]
push ebp
mov ebp,esp
push ebx
push esi
push edi
mov edi,ecx
mov esi,edx
mov ebx,eax
mov eax,ebx
call dword 0x4ef10
test al,al
jz 0x4f5b0
push edi
mov eax,[ebp+0x18]
push eax
movzx eax,byte [ebp+0x10]
mov eax,[eax*4+0x468750]
movzx edx,byte [ebp+0xc]
or eax,[edx*4+0x468760]
push eax
movzx eax,byte [ebp+0x8]
push eax
mov ecx,esi
mov edx,[ebp+0x14]
mov eax,ebx
mov ebx,[eax]
call dword [ebx+0x30]
pop edi
pop esi
pop ebx
pop ebp
ret 0x14
nop
push ebp
mov ebp,esp
add esp,byte -0x28
push ebx
push esi
push edi
mov edi,ecx
mov [ebp-0x8],edx
mov [ebp-0x4],eax
mov eax,[ebp-0x4]
mov eax,[eax+0x30]
push eax
lea eax,[ebp-0x28]
push eax
mov eax,[ebp-0x4]
mov ecx,[eax+0x34]
xor edx,edx
xor eax,eax
call dword 0x12a2c
mov eax,[ebp-0x4]
call dword 0x5027c
xor eax,eax
push ebp
push dword 0x450751
push dword [fs:eax]
mov [fs:eax],esp
mov dl,0x1
mov eax,[0x41fb38]
call dword 0x249f4
mov [ebp-0xc],eax
xor eax,eax
push ebp
push dword 0x450734
push dword [fs:eax]
mov [fs:eax],esp
mov eax,[ebp-0x4]
mov edx,[eax+0x30]
mov eax,[ebp-0xc]
mov ecx,[eax]
call dword [ecx+0x34]
mov eax,[ebp-0x4]
mov edx,[eax+0x34]
mov eax,[ebp-0xc]
mov ecx,[eax]
call dword [ecx+0x40]
mov dl,0x1
mov eax,[0x41fb38]
call dword 0x249f4
mov [ebp-0x10],eax
xor eax,eax
push ebp
push dword 0x450717
push dword [fs:eax]
mov [fs:eax],esp
mov dl,0x1
mov eax,[ebp-0x10]
call dword 0x25d0c
mov eax,[ebp-0x4]
mov edx,[eax+0x30]
mov eax,[ebp-0x10]
mov ecx,[eax]
call dword [ecx+0x34]
mov eax,[ebp-0x4]
mov edx,[eax+0x34]
mov eax,[ebp-0x10]
mov ecx,[eax]
call dword [ecx+0x40]
mov eax,[ebp-0x8]
push eax
call dword 0x1d420
mov esi,eax
dec esi
test esi,esi
jl 0x4f701
inc esi
xor ebx,ebx
cmp edi,byte -0x1
jz 0x4f691
cmp ebx,edi
jnz 0x4f6fd
mov eax,[ebp-0xc]
call dword 0x24fc8
mov [ebp-0x14],eax
lea edx,[ebp-0x28]
mov eax,[ebp-0x14]
call dword 0x207f8
push byte +0x0
push byte +0x0
push byte +0x0
mov eax,[ebp-0x14]
call dword 0x20b30
push eax
push ebx
mov eax,[ebp-0x8]
push eax
call dword 0x1d448
mov eax,[ebp-0x10]
call dword 0x24fc8
mov [ebp-0x18],eax
lea edx,[ebp-0x28]
mov eax,[ebp-0x18]
call dword 0x207f8
push byte +0x10
push byte +0x0
push byte +0x0
mov eax,[ebp-0x18]
call dword 0x20b30
push eax
push ebx
mov eax,[ebp-0x8]
push eax
call dword 0x1d448
mov ecx,[ebp-0x10]
mov edx,[ebp-0xc]
mov eax,[ebp-0x4]
call dword 0x4f188
inc ebx
dec esi
jnz 0x4f688
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x45071e
mov eax,[ebp-0x10]
call dword 0x2bf0
ret
jmp dword 0x3384
jmp short 0x4f70e
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x45073b
mov eax,[ebp-0xc]
call dword 0x2bf0
ret
jmp dword 0x3384
jmp short 0x4f72b
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x450758
mov eax,[ebp-0x4]
call dword 0x50280
ret
jmp dword 0x3384
jmp short 0x4f748
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret
nop
push ebx
push esi
mov esi,edx
mov ebx,eax
test esi,esi
jz 0x4f77d
mov eax,esi
call dword 0x4f04c
mov edx,eax
or ecx,byte -0x1
mov eax,ebx
call dword 0x4f5b8
pop esi
pop ebx
ret
push ebx
push esi
mov esi,edx
mov ebx,eax
test esi,esi
jnz 0x4f794
mov eax,ebx
call dword 0x4f0b0
pop esi
pop ebx
ret
mov eax,esi
mov edx,[dword 0x44fc88]
call dword 0x2d7c
test al,al
jz dword 0x4f835
mov eax,ebx
call dword 0x4f304
movzx eax,byte [esi+0x41]
mov [ebx+0x41],al
movzx eax,byte [esi+0x43]
mov [ebx+0x43],al
movzx edx,byte [esi+0x40]
mov eax,ebx
call dword 0x4f970
movzx eax,byte [esi+0x42]
mov [ebx+0x42],al
mov eax,esi
call dword 0x4f04c
mov edx,eax
mov eax,ebx
call dword 0x4efe8
mov eax,ebx
call dword 0x4ef10
test al,al
jnz 0x4f7f4
mov eax,ebx
call dword 0x4ef18
jmp short 0x4f809
mov eax,[ebx+0x30]
push eax
mov eax,[ebx+0x34]
push eax
mov eax,ebx
call dword 0x4f04c
push eax
call dword 0x1d4a8
mov eax,esi
call dword 0x4f04c
push eax
call dword 0x1d440
call dword 0x4ed80
mov edx,eax
mov eax,ebx
call dword 0x4f310
mov eax,[esi+0x48]
mov [ebx+0x48],eax
mov edx,esi
mov eax,ebx
call dword 0x4f760
jmp short 0x4f83e
mov edx,esi
mov eax,ebx
call dword 0x1447c
pop esi
pop ebx
ret
lea eax,[eax+0x0]
push ebx
push esi
mov ebx,edx
mov esi,eax
mov eax,ebx
mov edx,[dword 0x44fc88]
call dword 0x2d7c
test al,al
jz dword 0x4f8ec
movzx eax,byte [esi+0x41]
mov [ebx+0x41],al
movzx eax,byte [esi+0x43]
mov [ebx+0x43],al
movzx edx,byte [esi+0x40]
mov eax,ebx
call dword 0x4f970
movzx eax,byte [esi+0x42]
mov [ebx+0x42],al
mov eax,[esi+0x48]
mov [ebx+0x48],eax
mov eax,ebx
call dword 0x4f304
mov eax,esi
call dword 0x4f04c
mov edx,eax
mov eax,ebx
call dword 0x4efe8
mov eax,ebx
call dword 0x4ef10
test al,al
jnz 0x4f8b0
mov eax,ebx
call dword 0x4ef18
jmp short 0x4f8c5
mov eax,[ebx+0x30]
push eax
mov eax,[ebx+0x34]
push eax
mov eax,ebx
call dword 0x4f04c
push eax
call dword 0x1d4a8
mov eax,esi
call dword 0x4f04c
push eax
call dword 0x1d440
call dword 0x4ed80
mov edx,eax
mov eax,ebx
call dword 0x4f310
mov edx,esi
mov eax,ebx
call dword 0x4f760
pop esi
pop ebx
ret
mov edx,ebx
mov eax,esi
call dword 0x14560
pop esi
pop ebx
ret
push ebp
mov ebp,esp
push byte +0x0
push ebx
push esi
mov esi,edx
mov ebx,eax
xor eax,eax
push ebp
push dword 0x450964
push dword [fs:eax]
mov [fs:eax],esp
test esi,esi
jz 0x4f94e
mov eax,esi
mov edx,[eax]
call dword [edx+0x20]
cmp eax,[ebx+0x30]
jl 0x4f92d
mov eax,esi
mov edx,[eax]
call dword [edx+0x2c]
cmp eax,[ebx+0x34]
jnl 0x4f94e
lea edx,[ebp-0x4]
mov eax,[0x468b9c]
call dword 0x5750
mov ecx,[ebp-0x4]
mov dl,0x1
mov eax,[0x4128ec]
call dword 0xb450
call dword 0x3464
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x45096b
lea eax,[ebp-0x4]
call dword 0x3a1c
ret
jmp dword 0x3384
jmp short 0x4f95b
pop esi
pop ebx
pop ecx
pop ebp
ret
push esi
mov esi,eax
cmp dl,[esi+0x40]
jz 0x4f986
mov [esi+0x40],dl
mov eax,esi
mov si,0xffef
call dword 0x2dec
pop esi
ret
push ebx
mov ebx,edx
mov ecx,ebx
xor edx,edx
xor eax,eax
call dword 0x12a04
pop ebx
ret
push ebx
push esi
push edi
push ebp
mov ebx,eax
mov byte [ebx+0x58],0x1
cmp dword [ebx+0x5c],byte +0x0
jg 0x4f9e0
mov eax,[ebx+0x4c]
test eax,eax
jz 0x4f9d1
mov edi,[eax+0x8]
dec edi
test edi,edi
jl 0x4f9d1
inc edi
xor ebp,ebp
mov edx,ebp
mov eax,[ebx+0x4c]
call dword 0x13e7c
mov si,0xffff
call dword 0x2dec
inc ebp
dec edi
jnz 0x4f9ba
cmp word [ebx+0x62],byte +0x0
jz 0x4f9e0
mov edx,ebx
mov eax,[ebx+0x64]
call dword [ebx+0x60]
pop ebp
pop edi
pop esi
pop ebx
ret
lea eax,[eax+0x0]
push ebx
push esi
push edi
push ebp
mov ebp,edx
mov ebx,eax
mov eax,[ebx+0x4c]
test eax,eax
jz 0x4fa25
mov edi,[eax+0x8]
dec edi
test edi,edi
jl 0x4fa25
inc edi
xor esi,esi
mov edx,esi
mov eax,[ebx+0x4c]
call dword 0x13e7c
cmp ebp,eax
jnz 0x4fa21
xor eax,eax
mov [ebp+0x4],eax
mov edx,esi
mov eax,[ebx+0x4c]
call dword 0x13d70
jmp short 0x4fa25
inc esi
dec edi
jnz 0x4fa02
pop ebp
pop edi
pop esi
pop ebx
ret
mov eax,eax
mov [edx+0x4],eax
mov ecx,[eax+0x4c]
test ecx,ecx
jz 0x4fa3d
mov eax,ecx
call dword 0x13d24
ret
mov eax,eax
push ebx
push esi
mov esi,edx
mov ebx,eax
mov eax,ebx
mov edx,[eax]
call dword [edx]
push edx
push eax
mov eax,esi
mov edx,[eax]
call dword [edx]
cmp edx,[esp+0x4]
jnz 0x4fa5d
cmp eax,[esp]
pop edx
pop eax
jnz 0x4fa78
mov eax,ebx
mov edx,[eax]
call dword [edx]
mov ecx,eax
mov edx,[esi+0x4]
mov eax,[ebx+0x4]
call dword 0x76f0
test al,al
jnz 0x4fa7d
xor eax,eax
pop esi
pop ebx
ret
mov al,0x1
pop esi
pop ebx
ret
mov eax,eax
push ebp
mov ebp,esp
add esp,byte -0xc
push ebx
push esi
push edi
mov edi,edx
mov esi,eax
test edi,edi
jz 0x4faa9
mov eax,esi
call dword 0x4f254
mov ebx,eax
mov eax,edi
call dword 0x4f254
cmp ebx,eax
jz 0x4fab2
mov byte [ebp-0x1],0x0
jmp dword 0x4fb67
mov eax,esi
call dword 0x4f254
test eax,eax
jnz 0x4fad1
mov eax,edi
call dword 0x4f254
test eax,eax
jnz 0x4fad1
mov byte [ebp-0x1],0x1
jmp dword 0x4fb67
mov dl,0x1
mov eax,[0x413200]
call dword 0x2bc0
mov [ebp-0x8],eax
xor eax,eax
push ebp
push dword 0x450b60
push dword [fs:eax]
mov [fs:eax],esp
mov edx,[ebp-0x8]
mov eax,esi
mov ecx,[eax]
call dword [ecx+0x3c]
mov dl,0x1
mov eax,[0x413200]
call dword 0x2bc0
mov [ebp-0xc],eax
xor eax,eax
push ebp
push dword 0x450b43
push dword [fs:eax]
mov [fs:eax],esp
mov edx,[ebp-0xc]
mov eax,edi
mov ecx,[eax]
call dword [ecx+0x3c]
mov edx,[ebp-0xc]
mov eax,[ebp-0x8]
call dword 0x4fa40
mov [ebp-0x1],al
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x450b4a
mov eax,[ebp-0xc]
call dword 0x2bf0
ret
jmp dword 0x3384
jmp short 0x4fb3a
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x450b67
mov eax,[ebp-0x8]
call dword 0x2bf0
ret
jmp dword 0x3384
jmp short 0x4fb57
movzx eax,byte [ebp-0x1]
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret
mov eax,eax
push ebp
mov ebp,esp
push ebx
mov eax,[ebp+0x8]
mov eax,[eax-0x4]
cmp dword [eax+0x20],byte +0x0
jz 0x4fbbb
mov eax,[ebp+0x8]
mov eax,[eax-0x4]
mov ebx,[eax+0x20]
mov eax,ebx
mov edx,[dword 0x44fc88]
call dword 0x2d7c
test al,al
jz 0x4fbb6
mov eax,[ebp+0x8]
mov edx,ebx
mov eax,[ebp+0x8]
mov eax,[eax-0x8]
call dword 0x4fa84
test al,al
jz 0x4fbb6
xor eax,eax
jmp short 0x4fbcb
mov al,0x1
pop ebx
pop ebp
ret
mov eax,[ebp+0x8]
mov eax,[eax-0x8]
call dword 0x4f254
test eax,eax
setg al
pop ebx
pop ebp
ret
mov eax,eax
push ebp
mov ebp,esp
add esp,byte -0x8
push ebx
mov [ebp-0x4],edx
mov [ebp-0x8],eax
mov edx,[ebp-0x4]
mov eax,[ebp-0x8]
call dword 0x1a92c
mov eax,[ebp-0x8]
push eax
mov eax,[eax]
mov eax,[eax+0x38]
push eax
mov eax,[ebp-0x8]
push eax
mov eax,[eax]
mov eax,[eax+0x3c]
push eax
push ebp
call dword 0x4fb74
pop ecx
mov ecx,eax
mov edx,0x450c20
mov eax,[ebp-0x4]
mov ebx,[eax]
call dword [ebx+0x8]
pop ebx
pop ecx
pop ecx
pop ebp
ret
add bh,bh
db 0xff
db 0xff
inc dword [esi]
add [eax],al
add [edx+0x69],al
jz 0x4fc91
popad
jo 0x4fc27
add [ebp-0x75],dl
in al,dx
add esp,byte -0x40
push ebx
push esi
push edi
mov ebx,edx
mov [ebp-0x4],eax
lea edx,[ebp-0x18]
mov ecx,0x4
mov eax,ebx
call dword 0x166d4
lea edx,[ebp-0x1c]
mov ecx,0x4
mov eax,ebx
call dword 0x166d4
mov dl,0x1
mov eax,[0x41fb38]
call dword 0x249f4
mov [ebp-0x8],eax
xor eax,eax
push ebp
push dword 0x450eac
push dword [fs:eax]
mov [fs:eax],esp
mov eax,ebx
call dword 0x164a8
mov esi,eax
mov edx,ebx
mov eax,[ebp-0x8]
mov ecx,[eax]
call dword [ecx+0x54]
mov eax,[ebp-0x18]
add eax,esi
cdq
push edx
push eax
mov eax,ebx
call dword 0x164c8
mov dl,0x1
mov eax,[0x41fb38]
call dword 0x249f4
mov [ebp-0x10],eax
xor eax,eax
push ebp
push dword 0x450e8f
push dword [fs:eax]
mov [fs:eax],esp
mov edx,ebx
mov eax,[ebp-0x10]
mov ecx,[eax]
call dword [ecx+0x54]
mov dl,0x1
mov eax,[0x41fb38]
call dword 0x249f4
mov [ebp-0xc],eax
mov eax,[ebp-0x4]
mov edx,[eax+0x34]
mov eax,[ebp-0xc]
mov ecx,[eax]
call dword [ecx+0x40]
mov eax,[ebp-0x4]
mov edx,[eax+0x30]
mov eax,[ebp-0xc]
mov ecx,[eax]
call dword [ecx+0x34]
mov dl,0x1
mov eax,[0x41fb38]
call dword 0x249f4
mov [ebp-0x14],eax
mov dl,0x1
mov eax,[ebp-0x14]
call dword 0x25d0c
mov eax,[ebp-0x4]
mov edx,[eax+0x34]
mov eax,[ebp-0x14]
mov ecx,[eax]
call dword [ecx+0x40]
mov eax,[ebp-0x4]
mov edx,[eax+0x30]
mov eax,[ebp-0x14]
mov ecx,[eax]
call dword [ecx+0x34]
mov eax,[ebp-0x4]
mov eax,[eax+0x30]
push eax
lea eax,[ebp-0x30]
push eax
mov eax,[ebp-0x4]
mov ecx,[eax+0x34]
xor edx,edx
xor eax,eax
call dword 0x12a2c
mov eax,[ebp-0x4]
call dword 0x5027c
xor eax,eax
push ebp
push dword 0x450e72
push dword [fs:eax]
mov [fs:eax],esp
mov eax,[ebp-0x8]
mov edx,[eax]
call dword [edx+0x20]
mov edx,[ebp-0x4]
mov ecx,[edx+0x30]
cdq
idiv ecx
dec eax
test eax,eax
jl dword 0x4fe4c
inc eax
mov [ebp-0x20],eax
xor edi,edi
cmp dword [ebp-0x1c],byte +0x0
jz dword 0x4fe4c
mov eax,[ebp-0x8]
mov edx,[eax]
call dword [edx+0x2c]
mov edx,[ebp-0x4]
mov ecx,[edx+0x34]
cdq
idiv ecx
mov esi,eax
dec esi
test esi,esi
jl dword 0x4fe42
inc esi
xor ebx,ebx
cmp dword [ebp-0x1c],byte +0x0
jz dword 0x4fe42
mov eax,[ebp-0x4]
mov eax,[eax+0x30]
push eax
lea eax,[ebp-0x40]
push eax
mov eax,[ebp-0x4]
mov ecx,[eax+0x34]
mov eax,[ebp-0x4]
mov edx,[eax+0x30]
imul edx,edi
mov eax,[ebp-0x4]
mov eax,[eax+0x34]
imul eax,ebx
call dword 0x12a54
lea eax,[ebp-0x40]
push eax
mov eax,[ebp-0x8]
call dword 0x24fc8
push eax
mov eax,[ebp-0xc]
call dword 0x24fc8
lea edx,[ebp-0x30]
pop ecx
call dword 0x206c4
mov eax,[ebp-0x4]
mov eax,[eax+0x30]
push eax
lea eax,[ebp-0x40]
push eax
mov eax,[ebp-0x4]
mov ecx,[eax+0x34]
mov eax,[ebp-0x4]
mov edx,[eax+0x30]
imul edx,edi
mov eax,[ebp-0x4]
mov eax,[eax+0x34]
imul eax,ebx
call dword 0x12a54
lea eax,[ebp-0x40]
push eax
mov eax,[ebp-0x10]
call dword 0x24fc8
push eax
mov eax,[ebp-0x14]
call dword 0x24fc8
lea edx,[ebp-0x30]
pop ecx
call dword 0x206c4
mov ecx,[ebp-0x14]
mov edx,[ebp-0xc]
mov eax,[ebp-0x4]
call dword 0x4f188
dec dword [ebp-0x1c]
inc ebx
dec esi
jnz dword 0x4fd93
inc edi
dec dword [ebp-0x20]
jnz dword 0x4fd6a
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x450e79
mov eax,[ebp-0xc]
call dword 0x2bf0
mov eax,[ebp-0x14]
call dword 0x2bf0
mov eax,[ebp-0x4]
call dword 0x50280
ret
jmp dword 0x3384
jmp short 0x4fe59
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x450e96
mov eax,[ebp-0x10]
call dword 0x2bf0
ret
jmp dword 0x3384
jmp short 0x4fe86
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x450eb3
mov eax,[ebp-0x8]
call dword 0x2bf0
ret
jmp dword 0x3384
jmp short 0x4fea3
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret
mov eax,eax
push ebp
mov ebp,esp
add esp,byte -0x14
push ebx
push esi
mov [ebp-0x8],edx
mov [ebp-0x4],eax
push byte +0x0
mov ecx,[ebp-0x8]
mov dl,0x1
mov eax,[0x413408]
call dword 0x1b0b8
mov [ebp-0xc],eax
xor eax,eax
push ebp
push dword 0x450f1c
push dword [fs:eax]
mov [fs:eax],esp
mov eax,[ebp-0xc]
test eax,eax
jz 0x4fef6
sub eax,byte -0x14
push eax
call dword 0x1d490
mov edx,eax
mov eax,[ebp-0x4]
call dword 0x4f020
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x450f23
mov eax,[ebp-0xc]
call dword 0x2bf0
ret
jmp dword 0x3384
jmp short 0x4ff13
mov eax,[ebp-0x4]
call dword 0x4ef10
test al,al
jnz dword 0x5007d
xor ebx,ebx
mov dl,0x1
mov eax,[0x413200]
call dword 0x2bc0
mov [ebp-0x10],eax
xor eax,eax
push ebp
push dword 0x451053
push dword [fs:eax]
mov [fs:eax],esp
push byte +0x0
push byte +0x0
mov eax,[ebp-0x8]
call dword 0x164c8
mov edx,[ebp-0x8]
mov eax,[ebp-0x10]
call dword 0x16c60
push byte +0x0
push byte +0x12
mov eax,[ebp-0x10]
call dword 0x164c8
lea edx,[ebp-0x11]
mov ecx,0x1
mov eax,[ebp-0x10]
mov esi,[eax]
call dword [esi+0xc]
dec eax
jnz 0x4ffd4
cmp byte [ebp-0x11],0x1
jnz 0x4ffd4
push byte +0x0
push byte +0x38
mov eax,[ebp-0x10]
call dword 0x164c8
lea edx,[ebp-0x12]
mov ecx,0x1
mov eax,[ebp-0x10]
mov esi,[eax]
call dword [esi+0xc]
dec eax
jnz 0x4ffd4
movzx eax,byte [ebp-0x12]
or [ebp-0x11],al
push byte +0x0
push byte +0x12
mov eax,[ebp-0x10]
call dword 0x164c8
lea edx,[ebp-0x11]
mov ecx,0x1
mov eax,[ebp-0x10]
mov ebx,[eax]
call dword [ebx+0x10]
dec eax
setz bl
test bl,bl
jz 0x5003d
push byte +0x0
push byte +0x0
mov eax,[ebp-0x10]
call dword 0x164c8
push byte +0x0
mov ecx,[ebp-0x10]
mov dl,0x1
mov eax,[0x413408]
call dword 0x1b0b8
mov [ebp-0xc],eax
xor eax,eax
push ebp
push dword 0x451036
push dword [fs:eax]
mov [fs:eax],esp
mov eax,[ebp-0xc]
test eax,eax
jz 0x50010
sub eax,byte -0x14
push eax
call dword 0x1d490
mov edx,eax
mov eax,[ebp-0x4]
call dword 0x4f020
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x45103d
mov eax,[ebp-0xc]
call dword 0x2bf0
ret
jmp dword 0x3384
jmp short 0x5002d
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x45105a
mov eax,[ebp-0x10]
call dword 0x2bf0
ret
jmp dword 0x3384
jmp short 0x5004a
mov eax,[ebp-0x4]
call dword 0x4ef10
test al,al
jnz 0x5007d
mov ecx,[dword 0x468d7c]
mov dl,0x1
mov eax,[0x4125bc]
call dword 0xb50c
call dword 0x3464
pop esi
pop ebx
mov esp,ebp
pop ebp
ret
nop
push ebx
push esi
push edi
add esp,byte -0x10
mov edi,edx
mov esi,eax
mov eax,esi
call dword 0x4f0b0
mov eax,edi
call dword 0x164a8
mov [esp+0xc],eax
mov edx,esp
mov ecx,0x4
mov eax,edi
mov ebx,[eax]
call dword [ebx+0xc]
lea edx,[esp+0x4]
mov ecx,0x4
mov eax,edi
mov ebx,[eax]
call dword [ebx+0xc]
movzx ebx,byte [esp]
and bl,0xff
movzx eax,word [esp]
shr ax,byte 0x8
mov [esp+0x8],al
mov eax,[esp+0xc]
cdq
push edx
push eax
mov eax,edi
call dword 0x164c8
mov eax,[esp]
cmp eax,[esp+0x4]
jz 0x500ff
cmp bl,0x49
jnz 0x500ff
cmp byte [esp+0x8],0x4c
jnz 0x500ff
mov edx,edi
mov eax,esi
call dword 0x4febc
jmp short 0x50108
mov edx,edi
mov eax,esi
call dword 0x4fc28
call dword 0x4e314
call dword 0x4e41c
test al,al
jnz 0x50131
mov eax,esi
call dword 0x4f04c
push eax
call dword 0x1d420
push eax
mov eax,esi
call dword 0x4f04c
push eax
call dword 0x1d428
add esp,byte +0x10
pop edi
pop esi
pop ebx
ret
push ebp
mov ebp,esp
push ecx
push ebx
push esi
push edi
mov esi,edx
mov ebx,eax
cmp dword [dword 0x46dc90],byte +0x0
jnz 0x50187
mov eax,0x451248
call dword 0xbcb0
mov [0x46dc90],eax
cmp dword [dword 0x46dc90],0x60000

jc 0x50187
push dword 0x451258
call dword 0x5b48
mov edi,eax
test edi,edi
jz 0x50187
push dword 0x451268
push edi
call dword 0x5b50
mov [0x46dc94],eax
push byte +0x0
mov ecx,esi
mov dl,0x1
mov eax,[0x413408]
call dword 0x1b0b8
mov [ebp-0x4],eax
xor eax,eax
push ebp
push dword 0x451232
push dword [fs:eax]
mov [fs:eax],esp
cmp dword [dword 0x46dc94],byte +0x0
jz 0x501e9
mov eax,[ebp-0x4]
test eax,eax
jz 0x501bb
sub eax,byte -0x14
push eax
push byte +0x1
mov eax,ebx
call dword 0x4f04c
push eax
call dword [dword 0x46dc94]
test eax,eax
jz 0x5021c
mov ecx,[dword 0x468c18]
mov dl,0x1
mov eax,[0x412614]
call dword 0xb50c
call dword 0x3464
jmp short 0x5021c
mov eax,[ebp-0x4]
test eax,eax
jz 0x501f3
sub eax,byte -0x14
push eax
mov eax,ebx
call dword 0x4f04c
push eax
call dword 0x1d498
test eax,eax
jnz 0x5021c
mov ecx,[dword 0x468c18]
mov dl,0x1
mov eax,[0x412614]
call dword 0xb50c
call dword 0x3464
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x451239
mov eax,[ebp-0x4]
call dword 0x2bf0
ret
jmp dword 0x3384
jmp short 0x50229
pop edi
pop esi
pop ebx
pop ecx
pop ebp
ret
add bh,bh
db 0xff
db 0xff
dec dword [eax+eax]
add [eax],al
arpl [edi+0x6d],bp
arpl [esp+ebp*2+0x33],si
xor ch,[esi]
fs insb
insb
add [eax],al
add [eax],al
arpl [edi+0x6d],bp
arpl [esp+ebp*2+0x33],si
xor ch,[esi]
fs insb
insb
add [eax],al
add [eax],al
dec ecx
insd
popad
gs dec esp
imul esi,[ebx+0x74],dword 0x6972575f
jz 0x502dc
inc ebp
js 0x5027a
add [eax],al
inc dword [eax+0x5c]
ret
push esi
cmp dword [eax+0x5c],byte +0x0
jng 0x5028a
dec dword [eax+0x5c]
cmp byte [eax+0x58],0x0
jz 0x5029d
mov byte [eax+0x58],0x0
mov si,0xffef
call dword 0x2dec
pop esi
ret
nop
push ebx
push esi
call dword 0x2fbc
mov ebx,edx
mov esi,eax
mov eax,[esi+0x4]
test eax,eax
jz 0x502b9
mov edx,esi
call dword 0x4f9e8
mov edx,ebx
and dl,0xfc
mov eax,esi
call dword 0x2be0
test bl,bl
jng 0x502d0
mov eax,esi
call dword 0x2f64
pop esi
pop ebx
ret
nop
push ebx
cmp word [eax+0xa],byte +0x0
jz 0x502e7
mov ebx,eax
mov edx,[eax+0x4]
mov eax,[ebx+0xc]
call dword [ebx+0x8]
pop ebx
ret
lea eax,[eax+0x0]
cmp [ebx],dl
inc ebp
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax-0x3bffbaed],al
adc eax,[ebp+0x0]
add [eax],al
add [eax],al
add [eax],al
add [eax],al
xchg eax,edx
adc eax,[ebp+0x0]
lodsb
adc eax,[ebp+0x0]
pushad
add [eax],al
add [ecx+edi],cl
inc ecx
add [eax],ch
mov ebp,0x3e440041
inc eax
add [esi+esi*4+0x41],ah
add [esi+edi+0x40],cl
add [eax+0x3e],al
inc eax
add [eax-0x5bffbfc5],cl
cmp eax,[eax+0x0]
in al,0x17
inc ebp
add [eax+0x55],ah
inc ecx
add [ecx+edi*4],ch
inc ecx
add [esp+edx*2+0x41],bh
add [edx+edi*4],al
inc ecx
add [edi+edi*4+0x41],ch
add [eax+ebx+0x45],dl
add [ebx+edi*4],cl
inc ecx
add [eax-0x43],al
inc ecx
add [edx+edi*4],ah
inc ecx
add [edx+edi*4],bl
inc ecx
add [eax-0x43],cl
inc ecx
add al,al
mov esi,0xc02c0041
inc ecx
add al,dl
mov edi,0xbf640041
inc ecx
add [edi+edi*4-0x4097ffbf],dl
inc ecx
add [eax+0xe004519],ch
add [eax],al
add [eax],al
add [ecx],al
add [eax],al
add [eax+edx+0x580040],dl
add [eax],al
add al,0x0
clc
db 0xff
out dx,eax
push edx
push ecx
jmp dword [ecx+ebx]
inc ebp
add [eax+0x19],dl
inc ebp
add [eax+ebx],dh
inc ebp
add [eax+ebx+0x45],al
add [eax],dl
push esp
inc ebx
outsd
outsb
jz 0x50414
imul ebp,[esi+0x65],dword 0x74634164
imul ebp,[edi+0x6e],dword 0xc400408d
adc eax,[ebp+0x0]
pop es
adc [ebx+eax*2+0x6f],dl
outsb
jz 0x5042d
imul ebp,[esi+0x65],dword 0x74634164
imul ebp,[edi+0x6e],dword 0x451338
mov eax,0x3004139
add [eax],cl
inc ecx
arpl [esi+ebp*2+0x4c],si
imul esi,[ebx+0x74],dword 0x10940001
inc eax
add [eax+0x0],bl
add bh,bh
rcr byte [eax],1
inc ebp
add [eax],dh
sbb [ebp+0x0],al
add [eax],al
add [eax-0x80000000],al
add al,[eax]
or [ebx+0x61],al
jz 0x5046f
a16 outsd
jc 0x50487
mov eax,eax
pop esp
adc al,0x45
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add al,cl
adc al,0x45
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax-0x4dffbaec],bl
adc al,0x45
add [eax+0x0],ch
add [eax],al
sub al,0x37
inc ecx
add [eax],ch
mov ebp,0x3e440041
inc eax
add [esi+esi*4+0x41],ah
add [esi+edi+0x40],cl
add [eax+0x3e],al
inc eax
add [eax-0x5bffbfc5],cl
cmp eax,[eax+0x0]
insb
sbb al,[ebp+0x0]
pushad
push ebp
inc ecx
add [ecx+edi*4],ch
inc ecx
add [esp+edx*2+0x41],bh
add [edx+edi*4],al
inc ecx
add [eax+0x1400451b],dl
mov edx,0xbb0c0041
inc ecx
add [eax-0x43],al
inc ecx
add [edx+edi*4],ah
inc ecx
add [edx+edi*4],bl
inc ecx
add [eax-0x43],cl
inc ecx
add [eax],al
sbb al,[ebp+0x0]
adc al,0x1c
inc ebp
add [eax+0x1b],dl
inc ebp
add [eax+0x1d],ah
inc ebp
add [eax+eax],al
std
db 0xff
stc
push ebx
push eax
db 0xff
mov esp,0x400451a
sbb eax,[ebp+0x0]
and [dword 0x1d400045],bl
inc ebp
add [ecx],dl
push esp
inc ebx
jnz 0x5052a
jz 0x50528
insd
inc ecx
arpl [ecx+ebp*2+0x6f],si
outsb
dec esp
imul esi,[ebx+0x74],dword 0x4514c8
pop es
adc [ebx+eax*2+0x75],edx
jnc 0x50543
outsd
insd
inc ecx
arpl [ecx+ebp*2+0x6f],si
outsb
dec esp
imul esi,[ebx+0x74],dword 0x45145c
sub [eax],bh
inc ecx
add [edx],al
add [eax],cl
inc ecx
arpl [esi+ebp*2+0x4c],si
imul esi,[ebx+0x74],dword 0x153c0000
inc ebp
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add al,ch
adc eax,0x45
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
aam 0x15
inc ebp
add [eax],bh
add [eax],al
add ah,bh
cs inc ecx
add [eax],bh
ds inc eax
add [esi+edi+0x40],al
add [eax+0x3e],cl
inc eax
add [esi+edi+0x40],cl
add [eax+0x3e],al
inc eax
add [eax-0x5bffbfc5],cl
cmp eax,[eax+0x0]
int3
insd
inc ecx
add [eax+0x55],ah
inc ecx
add [eax],dl
popad
inc ecx
add al,ch
pop edi
inc ecx
add [eax+esi*2+0x70b80041],al
inc ecx
add [eax+esi*2+0x70c00041],bh
inc ecx
add al,bh
arpl [ecx+0x0],ax
cmp [edx+0x41],dh
add [edx+esi*2+0x73680041],dl
inc ecx
add al,cl
push byte +0x41
add [ebx+esi*2+0x74240041],ah
inc ecx
add [eax+0x38004525],al
outsb
inc ecx
add [eax],dh
pop edi
inc ecx
add ah,dl
outsb
inc ecx
add [edi+ebp*2],dl
inc ecx
add [eax-0x5bffbe91],al
arpl [ecx+0x0],ax
sbb al,0x71
inc ecx
add [ebp+0x66900041],bh
inc ecx
add [eax+0x71],bl
inc ecx
add [eax+0x71],ch
inc ecx
add ah,dh
inc cx
add [eax+0x67],cl
inc ecx
add ah,dh
inc ecx
add [eax-0x1fffbe97],cl
imul eax,[ecx+0x0],dword 0x416a78
pushfd
outsb
inc ecx
add [eax-0x43ffbe92],bh
jno 0x50608
add [eax],al
jo 0x5060c
add ah,bl
jnc 0x50610
add ah,ch
jnc 0x50614
add [dword 0x6f685354],cl
jc 0x5064f
inc ebx
jnz 0x50652
dec esp
imul esi,[ebx+0x74],dword 0x15e8c08b
inc ebp
add [edi],al
or eax,0x6f685354
jc 0x50664
inc ebx
jnz 0x50667
dec esp
imul esi,[ebx+0x74],dword 0x45153c
in al,dx
das
inc ecx
add [eax],al
add [eax],cl
inc ecx
arpl [esi+ebp*2+0x4c],si
imul esi,[ebx+0x74],dword 0x16580000
inc ebp
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [esi+edx+0x16f00045],ch
inc ebp
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add dh,cl
push ss
inc ebp
add ah,bl
push ss
inc ebp
add [eax-0x14000000],ah
adc al,[ebp+0x0]
sub [ebp+0x3e440041],bh
inc eax
add [esi+esi*4+0x41],ah
add [esi+edi+0x40],cl
add [eax+0x3e],al
inc eax
add [eax-0x5bffbfc5],cl
cmp eax,[eax+0x0]
push eax
pop ds
inc ebp
add [eax+0x2c00451f],ah
mov ecx,0x547c0041
inc ecx
add [edx+edi*4],al
inc ecx
add [edi+edi*4+0x41],ch
add [eax+ebx+0x45],dl
add [esp+0x45],dh
add [eax-0x43],al
inc ecx
add [edx+edi*4],ah
inc ecx
add [edx+edi*4],bl
inc ecx
add [eax-0x43],cl
inc ecx
add ah,bh
push ds
inc ebp
add [eax+eax*8],ch
inc ecx
add al,dl
mov edi,0xbf640041
inc ecx
add [edi+edi*4-0x4097ffbf],dl
inc ecx
add [eax-0x63ffbae7],ch
and al,[ebp+0x0]
xor al,0x22
inc ebp
add [ebp+0x45],dh
add [esi],cl
add [eax],al
add [eax],al
add [ebx],al
add [eax],al
add [eax+edx+0x640040],dl
add [eax],al
xchg eax,esp
adc [eax+0x0],al
js 0x506c4
add [eax],al
xchg eax,esp
adc [eax+0x0],al
jl 0x506cc
add [eax],al
add al,[eax]
out dx,al
db 0xff
out dx,eax
inc eax
and al,0x45
add al,ch
and al,0x45
add [dword 0x73754354],cl
jz 0x50752
insd
inc ecx
arpl [ecx+ebp*2+0x6f],si
outsb
mov eax,eax
lock push ss
inc ebp
add [edi],al
or eax,0x73754354
jz 0x50767
insd
inc ecx
arpl [ecx+ebp*2+0x6f],si
outsb
pop eax
push ss
inc ebp
add al,al
adc eax,[ebp+0x0]
add eax,[eax]
or [ecx+0x63],al
jz 0x5077c
dec esp
imul esi,[ebx+0x74],dword 0x17600000
inc ebp
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add al,bl
pop ss
inc ebp
add [eax],bl
add [eax],al
add [eax+edi+0x3e380041],cl
inc eax
add [esi+edi+0x40],al
add [eax+0x3e],cl
inc eax
add [esi+edi+0x40],cl
add [eax+0x3e],al
inc eax
add [eax-0x5bffbfc5],cl
cmp eax,[eax+0x0]
adc al,0xbe
inc ecx
add [eax],dl
mov esi,0xbe480041
inc ecx
add [eax+0x7c0041be],ch
mov esi,0xbeac0041
inc ecx
add ah,cl
mov ebp,0xbe600041
inc ecx
add [esi+edi*4+0x1e040041],dh
inc ebp
add [eax],bl
push ds
inc ebp
add [esi+ebx],ch
inc ebp
add [eax+0x1e],al
inc ebp
add [esi+ebx+0x45],dl
add [eax+0x1e],ch
inc ebp
add [esi+ebx+0x45],bh
add [eax-0x5bffbae2],dl
push ds
inc ebp
add [eax-0x33ffbae2],bh
push ds
inc ebp
add al,dl
push ds
inc ebp
add ah,dl
push ds
inc ebp
add al,bl
push ds
inc ebp
add ah,bl
push ds
inc ebp
add al,ah
push ds
inc ebp
add ah,ah
push ds
inc ebp
add al,ch
push ds
inc ebp
add ah,ch
push ds
inc ebp
add al,dh
push ds
inc ebp
add ah,dh
push ds
inc ebp
add al,bh
push ds
inc ebp
add [ebx],cl
push esp
inc ecx
arpl [ecx+ebp*2+0x6f],si
outsb
dec esp
imul ebp,[esi+0x6b],dword 0xd1e85653
daa
sti
dec dword [ebx-0x740f7426]
inc esi
pop esp
test eax,eax
jz 0x507fd
mov edx,esi
call dword 0x50bf8
mov edx,ebx
and dl,0xfc
mov eax,esi
call dword 0x1af04
test bl,bl
jng 0x50814
mov eax,esi
call dword 0x2f64
pop esi
pop ebx
ret
nop
mov edx,[eax+0x5c]
test edx,edx
jz 0x50829
mov edx,[edx+0x30]
xchg eax,edx
call dword 0x13ed8
ret
or eax,byte -0x1
ret
lea eax,[eax+0x0]
mov al,0x1
ret
nop
mov edx,[eax+0x5c]
test edx,edx
jz 0x5083e
mov eax,edx
ret
call dword 0x1a9e4
ret
cmp dword [eax+0x5c],byte +0x0
jz 0x5084d
mov al,0x1
ret
call dword 0x1a9b4
ret
nop
push ebx
push esi
push edi
mov esi,edx
mov ebx,eax
mov edx,esi
mov eax,ebx
call dword 0x1aa14
mov edi,[esi+0x2c]
mov eax,edi
mov edx,[dword 0x451410]
call dword 0x2d7c
test al,al
jz 0x50881
mov edx,edi
mov eax,ebx
call dword 0x508fc
pop edi
pop esi
pop ebx
ret
lea eax,[eax+0x0]
push ebx
push esi
push edi
mov esi,edx
mov ebx,eax
mov eax,ebx
call dword 0x50818
test eax,eax
jl 0x508cb
mov edx,[ebx+0x5c]
mov edi,[edx+0x30]
mov edx,[edi+0x8]
test esi,esi
jnl 0x508a9
xor esi,esi
cmp edx,esi
jg 0x508b0
mov esi,edx
dec esi
cmp eax,esi
jz 0x508cb
mov edx,edi
xchg eax,edx
call dword 0x13d70
mov eax,[ebx+0x5c]
mov eax,[eax+0x30]
mov ecx,ebx
mov edx,esi
call dword 0x13ef8
pop edi
pop esi
pop ebx
ret
nop
push ebx
push esi
mov esi,edx
mov ebx,eax
mov eax,esi
mov edx,[ebx+0x58]
call dword 0x3e44
jz 0x508f8
lea eax,[ebx+0x58]
mov edx,esi
call dword 0x3a70
mov eax,[ebx+0x5c]
test eax,eax
jz 0x508f8
mov edx,[eax]
call dword [edx+0x30]
pop esi
pop ebx
ret
nop
push ebx
push esi
mov esi,edx
mov ebx,eax
mov eax,[ebx+0x5c]
cmp esi,eax
jz 0x50921
test eax,eax
jz 0x50914
mov edx,ebx
call dword 0x50bf8
test esi,esi
jz 0x50921
mov edx,ebx
mov eax,esi
call dword 0x50bd8
pop esi
pop ebx
ret
push ebx
push esi
mov esi,edx
mov ebx,eax
test byte [ebx+0x1c],0x1
jnz 0x5094a
mov eax,esi
mov edx,[dword 0x451410]
call dword 0x2d7c
test al,al
jz 0x5094a
mov edx,esi
mov eax,ebx
call dword 0x508fc
pop esi
pop ebx
ret
lea eax,[eax+0x0]
push ebx
push esi
push edi
mov ebx,eax
mov edi,[ebx+0x5c]
test edi,edi
jz 0x5096d
mov edx,ebx
mov eax,edi
mov si,0xfff3
call dword 0x2dec
test al,al
jnz 0x5099f
mov eax,[0x468d34]
mov eax,[eax]
mov edx,ebx
call dword 0x60298
test al,al
jnz 0x5099f
mov eax,ebx
call dword 0x1af98
test al,al
jnz 0x5099f
mov ecx,ebx
xor edx,edx
mov eax,0xb040
call dword 0x3cd74
dec eax
jz 0x5099f
xor eax,eax
jmp short 0x509a1
mov al,0x1
pop edi
pop esi
pop ebx
ret
lea eax,[eax+0x0]
push ebx
push esi
push edi
mov ebx,eax
mov edi,[ebx+0x5c]
test edi,edi
jz 0x509c5
mov edx,ebx
mov eax,edi
mov si,0xfff0
call dword 0x2dec
test al,al
jnz 0x509f7
mov eax,[0x468d34]
mov eax,[eax]
mov edx,ebx
call dword 0x602c0
test al,al
jnz 0x509f7
mov eax,ebx
call dword 0x1afb4
test al,al
jnz 0x509f7
mov ecx,ebx
xor edx,edx
mov eax,0xb03f
call dword 0x3cd74
dec eax
jz 0x509f7
xor eax,eax
jmp short 0x509f9
mov al,0x1
pop edi
pop esi
pop ebx
ret
lea eax,[eax+0x0]
push ebp
mov ebp,esp
push ecx
push ebx
push esi
test dl,dl
jz 0x50a12
add esp,byte -0x10
call dword 0x2f14
mov [ebp-0x1],dl
mov ebx,eax
xor edx,edx
mov eax,ebx
call dword 0x1a59c
mov dl,0x1
mov eax,[0x41294c]
call dword 0x2bc0
mov [ebx+0x30],eax
mov dl,0x1
mov eax,[0x44fc0c]
call dword 0x2bc0
mov esi,eax
mov [ebx+0x34],esi
mov [esi+0xc],ebx
mov dword [esi+0x8],0x451b84
mov byte [ebx+0x58],0x0
mov eax,ebx
cmp byte [ebp-0x1],0x0
jz 0x50a65
call dword 0x2f6c
pop dword [dword fs:0x0]
add esp,byte +0xc
mov eax,ebx
pop esi
pop ebx
pop ecx
pop ebp
ret
push ebx
push esi
push edi
call dword 0x2fbc
mov ebx,edx
mov edi,eax
mov eax,[edi+0x34]
call dword 0x2bf0
jmp short 0x50a8e
mov eax,esi
call dword 0x13f64
call dword 0x2bf0
mov esi,[edi+0x30]
cmp dword [esi+0x8],byte +0x0
jg 0x50a82
mov eax,[edi+0x30]
call dword 0x2bf0
mov edx,ebx
and dl,0xfc
mov eax,edi
call dword 0x1a5e8
test bl,bl
jng 0x50ab6
mov eax,edi
call dword 0x2f64
pop edi
pop esi
pop ebx
ret
mov eax,eax
push ebp
mov ebp,esp
add esp,byte -0x8
push ebx
push esi
mov [ebp-0x8],edx
mov [ebp-0x4],eax
mov eax,[ebp-0x4]
mov eax,[eax+0x30]
mov ebx,[eax+0x8]
dec ebx
test ebx,ebx
jl 0x50afb
inc ebx
xor esi,esi
mov eax,[ebp-0x4]
mov eax,[eax+0x30]
mov eax,[eax+0x4]
mov eax,[eax+esi*4]
mov edx,[eax+0x4]
cmp edx,[ebp-0x8]
jnz 0x50af7
mov edx,eax
mov eax,[ebp+0xc]
call dword [ebp+0x8]
inc esi
dec ebx
jnz 0x50adb
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
ret 0x8
nop
push ebx
push esi
push edi
mov edi,ecx
mov esi,edx
mov ebx,eax
mov edx,esi
mov eax,[ebx+0x30]
call dword 0x13ed8
test eax,eax
jl 0x50b2f
mov eax,esi
mov edx,[dword 0x4512ec]
call dword 0x2da0
mov edx,edi
call dword 0x50888
pop edi
pop esi
pop ebx
ret
nop
push ebx
push esi
mov esi,edx
mov ebx,eax
mov edx,esi
mov eax,[ebx+0x30]
call dword 0x13e7c
pop esi
pop ebx
ret
nop
mov eax,[eax+0x30]
mov eax,[eax+0x8]
ret
nop
push ebx
push esi
mov esi,edx
mov ebx,eax
mov eax,[ebx+0x38]
test eax,eax
jz 0x50b65
mov edx,[ebx+0x34]
call dword 0x4f9e8
mov eax,esi
mov [ebx+0x38],eax
test eax,eax
jz 0x50b80
mov edx,[ebx+0x34]
call dword 0x4fa2c
mov edx,ebx
mov eax,[ebx+0x38]
call dword 0x1a670
pop esi
pop ebx
ret
nop
cmp edx,[eax+0x38]
jnz 0x50b8e
mov edx,[eax]
call dword [edx+0x30]
ret
nop
push ebx
push esi
push edi
mov ebx,ecx
mov edi,edx
mov esi,eax
mov ecx,ebx
mov edx,edi
mov eax,esi
call dword 0x1a8cc
cmp bl,0x1
jnz 0x50bd3
cmp edi,[esi+0x38]
jnz 0x50bb9
xor edx,edx
mov eax,esi
mov ecx,[eax]
call dword [ecx+0x34]
jmp short 0x50bd3
mov eax,edi
mov edx,[dword 0x4512ec]
call dword 0x2d7c
test al,al
jz 0x50bd3
mov edx,edi
mov eax,esi
call dword 0x50bf8
pop edi
pop esi
pop ebx
ret
nop
push ebx
push esi
mov esi,edx
mov ebx,eax
mov edx,esi
mov eax,[ebx+0x30]
call dword 0x13d24
mov [esi+0x5c],ebx
mov edx,ebx
mov eax,esi
call dword 0x1a670
pop esi
pop ebx
ret
nop
push ebx
push esi
mov esi,edx
mov ebx,eax
mov edx,esi
mov eax,[ebx+0x30]
call dword 0x14018
test eax,eax
jl 0x50c11
xor eax,eax
mov [esi+0x5c],eax
pop esi
pop ebx
ret
push ebx
push esi
push edi
mov ebx,eax
cmp word [ebx+0x42],byte +0x0
jz 0x50c28
mov edx,ebx
mov eax,[ebx+0x44]
call dword [ebx+0x40]
mov eax,[ebx+0x30]
mov esi,[eax+0x8]
dec esi
test esi,esi
jl 0x50c48
inc esi
xor edi,edi
mov eax,[ebx+0x30]
mov eax,[eax+0x4]
mov eax,[eax+edi*4]
mov edx,[eax]
call dword [edx+0x30]
inc edi
dec esi
jnz 0x50c36
test byte [ebx+0x1c],0x10
jz 0x50c76
mov esi,[ebx+0x4]
mov eax,esi
mov edx,[dword 0x45338c]
call dword 0x2d7c
test al,al
jz 0x50c76
cmp dword [esi+0x298],byte +0x0
jz 0x50c76
mov eax,[esi+0x298]
mov edx,[eax]
call dword [edx+0xc]
pop edi
pop esi
pop ebx
ret
mov eax,eax
push ebx
push esi
push edi
push ebp
add esp,byte -0x8
mov esi,edx
mov [esp],eax
mov byte [esp+0x4],0x0
call dword 0x38b84
test al,al
jnz 0x50d14
mov eax,[esi+0x8]
call dword 0x53cf8
mov ebx,eax
movzx eax,word [esi+0x4]
mov edx,ebx
call dword 0x348d4
mov ebp,eax
test bp,bp
jz 0x50d14
mov eax,[esp]
mov eax,[eax+0x30]
mov esi,[eax+0x8]
dec esi
test esi,esi
jl 0x50d14
inc esi
xor edi,edi
mov eax,[esp]
mov eax,[eax+0x30]
mov eax,[eax+0x4]
mov ebx,[eax+edi*4]
mov eax,ebx
mov edx,[dword 0x45160c]
call dword 0x2d7c
test al,al
jz 0x50d10
cmp bp,[ebx+0x84]
jz 0x50d03
cmp dword [ebx+0x90],byte +0x0
jz 0x50d10
mov eax,ebx
call dword 0x5154c
mov edx,ebp
call dword 0x515ac
inc eax
jz 0x50d10
mov eax,ebx
mov edx,[eax]
call dword [edx+0x50]
mov [esp+0x4],al
jmp short 0x50d14
inc edi
dec esi
jnz 0x50cc3
movzx eax,byte [esp+0x4]
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
ret
push ebx
push ecx
mov byte [esp],0x0
cmp word [eax+0x4a],byte +0x0
jz 0x50d37
mov ecx,esp
mov ebx,eax
mov eax,[ebx+0x4c]
call dword [ebx+0x48]
movzx eax,byte [esp]
pop edx
pop ebx
ret
mov eax,eax
push ebx
push ecx
mov byte [esp],0x0
cmp word [eax+0x52],byte +0x0
jz 0x50d57
mov ecx,esp
mov ebx,eax
mov eax,[ebx+0x54]
call dword [ebx+0x50]
movzx eax,byte [esp]
pop edx
pop ebx
ret
mov eax,eax
push ebx
push esi
push edi
push ebp
push ecx
mov [esp],dl
mov ebx,eax
movzx eax,byte [ebx+0x58]
cmp al,[esp]
jz dword 0x50dfd
mov [esp+0x1],al
movzx eax,byte [esp]
mov [ebx+0x58],al
cmp al,0x1
jz 0x50dfd
mov eax,[ebx+0x30]
mov esi,[eax+0x8]
dec esi
test esi,esi
jl 0x50dee
inc esi
xor ebp,ebp
mov eax,[ebx+0x30]
mov eax,[eax+0x4]
mov edi,[eax+ebp*4]
movzx eax,byte [esp]
sub al,0x1
jc 0x50dab
dec al
jz 0x50dcd
jmp short 0x50dea
test edi,edi
jz 0x50dc4
cmp byte [esp+0x1],0x2
jnz 0x50dc4
movzx edx,byte [edi+0x94]
mov eax,edi
call dword 0x511b8
mov eax,edi
mov edx,[eax]
call dword [edx+0x44]
jmp short 0x50dea
test edi,edi
jz 0x50dea
cmp byte [esp],0x2
jnz 0x50dea
movzx eax,byte [edi+0x6a]
mov [edi+0x94],al
mov dl,0x1
mov eax,edi
call dword 0x511b8
inc ebp
dec esi
jnz 0x50d94
cmp word [ebx+0x62],byte +0x0
jz 0x50dfd
mov edx,ebx
mov eax,[ebx+0x64]
call dword [ebx+0x60]
pop edx
pop ebp
pop edi
pop esi
pop ebx
ret
nop
push ebx
mov ebx,eax
mov eax,[ebx+0x10]
mov edx,[dword 0x45160c]
call dword 0x2d7c
pop ebx
ret
nop
push ebx
mov ebx,eax
mov eax,[ebx+0x10]
mov edx,[dword 0x45160c]
call dword 0x2d7c
pop ebx
ret
nop
push ebx
mov ebx,eax
mov eax,[ebx+0x10]
mov edx,[dword 0x45160c]
call dword 0x2d7c
pop ebx
ret
nop
push ebx
mov ebx,eax
mov eax,[ebx+0x10]
mov edx,[dword 0x45160c]
call dword 0x2d7c
pop ebx
ret
nop
push ebx
mov ebx,eax
mov eax,[ebx+0x10]
mov edx,[dword 0x45160c]
call dword 0x2d7c
pop ebx
ret
nop
push ebx
mov ebx,eax
mov eax,[ebx+0x10]
mov edx,[dword 0x45160c]
call dword 0x2d7c
pop ebx
ret
nop
push ebx
mov ebx,eax
mov eax,[ebx+0x10]
mov edx,[dword 0x45160c]
call dword 0x2d7c
pop ebx
ret
nop
push ebx
mov ebx,eax
mov eax,[ebx+0x10]
mov edx,[dword 0x45160c]
call dword 0x2d7c
pop ebx
ret
nop
push ebx
mov ebx,eax
mov eax,[ebx+0x10]
mov edx,[dword 0x45160c]
call dword 0x2d7c
pop ebx
ret
nop
push ebx
mov ebx,eax
mov eax,[ebx+0x10]
mov edx,[dword 0x45160c]
call dword 0x2d7c
pop ebx
ret
nop
ret
lea eax,[eax+0x0]
ret
lea eax,[eax+0x0]
ret
lea eax,[eax+0x0]
ret
lea eax,[eax+0x0]
ret
lea eax,[eax+0x0]
ret
lea eax,[eax+0x0]
ret
lea eax,[eax+0x0]
ret
lea eax,[eax+0x0]
ret
lea eax,[eax+0x0]
ret
lea eax,[eax+0x0]
ret
lea eax,[eax+0x0]
ret
lea eax,[eax+0x0]
push ebx
push esi
test dl,dl
jz 0x50f0a
add esp,byte -0x10
call dword 0x2f14
mov ebx,edx
mov esi,eax
xor edx,edx
mov eax,esi
call dword 0x1aec0
mov byte [esi+0x6a],0x1
mov dword [esi+0x80],0xffffffff

mov byte [esi+0x86],0x1
xor eax,eax
mov [esi+0x90],eax
mov eax,esi
test bl,bl
jz 0x50f49
call dword 0x2f6c
pop dword [dword fs:0x0]
add esp,byte +0xc
mov eax,esi
pop esi
pop ebx
ret
mov eax,eax
push ebx
push esi
call dword 0x2fbc
mov ebx,edx
mov esi,eax
mov eax,[esi+0x98]
call dword 0x2bf0
mov eax,[esi+0x9c]
call dword 0x2bf0
cmp dword [esi+0x90],byte +0x0
jz 0x50f85
lea eax,[esi+0x90]
call dword 0xd0e8
mov edx,ebx
and dl,0xfc
mov eax,esi
call dword 0x507e4
test bl,bl
jng 0x50f9c
mov eax,esi
call dword 0x2f64
pop esi
pop ebx
ret
nop
push ebx
push esi
push edi
mov esi,edx
mov ebx,eax
mov eax,esi
mov edx,[dword 0x45160c]
call dword 0x2d7c
test al,al
jz dword 0x51042
mov edx,[ebx+0x64]
mov edi,esi
mov eax,edi
call dword 0x51050
movzx edx,byte [ebx+0x69]
mov eax,edi
call dword 0x510b0
movzx edx,byte [ebx+0x6a]
mov eax,edi
call dword 0x511b8
mov edx,[ebx+0x74]
mov eax,edi
mov ecx,[eax]
call dword [ecx+0x48]
mov edx,[ebx+0x7c]
mov eax,edi
call dword 0x512f4
mov edx,[ebx+0x80]
mov eax,edi
call dword 0x51354
movzx edx,word [ebx+0x84]
mov eax,edi
call dword 0x513b0
movzx edx,byte [ebx+0x86]
mov eax,edi
call dword 0x51414
push dword [ebx+0x44]
push dword [ebx+0x40]
mov eax,edi
mov edx,[eax]
call dword [edx+0x34]
mov eax,[ebx+0x48]
mov [edi+0x48],eax
mov eax,[ebx+0x4c]
mov [edi+0x4c],eax
mov eax,[ebx+0x38]
mov [edi+0x38],eax
mov eax,[ebx+0x3c]
mov [edi+0x3c],eax
jmp short 0x5104b
mov edx,esi
mov eax,ebx
call dword 0x14560
pop edi
pop esi
pop ebx
ret
nop
push ebx
push esi
push edi
push ecx
mov [esp],edx
mov ebx,eax
mov eax,[esp]
mov edx,[ebx+0x64]
call dword 0x3e44
jz 0x510aa
mov eax,[ebx+0x50]
mov esi,[eax+0x8]
dec esi
test esi,esi
jl 0x51098
inc esi
xor edi,edi
mov eax,[ebx+0x50]
mov eax,[eax+0x4]
mov eax,[eax+edi*4]
mov edx,[dword 0x451714]
call dword 0x2da0
test eax,eax
jz 0x51094
mov edx,[esp]
mov ecx,[eax]
call dword [ecx+0x4c]
inc edi
dec esi
jnz 0x51074
lea eax,[ebx+0x64]
mov edx,[esp]
call dword 0x3a70
mov eax,ebx
mov edx,[eax]
call dword [edx+0x30]
pop edx
pop edi
pop esi
pop ebx
ret
nop
push ebp
mov ebp,esp
push ecx
push ebx
push esi
push edi
mov ebx,edx
mov [ebp-0x4],eax
mov eax,[ebp-0x4]
cmp byte [eax+0x68],0x0
jnz dword 0x511af
mov eax,[ebp-0x4]
mov byte [eax+0x68],0x1
xor edx,edx
push ebp
push dword 0x4521a8
push dword [fs:edx]
mov [fs:edx],esp
mov eax,[ebp-0x4]
cmp bl,[eax+0x69]
jz dword 0x51193
mov eax,[ebp-0x4]
mov eax,[eax+0x50]
mov edi,[eax+0x8]
dec edi
test edi,edi
jl 0x51121
inc edi
xor esi,esi
mov eax,[ebp-0x4]
mov eax,[eax+0x50]
mov eax,[eax+0x4]
mov eax,[eax+esi*4]
mov edx,[dword 0x451714]
call dword 0x2da0
test eax,eax
jz 0x5111d
mov edx,ebx
mov ecx,[eax]
call dword [ecx+0x50]
inc esi
dec edi
jnz 0x510fb
mov eax,[ebp-0x4]
mov [eax+0x69],bl
mov eax,[ebp-0x4]
cmp dword [eax+0x6c],byte +0x0
jng 0x5118b
mov eax,[ebp-0x4]
cmp byte [eax+0x69],0x0
jz 0x5118b
mov eax,[ebp-0x4]
mov eax,[eax+0x5c]
call dword 0x50b48
mov edi,eax
dec edi
test edi,edi
jl 0x5118b
inc edi
xor esi,esi
mov eax,[ebp-0x4]
mov eax,[eax+0x5c]
mov edx,esi
call dword 0x50b34
mov ebx,eax
cmp ebx,[ebp-0x4]
jz 0x51187
mov eax,ebx
mov edx,[dword 0x45160c]
call dword 0x2d7c
test al,al
jz 0x51187
mov eax,[ebx+0x6c]
mov edx,[ebp-0x4]
cmp eax,[edx+0x6c]
jnz 0x51187
xor edx,edx
mov eax,ebx
call dword 0x510b0
inc esi
dec edi
jnz 0x5114e
mov eax,[ebp-0x4]
mov edx,[eax]
call dword [edx+0x30]
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x4521af
mov eax,[ebp-0x4]
mov byte [eax+0x68],0x0
ret
jmp dword 0x3384
jmp short 0x511a0
pop edi
pop esi
pop ebx
pop ecx
pop ebp
ret
lea eax,[eax+0x0]
push ebx
push esi
push edi
push ecx
mov [esp],dl
mov ebx,eax
movzx eax,byte [esp]
cmp al,[ebx+0x6a]
jz 0x5122d
mov eax,[ebx+0x5c]
test eax,eax
jz 0x511ec
movzx edx,byte [eax+0x58]
cmp dl,0x1
jnz 0x511e3
movzx eax,byte [esp]
mov [ebx+0x6a],al
jmp short 0x5122d
cmp dl,0x2
jnz 0x511ec
mov byte [esp],0x1
mov eax,[ebx+0x50]
mov esi,[eax+0x8]
dec esi
test esi,esi
jl 0x5121f
inc esi
xor edi,edi
mov eax,[ebx+0x50]
mov eax,[eax+0x4]
mov eax,[eax+edi*4]
mov edx,[dword 0x451714]
call dword 0x2da0
test eax,eax
jz 0x5121b
movzx edx,byte [esp]
mov ecx,[eax]
call dword [ecx+0x54]
inc edi
dec esi
jnz 0x511fa
movzx eax,byte [esp]
mov [ebx+0x6a],al
mov eax,ebx
mov edx,[eax]
call dword [edx+0x30]
pop edx
pop edi
pop esi
pop ebx
ret
mov eax,eax
push ebx
push esi
push edi
push ebp
mov ebp,edx
mov ebx,eax
mov eax,ebp
mov edx,[ebx+0x78]
call dword 0x3e44
jz 0x51295
mov eax,[ebx+0x50]
mov edi,[eax+0x8]
dec edi
test edi,edi
jl 0x51284
inc edi
xor esi,esi
mov edx,esi
mov eax,[ebx+0x50]
call dword 0x13e7c
mov edx,[dword 0x451714]
call dword 0x2d7c
test al,al
jz 0x51280
mov edx,esi
mov eax,[ebx+0x50]
call dword 0x13e7c
mov edx,ebp
mov ecx,[eax]
call dword [ecx+0x60]
inc esi
dec edi
jnz 0x51256
lea eax,[ebx+0x78]
mov edx,ebp
call dword 0x3a70
mov eax,ebx
mov edx,[eax]
call dword [edx+0x30]
pop ebp
pop edi
pop esi
pop ebx
ret
mov eax,eax
push ebx
push esi
push edi
push ecx
mov [esp],edx
mov ebx,eax
mov eax,[esp]
cmp eax,[ebx+0x74]
jz 0x512ec
mov eax,[ebx+0x50]
mov esi,[eax+0x8]
dec esi
test esi,esi
jl 0x512df
inc esi
xor edi,edi
mov eax,[ebx+0x50]
mov eax,[eax+0x4]
mov eax,[eax+edi*4]
mov edx,[dword 0x451714]
call dword 0x2da0
test eax,eax
jz 0x512db
mov edx,[esp]
mov ecx,[eax]
call dword [ecx+0x5c]
inc edi
dec esi
jnz 0x512bb
mov eax,[esp]
mov [ebx+0x74],eax
mov eax,ebx
mov edx,[eax]
call dword [edx+0x30]
pop edx
pop edi
pop esi
pop ebx
ret
lea eax,[eax+0x0]
push ebx
push esi
push edi
push ecx
mov [esp],edx
mov ebx,eax
mov eax,[esp]
mov edx,[ebx+0x7c]
call dword 0x3e44
jz 0x5134e
mov eax,[ebx+0x50]
mov esi,[eax+0x8]
dec esi
test esi,esi
jl 0x5133c
inc esi
xor edi,edi
mov eax,[ebx+0x50]
mov eax,[eax+0x4]
mov eax,[eax+edi*4]
mov edx,[dword 0x451714]
call dword 0x2da0
test eax,eax
jz 0x51338
mov edx,[esp]
mov ecx,[eax]
call dword [ecx+0x68]
inc edi
dec esi
jnz 0x51318
lea eax,[ebx+0x7c]
mov edx,[esp]
call dword 0x3a70
mov eax,ebx
mov edx,[eax]
call dword [edx+0x30]
pop edx
pop edi
pop esi
pop ebx
ret
nop
push ebx
push esi
push edi
push ecx
mov [esp],edx
mov ebx,eax
mov eax,[esp]
cmp eax,[ebx+0x80]
jz 0x513aa
mov eax,[ebx+0x50]
mov esi,[eax+0x8]
dec esi
test esi,esi
jl 0x5139a
inc esi
xor edi,edi
mov eax,[ebx+0x50]
mov eax,[eax+0x4]
mov eax,[eax+edi*4]
mov edx,[dword 0x451714]
call dword 0x2da0
test eax,eax
jz 0x51396
mov edx,[esp]
mov ecx,[eax]
call dword [ecx+0x6c]
inc edi
dec esi
jnz 0x51376
mov eax,[esp]
mov [ebx+0x80],eax
mov eax,ebx
mov edx,[eax]
call dword [edx+0x30]
pop edx
pop edi
pop esi
pop ebx
ret
nop
push ebx
push esi
push edi
push ecx
mov [esp],dx
mov ebx,eax
movzx eax,word [esp]
cmp ax,[ebx+0x84]
jz 0x5140c
mov eax,[ebx+0x50]
mov esi,[eax+0x8]
dec esi
test esi,esi
jl 0x513fa
inc esi
xor edi,edi
mov eax,[ebx+0x50]
mov eax,[eax+0x4]
mov eax,[eax+edi*4]
mov edx,[dword 0x451714]
call dword 0x2da0
test eax,eax
jz 0x513f6
movzx edx,word [esp]
mov ecx,[eax]
call dword [ecx+0x70]
inc edi
dec esi
jnz 0x513d5
movzx eax,word [esp]
mov [ebx+0x84],ax
mov eax,ebx
mov edx,[eax]
call dword [edx+0x30]
pop edx
pop edi
pop esi
pop ebx
ret
lea eax,[eax+0x0]
push ebx
push esi
push edi
push ecx
mov [esp],dl
mov ebx,eax
movzx eax,byte [esp]
cmp al,[ebx+0x86]
jz 0x5146d
mov eax,[ebx+0x50]
mov esi,[eax+0x8]
dec esi
test esi,esi
jl 0x5145c
inc esi
xor edi,edi
mov eax,[ebx+0x50]
mov eax,[eax+0x4]
mov eax,[eax+edi*4]
mov edx,[dword 0x451714]
call dword 0x2da0
test eax,eax
jz 0x51458
movzx edx,byte [esp]
mov ecx,[eax]
call dword [ecx+0x74]
inc edi
dec esi
jnz 0x51437
movzx eax,byte [esp]
mov [ebx+0x86],al
mov eax,ebx
mov edx,[eax]
call dword [edx+0x30]
pop edx
pop edi
pop esi
pop ebx
ret
mov eax,eax
push ebx
push esi
push edi
mov edi,edx
mov esi,eax
mov eax,[esi+0x8]
mov edx,[esi+0x64]
call dword 0x3e44
jnz 0x51495
mov ebx,[esi+0x4]
test ebx,ebx
jz 0x51499
test byte [ebx+0x1c],0x1
jz 0x51499
xor eax,eax
jmp short 0x5149b
mov al,0x1
mov ebx,eax
mov edx,edi
mov eax,esi
call dword 0x1ab0c
test bl,bl
jz 0x514bc
mov eax,[esi+0x50]
cmp dword [eax+0x8],byte +0x0
jnz 0x514bc
mov edx,edi
mov eax,esi
call dword 0x51050
pop edi
pop esi
pop ebx
ret
push ebx
push ecx
mov byte [esp],0x1
cmp word [eax+0x8a],byte +0x0
jz 0x514e0
mov ecx,esp
mov ebx,eax
mov eax,[ebx+0x8c]
call dword [ebx+0x88]
movzx eax,byte [esp]
pop edx
pop ebx
ret
nop
push ebx
mov ebx,eax
xor eax,eax
mov edx,[ebx+0x5c]
test edx,edx
jz 0x514fa
cmp byte [edx+0x58],0x0
jnz 0x51547
mov eax,ebx
mov edx,[eax]
call dword [edx+0x44]
cmp byte [ebx+0x6a],0x0
jz 0x51530
cmp byte [ebx+0x95],0x0
jz 0x51530
cmp byte [ebx+0x69],0x0
jz 0x51522
cmp byte [ebx+0x69],0x0
jz 0x51530
cmp dword [ebx+0x6c],byte +0x0
jnz 0x51530
movzx edx,byte [ebx+0x69]
xor dl,0x1
mov eax,ebx
call dword 0x510b0
cmp byte [ebx+0x6a],0x0
jz 0x51541
mov eax,ebx
call dword 0x50950
test al,al
jnz 0x51545
xor eax,eax
jmp short 0x51547
mov al,0x1
pop ebx
ret
lea eax,[eax+0x0]
push ebx
mov ebx,eax
cmp dword [ebx+0x90],byte +0x0
jnz 0x5156a
mov dl,0x1
mov eax,[0x4514f0]
call dword 0x2bc0
mov [ebx+0x90],eax
mov eax,[ebx+0x90]
pop ebx
ret
mov eax,eax
push esi
mov si,0xffef
call dword 0x2dec
pop esi
ret
push ebx
push esi
push edi
mov esi,edx
mov ebx,eax
mov edx,esi
mov eax,ebx
call dword 0x15e28
mov edi,eax
mov eax,esi
call dword 0x34be0
movzx ecx,ax
mov edx,edi
mov eax,ebx
mov ebx,[eax]
call dword [ebx+0x24]
mov eax,edi
pop edi
pop esi
pop ebx
ret
nop
push ebx
push esi
push edi
push ebp
push ecx
mov ebp,edx
mov edi,eax
mov dword [esp],0xffffffff
mov eax,edi
mov edx,[eax]
call dword [edx+0x14]
mov esi,eax
dec esi
test esi,esi
jl 0x515e4
inc esi
xor ebx,ebx
mov edx,ebx
mov eax,edi
mov ecx,[eax]
call dword [ecx+0x18]
cmp bp,ax
jnz 0x515e0
mov [esp],ebx
jmp short 0x515e4
inc ebx
dec esi
jnz 0x515cd
mov eax,[esp]
pop edx
pop ebp
pop edi
pop esi
pop ebx
ret
lea eax,[eax+0x0]
push ebp
mov ebp,esp
xor eax,eax
push ebp
push dword 0x452615
push dword [fs:eax]
mov [fs:eax],esp
inc dword [dword 0x46dc98]
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x45261c
ret
jmp dword 0x3384
jmp short 0x51614
pop ebp
ret
mov eax,eax
and al,0x26
inc ebp
add [ecx],al
or eax,0x72635354
outsd
insb
insb
inc edx
popad
jc 0x5167a
outsb
arpl [ebx],ax
add [eax],eax
add [eax],al
db 0xff
jg 0x5163b
add [eax+0x26],al
inc ebp
add [ebx],al
andps xmm2,oword [ebx+0x63]
jc 0x516b6
insb
insb
inc edx
popad
jc 0x516a0
jz 0x516c8
insb
add [gs:eax],eax
add [eax],al
add [edx],al
add [eax],al
add [esi],bh
inc ebp
add [ecx],cl
jnc 0x516d4
push edx
gs jnz 0x516d2
popad
jc 0x5166f
jnc 0x516de
inc esi
insb
popad
jz 0x5167a
jnc 0x516e5
dec eax
outsd
jz 0x516ca
jc 0x516d9
arpl [ebx+0x5],bp
inc esi
outsd
jc 0x516ec
jnc 0x5164d
es inc ebp
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add al,dh
es inc ebp
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add al,bl
es inc ebp
add [eax+0x0],cl
add [eax],al
pop esp
sub al,[ecx+0x0]
cmp [esi],bh
inc eax
add [esi+edi+0x40],al
add [eax+0x3e],cl
inc eax
add [esi+edi+0x40],cl
add [eax+0x3e],al
inc eax
add [eax-0x5bffbfc5],cl
cmp eax,[eax+0x0]
push eax
push esp
inc ecx
add [eax+0x55],ah
inc ecx
add [eax+0x55],ch
inc ecx
add [edi+ecx*2+0x45],bl
add [ecx],dl
push esp
inc ebx
outsd
outsb
jz 0x51751
outsd
insb
push ebx
arpl [edx+0x6f],si
insb
insb
inc edx
popad
jc 0x51676
db 0xc0
es lock inc ebp
add [edi],al
adc [ebx+eax*2+0x6f],edx
outsb
jz 0x5176a
outsd
insb
push ebx
arpl [edx+0x6f],si
insb
insb
inc edx
popad
jc 0x516d0
es inc ebp
add al,dl
sub al,[ecx+0x0]
or eax,0x6f460500
jc 0x5177f
jnc 0x51721
add [eax+edx],bh
inc eax
add [eax+eax],ah
add bh,bh
dec esp
push esi
inc ebp
add [ecx],al
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax],al
add [eax],al
or al,[edx+0x75]
jz 0x517a8
outsd
outsb
push ebx
imul edi,[edx+0x65],dword 0x41ed30
sub [eax],al
add bh,bh
nop
push esi
inc ebp
add [ecx],al
add [eax],al
add [eax],al
add [eax],al
adc byte [eax+eax],0x0
inc dword [ecx]
add [dword 0x6f6c6f43],al
jc 0x5177b
es inc ebp
add [eax],cl
add [eax],al
dec dword [eax]
add [eax],al
call dword [edi+ecx*2+0x45]
add [eax],al
add [eax],al
or byte [eax],0x0
add [eax],al
add al,[eax]
or [ecx+0x6e],ecx
arpl [edx+0x65],si
insd
gs outsb
jz 0x517e7
adc [eax+0x0],al
sbb al,[eax]
add bh,bh
sbb al,[eax]
add bh,bh
add [eax],eax
add [eax],al
add [eax],al
add [eax+0x0],al
add eax,[eax]
push es
dec ebp
popad
jc 0x51804
imul ebp,[esi+0x0],dword 0x2c004010
add [eax],al
jmp dword far [esi+edx*2+0x10045]
add [eax],al
add [eax],al
add [eax+0x1],al
add al,0x0
or edx,[eax+0x61]
jc 0x51823
outsb
jz 0x51804
outsd
insb
outsd
jc 0x51802
adc [eax+0x0],al
or al,0x0
add bh,bh
les edx,[esi+0x45]
add [ecx],al
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax],al
add eax,0x6f500800
jnc 0x5184d
jz 0x5184f
outsd
outsb
cmp al,0x10
inc eax
add [eax],dl
add [eax],al
call dword [eax+ebx*2]
inc ebp
add [eax],ch
pop eax
inc ebp
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax],al
push es
add [dword 0x676e6152],al
add [gs:eax],dl
inc eax
add [edi],bl
add [eax],al
call dword far [edi]
add [eax],al
inc dword [ecx]
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax],al
pop es
add [esi],al
push ebx
insd
outsd
outsd
jz 0x51891
cmp al,0x10
inc eax
add [eax],dh
add [eax],al
dec dword [eax+0x1004557]
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax],al
or [eax],al
add al,0x53
imul edi,[edx+0x65],dword 0x45263c
xor al,0x0
add bh,bh
int3
push edi
inc ebp
add [ecx],al
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax],al
or [eax],eax
add eax,0x6c797453
gs cmp al,0x10
inc eax
add [eax],bh
add [eax],al
jmp esp
push edi
inc ebp
add [ecx],al
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax],al
or al,[eax]
or [eax+ebp*2+0x75],edx
insd
db 0x62
push ebx
imul edi,[edx+0x65],dword 0x401000
sbb eax,0x1dff0000
add [eax],al
inc dword [ecx]
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax],al
or eax,[eax]
or [edx+esi*2+0x61],dl
arpl [ebx+0x69],bp
outsb
add [bx+si],dl
inc eax
add [eax+eax],bl
add bh,bh
cmp [eax+0x45],bl
add [ecx],al
add [eax],al
add [eax],al
add [eax],al
add byte [ecx],0x0
add [eax],al
or al,0x0
pop es
push esi
imul esi,[ebx+0x69],dword 0x8d656c62
inc eax
add al,bl
sub [ebp+0x0],al
add ecx,[esp+edx*2]
push edi
imul ebp,[esi+0x64],dword 0x7453776f
popad
jz 0x5194b
add [eax],eax
add [eax],al
add [edx],al
add [eax],al
add ah,dl
sub [ebp+0x0],al
or [edi+0x73],dh
dec esi
outsd
jc 0x51967
popad
insb
or esi,[edi+0x73]
dec ebp
imul ebp,[esi+0x69],dword 0x657a696d
or esi,[fs:edi+0x73]
dec ebp
popad
js 0x51978
insd
imul edi,[edx+0x65],dword 0x6f460564
jc 0x51986
jnc 0x518a6
shr byte [eax+0x29],byte 0x45
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [edx+ebp+0x45],cl
add [eax],al
add [eax],al
add [eax],al
dec esp
sub al,[ebp+0x0]
jc 0x51968
inc ebp
add [edx+eax+0x0],ah
add [ecx+edx*8],bl
inc ebx
add [eax],ch
mov ebp,0x3e440041
inc eax
add [esi+esi*4+0x41],ah
add [esi+edi+0x40],cl
add [ecx+ebp*2],bh
inc esp
add [eax-0x5bffbfc5],cl
cmp eax,[eax+0x0]
loopne 0x519c0
inc ebp
add [edi+ebx*4+0x44],bh
add ah,bh
pop eax
inc esp
add [esp+edx*2+0x41],bh
add [edx+edi],dh
inc esp
add [ebx+edx*2],dl
inc esp
add al,bh
inc ebx
inc esp
add [eax+0x40004410],al
mov ebp,0xba240041
inc ecx
add [edx+edi*4],bl
inc ecx
add [eax-0x43],cl
inc ecx
add [eax+0x5a],ch
inc ebp
add [eax-0x53ffbb67],ah
lahf
inc esp
add al,bh
sahf
inc esp
add [eax+0x3],dh
inc esp
add [esp+edx*4+0x44],ah
add [esp+edx*4-0x6f0fffbc],al
inc esp
add [eax-0x4bffbbfe],dh
add al,[eax+eax+0x4]
cmp al,0x44
add [eax],dh
cmp al,0x44
add al,dh
add al,0x44
add [eax+edx+0x44],ah
add ah,ch
add al,0x44
add al,dh
adc [eax+eax-0x34],eax
test al,0x44
add [eax+0x2c004414],dh
adc eax,[eax+eax+0x1c]
fs inc esp
add [esp+edi-0x6ebbffbc],dh
inc esp
add [edx+edx*4],al
inc esp
add al,bh
mov [eax+eax-0x18],es
xchg eax,ecx
inc esp
add [ecx+0x5b6c0045],ch
inc ebp
add [edx+ebx*2+0x44],ah
add [ebx+ebx*2],bl
inc ebp
add [edi+edx*2],bh
inc esp
add [ebx+ebx*2],ch
inc ebp
add ah,bh
pop edx
inc esp
add [eax],ah
pop ebx
inc esp
add [ebx+ebx*2+0x59b80044],dh
inc esp
add [eax+0x59],bl
inc esp
add [edi-0x6ccfffbc],cl
inc esp
add al,ch
imul eax,[eax+eax+0x0],byte -0x59
inc esp
add [eax+0x5000448f],ah
test al,0x44
add [eax-0x73ffbb6e],bl
pop ebx
inc ebp
add [esi+ebx*2],bh
inc ebp
add [eax+0x60],dh
inc ebp
add [esi],al
add [dword 0x15011400],al
add [eax+esi*4],edi
in al,dx
db 0xff
mov edi,0x456074ff
add [ecx+0x45],ah
add [eax+0x2c004561],cl
bound eax,[ebp+0x0]
dec esp
pushad
inc ebp
add [ebx+ebx*2+0x54140045],ch
push ebx
arpl [edx+0x6f],si
insb
insb
imul ebp,[esi+0x67],dword 0x436e6957
outsd
outsb
jz 0x51af7
outsd
insb
nop
mov [edx],gs
inc ebp
add [edi],al
adc al,0x54
push ebx
arpl [edx+0x6f],si
insb
insb
imul ebp,[esi+0x67],dword 0x436e6957
outsd
outsb
jz 0x51b12
outsd
insb
push dword 0x4004529
aad 0x43
add [ecx],dl
add [dword 0x6d726f46],al
jnc 0x51ab7
add ah,ah
iretd
inc ebx
add [eax],ch
add al,[eax]
jmp dword far [eax]
add al,[eax]
inc dword [ecx]
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax+0x4f13000d],al
outsb
inc ecx
insb
imul esp,[edi+0x6e],dword 0x65736e49
jc 0x51b50
inc edx
gs outsw
jc 0x51b47
dec esp
rol byte [ebx+0x0],1
xor [edx],al
add bh,bh
xor [edx],al
add bh,bh
add [eax],eax
add [eax],al
add [eax],al
add [eax-0x80000000],al
push cs
add [edi],cl
dec edi
outsb
inc ecx
insb
imul esp,[edi+0x6e],dword 0x69736f50
jz 0x51b73
outsd
outsb
in al,dx
es inc ebp
add [eax+0x2],dl
add bh,bh
and al,0x5d
inc ebp
add [ecx],al
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax+0x480d000f],al
outsd
jc 0x51ba5
push ebx
arpl [edx+0x6f],si
insb
insb
inc edx
popad
jc 0x51b21
es inc ebp
add [edx+eax+0x0],dl
push dword [ebx*2+0x10045]
add [eax],al
add [eax],al
add [eax-0x80000000],al
adc [eax],al
or eax,0x74726556
push ebx
arpl [edx+0x6f],si
insb
insb
inc edx
popad
jc 0x51bbd
sub eax,[ebp+0x0]
add edx,[eax]
push esp
inc esi
outsd
jc 0x51bd4
inc edx
outsd
jc 0x51bcf
gs jc 0x51bc1
jz 0x51be9
insb
add [gs:eax],eax
add [eax],al
add [dword 0x5c000000],al
sub eax,[ebp+0x0]
push es
db 0x62
jnc 0x51bd1
outsd
outsb
or [gs:edx+0x73],ah
push ebx
imul ebp,[esi+0x67],dword 0x620a656c
jnc 0x51be6
imul edi,[edx+0x65],dword 0x656c6261
or [edx+0x73],ah
inc esp
imul esp,[ecx+0x6c],dword 0x620c676f
jnc 0x51bfb
outsd
outsd
insb
push edi
imul ebp,[esi+0x64],dword 0x620d776f
jnc 0x51c07
imul edi,[edx+0x65],dword 0x6c6f6f54
push edi
imul ebp,[esi+0x5],dword 0x6d726f46
jnc 0x51b8d
sub eax,[ebp+0x0]
add ecx,[esp+edx*2]
inc edx
outsd
jc 0x51c33
gs jc 0x51c25
jz 0x51c4d
insb
add [gs:eax],eax
add [eax],al
add [ecx],al
add [eax],al
add [ebx+ebp+0x45],bl
add [dword 0x6d726f46],al
jnc 0x51b77
inc eax
add al,dh
sub eax,[ebp+0x0]
prefetchw [ecx+0x44]
gs jnc 0x51c60
a16 outsb
gs jc 0x51c44
outsd
outsd
imul ecx,[esi+esi+0x41],byte +0x0
add [ebp-0x15e1bce3],esp
sub esp,edi
dec ebp
mov [0xfd45cc30],eax
das
mov cl,0xec
add eax,0x6d726f46
jnc 0x51c25
add bh,bh
dec dword [ebx+0x452c24c0]
add [edi],cl
or [ecx+0x4f],cl
insb
gs inc esi
outsd
jc 0x51c9b
and al,0x11
inc eax
add [ecx],al
shl ecx,byte 0x2
int 0xda
push edx
rcl byte [ecx],1
sahf
cmpsb
add [eax],ah
scasd
cmp eax,0x4605da82
outsd
jc 0x51cb5
jnc 0x51c4c
add bh,bh
dec dword [ebp+0x2c540040]
inc ebp
add [ecx],dl
push cs
push esp
push eax
outsd
jo 0x51cd0
jo 0x51cb4
outsb
fs inc ecx
jc 0x51cd4
popad
jns 0x51c6d
add [eax],al
add [eax],al
add [eax],al
add bh,bh
db 0xff
db 0xff
inc dword [eax]
add [eax],al
add [dword 0x6d726f46],al
jnc 0x51c06
rol byte [eax+0x300452c],byte 0xa
push esp
inc esi
outsd
jc 0x51cf4
push ebx
jz 0x51d03
insb
add [gs:eax],eax
add [eax],al
add [ebx],al
add [eax],al
add [esp+ebp+0x45],bh
add [eax],cl
o16 jnc 0x51ceb
outsd
jc 0x51d0d
popad
insb
or ah,[esi+0x73]
dec ebp
inc esp
dec ecx
inc ebx
push dword 0x9646c69
o16 jnc 0x51cfe
inc esp
dec ecx
inc esi
outsd
jc 0x51d24
or esp,[esi+0x73]
push ebx
jz 0x51d1e
jns 0x51d0e
outsb
push esp
outsd
jo 0x51cc9
inc esi
outsd
jc 0x51d35
jnc 0x51c57
inc eax
add al,dl
sub al,0x45
add [ebx],al
or edx,[edx+eax*2+0x6f]
jc 0x51d3b
gs jc 0x51d23
arpl [edi+0x6e],bp
add [eax],eax
add [eax],al
add [ebx],al
add [eax],al
add ah,cl
sub al,0x45
add [edx],cl
imul edx,[ebx+0x79],dword 0x6d657473
dec ebp
gs outsb
jnz 0x51d02
bound ebp,[ecx+0x4d]
imul ebp,[esi+0x69],dword 0x657a696d
or ah,[edx+0x69]
dec ebp
popad
js 0x51d72
insd
imul edi,[edx+0x65],dword 0x48696206
gs insb
jo 0x51d1a
inc esi
outsd
jc 0x51d86
jnc 0x51ca6
shl byte [eax],byte 0x2d
inc ebp
add [esi],al
or al,0x54
inc edx
outsd
jc 0x51d8b
gs jc 0x51d73
arpl [edi+0x6e],bp
jnc 0x51d30
int3
sub al,0x45
add [eax+0x452d38],dl
add ecx,[ecx]
push esp
push eax
outsd
jnc 0x51da8
jz 0x51daa
outsd
outsb
add [eax],eax
add [eax],al
add [edi],al
add [eax],al
add [ebp+0x700a0045],dh
outsd
inc esp
gs jnc 0x51dc0
a16 outsb
or [fs:eax+0x6f],esi
inc esp
gs popaw
jnz 0x51dd0
jz 0x51d76
jo 0x51dd7
inc esp
gs popaw
jnz 0x51dda
jz 0x51dc0
outsd
jnc 0x51dc2
outsb
insb
jns 0x51d88
jo 0x51de8
inc esp
gs popaw
jnz 0x51deb
jz 0x51dd4
imul edi,[edx+0x65],dword 0x796c6e4f
push cs
jo 0x51dfa
push ebx
arpl [edx+0x65],si
gs outsb
inc ebx
gs outsb
jz 0x51dfb
jc 0x51da7
jo 0x51e09
inc esp
gs jnc 0x51e09
jz 0x51e0f
jo 0x51de5
gs outsb
jz 0x51e0b
jc 0x51db8
jo 0x51e19
dec ebp
popad
imul ebp,[esi+0x46],dword 0x436d726f
gs outsb
jz 0x51e1c
jc 0x51dca
jo 0x51e2a
dec edi
ja 0x51e2c
gs jc 0x51e07
outsd
jc 0x51e31
inc ebx
gs outsb
jz 0x51e2e
jc 0x51dd0
inc esi
outsd
jc 0x51e3c
jnc 0x51da5
sub eax,0xf030045
push esp
inc esp
gs popaw
jnz 0x51e49
jz 0x51e2c
outsd
outsb
imul esi,[edi+ebp*2+0x72],dword 0x1
add [ebx],al
add [eax],al
add al,dl
sub eax,0x64090045
insd
inc esp
gs jnc 0x51e64
jz 0x51e6a
jo 0x51e06
fs insd
push eax
jc 0x51e6b
insd
popad
jc 0x51e7f
or ah,[ebp+ebp*2+0x4d]
popad
imul ebp,[esi+0x46],dword 0xc6d726f
fs insd
inc ecx
arpl [ecx+ebp*2+0x76],si
gs inc esi
outsd
jc 0x51e8b
add eax,0x6d726f46
jnc 0x51e4d
cs inc ebp
add [ebx],al
or edx,[eax+edx*2+0x72]
imul ebp,[esi+0x74],dword 0x6c616353
add [gs:eax],eax
add [eax],al
add [edx],al
add [eax],al
add [esi+ebp],ah
inc ebp
add [esi],al
jo 0x51eb4
dec esi
outsd
outsb
gs push cs
jo 0x51ebb
push eax
jc 0x51ebe
jo 0x51ec0
jc 0x51ec7
imul ebp,[edi+0x6e],dword 0x700c6c61
outsd
push eax
jc 0x51ec7
outsb
jz 0x51eb5
outsd
inc esi
imul esi,[ebp+eax+0x46],dword 0x736d726f
nop
jo 0x51e9c
inc ebp
add [ebx],al
or al,0x54
inc ebx
insb
outsd
jnc 0x51edd
inc ecx
arpl [ecx+ebp*2+0x6f],si
outsb
add [eax],eax
add [eax],al
add [ebx],al
add [eax],al
add [esi+ebp+0x45],ch
add [esi],al
arpl [ecx+0x4e],sp
outsd
outsb
gs push es
arpl [ecx+0x48],sp
imul esp,[ebp+0x6],dword 0x72466163
or ah,[gs:ebx+0x61]
dec ebp
imul ebp,[esi+0x69],dword 0x657a696d
add eax,0x6d726f46
jnc 0x51e3f
inc eax
add [eax+0x800452e],bh
or edx,[ebx+eax*2+0x6c]
outsd
jnc 0x51f25
inc ebp
jna 0x51f28
outsb
jz 0x51ec6
add cl,[eax]
push es
push ebx
gs outsb
gs jc 0x51ed7
push esp
dec edi
bound ebp,[edx+0x65]
arpl [ecx+eax+0x6],si
inc ecx
arpl [ecx+ebp*2+0x6f],si
outsb
or al,0x54
inc ebx
insb
outsd
jnc 0x51f4b
inc ecx
arpl [ecx+ebp*2+0x6f],si
outsb
add [ecx+edx],al
inc eax
add [esi+ebp+0x45],ch
add [ebp+0x2efc0040],cl
inc ebp
add [eax],cl
adc [ebx+eax*2+0x6c],dl
outsd
jnc 0x51f69
push ecx
jnz 0x51f6c
jc 0x51f82
inc ebp
jna 0x51f71
outsb
jz 0x51f0f
add cl,[eax]
push es
push ebx
gs outsb
gs jc 0x51f20
push esp
dec edi
bound ebp,[edx+0x65]
arpl [ecx+eax+0x8],si
inc ebx
popad
outsb
inc ebx
insb
outsd
jnc 0x51f8f
pop es
inc edx
outsd
outsd
insb
gs popad
outsb
add [ecx+edx],al
inc eax
add [eax],al
adc [eax+0x0],al
nop
inc eax
das
inc ebp
add [eax],cl
push cs
push esp
push ebx
push dword 0x4374726f
jnz 0x51fbf
inc ebp
jna 0x51fb3
outsb
jz 0x51f51
add dl,[ecx]
add ecx,[ebp+0x73]
push es
push esp
push edi
dec ebp
dec ebx
gs jns 0x51f60
pop es
dec eax
popad
outsb
fs insb
fs pop es
inc edx
outsd
outsd
insb
gs popad
outsb
add [eax],al
add [eax],al
add [eax],al
adc [eax+0x0],al
jl 0x51fa9
inc ebp
add [eax],cl
or dl,[eax+ecx*2+0x65]
insb
jo 0x51fc9
jna 0x51feb
outsb
jz 0x51f8a
add eax,[eax]
pop es
inc ebx
outsd
insd
insd
popad
outsb
fs add al,0x57
outsd
jc 0x51ffc
add [esp+eax*2],al
popad
jz 0x51fff
pop es
dec ecx
outsb
jz 0x52008
gs jc 0x51fa8
or [ebx+0x61],al
insb
insb
dec eax
gs insb
jo 0x51fb8
inc edx
outsd
outsd
insb
gs popad
outsb
pop es
inc edx
outsd
outsd
insb
gs popad
outsb
add [eax],dl
inc eax
add [eax],al
push dword 0x3c004010
adc [eax+0x0],al
add [eax],dl
inc eax
add [ebp+0x2fd80040],cl
inc ebp
add [ebx],al
or dl,[eax+edx*2+0x6f]
jo 0x52054
jo 0x5202e
outsd
add [gs:eax],eax
add [eax],al
add [edx],al
add [eax],al
add ah,dl
das
inc ebp
add [esi],al
jo 0x52061
dec esi
outsd
outsb
gs push es
jo 0x52068
inc ecx
jnz 0x52072
outsd
or dh,[eax+0x6d]
inc ebp
js 0x52075
insb
imul esp,[ebx+0x69],dword 0x6f460574
jc 0x5207c
jnc 0x5206d
xor [ebp+0x0],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
pushad
xor [ebp+0x0],eax
xor [ebx],dh
inc ebp
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [edx+0x1e004531],cl
xor eax,[ebp+0x0]
pop esp
add eax,[eax]
add [ecx+ebp],bl
inc ebp
add [eax],ch
mov ebp,0x64480041
inc ebp
add [esi+0x45],cl
add [esi+edi+0x40],cl
add [esp+ebx*4+0x45],al
add [eax-0x5bffbfc5],cl
cmp eax,[eax+0x0]
mov ah,0x66
inc ebp
add [edi+ebx*4+0x44],bh
add [eax+0x7c00456d],al
push esp
inc ecx
add [eax+ebp*2+0x69100045],ch
inc ebp
add [edx+ebp*2+0x45],cl
add [eax+0x40004410],al
mov ebp,0x76240041
inc ebp
add [edx+edi*4],bl
inc ecx
add ah,ah
lds eax,[ebp+0x0]
mov esp,0xa0004562
cdq
inc esp
add [edi+ebx*4-0x6107ffbc],ch
inc esp
add [eax+0x3],dh
inc esp
add [esp+edx*4+0x44],ah
add [eax+0x72],bl
inc ebp
add al,dh
nop
inc esp
add [eax-0x4bffbbfe],dh
add al,[eax+eax+0x4c]
jnc 0x520f8
add [eax],dh
cmp al,0x44
add [eax+0x640045c2],dh
adc [eax+eax-0x14],al
add al,0x44
add al,dh
adc [eax+eax+0x68],eax
jnz 0x52110
add [esp+esi*2],ah
inc ebp
add [ebx+edx],ch
inc esp
add [esi+esi*2+0x45],ah
add [esp+edi-0x6ebbffbc],dh
inc esp
add [edx+edx*4],al
inc esp
add al,bh
mov [eax+eax-0x18],es
xchg eax,ecx
inc esp
add [ecx+0x7e380045],ch
inc ebp
add [edx+ebx*2+0x44],ah
add [eax],cl
xchg eax,edx
inc ebp
add [eax-0x67],dl
inc ebp
add [edi+edx*4+0x45],bl
add ah,bh
pop edx
inc esp
add [eax],ah
pop ebx
inc esp
add ah,cl
call dword 0x45:0x9c000045
pop eax
pop ecx
inc esp
add [edi-0x6ccfffbc],cl
inc esp
add [eax],bh
mov [0xa7000045],eax
inc esp
add [eax+0x5000448f],ah
test al,0x44
add [eax-0x73ffba43],ch
pop ebx
inc ebp
add [esi+ebx*2],bh
inc ebp
add [eax],al
lodsb
inc ebp
add al,dl
inc ebp
add [eax+ebp*2+0x45],cl
add ah,dh
rol dword [ebp+0x0],byte 0x80
fs inc ebp
add [esp+edi*4-0x622bffbb],cl
inc ebp
add [eax+0x640045be],al
jnz 0x521a4
add [esi],cl
add [eax],al
add [eax],al
add [eax+eax],al
add [eax],al
xchg eax,esp
adc [eax+0x0],al
test [edx],al
add [eax],al
in al,dx
sub eax,[ebp+0x0]
cwde
add al,[eax]
add [eax],ah
sub al,0x45
add [edx+eax+0x2c500000],ch
inc ebp
add [ebx+eax],bh
add [eax],al
inc ebx
add [edi],cl
add [ebp+0x27001400],al
add [edi],dh
add [ecx-0x5eff7c00],al
add [edx],al
add [ecx],dl
add [edi],edx
add [eax],esp
add [edi],ebx
add [esi],eax
add [eax],dl
add [ecx],dl
add [edx],dl
add [eax],ebx
add [edx],ah
add ch,[eax]
add [ecx],dl
add dl,[ebx+0x0]
and al,0x0
sbb al,[eax]
inc esi
add [ebx+0x3fb04000],al
mov al,0x0
mov al,0x17
mov al,0x3c
mov al,0x1
mov al,0x5
mov al,0xd
mov al,0x10
mov al,0xe
mov al,0x15
mov al,0x19
mov al,0x1d
mov al,0x21
mov al,0x12
mov al,0x29
mov al,0x3d
mov al,0x8
mov al,0x48
mov al,0x44
mov al,0xb0
jmp dword far [edi-0x13001201]
jmp dword far [esi-0x53005201]
jmp dword far [ebx-0x56005501]
db 0xff
std
jmp dword far [eax-0x59005801]
call eax
db 0xff
stc
jmp esp
dec ebp
dec esp
jmp dword [ebp-0x1b003601]
movsd
inc ebp
add [esi+0x45],ah
add ah,ch
cmpsb
inc ebp
add [esi-0x58dfffbb],cl
inc ebp
add [eax],dh
test al,0x45
add [eax+ebp*4+0x45],ah
add [eax+ebp*4+0x45],bh
add [eax],cl
test eax,0xaa900045
inc ebp
add ah,al
stosb
inc ebp
add ah,bl
stosb
inc ebp
add [ebx+ebp*4],dl
inc ebp
add [ebx+ebp*4-0x53c7ffbb],bh
inc ebp
add [eax-0x54],al
inc ebp
add [esp+ebp*4-0x52c3ffbb],dh
inc ebp
add ah,ah
lodsd
inc ebp
add [esi+ebp*4],bh
inc ebp
add [eax-0x52],ch
inc ebp
add [eax],dh
scasd
inc ebp
add [eax-0x2fffba50],ch
ret 0x45
dec eax
mov cl,0x45
add [ebx+esi*4],dh
inc ebp
add [ebx+eax*8-0x3b63ffbb],bl
inc ebp
add [eax+0x5c0045b3],al
lodsb
inc ebp
add [esi+edi*2-0x4c5bffbb],ah
inc ebp
add al,cl
mov bl,0x45
add [ecx*4-0x728fffbb],dh
inc ebp
add [eax-0x27ffba73],bh
lea eax,[ebp+0x0]
fs mov ah,0x45
add al,dl
mov edx,0xbaf00045
inc ebp
add al,bh
mov edx,0xbb480045
inc ebp
add [edi+edi*2],bh
inc ebp
add [eax-0x45],dl
inc ebp
add al,cl
jg 0x5230a
add [ebx+edi*4-0x5d63ffbb],bh
inc ebp
add [eax-0x60],bh
inc ebp
add [eax+esi*2+0x70a80045],ah
inc ebp
add ah,cl
mov [0x71f80045],al
inc ebp
add [eax],bl
jc 0x5232a
add [eax],bh
jc 0x5232e
add [eax],dh
add byte [ebp+0x0],0xe4
add dword [ebp+0x0],0x4572e0
js 0x5236b
inc ebp
add [eax-0x3a],bl
inc ebp
add ah,bh
mov [0xa5400045],al
inc ebp
add [eax-0x23ffba8d],dl
test [ebp+0x0],al
clc
jz 0x52356
add [eax+0x6c004584],bl
lds eax,[ebp+0x0]
and dh,al
inc ebp
add [ebx],cl
push esp
inc ebx
jnz 0x52396
jz 0x52394
insd
inc esi
outsd
jc 0x52397
mov eax,eax
xor [ebx],dh
inc ebp
add [edi],al
or edx,[ebx+eax*2+0x75]
jnc 0x523ab
outsd
insd
inc esi
outsd
jc 0x523aa
pop esp
xor [ebp+0x0],al
mov [edx],ch
inc ebp
add [ecx],dl
add [dword 0x6d726f46],al
jnc 0x52350
add [eax+edx],bh
inc eax
add [eax+esi*2+0x45],al
add al,ch
mov dword [ebp+0x0],0x1
add [eax],al
add [eax-0x80000000],al
add eax,[eax]
add al,0x4c
gs o16 jz 0x523ab
adc [eax+0x0],al
fs jo 0x523ba
add [eax+ecx*8],ah
inc ebp
add [ecx],al
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax+0x54030004],al
outsd
jo 0x52365
xor eax,[ebp+0x0]
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
call dword 0x568d5
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add ah,bl
xor al,0x45
add [eax+0x3],ah
add [eax],al
adc [eax],dh
inc ebp
add [eax],ch
mov ebp,0x64480041
inc ebp
add [esi+0x45],cl
add [esi+edi+0x40],cl
add [esp+ebx*4+0x45],al
add [eax-0x5bffbfc5],cl
cmp eax,[eax+0x0]
mov ah,0x66
inc ebp
add [edi+ebx*4+0x44],bh
add [eax+0x7c00456d],al
push esp
inc ecx
add [eax+ebp*2+0x69100045],ch
inc ebp
add [edx+ebp*2+0x45],cl
add [eax+0x40004410],al
mov ebp,0x76240041
inc ebp
add [edx+edi*4],bl
inc ecx
add ah,ah
lds eax,[ebp+0x0]
mov esp,0xa0004562
cdq
inc esp
add [edi+ebx*4-0x6107ffbc],ch
inc esp
add [eax+0x3],dh
inc esp
add [esp+edx*4+0x44],ah
add [eax+0x72],bl
inc ebp
add al,dh
nop
inc esp
add [eax-0x4bffbbfe],dh
add al,[eax+eax+0x4c]
jnc 0x52474
add [eax],dh
cmp al,0x44
add [eax+0x640045c2],dh
adc [eax+eax-0x14],al
add al,0x44
add al,dh
adc [eax+eax+0x68],eax
jnz 0x5248c
add [esp+esi*2],ah
inc ebp
add [ebx+edx],ch
inc esp
add [esi+esi*2+0x45],ah
add [esp+edi-0x6ebbffbc],dh
inc esp
add [edx+edx*4],al
inc esp
add al,bh
mov [eax+eax-0x18],es
xchg eax,ecx
inc esp
add [ecx+0x7e380045],ch
inc ebp
add [edx+ebx*2+0x44],ah
add [eax],cl
xchg eax,edx
inc ebp
add [eax-0x67],dl
inc ebp
add [edi+edx*4+0x45],bl
add ah,bh
pop edx
inc esp
add [eax],ah
pop ebx
inc esp
add ah,cl
call dword 0x45:0x9c000045
pop eax
pop ecx
inc esp
add [edi-0x6ccfffbc],cl
inc esp
add [eax],bh
mov [0xa7000045],eax
inc esp
add [eax+0x5000448f],ah
test al,0x44
add [eax-0x73ffba43],ch
pop ebx
inc ebp
add [esi+ebx*2],bh
inc ebp
add [eax],al
lodsb
inc ebp
add al,dl
inc ebp
add [eax+ebp*2+0x45],cl
add ah,dh
rol dword [ebp+0x0],byte 0x80
fs inc ebp
add [esp+edi*4-0x622bffbb],cl
inc ebp
add [eax+0x640045be],al
jnz 0x52520
add [dword 0x726f4654],al
insd
mov eax,eax
call dword 0x7056a1d
add eax,0x726f4654
insd
fdiv dword [ebx]
inc ebp
add [ebx+esi],ch
inc ebp
add [eax+0x0],ch
add eax,0x6d726f46
jnc 0x5255d
add [eax+0x3c004139],bh
add [eax],al
db 0xfe
and [esp+eax*2],al
add [ecx],al
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax+0x41060011],al
arpl [ecx+ebp*2+0x6f],si
outsb
add al,0xd5
inc ebx
add [eax+0x2],ch
add bh,bh
test al,0x9c
inc ebp
add al,ch
xchg al,[ebp+0x0]
add [eax],al
add [eax-0x80000000],al
adc al,[eax]
or eax,0x69746341
jna 0x525a8
inc ebx
outsd
outsb
jz 0x525ba
outsd
insb
cld
mov bl,0x43
add [ebx+0x0],bl
add bh,bh
or al,0x6
inc esp
add [ecx],al
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax],al
adc eax,[eax]
add eax,0x67696c41
outsb
add [eax],dl
inc eax
add [eax],ch
add eax,[eax]
inc dword [eax-0x39]
inc ebp
add [ecx],al
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax],al
adc al,0x0
or al,[ecx+0x6c]
jo 0x525f1
popad
inc edx
insb
gs outsb
fs push esp
adc [eax+0x0],al
sub [ebx],eax
add bh,bh
push esp
mov dword [ebp+0x0],0x1
add [eax],al
add [eax+0xff],al
adc eax,0x6c410f00
jo 0x52616
popad
inc edx
insb
gs outsb
fs push esi
popad
insb
jnz 0x5261e
pushfd
mov esp,0x610043
add bh,bh
add byte [ebx],0x44
add [esp+eax+0x44],bl
add [eax+0x3],al
push ss
add [edi],al
inc ecx
outsb
arpl [eax+0x6f],bp
jc 0x5264e
add [eax],dl
inc eax
add [eax+0x2],bl
add bh,bh
call dword 0xc4056b44
jno 0x5262f
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax],al
pop ss
add [edx],cl
inc ecx
jnz 0x5266d
outsd
push ebx
arpl [edx+0x6f],si
insb
insb
add [eax],dl
inc eax
add [eax+eax+0x0],bl
jmp dword [eax+0x0]
add dh,bh
add [eax],eax
add [eax],al
add [eax],al
add [eax+0x0],al
sbb [eax],al
or [ecx+0x75],al
jz 0x5268e
push ebx
imul edi,[edx+0x65],dword 0x412280
pop edi
add [eax],al
push dword [eax+eax+0x0]
db 0xfe
mov esp,0x4413
add [eax],al
add byte [eax],0x0
add [eax+0x42080019],al
imul eax,[ecx+ebp*2+0x4d],dword 0x1c65646f
sub eax,0x2700045
add bh,bh
cld
add byte [ebp+0x0],0xe8
xchg al,[ebp+0x0]
add [eax],al
add [eax+0x7],al
sbb al,[eax]
or eax,[edx+0x6f]
jc 0x526c9
gs jc 0x526b1
arpl [edi+0x6e],bp
jnc 0x526c9
sub eax,[ebp+0x0]
jno 0x52674
add bh,bh
clc
db 0x82
inc ebp
add al,ch
xchg al,[ebp+0x0]
add [eax],al
add [eax+0x2],al
sbb eax,[eax]
or eax,[edx+0x6f]
jc 0x526ef
gs jc 0x526e1
jz 0x52709
insb
gs nop
into
inc ebx
add [ecx+eax-0x6b270100],bl
inc esp
add [ecx],al
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax],al
sbb al,0x0
or eax,[edx+0x6f]
jc 0x52715
gs jc 0x5270b
imul esp,[esp+esi*2+0x68],dword 0x43bc44
cwde
adc al,[eax+eax-0x38]
adc al,[eax+eax-0x18]
xchg al,[ebp+0x0]
add [eax],al
add [eax-0x80000000],al
sbb eax,0x61430700
jo 0x5274b
imul ebp,[edi+0x6e],dword 0x40103c
dec eax
or al,0x44
add [eax-0x73ffba8c],al
jno 0x5272e
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax+0x430c001e],al
insb
imul esp,[ebp+0x6e],dword 0x69654874
push dword 0x40103c74
add [esp+ecx],al
inc esp
add [esp+esi*2+0x45],cl
add [ecx+esi*2+0x45],cl
add [eax-0x80000000],al
pop ds
add [ebx],cl
inc ebx
insb
imul esp,[ebp+0x6e],dword 0x64695774
jz 0x5278f
xor ch,ch
inc ecx
add [eax+0x0],dh
add bh,bh
cmp [esp+eax*2],dl
add [esp+edx+0x44],al
add [eax-0x80000000],al
and [eax],al
add eax,0x6f6c6f43
jc 0x52748
adc [eax+0x0],al
push eax
add eax,[eax]
db 0xff
jl 0x52718
inc ebp
add [ecx],al
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax],al
and [eax],eax
adc [edx+esi*2+0x61],dl
outsb
jnc 0x527d8
popad
jc 0x527d0
outsb
jz 0x527b1
outsd
insb
outsd
jc 0x527a3
in eax,dx
inc ecx
add [ebx+eax+0x0],dl
jmp dword far [eax-0x39]
inc ebp
add [ecx],al
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax],al
and al,[eax]
adc eax,0x6e617254
jnc 0x52803
popad
jc 0x527fb
outsb
jz 0x527dc
outsd
insb
outsd
jc 0x527f4
popad
insb
jnz 0x52807
inc esp
mov ebp,0x740043
add bh,bh
insb
ds inc esp
add [ecx],al
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax+0x430b0023],al
outsd
outsb
jnc 0x52836
jc 0x52825
imul ebp,[esi+0x74],dword 0x40100073
add cl,bl
add [eax],eax
db 0xff
clc
xchg eax,esp
inc esp
add [edx*4+0x44],bl
add [eax+0x1],al
and al,0x0
add eax,0x336c7443
inc esp
add [eax],dl
inc eax
add bl,bl
add [eax],eax
dec dword [esi+edx*4+0x44]
add [ecx],al
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax],al
and eax,0x73550e00
gs inc esp
outsd
arpl [ebx+0x4d],bp
popad
outsb
popad
gs jc 0x527e2
sub eax,0x2790045
add bh,bh
jns 0x5281d
add bh,bh
call dword 0x56da8
add [eax],al
add byte [ebx],0x0
add [eax],al
add [es:esi],cl
inc esp
gs popaw
jnz 0x5289e
jz 0x52881
outsd
outsb
imul esi,[edi+ebp*2+0x72],dword 0x401000
fadd qword [ecx]
add bh,bh
inc esp
jng 0x52889
add [ecx],al
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax],al
daa
add [eax],cl
inc esp
outsd
arpl [ebx+0x53],bp
imul esi,[ebp-0x8],dword 0x8f0043bb
add [eax],al
dec dword [edi+0x1ff0000]
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax],al
sub [eax],al
or [edx+esi*2+0x61],al
dec ebx
imul ebp,[esi+0x64],dword 0x43bb70
pop ebp
add [eax],al
jmp dword [eax+eax+0x0]
inc byte [ecx]
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax],al
sub [eax],eax
or [edx+esi*2+0x61],al
dec ebp
outsd
add [gs:eax],dl
inc eax
add [eax+0x0],dl
add dh,bh
push dword 0x94fe0000
cmp [eax+eax+0x0],eax
add [eax],al
add byte [ecx],0x0
add [eax],al
sub al,[eax]
pop es
inc ebp
outsb
popad
bound ebp,[ebp+0x64]
add [eax],dl
inc eax
add [ecx+0x0],bl
add bh,bh
les edx,[ebx]
inc esp
add [ecx],al
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax],al
sub eax,[eax]
or dl,[eax+0x61]
jc 0x52949
outsb
jz 0x5292d
outsd
outsb
jz 0x528d3
int1
inc ecx
add [eax+0x0],ch
add bh,bh
mov [ebx],ss
inc esp
add [ebx+edx+0x44],bl
add [eax-0x80000000],al
sub al,0x0
add al,0x46
outsd
outsb
jz 0x52986
sub al,0x45
add [edi+0x2],dh
add bh,bh
sbb [edi-0x7917ffbb],al
inc ebp
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax],al
sub eax,0x6f460900
jc 0x52995
push ebx
jz 0x529a4
insb
gs cmp al,0x10
inc eax
add [eax+eax+0x0],cl
push dword [ecx+ecx+0x719c0044]
inc ebp
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax+0x48060006],al
imul esp,[gs:edi+0x68],dword 0x40109474
add [edx+eax+0x284ff00],al
add bh,bh
add [eax],eax
add [eax],al
add [eax],al
add [eax-0x80000000],al
add [cs:eax],cl
dec eax
gs insb
jo 0x529b4
imul ebp,[ebp-0x14],dword 0x50004526
add al,[eax]
jmp dword [ebx*2-0x7917ffbb]
inc ebp
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax+0x480d000f],al
outsd
jc 0x52a0a
push ebx
arpl [edx+0x6f],si
insb
insb
inc edx
popad
jc 0x529d6
std
inc ecx
add [eax-0x2300fffe],cl
xchg al,[ebp+0x0]
lock xchg al,[ebp+0x0]
add [eax],al
add [eax-0x80000000],al
das
add [ecx+ecx*2],al
arpl [edi+0x6e],bp
add [eax],dl
inc eax
add [ebp+0x2],dh
add bh,bh
jnz 0x529c4
add bh,bh
call dword 0x56f4f
add [eax],al
add byte [eax],0x0
add [eax],al
xor [eax],al
or cl,[ebx+0x65]
jns 0x52a27
jc 0x52a3e
jna 0x52a44
gs ja 0x52986
mov edi,0x1a00043
add bh,bh
clc
cmpsd
inc esp
add [ecx],al
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax+0x50070031],al
popad
imul ebp,[fs:esi+0x67],dword 0x435280

nop
add al,[eax]
call dword [ecx+ecx*4+0x45]
add al,ch
xchg al,[ebp+0x0]
add [eax],al
add [eax-0x80000000],al
xor al,[eax]
add al,0x4d
gs outsb
jnz 0x52a1f
adc [eax+0x0],al
jl 0x52a26
add bh,bh
jl 0x52a2a
add bh,bh
add [eax],eax
add [eax],al
add [eax],al
add [eax-0x80000000],al
xor eax,[eax]
push cs
dec edi
insb
fs inc ebx
jc 0x52aa4
popad
jz 0x52aa7
dec edi
jc 0x52aa9
gs jc 0x529f8
dec ebp
inc ebx
add [eax+0x8ff0002],ch
mov [ebp+0x0],eax
call dword 0x56fde
add [eax],al
add byte [eax],0x0
add [eax+0x4f0e0034],al
bound ebp,[edx+0x65]
arpl [ebp+ecx*2+0x65],si
outsb
jnz 0x52ab6
jz 0x52ad4
insd
add [eax],dl
inc eax
add [eax+0x0],ah
add bh,bh
jo 0x52a7a
add dh,bh
add [eax],eax
add [eax],al
add [eax],al
add [eax+0x1],al
xor eax,0x61500e00
jc 0x52af4
outsb
jz 0x52ad4
imul eax,[ecx+ebp*2+0x4d],dword 0x3c65646f
adc [eax+0x0],al
js 0x52a2a
inc ebp
add al,ah
mov eax,[ebp+0x0]
add [eax],al
add [eax],al
add [eax],al
add [eax-0x80000000],al
add [dword ss:0x65786950],cl
insb
jnc 0x52b0b
gs jc 0x52b07
outsb
arpl [eax+0x6c],bp
push ebp
inc ebx
add [eax+0x4cff0000],al
adc al,[eax+eax-0x18]
xchg al,[ebp+0x0]
add [eax],al
add [eax-0x80000000],al
aaa
add [ecx],cl
push eax
outsd
jo 0x52b55
jo 0x52b2f
gs outsb
jnz 0x52aba
das
inc ebp
add [eax],dh
add eax,[eax]
db 0xff
cmp al,0x8c
inc ebp
add [ecx],al
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax],al
cmp [eax],al
or [eax+0x6f],edx
jo 0x52b79
jo 0x52b53
outsd
gs sub al,0x33
inc ebp
add [ebx+eax],dh
add bh,bh
nop
mov [ebp+0x0],es
add [eax],eax
add [eax],al
add [eax],al
add [eax-0x80000000],al
cmp [eax],eax
or edx,[eax+0x6f]
jo 0x52b9d
jo 0x52b7a
popad
jc 0x52b92
outsb
jz 0x52b64
sub eax,0x2780045
add bh,bh
and [ebp+eax*2+0x4586e800],cl
add [eax],al
add [eax],al
add byte [edx],0x0
add [eax],al
cmp al,[eax]
or [eax+0x6f],dl
jnc 0x52bb7
jz 0x52bb9
outsd
outsb
and al,0x2e
inc ebp
add [ebp+0x2],bh
add bh,bh
jnl 0x52b5e
add bh,bh
call dword 0x570e9
add [eax],al
add byte [ecx],0x0
add [eax],al
cmp eax,[eax]
or dl,[eax+0x72]
imul ebp,[esi+0x74],dword 0x6c616353
add [gs:eax],dl
inc eax
add al,dh
mov [ebp+0x0],es
add [ebp-0x7917ffbb],cl
inc ebp
add [eax],al
add [eax],al
add byte [ecx],0x0
add [eax],al
cmp al,0x0
push es
push ebx
arpl [ecx+0x6c],sp
add [fs:eax],dl
inc eax
add [eax+0x3],cl
add bh,bh
dec eax
add eax,[eax]
inc dword [ecx]
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax],al
cmp eax,0x63530a00
jc 0x52c1c
gs outsb
push ebx
outsb
popad
jo 0x52bbe
adc [eax+0x0],al
lea eax,[eax]
add bh,bh
call dword 0xb0056fdd
adc eax,[eax+eax+0x0]
add [eax],al
add byte [eax],0x0
add [eax+0x5308003e],al
push dword 0x6948776f
outsb
jz 0x52c1d
adc [eax+0x0],al
dec esp
add eax,[eax]
dec dword [ebx+eax+0x0]
inc dword [ecx]
add [eax],al
add [eax],al
add [eax],al
or byte [edx],0x0
add [eax],al
aas
add [edx],cl
push ebx
outsb
popad
jo 0x52c42
jnz 0x52c68
gs o16 jc 0x52bf2
es inc ebp
add [edx+eax+0x0],dl
push dword [ebx*2-0x7917ffbb]
inc ebp
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax+0x560d0010],al
gs jc 0x52c98
push ebx
arpl [edx+0x6f],si
insb
insb
inc edx
popad
jc 0x52c2e
adc [eax+0x0],al
push edi
add [eax],al
push dword [esp+esi*2+0x39f40045]
inc esp
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax],al
inc eax
add [edi],al
push esi
imul esi,[ebx+0x69],dword 0x3c656c62
adc [eax+0x0],al
dec eax
add [eax],al
inc dword [eax-0x63ffbbf7]
jno 0x52ca3
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax+0x57050005],al
imul esp,[esp+esi*2+0x68],dword 0x4528d4
jnc 0x52c77
add bh,bh
hlt
lea eax,[ebp+0x0]
call dword 0x57206
add [eax],al
add byte [eax],0x0
add [eax],al
inc ecx
add [ebx],cl
push edi
imul ebp,[esi+0x64],dword 0x7453776f
popad
jz 0x52cfa
mov al,0x4d
inc ebx
add [eax+0x2cff0002],ah
mov [ebp+0x0],eax
call dword 0x5722c
add [eax],al
add byte [eax],0x0
add [eax+0x570a0042],al
imul ebp,[esi+0x64],dword 0x654d776f
outsb
jnz 0x52c83
and eax,[ecx+0x0]
rol byte [edx],1
add bh,bh
rol byte [edx],1
add bh,bh
call dword 0x57251
add [eax],al
add byte [eax],0x0
add [eax+0x4f0a0043],al
outsb
inc ecx
arpl [ecx+ebp*2+0x76],si
popad
jz 0x52d44
in al,0xcf
inc ebx
add [eax],ch
add al,[eax]
jmp dword far [eax]
add al,[eax]
inc dword [ecx]
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax+0x4f13000d],al
outsb
inc ecx
insb
imul esp,[edi+0x6e],dword 0x65736e49
jc 0x52d7b
inc edx
gs outsw
jc 0x52d72
dec esp
rol byte [ebx+0x0],1
xor [edx],al
add bh,bh
xor [edx],al
add bh,bh
add [eax],eax
add [eax],al
add [eax],al
add [eax-0x80000000],al
push cs
add [edi],cl
dec edi
outsb
inc ecx
insb
imul esp,[edi+0x6e],dword 0x69736f50
jz 0x52d9e
outsd
outsb
xor dh,al
inc ebx
add [eax-0x4f010000],dh
add [eax],al
db 0xff
call dword 0x572ce
add [eax],al
add byte [eax],0x0
add [eax+0x4f0b0044],al
outsb
inc ebx
popad
outsb
push edx
gs jnc 0x52dc4
jpe 0x52dc2
enter 0x4123,0x0
adc [ecx],al
add bh,bh
adc [ecx],al
add bh,bh
call dword 0x572f4
add [eax],al
add byte [eax],0x0
add [eax+0x4f070045],al
outsb
inc ebx
insb
imul esp,[ebx+0x6b],dword 0x452eb4
fadd dword [edx]
add bh,bh
fadd dword [edx]
add bh,bh
call dword 0x57316
add [eax],al
add byte [eax],0x0
add [eax+0x4f070046],al
outsb
inc ebx
insb
outsd
jnc 0x52e06
clc
cs inc ebp
add al,ah
add al,[eax]
jmp eax
add al,[eax]
db 0xff
call dword 0x57338
add [eax],al
add byte [eax],0x0
add [eax+0x4f0c0047],al
outsb
inc ebx
insb
outsd
jnc 0x52e28
push ecx
jnz 0x52e2b
jc 0x52e41
mov al,[0xb80043c6]
add [eax],al
db 0xff
mov eax,0x1ff0000
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax+0x4f130048],al
outsb
inc ebx
outsd
outsb
jnc 0x52e5e
jc 0x52e4d
imul ebp,[esi+0x65],dword 0x73655264
imul edi,[edx+0x65],dword 0x43c82c
and [ecx],al
add bh,bh
and [ecx],al
add bh,bh
add [eax],eax
add [eax],al
add [eax],al
add [eax-0x80000000],al
dec ecx
add [esi],cl
dec edi
outsb
inc ebx
outsd
outsb
jz 0x52e7d
js 0x52e8e
push eax
outsd
jo 0x52e93
jo 0x52de8
and eax,[ecx+0x0]
sbb [ebx],al
add bh,bh
sbb [ebx],al
add bh,bh
call dword 0x573b6
add [eax],al
add byte [eax],0x0
add [eax+0x4f08004a],al
outsb
inc ebx
jc 0x52ea4
popad
jz 0x52ea7
enter 0x4123,0x0
sbb [ecx],al
add bh,bh
sbb [ecx],al
add bh,bh
call dword 0x573d9
add [eax],al
add byte [eax],0x0
add [eax+0x4f0a004b],al
outsb
inc esp
bound ebp,[ebx+eax*2+0x6c]
imul esp,[ebx+0x6b],dword 0x4123c8
and [ebx],al
add bh,bh
and [ebx],al
add bh,bh
call dword 0x573fe
add [eax],al
add byte [eax],0x0
add [eax+0x4f09004c],al
outsb
inc esp
gs jnc 0x52efc
jc 0x52ef9
jns 0x52e54
and eax,[ecx+0x0]
call dword 0xe9042e96
add al,[eax]
db 0xff
call dword 0x57422
add [eax],al
add byte [eax],0x0
add [eax+0x4f0c004d],al
outsb
inc esp
gs popad
arpl [ecx+ebp*2+0x76],si
popad
jz 0x52f17
hlt
ret
inc ebx
add al,ah
add [eax],eax
jmp eax
add [eax],eax
inc dword [ecx]
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax+0x4f0a004e],al
outsb
inc esp
outsd
arpl [ebx+0x44],bp
jc 0x52f45
jo 0x52f34
les eax,[ebx+0x0]
call dword 0xe9042ee1
add [eax],eax
inc dword [ecx]
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax+0x4f0a004f],al
outsb
inc esp
outsd
arpl [ebx+0x4f],bp
jna 0x52f60
jc 0x52eed
ret 0x43
fadd dword [eax]
add bh,bh
fadd dword [eax]
add bh,bh
call dword 0x57493
add [eax],al
add byte [eax],0x0
add [eax+0x4f0a0050],al
outsb
inc esp
jc 0x52f7d
inc esp
jc 0x52f8f
jo 0x52f8a
ret 0x43
loopne 0x52f27
add bh,bh
loopne 0x52f2b
add bh,bh
call dword 0x574b8
add [eax],al
add byte [eax],0x0
add [eax+0x4f0a0051],al
outsb
inc esp
jc 0x52fa2
dec edi
jna 0x52faa
jc 0x52edf
ret
inc ebx
add al,bh
add [eax],al
db 0xff
clc
add [eax],al
inc dword [ecx]
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax+0x4f090052],al
outsb
inc ebp
outsb
fs inc esp
outsd
arpl [ebx-0x5c],bp
lds eax,[ebx+0x0]
add [edx],al
add bh,bh
add [edx],al
add bh,bh
add [eax],eax
add [eax],al
add [eax],al
add [eax-0x80000000],al
push ebx
add [dword 0x65476e4f],cl
jz 0x52fde
imul esi,[ebp+0x49],dword 0xc86f666e
and eax,[ecx+0x0]
clc
add al,[eax]
db 0xff
clc
add al,[eax]
db 0xff
call dword 0x57529
add [eax],al
add byte [eax],0x0
add [eax+0x4f060054],al
outsb
dec eax
imul esp,[ebp+0x78],dword 0xf000452f
add al,[eax]
push eax
add al,[eax]
inc dword [ecx]
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax+0x4f060055],al
outsb
dec eax
gs insb
jo 0x52fb5
rol dword [ebx+0x0],byte 0x8
add al,[eax]
dec dword [eax]
add al,[eax]
db 0xff
call dword 0x5756b
add [eax],al
add byte [eax],0x0
add [eax+0x4f090056],al
outsb
dec ebx
gs jns 0x53039
outsd
ja 0x53066
sub al,0xc2
inc ebx
add [eax],dl
add al,[eax]
call dword [eax]
add al,[eax]
db 0xff
call dword 0x5758f
add [eax],al
add byte [eax],0x0
add [eax+0x4f0a0057],al
outsb
dec ebx
gs jns 0x53069
jc 0x53080
jnc 0x53090
loopne 0x52fe0
inc ebx
add [eax],bl
add al,[eax]
call dword far [eax]
add al,[eax]
db 0xff
call dword 0x575b4
add [eax],al
add byte [eax],0x0
add [eax+0x4f070058],al
outsb
dec ebx
gs jns 0x53093
jo 0x53068
rol dword [ebx+0x0],byte 0x28
add [eax],eax
jmp dword far [eax]
add [eax],eax
db 0xff
call dword 0x575d6
add [eax],al
add byte [eax],0x0
add [eax+0x4f0f0059],al
outsb
dec ebp
outsd
jnz 0x530d3
gs inc ecx
arpl [ecx+ebp*2+0x76],si
popad
jz 0x530ce
dec esp
rol byte [ebx+0x0],byte 0xc0
add [eax],al
inc eax
add [eax],al
db 0xff
call dword 0x57600
add [eax],al
add byte [eax],0x0
add [eax+0x4f0b005a],al
outsb
dec ebp
outsd
jnz 0x530fd
gs inc esp
outsd
ja 0x530fd
enter 0x4123,0x0
cmp [ecx],al
add bh,bh
cmp [ecx],al
add bh,bh
add [eax],eax
add [eax],al
add [eax],al
add [eax-0x80000000],al
pop ebx
add [edi+ecx*2],cl
outsb
dec ebp
outsd
jnz 0x53123
gs inc ebp
outsb
jz 0x5311a
jc 0x5307f
and eax,[ecx+0x0]
xor [ecx],al
add bh,bh
xor [ecx],al
add bh,bh
add [eax],eax
add [eax],al
add [eax],al
add [eax-0x80000000],al
pop esp
add [edi+ecx*2],cl
outsb
dec ebp
outsd
jnz 0x5314a
gs dec esp
gs popad
jna 0x53142
db 0xc4
rol byte [ebx+0x0],byte 0xc8
add [eax],al
dec eax
add [eax],al
db 0xff
call dword 0x57674
add [eax],al
add byte [eax],0x0
add [eax+0x4f0b005d],al
outsb
dec ebp
outsd
jnz 0x53171
gs dec ebp
outsd
jna 0x53168
dec esp
rol byte [ebx+0x0],byte 0xd0
add [eax],al
call eax
add [eax],al
db 0xff
call dword 0x5769a
add [eax],al
add byte [eax],0x0
add [eax+0x4f09005e],al
outsb
dec ebp
outsd
jnz 0x53197
gs push ebp
jo 0x53158
mov dword [ebx+0x0],0xff000140
inc eax
add [eax],eax
inc dword [ecx]
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax+0x4f0c005f],al
outsb
dec ebp
outsd
jnz 0x531bb
gs push edi
push dword 0xb86c6565
mov dword [ebx+0x0],0xff000148
dec eax
add [eax],eax
inc dword [ecx]
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax+0x4f100060],al
outsb
dec ebp
outsd
jnz 0x531e2
gs push edi
push dword 0x446c6565
outsd
ja 0x531e7
mov eax,0x500043c7
add [eax],eax
call dword [eax+0x1]
add bh,bh
add [eax],eax
add [eax],al
add [eax],al
add [eax-0x80000000],al
popad
add [esi],cl
dec edi
outsb
dec ebp
outsd
jnz 0x5320d
gs push edi
push dword 0x556c6565
jo 0x5316b
and eax,[ecx+0x0]
add [ebx],al
add bh,bh
add [ebx],al
add bh,bh
call dword 0x57739
add [eax],al
add byte [eax],0x0
add [eax+0x4f070062],al
outsb
push eax
popad
imul ebp,[esi+0x74],dword 0x4123c8
call dword 0xe90431cd
add [eax],al
db 0xff
call dword 0x5775b
add [eax],al
add byte [eax],0x0
add [eax+0x4f080063],al
outsb
push edx
gs jnc 0x5324e
jpe 0x5324c
cmp al,0x2f
inc ebp
add [eax],cl
add eax,[eax]
dec dword [eax]
add eax,[eax]
inc dword [ecx]
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax+0x4f0a0064],al
outsb
push ebx
push dword 0x4374726f
jnz 0x53280
enter 0x4123,0x0
adc [ebx],al
add bh,bh
adc [ebx],al
add bh,bh
call dword 0x577a3
add [eax],al
add byte [eax],0x0
add [eax+0x4f060065],al
outsb
push ebx
push dword 0xc558776f
inc ebx
add al,dh
add [eax],al
push eax
add [eax],al
inc dword [ecx]
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax+0x4f0b0066],al
outsb
push ebx
jz 0x532ae
jc 0x532c3
inc esp
outsd
arpl [ebx-0x14],bp
les eax,[ebx+0x0]
and [edx],al
add bh,bh
and [edx],al
add bh,bh
add [eax],eax
add [eax],al
add [eax],al
add [eax-0x80000000],al
add [bx+si],cl
dec edi
outsb
push ebp
outsb
inc esp
outsd
arpl [ebx-0x75],bp
rol ah,byte 0x42
inc ebp
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [esp+eax*2],dl
inc ebp
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add al,cl
inc ebx
inc ebp
add [eax],al
inc esp
inc ebp
add [eax+0x3],ah
add [eax],al
adc [eax],dh
inc ebp
add [eax],ch
mov ebp,0x64480041
inc ebp
add [esi+0x45],cl
add [esi+edi+0x40],cl
add [esp+ebx*4+0x45],al
add [eax-0x5bffbfc5],cl
cmp eax,[eax+0x0]
mov ah,0x66
inc ebp
add [edi+ebx*4+0x44],bh
add [eax+0x7c00456d],al
push esp
inc ecx
add ah,bl
leave
inc ebp
add [eax],dl
imul eax,[ebp+0x0],dword 0x456a4c
adc byte [eax],0x44
add [eax-0x43],al
inc ecx
add [esi+esi*2],ah
inc ebp
add [edx+edi*4],bl
inc ecx
add ah,ah
lds eax,[ebp+0x0]
fs enter 0x45,0xa0
cdq
inc esp
add [edi+ebx*4-0x6107ffbc],ch
inc esp
add [eax+0x3],dh
inc esp
add [esp+edx*4+0x44],ah
add [eax+0x72],bl
inc ebp
add al,dh
nop
inc esp
add [eax-0x4bffbbfe],dh
add al,[eax+eax+0x4c]
jnc 0x53360
add [eax],dh
cmp al,0x44
add [eax+0x640045c2],dh
adc [eax+eax-0x14],al
add al,0x44
add al,dh
adc [eax+eax+0x68],eax
jnz 0x53378
add [esp+esi*2],ah
inc ebp
add [ebx+edx],ch
inc esp
add [esi+esi*2+0x45],ah
add [esp+edi-0x6ebbffbc],dh
inc esp
add [edx+edx*4],al
inc esp
add al,bh
mov [eax+eax-0x18],es
xchg eax,ecx
inc esp
add [ecx+0x7e380045],ch
inc ebp
add [edx+ebx*2+0x44],ah
add [eax],cl
xchg eax,edx
inc ebp
add [eax-0x67],dl
inc ebp
add [edi+edx*4+0x45],bl
add ah,bh
pop edx
inc esp
add [eax],ah
pop ebx
inc esp
add ah,cl
call dword 0x45:0x9c000045
pop eax
pop ecx
inc esp
add [edi-0x6ccfffbc],cl
inc esp
add [eax],bh
mov [0xa7000045],eax
inc esp
add [eax+0x5000448f],ah
test al,0x44
add [eax-0x73ffba43],ch
pop ebx
inc ebp
add [esi+ebx*2],bh
inc ebp
add [eax],al
lodsb
inc ebp
add al,dl
inc ebp
add [eax+ebp*2+0x45],cl
add ah,dh
rol dword [ebp+0x0],byte 0x80
fs inc ebp
add [esp+edi*4-0x622bffbb],cl
inc ebp
add [eax+0x640045be],al
jnz 0x5340c
add [ecx],cl
add [eax+eax-0x4fd3ff5f],al
inc edx
mov al,0x39
mov al,0xb
mov al,0xc4
db 0xff
mov esi,0x54ffbcff
retf 0x45
jl 0x533ac
inc ebp
add [eax],dl
retf
inc ebp
add [eax-0x35],ch
inc ebp
add [esp+ecx*8+0x45],cl
add [esp+ecx*8+0x45],ah
add ah,cl
enter 0x45,0xbc
leave
inc ebp
add [eax],ch
retf 0x45
andps xmm0,oword [ebx+0x75]
jnc 0x5347a
outsd
insd
inc esp
outsd
arpl [ebx+0x46],bp
outsd
jc 0x5347d
adc al,0x44
inc ebp
add [edi],al
andps xmm0,oword [ebx+0x75]
jnc 0x5348f
outsd
insd
inc esp
outsd
arpl [ebx+0x46],bp
outsd
jc 0x53492
les eax,[edx+0x45]
add [ebx+esi],ch
inc ebp
add [edx],dl
add [dword 0x6d726f46],al
jnc 0x53437
add [eax+edx],bh
inc eax
add [eax-0x75],bh
inc ebp
add al,ah
mov eax,[ebp+0x0]
add [eax],al
add [eax],al
add [eax],al
add [eax-0x80000000],al
adc [eax],eax
or eax,0x65786950
insb
jnc 0x534a9
gs jc 0x534a5
outsb
arpl [eax-0x70],bp
lodsb
inc esp
inc ebp
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [esp+eax*2+0xc0045],ch
add [eax],al
mov al,0x10
inc eax
add [eax],bh
ds inc eax
add [esi+edi+0x40],al
add [eax+0x3e],cl
inc eax
add [esi+edi+0x40],cl
add [eax+0x3e],al
inc eax
add [eax-0x5bffbfc5],cl
cmp eax,[eax+0x0]
loopne 0x534e5
inc eax
add [eax],cl
push esp
dec ebp
outsd
outsb
imul esi,[edi+ebp*2+0x72],dword 0x400408d
inc ebp
inc ebp
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax*2+0x45540045],dh
inc ebp
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [esi+0x45],al
inc ebp
add [eax+0x2c000000],ah
aaa
inc ecx
add [eax],ch
mov ebp,0x3e440041
inc eax
add [esi+esi*4+0x41],ah
add [esi+edi+0x40],cl
add [eax+0x3e],al
inc eax
add [eax-0x5bffbfc5],cl
cmp eax,[eax+0x0]
call dword 0x60057ad3
push ebp
inc ecx
add [ecx+edi*4],ch
inc ecx
add [esp+edx*2+0x41],bh
add [edx+edi*4],al
inc ecx
add ah,cl
mov eax,0xba140041
inc ecx
add [ebx+edi*4],cl
inc ecx
add [eax-0x43],al
inc ecx
add [edx+edi*4],ah
inc ecx
add [edx+edi*4],bl
inc ecx
add [eax-0x43],cl
inc ecx
add [eax+0xe0045cd],dl
add [eax],al
add [eax],al
add [ecx],al
add [eax],al
add [eax+edx+0x380040],dl
add [eax],al
pop es
push esp
push ebx
arpl [edx+0x65],si
gs outsb
mov eax,eax
push esp
inc ebp
inc ebp
add [edi],al
pop es
push esp
push ebx
arpl [edx+0x65],si
gs outsb
add al,0x45
inc ebp
add [eax],ch
cmp [ecx+0x0],al
add al,[eax]
add eax,0x6d726f46
jnc 0x5356e
add [eax+0x454574],dl
push cs
or [eax+ecx*2+0x69],edx
outsb
jz 0x535c5
outsb
outsw
inc eax
add [eax],al
add [ecx],al
add [eax],al
add [eax+edx+0x380040],dl
add [eax],al
nop
xchg eax,esp
inc ebp
inc ebp
add [ecx],dl
andps xmm2,oword [eax+0x6f]
jo 0x53610
jo 0x535e3
outsd
jc 0x5360d
inc ecx
jc 0x53615
popad
jns 0x535b2
add [eax],al
add [eax],al
add [eax],al
add bh,bh
db 0xff
db 0xff
inc dword [eax]
add [eax],al
add [dword 0x6d726f46],al
jnc 0x5354c
or [esi+0x45],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],bh
inc esi
inc ebp
add [esi+eax*2+0x45],cl
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
jpe 0x53624
inc ebp
add [eax+0x1],ch
add [eax],al
sub al,0x37
inc ecx
add [eax],ch
mov ebp,0x3e440041
inc eax
add [esi+esi*4+0x41],ah
add [esi+edi+0x40],cl
add [eax+0x3e],al
inc eax
add [eax-0x5bffbfc5],cl
cmp eax,[eax+0x0]
mov ah,0xe1
inc ebp
add [eax+0x55],ah
inc ecx
add [ecx+edi*4],ch
inc ecx
add [esp+edx*2+0x41],bh
add [edx+edi*4],al
inc ecx
add ah,cl
mov eax,0xba140041
inc ecx
add [ebx+edi*4],cl
inc ecx
add [eax-0x43],al
inc ecx
add [edx+edi*4],ah
inc ecx
add [edx+edi*4],bl
inc ecx
add [eax-0x43],cl
inc ecx
add [eax+0xe0045df],bl
add [eax],al
add [eax],al
add [edi],al
add [eax],al
add [eax+edx+0x380040],dl
add [eax],al
xchg eax,esp
adc [eax+0x0],al
cmp al,0x0
add [eax],al
jo 0x5361e
inc ecx
add [eax+eax+0x0],cl
add [eax+edx+0x500040],dl
add [eax],al
xchg eax,esp
adc [eax+0x0],al
push esp
add [eax],al
add [eax+edx+0x8c0040],dl
add [eax],al
nop
inc ebp
inc ebp
add al,dl
add [eax],al
add [esp+edx*2],cl
inc ecx
jo 0x536ef
insb
imul esp,[ebx+0x61],dword 0x6e6f6974
nop
mov [esi+0x45],es
add [edi],al
or al,0x54
inc ecx
jo 0x53702
insb
imul esp,[ebx+0x61],dword 0x6e6f6974
or [esi+0x45],al
add [eax],ch
cmp [ecx+0x0],al
add al,[eax]
add eax,0x6d726f46
jnc 0x536ab
add al,bh
inc esi
inc ebp
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],bl
inc edi
inc ebp
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],cl
inc edi
inc ebp
add [eax+eax],ch
add [eax],al
pop esp
sub al,[ecx+0x0]
cmp [esi],bh
inc eax
add [esi+edi+0x40],al
add [eax+0x3e],cl
inc eax
add [esi+edi+0x40],cl
add [eax+0x3e],al
inc eax
add [eax-0x5bffbfc5],cl
cmp eax,[eax+0x0]
push eax
push esp
inc ecx
add [eax+0x55],ah
inc ecx
add [eax+0x55],ch
inc ecx
add [eax+0x16],dl
inc esi
add [eax+0xb004616],ch
push esp
inc edi
insb
popad
jnc 0x53782
inc esi
jc 0x53773
insd
sbb [gs:edi+0x45],al
add [edi],al
or edx,[edi+eax*2+0x6c]
popad
jnc 0x53793
inc esi
jc 0x53784
insd
gs clc
inc esi
inc ebp
add al,dl
sub al,[ecx+0x0]
push es
add [dword 0x6d726f46],al
jnc 0x5373c
add [eax],al
adc [eax+0x0],al
or [eax],al
add bh,bh
in al,0x17
inc esi
add [ecx],al
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax],al
add [eax],al
pop es
inc ebp
outsb
popad
bound ebp,[ebp+0x64]
cmp al,0x10
inc eax
add [eax+eax],cl
add bh,bh
adc al,0x18
inc esi
add [ecx],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [ecx],al
add [esp+ecx*2],al
gs o16 jz 0x537b5
adc [eax+0x0],al
adc [eax],al
add bh,bh
adc al,0x18
inc esi
add [ecx],al
add [eax],al
add [ecx],al
add [eax],al
add [eax],al
add [eax],al
add [edx],al
add [ebx],al
push esp
outsd
jo 0x537d3
adc [eax+0x0],al
adc al,0x0
add bh,bh
adc al,0x18
inc esi
add [ecx],al
add [eax],al
add [edx],al
add [eax],al
add [eax],al
add [eax],al
add [ebx],al
add [dword 0x68676952],al
jz 0x537f3
adc [eax+0x0],al
sbb [eax],al
add bh,bh
adc al,0x18
inc esi
add [ecx],al
add [eax],al
add [ebx],al
add [eax],al
add [eax],al
add [eax],al
add [eax+eax],al
push es
inc edx
outsd
jz 0x53849
outsd
insd
add [eax],dl
inc eax
add [eax],ch
add [eax],al
push dword [eax+ebx+0x46]
add [ecx],al
add [eax],al
add [eax],al
add [eax],al
add byte [eax],0x0
add [eax],al
add eax,0x68530c00
gs jz 0x53847
inc di
insb
popad
jnc 0x53871
mov eax,eax
mov edx,[dword 0x46dc9c]
cmp eax,[edx+0x30]
jnz 0x53816
cmp byte [dword 0x46dcac],0x1
cmc
sbb eax,eax
ret
push eax
call dword 0x6170
ret
lea eax,[eax+0x0]
mov eax,[0x46877c]
ret
mov eax,eax
mov [0x46877c],eax
ret
mov eax,eax
push ebx
push esi
mov ebx,edx
mov esi,eax
test esi,esi
jz 0x53877
push byte -0x14
push esi
call dword 0x60f8
test bl,bl
jz 0x53852
test ah,0x2
jnz 0x53877
or eax,0x200
jmp short 0x5385c
test ah,0x2
jz 0x53877
and eax,0xfffffdff
push eax
push byte -0x14
push esi
call dword 0x6308
push byte +0x37
push byte +0x0
push byte +0x0
push byte +0x0
push byte +0x0
push byte +0x0
push esi
call dword 0x6320
pop esi
pop ebx
ret
mov eax,eax
push ebx
push esi
push edi
push ecx
mov [esp],cl
mov ebx,edx
mov esi,eax
push byte -0x14
push esi
call dword 0x60f8
mov edi,eax
test bl,bl
jz 0x5389d
test edi,0x40000
jz 0x538b7
test bl,bl
jnz dword 0x53938
mov eax,edi
and eax,0x40000
cmp eax,0x40000
jnz dword 0x53938
push esi
call dword 0x6170
cmp eax,byte +0x1
sbb eax,eax
inc eax
mov [esp+0x2],al
push esi
call dword 0x6198
cmp eax,byte +0x1
sbb eax,eax
inc eax
mov [esp+0x1],al
movzx eax,byte [esp+0x1]
or al,[esp+0x2]
jz 0x538ea
push byte +0x0
push esi
call dword 0x6348
test bl,bl
jz 0x538ff
or edi,0x40000
push edi
push byte -0x14
push esi
call dword 0x6308
jmp short 0x5390e
and edi,0xfffbffff
push edi
push byte -0x14
push esi
call dword 0x6308
movzx eax,byte [esp]
and al,[esp+0x1]
jnz 0x5391f
cmp byte [esp+0x2],0x0
jz 0x53938
cmp byte [esp+0x2],0x0
jz 0x53930
push byte +0x6
push esi
call dword 0x6348
jmp short 0x53938
push byte +0x5
push esi
call dword 0x6348
pop edx
pop edi
pop esi
pop ebx
ret
lea eax,[eax+0x0]
mov eax,[0x46dc9c]
cmp dword [eax+0x30],byte +0x0
jz 0x53957
xor edx,edx
mov eax,[0x46dc9c]
call dword 0x5d824
xor edx,edx
mov eax,[0x46dc9c]
call dword 0x5f2f4
mov eax,[0x46dc9c]
call dword 0x1a850
mov eax,[0x46dc9c]
call dword 0x1a7f4
ret
push ebp
mov ebp,esp
push ebx
mov ebx,[ebp+0x8]
cmp ebx,[dword 0x468784]
jz 0x539bd
push ebx
call dword 0x6198
test eax,eax
jz 0x539bd
push ebx
call dword 0x6188
test eax,eax
jz 0x539bd
mov eax,0x8
call dword 0x1e60
mov edx,[dword 0x468794]
mov [eax],edx
mov [eax+0x4],ebx
mov [0x468794],eax
push byte +0x0
push ebx
call dword 0x5f58
or eax,byte -0x1
pop ebx
pop ebp
ret 0x8
lea eax,[eax+0x0]
push ebp
mov ebp,esp
add esp,byte -0xc
push ebx
push esi
push edi
xor edx,edx
mov [ebp-0x4],edx
mov edx,[dword 0x468784]
mov [ebp-0x8],edx
mov edx,[dword 0x468794]
mov [ebp-0xc],edx
mov [0x468784],eax
xor eax,eax
mov [0x468794],eax
xor eax,eax
push ebp
push dword 0x454a79
push dword [fs:eax]
mov [fs:eax],esp
mov byte [dword 0x468790],0x1
xor eax,eax
push ebp
push dword 0x454a3b
push dword [fs:eax]
mov [fs:eax],esp
push byte +0x0
push dword 0x454978
call dword 0x5af8
push eax
call dword 0x5f70
mov eax,[0x468794]
mov [ebp-0x4],eax
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
jmp short 0x53a54
jmp dword 0x30d0
mov eax,[0x468794]
call dword 0x53a8c
call dword 0x348c
call dword 0x34e0
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x454a80
mov byte [dword 0x468790],0x0
mov eax,[ebp-0xc]
mov [0x468794],eax
mov eax,[ebp-0x8]
mov [0x468784],eax
ret
jmp dword 0x3384
jmp short 0x53a61
mov eax,[ebp-0x4]
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret
mov eax,eax
push ebx
push esi
mov esi,eax
test esi,esi
jz 0x53ac0
mov ebx,esi
mov eax,[ebx+0x4]
push eax
call dword 0x6180
test eax,eax
jz 0x53aae
push byte -0x1
mov eax,[ebx+0x4]
push eax
call dword 0x5f58
mov esi,[ebx]
mov edx,0x8
mov eax,ebx
call dword 0x1e7c
test esi,esi
jnz 0x53a94
pop esi
pop ebx
ret
nop
push ebp
mov ebp,esp
push ebx
mov ebx,[ebp+0x8]
cmp ebx,[dword 0x468784]
jz 0x53b1d
mov eax,[0x46dc9c]
cmp ebx,[eax+0x30]
jz 0x53b1d
push ebx
call dword 0x6198
test eax,eax
jz 0x53b1d
push ebx
call dword 0x6188
test eax,eax
jz 0x53b1d
push byte -0x14
push ebx
call dword 0x60f8
test al,0x8
jnz 0x53b0e
cmp dword [dword 0x468788],byte +0x0
jnz 0x53b1d
mov [dword 0x468788],ebx
jmp short 0x53b1d
cmp dword [dword 0x46878c],byte +0x0
jnz 0x53b1d
mov [dword 0x46878c],ebx
or eax,byte -0x1
pop ebx
pop ebp
ret 0x8
lea eax,[eax+0x0]
mov [0x468784],eax
xor eax,eax
mov [0x468788],eax
xor eax,eax
mov [0x46878c],eax
push byte +0x0
push dword 0x454ac4
call dword 0x5af8
push eax
call dword 0x5f70
cmp dword [dword 0x468788],byte +0x0
jz 0x53b5c
mov eax,[0x468788]
ret
mov eax,[0x46878c]
ret
mov eax,eax
push ebx
mov ebx,[dword 0x46877c]
push byte +0x0
push byte +0x0
movzx edx,dx
push edx
push eax
call dword 0x6278
cmp ebx,[dword 0x46877c]
setz al
pop ebx
ret
push ebp
mov ebp,esp
push ebx
mov eax,[ebp+0xc]
or edx,byte -0x1
mov ecx,eax
mov ebx,[ecx]
cmp ebx,[ebp+0x8]
jnz 0x53b9d
xor edx,edx
mov byte [ecx+0x4],0x1
mov eax,edx
pop ebx
pop ebp
ret 0x8
push ebp
mov ebp,esp
push ecx
push ebx
push esi
push edi
mov esi,[ebp+0xc]
mov ebx,[ebp+0x8]
or edi,byte -0x1
lea eax,[ebp-0x4]
push eax
push ebx
call dword 0x6120
cmp ebx,[esi]
jnz 0x53bd2
call dword 0x5af0
cmp eax,[ebp-0x4]
jnz 0x53bd2
xor edi,edi
mov byte [esi+0x4],0x1
mov eax,edi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
ret 0x8
push ebx
add esp,byte -0x8
mov ebx,eax
call dword 0x5fa0
mov [esp],eax
mov byte [esp+0x4],0x0
test bl,bl
jz 0x53c02
mov eax,esp
push eax
push dword 0x454ba4
call dword 0x5f78
jmp short 0x53c15
mov eax,esp
push eax
push dword 0x454b84
call dword 0x5af8
push eax
call dword 0x5f70
movzx eax,byte [esp+0x4]
pop ecx
pop edx
pop ebx
ret
mov eax,eax
push ebx
push esi
push edi
push ebp
mov ebp,eax
mov eax,[0x46dca0]
call dword 0x5c03c
mov esi,eax
dec esi
test esi,esi
jl 0x53c60
inc esi
xor edi,edi
mov edx,edi
mov eax,[0x46dca0]
call dword 0x5c028
mov ebx,eax
test byte [ebx+0x1d],0x2
jnz 0x53c5c
mov edx,[ebx+0x8]
mov eax,ebp
call dword 0x7784
test eax,eax
jz 0x53c96
inc edi
dec esi
jnz 0x53c3a
mov eax,[0x46dca0]
call dword 0x5c4b0
mov esi,eax
dec esi
test esi,esi
jl 0x53c94
inc esi
xor edi,edi
mov edx,edi
mov eax,[0x46dca0]
call dword 0x5c49c
mov ebx,eax
mov edx,[ebx+0x8]
mov eax,ebp
call dword 0x7784
test eax,eax
jz 0x53c96
inc edi
dec esi
jnz 0x53c74
xor ebx,ebx
mov eax,ebx
pop ebp
pop edi
pop esi
pop ebx
ret
lea eax,[eax+0x0]
push ebx
push esi
mov esi,eax
movzx ebx,byte [dword 0x454cf4]
test si,0x4
jz 0x53cb5
or bl,0x1
test si,0x8
jz 0x53cbf
or bl,0x4
test si,0x1
jz 0x53cc9
or bl,0x8
test si,0x2
jz 0x53cd3
or bl,0x10
test si,0x10
jz 0x53cdd
or bl,0x20
push byte +0x12
call dword 0x6020
test ax,ax
jnl 0x53cec
or bl,0x2
mov eax,ebx
pop esi
pop ebx
ret
add [eax],al
add [eax],al
add [eax],al
add [ebx+0x56],dl
mov esi,eax
movzx ebx,byte [dword 0x454d34]
push byte +0x10
call dword 0x6020
test ax,ax
jnl 0x53d12
or bl,0x1
push byte +0x11
call dword 0x6020
test ax,ax
jnl 0x53d21
or bl,0x4
test esi,0x20000000
jz 0x53d2c
or bl,0x2
mov eax,ebx
pop esi
pop ebx
ret
add [eax],al
add [eax],al
add [eax],al
add [ebx+0x56],dl
mov esi,eax
movzx ebx,byte [dword 0x454d80]
test byte [esi+0x10],0x80
jz 0x53d4c
or bl,0x1
test byte [esi+0x11],0x80
jz 0x53d55
or bl,0x4
test byte [esi+0x12],0x80
jz 0x53d5e
or bl,0x2
test byte [esi+0x1],0x80
jz 0x53d67
or bl,0x8
test byte [esi+0x2],0x80
jz 0x53d70
or bl,0x10
test byte [esi+0x4],0x80
jz 0x53d79
or bl,0x20
mov eax,ebx
pop esi
pop ebx
ret
add [eax],al
add [eax],al
add [eax],al
push ebp
mov ebp,esp
push byte +0x0
push byte +0x0
push ebx
push esi
mov esi,edx
mov ebx,eax
xor eax,eax
push ebp
push dword 0x454de2
push dword [fs:eax]
mov [fs:eax],esp
lea edx,[ebp-0x4]
mov eax,esi
call dword 0x3a1a8
mov eax,[ebp-0x4]
push eax
lea eax,[ebp-0x8]
mov edx,ebx
call dword 0x3c04
mov eax,[ebp-0x8]
pop edx
call dword 0x7784
test eax,eax
setz al
mov ebx,eax
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x454de9
lea eax,[ebp-0x8]
mov edx,0x2
call dword 0x3a40
ret
jmp dword 0x3384
jmp short 0x53dd4
mov eax,ebx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
ret
lea eax,[eax+0x0]
push ebx
push esi
mov ebx,edx
mov esi,eax
jmp short 0x53dff
mov esi,[esi+0x30]
test bl,bl
jnz 0x53e14
mov eax,esi
mov edx,[dword 0x453010]
call dword 0x2d7c
test al,al
jnz 0x53e1a
cmp dword [esi+0x30],byte +0x0
jnz 0x53dfc
mov eax,esi
mov edx,[dword 0x453010]
call dword 0x2d7c
test al,al
jz 0x53e30
mov eax,esi
pop esi
pop ebx
ret
xor eax,eax
pop esi
pop ebx
ret
lea eax,[eax+0x0]
test byte [eax+0x1c],0x10
jz 0x53e40
xor edx,edx
call dword 0x53df4
ret
mov eax,eax
push ebp
mov ebp,esp
add esp,byte -0xc
push ebx
push esi
xor ecx,ecx
mov [ebp-0xc],ecx
mov esi,eax
xor eax,eax
push ebp
push dword 0x454eb9
push dword [fs:eax]
mov [fs:eax],esp
mov eax,esi
call dword 0x53e38
mov ebx,eax
test ebx,ebx
jnz 0x53ea3
mov eax,[esi+0x8]
mov [ebp-0x8],eax
mov byte [ebp-0x4],0xb
lea eax,[ebp-0x8]
push eax
push byte +0x0
lea edx,[ebp-0xc]
mov eax,[0x468d70]
call dword 0x5750
mov ecx,[ebp-0xc]
mov dl,0x1
mov eax,[0x4128ec]
call dword 0xb48c
call dword 0x3464
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x454ec0
lea eax,[ebp-0xc]
call dword 0x3a1c
ret
jmp dword 0x3384
jmp short 0x53eb0
mov eax,ebx
pop esi
pop ebx
mov esp,ebp
pop ebp
ret
push ebp
mov ebp,esp
push ebx
push esi
push edi
test dl,dl
jz 0x53eda
add esp,byte -0x10
call dword 0x2f14
mov esi,ecx
mov ebx,edx
mov edi,eax
xor edx,edx
mov eax,edi
call dword 0x2bc0
mov [edi+0x4],esi
movzx eax,byte [ebp+0x8]
mov [edi+0x18],al
mov cx,0x50
mov [edi+0xa],cx
movzx eax,cx
mov ecx,0xa
xor edx,edx
div ecx
mov [edi+0x8],ax
mov byte [edi+0x1c],0x1
mov dword [edi+0x20],0xa
mov dword [edi+0x40],0x4
mov dword [edi+0x3c],0xc
mov dword [edi+0x28],0xff000014
mov byte [edi+0x2c],0x1
mov byte [edi+0x44],0x1
mov eax,edi
test bl,bl
jz 0x53f48
call dword 0x2f6c
pop dword [dword fs:0x0]
add esp,byte +0xc
mov eax,edi
pop edi
pop esi
pop ebx
pop ebp
ret 0x4
lea eax,[eax+0x0]
movzx eax,byte [eax+0x1f]
xor al,0x1
ret
nop
push ebx
push esi
push edi
mov esi,edx
mov ebx,eax
mov eax,esi
mov edx,[dword 0x452680]
call dword 0x2d7c
test al,al
jz 0x53f9f
mov edi,esi
movzx edx,byte [edi+0x1c]
mov eax,ebx
call dword 0x54838
mov edx,[edi+0x10]
mov eax,ebx
call dword 0x54814
mov edx,[edi+0xc]
mov eax,ebx
call dword 0x546c4
movzx eax,word [edi+0x8]
mov [ebx+0x8],ax
jmp short 0x53fa8
mov edx,esi
mov eax,ebx
call dword 0x1447c
pop edi
pop esi
pop ebx
ret
push ebx
mov ebx,eax
cmp byte [ebx+0x18],0x0
jnz 0x53fe1
mov eax,ebx
call dword 0x5416c
test al,al
jz 0x53fe1
mov eax,[ebx+0x4]
call dword 0x409d4
test al,al
jnz 0x53fd7
xor edx,edx
mov eax,ebx
call dword 0x546c4
jmp short 0x53fe1
mov edx,[ebx+0x10]
mov eax,ebx
call dword 0x546c4
pop ebx
ret
nop
push ebp
mov ebp,esp
push ebx
mov ebx,eax
cmp byte [ebx+0x57],0x0
jz 0x54049
movzx eax,byte [ebx+0x5b]
sub al,0x1
jc 0x54002
sub al,0x2
jz 0x54002
dec al
jz 0x54040
jmp short 0x54049
cmp byte [ebx+0x5b],0x3
jz 0x5401d
movzx eax,byte [dword 0x45504c]
and al,[ebx+0x61]
movzx edx,byte [dword 0x455050]
cmp dl,al
jnz 0x54049
mov eax,[ebp+0x8]
mov eax,[eax-0x4]
mov edx,[ebp+0x8]
mov edx,[edx-0x8]
mov edx,[edx+0xc]
add edx,[ebx+0x40]
add edx,[ebx+0x48]
cmp edx,eax
jl 0x54038
mov eax,edx
mov edx,[ebp+0x8]
mov [edx-0x4],eax
jmp short 0x54049
mov eax,[ebp+0x8]
mov edx,[ebx+0x48]
add [eax-0xc],edx
pop ebx
pop ebp
ret
add eax,0x1000000
add [eax],al
add [ebp-0x75],dl
in al,dx
push ebx
mov ebx,eax
cmp byte [ebx+0x57],0x0
jz 0x540b3
movzx eax,byte [ebx+0x5b]
sub al,0x2
jc 0x5406c
jz 0x540aa
jmp short 0x540b3
cmp byte [ebx+0x5b],0x1
jz 0x54087
movzx eax,byte [dword 0x4550b8]
and al,[ebx+0x61]
movzx edx,byte [dword 0x4550bc]
cmp dl,al
jnz 0x540b3
mov eax,[ebp+0x8]
mov eax,[eax-0x4]
mov edx,[ebp+0x8]
mov edx,[edx-0x8]
mov edx,[edx+0xc]
add edx,[ebx+0x44]
add edx,[ebx+0x4c]
cmp edx,eax
jl 0x540a2
mov eax,edx
mov edx,[ebp+0x8]
mov [edx-0x4],eax
jmp short 0x540b3
mov eax,[ebp+0x8]
mov edx,[ebx+0x4c]
add [eax-0xc],edx
pop ebx
pop ebp
ret
add [eax],al
or al,[eax]
add [eax],al
add al,[eax]
add [eax],al
push ebp
mov ebp,esp
add esp,byte -0xc
push ebx
push esi
mov [ebp-0x8],eax
mov eax,[ebp-0x8]
mov ebx,[eax+0x4]
cmp byte [ebx+0x258],0x0
jz dword 0x54165
mov eax,ebx
mov edx,[eax]
call dword [edx+0xd8]
test al,al
jz 0x5415b
xor eax,eax
mov [ebp-0x4],eax
xor eax,eax
mov [ebp-0xc],eax
mov eax,[ebp-0x8]
mov eax,[eax+0x4]
call dword 0x442b4
mov ebx,eax
dec ebx
test ebx,ebx
jl 0x54142
inc ebx
xor esi,esi
mov eax,[ebp-0x8]
cmp byte [eax+0x18],0x0
jnz 0x5412a
push ebp
mov eax,[ebp-0x8]
mov eax,[eax+0x4]
mov edx,esi
call dword 0x44278
call dword 0x53fe4
pop ecx
jmp short 0x5413e
push ebp
mov eax,[ebp-0x8]
mov eax,[eax+0x4]
mov edx,esi
call dword 0x44278
call dword 0x54054
pop ecx
inc esi
dec ebx
jnz 0x5410b
mov edx,[ebp-0x4]
add edx,[ebp-0xc]
mov eax,[ebp-0x8]
movzx eax,word [eax+0x1a]
add edx,eax
mov eax,[ebp-0x8]
call dword 0x547fc
jmp short 0x54165
xor edx,edx
mov eax,[ebp-0x8]
call dword 0x547fc
pop esi
pop ebx
mov esp,ebp
pop ebp
ret
nop
push ebx
push esi
mov ebx,eax
mov esi,0x100000
cmp byte [ebx+0x18],0x1
jnz 0x54180
mov esi,0x200000
cmp byte [ebx+0x1c],0x0
jz 0x5419a
push byte -0x10
mov eax,[ebx+0x4]
call dword 0x4831c
push eax
call dword 0x60f8
test eax,esi
jnz 0x5419f
xor eax,eax
pop esi
pop ebx
ret
mov al,0x1
pop esi
pop ebx
ret
push ebp
mov ebp,esp
push ebx
mov ebx,0x100000
cmp ax,byte +0x1
jnz 0x541b8
mov ebx,0x200000
push byte -0x10
mov eax,[ebp+0x8]
mov eax,[eax-0x4]
mov eax,[eax+0x4]
call dword 0x4831c
push eax
call dword 0x60f8
test eax,ebx
setnz al
pop ebx
pop ebp
ret
mov eax,eax
push ebp
mov ebp,esp
push ebx
push esi
push edi
mov edi,edx
mov esi,eax
xor ebx,ebx
mov eax,[ebp+0x8]
cmp byte [eax-0x5],0x0
jnz 0x5424d
mov eax,[ebp+0x8]
cmp byte [eax-0x6],0x0
jz 0x5421f
mov eax,[ebp+0x8]
push eax
mov eax,esi
call dword 0x541a4
pop ecx
test al,al
jnz 0x5421f
movzx eax,di
push eax
mov eax,[0x468be8]
mov eax,[eax]
call eax
mov ebx,eax
mov eax,[ebp+0x8]
sub ebx,[eax-0xc]
neg ebx
jmp short 0x5424d
mov eax,[ebp+0x8]
cmp byte [eax-0x6],0x0
jnz 0x5424d
mov eax,[ebp+0x8]
push eax
mov eax,esi
call dword 0x541a4
pop ecx
test al,al
jz 0x5424d
movzx eax,di
push eax
mov eax,[0x468be8]
mov eax,[eax]
call eax
mov ebx,eax
mov eax,[ebp+0x8]
sub ebx,[eax-0xc]
mov eax,ebx
pop edi
pop esi
pop ebx
pop ebp
ret
push ebp
mov ebp,esp
add esp,byte -0xc
push ebx
mov [ebp-0x6],cl
mov [ebp-0x5],dl
mov [ebp-0x4],eax
push byte -0x10
mov eax,[ebp-0x4]
mov eax,[eax+0x4]
call dword 0x4831c
push eax
call dword 0x60f8
test eax,0x840000
setnz al
and eax,byte +0x7f
mov [ebp-0xc],eax
mov eax,[ebp-0x4]
cmp byte [eax+0x18],0x1
jnz 0x542ae
push ebp
mov dx,0x15
xor eax,eax
call dword 0x541d8
pop ecx
mov ebx,eax
mov eax,[ebp-0x4]
mov eax,[eax+0x4]
call dword 0x3fc48
add ebx,eax
mov eax,ebx
jmp short 0x542ce
push ebp
mov dx,0x14
mov ax,0x1
call dword 0x541d8
pop ecx
mov ebx,eax
mov eax,[ebp-0x4]
mov eax,[eax+0x4]
call dword 0x3fc04
add ebx,eax
mov eax,ebx
pop ebx
mov esp,ebp
pop ebp
ret
nop
push ebx
mov ebx,eax
xor ecx,ecx
xor edx,edx
mov eax,ebx
call dword 0x54254
cmp eax,[ebx+0x10]
setl al
pop ebx
ret
mov eax,eax
push ebp
mov ebp,esp
add esp,byte -0x1c
push ebx
push esi
mov dword [ebp-0x1c],0x1c
mov dword [ebp-0x18],0x10
xor ebx,ebx
mov eax,[ebp+0x8]
mov eax,[eax-0x4]
cmp byte [eax+0x18],0x1
jnz 0x54315
mov ebx,0x1
mov eax,[ebp+0x8]
mov esi,[eax-0x8]
movsx esi,word [esi+0x6]
lea eax,[ebp-0x1c]
push eax
push ebx
mov eax,[ebp+0x8]
mov eax,[eax-0x4]
mov eax,[eax+0x4]
call dword 0x4831c
push eax
mov eax,[0x468c58]
mov eax,[eax]
call eax
test eax,eax
jz 0x54343
mov esi,[ebp-0x4]
mov eax,esi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret
nop
push ebp
mov ebp,esp
add esp,byte -0x14
push ebx
push esi
push edi
mov [ebp-0x8],edx
mov [ebp-0x4],eax
mov eax,[ebp-0x4]
cmp byte [eax+0x1f],0x0
jz dword 0x5450f
mov eax,[ebp-0x8]
movzx eax,word [eax+0x4]
sub ax,byte +0x4
jnc dword 0x5450f
mov eax,[ebp-0x8]
movzx eax,word [eax+0x4]
sub ax,byte +0x2
jc 0x5438e
sub ax,byte +0x2
jc 0x543af
jmp short 0x543d5
mov eax,[ebp-0x4]
movzx ebx,word [eax+0x8]
mov eax,ebx
mov edx,[ebp-0x4]
mov ecx,[edx+0x40]
cdq
idiv ecx
mov [ebp-0xc],eax
mov eax,ebx
cdq
idiv ecx
mov [ebp-0x10],edx
mov edi,ecx
jmp short 0x543e1
mov eax,[ebp-0x4]
movzx eax,word [eax+0xa]
mov [ebp-0xc],eax
mov eax,[ebp-0x4]
mov ebx,[eax+0x3c]
mov eax,[ebp-0xc]
cdq
idiv ebx
mov [ebp-0x10],edx
mov eax,[ebp-0xc]
cdq
idiv ebx
mov [ebp-0xc],eax
mov edi,ebx
jmp short 0x543e1
xor edi,edi
xor eax,eax
mov [ebp-0xc],eax
xor eax,eax
mov [ebp-0x10],eax
xor eax,eax
mov [ebp-0x14],eax
test edi,edi
jng dword 0x5448f
call dword 0x5b68
mov ebx,eax
mov esi,ebx
sub esi,[ebp-0x14]
mov eax,[ebp-0x4]
cmp esi,[eax+0x20]
jnc 0x54410
mov eax,[ebp-0x4]
mov eax,[eax+0x20]
sub eax,esi
push eax
call dword 0xcb50
mov [ebp-0x14],ebx
mov eax,[ebp-0x8]
movzx eax,word [eax+0x4]
sub ax,byte +0x1
jc 0x5442e
jz 0x54441
dec ax
jz 0x54454
dec ax
jz 0x54467
jmp short 0x54478
mov eax,[ebp-0x4]
mov edx,[eax+0xc]
sub edx,[ebp-0xc]
mov eax,[ebp-0x4]
call dword 0x546c4
jmp short 0x54478
mov eax,[ebp-0x4]
mov edx,[eax+0xc]
add edx,[ebp-0xc]
mov eax,[ebp-0x4]
call dword 0x546c4
jmp short 0x54478
mov eax,[ebp-0x4]
mov edx,[eax+0xc]
sub edx,[ebp-0xc]
mov eax,[ebp-0x4]
call dword 0x546c4
jmp short 0x54478
mov eax,[ebp-0x4]
mov edx,[eax+0xc]
add edx,[ebp-0xc]
mov eax,[ebp-0x4]
call dword 0x546c4
mov eax,[ebp-0x4]
mov eax,[eax+0x4]
mov edx,[eax]
call dword [edx+0x8c]
dec edi
test edi,edi
jg dword 0x543ee
cmp dword [ebp-0x10],byte +0x0
jng dword 0x54643
mov eax,[ebp-0x8]
movzx eax,word [eax+0x4]
sub ax,byte +0x1
jc 0x544b7
jz 0x544cd
dec ax
jz 0x544e3
dec ax
jz 0x544f9
jmp dword 0x54643
mov eax,[ebp-0x4]
mov edx,[eax+0xc]
sub edx,[ebp-0x10]
mov eax,[ebp-0x4]
call dword 0x546c4
jmp dword 0x54643
mov eax,[ebp-0x4]
mov edx,[eax+0xc]
add edx,[ebp-0x10]
mov eax,[ebp-0x4]
call dword 0x546c4
jmp dword 0x54643
mov eax,[ebp-0x4]
mov edx,[eax+0xc]
sub edx,[ebp-0x10]
mov eax,[ebp-0x4]
call dword 0x546c4
jmp dword 0x54643
mov eax,[ebp-0x4]
mov edx,[eax+0xc]
add edx,[ebp-0x10]
mov eax,[ebp-0x4]
call dword 0x546c4
jmp dword 0x54643
mov eax,[ebp-0x8]
movsx eax,word [eax+0x4]
cmp eax,byte +0x7
ja dword 0x54643
jmp dword [eax*4+0x455526]
inc esi
push ebp
inc ebp
add [edx+0x55],ah
inc ebp
add [esi+0x55],bh
inc ebp
add [edi-0x3fffbaab],bl
push ebp
inc ebp
add al,dh
push ebp
inc ebp
add [ecx],ch
push esi
inc ebp
add [dword 0x8b004556],dh
inc ebp
cld
mov edx,[eax+0xc]
mov eax,[ebp-0x4]
movzx eax,word [eax+0x8]
sub edx,eax
mov eax,[ebp-0x4]
call dword 0x546c4
jmp dword 0x54643
mov eax,[ebp-0x4]
mov edx,[eax+0xc]
mov eax,[ebp-0x4]
movzx eax,word [eax+0x8]
add edx,eax
mov eax,[ebp-0x4]
call dword 0x546c4
jmp dword 0x54643
xor ecx,ecx
mov dl,0x1
mov eax,[ebp-0x4]
call dword 0x54254
mov edx,[ebp-0x4]
mov edx,[edx+0xc]
sub edx,eax
mov eax,[ebp-0x4]
call dword 0x546c4
jmp dword 0x54643
xor ecx,ecx
mov dl,0x1
mov eax,[ebp-0x4]
call dword 0x54254
mov edx,eax
mov eax,[ebp-0x4]
add edx,[eax+0xc]
mov eax,[ebp-0x4]
call dword 0x546c4
jmp dword 0x54643
mov eax,[ebp-0x4]
cmp dword [eax+0x14],0x7fff
jng 0x545df
push ebp
call dword 0x542ec
pop ecx
mov edx,eax
mov eax,[ebp-0x4]
call dword 0x546c4
jmp short 0x54643
mov edx,[ebp-0x8]
movsx edx,word [edx+0x6]
mov eax,[ebp-0x4]
call dword 0x546c4
jmp short 0x54643
mov eax,[ebp-0x4]
cmp byte [eax+0x1d],0x0
jz 0x54643
mov eax,[ebp-0x4]
cmp dword [eax+0x14],0x7fff
jng 0x54618
push ebp
call dword 0x542ec
pop ecx
mov edx,eax
mov eax,[ebp-0x4]
call dword 0x546c4
jmp short 0x54643
mov edx,[ebp-0x8]
movsx edx,word [edx+0x6]
mov eax,[ebp-0x4]
call dword 0x546c4
jmp short 0x54643
xor edx,edx
mov eax,[ebp-0x4]
call dword 0x546c4
jmp short 0x54643
mov eax,[ebp-0x4]
mov edx,[eax+0x14]
mov eax,[ebp-0x4]
call dword 0x546c4
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret
mov eax,eax
push ebx
push esi
mov ebx,eax
cmp edx,[ebx+0x24]
jz 0x5468a
mov esi,edx
test esi,esi
jnz 0x54672
movzx eax,byte [ebx+0x18]
mov eax,[eax*4+0x468798]
push eax
mov eax,[0x468be8]
mov eax,[eax]
call eax
mov edx,eax
mov [ebx+0x24],edx
mov byte [ebx+0x44],0x1
mov eax,[ebx+0x4]
call dword 0x54d44
test esi,esi
jnz 0x5468a
xor eax,eax
mov [ebx+0x24],eax
pop esi
pop ebx
ret
lea eax,[eax+0x0]
cmp edx,[eax+0x28]
jz 0x546a8
mov [eax+0x28],edx
mov byte [eax+0x2c],0x0
mov byte [eax+0x44],0x1
mov eax,[eax+0x4]
call dword 0x54d44
ret
lea eax,[eax+0x0]
cmp dl,[eax+0x2c]
jz 0x546c2
mov [eax+0x2c],dl
test dl,dl
jz 0x546c2
mov edx,0xff000014
call dword 0x54690
ret
nop
push ebx
push esi
push edi
mov ebx,eax
mov eax,[ebx+0x4]
test byte [eax+0x1c],0x2
jz 0x546da
mov [ebx+0xc],edx
jmp dword 0x54783
mov eax,[ebx+0x14]
cmp edx,eax
jng 0x546e5
mov edx,eax
jmp short 0x546eb
test edx,edx
jnl 0x546eb
xor edx,edx
cmp byte [ebx+0x18],0x0
jnz 0x546f5
xor esi,esi
jmp short 0x546f9
mov si,0x1
mov eax,[ebx+0xc]
cmp edx,eax
jz 0x5474f
mov [ebx+0xc],edx
cmp byte [ebx+0x18],0x0
jnz 0x54719
sub eax,edx
mov edx,eax
xor ecx,ecx
mov eax,[ebx+0x4]
call dword 0x47ec8
jmp short 0x54727
mov ecx,eax
sub ecx,edx
mov eax,[ebx+0x4]
xor edx,edx
call dword 0x47ec8
mov eax,[ebx+0x4]
test byte [eax+0x1c],0x10
jz 0x5474f
xor edx,edx
call dword 0x53e38
test eax,eax
jz 0x5474f
cmp dword [eax+0x298],byte +0x0
jz 0x5474f
mov eax,[eax+0x298]
mov edx,[eax]
call dword [edx+0xc]
movzx edi,si
push edi
mov eax,[ebx+0x4]
call dword 0x4831c
push eax
mov eax,[0x468da4]
mov eax,[eax]
call eax
cmp eax,[ebx+0xc]
jz 0x54783
push byte -0x1
mov eax,[ebx+0xc]
push eax
push edi
mov eax,[ebx+0x4]
call dword 0x4831c
push eax
mov eax,[0x468bb0]
mov eax,[eax]
call eax
pop edi
pop esi
pop ebx
ret
nop
push ebx
push esi
mov ebx,eax
cmp edx,[ebx+0x30]
jz 0x547c6
mov esi,edx
test esi,esi
jnz 0x547ae
movzx eax,byte [ebx+0x18]
mov eax,[eax*4+0x4687a0]
push eax
mov eax,[0x468be8]
mov eax,[eax]
call eax
mov edx,eax
mov [ebx+0x30],edx
mov byte [ebx+0x44],0x1
mov eax,[ebx+0x4]
call dword 0x54d44
test esi,esi
jnz 0x547c6
xor eax,eax
mov [ebx+0x30],eax
pop esi
pop ebx
ret
lea eax,[eax+0x0]
cmp dl,[eax+0x34]
jz 0x547e0
mov [eax+0x34],dl
mov byte [eax+0x44],0x1
mov eax,[eax+0x4]
call dword 0x54d44
ret
lea eax,[eax+0x0]
cmp edx,[eax+0x38]
jz 0x547f8
mov [eax+0x38],edx
mov byte [eax+0x44],0x1
mov eax,[eax+0x4]
call dword 0x54d44
ret
lea eax,[eax+0x0]
mov ecx,edx
mov [eax+0x10],ecx
test ecx,ecx
jnl 0x5480a
xor edx,edx
mov [eax+0x10],edx
mov eax,[eax+0x4]
call dword 0x54d44
ret
nop
mov ecx,[eax+0x4]
mov byte [ecx+0x258],0x0
mov byte [eax+0x1e],0x1
call dword 0x547fc
ret
mov eax,[eax+0x4]
movzx eax,byte [eax+0x258]
xor al,0x1
ret
lea eax,[eax+0x0]
mov [eax+0x1c],dl
mov eax,[eax+0x4]
call dword 0x54d44
ret
push ebp
mov ebp,esp
push ebx
push esi
mov ebx,eax
mov esi,[ebp+0x8]
add esi,byte -0x4
cmp bl,0x1
cmc
sbb eax,eax
push eax
mov eax,[esi]
movzx eax,byte [eax+0x34]
mov eax,[eax*4+0x4687d0]
push eax
mov eax,[esi]
movzx eax,byte [eax+0x18]
lea eax,[eax+eax*4]
mov eax,[eax*4+0x4687a8]
push eax
mov eax,[esi]
mov eax,[eax+0x4]
call dword 0x4831c
push eax
call dword 0x33630
mov eax,[esi]
cmp dword [eax+0x24],byte +0x0
jng 0x548b8
push byte +0x0
mov eax,[esi]
mov eax,[eax+0x24]
push eax
mov eax,[esi]
movzx eax,byte [eax+0x18]
lea eax,[eax+eax*4]
mov eax,[eax*4+0x4687ac]
push eax
mov eax,[esi]
mov eax,[eax+0x4]
call dword 0x4831c
push eax
call dword 0x33630
mov eax,[esi]
cmp dword [eax+0x38],byte +0x0
jng 0x548e9
push byte +0x0
mov eax,[esi]
mov eax,[eax+0x38]
push eax
mov eax,[esi]
movzx eax,byte [eax+0x18]
lea eax,[eax+eax*4]
mov eax,[eax*4+0x4687b0]
push eax
mov eax,[esi]
mov eax,[eax+0x4]
call dword 0x4831c
push eax
call dword 0x33630
mov eax,[esi]
cmp dword [eax+0x30],byte +0x0
jng 0x5491a
push byte +0x0
mov eax,[esi]
mov eax,[eax+0x30]
push eax
mov eax,[esi]
movzx eax,byte [eax+0x18]
lea eax,[eax+eax*4]
mov eax,[eax*4+0x4687b4]
push eax
mov eax,[esi]
mov eax,[eax+0x4]
call dword 0x4831c
push eax
call dword 0x33630
push byte +0x0
mov eax,[esi]
mov eax,[eax+0x28]
call dword 0x1f6cc
push eax
mov eax,[esi]
movzx eax,byte [eax+0x18]
lea eax,[eax+eax*4]
mov eax,[eax*4+0x4687b8]
push eax
mov eax,[esi]
mov eax,[eax+0x4]
call dword 0x4831c
push eax
call dword 0x33630
pop esi
pop ebx
pop ebp
ret
push ebp
mov ebp,esp
add esp,byte -0x24
push ebx
push esi
push edi
mov [ebp-0x6],cl
mov [ebp-0x5],dl
mov [ebp-0x4],eax
lea esi,[ebp-0x4]
mov eax,[esi]
xor edx,edx
mov [eax+0x14],edx
xor ebx,ebx
mov eax,[esi]
cmp byte [eax+0x18],0x1
jnz 0x54976
mov bx,0x1
mov eax,[esi]
cmp byte [eax+0x1c],0x0
jz 0x549a4
movzx ecx,byte [ebp-0x6]
movzx edx,byte [ebp-0x5]
mov eax,[esi]
call dword 0x54254
mov edx,[esi]
mov edi,[edx+0x10]
sub edi,eax
mov eax,[esi]
mov [eax+0x14],edi
test edi,edi
jnl 0x549a4
mov eax,[esi]
xor edx,edx
mov [eax+0x14],edx
mov dword [ebp-0x22],0x1c
mov dword [ebp-0x1e],0x17
xor eax,eax
mov [ebp-0x1a],eax
mov eax,[esi]
cmp dword [eax+0x14],byte +0x0
jng 0x549c9
mov eax,[esi]
mov eax,[eax+0x10]
mov [ebp-0x16],eax
jmp short 0x549ce
xor eax,eax
mov [ebp-0x16],eax
movzx ecx,byte [ebp-0x6]
movzx edx,byte [ebp-0x5]
mov eax,[esi]
call dword 0x54254
inc eax
mov [ebp-0x12],eax
mov eax,[esi]
mov eax,[eax+0xc]
mov [ebp-0xe],eax
mov [ebp-0xa],eax
push ebp
mov eax,[esi]
movzx eax,byte [eax+0x44]
call dword 0x54844
pop ecx
mov eax,[esi]
mov byte [eax+0x44],0x0
push byte -0x1
lea eax,[ebp-0x22]
push eax
movzx eax,bx
push eax
mov eax,[esi]
mov eax,[eax+0x4]
call dword 0x4831c
push eax
mov eax,[0x468e78]
mov eax,[eax]
call eax
mov eax,[esi]
mov edx,[eax+0xc]
mov eax,[esi]
call dword 0x546c4
xor ecx,ecx
mov dl,0x1
mov eax,[esi]
call dword 0x54254
lea eax,[eax+eax*8]
mov ecx,0xa
cdq
idiv ecx
mov ebx,eax
mov eax,[esi]
mov [eax+0xa],bx
mov eax,[esi]
cmp byte [eax+0x1f],0x0
jz 0x54a61
movzx eax,bx
mov ecx,0xa
xor edx,edx
div ecx
mov edx,[esi]
mov [edx+0x8],ax
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret
push ebx
push esi
test dl,dl
jz 0x54a76
add esp,byte -0x10
call dword 0x2f14
mov ebx,edx
mov esi,eax
xor edx,edx
mov eax,esi
call dword 0x43100
mov eax,[esi+0x50]
or eax,[dword 0x455adc]
mov [esi+0x50],eax
push byte +0x0
mov ecx,esi
mov dl,0x1
mov eax,[0x452680]
call dword 0x53ec8
mov [esi+0x250],eax
push byte +0x1
mov ecx,esi
mov dl,0x1
mov eax,[0x452680]
call dword 0x53ec8
mov [esi+0x254],eax
mov byte [esi+0x258],0x0
mov eax,esi
test bl,bl
jz 0x54ad7
call dword 0x2f6c
pop dword [dword fs:0x0]
add esp,byte +0xc
mov eax,esi
pop esi
pop ebx
ret
add [eax],al
add al,[eax]
push ebx
push esi
call dword 0x2fbc
mov ebx,edx
mov esi,eax
mov eax,[esi+0x250]
call dword 0x2bf0
mov eax,[esi+0x254]
call dword 0x2bf0
mov edx,ebx
and dl,0xfc
mov eax,esi
call dword 0x43244
test bl,bl
jng 0x54b18
mov eax,esi
call dword 0x2f64
pop esi
pop ebx
ret
nop
push ebx
mov ebx,edx
mov edx,ebx
call dword 0x44440
and dword [ebx+0x24],byte -0x4
pop ebx
ret
push ebx
mov ebx,eax
mov eax,ebx
call dword 0x4456c
mov eax,[0x468eb4]
cmp byte [eax+0xd],0x0
jnz 0x54b61
mov edx,0x1
mov eax,0x5
call dword 0xbc90
test al,al
jnz 0x54b61
mov eax,ebx
call dword 0x4831c
push eax
call dword 0x33664
mov eax,ebx
call dword 0x54d44
pop ebx
ret
mov eax,eax
push ebx
push esi
push edi
mov edi,ecx
mov esi,edx
mov ebx,eax
mov eax,ebx
call dword 0x54cc4
mov ecx,edi
mov edx,esi
mov eax,ebx
call dword 0x43c38
pop edi
pop esi
pop ebx
ret
nop
cmp byte [eax+0x5c],0x0
jnz 0x54ba4
cmp byte [eax+0x1dc],0x0
jz 0x54ba7
cmp byte [eax+0x1db],0x0
jz 0x54ba7
xor eax,eax
ret
mov al,0x1
ret
mov eax,eax
push ebp
mov ebp,esp
add esp,byte -0x10
push ebx
push esi
push edi
mov [ebp-0x4],eax
mov dl,0x1
mov eax,[0x41294c]
call dword 0x2bc0
mov [ebp-0x10],eax
xor eax,eax
push ebp
push dword 0x455cb4
push dword [fs:eax]
mov [fs:eax],esp
mov eax,[ebp-0x4]
call dword 0x3fc04
mov [ebp-0x8],eax
mov eax,[ebp-0x4]
mov ebx,[eax+0x250]
mov eax,ebx
call dword 0x5416c
test al,al
jz 0x54bfc
mov eax,[ebx+0x10]
cmp eax,[ebp-0x8]
jg 0x54c00
xor eax,eax
jmp short 0x54c02
mov al,0x1
mov [ebp-0x9],al
cmp byte [ebp-0x9],0x0
jz 0x54c1a
mov eax,[ebx+0x10]
mov [ebp-0x8],eax
xor edx,edx
mov eax,ebx
call dword 0x546c4
mov eax,[ebp-0x4]
call dword 0x442b4
mov esi,eax
dec esi
test esi,esi
jl 0x54c60
inc esi
xor ebx,ebx
mov edx,ebx
mov eax,[ebp-0x4]
call dword 0x44278
mov edi,eax
mov edx,ebx
mov eax,[ebp-0x4]
call dword 0x44278
mov edx,eax
mov eax,[ebp-0x10]
call dword 0x13d24
mov edx,[ebp-0x8]
sub edx,[edi+0x48]
sub edx,[edi+0x40]
mov eax,edi
call dword 0x3f918
inc ebx
dec esi
jnz 0x54c2c
mov eax,[ebp-0x10]
mov esi,[eax+0x8]
dec esi
test esi,esi
jl 0x54c8a
inc esi
xor ebx,ebx
push byte +0x0
mov edx,ebx
mov eax,[ebp-0x10]
call dword 0x13e7c
xor ecx,ecx
mov edx,0xb03e
call dword 0x41588
inc ebx
dec esi
jnz 0x54c6e
cmp byte [ebp-0x9],0x0
jz 0x54c9e
mov eax,[ebp-0x4]
mov eax,[eax+0x250]
call dword 0x53fac
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x455cbb
mov eax,[ebp-0x10]
call dword 0x2bf0
ret
jmp dword 0x3384
jmp short 0x54cab
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret
mov eax,eax
push ebx
mov ebx,eax
cmp dword [ebx+0x25c],byte +0x0
jg 0x54ce6
mov eax,[ebx+0x250]
call dword 0x540c0
mov eax,[ebx+0x254]
call dword 0x540c0
pop ebx
ret
push ebx
mov ebx,eax
cmp dl,[ebx+0x258]
jz 0x54d20
mov [ebx+0x258],dl
test dl,dl
jz 0x54d06
mov eax,ebx
call dword 0x54cc4
jmp short 0x54d20
xor edx,edx
mov eax,[ebx+0x250]
call dword 0x54814
xor edx,edx
mov eax,[ebx+0x254]
call dword 0x54814
pop ebx
ret
mov eax,eax
push esi
mov esi,eax
mov eax,[esi+0x250]
mov ecx,[eax]
call dword [ecx+0x8]
pop esi
ret
push esi
mov esi,eax
mov eax,[esi+0x254]
mov ecx,[eax]
call dword [ecx+0x8]
pop esi
ret
push ebp
mov ebp,esp
push ecx
mov [ebp-0x4],eax
mov eax,[ebp-0x4]
cmp byte [eax+0x260],0x0
jnz dword 0x54e36
mov eax,[ebp-0x4]
call dword 0x486bc
test al,al
jz dword 0x54e36
xor eax,eax
push ebp
push dword 0x455e2f
push dword [fs:eax]
mov [fs:eax],esp
mov eax,[ebp-0x4]
mov byte [eax+0x260],0x1
mov eax,[ebp-0x4]
mov eax,[eax+0x254]
call dword 0x542d4
test al,al
jz 0x54dbb
mov eax,[ebp-0x4]
mov eax,[eax+0x250]
mov cl,0x1
xor edx,edx
call dword 0x5494c
mov eax,[ebp-0x4]
mov eax,[eax+0x254]
xor ecx,ecx
mov dl,0x1
call dword 0x5494c
jmp short 0x54e17
mov eax,[ebp-0x4]
mov eax,[eax+0x250]
call dword 0x542d4
test al,al
jz 0x54df3
mov eax,[ebp-0x4]
mov eax,[eax+0x254]
mov cl,0x1
xor edx,edx
call dword 0x5494c
mov eax,[ebp-0x4]
mov eax,[eax+0x250]
xor ecx,ecx
mov dl,0x1
call dword 0x5494c
jmp short 0x54e17
mov eax,[ebp-0x4]
mov eax,[eax+0x254]
xor ecx,ecx
xor edx,edx
call dword 0x5494c
mov eax,[ebp-0x4]
mov eax,[eax+0x250]
xor ecx,ecx
mov dl,0x1
call dword 0x5494c
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x455e36
mov eax,[ebp-0x4]
mov byte [eax+0x260],0x0
ret
jmp dword 0x3384
jmp short 0x54e24
pop ecx
pop ebp
ret
lea eax,[eax+0x0]
test edx,edx
jz 0x54e51
test byte [edx+0x1c],0x1
jnz 0x54e51
test byte [eax+0x1c],0x1
jnz 0x54e51
call dword 0x54e54
ret
mov eax,eax
push ebx
push esi
push edi
push ebp
add esp,byte -0x20
mov esi,edx
mov ebx,eax
mov edi,esp
test esi,esi
jz dword 0x54f9d
mov edx,edi
mov eax,esi
mov ecx,[eax]
call dword [ecx+0x44]
mov eax,[ebx+0x250]
movzx eax,word [eax+0x1a]
sub [edi],eax
add [edi+0x8],eax
mov eax,[ebx+0x254]
movzx eax,word [eax+0x1a]
sub [edi+0x4],eax
add [edi+0xc],eax
lea ecx,[esp+0x18]
mov edx,edi
mov eax,esi
call dword 0x3fd18
lea edx,[esp+0x18]
lea ecx,[esp+0x10]
mov eax,ebx
call dword 0x3fdc8
mov eax,[esp+0x10]
mov [edi],eax
mov eax,[esp+0x14]
mov [edi+0x4],eax
lea ecx,[esp+0x18]
lea edx,[edi+0x8]
mov eax,esi
call dword 0x3fd18
lea edx,[esp+0x18]
lea ecx,[esp+0x10]
mov eax,ebx
call dword 0x3fdc8
mov eax,[esp+0x10]
mov [edi+0x8],eax
mov eax,[esp+0x14]
mov [edi+0xc],eax
mov esi,[edi]
test esi,esi
jnl 0x54efd
mov eax,[ebx+0x250]
mov edx,[eax+0xc]
add edx,esi
call dword 0x546c4
jmp short 0x54f40
mov eax,ebx
call dword 0x3fc04
mov ebp,[edi+0x8]
cmp eax,ebp
jnl 0x54f40
mov eax,ebx
call dword 0x3fc04
sub ebp,esi
cmp eax,ebp
jnl 0x54f24
mov eax,ebx
call dword 0x3fc04
add eax,[edi]
mov [edi+0x8],eax
mov esi,[ebx+0x250]
mov eax,ebx
call dword 0x3fc04
mov edx,[esi+0xc]
add edx,[edi+0x8]
sub edx,eax
mov eax,esi
call dword 0x546c4
mov esi,[edi+0x4]
test esi,esi
jnl 0x54f59
mov eax,[ebx+0x254]
mov edx,[eax+0xc]
add edx,esi
call dword 0x546c4
jmp short 0x54f9d
mov eax,ebx
call dword 0x3fc48
mov ebp,[edi+0xc]
cmp eax,ebp
jnl 0x54f9d
mov eax,ebx
call dword 0x3fc48
sub ebp,esi
cmp eax,ebp
jnl 0x54f81
mov eax,ebx
call dword 0x3fc48
add eax,[edi+0x4]
mov [edi+0xc],eax
mov esi,[ebx+0x254]
mov eax,ebx
call dword 0x3fc48
mov edx,[esi+0xc]
add edx,[edi+0xc]
sub edx,eax
mov eax,esi
call dword 0x546c4
add esp,byte +0x20
pop ebp
pop edi
pop esi
pop ebx
ret
lea eax,[eax+0x0]
push ebx
push esi
push edi
push ebp
mov edi,ecx
mov esi,edx
mov ebx,eax
cmp edi,esi
jz 0x55033
test byte [ebx+0x1c],0x1
jnz 0x54fd0
mov eax,[ebx+0x250]
mov byte [eax+0x1e],0x1
mov eax,[ebx+0x254]
mov byte [eax+0x1e],0x1
xor edx,edx
mov eax,[ebx+0x250]
call dword 0x546c4
xor edx,edx
mov eax,[ebx+0x254]
call dword 0x546c4
cmp byte [ebx+0x258],0x0
jnz 0x55033
mov ebp,[ebx+0x250]
cmp byte [ebp+0x1e],0x0
jz 0x55013
push edi
push esi
mov eax,[ebp+0x10]
push eax
call dword 0x5bc0
mov edx,eax
mov eax,ebp
call dword 0x54814
mov ebp,[ebx+0x254]
cmp byte [ebp+0x1e],0x0
jz 0x55033
push edi
push esi
mov eax,[ebp+0x10]
push eax
call dword 0x5bc0
mov edx,eax
mov eax,ebp
call dword 0x54814
mov eax,[ebx+0x250]
mov byte [eax+0x1e],0x0
mov eax,[ebx+0x254]
mov byte [eax+0x1e],0x0
pop ebp
pop edi
pop esi
pop ebx
ret
push ebx
push esi
push edi
mov edi,ecx
mov esi,edx
mov ebx,eax
mov ecx,edi
mov edx,esi
mov eax,ebx
call dword 0x54fa8
mov ecx,edi
mov edx,esi
mov eax,ebx
call dword 0x47e1c
pop edi
pop esi
pop ebx
ret
nop
ret
lea eax,[eax+0x0]
push ebp
mov ebp,esp
add esp,byte -0x8
push ebx
mov ebx,edx
mov [ebp-0x4],eax
mov eax,[ebp-0x4]
inc dword [eax+0x25c]
xor edx,edx
push ebp
push dword 0x4560e0
push dword [fs:edx]
mov [fs:edx],esp
mov edx,ebx
mov eax,[ebp-0x4]
call dword 0x46770
xor eax,eax
mov edx,[ebx+0x4]
sub edx,byte +0x1
jc 0x550b2
jz 0x550b6
dec edx
jz 0x550ba
jmp short 0x550bc
xor eax,eax
jmp short 0x550bc
mov al,0x1
jmp short 0x550bc
mov al,0x2
mov edx,eax
mov eax,[ebp-0x4]
mov ecx,[eax]
call dword [ecx+0xe0]
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x4560e7
mov eax,[ebp-0x4]
dec dword [eax+0x25c]
ret
jmp dword 0x3384
jmp short 0x550d6
mov eax,[ebp-0x4]
movzx eax,byte [eax+0x260]
mov [ebp-0x5],al
mov eax,[ebp-0x4]
mov byte [eax+0x260],0x1
xor eax,eax
push ebp
push dword 0x45612f
push dword [fs:eax]
mov [fs:eax],esp
mov eax,[ebp-0x4]
call dword 0x54cc4
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x456136
mov eax,[ebp-0x4]
movzx edx,byte [ebp-0x5]
mov [eax+0x260],dl
ret
jmp dword 0x3384
jmp short 0x55121
mov eax,[ebp-0x4]
mov eax,[eax+0x250]
cmp byte [eax+0x1c],0x0
jnz 0x55154
mov eax,[ebp-0x4]
mov eax,[eax+0x254]
cmp byte [eax+0x1c],0x0
jz 0x5515c
mov eax,[ebp-0x4]
call dword 0x54d44
pop ebx
pop ecx
pop ecx
pop ebp
ret
lea eax,[eax+0x0]
cmp dword [edx+0x8],byte +0x0
jnz 0x55182
mov ecx,[eax+0x250]
cmp byte [ecx+0x1c],0x0
jz 0x55182
mov eax,[eax+0x250]
call dword 0x5434c
ret
call dword 0x464bc
ret
cmp dword [edx+0x8],byte +0x0
jnz 0x551a6
mov ecx,[eax+0x254]
cmp byte [ecx+0x1c],0x0
jz 0x551a6
mov eax,[eax+0x254]
call dword 0x5434c
ret
call dword 0x464dc
ret
push ebx
push esi
push edi
add esp,byte -0x14
mov [esp],edx
mov ebx,eax
mov eax,ebx
call dword 0x3fc04
mov edx,[ebx+0x250]
mov edx,[edx+0x10]
cmp eax,edx
jnl 0x551cf
mov esi,edx
jmp short 0x551d1
mov esi,eax
mov eax,ebx
call dword 0x3fc48
mov edx,[ebx+0x254]
mov edx,[edx+0x10]
cmp eax,edx
jng 0x551e9
mov edi,eax
jmp short 0x551eb
mov edi,edx
push edi
lea eax,[esp+0x8]
push eax
mov eax,[ebx+0x254]
mov edx,[eax+0xc]
neg edx
mov eax,[ebx+0x250]
mov eax,[eax+0xc]
neg eax
mov ecx,esi
call dword 0x12a54
mov eax,[esp]
lea esi,[esp+0x4]
mov edi,eax
movsd
movsd
movsd
movsd
mov edx,[esp]
mov eax,ebx
call dword 0x43470
add esp,byte +0x14
pop edi
pop esi
pop ebx
ret
push ebp
mov ebp,esp
add esp,byte -0xc
mov [ebp-0x8],edx
mov [ebp-0x4],eax
mov eax,[ebp-0x8]
mov eax,[eax+0x4]
mov [ebp-0xc],eax
xor eax,eax
push ebp
push dword 0x45628d
push dword [fs:eax]
mov [fs:eax],esp
mov eax,[ebp-0x4]
mov edx,[dword 0x46778c]
call dword 0x2d7c
test al,al
jnz 0x5526b
mov eax,[ebp-0x8]
mov dword [eax+0x4],0x1
mov edx,[ebp-0x8]
mov eax,[ebp-0x4]
call dword 0x47668
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x456294
mov eax,[ebp-0x8]
mov edx,[ebp-0xc]
mov [eax+0x4],edx
ret
jmp dword 0x3384
jmp short 0x55283
mov eax,[ebp-0x4]
call dword 0x486bc
test al,al
jz 0x552b6
mov eax,[ebp-0x4]
mov eax,[eax+0x250]
call dword 0x53fac
mov eax,[ebp-0x4]
call dword 0x54d44
mov esp,ebp
pop ebp
ret
mov eax,eax
push ebp
mov ebp,esp
add esp,0xfffffeec
push ebx
xor ebx,ebx
mov [ebp-0x114],ebx
test dl,dl
jz 0x552da
add esp,byte -0x10
call dword 0x2f14
mov ebx,ecx
mov [ebp-0x5],dl
mov [ebp-0x4],eax
xor eax,eax
push ebp
push dword 0x456420
push dword [fs:eax]
mov [fs:eax],esp
mov eax,[0x468e7c]
mov eax,[eax]
mov edx,[eax]
call dword [edx+0x14]
xor eax,eax
push ebp
push dword 0x456400
push dword [fs:eax]
mov [fs:eax],esp
push byte +0x0
mov ecx,ebx
xor edx,edx
mov eax,[ebp-0x4]
mov ebx,[eax]
call dword [ebx+0xf0]
mov eax,[ebp-0x4]
call dword 0x2ac8
cmp eax,[dword 0x45338c]
jz dword 0x553e6
mov eax,[ebp-0x4]
test byte [eax+0x1c],0x10
jnz dword 0x553e6
mov eax,[ebp-0x4]
or byte [eax+0x358],0x1
xor eax,eax
push ebp
push dword 0x4563c8
push dword [fs:eax]
mov [fs:eax],esp
mov edx,[dword 0x45338c]
mov eax,[ebp-0x4]
call dword 0x13c3c
test al,al
jnz 0x553b0
lea edx,[ebp-0x110]
mov eax,[ebp-0x4]
mov eax,[eax]
call dword 0x2ad0
lea eax,[ebp-0x110]
mov [ebp-0x10],eax
mov byte [ebp-0xc],0x4
lea eax,[ebp-0x10]
push eax
push byte +0x0
lea edx,[ebp-0x114]
mov eax,[0x468c7c]
call dword 0x5750
mov ecx,[ebp-0x114]
mov dl,0x1
mov eax,[0x4126c8]
call dword 0xb48c
call dword 0x3464
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x4563cf
mov eax,[ebp-0x4]
and byte [eax+0x358],0xfe
ret
jmp dword 0x3384
jmp short 0x553bd
mov eax,[ebp-0x4]
cmp byte [eax+0x27c],0x0
jz 0x553e6
mov eax,[ebp-0x4]
mov edx,[eax]
call dword [edx+0xe4]
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x456407
mov eax,[0x468e7c]
mov eax,[eax]
mov edx,[eax]
call dword [edx+0x18]
ret
jmp dword 0x3384
jmp short 0x553f3
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x456427
lea eax,[ebp-0x114]
call dword 0x3a1c
ret
jmp dword 0x3384
jmp short 0x55414
mov eax,[ebp-0x4]
cmp byte [ebp-0x5],0x0
jz 0x5543f
call dword 0x2f6c
pop dword [dword fs:0x0]
add esp,byte +0xc
mov eax,[ebp-0x4]
pop ebx
mov esp,ebp
pop ebp
ret
nop
push ebx
push esi
mov ebx,eax
cmp byte [ebx+0x27c],0x0
jnz 0x5545f
mov eax,ebx
mov edx,[eax]
call dword [edx+0xe4]
test byte [ebx+0x358],0x20
jz 0x5547a
mov eax,ebx
mov si,0xffb0
call dword 0x2dec
and byte [ebx+0x358],0xdf
pop esi
pop ebx
ret
lea eax,[eax+0x0]
push ebp
mov ebp,esp
push ecx
push ebx
push esi
test dl,dl
jz 0x55492
add esp,byte -0x10
call dword 0x2f14
mov esi,ecx
mov [ebp-0x1],dl
mov ebx,eax
mov eax,0xc
call dword 0x1e48
mov [ebx+0x2a4],eax
mov ecx,esi
xor edx,edx
mov eax,ebx
call dword 0x54a68
mov eax,[0x456644]
mov [ebx+0x50],eax
xor edx,edx
mov eax,ebx
call dword 0x5b7e8
xor edx,edx
mov eax,ebx
call dword 0x5b824
mov edx,0x140
mov eax,ebx
call dword 0x3f980
mov edx,0xf0
mov eax,ebx
call dword 0x3f9b4
mov dl,0x1
mov eax,[0x41fc80]
call dword 0x2628c
mov esi,eax
mov [ebx+0x288],esi
push byte +0x31
mov eax,[0x468be8]
mov eax,[eax]
call eax
mov edx,eax
mov eax,esi
mov ecx,[eax]
call dword [ecx+0x40]
push byte +0x32
mov eax,[0x468be8]
mov eax,[eax]
call eax
mov edx,eax
mov eax,[ebx+0x288]
mov ecx,[eax]
call dword [ecx+0x34]
mov eax,[ebx+0x288]
mov [eax+0x14],ebx
mov dword [eax+0x10],0x457130
mov byte [ebx+0x278],0x2
mov dl,0x1
mov eax,[0x43b844]
call dword 0x205a4
mov esi,eax
mov [ebx+0x280],esi
mov eax,esi
mov edx,ebx
call dword 0x3eb34
movzx eax,byte [dword 0x456648]
mov [ebx+0x270],al
mov byte [ebx+0x271],0x2
mov byte [ebx+0x273],0x0
mov byte [ebx+0x279],0x3
mov byte [ebx+0x28c],0x0
mov eax,[ebx+0x2a4]
mov edx,[dword 0x46dca0]
mov edx,[edx+0x40]
mov [eax],edx
mov ecx,ebx
mov dl,0x1
mov eax,[0x4546ac]
call dword 0x605fc
mov edx,[ebx+0x2a4]
mov [edx+0x4],eax
mov eax,ebx
call dword 0x603d0
mov [eax+0x24],ebx
mov dword [eax+0x20],0x461484
mov eax,[ebx+0x2a4]
mov byte [eax+0x8],0x0
mov byte [ebx+0x27d],0x1
mov eax,ebx
call dword 0x2ac8
mov [ebx+0xac],eax
mov byte [ebx+0x329],0xff
xor eax,eax
mov [ebx+0x354],eax
xor edx,edx
mov eax,ebx
call dword 0x564b4
xor edx,edx
mov eax,ebx
call dword 0x4048c
xor edx,edx
mov eax,ebx
call dword 0x403c4
mov dl,0x1
mov eax,ebx
call dword 0x484f8
mov edx,ebx
mov eax,[0x46dca0]
call dword 0x5c0ac
mov dword [ebx+0x34c],0xa

mov eax,ebx
cmp byte [ebp-0x1],0x0
jz 0x5563a
call dword 0x2f6c
pop dword [dword fs:0x0]
add esp,byte +0xc
mov eax,ebx
pop esi
pop ebx
pop ecx
pop ebp
ret 0x4
add [ebx+0x7000800],ch
add [eax],al
add [ebx-0x75],dl
fsub dword [ecx+0x468e7c]
mov eax,[eax]
mov edx,[eax]
call dword [edx+0x14]
mov eax,ebx
call dword 0x1a850
mov eax,[0x46dca0]
mov eax,[eax+0x7c]
mov edx,ebx
call dword 0x14018
xor edx,edx
mov eax,ebx
call dword 0x17554
cmp dword [ebx+0x2ac],byte +0x0
jz 0x5568e
mov eax,[ebx+0x2ac]
mov edx,[eax]
call dword [edx+0xc]
cmp byte [ebx+0x277],0x1
jz 0x5569e
mov eax,ebx
call dword 0x5ad88
cmp byte [ebx+0x27c],0x0
jnz 0x556b1
mov eax,ebx
mov edx,[eax]
call dword [edx+0xe8]
pop ebx
ret
nop
push ebp
mov ebp,esp
add esp,byte -0x8
call dword 0x2fbc
mov [ebp-0x5],dl
mov [ebp-0x4],eax
mov edx,[ebp-0x4]
mov eax,[0x46dc9c]
call dword 0x5d678
mov eax,[ebp-0x4]
test byte [eax+0x1c],0x8
jnz 0x556e7
mov eax,[0x468e7c]
mov eax,[eax]
mov edx,[eax]
call dword [edx+0x14]
xor eax,eax
push ebp
push dword 0x4567b4
push dword [fs:eax]
mov [fs:eax],esp
mov eax,[ebp-0x4]
cmp byte [eax+0x27c],0x0
jz 0x5570c
mov eax,[ebp-0x4]
mov edx,[eax]
call dword [edx+0xe8]
xor edx,edx
mov eax,[ebp-0x4]
call dword 0x591a8
mov eax,[ebp-0x4]
call dword 0x486bc
test al,al
jz 0x5572d
mov eax,[ebp-0x4]
mov edx,[eax]
call dword [edx+0xb4]
mov edx,[ebp-0x4]
mov eax,[0x46dca0]
call dword 0x5c0e4
mov eax,[ebp-0x4]
mov eax,[eax+0x280]
call dword 0x2bf0
mov eax,[ebp-0x4]
mov eax,[eax+0x288]
call dword 0x2bf0
mov eax,[ebp-0x4]
add eax,0x32c
call dword 0xd0e8
mov eax,[ebp-0x4]
add eax,0x338
call dword 0xd0e8
mov eax,[ebp-0x4]
call dword 0x603d0
call dword 0x2bf0
mov eax,[ebp-0x4]
mov eax,[eax+0x2a4]
call dword 0x1e7c
movzx edx,byte [ebp-0x5]
and dl,0xfc
mov eax,[ebp-0x4]
call dword 0x54ae0
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x4567bb
mov eax,[0x468e7c]
mov eax,[eax]
mov edx,[eax]
call dword [edx+0x18]
ret
jmp dword 0x3384
jmp short 0x557a7
cmp byte [ebp-0x5],0x0
jng 0x557c9
mov eax,[ebp-0x4]
call dword 0x2f64
pop ecx
pop ecx
pop ebp
ret
lea eax,[eax+0x0]
push ebp
mov ebp,esp
push ecx
push ebx
push esi
push edi
mov [ebp-0x4],eax
mov eax,[ebp-0x4]
cmp word [eax+0x31a],byte +0x0
jz 0x55830
xor eax,eax
push ebp
push dword 0x456811
push dword [fs:eax]
mov [fs:eax],esp
mov ebx,[ebp-0x4]
mov edx,[ebp-0x4]
mov eax,[ebx+0x31c]
call dword [ebx+0x318]
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
jmp short 0x55830
jmp dword 0x30d0
mov eax,[ebp-0x4]
mov si,0xffa7
call dword 0x2dec
test al,al
jnz 0x5582b
call dword 0x348c
call dword 0x34e0
mov eax,[ebp-0x4]
test byte [eax+0x358],0x2
jz 0x55846
mov dl,0x1
mov eax,[ebp-0x4]
call dword 0x564b4
pop edi
pop esi
pop ebx
pop ecx
pop ebp
ret
push ebp
mov ebp,esp
push ecx
push ebx
push esi
push edi
mov [ebp-0x4],eax
mov eax,[ebp-0x4]
cmp word [eax+0x322],byte +0x0
jz 0x558a4
xor eax,eax
push ebp
push dword 0x45688d
push dword [fs:eax]
mov [fs:eax],esp
mov ebx,[ebp-0x4]
mov edx,[ebp-0x4]
mov eax,[ebx+0x324]
call dword [ebx+0x320]
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
jmp short 0x558a4
jmp dword 0x30d0
mov edx,[ebp-0x4]
mov eax,[0x46dc9c]
call dword 0x5ecfc
call dword 0x34e0
pop edi
pop esi
pop ebx
pop ecx
pop ebp
ret
mov eax,eax
push ebx
push esi
push edi
mov ebx,eax
mov eax,ebx
call dword 0x42a34
cmp dword [ebx+0x268],byte +0x0
jz 0x558f3
cmp dword [ebx+0x30],byte +0x0
jz 0x558cd
test byte [ebx+0x1c],0x10
jnz 0x558f3
mov edi,[ebx+0x268]
xor eax,eax
mov [ebx+0x268],eax
mov eax,edi
mov si,0xffb6
call dword 0x2dec
test al,al
jz 0x558f3
mov edx,edi
mov eax,ebx
call dword 0x58ca8
mov eax,ebx
call dword 0x603d0
call dword 0x606bc
test al,al
jz 0x5590c
xor edx,edx
mov eax,ebx
call dword 0x60484
pop edi
pop esi
pop ebx
ret
push ebx
push esi
push edi
mov ebx,ecx
mov esi,edx
mov edi,eax
mov ecx,ebx
mov edx,esi
mov eax,edi
call dword 0x44314
mov eax,ebx
sub al,0x1
jc 0x55931
jz 0x55974
jmp dword 0x55a2e
test byte [edi+0x1c],0x1
jnz dword 0x55a2e
cmp dword [edi+0x290],byte +0x0
jnz dword 0x55a2e
cmp edi,[esi+0x4]
jnz dword 0x55a2e
mov eax,esi
mov edx,[dword 0x4351ec]
call dword 0x2d7c
test al,al
jz dword 0x55a2e
mov edx,esi
mov eax,edi
call dword 0x57954
jmp dword 0x55a2e
cmp esi,[edi+0x290]
jnz 0x55985
xor edx,edx
mov eax,edi
call dword 0x57954
cmp esi,[edi+0x2a0]
jnz 0x55996
xor edx,edx
mov eax,edi
call dword 0x5792c
cmp esi,[edi+0x2a8]
jnz 0x559a7
xor edx,edx
mov eax,edi
call dword 0x57908
cmp esi,[edi+0x334]
jnz 0x559b8
xor edx,edx
mov eax,edi
call dword 0x57c90
mov eax,[edi+0x32c]
test eax,eax
jz 0x559e3
mov edx,esi
call dword 0x13ed8
test eax,eax
jl 0x559e3
mov edx,eax
mov eax,[edi+0x32c]
call dword 0x13d70
mov edx,edi
mov eax,esi
call dword 0x1a8b0
mov eax,[edi+0x338]
test eax,eax
jz 0x55a0e
mov edx,esi
call dword 0x13ed8
test eax,eax
jl 0x55a0e
mov edx,eax
mov eax,[edi+0x338]
call dword 0x13d70
mov edx,edi
mov eax,esi
call dword 0x1a8b0
cmp esi,[edi+0x340]
jnz 0x55a1e
xor eax,eax
mov [edi+0x340],eax
cmp esi,[edi+0x2c4]
jnz 0x55a2e
xor eax,eax
mov [edi+0x2c4],eax
cmp dword [edi+0x298],byte +0x0
jz 0x55a46
mov ecx,ebx
mov edx,esi
mov eax,[edi+0x298]
mov ebx,[eax]
call dword [ebx+0x10]
pop edi
pop esi
pop ebx
ret
mov eax,eax
push ebp
mov ebp,esp
push ecx
push ebx
push esi
mov esi,edx
mov [ebp-0x4],eax
mov eax,[ebp-0x4]
call dword 0x43dd0
xor ecx,ecx
push ebp
push dword 0x456cc9
push dword [fs:ecx]
mov [fs:ecx],esp
mov eax,[ebp-0x4]
xor edx,edx
mov [eax+0x2b0],edx
mov eax,[ebp-0x4]
xor edx,edx
mov [eax+0x2b4],edx
mov eax,[ebp-0x4]
xor edx,edx
mov [eax+0x2b8],edx
xor ebx,ebx
mov eax,[ebp-0x4]
mov eax,[eax]
call dword 0x2b7c
cmp eax,[dword 0x45338c]
jnz 0x55ab4
movzx eax,byte [dword 0x46b7f1]
xor al,0x1
mov edx,[ebp-0x4]
mov [edx+0x27c],al
mov edx,esi
mov eax,[ebp-0x4]
call dword 0x433f8
mov eax,[ebp-0x4]
mov eax,[eax+0x2a4]
mov eax,[eax]
test eax,eax
jz dword 0x55c3c
mov edx,[ebp-0x4]
cmp dword [edx+0x2b8],byte +0x0
jng dword 0x55c3c
mov edx,[ebp-0x4]
test byte [edx+0x8c],0x10
jz 0x55b29
mov edx,[dword 0x46dca0]
cmp eax,[edx+0x40]
jz 0x55b29
mov eax,[ebp-0x4]
mov eax,[eax+0x2a4]
mov eax,[eax]
push eax
mov eax,[0x46dca0]
mov eax,[eax+0x40]
push eax
mov eax,[ebp-0x4]
mov esi,[eax+0x68]
mov eax,esi
call dword 0x1fe38
push eax
call dword 0x5bc0
mov edx,eax
mov eax,esi
call dword 0x1fe40
mov eax,[ebp-0x4]
mov eax,[eax+0x2a4]
mov edx,[dword 0x46dca0]
mov edx,[edx+0x40]
mov [eax],edx
mov eax,[ebp-0x4]
call dword 0x56080
mov esi,eax
mov eax,[ebp-0x4]
mov eax,[eax+0x2b8]
cmp esi,eax
jz dword 0x55c3c
mov bl,0x1
mov ecx,eax
mov edx,esi
mov eax,[ebp-0x4]
call dword 0x54fa8
mov eax,[ebp-0x4]
mov ecx,[eax+0x2b8]
mov edx,esi
mov eax,[ebp-0x4]
call dword 0x3fd44
mov eax,[ebp-0x4]
mov ecx,[eax+0x2b8]
mov edx,esi
mov eax,[ebp-0x4]
call dword 0x47dd4
mov eax,[ebp-0x4]
test byte [eax+0x8c],0x4
jz 0x55bbb
mov eax,[ebp-0x4]
mov eax,[eax+0x2b8]
push eax
push esi
mov eax,[ebp-0x4]
mov eax,[eax+0x2b0]
push eax
call dword 0x5bc0
mov edx,[ebp-0x4]
mov [edx+0x2b0],eax
mov eax,[ebp-0x4]
test byte [eax+0x8c],0x8
jz 0x55bea
mov eax,[ebp-0x4]
mov eax,[eax+0x2b8]
push eax
push esi
mov eax,[ebp-0x4]
mov eax,[eax+0x2b4]
push eax
call dword 0x5bc0
mov edx,[ebp-0x4]
mov [edx+0x2b4],eax
mov eax,[ebp-0x4]
test byte [eax+0x8c],0x20
jz 0x55c3c
mov eax,[ebp-0x4]
mov eax,[eax+0x2b8]
push eax
push esi
mov eax,[ebp-0x4]
mov eax,[eax+0x242]
push eax
call dword 0x5bc0
mov edx,[ebp-0x4]
mov [edx+0x242],eax
mov eax,[ebp-0x4]
mov eax,[eax+0x2b8]
push eax
push esi
mov eax,[ebp-0x4]
mov eax,[eax+0x246]
push eax
call dword 0x5bc0
mov edx,[ebp-0x4]
mov [edx+0x246],eax
mov eax,[ebp-0x4]
mov eax,[eax+0x2b0]
test eax,eax
jng 0x55c53
mov edx,eax
mov eax,[ebp-0x4]
call dword 0x3fc1c
mov eax,[ebp-0x4]
mov eax,[eax+0x2b4]
test eax,eax
jng 0x55c6a
mov edx,eax
mov eax,[ebp-0x4]
call dword 0x3fc60
mov eax,[ebp-0x4]
movzx edx,byte [dword 0x456cd8]
mov [eax+0x8c],dl
test bl,bl
jnz 0x55ca2
mov ecx,0x1
mov edx,0x1
mov eax,[ebp-0x4]
call dword 0x54fa8
mov ecx,0x1
mov edx,0x1
mov eax,[ebp-0x4]
call dword 0x47dd4
push byte +0x0
xor ecx,ecx
mov edx,0xb03d
mov eax,[ebp-0x4]
call dword 0x41588
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x456cd0
mov eax,[ebp-0x4]
call dword 0x43dd8
ret
jmp dword 0x3384
jmp short 0x55cc0
pop esi
pop ebx
pop ecx
pop ebp
ret
add [eax],al
add [eax],al
add [eax],al
add [ebp-0x75],dl
in al,dx
and eax,byte +0x7f
cmp eax,byte +0x5
ja dword 0x55d7c
jmp dword [eax*4+0x456cf2]
or ch,[ebp+0x45]
add [esi],bl
insd
inc ebp
add [edx],dh
insd
inc ebp
add [esi+0x6d],al
inc ebp
add [edx+0x6d],bl
inc ebp
add [ebx+0x6d],ch
inc ebp
add [ebx+0x408b0845],cl
cld
call dword 0x603d0
cmp dword [eax+0xc],byte +0x0
setnz al
pop ebp
ret
mov eax,[ebp+0x8]
mov eax,[eax-0x4]
call dword 0x603d0
cmp dword [eax+0x10],byte +0x0
setnz al
pop ebp
ret
mov eax,[ebp+0x8]
mov eax,[eax-0x4]
call dword 0x603d0
cmp dword [eax+0x14],byte +0x0
setnz al
pop ebp
ret
mov eax,[ebp+0x8]
mov eax,[eax-0x4]
call dword 0x603d0
cmp dword [eax+0x18],byte +0x0
setnz al
pop ebp
ret
mov eax,[ebp+0x8]
mov eax,[eax-0x4]
call dword 0x603d0
movzx eax,byte [eax+0x8]
pop ebp
ret
mov eax,[ebp+0x8]
mov eax,[eax-0x4]
call dword 0x603d0
movzx eax,byte [eax+0x28]
pop ebp
ret
xor eax,eax
pop ebp
ret
push ebp
mov ebp,esp
push ecx
push ebx
push esi
push edi
mov ebx,edx
mov [ebp-0x4],eax
lea esi,[ebp-0x4]
mov edx,ebx
mov eax,[esi]
call dword 0x448fc
push byte +0x0
push byte +0x0
mov eax,[esi]
push eax
push dword 0x457028
mov eax,[esi]
movzx ecx,byte [eax+0x5e]
xor cl,0x1
mov edx,0x456ef0
mov eax,ebx
mov edi,[eax]
call dword [edi+0x4]
mov eax,[esi]
push eax
push dword 0x456ff4
mov eax,[esi]
push eax
push dword 0x45700c
mov eax,[esi]
movzx ecx,byte [eax+0x5e]
xor cl,0x1
mov edx,0x456f08
mov eax,ebx
mov edi,[eax]
call dword [edi+0x4]
mov eax,[esi]
push eax
push dword 0x456fd4
push byte +0x0
push byte +0x0
xor ecx,ecx
mov edx,0x456f1c
mov eax,ebx
mov edi,[eax]
call dword [edi+0x4]
mov eax,[esi]
push eax
push dword 0x4613dc
mov eax,[esi]
push eax
push dword 0x461554
push ebp
mov al,0x3
call dword 0x55cdc
pop ecx
mov ecx,eax
mov edx,0x456f38
mov eax,ebx
mov edi,[eax]
call dword [edi+0x4]
mov eax,[esi]
push eax
push dword 0x4613f8
mov eax,[esi]
push eax
push dword 0x461570
push ebp
mov al,0x4
call dword 0x55cdc
pop ecx
mov ecx,eax
mov edx,0x456f54
mov eax,ebx
mov edi,[eax]
call dword [edi+0x4]
mov eax,[esi]
push eax
push dword 0x461414
mov eax,[esi]
push eax
push dword 0x46158c
push ebp
xor eax,eax
call dword 0x55cdc
pop ecx
mov ecx,eax
mov edx,0x456f70
mov eax,ebx
mov edi,[eax]
call dword [edi+0x4]
mov eax,[esi]
push eax
push dword 0x461430
mov eax,[esi]
push eax
push dword 0x4615a8
push ebp
mov al,0x2
call dword 0x55cdc
pop ecx
mov ecx,eax
mov edx,0x456f88
mov eax,ebx
mov edi,[eax]
call dword [edi+0x4]
mov eax,[esi]
push eax
push dword 0x46144c
mov eax,[esi]
push eax
push dword 0x4615c4
push ebp
mov al,0x5
call dword 0x55cdc
pop ecx
mov ecx,eax
mov edx,0x456fa4
mov eax,ebx
mov edi,[eax]
call dword [edi+0x4]
mov eax,[esi]
push eax
push dword 0x461468
mov eax,[esi]
push eax
push dword 0x4615e0
push ebp
mov al,0x1
call dword 0x55cdc
pop ecx
mov ecx,eax
mov edx,0x456fc4
mov eax,ebx
mov ebx,[eax]
call dword [ebx+0x4]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
ret
db 0xff
db 0xff
db 0xff
dec dword [dword 0x50000000]
imul edi,[eax+0x65],dword 0x6550736c
jc 0x55f43
outsb
arpl [eax+0x0],bp
add [eax],al
db 0xff
db 0xff
db 0xff
dec dword [edx]
add [eax],al
add [ebp+0x78],dl
jz 0x55f55
imul esp,[gs:edi+0x68],dword 0xff000074
db 0xff
db 0xff
call dword [edx]
add [eax],al
add [ecx+0x67],cl
outsb
outsd
jc 0x55f87
inc esi
outsd
outsb
jz 0x55f77
jc 0x55f98
jo 0x55f90
jc 0x55fa1
jns 0x55f2f
add bh,bh
db 0xff
db 0xff
call dword [ecx]
add [eax],al
add [edi+0x6c],al
popad
jnc 0x55fb0
inc esi
jc 0x55fa1
insd
cs inc edx
outsd
jz 0x55fbb
outsd
insd
add [eax],al
add bh,bh
db 0xff
db 0xff
call dword [edx]
add [eax],al
add [edi+0x6c],al
popad
jnc 0x55fcc
inc esi
jc 0x55fbd
insd
cs inc ebp
outsb
popad
bound ebp,[ebp+0x64]
add [eax],al
db 0xff
db 0xff
db 0xff
dec dword [edi]
add [eax],al
add [edi+0x6c],al
popad
jnc 0x55fe8
inc esi
jc 0x55fd9
insd
cs dec esp
gs o16 jz 0x55f80
db 0xff
db 0xff
db 0xff
call dword [eax]
add [eax],al
add [edi+0x6c],al
popad
jnc 0x56000
inc esi
jc 0x55ff1
insd
cs push edx
imul esp,[edi+0x68],dword 0x74
add bh,bh
db 0xff
db 0xff
call dword [edi]
add [eax],al
add [edi+0x6c],al
popad
jnc 0x5601c
inc esi
jc 0x5600d
insd
cs push ebx
push dword 0x4f746565
inc di
insb
popad
jnc 0x5602e
add bh,bh
db 0xff
db 0xff
dec dword [esi]
add [eax],al
add [edi+0x6c],al
popad
jnc 0x5603c
inc esi
jc 0x5602d
insd
cs push esp
outsd
jo 0x55fd3
add [ebx+0x56],dl
mov esi,edx
mov ebx,eax
mov eax,esi
call dword 0x17d14
test al,al
jz 0x55fee
mov dl,0x1
mov eax,ebx
call dword 0x403c4
pop esi
pop ebx
ret
lea eax,[eax+0x0]
push ebx
push esi
mov esi,edx
mov ebx,eax
mov eax,esi
call dword 0x18874
mov [ebx+0x2b8],eax
pop esi
pop ebx
ret
mov eax,eax
push ebx
push esi
mov esi,edx
mov ebx,eax
mov eax,ebx
call dword 0x56080
mov edx,eax
mov eax,esi
call dword 0x1a1b8
pop esi
pop ebx
ret
lea eax,[eax+0x0]
push ebx
push esi
mov esi,edx
mov ebx,eax
mov eax,ebx
call dword 0x57b78
mov edx,eax
mov eax,esi
call dword 0x1a1b8
pop esi
pop ebx
ret
lea eax,[eax+0x0]
test byte [eax+0x1c],0x10
jz 0x5605f
cmp dword [eax+0x30],byte +0x0
jz 0x5605f
mov eax,[eax+0x18]
and eax,0xffff0000
shr eax,byte 0x10
movsx eax,ax
ret
mov eax,[eax+0x40]
ret
nop
test byte [eax+0x1c],0x10
jz 0x5607c
cmp dword [eax+0x30],byte +0x0
jz 0x5607c
movzx eax,word [eax+0x18]
and ax,byte -0x1
movsx eax,ax
ret
mov eax,[eax+0x44]
ret
push ebx
mov ebx,eax
mov eax,ebx
call dword 0x576d4
mov edx,0x4570a0
call dword 0x209a8
pop ebx
ret
add [eax],al
db 0xff
db 0xff
db 0xff
inc dword [ecx]
add [eax],al
add [eax],dh
add [eax],al
add bl,al
lea eax,[eax+0x0]
push ebx
push esi
push edi
push ebp
mov edi,ecx
mov esi,edx
mov ebx,eax
mov ecx,edi
mov edx,esi
mov eax,ebx
call dword 0x54fa8
mov ecx,edi
mov edx,esi
mov eax,ebx
call dword 0x3fd44
mov ecx,edi
mov edx,esi
mov eax,ebx
call dword 0x47dd4
mov eax,ebx
call dword 0x5618c
test al,al
jz 0x56110
mov eax,ebx
call dword 0x3fc48
mov ebp,eax
push edi
push esi
mov eax,ebx
call dword 0x3fc04
push eax
call dword 0x5bc0
mov edx,eax
mov eax,ebx
call dword 0x5644c
push edi
push esi
push ebp
call dword 0x5bc0
mov edx,eax
mov eax,ebx
call dword 0x56480
push edi
push esi
mov ebp,[ebx+0x68]
mov eax,ebp
call dword 0x1fedc
push eax
call dword 0x5bc0
mov edx,eax
mov eax,ebp
call dword 0x1fef8
pop ebp
pop edi
pop esi
pop ebx
ret
push ebx
mov ebx,eax
mov eax,[0x468c68]
cmp byte [eax],0x0
jz 0x5616f
mov eax,ebx
call dword 0x486bc
test al,al
jz 0x56189
cmp byte [ebx+0x271],0x3
jz 0x56189
mov eax,ebx
call dword 0x5931c
push eax
push byte +0x1
push dword 0x80
mov eax,ebx
call dword 0x4831c
push eax
call dword 0x6278
pop ebx
ret
mov eax,ebx
call dword 0x4831c
call dword 0x53800
test eax,eax
jz 0x56189
mov eax,ebx
mov edx,[eax]
call dword [edx+0x80]
pop ebx
ret
nop
push ebx
mov ebx,eax
mov eax,ebx
call dword 0x5619c
xor al,0x1
pop ebx
ret
mov eax,eax
cmp byte [eax+0x258],0x0
jnz 0x561c0
mov edx,[eax+0x250]
cmp dword [edx+0x10],byte +0x0
jnz 0x561c0
mov eax,[eax+0x254]
cmp dword [eax+0x10],byte +0x0
jnz 0x561c0
xor eax,eax
ret
mov al,0x1
ret
nop
push ebx
mov ebx,eax
mov eax,ebx
call dword 0x576e8
test al,al
jz 0x561ef
movzx eax,byte [ebx+0x271]
sub al,0x2
jz 0x561e5
sub al,0x3
jz 0x561e5
xor eax,eax
jmp short 0x561e7
mov al,0x1
cmp al,[ebx+0x258]
jz 0x561f3
xor eax,eax
pop ebx
ret
mov al,0x1
pop ebx
ret
nop
push ebx
cmp word [eax+0x2da],byte +0x0
jz 0x56215
mov ecx,edx
mov ebx,eax
mov edx,eax
mov eax,[ebx+0x2dc]
call dword [ebx+0x2d8]
pop ebx
ret
nop
push ebx
cmp word [eax+0x2fa],byte +0x0
jz 0x56233
mov ebx,eax
mov edx,eax
mov eax,[ebx+0x2fc]
call dword [ebx+0x2f8]
pop ebx
ret
lea eax,[eax+0x0]
push ebx
cmp word [eax+0x312],byte +0x0
jz 0x56253
mov ebx,eax
mov edx,eax
mov eax,[ebx+0x314]
call dword [ebx+0x310]
pop ebx
ret
lea eax,[eax+0x0]
push ebx
push esi
mov esi,edx
mov ebx,eax
mov eax,ebx
call dword 0x4831c
call dword 0x53800
test eax,eax
jz 0x562d1
push byte +0x0
push byte +0x0
push byte +0x0
push byte +0x0
push esi
call dword 0x62e0
push byte -0x14
mov eax,ebx
call dword 0x4831c
push eax
call dword 0x60f8
push eax
cmp dword [ebx+0x290],byte +0x0
setnz al
neg al
sbb eax,eax
push eax
push byte -0x10
mov eax,ebx
call dword 0x4831c
push eax
call dword 0x60f8
push eax
push esi
call dword 0x5e58
mov eax,[ebx+0x4c]
sub eax,[esi+0xc]
add eax,[esi+0x4]
push eax
mov eax,[ebx+0x48]
sub eax,[esi+0x8]
add eax,[esi]
push eax
push byte +0x0
push byte +0x0
push esi
call dword 0x62e0
pop esi
pop ebx
ret
mov edx,esi
mov eax,ebx
call dword 0x48484
pop esi
pop ebx
ret
lea eax,[eax+0x0]
push ebp
mov ebp,esp
add esp,byte -0x8
push ebx
push esi
push edi
mov esi,edx
mov ebx,eax
push dword [ebp+0xc]
push dword [ebp+0x8]
mov edx,esi
mov eax,ebx
call dword 0x48918
cmp ebx,esi
jnz 0x56342
mov eax,ebx
call dword 0x1abdc
dec eax
test eax,eax
jl 0x56342
inc eax
mov [ebp-0x8],eax
mov dword [ebp-0x4],0x0
mov edx,[ebp-0x4]
mov eax,ebx
call dword 0x1abb0
mov edi,eax
mov eax,edi
mov si,0xfff1
call dword 0x2dec
test al,al
jnz 0x5633a
mov edx,edi
mov eax,[ebp+0xc]
call dword [ebp+0x8]
inc dword [ebp-0x4]
dec dword [ebp-0x8]
jnz 0x56317
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
ret 0x8
nop
push ebx
push esi
mov ebx,eax
cmp dword [ebx+0x94],byte +0x0
jnz 0x5636d
mov eax,ebx
mov edx,[eax]
call dword [edx+0x58]
mov esi,eax
mov eax,ebx
call dword 0x2ac8
cmp esi,eax
jz 0x56372
xor eax,eax
pop esi
pop ebx
ret
mov al,0x1
pop esi
pop ebx
ret
nop
mov edx,[eax+0x1b4]
test edx,edx
jz 0x5638b
push byte +0x4
push edx
call dword 0x60e8
ret
xor eax,eax
ret
mov eax,eax
push ebx
push esi
push edi
push ebp
add esp,byte -0xc
mov [esp+0x4],ecx
mov [esp],edx
mov ebp,eax
mov eax,[esp]
mov edx,[dword 0x43c888]
call dword 0x2d7c
test al,al
jz 0x563c2
mov ecx,[esp+0x4]
mov edx,[esp]
mov eax,ebp
call dword 0x48960
jmp short 0x5641a
mov eax,ebp
call dword 0x442b4
sub [esp+0x4],eax
mov dword [esp+0x8],0xffffffff
mov eax,ebp
call dword 0x1abdc
mov ebx,eax
dec ebx
test ebx,ebx
jl 0x5641a
inc ebx
xor edi,edi
mov edx,edi
mov eax,ebp
call dword 0x1abb0
mov si,0xfff1
call dword 0x2dec
test al,al
jnz 0x56416
inc dword [esp+0x8]
mov eax,[esp+0x8]
cmp eax,[esp+0x4]
jnz 0x56416
mov edx,edi
mov eax,[esp]
call dword 0x1abec
jmp short 0x5641a
inc edi
dec ebx
jnz 0x563e6
add esp,byte +0xc
pop ebp
pop edi
pop esi
pop ebx
ret
mov eax,eax
push ebx
mov ebx,eax
cmp dl,[ebx+0x60]
jz 0x56449
mov eax,ebx
call dword 0x404b0
cmp dword [ebx+0x30],byte +0x0
jnz 0x56449
push byte +0x0
xor ecx,ecx
mov edx,0xb03d
mov eax,ebx
call dword 0x41588
pop ebx
ret
nop
push ebx
mov ebx,eax
test byte [ebx+0x54],0x8
jz 0x56470
mov [ebx+0x2b0],edx
movzx eax,byte [dword 0x45747c]
or al,[ebx+0x8c]
mov [ebx+0x8c],al
pop ebx
ret
mov eax,ebx
call dword 0x3fc1c
pop ebx
ret
add [eax],al
add [eax+eax],al
add [eax],al
push ebx
mov ebx,eax
test byte [ebx+0x54],0x8
jz 0x564a4
mov [ebx+0x2b4],edx
movzx eax,byte [dword 0x4574b0]
or al,[ebx+0x8c]
mov [ebx+0x8c],al
pop ebx
ret
mov eax,ebx
call dword 0x3fc60
pop ebx
ret
add [eax],al
add [eax],cl
add [eax],al
add [ebx+0x56],dl
mov ebx,edx
mov esi,eax
test byte [esi+0x358],0x1
jz 0x564da
test bl,bl
jz 0x564d0
or byte [esi+0x358],0x2
jmp short 0x564f3
and byte [esi+0x358],0xfd
pop esi
pop ebx
ret
test bl,bl
jz 0x564ea
cmp bl,[esi+0x57]
jz 0x564ea
mov eax,esi
call dword 0x57e34
mov edx,ebx
mov eax,esi
call dword 0x401b8
pop esi
pop ebx
ret
mov eax,eax
push ebp
mov ebp,esp
push byte +0x0
xor edx,edx
push ebp
push dword 0x457557
push dword [fs:edx]
mov [fs:edx],esp
cmp byte [eax+0x277],0x1
jnz 0x56541
cmp byte [eax+0x57],0x0
jz 0x56541
cmp dword [eax+0x30],byte +0x0
jnz 0x56541
lea edx,[ebp-0x4]
mov eax,[0x468b08]
call dword 0x5750
mov ecx,[ebp-0x4]
mov dl,0x1
mov eax,[0x4128ec]
call dword 0xb450
call dword 0x3464
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x45755e
lea eax,[ebp-0x4]
call dword 0x3a1c
ret
jmp dword 0x3384
jmp short 0x5654e
pop ecx
pop ebp
ret
lea eax,[eax+0x0]
xor eax,eax
ret
nop
push ebp
mov ebp,esp
add esp,byte -0x8
push ebx
mov ebx,edx
mov [ebp-0x4],eax
mov eax,[ebp-0x4]
mov eax,[eax+0x30]
cmp ebx,eax
jz dword 0x5661f
cmp ebx,[ebp-0x4]
jz dword 0x5661f
test eax,eax
setz [ebp-0x5]
cmp byte [ebp-0x5],0x0
jz 0x565a1
mov dl,0x1
mov eax,[ebp-0x4]
call dword 0x49804
xor eax,eax
push ebp
push dword 0x457618
push dword [fs:eax]
mov [fs:eax],esp
cmp byte [ebp-0x5],0x0
jz 0x565c0
mov eax,[ebp-0x4]
mov edx,[eax]
call dword [edx+0xb0]
mov eax,[ebp-0x4]
test byte [eax+0x1c],0x10
jnz 0x565d4
mov eax,[ebp-0x4]
xor edx,edx
mov [eax+0x268],edx
mov eax,[ebp-0x4]
xor edx,edx
mov [eax+0x26c],edx
mov edx,ebx
mov eax,[ebp-0x4]
call dword 0x498cc
mov eax,[ebp-0x4]
cmp dword [eax+0x30],byte +0x0
jnz 0x565fa
mov eax,[ebp-0x4]
call dword 0x44e3c
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x45761f
cmp byte [ebp-0x5],0x0
jz 0x56617
xor edx,edx
mov eax,[ebp-0x4]
call dword 0x49804
ret
jmp dword 0x3384
jmp short 0x56607
pop ebx
pop ecx
pop ecx
pop ebp
ret
push ebp
mov ebp,esp
push ebx
push esi
push edi
mov edi,ecx
mov esi,edx
mov ebx,eax
mov eax,[ebp+0x8]
push eax
mov ecx,edi
mov edx,esi
mov eax,ebx
call dword 0x1aa24
cmp dword [ebx+0x298],byte +0x0
jz 0x5665b
mov eax,[ebp+0x8]
push eax
mov ecx,edi
mov edx,esi
mov eax,[ebx+0x298]
mov ebx,[eax]
call dword [ebx+0x30]
pop edi
pop esi
pop ebx
pop ebp
ret 0x4
mov eax,eax
push ebp
mov ebp,esp
add esp,byte -0x14
push ebx
push esi
push edi
mov ebx,edx
mov [ebp-0x4],eax
mov eax,[ebx]
mov edx,eax
cmp edx,0x112
jg 0x566aa
jz 0x566da
add edx,byte -0x6
sub edx,byte +0x3
jc dword 0x56741
sub edx,byte +0x22
jz dword 0x56909
dec edx
jz dword 0x56a0a
sub edx,byte +0x1a
jz dword 0x56891
jmp dword 0x56b44
add edx,0xfffffce2
sub edx,byte +0x2
jc dword 0x56b38
sub edx,0xacfa
jz dword 0x56870
dec edx
jz dword 0x5684f
sub edx,byte +0x2c
jz dword 0x567bb
jmp dword 0x56b44
mov eax,[ebx+0x4]
and eax,0xfff0
cmp eax,0xf120
jz 0x56728
mov eax,[ebx+0x4]
and eax,0xfff0
cmp eax,0xf030
setz al
and al,[dword 0x46dcac]
jz dword 0x56bb2
mov eax,[0x46dc9c]
mov eax,[eax+0x44]
cmp eax,[ebp-0x4]
jnz dword 0x56bb2
mov eax,[0x46dc9c]
call dword 0x608a0
test al,al
jz dword 0x56bb2
mov edx,ebx
mov eax,[ebp-0x4]
call dword 0x4541c
mov eax,[0x46dc9c]
call dword 0x608a8
jmp dword 0x56bbc
cmp byte [dword 0x468778],0x0
jz dword 0x56bbc
cmp dword [ebx],byte +0x7
jnz dword 0x56bb2
mov eax,[ebp-0x4]
test byte [eax+0x1c],0x10
jnz dword 0x56bb2
xor esi,esi
mov eax,[ebp-0x4]
cmp byte [eax+0x277],0x2
jnz 0x5678f
mov eax,[ebp-0x4]
call dword 0x57534
test eax,eax
jz 0x567a8
mov eax,[ebp-0x4]
call dword 0x57534
call dword 0x4831c
mov esi,eax
jmp short 0x567a8
mov eax,[ebp-0x4]
mov eax,[eax+0x268]
test eax,eax
jz 0x567a8
cmp eax,[ebp-0x4]
jz 0x567a8
call dword 0x4831c
mov esi,eax
test esi,esi
jz dword 0x56bb2
push esi
call dword 0x62b0
jmp dword 0x56bbc
mov esi,[ebx+0x4]
xor edi,edi
jmp short 0x567d3
mov eax,esi
call dword 0x3cce8
mov edi,eax
push esi
call dword 0x6090
mov esi,eax
test esi,esi
jz 0x567db
test edi,edi
jz 0x567c2
test edi,edi
jz dword 0x56bb2
mov dl,0x1
mov eax,edi
call dword 0x53e38
mov esi,eax
mov eax,[ebp-0x4]
cmp edi,[eax+0x268]
jnz 0x56807
mov eax,[0x46dca0]
cmp edi,[eax+0x64]
jz dword 0x56bb2
test esi,esi
jz dword 0x56bb2
cmp esi,[ebp-0x4]
jz 0x56822
mov eax,[0x46dca0]
cmp esi,[eax+0x68]
jz dword 0x56bb2
mov eax,[esi+0x268]
test eax,eax
jz 0x5683e
cmp edi,eax
jz 0x5683e
push byte +0x0
xor ecx,ecx
mov edx,0x8
call dword 0x41588
mov edx,edi
mov eax,esi
mov ecx,[eax]
call dword [ecx+0xf8]
jmp dword 0x56bb2
mov eax,[ebp-0x4]
cmp dword [eax+0x94],byte +0x0
jz dword 0x56bb2
mov eax,[ebp-0x4]
mov si,0xffae
call dword 0x2dec
jmp dword 0x56bb2
mov eax,[ebp-0x4]
cmp dword [eax+0x94],byte +0x0
jz dword 0x56bb2
mov eax,[ebp-0x4]
mov si,0xffb0
call dword 0x2dec
jmp dword 0x56bb2
mov eax,[ebp-0x4]
movzx eax,word [eax+0x1c]
and ax,[dword 0x457bc4]
movzx edx,word [dword 0x457bc8]
cmp dx,ax
jnz dword 0x56bb2
mov eax,[ebp-0x4]
movzx eax,byte [eax+0x278]
dec eax
sub al,0x2
jnc 0x568d1
mov eax,[ebp-0x4]
cmp byte [eax+0x273],0x2
jz 0x568d1
mov eax,[ebx+0x8]
or dword [eax+0x18],byte +0x2
mov eax,[ebp-0x4]
movzx eax,byte [eax+0x278]
sub al,0x1
jz 0x568e7
sub al,0x2
jnz dword 0x56bb2
mov eax,[ebp-0x4]
movzx eax,byte [eax+0x271]
sub al,0x2
jz 0x568fd
sub al,0x3
jnz dword 0x56bb2
mov eax,[ebx+0x8]
or dword [eax+0x18],byte +0x1
jmp dword 0x56bb2
mov eax,[ebx+0x8]
mov [ebp-0x14],eax
mov eax,[ebp-0x14]
cmp dword [eax],byte +0x1
jnz dword 0x56bb2
mov eax,[ebp-0x4]
cmp dword [eax+0x290],byte +0x0
jz dword 0x56bb2
mov eax,[ebp-0x14]
mov edx,[eax+0x8]
mov eax,[ebp-0x4]
mov eax,[eax+0x290]
xor ecx,ecx
call dword 0x38848
mov edi,eax
test edi,edi
jz dword 0x56bb2
mov dl,0x1
mov eax,[0x43b844]
call dword 0x205a4
mov [ebp-0xc],eax
xor eax,eax
push ebp
push dword 0x457a03
push dword [fs:eax]
mov [fs:eax],esp
mov eax,[ebp-0x14]
mov eax,[eax+0x18]
push eax
call dword 0x5dc8
mov [ebp-0x8],eax
xor eax,eax
push ebp
push dword 0x4579e6
push dword [fs:eax]
mov [fs:eax],esp
mov eax,[ebp-0x14]
mov edx,[eax+0x18]
mov eax,[ebp-0xc]
call dword 0x20bb8
mov eax,[0x46dca0]
mov edx,[eax+0x88]
mov eax,[ebp-0xc]
call dword 0x20a4c
mov eax,[ebp-0x14]
movzx eax,word [eax+0x10]
push eax
mov eax,[ebp-0x14]
lea ecx,[eax+0x1c]
mov edx,[ebp-0xc]
mov eax,edi
call dword 0x39fd0
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x4579ed
xor edx,edx
mov eax,[ebp-0xc]
call dword 0x20bb8
mov eax,[ebp-0x8]
push eax
mov eax,[ebp-0x14]
mov eax,[eax+0x18]
push eax
call dword 0x5dc0
ret
jmp dword 0x3384
jmp short 0x569cb
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x457bbc
mov eax,[ebp-0xc]
call dword 0x2bf0
ret
jmp dword 0x3384
jmp short 0x569fa
mov esi,[ebx+0x8]
cmp dword [esi],byte +0x1
jnz dword 0x56bb2
mov eax,[ebp-0x4]
cmp dword [eax+0x290],byte +0x0
jz dword 0x56bb2
mov edx,[esi+0x8]
mov eax,[ebp-0x4]
mov eax,[eax+0x290]
xor ecx,ecx
call dword 0x38848
mov edi,eax
test edi,edi
jz dword 0x56bb2
mov eax,[ebp-0x4]
call dword 0x4831c
push eax
call dword 0x60f0
mov [ebp-0x10],eax
xor eax,eax
push ebp
push dword 0x457b31
push dword [fs:eax]
mov [fs:eax],esp
mov dl,0x1
mov eax,[0x43b844]
call dword 0x205a4
mov [ebp-0xc],eax
xor eax,eax
push ebp
push dword 0x457b0a
push dword [fs:eax]
mov [fs:eax],esp
mov eax,[ebp-0x10]
push eax
call dword 0x5dc8
mov [ebp-0x8],eax
xor eax,eax
push ebp
push dword 0x457aed
push dword [fs:eax]
mov [fs:eax],esp
mov edx,[ebp-0x10]
mov eax,[ebp-0xc]
call dword 0x20bb8
mov eax,[0x46dca0]
mov edx,[eax+0x88]
mov eax,[ebp-0xc]
call dword 0x20a4c
lea eax,[esi+0x10]
push eax
lea ecx,[esi+0xc]
mov edx,[ebp-0xc]
mov eax,edi
mov ebx,[eax]
call dword [ebx+0x38]
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x457af4
xor edx,edx
mov eax,[ebp-0xc]
call dword 0x20bb8
mov eax,[ebp-0x8]
push eax
mov eax,[ebp-0x10]
push eax
call dword 0x5dc0
ret
jmp dword 0x3384
jmp short 0x56ad5
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x457b11
mov eax,[ebp-0xc]
call dword 0x2bf0
ret
jmp dword 0x3384
jmp short 0x56b01
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x457bbc
mov eax,[ebp-0x10]
push eax
mov eax,[ebp-0x4]
call dword 0x4831c
push eax
call dword 0x6250
ret
jmp dword 0x3384
jmp short 0x56b1e
xor edx,edx
mov eax,[ebp-0x4]
call dword 0x60484
jmp short 0x56bb2
cmp eax,[dword 0x46dca8]
jnz 0x56bb2
push byte +0x0
xor ecx,ecx
mov edx,0xb025
mov eax,[ebp-0x4]
call dword 0x41588
push byte +0x0
xor ecx,ecx
mov edx,0xb024
mov eax,[ebp-0x4]
call dword 0x41588
push byte +0x0
xor ecx,ecx
mov edx,0xb035
mov eax,[ebp-0x4]
call dword 0x41588
push byte +0x0
xor ecx,ecx
mov edx,0xb009
mov eax,[ebp-0x4]
call dword 0x41588
push byte +0x0
xor ecx,ecx
mov edx,0xb008
mov eax,[ebp-0x4]
call dword 0x41588
push byte +0x0
xor ecx,ecx
mov edx,0xb03d
mov eax,[ebp-0x4]
call dword 0x41588
mov edx,ebx
mov eax,[ebp-0x4]
call dword 0x4541c
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret
add [ecx],dl
add [eax],al
add [ecx],al
add [eax],al
add [ebp-0x75],dl
in al,dx
mov eax,[ebp+0x8]
mov eax,[eax-0x8]
mov eax,[eax+0x8]
push eax
mov eax,[ebp+0x8]
mov eax,[eax-0x8]
mov eax,[eax+0x4]
push eax
mov eax,[ebp+0x8]
mov eax,[eax-0x8]
mov eax,[eax]
push eax
mov eax,[ebp+0x8]
mov eax,[eax-0x4]
mov eax,[eax+0x29c]
push eax
mov eax,[ebp+0x8]
mov eax,[eax-0x4]
mov eax,[eax+0x2bc]
push eax
call dword 0x5e78
mov edx,[ebp+0x8]
mov edx,[edx-0x8]
mov [edx+0xc],eax
pop ebp
ret
mov eax,eax
push ebp
mov ebp,esp
push ebx
push esi
mov eax,[ebp+0x8]
mov eax,[eax-0x4]
call dword 0x57568
mov ebx,eax
dec ebx
test ebx,ebx
jl 0x56c50
inc ebx
xor esi,esi
mov eax,[ebp+0x8]
mov eax,[eax-0x4]
mov edx,esi
call dword 0x575b4
cmp byte [eax+0x273],0x2
jnz 0x56c4c
mov al,0x1
jmp short 0x56c52
inc esi
dec ebx
jnz 0x56c32
xor eax,eax
pop esi
pop ebx
pop ebp
ret
mov eax,eax
push ebp
mov ebp,esp
add esp,byte -0x74
mov [ebp-0x8],edx
mov [ebp-0x4],eax
mov eax,[ebp-0x8]
mov eax,[eax]
sub eax,byte +0xf
jz dword 0x56d76
sub eax,byte +0x5
jz 0x56cac
sub eax,byte +0x2b
jz dword 0x56d2f
sub eax,byte +0x45
jnz dword 0x56e2d
push ebp
call dword 0x56bcc
pop ecx
mov eax,[ebp-0x8]
cmp dword [eax+0xc],byte +0x1
jnz dword 0x56e34
mov eax,[ebp-0x8]
mov dword [eax+0xc],0xffffffff
jmp dword 0x56e34
mov eax,[ebp-0x4]
mov eax,[eax+0x1a4]
call dword 0x20488
push eax
lea edx,[ebp-0x6c]
mov eax,[ebp-0x4]
mov ecx,[eax]
call dword [ecx+0x44]
lea eax,[ebp-0x6c]
push eax
mov eax,[ebp-0x8]
mov eax,[eax+0x4]
push eax
call dword 0x5f88
mov eax,[ebp-0x4]
cmp byte [eax+0x277],0x2
jnz 0x56d20
mov eax,[ebp-0x4]
cmp dword [eax+0x29c],byte +0x0
jz 0x56d20
lea eax,[ebp-0x5c]
push eax
mov eax,[ebp-0x4]
mov eax,[eax+0x29c]
push eax
call dword 0x5fc0
mov eax,[ebp-0x4]
mov eax,[eax+0x1a4]
call dword 0x20488
push eax
lea eax,[ebp-0x5c]
push eax
mov eax,[ebp-0x8]
mov eax,[eax+0x4]
push eax
call dword 0x5f88
mov eax,[ebp-0x8]
mov dword [eax+0xc],0x1
jmp dword 0x56e34
push ebp
call dword 0x56bcc
pop ecx
mov eax,[ebp-0x4]
cmp byte [eax+0x277],0x2
jnz dword 0x56e34
mov eax,[ebp-0x4]
call dword 0x57568
test eax,eax
jz 0x56d61
push ebp
call dword 0x56c18
pop ecx
test al,al
jz 0x56d61
xor edx,edx
jmp short 0x56d63
mov dl,0x1
mov eax,[ebp-0x4]
mov eax,[eax+0x29c]
call dword 0x53830
jmp dword 0x56e34
mov eax,[ebp-0x8]
mov eax,[eax+0x4]
mov [ebp-0xc],eax
cmp dword [ebp-0xc],byte +0x0
jnz 0x56d9e
lea eax,[ebp-0x4c]
push eax
mov eax,[ebp-0x4]
mov eax,[eax+0x29c]
push eax
call dword 0x5e68
mov edx,[ebp-0x8]
mov [edx+0x4],eax
xor eax,eax
push ebp
push dword 0x457e26
push dword [fs:eax]
mov [fs:eax],esp
cmp dword [ebp-0xc],byte +0x0
jnz 0x56df4
lea eax,[ebp-0x5c]
push eax
mov eax,[ebp-0x4]
mov eax,[eax+0x29c]
push eax
call dword 0x6110
lea ecx,[ebp-0x74]
lea edx,[ebp-0x5c]
mov eax,[ebp-0x4]
call dword 0x3fdc8
mov eax,[ebp-0x74]
mov [ebp-0x5c],eax
mov eax,[ebp-0x70]
mov [ebp-0x58],eax
mov ecx,[ebp-0x58]
neg ecx
mov edx,[ebp-0x5c]
neg edx
mov eax,[ebp-0x8]
mov eax,[eax+0x4]
call dword 0x3e894
mov edx,[ebp-0x8]
mov eax,[ebp-0x4]
call dword 0x45a78
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x457e34
cmp dword [ebp-0xc],byte +0x0
jnz 0x56e25
lea eax,[ebp-0x4c]
push eax
mov eax,[ebp-0x4]
mov eax,[eax+0x29c]
push eax
call dword 0x5f60
ret
jmp dword 0x3384
jmp short 0x56e0c
push ebp
call dword 0x56bcc
pop ecx
mov esp,ebp
pop ebp
ret
push ebx
push esi
push edi
add esp,byte -0x10
mov esi,ecx
mov ebx,eax
mov ecx,esi
mov eax,ebx
call dword 0x54b6c
mov eax,[ebx+0x29c]
test eax,eax
jz 0x56e9c
push byte +0x14
mov ecx,[esi+0xc]
mov edi,[esi+0x4]
sub ecx,edi
push ecx
mov ecx,[esi+0x8]
mov edx,[esi]
sub ecx,edx
push ecx
push edi
push edx
push byte +0x1
push eax
call dword 0x6320
cmp byte [ebx+0x277],0x2
jnz 0x56e9c
push esp
mov eax,[ebx+0x29c]
push eax
call dword 0x5fc0
test eax,eax
jz 0x56e9c
push byte -0x1
push byte +0x0
mov eax,[ebx+0x29c]
push eax
call dword 0x6150
add esp,byte +0x10
pop edi
pop esi
pop ebx
ret
nop
push ebx
push esi
push edi
push ecx
mov ebx,eax
mov eax,ebx
call dword 0x5522c
mov eax,ebx
call dword 0x486bc
test al,al
jz 0x56ef9
push byte -0x14
mov eax,ebx
call dword 0x4831c
push eax
call dword 0x60f8
and eax,0xffffefff
and eax,0xffffdfff
and eax,0xffffbfff
mov [esp],eax
mov edx,esp
mov eax,ebx
call dword 0x443d8
mov eax,[esp]
push eax
push byte -0x14
mov eax,ebx
call dword 0x4831c
push eax
call dword 0x6308
mov eax,ebx
call dword 0x1abdc
mov edi,eax
dec edi
test edi,edi
jl 0x56f34
inc edi
xor esi,esi
mov edx,esi
mov eax,ebx
call dword 0x1abb0
mov edx,[dword 0x4350f0]
call dword 0x2d7c
test al,al
jz 0x56f30
mov edx,esi
mov eax,ebx
call dword 0x1abb0
call dword 0x39600
inc esi
dec edi
jnz 0x56f0a
pop edx
pop edi
pop esi
pop ebx
ret
lea eax,[eax+0x0]
push ebp
mov ebp,esp
push ecx
push esi
mov [ebp-0x4],eax
mov eax,[ebp-0x4]
cmp byte [eax+0x28c],0x0
jnz 0x56fc3
mov eax,[ebp-0x4]
mov byte [eax+0x28c],0x1
xor eax,eax
push ebp
push dword 0x457fbc
push dword [fs:eax]
mov [fs:eax],esp
mov eax,[ebp-0x4]
cmp byte [eax+0x60],0x0
jz 0x56fa4
mov eax,[ebp-0x4]
mov esi,[eax+0x30]
test esi,esi
jnz 0x56f8e
mov eax,[0x46dc9c]
movzx edx,byte [eax+0x34]
mov eax,[ebp-0x4]
mov ecx,[eax]
call dword [ecx+0x74]
jmp short 0x56f9a
movzx edx,byte [esi+0x5f]
mov eax,[ebp-0x4]
mov ecx,[eax]
call dword [ecx+0x74]
mov dl,0x1
mov eax,[ebp-0x4]
mov ecx,[eax]
call dword [ecx+0x70]
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x457fc3
mov eax,[ebp-0x4]
mov byte [eax+0x28c],0x0
ret
jmp dword 0x3384
jmp short 0x56fb1
pop esi
pop ecx
pop ebp
ret
nop
push ebx
push esi
push edi
mov esi,edx
mov ebx,eax
mov eax,[esi+0x4]
mov eax,[eax+0x4]
call dword 0x3cce8
test eax,eax
jz 0x56fe7
mov eax,[esi+0x4]
cmp byte [eax+0x8],0x0
jnz 0x5702c
mov eax,[ebx+0x33c]
call dword 0x49d0
mov edi,eax
lea eax,[edi+0x1]
push eax
lea eax,[ebx+0x33c]
mov ecx,0x1
mov edx,[dword 0x452c50]
call dword 0x4b8c
add esp,byte +0x4
mov eax,[ebx+0x33c]
mov edx,[esi+0x4]
mov edx,[edx]
mov [eax+edi*8],edx
mov eax,[ebx+0x33c]
mov edx,[esi+0x8]
mov [eax+edi*8+0x4],edx
pop edi
pop esi
pop ebx
ret
push ebx
push esi
push edi
push ebp
push ecx
mov ebp,ecx
mov edi,edx
mov esi,eax
and dword [edi],0xfff4ffff
and dword [ebp+0x0],0xfffffbff
movzx eax,byte [esi+0x271]
mov [esp],al
cmp byte [esi+0x277],0x1
jnz 0x5706b
movzx eax,byte [esp]
test al,al
jz 0x57067
sub al,0x3
jnz 0x5706b
mov byte [esp],0x2
movzx ebx,byte [esi+0x270]
movzx eax,byte [esp]
sub al,0x1
jc 0x57085
sub al,0x2
jz 0x5708e
dec eax
sub al,0x2
jc 0x5709b
jmp short 0x570a6
movzx ebx,byte [dword 0x4580f0]
jmp short 0x570a6
movzx eax,byte [dword 0x4580f4]
and al,bl
mov ebx,eax
jmp short 0x570a6
movzx eax,byte [dword 0x4580f8]
and al,bl
mov ebx,eax
movzx eax,byte [esp]
sub al,0x3
jnc 0x570d2
cmp byte [esi+0x277],0x1
jnz 0x570bc
test bl,0x1
jz 0x570d2
test bl,0x2
jz 0x570c7
or dword [edi],0x20000
test bl,0x4
jz 0x570d2
or dword [edi],0x10000
test bl,0x1
jz 0x570dd
or dword [edi],0x80000
test bl,0x8
jz 0x570e9
or dword [ebp+0x0],0x400
pop edx
pop ebp
pop edi
pop esi
pop ebx
ret
add [eax],al
add [eax],al
add [ecx],cl
add [eax],al
add [ecx],al
add [eax],al
add [ebx+0x56],dl
add esp,byte -0xc
mov [esp],dl
mov ebx,eax
movzx eax,byte [esp]
cmp al,[ebx+0x270]
jz dword 0x571de
movzx eax,byte [esp]
mov [ebx+0x270],al
mov eax,ebx
call dword 0x486bc
test al,al
jz dword 0x571de
test byte [ebx+0x1c],0x10
jz 0x57149
test byte [ebx+0x1c],0x10
jz dword 0x571de
cmp dword [ebx+0x30],byte +0x0
jz dword 0x571de
cmp byte [ebx+0x277],0x1
jnz 0x5715b
cmp byte [ebx+0x273],0x2
jz 0x571d7
push byte -0x10
mov eax,ebx
call dword 0x4831c
push eax
call dword 0x60f8
mov [esp+0x4],eax
push byte -0x14
mov eax,ebx
call dword 0x4831c
push eax
call dword 0x60f8
mov [esp+0x8],eax
lea ecx,[esp+0x8]
lea edx,[esp+0x4]
mov eax,ebx
mov si,0xffaa
call dword 0x2dec
mov eax,[esp+0x4]
push eax
push byte -0x10
mov eax,ebx
call dword 0x4831c
push eax
call dword 0x6308
mov eax,[esp+0x8]
push eax
push byte -0x14
mov eax,ebx
call dword 0x4831c
push eax
call dword 0x6308
push byte +0x37
push byte +0x0
push byte +0x0
push byte +0x0
push byte +0x0
push byte +0x0
mov eax,ebx
call dword 0x4831c
push eax
call dword 0x6320
jmp short 0x571de
mov eax,ebx
call dword 0x44c28
add esp,byte +0xc
pop esi
pop ebx
ret
push ebp
mov ebp,esp
push esi
push edi
mov edi,ecx
mov esi,eax
and dword [edx],0x7f3bff7f
and dword [edi],0xfffffe7e
mov eax,[ebp+0x8]
and dword [eax],0xffffd7ff
movzx eax,byte [esi+0x271]
cmp byte [esi+0x277],0x1
jnz 0x5721f
mov ecx,eax
test cl,cl
jz 0x5721d
sub cl,0x3
jnz 0x5721f
mov al,0x2
movzx ecx,al
cmp ecx,byte +0x5
ja dword 0x572da
jmp dword [ecx*4+0x458232]
dec edx
db 0x82
inc ebp
add [ebp-0x7e],ah
inc ebp
add [ebp-0x7e],ch
inc ebp
add [ebp-0x7e],dh
inc ebp
add [ebp-0x7e],ah
inc ebp
add [ebp-0x7e],ch
inc ebp
add [ebx+0xf00307e],al
test [esi-0x7d000000],eax
mov esi,0x1c4
add [ebp+0x7d],dh
or dword [edx],0x80000000
jmp short 0x572da
or dword [edx],0xc00000
jmp short 0x572da
or dword [edx],0xc40000
jmp short 0x572da
test byte [esi+0x1c],0x10
jz 0x57289
cmp dword [esi+0x30],byte +0x0
jz 0x57289
or dword [edx],0xc00000
jmp short 0x57299
mov ecx,[edx]
or ecx,0x80000000
or ecx,0xc00000
mov [edx],ecx
mov ecx,[edi]
or ecx,byte +0x1
or ecx,0x100
mov [edi],ecx
mov ecx,[dword 0x468c68]
cmp byte [ecx],0x0
jnz 0x572c1
mov ecx,[edx]
or ecx,0x400000
or ecx,0x80
mov [edx],ecx
mov edx,[ebp+0x8]
mov edx,[edx]
or edx,byte +0x8
or edx,0x800
or edx,0x2000
mov ecx,[ebp+0x8]
mov [ecx],edx
add al,0xfc
sub al,0x2
jnc 0x572ef
cmp byte [esi+0x277],0x1
jz 0x572ef
or dword [edi],0x80
pop edi
pop esi
pop ebp
ret 0x4
lea eax,[eax+0x0]
push esi
push edi
add esp,byte -0xc
mov edi,eax
cmp dl,[edi+0x271]
jz dword 0x5748f
mov [edi+0x271],dl
cmp byte [edi+0x258],0x0
jz 0x57329
movzx eax,byte [edi+0x271]
sub al,0x2
jz 0x5732d
sub al,0x3
jz 0x5732d
xor edx,edx
jmp short 0x5732f
mov dl,0x1
mov eax,edi
call dword 0x54ce8
mov eax,edi
call dword 0x486bc
test al,al
jz dword 0x5748f
test byte [edi+0x1c],0x10
jz 0x5735f
test byte [edi+0x1c],0x10
jz dword 0x5748f
cmp dword [edi+0x30],byte +0x0
jz dword 0x5748f
push byte -0x10
mov eax,edi
call dword 0x4831c
push eax
call dword 0x60f8
mov [esp],eax
push byte -0x14
mov eax,edi
call dword 0x4831c
push eax
call dword 0x60f8
mov [esp+0x4],eax
push byte -0x1a
mov eax,edi
call dword 0x4831c
push eax
call dword 0x5fb8
mov [esp+0x8],eax
lea eax,[esp+0x8]
push eax
lea ecx,[esp+0x8]
lea edx,[esp+0x4]
mov eax,edi
mov si,0xffa9
call dword 0x2dec
lea ecx,[esp+0x4]
mov edx,esp
mov eax,edi
mov si,0xffaa
call dword 0x2dec
mov eax,[esp]
push eax
push byte -0x10
mov eax,edi
call dword 0x4831c
push eax
call dword 0x6308
mov eax,[esp+0x4]
push eax
push byte -0x14
mov eax,edi
call dword 0x4831c
push eax
call dword 0x6308
mov eax,[esp+0x8]
push eax
push byte -0x1a
mov eax,edi
call dword 0x4831c
push eax
call dword 0x62a0
mov eax,edi
call dword 0x486bc
test al,al
jz 0x5746c
mov eax,[0x468c68]
cmp byte [eax],0x0
jz 0x5744d
cmp byte [edi+0x271],0x3
jz 0x57437
mov eax,edi
call dword 0x5931c
push eax
push byte +0x1
push dword 0x80
mov eax,edi
call dword 0x4831c
push eax
call dword 0x6278
jmp short 0x5744d
push byte +0x0
push byte +0x1
push dword 0x80
mov eax,edi
call dword 0x4831c
push eax
call dword 0x6278
push byte -0x1
mov eax,edi
call dword 0x4831c
push eax
call dword 0x60d0
push byte +0x0
xor ecx,ecx
mov edx,0x81
mov eax,edi
call dword 0x41588
push byte +0x37
push byte +0x0
push byte +0x0
push byte +0x0
push byte +0x0
push byte +0x0
mov eax,edi
call dword 0x4831c
push eax
call dword 0x6320
mov eax,edi
mov edx,[eax]
call dword [edx+0x80]
add esp,byte +0xc
pop edi
pop esi
ret
lea eax,[eax+0x0]
push ebx
push esi
push edi
add esp,byte -0x10
mov esi,ecx
lea edi,[esp]
movsd
movsd
movsd
movsd
mov ebx,eax
mov edi,[ebx+0x30]
mov esi,[ebx+0x94]
mov ecx,esp
mov eax,ebx
call dword 0x3f9e8
mov eax,[ebx+0x30]
test eax,eax
jz 0x574d5
cmp edi,eax
jnz 0x574d5
cmp esi,[ebx+0x94]
jz 0x574d5
mov eax,ebx
call dword 0x44c28
add esp,byte +0x10
pop edi
pop esi
pop ebx
ret
push ebx
push esi
push edi
mov edi,ecx
mov esi,edx
mov ebx,eax
cmp esi,[ebx+0x94]
jz 0x57523
test esi,esi
jz 0x574fc
mov eax,ebx
mov edx,[eax]
call dword [edx+0x54]
test al,al
jz 0x57523
test esi,esi
jnz 0x5750f
movzx eax,byte [ebx+0x2c8]
mov [ebx+0x271],al
jmp short 0x57523
movzx eax,byte [ebx+0x271]
mov [ebx+0x2c8],al
mov byte [ebx+0x271],0x0
mov ecx,edi
mov edx,esi
mov eax,ebx
call dword 0x3fb18
pop edi
pop esi
pop ebx
ret
mov eax,eax
push ebx
mov ebx,eax
xor eax,eax
cmp byte [ebx+0x277],0x2
jnz 0x57565
cmp dword [ebx+0x29c],byte +0x0
jz 0x57565
push byte +0x0
push byte +0x0
push dword 0x229
mov eax,[ebx+0x29c]
push eax
call dword 0x6278
call dword 0x3cce8
pop ebx
ret
nop
push ebx
push esi
push edi
xor edi,edi
cmp byte [eax+0x277],0x2
jnz 0x575ad
cmp dword [eax+0x29c],byte +0x0
jz 0x575ad
mov eax,[0x46dca0]
call dword 0x5c03c
mov ebx,eax
dec ebx
test ebx,ebx
jl 0x575ad
inc ebx
xor esi,esi
mov edx,esi
mov eax,[0x46dca0]
call dword 0x5c028
cmp byte [eax+0x277],0x1
jnz 0x575a9
inc edi
inc esi
dec ebx
jnz 0x57593
mov eax,edi
pop edi
pop esi
pop ebx
ret
nop
push ebx
push esi
push edi
mov edi,edx
cmp byte [eax+0x277],0x2
jnz 0x575fd
cmp dword [eax+0x29c],byte +0x0
jz 0x575fd
mov eax,[0x46dca0]
call dword 0x5c03c
mov ebx,eax
dec ebx
test ebx,ebx
jl 0x575fd
inc ebx
xor esi,esi
mov edx,esi
mov eax,[0x46dca0]
call dword 0x5c028
cmp byte [eax+0x277],0x1
jnz 0x575f9
dec edi
test edi,edi
jl 0x575ff
inc esi
dec ebx
jnz 0x575df
xor eax,eax
pop edi
pop esi
pop ebx
ret
nop
push ebp
mov ebp,esp
push ebx
mov ebx,[ebp+0x14]
mov dl,0x1
mov eax,[0x454460]
call dword 0x2bc0
mov edx,[ebp+0x8]
mov [eax+0x4],edx
mov edx,[ebx+0x8]
mov [eax+0x8],edx
mov edx,eax
mov eax,ebx
call dword 0x13d24
mov al,0x1
pop ebx
pop ebp
ret 0x10
nop
push ebx
push esi
push edi
push ebp
mov ebx,eax
xor ebp,ebp
push byte +0x2
mov eax,ebx
call dword 0x4831c
push eax
mov eax,[0x468c74]
mov eax,[eax]
call eax
mov edi,eax
mov eax,[0x46dca0]
call dword 0x5c00c
mov esi,eax
dec esi
test esi,esi
jl 0x5768a
inc esi
xor ebx,ebx
mov edx,ebx
mov eax,[0x46dca0]
call dword 0x5bff8
cmp edi,[eax+0x4]
jnz 0x57686
mov edx,ebx
mov eax,[0x46dca0]
call dword 0x5bff8
mov ebp,eax
jmp short 0x576cd
inc ebx
dec esi
jnz 0x57665
mov eax,[0x46dca0]
call dword 0x5cee4
mov eax,[0x46dca0]
call dword 0x5c00c
mov esi,eax
dec esi
test esi,esi
jl 0x576cd
inc esi
xor ebx,ebx
mov edx,ebx
mov eax,[0x46dca0]
call dword 0x5bff8
cmp edi,[eax+0x4]
jnz 0x576c9
mov edx,ebx
mov eax,[0x46dca0]
call dword 0x5bff8
mov ebp,eax
jmp short 0x576cd
inc ebx
dec esi
jnz 0x576a8
mov eax,ebp
pop ebp
pop edi
pop esi
pop ebx
ret
mov eax,[eax+0x280]
ret
nop
mov eax,[eax+0x288]
mov ecx,[eax]
call dword [ecx+0x8]
ret
movzx eax,byte [eax+0x5e]
xor al,0x1
ret
nop
push ebx
mov ebx,eax
mov eax,ebx
call dword 0x576e8
test al,al
jz 0x5770d
mov eax,[ebx+0x288]
call dword 0x263cc
test eax,eax
jnz 0x57711
xor eax,eax
pop ebx
ret
mov al,0x1
pop ebx
ret
lea eax,[eax+0x0]
push ebp
mov ebp,esp
add esp,byte -0x8
push ebx
mov ebx,edx
mov [ebp-0x4],eax
mov eax,[ebp-0x4]
cmp bl,[eax+0x277]
jz dword 0x57887
test bl,bl
jnz 0x57743
mov eax,[ebp-0x4]
cmp byte [eax+0x277],0x3
jz 0x57754
cmp bl,0x3
jnz 0x577b2
mov eax,[ebp-0x4]
cmp byte [eax+0x277],0x0
jnz 0x577b2
mov eax,[ebp-0x4]
mov [eax+0x277],bl
mov eax,[ebp-0x4]
test byte [eax+0x1c],0x10
jnz dword 0x57887
mov eax,[ebp-0x4]
call dword 0x486bc
test al,al
jz dword 0x57887
push dword 0x213
push byte +0x0
push byte +0x0
push byte +0x0
push byte +0x0
mov eax,[ebp-0x4]
cmp byte [eax+0x277],0x3
setz al
and eax,byte +0x7f
mov eax,[eax*4+0x4687dc]
push eax
mov eax,[ebp-0x4]
call dword 0x4831c
push eax
call dword 0x6320
jmp dword 0x57887
cmp bl,0x1
jnz 0x577cd
mov eax,[ebp-0x4]
cmp byte [eax+0x278],0x0
jnz 0x577cd
mov dl,0x1
mov eax,[ebp-0x4]
call dword 0x57c20
mov eax,[ebp-0x4]
test byte [eax+0x1c],0x10
setnz al
xor al,0x1
mov [ebp-0x5],al
cmp byte [ebp-0x5],0x0
jz 0x577ec
mov dl,0x1
mov eax,[ebp-0x4]
call dword 0x49804
xor edx,edx
push ebp
push dword 0x458880
push dword [fs:edx]
mov [fs:edx],esp
cmp byte [ebp-0x5],0x0
jz 0x5780b
mov eax,[ebp-0x4]
mov edx,[eax]
call dword [edx+0xb0]
mov eax,[ebp-0x4]
movzx eax,byte [eax+0x277]
mov edx,[ebp-0x4]
mov [edx+0x277],bl
cmp bl,0x2
jz 0x57827
cmp al,0x2
jnz 0x57845
mov eax,[ebp-0x4]
cmp byte [eax+0x1d9],0x0
jnz 0x57845
mov eax,[ebp-0x4]
call dword 0x57d58
mov edx,eax
mov eax,[ebp-0x4]
call dword 0x40438
cmp byte [ebp-0x5],0x0
jz 0x57853
mov eax,[ebp-0x4]
call dword 0x44e3c
cmp bl,0x1
jnz 0x57862
mov dl,0x1
mov eax,[ebp-0x4]
call dword 0x564b4
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x458887
cmp byte [ebp-0x5],0x0
jz 0x5787f
xor edx,edx
mov eax,[ebp-0x4]
call dword 0x49804
ret
jmp dword 0x3384
jmp short 0x5786f
pop ebx
pop ecx
pop ecx
pop ebp
ret
push ebx
push esi
push edi
push ebp
mov ebp,eax
cmp byte [ebp+0x277],0x2
jnz 0x57900
cmp dword [ebp+0x29c],byte +0x0
jz 0x57900
xor esi,esi
mov eax,[ebp+0x290]
test eax,eax
jz 0x578b7
mov edx,[eax]
call dword [edx+0x34]
mov esi,eax
xor edi,edi
mov eax,[ebp+0x2a0]
test eax,eax
jz 0x578ca
call dword 0x35874
mov edi,eax
mov eax,ebp
call dword 0x4831c
push eax
call dword 0x6050
cmp esi,eax
setnz bl
push edi
push esi
push dword 0x230
mov eax,[ebp+0x29c]
push eax
call dword 0x6278
test bl,bl
jz 0x57900
mov eax,ebp
call dword 0x4831c
push eax
call dword 0x5f38
pop ebp
pop edi
pop esi
pop ebx
ret
lea eax,[eax+0x0]
push ebx
mov ebx,edx
mov [eax+0x2a8],ebx
test ebx,ebx
jz 0x57927
mov edx,eax
mov eax,ebx
call dword 0x1a670
xor edx,edx
mov eax,ebx
call dword 0x372f0
pop ebx
ret
lea eax,[eax+0x0]
push ebx
mov ebx,eax
cmp edx,[ebx+0x2a0]
jz 0x57951
mov [ebx+0x2a0],edx
test edx,edx
jz 0x5794a
mov eax,edx
mov edx,ebx
call dword 0x1a670
mov eax,ebx
call dword 0x5788c
pop ebx
ret
nop
push ebp
mov ebp,esp
add esp,byte -0x10
push ebx
push esi
push edi
xor ecx,ecx
mov [ebp-0x10],ecx
mov esi,edx
mov ebx,eax
xor eax,eax
push ebp
push dword 0x458b68
push dword [fs:eax]
mov [fs:eax],esp
test esi,esi
jz 0x579e8
mov eax,[0x46dca0]
call dword 0x5c03c
dec eax
test eax,eax
jl 0x579e8
inc eax
mov [ebp-0x4],eax
xor edi,edi
mov edx,edi
mov eax,[0x46dca0]
call dword 0x5c028
cmp esi,[eax+0x290]
jnz 0x579e2
mov edx,edi
mov eax,[0x46dca0]
call dword 0x5c028
cmp ebx,eax
jz 0x579e2
mov eax,[esi+0x8]
mov [ebp-0xc],eax
mov byte [ebp-0x8],0xb
lea eax,[ebp-0xc]
push eax
push byte +0x0
lea edx,[ebp-0x10]
mov eax,[0x468b8c]
call dword 0x5750
mov ecx,[ebp-0x10]
mov dl,0x1
mov eax,[0x4128ec]
call dword 0xb48c
call dword 0x3464
inc edi
dec dword [ebp-0x4]
jnz 0x5798d
mov eax,[ebx+0x290]
test eax,eax
jz 0x579f9
xor edx,edx
call dword 0x390ec
test byte [ebx+0x1c],0x8
jnz 0x57a09
test esi,esi
jz 0x57a0b
test byte [esi+0x1c],0x8
jz 0x57a0b
xor esi,esi
mov [ebx+0x290],esi
test esi,esi
jz 0x57a1e
mov edx,ebx
mov eax,esi
call dword 0x1a670
test esi,esi
jz dword 0x57ad1
test byte [ebx+0x1c],0x10
jnz 0x57a39
cmp byte [ebx+0x271],0x3
jz dword 0x57ad1
mov eax,[ebx+0x290]
cmp byte [eax+0x5c],0x0
jnz 0x57a4e
cmp byte [ebx+0x277],0x1
jnz 0x57a54
test byte [ebx+0x1c],0x10
jz 0x57aac
mov eax,ebx
call dword 0x486bc
test al,al
jz dword 0x57aeb
mov eax,[ebx+0x290]
mov edx,[eax]
call dword [edx+0x34]
mov edi,eax
mov eax,ebx
call dword 0x4831c
push eax
call dword 0x6050
cmp edi,eax
jz 0x57a9a
mov eax,[ebx+0x290]
mov edx,[eax]
call dword [edx+0x34]
push eax
mov eax,ebx
call dword 0x4831c
push eax
call dword 0x62c0
mov eax,ebx
call dword 0x4831c
mov edx,eax
mov eax,esi
call dword 0x390ec
jmp short 0x57aeb
cmp byte [ebx+0x277],0x1
jz 0x57aeb
mov eax,ebx
call dword 0x486bc
test al,al
jz 0x57aeb
push byte +0x0
mov eax,ebx
call dword 0x4831c
push eax
call dword 0x62c0
jmp short 0x57aeb
mov eax,ebx
call dword 0x486bc
test al,al
jz 0x57aeb
push byte +0x0
mov eax,ebx
call dword 0x4831c
push eax
call dword 0x62c0
cmp byte [ebx+0x276],0x0
jz 0x57afd
mov dl,0x1
mov eax,ebx
call dword 0x591a8
mov eax,ebx
call dword 0x5788c
cmp dword [ebx+0x298],byte +0x0
jz 0x57b52
test byte [ebx+0x1c],0x10
jz 0x57b52
cmp dword [ebx+0x30],byte +0x0
jz 0x57b52
push byte +0x37
push byte +0x0
push byte +0x0
push byte +0x0
push byte +0x0
push byte +0x0
mov eax,ebx
call dword 0x4831c
push eax
call dword 0x6320
push byte +0x0
xor ecx,ecx
mov edx,0x85
mov eax,ebx
call dword 0x41588
push byte +0x0
xor ecx,ecx
mov edx,0xf
mov eax,ebx
call dword 0x41588
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x458b6f
lea eax,[ebp-0x10]
call dword 0x3a1c
ret
jmp dword 0x3384
jmp short 0x57b5f
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret
mov eax,eax
mov eax,[eax+0x2a4]
mov eax,[eax]
test eax,eax
jnz 0x57b8c
mov eax,[0x46dca0]
mov eax,[eax+0x40]
ret
lea eax,[eax+0x0]
push ebx
mov ebx,eax
cmp dword [ebx+0x32c],byte +0x0
jnz 0x57bae
mov dl,0x1
mov eax,[0x41294c]
call dword 0x2bc0
mov [ebx+0x32c],eax
mov eax,[ebx+0x32c]
pop ebx
ret
mov eax,eax
push ebx
mov ebx,eax
cmp dword [ebx+0x338],byte +0x0
jnz 0x57bd6
mov dl,0x1
mov eax,[0x41294c]
call dword 0x2bc0
mov [ebx+0x338],eax
mov eax,[ebx+0x338]
pop ebx
ret
mov eax,eax
push ebx
push esi
mov ebx,edx
mov esi,eax
mov eax,esi
call dword 0x57b78
cmp ebx,eax
jz 0x57c1c
test ebx,ebx
jz 0x57bfa
cmp ebx,byte +0x24
jl 0x57c1c
test byte [esi+0x1c],0x1
jnz 0x57c04
mov al,0x1
jmp short 0x57c10
mov eax,[esi+0x2a4]
cmp dword [eax],byte +0x0
setnz al
test al,al
jz 0x57c1c
mov eax,[esi+0x2a4]
mov [eax],ebx
pop esi
pop ebx
ret
nop
cmp dl,[eax+0x278]
jz 0x57c39
mov [eax+0x278],dl
test byte [eax+0x1c],0x10
jnz 0x57c39
call dword 0x44c28
ret
mov eax,eax
push ebx
mov ebx,eax
cmp dl,[ebx+0x330]
jz 0x57c8c
mov [ebx+0x330],dl
cmp dl,0x1
jnz 0x57c64
cmp dword [ebx+0x334],byte +0x0
jz 0x57c64
xor edx,edx
mov eax,ebx
call dword 0x57c90
xor eax,eax
mov [ebx+0x340],eax
xor eax,eax
mov [ebx+0x344],eax
mov eax,ebx
call dword 0x486bc
test al,al
jz 0x57c8c
test byte [ebx+0x1c],0x10
jnz 0x57c8c
mov eax,ebx
call dword 0x44c28
pop ebx
ret
mov eax,eax
push ebx
push esi
mov esi,edx
mov ebx,eax
mov eax,[ebx+0x334]
cmp esi,eax
jz 0x57ced
test eax,eax
jz 0x57cab
mov edx,ebx
call dword 0x1a8b0
mov [ebx+0x334],esi
test esi,esi
jz 0x57cc5
mov edx,ebx
mov eax,esi
call dword 0x1a670
mov byte [ebx+0x330],0x2
xor eax,eax
mov [ebx+0x340],eax
xor eax,eax
mov [ebx+0x344],eax
mov eax,ebx
call dword 0x486bc
test al,al
jz 0x57ced
test byte [ebx+0x1c],0x10
jnz 0x57ced
mov eax,ebx
call dword 0x44c28
pop esi
pop ebx
ret
mov eax,[eax+0x2a4]
cmp dword [eax],byte +0x0
setnz al
ret
lea eax,[eax+0x0]
push ebx
push esi
mov ebx,edx
mov esi,eax
mov eax,esi
call dword 0x57cf0
cmp bl,al
jz 0x57d30
mov eax,[esi+0x2a4]
xor edx,edx
mov [eax],edx
test bl,bl
jz 0x57d30
mov eax,[esi+0x2a4]
mov edx,[dword 0x46dca0]
mov edx,[edx+0x40]
mov [eax],edx
pop esi
pop ebx
ret
nop
push ebx
mov ebx,eax
mov eax,ebx
call dword 0x47820
mov eax,[ebx+0x280]
test eax,eax
jz 0x57d53
mov eax,[eax+0x14]
mov edx,[ebx+0x70]
call dword 0x20454
pop ebx
ret
lea eax,[eax+0x0]
mov edx,0xff000005
cmp byte [eax+0x277],0x2
jnz 0x57d6b
mov edx,0xff00000c
mov eax,edx
ret
mov eax,eax
push ebx
mov ebx,eax
mov eax,ebx
call dword 0x47904
cmp byte [ebx+0x1d9],0x0
jz 0x57d9d
mov eax,ebx
call dword 0x57d58
cmp eax,[ebx+0x70]
jnz 0x57db6
mov edx,0xff00000f
mov eax,ebx
call dword 0x40438
pop ebx
ret
cmp dword [ebx+0x70],0xff00000f
jnz 0x57db6
mov eax,ebx
call dword 0x57d58
mov edx,eax
mov eax,ebx
call dword 0x40438
pop ebx
ret
push ebx
mov ebx,eax
mov eax,ebx
call dword 0x47848
mov eax,[ebx+0x280]
test eax,eax
jz 0x57dd4
mov edx,[ebx+0x68]
call dword 0x20a4c
pop ebx
ret
mov eax,eax
push ebx
mov ebx,eax
mov eax,ebx
call dword 0x5788c
mov edx,[ebx+0x290]
mov eax,ebx
call dword 0x57954
pop ebx
ret
lea eax,[eax+0x0]
push ebx
push esi
mov ebx,edx
mov esi,eax
cmp bl,[esi+0x273]
jz 0x57e2f
mov [esi+0x273],bl
test byte [esi+0x1c],0x10
jnz 0x57e2f
cmp byte [esi+0x1da],0x0
jz 0x57e2f
movzx eax,bl
mov eax,[eax*4+0x4687e4]
push eax
mov eax,esi
call dword 0x4831c
push eax
call dword 0x6348
pop esi
pop ebx
ret
mov eax,eax
push ebx
push esi
push edi
push ebp
add esp,byte -0x14
mov ebx,eax
movzx eax,byte [ebx+0x279]
test al,al
jz dword 0x5818f
mov edx,[dword 0x46dc9c]
cmp dword [edx+0x44],byte +0x0
jz dword 0x5818f
xor edx,edx
mov [esp],edx
cmp al,0x2
jnz 0x57e7a
mov eax,[0x46dc9c]
mov eax,[eax+0x44]
call dword 0x57634
mov eax,[eax+0x4]
mov [esp],eax
jmp short 0x57eba
movzx eax,byte [ebx+0x279]
cmp al,0x3
jnz 0x57ea6
mov edx,[dword 0x46dca0]
cmp dword [edx+0x68],byte +0x0
jz 0x57ea6
mov eax,[0x46dca0]
mov eax,[eax+0x68]
call dword 0x57634
mov eax,[eax+0x4]
mov [esp],eax
jmp short 0x57eba
cmp al,0x1
jnz 0x57eba
mov eax,[0x46dca0]
call dword 0x5cf08
mov eax,[eax+0x4]
mov [esp],eax
mov eax,ebx
call dword 0x57634
mov eax,[eax+0x4]
mov [esp+0x4],eax
mov eax,[0x46dca0]
call dword 0x5c00c
dec eax
test eax,eax
jl dword 0x5818f
inc eax
mov [esp+0x10],eax
xor esi,esi
mov edx,esi
mov eax,[0x46dca0]
call dword 0x5bff8
mov eax,[eax+0x4]
cmp eax,[esp]
jnz dword 0x58184
mov eax,[esp]
cmp eax,[esp+0x4]
jz dword 0x58184
mov eax,[0x46dca0]
call dword 0x5c00c
mov edi,eax
dec edi
test edi,edi
jl dword 0x58184
inc edi
mov dword [esp+0x8],0x0
mov edx,[esp+0x8]
mov eax,[0x46dca0]
call dword 0x5bff8
mov eax,[eax+0x4]
cmp eax,[esp+0x4]
jnz dword 0x58179
movzx eax,byte [ebx+0x278]
cmp al,0x4
jnz 0x57fc5
mov eax,[ebx+0x48]
push eax
mov ebp,[ebx+0x4c]
push ebp
mov edx,esi
mov eax,[0x46dca0]
call dword 0x5bff8
call dword 0x5bcd8
push eax
mov edx,esi
mov eax,[0x46dca0]
call dword 0x5bff8
call dword 0x5bcbc
sub eax,ebp
sar eax,1
jns 0x57f7f
adc eax,byte +0x0
pop edx
add edx,eax
push edx
mov edx,esi
mov eax,[0x46dca0]
call dword 0x5bff8
call dword 0x5bca4
mov ebp,eax
mov edx,esi
mov eax,[0x46dca0]
call dword 0x5bff8
call dword 0x5bcf0
sub eax,[ebx+0x48]
sar eax,1
jns 0x57fb1
adc eax,byte +0x0
add ebp,eax
mov edx,ebp
mov eax,ebx
pop ecx
mov ebp,[eax]
call dword [ebp+0x88]
jmp dword 0x58179
cmp al,0x6
jnz 0x58043
mov eax,[ebx+0x48]
push eax
mov ebp,[ebx+0x4c]
push ebp
mov edx,esi
mov eax,[0x46dca0]
call dword 0x5bff8
call dword 0x5bcd8
push eax
mov edx,esi
mov eax,[0x46dca0]
call dword 0x5bff8
call dword 0x5bcbc
sub eax,ebp
sar eax,1
jns 0x57ffd
adc eax,byte +0x0
pop edx
add edx,eax
push edx
mov edx,esi
mov eax,[0x46dca0]
call dword 0x5bff8
call dword 0x5bca4
mov ebp,eax
mov edx,esi
mov eax,[0x46dca0]
call dword 0x5bff8
call dword 0x5bcf0
sub eax,[ebx+0x48]
sar eax,1
jns 0x5802f
adc eax,byte +0x0
add ebp,eax
mov edx,ebp
mov eax,ebx
pop ecx
mov ebp,[eax]
call dword [ebp+0x88]
jmp dword 0x58179
mov edx,esi
mov eax,[0x46dca0]
call dword 0x5bff8
call dword 0x5bca4
mov ebp,eax
mov eax,ebx
call dword 0x56044
add ebp,eax
mov edx,[esp+0x8]
mov eax,[0x46dca0]
call dword 0x5bff8
call dword 0x5bca4
sub ebp,eax
mov edx,esi
mov eax,[0x46dca0]
call dword 0x5bff8
call dword 0x5bca4
push eax
mov edx,esi
mov eax,[0x46dca0]
call dword 0x5bff8
call dword 0x5bcf0
pop edx
add edx,eax
mov eax,[ebx+0x48]
add eax,ebp
cmp edx,eax
jnl 0x580cc
mov edx,esi
mov eax,[0x46dca0]
call dword 0x5bff8
call dword 0x5bca4
mov ebp,eax
mov edx,esi
mov eax,[0x46dca0]
call dword 0x5bff8
call dword 0x5bcf0
add ebp,eax
sub ebp,[ebx+0x48]
mov edx,esi
mov eax,[0x46dca0]
call dword 0x5bff8
call dword 0x5bcd8
push eax
mov eax,ebx
call dword 0x56064
pop edx
add edx,eax
push edx
mov edx,[esp+0xc]
mov eax,[0x46dca0]
call dword 0x5bff8
call dword 0x5bcd8
pop edx
sub edx,eax
mov [esp+0xc],edx
mov edx,esi
mov eax,[0x46dca0]
call dword 0x5bff8
call dword 0x5bcd8
push eax
mov edx,esi
mov eax,[0x46dca0]
call dword 0x5bff8
call dword 0x5bcbc
pop edx
add edx,eax
mov eax,[esp+0xc]
add eax,[ebx+0x4c]
cmp edx,eax
jnl 0x58161
mov edx,esi
mov eax,[0x46dca0]
call dword 0x5bff8
call dword 0x5bcd8
push eax
mov edx,esi
mov eax,[0x46dca0]
call dword 0x5bff8
call dword 0x5bcbc
pop edx
add edx,eax
sub edx,[ebx+0x4c]
mov [esp+0xc],edx
mov eax,[ebx+0x48]
push eax
mov eax,[ebx+0x4c]
push eax
mov ecx,[esp+0x14]
mov edx,ebp
mov eax,ebx
mov ebp,[eax]
call dword [ebp+0x88]
inc dword [esp+0x8]
dec edi
jnz dword 0x57f25
inc esi
dec dword [esp+0x10]
jnz dword 0x57ee2
add esp,byte +0x14
pop ebp
pop edi
pop esi
pop ebx
ret
nop
push ebx
push esi
mov esi,eax
push esi
call dword 0x6090
mov ebx,eax
jmp short 0x581ae
push esi
call dword 0x6090
mov ebx,eax
test ebx,ebx
jz 0x581c6
push byte -0x14
push ebx
call dword 0x60f8
and eax,0x80
cmp eax,0x80
jz 0x581a6
test ebx,ebx
jnz 0x58202
mov eax,[0x46dc9c]
mov ebx,[eax+0x44]
test ebx,ebx
jz 0x581fa
push byte -0x14
mov eax,ebx
call dword 0x4831c
push eax
call dword 0x60f8
test al,0x80
jnz 0x581fa
mov eax,[0x46dc9c]
mov eax,[eax+0x44]
call dword 0x4831c
mov ebx,eax
jmp short 0x58202
mov eax,[0x46dc9c]
mov ebx,[eax+0x30]
mov eax,ebx
pop esi
pop ebx
ret
nop
push ebx
push esi
push edi
push ebp
mov edi,edx
mov ebx,eax
mov edx,edi
mov eax,ebx
call dword 0x54b1c
mov edx,edi
mov eax,ebx
call dword 0x5b7bc
cmp dword [ebx+0x30],byte +0x0
jnz dword 0x585c7
cmp dword [ebx+0x1c4],byte +0x0
jnz dword 0x585c7
xor esi,esi
test byte [ebx+0x1c],0x10
jz 0x58245
mov al,0x2
jmp short 0x5826f
test byte [ebx+0x358],0x8
jz 0x5825b
cmp byte [ebx+0x330],0x0
jnz 0x5825b
mov al,0x1
jmp short 0x5826f
cmp byte [ebx+0x277],0x0
jnz 0x5826d
movzx eax,byte [ebx+0x330]
jmp short 0x5826f
xor eax,eax
mov ebp,[ebx+0x340]
test ebp,ebp
jnz dword 0x5855c
cmp dword [ebx+0x344],byte +0x0
jnz dword 0x5855c
sub al,0x1
jc 0x582a1
jz dword 0x58379
dec al
jz dword 0x584ee
jmp dword 0x58577
mov eax,[0x46dc9c]
call dword 0x608a0
test al,al
jz dword 0x58369
movzx eax,word [ebx+0x54]
and ax,0x8000
cmp ax,0x8000
jnz 0x582c5
mov al,0x1
jmp short 0x582d0
mov eax,[0x46dc9c]
cmp ebx,[eax+0x44]
setz al
test al,al
jz 0x582de
xor eax,eax
mov [edi+0x1c],eax
jmp dword 0x58577
mov eax,[0x46dc9c]
mov ebp,[eax+0x44]
test ebp,ebp
jz 0x58359
mov eax,ebp
call dword 0x486bc
test al,al
jz 0x58359
mov eax,[0x46dc9c]
call dword 0x601c0
mov ebp,eax
mov [edi+0x1c],ebp
mov eax,[0x46dc9c]
mov eax,[eax+0x44]
call dword 0x4831c
cmp ebp,eax
jnz dword 0x58577
mov eax,[0x46dc9c]
mov eax,[eax+0x44]
call dword 0x57b90
mov edx,ebx
call dword 0x13ed8
test eax,eax
jnl 0x58345
mov eax,[0x46dc9c]
mov eax,[eax+0x44]
call dword 0x57b90
mov edx,ebx
call dword 0x13d24
mov eax,[0x46dc9c]
mov edx,[eax+0x44]
mov eax,ebx
call dword 0x1a670
jmp dword 0x58577
mov eax,[0x46dc9c]
mov eax,[eax+0x30]
mov [edi+0x1c],eax
jmp dword 0x58577
mov eax,[0x46dc9c]
mov eax,[eax+0x30]
mov [edi+0x1c],eax
jmp dword 0x58577
mov eax,[0x46dc9c]
call dword 0x60178
mov [edi+0x1c],eax
cmp dword [edi+0x1c],byte +0x0
jz 0x583b7
mov eax,[edi+0x1c]
call dword 0x53800
test eax,eax
jnz 0x583b2
mov eax,[edi+0x1c]
push eax
call dword 0x6198
test eax,eax
jz 0x583b2
mov eax,[edi+0x1c]
push eax
call dword 0x6188
test eax,eax
jnz 0x583b7
xor eax,eax
mov [edi+0x1c],eax
mov ebp,[edi+0x1c]
test ebp,ebp
jz 0x583dd
push byte -0x14
push ebp
call dword 0x60f8
and eax,0x80
cmp eax,0x80
jnz 0x583dd
mov eax,[edi+0x1c]
call dword 0x58198
mov [edi+0x1c],eax
mov eax,[edi+0x1c]
test eax,eax
jz 0x5840e
mov edx,[dword 0x46dca0]
cmp dword [edx+0x6c],byte +0x0
jz 0x5840e
mov edx,[dword 0x46dca0]
mov edx,[edx+0x6c]
cmp eax,[edx+0x1b4]
jnz 0x5840e
mov eax,[0x46dca0]
mov esi,[eax+0x6c]
jmp dword 0x58577
test eax,eax
jnz dword 0x58577
mov eax,[0x46dc9c]
call dword 0x608a0
test al,al
jz dword 0x584de
movzx eax,word [ebx+0x54]
and ax,0x8000
cmp ax,0x8000
jnz 0x5843a
mov al,0x1
jmp short 0x58445
mov eax,[0x46dc9c]
cmp ebx,[eax+0x44]
setz al
test al,al
jz 0x58453
xor eax,eax
mov [edi+0x1c],eax
jmp dword 0x58577
mov eax,[0x46dc9c]
mov ebp,[eax+0x44]
test ebp,ebp
jz 0x584ce
mov eax,ebp
call dword 0x486bc
test al,al
jz 0x584ce
mov eax,[0x46dc9c]
call dword 0x601c0
mov ebp,eax
mov [edi+0x1c],ebp
mov eax,[0x46dc9c]
mov eax,[eax+0x44]
call dword 0x4831c
cmp ebp,eax
jnz dword 0x58577
mov eax,[0x46dc9c]
mov eax,[eax+0x44]
call dword 0x57b90
mov edx,ebx
call dword 0x13ed8
test eax,eax
jnl 0x584ba
mov eax,[0x46dc9c]
mov eax,[eax+0x44]
call dword 0x57b90
mov edx,ebx
call dword 0x13d24
mov eax,[0x46dc9c]
mov edx,[eax+0x44]
mov eax,ebx
call dword 0x1a670
jmp dword 0x58577
mov eax,[0x46dc9c]
mov eax,[eax+0x30]
mov [edi+0x1c],eax
jmp dword 0x58577
mov eax,[0x46dc9c]
mov eax,[eax+0x30]
mov [edi+0x1c],eax
jmp dword 0x58577
mov ebp,[ebx+0x334]
test ebp,ebp
jz 0x58510
test byte [ebx+0x1c],0x10
jnz 0x58510
mov eax,ebp
call dword 0x4831c
mov [edi+0x1c],eax
mov esi,[ebx+0x334]
jmp short 0x5851d
mov eax,[0x46dc9c]
call dword 0x601c0
mov [edi+0x1c],eax
mov eax,[edi+0x1c]
test eax,eax
jz 0x5854b
mov edx,[dword 0x46dc9c]
cmp dword [edx+0x44],byte +0x0
jz 0x5854b
mov edx,[dword 0x46dc9c]
mov edx,[edx+0x44]
cmp eax,[edx+0x1b4]
jnz 0x5854b
mov eax,[0x46dc9c]
mov esi,[eax+0x44]
jmp short 0x58577
test eax,eax
jnz 0x58577
mov eax,[0x46dc9c]
mov eax,[eax+0x30]
mov [edi+0x1c],eax
jmp short 0x58577
mov eax,[ebx+0x344]
test eax,eax
jz 0x5856b
mov [edi+0x1c],eax
jmp short 0x58577
mov esi,ebp
mov eax,ebp
call dword 0x4831c
mov [edi+0x1c],eax
test esi,esi
jz 0x585ac
mov eax,esi
call dword 0x57b90
mov edx,ebx
call dword 0x13ed8
test eax,eax
jnl 0x5859b
mov eax,esi
call dword 0x57b90
mov edx,ebx
call dword 0x13d24
mov edx,esi
mov eax,ebx
call dword 0x1a670
mov [ebx+0x340],esi
jmp short 0x585c0
mov eax,[edi+0x1c]
mov edx,[dword 0x46dc9c]
cmp eax,[edx+0x30]
jz 0x585c0
mov [ebx+0x344],eax
and dword [edi+0x4],0xbffcffff
mov dword [edi+0x24],0x8
test byte [ebx+0x1c],0x10
jz 0x585e6
cmp dword [ebx+0x30],byte +0x0
jnz 0x585e6
or dword [edi+0x4],0xcf0000
jmp dword 0x58754
test byte [ebx+0x1c],0x10
jz 0x585f2
cmp dword [ebx+0x30],byte +0x0
jnz 0x5860c
movzx eax,byte [ebx+0x278]
dec eax
sub al,0x2
jnc 0x5860c
mov dword [edi+0xc],0x80000000
mov dword [edi+0x10],0x80000000
lea eax,[edi+0x24]
push eax
lea ecx,[edi+0x8]
lea edx,[edi+0x4]
mov eax,ebx
mov si,0xffa9
call dword 0x2dec
movzx eax,byte [ebx+0x271]
cmp byte [ebx+0x277],0x1
jnz 0x5863e
mov edx,eax
test dl,dl
jz 0x5863c
sub dl,0x3
jnz 0x5863e
mov al,0x2
mov edx,eax
sub dl,0x2
jz 0x5864a
sub dl,0x3
jnz 0x58675
test byte [ebx+0x1c],0x10
jz 0x58656
cmp dword [ebx+0x30],byte +0x0
jnz 0x58675
movzx edx,byte [ebx+0x278]
sub dl,0x1
jz 0x58667
sub dl,0x2
jnz 0x58675
mov dword [edi+0x14],0x80000000
mov dword [edi+0x18],0x80000000
sub al,0x3
jnc 0x586ce
test byte [ebx+0x1c],0x10
jnz 0x586d5
movzx eax,byte [ebx+0x273]
cmp al,0x1
jnz 0x586c1
mov eax,[0x46dc9c]
call dword 0x608a0
test al,al
jz 0x586a9
movzx eax,word [ebx+0x54]
and ax,0x8000
cmp ax,0x8000
setz al
jmp short 0x586ab
xor eax,eax
test al,al
jz 0x586b8
mov byte [dword 0x4687f0],0x1
jmp short 0x586d5
or dword [edi+0x4],0x20000000
jmp short 0x586d5
cmp al,0x2
jnz 0x586d5
or dword [edi+0x4],0x1000000
jmp short 0x586d5
mov byte [ebx+0x273],0x0
test byte [ebx+0x1d],0x2
jz 0x586e2
and dword [edi+0x4],0xff3fffff
cmp byte [ebx+0x277],0x1
jnz 0x586f3
mov eax,0x406ed0
mov [edi+0x28],eax
lea ecx,[edi+0x8]
lea edx,[edi+0x4]
mov eax,ebx
mov si,0xffaa
call dword 0x2dec
mov eax,[0x46dc9c]
call dword 0x608a0
test al,al
jz 0x58754
movzx eax,word [ebx+0x54]
and ax,0x8000
cmp ax,0x8000
jnz 0x58724
mov al,0x1
jmp short 0x58749
test byte [ebx+0x1c],0x10
jnz 0x58730
test byte [ebx+0x55],0x20
jz 0x58743
cmp byte [ebx+0x277],0x1
jz 0x58743
mov eax,[0x46dc9c]
cmp ebx,[eax+0x44]
jz 0x58747
xor eax,eax
jmp short 0x58749
mov al,0x1
test al,al
jz 0x58754
or dword [edi+0x8],0x40000
pop ebp
pop edi
pop esi
pop ebx
ret
lea eax,[eax+0x0]
push ebx
push esi
push edi
add esp,byte -0x8
mov ebx,eax
mov eax,ebx
call dword 0x54b2c
mov eax,[0x468c68]
cmp byte [eax],0x0
jz 0x587b2
cmp byte [ebx+0x271],0x3
jz 0x5879c
mov eax,ebx
call dword 0x5931c
push eax
push byte +0x1
push dword 0x80
mov eax,ebx
call dword 0x4831c
push eax
call dword 0x6278
jmp short 0x587b2
push byte +0x0
push byte +0x1
push dword 0x80
mov eax,ebx
call dword 0x4831c
push eax
call dword 0x6278
test byte [ebx+0x1c],0x10
jnz dword 0x5888f
movzx eax,byte [ebx+0x277]
sub al,0x2
jz 0x587d4
dec al
jz dword 0x58876
jmp dword 0x5888f
mov dword [esp+0x4],0xff00
xor eax,eax
mov [esp],eax
mov esi,[ebx+0x2a0]
test esi,esi
jz 0x587f5
mov eax,esi
call dword 0x35874
mov [esp],eax
push dword 0x56330001
push byte +0x0
push byte +0x0
mov eax,ebx
call dword 0x3fc04
push eax
mov eax,ebx
call dword 0x3fc48
push eax
mov eax,ebx
call dword 0x4831c
push eax
push byte +0x0
mov eax,[0x46b7f4]
push eax
lea eax,[esp+0x20]
push eax
mov edx,0x459944
xor ecx,ecx
mov eax,0x200
call dword 0x63a8
mov [ebx+0x29c],eax
push ebx
push dword 0x457c58
call dword 0x1b65c
mov [ebx+0x2c0],eax
push byte -0x4
mov eax,[ebx+0x29c]
push eax
call dword 0x60f8
mov [ebx+0x2bc],eax
mov eax,[ebx+0x2c0]
push eax
push byte -0x4
mov eax,[ebx+0x29c]
push eax
call dword 0x6308
jmp short 0x5888f
push byte +0x13
push byte +0x0
push byte +0x0
push byte +0x0
push byte +0x0
push byte -0x1
mov eax,ebx
call dword 0x4831c
push eax
call dword 0x6320
mov eax,[ebx+0x338]
test eax,eax
jz 0x588c5
mov edi,[eax+0x8]
dec edi
test edi,edi
jl 0x588ba
inc edi
xor esi,esi
mov edx,esi
mov eax,[ebx+0x338]
call dword 0x13e7c
call dword 0x44e3c
inc esi
dec edi
jnz 0x588a4
mov eax,[ebx+0x338]
mov edx,[eax]
call dword [edx+0x8]
mov eax,[ebx+0x33c]
call dword 0x49d8
mov edi,eax
test edi,edi
jl 0x58903
inc edi
xor esi,esi
mov eax,[ebx+0x1b4]
push eax
mov eax,[ebx+0x33c]
mov eax,[eax+esi*8]
push eax
push dword 0xb049
mov eax,[ebx+0x33c]
mov eax,[eax+esi*8+0x4]
push eax
call dword 0x6278
inc esi
dec edi
jnz 0x588d9
push byte +0x0
lea eax,[ebx+0x33c]
mov ecx,0x1
mov edx,[dword 0x452c50]
call dword 0x4b8c
add esp,byte +0x4
test byte [ebx+0x1c],0x1
jnz 0x5893d
mov eax,ebx
call dword 0x603d0
call dword 0x606bc
test al,al
jz 0x5893d
xor edx,edx
mov eax,ebx
call dword 0x60484
pop ecx
pop edx
pop edi
pop esi
pop ebx
ret
add [ebp+0x44],cl
dec ecx
inc ebx
dec esp
dec ecx
inc ebp
dec esi
push esp
add [eax],al
add [ebp-0x75],dl
in al,dx
add esp,0xffffff4c
push ebx
push esi
push edi
xor ecx,ecx
mov [ebp-0xb4],ecx
mov ebx,eax
xor eax,eax
push ebp
push dword 0x459a79
push dword [fs:eax]
mov [fs:eax],esp
cmp byte [ebx+0x277],0x1
jnz dword 0x58a2c
test byte [ebx+0x1c],0x10
jnz dword 0x58a2c
mov eax,[0x46dc9c]
mov eax,[eax+0x44]
test eax,eax
jz 0x589a0
cmp dword [eax+0x29c],byte +0x0
jnz 0x589c7
lea edx,[ebp-0xb4]
mov eax,[0x468dd0]
call dword 0x5750
mov ecx,[ebp-0xb4]
mov dl,0x1
mov eax,[0x4128ec]
call dword 0xb450
call dword 0x3464
lea eax,[edx+0x4c]
mov [ebp-0x24],eax
mov eax,[edx]
mov [ebp-0x20],eax
mov eax,[0x46b7f4]
mov [ebp-0x1c],eax
mov eax,[edx+0xc]
mov [ebp-0x18],eax
mov eax,[edx+0x10]
mov [ebp-0x14],eax
mov eax,[edx+0x14]
mov [ebp-0x10],eax
mov eax,[edx+0x18]
mov [ebp-0xc],eax
mov eax,[edx+0x4]
mov [ebp-0x8],eax
mov eax,[edx+0x20]
mov [ebp-0x4],eax
lea eax,[ebp-0x24]
push eax
push byte +0x0
push dword 0x220
mov eax,[0x46dc9c]
mov eax,[eax+0x44]
mov eax,[eax+0x29c]
push eax
call dword 0x6278
mov [ebx+0x1b4],eax
or byte [ebx+0x358],0x10
jmp short 0x58a59
mov esi,edx
lea edi,[ebp-0xb0]
mov ecx,0x23
rep movsd
and dword [ebp-0xa8],0xfff7ffff

lea edx,[ebp-0xb0]
mov eax,ebx
call dword 0x4473c
and byte [ebx+0x358],0xef
mov eax,ebx
call dword 0x5b668
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x459a80
lea eax,[ebp-0xb4]
call dword 0x3a1c
ret
jmp dword 0x3384
jmp short 0x58a6d
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret
nop
push ebp
mov ebp,esp
push ebx
push esi
mov esi,[ebp+0xc]
mov ebx,[ebp+0x8]
cmp ebx,[esi]
jz 0x58ac0
mov eax,ebx
call dword 0x3cce8
test eax,eax
jnz 0x58ac0
push byte +0x4
push ebx
call dword 0x60e8
cmp eax,[esi]
jnz 0x58ac0
push byte +0x0
movzx eax,byte [esi+0x4]
push eax
push dword 0xb04a
push ebx
call dword 0x6278
or eax,byte -0x1
pop esi
pop ebx
pop ebp
ret 0x8
lea eax,[eax+0x0]
push ebp
mov ebp,esp
add esp,byte -0x18
mov [ebp-0x4],eax
mov eax,[ebp-0x4]
cmp dword [eax+0x1b4],byte +0x0
jz dword 0x58bf2
mov eax,[ebp-0x4]
cmp dword [eax+0x32c],byte +0x0
jz dword 0x58bc5
mov eax,[ebp-0x4]
call dword 0x57bb8
mov [ebp-0x14],eax
mov eax,[ebp-0x4]
mov eax,[eax+0x32c]
mov eax,[eax+0x8]
dec eax
test eax,eax
jl dword 0x58bc5
inc eax
mov [ebp-0x18],eax
mov dword [ebp-0x8],0x0
mov eax,[ebp-0x4]
test byte [eax+0x55],0x20
jz 0x58b41
mov eax,[ebp-0x4]
mov eax,[eax+0x32c]
mov edx,[ebp-0x8]
call dword 0x13e7c
mov dl,0x1
call dword 0x49804
xor eax,eax
push ebp
push dword 0x459bb2
push dword [fs:eax]
mov [fs:eax],esp
mov eax,[ebp-0x4]
mov eax,[eax+0x32c]
mov edx,[ebp-0x8]
call dword 0x13e7c
mov edx,eax
mov eax,[ebp-0x14]
call dword 0x13d24
mov eax,[ebp-0x4]
mov eax,[eax+0x32c]
mov edx,[ebp-0x8]
call dword 0x13e7c
mov edx,[eax]
call dword [edx+0xb0]
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x459bb9
mov eax,[ebp-0x4]
test byte [eax+0x55],0x20
jz 0x58bb1
mov eax,[ebp-0x4]
mov eax,[eax+0x32c]
mov edx,[ebp-0x8]
call dword 0x13e7c
xor edx,edx
call dword 0x49804
ret
jmp dword 0x3384
jmp short 0x58b90
inc dword [ebp-0x8]
dec dword [ebp-0x18]
jnz dword 0x58b20
mov eax,[ebp-0x4]
mov eax,[eax+0x1b4]
mov [ebp-0x10],eax
mov eax,[ebp-0x4]
test byte [eax+0x55],0x20
setnz al
mov [ebp-0xc],al
lea eax,[ebp-0x10]
push eax
push dword 0x459a88
call dword 0x5af8
push eax
call dword 0x5f70
mov eax,[ebp-0x4]
call dword 0x44bb4
mov esp,ebp
pop ebp
ret
mov eax,eax
push ebx
mov ebx,eax
test byte [ebx+0x358],0x10
jz 0x58c31
push byte +0x0
mov eax,ebx
call dword 0x4831c
push eax
push dword 0x221
mov eax,[0x46dc9c]
mov eax,[eax+0x44]
mov eax,[eax+0x29c]
push eax
call dword 0x6278
jmp short 0x58c38
mov eax,ebx
call dword 0x449b8
xor eax,eax
mov [ebx+0x29c],eax
pop ebx
ret
mov eax,eax
push ebx
push esi
mov esi,edx
mov ebx,eax
cmp dword [ebx+0x29c],byte +0x0
jz 0x58c9a
cmp dword [esi],byte +0x5
jnz 0x58c75
mov eax,[esi+0x8]
push eax
mov eax,[esi+0x4]
push eax
mov eax,[esi]
push eax
mov eax,ebx
call dword 0x4831c
push eax
call dword 0x5ed8
mov [esi+0xc],eax
jmp short 0x58ca3
mov eax,[esi+0x8]
push eax
mov eax,[esi+0x4]
push eax
mov eax,[esi]
push eax
mov eax,[ebx+0x29c]
push eax
mov eax,ebx
call dword 0x4831c
push eax
call dword 0x5ec8
mov [esi+0xc],eax
pop esi
pop ebx
ret
mov edx,esi
mov eax,ebx
call dword 0x4593c
pop esi
pop ebx
ret
mov eax,eax
push ebp
mov ebp,esp
push byte +0x0
push ebx
push esi
push edi
mov edi,edx
mov ebx,eax
xor eax,eax
push ebp
push dword 0x459d58
push dword [fs:eax]
mov [fs:eax],esp
cmp edi,[ebx+0x268]
jz 0x58d42
test edi,edi
jz 0x58d1b
test byte [ebx+0x1c],0x10
jnz 0x58d1b
cmp ebx,edi
jz 0x58cfa
mov dl,0x1
mov eax,edi
call dword 0x53df4
cmp ebx,eax
jnz 0x58cfa
test byte [ebx+0x1c],0x1
jnz 0x58d1b
mov eax,edi
mov si,0xffb6
call dword 0x2dec
test al,al
jnz 0x58d1b
lea edx,[ebp-0x4]
mov eax,[0x468df8]
call dword 0x5750
mov ecx,[ebp-0x4]
mov dl,0x1
mov eax,[0x4128ec]
call dword 0xb450
call dword 0x3464
mov [ebx+0x268],edi
test byte [ebx+0x1c],0x1
jnz 0x58d42
cmp byte [ebx+0x276],0x0
jz 0x58d37
mov eax,ebx
call dword 0x5907c
mov eax,ebx
mov si,0xffaf
call dword 0x2dec
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x459d5f
lea eax,[ebp-0x4]
call dword 0x3a1c
ret
jmp dword 0x3384
jmp short 0x58d4f
pop edi
pop esi
pop ebx
pop ecx
pop ebp
ret
lea eax,[eax+0x0]
push ebx
push esi
push edi
mov ebx,ecx
mov esi,edx
mov edi,eax
test bl,bl
jz 0x58d8f
mov edx,[edi+0x26c]
mov eax,esi
call dword 0x4401c
test al,al
jz 0x58d8f
mov eax,[esi+0x30]
mov [edi+0x26c],eax
mov edx,[edi+0x268]
mov eax,esi
call dword 0x4401c
test al,al
jz 0x58da9
xor edx,edx
mov eax,edi
call dword 0x58ca8
pop edi
pop esi
pop ebx
ret
lea eax,[eax+0x0]
push ebx
push esi
mov esi,eax
movzx ebx,byte [esi+0x276]
mov eax,esi
call dword 0x58ca8
test bl,bl
jnz 0x58dd0
mov eax,esi
mov edx,[eax]
call dword [edx+0xd4]
pop esi
pop ebx
ret
nop
push ebp
mov ebp,esp
add esp,byte -0x8
push ebx
push esi
push edi
mov [ebp-0x4],edx
mov edi,eax
mov byte [ebp-0x5],0x0
inc dword [dword 0x46877c]
cmp dword [edi+0x298],byte +0x0
jnz 0x58e0d
cmp edi,[ebp-0x4]
jz 0x58e05
mov eax,[ebp-0x4]
mov [edi+0x268],eax
jmp short 0x58e0d
xor eax,eax
mov [edi+0x268],eax
mov eax,[0x46dca0]
mov edx,[ebp-0x4]
mov [eax+0x64],edx
mov eax,[0x46dca0]
mov [eax+0x68],edi
mov eax,[0x46dca0]
mov eax,[eax+0x50]
mov edx,edi
call dword 0x14018
mov eax,[0x46dca0]
mov eax,[eax+0x50]
mov ecx,edi
xor edx,edx
call dword 0x13ef8
mov eax,edi
mov edx,[dword 0x45338c]
call dword 0x2d7c
test al,al
jz 0x58e7b
mov eax,[0x46dca0]
mov [eax+0x6c],edi
mov eax,[0x46dca0]
mov eax,[eax+0x4c]
mov edx,edi
call dword 0x14018
mov eax,[0x46dca0]
mov eax,[eax+0x4c]
mov ecx,edi
xor edx,edx
call dword 0x13ef8
jmp short 0x58e85
mov eax,[0x46dca0]
xor edx,edx
mov [eax+0x6c],edx
mov eax,[ebp-0x4]
test byte [eax+0x54],0x20
jnz dword 0x59066
mov eax,[ebp-0x4]
movzx eax,word [eax+0x54]
or ax,[dword 0x45a074]
mov edx,[ebp-0x4]
mov [edx+0x54],ax
xor edx,edx
push ebp
push dword 0x45a051
push dword [fs:edx]
mov [fs:edx],esp
mov eax,[0x46dca0]
mov eax,[eax+0x78]
cmp edi,eax
jz 0x58f15
test eax,eax
jz 0x58eef
call dword 0x4831c
mov ebx,eax
mov eax,[0x46dca0]
xor edx,edx
mov [eax+0x78],edx
mov dx,0xb001
mov eax,ebx
call dword 0x53b64
test al,al
jnz 0x58eef
call dword 0x3510
jmp dword 0x59066
mov eax,[0x46dca0]
mov [eax+0x78],edi
mov eax,edi
call dword 0x4831c
mov dx,0xb000
call dword 0x53b64
test al,al
jnz 0x58f15
call dword 0x3510
jmp dword 0x59066
cmp dword [edi+0x26c],byte +0x0
jnz 0x58f24
mov [edi+0x26c],edi
mov eax,[edi+0x26c]
cmp eax,[ebp-0x4]
jz dword 0x5902c
jmp short 0x58f6a
mov eax,[edi+0x26c]
call dword 0x4831c
mov ebx,eax
mov eax,[edi+0x26c]
mov eax,[eax+0x30]
mov [edi+0x26c],eax
mov dx,0xb01b
mov eax,ebx
call dword 0x53b64
test al,al
jnz 0x58f6a
call dword 0x3510
jmp dword 0x59066
mov esi,[edi+0x26c]
test esi,esi
jz 0x58fba
mov eax,esi
mov edx,[ebp-0x4]
call dword 0x4401c
test al,al
jz 0x58f35
jmp short 0x58fba
mov esi,[ebp-0x4]
jmp short 0x58f8b
mov esi,ebx
mov ebx,[esi+0x30]
cmp ebx,[edi+0x26c]
jnz 0x58f89
mov [edi+0x26c],esi
mov eax,esi
call dword 0x4831c
mov dx,0xb01a
call dword 0x53b64
test al,al
jnz 0x58fba
call dword 0x3510
jmp dword 0x59066
mov eax,[edi+0x26c]
cmp eax,[ebp-0x4]
jnz 0x58f84
mov eax,[ebp-0x4]
mov esi,[eax+0x30]
mov eax,[ebp-0x4]
test byte [eax+0x1c],0x10
jnz 0x58ffd
test esi,esi
jz 0x58ffd
mov eax,esi
mov edx,[dword 0x45291c]
call dword 0x2d7c
test al,al
jz 0x58ff6
mov edx,[ebp-0x4]
mov eax,esi
mov ecx,[eax]
call dword [ecx+0xdc]
mov esi,[esi+0x30]
test esi,esi
jnz 0x58fd8
mov eax,[ebp-0x4]
push eax
xor ecx,ecx
mov edx,0xb007
mov eax,edi
call dword 0x41588
mov eax,[edi+0x2c4]
test eax,eax
jz 0x5902c
cmp eax,[ebp-0x4]
jz 0x5902c
push byte +0x0
xor ecx,ecx
mov edx,0xb02a
call dword 0x41588
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x45a058
mov eax,[ebp-0x4]
movzx edx,word [dword 0x45a074]
not edx
and dx,[eax+0x54]
mov eax,[ebp-0x4]
mov [eax+0x54],dx
ret
jmp dword 0x3384
jmp short 0x59039
mov eax,[0x46dca0]
call dword 0x5c060
mov byte [ebp-0x5],0x1
movzx eax,byte [ebp-0x5]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
ret
add [eax],al
add [eax],ah
add [eax],al
add bl,al
lea eax,[eax+0x0]
push ebx
push esi
mov ebx,eax
mov eax,[ebx+0x268]
test eax,eax
jz 0x59097
cmp dword [ebx+0x298],byte +0x0
jnz 0x59097
mov esi,eax
jmp short 0x590c1
cmp dword [ebx+0x30],byte +0x0
jz 0x590bf
cmp dword [ebx+0x298],byte +0x0
jnz 0x590bf
push byte +0x1
push byte +0x0
mov cl,0x1
xor edx,edx
mov eax,ebx
call dword 0x487e0
mov esi,eax
test esi,esi
jnz 0x590c1
mov esi,ebx
jmp short 0x590c1
mov esi,ebx
mov eax,esi
call dword 0x4831c
push eax
call dword 0x62b0
mov eax,esi
call dword 0x4831c
mov ebx,eax
call dword 0x6000
cmp ebx,eax
jnz 0x590f0
push byte +0x0
xor ecx,ecx
mov edx,0xb029
mov eax,esi
call dword 0x41588
pop esi
pop ebx
ret
nop
push ebx
push esi
mov ebx,edx
mov esi,eax
mov [esi+0x276],bl
mov eax,[esi+0x2c4]
test eax,eax
jz 0x59119
push byte +0x0
movzx ecx,bl
mov edx,0xb02b
call dword 0x41588
test bl,bl
jz 0x59154
cmp dword [esi+0x268],byte +0x0
jnz 0x59144
test byte [esi+0x1c],0x10
jnz 0x59144
push byte +0x1
push byte +0x0
mov cl,0x1
xor edx,edx
mov eax,esi
call dword 0x487e0
mov edx,eax
mov eax,esi
call dword 0x58ca8
mov dl,0x1
mov eax,esi
call dword 0x591a8
mov eax,esi
call dword 0x5907c
pop esi
pop ebx
ret
nop
push ebx
push esi
mov esi,edx
mov ebx,eax
cmp byte [ebx+0x276],0x0
jz 0x59183
cmp dword [ebx+0x268],byte +0x0
jz 0x59183
push esi
xor ecx,ecx
mov edx,0xb004
mov eax,[ebx+0x268]
call dword 0x41588
cmp byte [ebx+0x277],0x2
jnz 0x591a5
mov eax,ebx
call dword 0x57534
test eax,eax
jz 0x591a5
mov eax,ebx
call dword 0x57534
mov edx,esi
call dword 0x59158
pop esi
pop ebx
ret
push esi
test byte [eax+0x358],0x8
jnz dword 0x5924c
mov ecx,[dword 0x46dc9c]
cmp dword [ecx+0x44],byte +0x0
jz dword 0x5924c
mov ecx,[dword 0x46dc9c]
mov ecx,[ecx+0x44]
cmp dword [ecx+0x290],byte +0x0
jz 0x5924c
mov ecx,[dword 0x46dc9c]
cmp eax,[ecx+0x44]
jz 0x5924c
cmp byte [eax+0x277],0x1
jz 0x591fe
mov ecx,[dword 0x46dc9c]
mov ecx,[ecx+0x44]
cmp byte [ecx+0x277],0x2
jz 0x5924c
xor esi,esi
test byte [eax+0x1c],0x10
jnz 0x5922a
cmp dword [eax+0x290],byte +0x0
jz 0x5922a
mov ecx,[eax+0x290]
cmp byte [ecx+0x5c],0x0
jnz 0x59224
cmp byte [eax+0x277],0x1
jnz 0x5922a
mov esi,[eax+0x290]
mov eax,[0x46dc9c]
mov eax,[eax+0x44]
mov eax,[eax+0x290]
test dl,dl
jz 0x59245
mov edx,esi
call dword 0x39718
jmp short 0x5924c
mov edx,esi
call dword 0x39734
pop esi
ret
mov eax,eax
push ebx
push esi
push edi
push ebp
mov edi,ecx
mov ebx,edx
mov ebp,eax
test ebx,ebx
jz 0x59294
jmp short 0x59262
mov ebx,esi
mov esi,[ebx+0x30]
test esi,esi
jz 0x5927a
mov eax,ebx
mov edx,[dword 0x453010]
call dword 0x2d7c
test al,al
jz 0x59260
test ebx,ebx
jz 0x59294
cmp edi,ebx
jz 0x59294
push byte +0x0
push byte +0x0
push ebp
mov eax,ebx
call dword 0x4831c
push eax
call dword 0x6278
pop ebp
pop edi
pop esi
pop ebx
ret
lea eax,[eax+0x0]
push ebx
mov ebx,eax
mov ecx,ebx
mov edx,[ebx+0x268]
mov eax,0xb000
call dword 0x59250
cmp word [ebx+0x2d2],byte +0x0
jz 0x592c9
mov edx,ebx
mov eax,[ebx+0x2d4]
call dword [ebx+0x2d0]
pop ebx
ret
nop
push ebx
mov ebx,eax
mov ecx,ebx
mov edx,[ebx+0x268]
mov eax,0xb001
call dword 0x59250
cmp word [ebx+0x2ea],byte +0x0
jz 0x592f9
mov edx,ebx
mov eax,[ebx+0x2ec]
call dword [ebx+0x2e8]
pop ebx
ret
nop
push ebx
cmp word [eax+0x302],byte +0x0
jz 0x59317
mov ebx,eax
mov edx,eax
mov eax,[ebx+0x304]
call dword [ebx+0x300]
pop ebx
ret
lea eax,[eax+0x0]
mov eax,[eax+0x288]
call dword 0x263cc
test eax,eax
jnz 0x59335
mov eax,[0x46dc9c]
call dword 0x5e1d0
ret
mov eax,eax
push ebp
mov ebp,esp
add esp,byte -0x1c
push ebx
push esi
mov [ebp-0x8],edx
mov [ebp-0x4],eax
mov eax,[ebp-0x4]
mov eax,[eax+0x280]
call dword 0x2086c
xor edx,edx
push ebp
push dword 0x45a533
push dword [fs:edx]
mov [fs:edx],esp
mov eax,[ebp-0x4]
mov eax,[eax+0x280]
mov edx,[ebp-0x8]
call dword 0x20bb8
xor edx,edx
push ebp
push dword 0x45a510
push dword [fs:edx]
mov [fs:edx],esp
mov eax,[ebp-0x8]
push eax
call dword 0x5dc8
mov [ebp-0xc],eax
xor edx,edx
push ebp
push dword 0x45a4c3
push dword [fs:edx]
mov [fs:edx],esp
mov eax,[ebp-0x4]
call dword 0x603d0
mov ebx,eax
mov eax,ebx
call dword 0x606bc
test al,al
jnz 0x593ca
mov eax,[ebp-0x4]
cmp dword [eax+0x298],byte +0x0
jz dword 0x594a8
cmp byte [ebx+0x8],0x0
jz dword 0x594a8
lea edx,[ebp-0x1c]
mov eax,[ebp-0x4]
mov ecx,[eax]
call dword [ecx+0x44]
cmp byte [ebx+0x28],0x0
jnz 0x593ec
mov eax,[ebp-0x4]
mov eax,[eax+0x2a4]
movzx eax,byte [eax+0x8]
xor al,0x1
jmp short 0x593ee
xor eax,eax
test al,al
jz 0x59413
mov eax,[ebp-0x10]
sub eax,[ebx+0x18]
push eax
mov eax,[ebp-0x14]
sub eax,[ebx+0x14]
push eax
mov eax,[ebx+0x10]
push eax
mov eax,[ebx+0xc]
push eax
mov eax,[ebp-0x8]
push eax
call dword 0x5cc8
jmp short 0x59420
mov eax,[ebp-0x4]
mov eax,[eax+0x2a4]
mov byte [eax+0x8],0x0
mov eax,[ebp-0x4]
cmp dword [eax+0x298],byte +0x0
jnz 0x5944e
push byte +0x4
call dword 0x5d48
push eax
lea eax,[ebp-0x1c]
push eax
mov eax,[ebp-0x4]
mov eax,[eax+0x280]
call dword 0x20b30
push eax
call dword 0x5f88
jmp short 0x594a8
mov eax,[ebp-0x4]
mov eax,[eax+0x280]
mov eax,[eax+0x14]
mov edx,0xff000002
call dword 0x20454
mov eax,[ebp-0x4]
mov eax,[eax+0x280]
mov eax,[eax+0x14]
mov dl,0x5
call dword 0x20570
mov eax,[ebp-0x4]
mov eax,[eax+0x70]
call dword 0x1f6cc
push eax
mov eax,[ebp-0x4]
mov eax,[eax+0x280]
call dword 0x20b30
push eax
call dword 0x5de0
lea edx,[ebp-0x1c]
mov eax,[ebp-0x4]
mov eax,[eax+0x280]
call dword 0x207f8
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x45a4ca
mov eax,[ebp-0xc]
push eax
mov eax,[ebp-0x8]
push eax
call dword 0x5dc0
ret
jmp dword 0x3384
jmp short 0x594b5
mov eax,[ebp-0x4]
cmp dword [eax+0x298],byte +0x0
jz 0x594e6
mov eax,[ebp-0x4]
mov eax,[eax+0x298]
mov edx,[eax]
call dword [edx+0x28]
jmp short 0x594f2
mov eax,[ebp-0x4]
mov si,0xffa6
call dword 0x2dec
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x45a517
mov eax,[ebp-0x4]
mov eax,[eax+0x280]
xor edx,edx
call dword 0x20bb8
ret
jmp dword 0x3384
jmp short 0x594ff
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x45a53a
mov eax,[ebp-0x4]
mov eax,[eax+0x280]
call dword 0x20a24
ret
jmp dword 0x3384
jmp short 0x59524
pop esi
pop ebx
mov esp,ebp
pop ebp
ret
push ebx
push esi
push edi
push ebp
add esp,byte -0x10
mov [esp+0x4],dl
mov [esp],eax
xor ebx,ebx
mov eax,[esp]
call dword 0x57534
mov [esp+0xc],eax
cmp dword [esp+0xc],byte +0x0
jz 0x59577
movzx edx,byte [esp+0x4]
mov eax,[esp+0xc]
mov si,0xffd0
call dword 0x2dec
mov ebx,eax
mov eax,[esp]
call dword 0x57568
mov ebp,eax
dec ebp
test ebp,ebp
jl 0x595c2
inc ebp
mov dword [esp+0x8],0x0
test [esp+0x4],bl
jnz 0x595d7
mov edx,[esp+0x8]
mov eax,[esp]
call dword 0x575b4
mov edi,eax
cmp edi,[esp+0xc]
jz 0x595bb
movzx edx,byte [esp+0x4]
mov eax,edi
mov si,0xffd0
call dword 0x2dec
or bl,al
inc dword [esp+0x8]
dec ebp
jnz 0x5958f
test [esp+0x4],bl
jnz 0x595d7
movzx edx,byte [esp+0x4]
mov eax,[esp]
call dword 0x475b4
mov ebx,eax
mov eax,ebx
add esp,byte +0x10
pop ebp
pop edi
pop esi
pop ebx
ret
lea eax,[eax+0x0]
push ebx
push esi
add esp,byte -0x40
mov esi,edx
mov ebx,eax
mov eax,ebx
call dword 0x4831c
call dword 0x53800
test eax,eax
jnz 0x59628
movzx eax,word [dword 0x45a660]
or ax,[ebx+0x54]
mov [ebx+0x54],ax
mov edx,esi
mov eax,ebx
call dword 0x461f8
movzx eax,word [dword 0x45a660]
not eax
and ax,[ebx+0x54]
mov [ebx+0x54],ax
jmp short 0x59658
push esp
mov eax,ebx
call dword 0x4831c
push eax
call dword 0x5e68
mov esi,eax
mov eax,ebx
call dword 0x5931c
push eax
push byte +0x0
push byte +0x0
push esi
call dword 0x5f28
push esp
mov eax,ebx
call dword 0x4831c
push eax
call dword 0x5f60
add esp,byte +0x40
pop esi
pop ebx
ret
add [eax],al
add [ecx],al
add [eax],al
push ebx
mov ebx,eax
mov eax,ebx
call dword 0x492b8
cmp dword [ebx+0x298],byte +0x0
jz 0x59688
cmp dword [ebx+0x30],byte +0x0
jz 0x59688
mov eax,[ebx+0x298]
mov edx,[eax]
call dword [edx+0x2c]
pop ebx
ret
mov eax,eax
push ebx
push esi
add esp,byte -0x10
mov esi,edx
mov ebx,eax
cmp byte [ebx+0x277],0x1
jnz 0x596e5
cmp byte [ebx+0x277],0x1
jnz 0x596dc
test byte [ebx+0x1c],0x10
jnz 0x596dc
mov eax,[0x46dc9c]
mov eax,[eax+0x44]
mov eax,[eax+0x1a4]
call dword 0x20488
push eax
lea edx,[esp+0x4]
mov eax,ebx
mov ecx,[eax]
call dword [ecx+0x44]
lea eax,[esp+0x4]
push eax
mov eax,[esi+0x4]
push eax
call dword 0x5f88
jmp short 0x596e5
mov edx,esi
mov eax,ebx
mov ecx,[eax]
call dword [ecx-0x10]
add esp,byte +0x10
pop esi
pop ebx
ret
nop
push ebx
push esi
mov esi,edx
mov ebx,eax
mov eax,ebx
call dword 0x4831c
call dword 0x53800
test eax,eax
jnz 0x5970e
mov edx,esi
mov eax,ebx
call dword 0x465bc
pop esi
pop ebx
ret
mov dword [esi],0x27
mov edx,esi
mov eax,ebx
mov ecx,[eax]
call dword [ecx-0x10]
pop esi
pop ebx
ret
push ebx
push esi
mov esi,edx
mov ebx,eax
mov eax,ebx
call dword 0x5931c
mov [esi+0xc],eax
pop esi
pop ebx
ret
nop
push ebp
mov ebp,esp
push ebx
mov eax,[ebp+0x8]
mov eax,[eax-0x4]
cmp byte [eax+0x271],0x0
jz dword 0x5982a
mov eax,[ebp+0x8]
mov eax,[eax-0x4]
test byte [eax+0x270],0x1
jz dword 0x5982a
mov eax,[ebp+0x8]
mov eax,[eax-0x4]
cmp byte [eax+0x277],0x1
jz dword 0x5982a
push byte +0x0
mov eax,[ebp+0x8]
mov eax,[eax-0x4]
call dword 0x4831c
push eax
call dword 0x60d0
mov ebx,eax
mov eax,[ebp+0x8]
mov eax,[eax-0x4]
cmp byte [eax+0x271],0x3
jnz 0x597f2
push byte +0x0
push dword 0xf130
push ebx
call dword 0x5ee0
push dword 0x400
push byte +0x7
push ebx
call dword 0x5ee0
push dword 0x400
push byte +0x5
push ebx
call dword 0x5ee0
push byte +0x0
push dword 0xf030
push ebx
call dword 0x5ee0
push byte +0x0
push dword 0xf020
push ebx
call dword 0x5ee0
push byte +0x0
push dword 0xf000
push ebx
call dword 0x5ee0
push byte +0x0
push dword 0xf120
push ebx
call dword 0x5ee0
jmp short 0x5982a
mov eax,[ebp+0x8]
mov eax,[eax-0x4]
test byte [eax+0x270],0x2
jnz 0x5980e
push byte +0x1
push dword 0xf020
push ebx
call dword 0x5f48
mov eax,[ebp+0x8]
mov eax,[eax-0x4]
test byte [eax+0x270],0x4
jnz 0x5982a
push byte +0x1
push dword 0xf030
push ebx
call dword 0x5f48
pop ebx
pop ebp
ret
lea eax,[eax+0x0]
push ebp
mov ebp,esp
push ecx
mov [ebp-0x4],eax
mov eax,[ebp-0x4]
mov ecx,[eax]
call dword [ecx-0x10]
mov eax,[ebp-0x4]
mov edx,[eax+0x290]
mov eax,[ebp-0x4]
call dword 0x57954
mov eax,[ebp-0x4]
test byte [eax+0x1c],0x10
jnz 0x59860
push ebp
call dword 0x59734
pop ecx
pop ecx
pop ebp
ret
nop
test byte [eax+0x1c],0x10
jz 0x59876
cmp dword [eax+0x30],byte +0x0
jz 0x59876
mov ecx,[eax]
call dword [ecx-0x10]
ret
call dword 0x47590
ret
push ebx
push esi
mov esi,edx
mov ebx,eax
cmp dword [esi+0x4],byte +0x2
jnz 0x598fc
cmp byte [ebx+0x8f],0x1
jnz 0x598fc
test byte [ebx+0x1c],0x10
jnz 0x598fc
mov eax,ebx
call dword 0x4831c
call dword 0x53800
test eax,eax
jnz 0x598fc
push byte +0x7
push byte +0x0
push byte +0x0
push byte +0x0
push byte +0x0
push byte +0x0
mov eax,ebx
call dword 0x4831c
push eax
call dword 0x6320
mov eax,[esi+0x8]
push eax
mov eax,[esi+0x4]
push eax
push dword 0xa2
mov eax,ebx
call dword 0x4831c
push eax
call dword 0x6210
cmp byte [ebx+0x276],0x0
jz 0x59905
mov eax,ebx
mov edx,[eax]
call dword [edx+0x54]
mov edx,eax
xor dl,0x1
or ecx,byte -0x1
mov eax,ebx
call dword 0x40a0c
pop esi
pop ebx
ret
mov edx,esi
mov eax,ebx
call dword 0x41f54
pop esi
pop ebx
ret
push ebx
push esi
push edi
push ebp
add esp,byte -0x10
mov [esp],edx
mov edi,eax
mov eax,edi
call dword 0x57bb8
mov ebp,eax
mov eax,[edi+0x32c]
test eax,eax
jz 0x5997c
mov esi,[eax+0x8]
dec esi
test esi,esi
jl 0x5997c
inc esi
xor ebx,ebx
mov edx,ebx
mov eax,[edi+0x32c]
call dword 0x13e7c
call dword 0x486bc
test al,al
jz 0x59978
mov edx,ebx
mov eax,[edi+0x32c]
call dword 0x13e7c
mov edx,eax
mov eax,ebp
call dword 0x13ed8
test eax,eax
jnl 0x59978
mov edx,ebx
mov eax,[edi+0x32c]
call dword 0x13e7c
mov edx,eax
mov eax,ebp
call dword 0x13d24
inc ebx
dec esi
jnz 0x59932
cmp dword [edi+0x340],byte +0x0
jz 0x599c8
mov eax,[edi+0x340]
call dword 0x57bb8
mov edx,edi
call dword 0x13ed8
test eax,eax
jnl dword 0x59a2f
mov eax,[edi+0x340]
call dword 0x57b90
mov edx,edi
call dword 0x13ed8
inc eax
jng 0x59a2f
mov eax,[edi+0x340]
call dword 0x57bb8
mov edx,edi
call dword 0x13d24
jmp short 0x59a2f
mov eax,edi
mov si,0xffa8
call dword 0x2dec
mov ebx,eax
test ebx,ebx
jz 0x59a27
mov eax,[0x46dc9c]
cmp ebx,[eax+0x30]
jz 0x59a27
mov edx,edi
mov eax,[0x46dc9c]
call dword 0x60074
mov [esp+0x4],eax
mov eax,[edi+0x1b4]
mov [esp+0x8],eax
cmp dword [edi+0x344],byte +0x0
setnz al
mov [esp+0xc],al
mov eax,[0x46dc9c]
mov eax,[eax+0xc8]
push eax
lea eax,[esp+0x8]
push eax
push dword 0xb048
push ebx
call dword 0x6278
xor eax,eax
mov [edi+0x344],eax
mov eax,[0x468c68]
cmp byte [eax],0x0
jz 0x59a4f
push byte +0x0
push byte +0x1
push dword 0x80
mov eax,edi
call dword 0x4831c
push eax
call dword 0x6278
cmp dword [edi+0x290],byte +0x0
jz 0x59a7d
cmp byte [edi+0x277],0x1
jz 0x59a7d
push byte +0x0
mov eax,edi
call dword 0x4831c
push eax
call dword 0x62c0
xor edx,edx
mov eax,[edi+0x290]
call dword 0x390ec
mov edx,[esp]
mov eax,edi
call dword 0x47510
add esp,byte +0x10
pop ebp
pop edi
pop esi
pop ebx
ret
nop
push ebx
push esi
mov esi,edx
mov ebx,eax
cmp dword [esi+0x8],byte +0x0
jnz 0x59ab8
cmp dword [ebx+0x290],byte +0x0
jz 0x59ab8
movzx edx,word [esi+0x4]
mov eax,[ebx+0x290]
call dword 0x388e8
test al,al
jnz 0x59ac1
mov edx,esi
mov eax,ebx
call dword 0x46428
pop esi
pop ebx
ret
mov ecx,[eax+0x290]
test ecx,ecx
jz 0x59ad8
mov edx,[edx+0x4]
mov eax,ecx
call dword 0x38904
ret
lea eax,[eax+0x0]
push ebx
push esi
mov esi,edx
mov ebx,eax
mov eax,[ebx+0x290]
test eax,eax
jz 0x59b05
mov edx,esi
call dword 0x393b8
cmp dword [esi+0xc],byte +0x0
jnz 0x59b0e
mov edx,esi
mov eax,ebx
mov ecx,[eax]
call dword [ecx-0x10]
pop esi
pop ebx
ret
mov edx,esi
mov eax,ebx
mov ecx,[eax]
call dword [ecx-0x10]
pop esi
pop ebx
ret
lea eax,[eax+0x0]
push ebp
mov ebp,esp
push byte +0x0
push ebx
push esi
push edi
mov edi,eax
xor eax,eax
push ebp
push dword 0x45abaf
push dword [fs:eax]
mov [fs:eax],esp
cmp dword [edi+0x290],byte +0x0
jz 0x59b99
xor esi,esi
cmp word [edx+0x6],0xffff
jnz 0x59b46
cmp word [edx+0x4],byte +0x0
jz 0x59b6f
xor ebx,ebx
movzx eax,word [edx+0x4]
test byte [edx+0x6],0x10
jz 0x59b5e
mov bl,0x1
push eax
mov eax,[edx+0x8]
push eax
call dword 0x60b8
mov ecx,ebx
mov edx,eax
mov eax,[edi+0x290]
call dword 0x38848
mov esi,eax
test esi,esi
jz 0x59b8d
lea edx,[ebp-0x4]
mov eax,[esi+0x58]
call dword 0x3cf9c
mov edx,[ebp-0x4]
mov eax,[0x46dc9c]
call dword 0x5f62c
jmp short 0x59b99
xor edx,edx
mov eax,[0x46dc9c]
call dword 0x5f62c
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x45abb6
lea eax,[ebp-0x4]
call dword 0x3a1c
ret
jmp dword 0x3384
jmp short 0x59ba6
pop edi
pop esi
pop ebx
pop ecx
pop ebp
ret
push ebx
push esi
mov esi,edx
mov ebx,eax
push byte -0x10
mov eax,ebx
call dword 0x4831c
push eax
call dword 0x60f8
and eax,0x40000000
cmp eax,0x40000000
jz 0x59be6
cmp byte [ebx+0x277],0x2
jnz 0x59bec
test byte [ebx+0x1c],0x10
jz 0x59bfb
cmp word [esi+0x4],byte +0x0
setnz dl
mov eax,ebx
call dword 0x590f4
pop esi
pop ebx
ret
mov eax,eax
push ebx
mov ebx,eax
test byte [ebx+0x1c],0x10
jnz 0x59c15
test byte [ebx+0x55],0x20
jnz 0x59c15
mov [ebx+0x273],dl
cmp dl,0x1
jz 0x59c21
mov eax,ebx
mov edx,[eax]
call dword [edx+0x5c]
cmp dword [ebx+0x2ac],byte +0x0
jz 0x59c35
mov eax,[ebx+0x2ac]
mov edx,[eax]
call dword [edx+0x10]
pop ebx
ret
nop
call dword 0x5abe8
ret
mov eax,eax
push ebx
push esi
mov esi,edx
mov ebx,eax
mov eax,ebx
mov edx,[eax]
call dword [edx+0xf4]
and eax,byte +0x7f
mov [esi+0xc],eax
pop esi
pop ebx
ret
lea eax,[eax+0x0]
push ebx
push esi
mov ebx,edx
xor edx,edx
mov [ebx+0xc],edx
test byte [eax+0x1c],0x10
jnz 0x59c89
cmp byte [eax+0x277],0x1
jz 0x59c89
cmp dword [eax+0x290],byte +0x0
jz 0x59c89
mov edx,[eax+0x290]
cmp byte [edx+0x5c],0x0
jz 0x59caf
mov esi,[ebx+0x8]
xor edx,edx
call dword 0x59158
movzx ecx,word [esi+0x8]
mov edx,[esi+0x4]
mov eax,0xb017
call dword 0x3cd74
test eax,eax
jz 0x59caf
mov dword [ebx+0xc],0x1
pop esi
pop ebx
ret
mov eax,eax
push ebx
push esi
mov esi,edx
mov ebx,eax
mov eax,[esi+0x4]
and eax,0xfff0
cmp eax,0xf020
jnz 0x59ce1
mov eax,[0x46dc9c]
cmp ebx,[eax+0x44]
jnz 0x59ce1
mov edx,esi
mov eax,[0x46dc9c]
call dword 0x5db28
jmp short 0x59d0e
mov eax,[esi+0x4]
and eax,0xfff0
cmp eax,0xf010
jnz 0x59d05
test byte [ebx+0x1c],0x10
jnz 0x59d05
cmp byte [ebx+0x5b],0x0
jz 0x59d05
cmp byte [ebx+0x273],0x1
jnz 0x59d0e
mov edx,esi
mov eax,ebx
call dword 0x473f0
mov eax,[esi+0x4]
and eax,0xfff0
cmp eax,0xf020
jz 0x59d24
cmp eax,0xf120
jnz 0x59d37
test byte [ebx+0x1c],0x10
jnz 0x59d37
cmp byte [ebx+0x5b],0x0
jz 0x59d37
mov eax,ebx
mov edx,[eax]
call dword [edx+0x5c]
pop esi
pop ebx
ret
mov eax,eax
push ebx
push esi
mov esi,edx
mov ebx,eax
mov eax,[esi+0x8]
dec eax
jz 0x59d52
sub eax,byte +0x2
jz 0x59d98
jmp dword 0x59dd8
mov eax,ebx
call dword 0x4831c
call dword 0x53800
test eax,eax
jz 0x59d6b
mov byte [ebx+0x274],0x2
jmp short 0x59d8c
mov eax,ebx
call dword 0x4831c
push eax
call dword 0x61a0
test eax,eax
jz 0x59d85
mov byte [ebx+0x274],0x3
jmp short 0x59d8c
mov byte [ebx+0x274],0x1
mov edx,esi
mov eax,ebx
mov ecx,[eax]
call dword [ecx-0x10]
pop esi
pop ebx
ret
cmp byte [ebx+0x274],0x0
jz 0x59de1
movzx eax,byte [ebx+0x274]
mov eax,[eax*4+0x4687f0]
push eax
mov eax,ebx
call dword 0x4831c
push eax
call dword 0x6348
mov byte [ebx+0x274],0x0
mov eax,[0x46dc9c]
cmp ebx,[eax+0x44]
jnz 0x59de1
mov byte [dword 0x46dcac],0x0
pop esi
pop ebx
ret
mov edx,esi
mov eax,ebx
mov ecx,[eax]
call dword [ecx-0x10]
pop esi
pop ebx
ret
push ebx
push esi
mov ebx,edx
mov esi,eax
mov edx,ebx
mov eax,esi
mov ecx,[eax]
call dword [ecx-0x10]
cmp byte [esi+0x277],0x1
jnz 0x59e39
mov eax,esi
call dword 0x4831c
cmp eax,[ebx+0x8]
setz al
mov ebx,eax
mov edx,ebx
mov eax,esi
call dword 0x590f4
test bl,bl
jz 0x59e39
mov eax,[0x46dc9c]
mov eax,[eax+0x44]
test byte [eax+0x54],0x4
jz 0x59e39
mov eax,[0x46dc9c]
mov eax,[eax+0x44]
mov dl,0x1
mov si,0xffd0
call dword 0x2dec
pop esi
pop ebx
ret
cmp word [edx+0x8],byte +0x0
jz 0x59e4d
mov eax,[edx+0x4]
push eax
call dword 0x62b0
ret
push byte +0x1
mov ecx,[edx+0x4]
cmp ecx,byte +0x1
sbb ecx,ecx
neg ecx
mov edx,[eax+0x268]
call dword 0x488ec
ret
lea eax,[eax+0x0]
push ebx
push esi
mov esi,edx
mov ebx,eax
xor edx,edx
mov eax,ebx
call dword 0x59158
mov edx,esi
mov eax,ebx
mov ecx,[eax]
call dword [ecx-0x10]
pop esi
pop ebx
ret
nop
push ebp
mov ebp,esp
push ebx
mov ebx,eax
xor eax,eax
test ebx,ebx
jz 0x59ebe
mov eax,[ebp+0x8]
mov eax,[eax-0x4]
mov eax,[eax+0x8]
mov edx,[eax+0x8]
mov cl,0x1
mov eax,ebx
call dword 0x38878
test eax,eax
jnz 0x59ebe
mov eax,[ebp+0x8]
mov eax,[eax-0x4]
mov eax,[eax+0x8]
mov edx,[eax+0xc]
xor ecx,ecx
mov eax,ebx
call dword 0x38878
pop ebx
pop ebp
ret
lea eax,[eax+0x0]
push ebx
push esi
mov esi,eax
xor ebx,ebx
cmp byte [esi+0x158],0x1
jnz 0x59ee0
cmp dword [esi+0x160],byte +0x0
jz 0x59ee0
mov bl,0x1
jmp short 0x59ef4
cmp byte [esi+0x158],0x0
jnz 0x59ef4
cmp dword [esi+0x15c],byte +0x0
jz 0x59ef4
mov bl,0x1
mov eax,ebx
pop esi
pop ebx
ret
lea eax,[eax+0x0]
push ebp
mov ebp,esp
push ebx
mov ebx,eax
cmp byte [ebx+0x158],0x1
jnz 0x59f18
mov byte [edx],0x1
mov eax,[ebx+0x160]
mov [ecx],eax
jmp short 0x59f29
mov byte [edx],0x0
mov eax,[ebp+0x8]
mov edx,[ebx+0x15c]
call dword 0x3a70
pop ebx
pop ebp
ret 0x4
mov eax,eax
push ebp
mov ebp,esp
add esp,byte -0x34
push ebx
push esi
xor ecx,ecx
mov [ebp-0x8],ecx
mov [ebp-0x4],edx
mov esi,eax
xor eax,eax
push ebp
push dword 0x45b09a
push dword [fs:eax]
mov [fs:eax],esp
test byte [esi+0x1c],0x10
jnz dword 0x5a084
mov eax,[ebp-0x4]
mov eax,[eax+0x8]
cmp dword [eax+0x4],byte +0x1
jnz 0x59fce
mov eax,[eax+0xc]
call dword 0x3cce8
mov ebx,eax
jmp short 0x59f75
mov ebx,[ebx+0x30]
test ebx,ebx
jz 0x59f84
mov eax,ebx
call dword 0x59ec4
test al,al
jz 0x59f72
test ebx,ebx
jz dword 0x5a084
lea eax,[ebp-0x8]
push eax
lea ecx,[ebp-0xc]
lea edx,[ebp-0xd]
mov eax,ebx
call dword 0x59efc
lea ecx,[ebp-0x34]
xor edx,edx
xor eax,eax
call dword 0x12a04
lea edx,[ebp-0x34]
lea ecx,[ebp-0x19]
mov eax,ebx
call dword 0x3fd18
movzx eax,word [ebp-0x19]
mov [ebp-0x1d],ax
movzx eax,word [ebp-0x15]
mov [ebp-0x1b],ax
mov eax,[ebp-0x1d]
mov [ebp-0x11],eax
jmp short 0x5a027
mov byte [ebp-0xd],0x1
push ebp
mov eax,[esi+0x290]
call dword 0x59e84
pop ecx
mov [ebp-0xc],eax
cmp dword [ebp-0xc],byte +0x0
jnz 0x59ff8
push ebp
mov eax,[esi+0x80]
call dword 0x59e84
pop ecx
mov [ebp-0xc],eax
lea ecx,[ebp-0x34]
xor edx,edx
xor eax,eax
call dword 0x12a04
lea edx,[ebp-0x34]
lea ecx,[ebp-0x25]
mov eax,esi
call dword 0x3fd18
movzx eax,word [ebp-0x25]
mov [ebp-0x29],ax
movzx eax,word [ebp-0x21]
mov [ebp-0x27],ax
mov eax,[ebp-0x29]
mov [ebp-0x11],eax
test byte [esi+0x270],0x8
jz 0x5a05c
cmp byte [ebp-0xd],0x1
jnz 0x5a05c
mov ecx,[ebp-0x11]
mov edx,0xd
mov eax,[0x46dc9c]
call dword 0x5f2ec
mov ecx,[ebp-0xc]
mov edx,0x8
mov eax,[0x46dc9c]
call dword 0x5f2ec
jmp short 0x5a084
cmp byte [ebp-0xd],0x1
jnz 0x5a071
mov edx,[ebp-0xc]
mov eax,[0x46dc9c]
call dword 0x5f264
jmp short 0x5a084
cmp byte [ebp-0xd],0x0
jnz 0x5a084
mov edx,[ebp-0x8]
mov eax,[0x46dc9c]
call dword 0x5f1d4
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x45b0a1
lea eax,[ebp-0x8]
call dword 0x3a1c
ret
jmp dword 0x3384
jmp short 0x5a091
pop esi
pop ebx
mov esp,ebp
pop ebp
ret
nop
push ebx
push esi
push edi
push ecx
mov [esp],edx
mov esi,eax
test byte [esi+0x1c],0x2
jnz 0x5a10a
cmp byte [esi+0x272],0x0
jz 0x5a10a
mov edi,[esp]
mov edi,[edi+0x8]
mov eax,[esi+0x74]
lea edx,[edi+0x18]
mov ecx,[eax+0x14]
test ecx,ecx
jna 0x5a0d5
mov [edx],ecx
mov ecx,[eax+0x10]
test ecx,ecx
jna 0x5a0df
mov [edx+0x4],ecx
lea edx,[edi+0x20]
mov ecx,[eax+0xc]
test ecx,ecx
jna 0x5a0eb
mov [edx],ecx
mov ecx,[eax+0x8]
test ecx,ecx
jna 0x5a0f5
mov [edx+0x4],ecx
lea eax,[edi+0x20]
push eax
lea eax,[edi+0x24]
push eax
lea ecx,[edi+0x1c]
lea edx,[edi+0x18]
mov eax,esi
mov ebx,[eax]
call dword [ebx+0x38]
mov edx,[esp]
mov eax,esi
mov ecx,[eax]
call dword [ecx-0x10]
pop edx
pop edi
pop esi
pop ebx
ret
lea eax,[eax+0x0]
push ebp
mov ebp,esp
push ebx
push esi
mov esi,edx
mov ebx,eax
mov eax,[ebx]
add eax,ecx
sub eax,esi
cdq
xor eax,edx
sub eax,edx
mov edx,[ebp+0x8]
mov edx,[edx-0x4]
cmp eax,[edx+0x34c]
jnl 0x5a142
sub esi,ecx
mov [ebx],esi
pop esi
pop ebx
pop ebp
ret
mov eax,eax
push ebp
mov ebp,esp
add esp,byte -0x34
push ebx
push esi
push edi
mov ebx,edx
mov [ebp-0x4],eax
mov eax,[ebx+0x8]
mov eax,[eax+0x18]
and eax,0x8000
cmp eax,0x8000
jnz 0x5a170
mov eax,[ebp-0x4]
call dword 0x5b25c
mov edx,[ebp-0x4]
cmp byte [edx+0x348],0x0
jz dword 0x5a211
mov edx,[ebp-0x4]
cmp dword [edx+0x30],byte +0x0
jz 0x5a192
mov edx,[ebp-0x4]
test byte [edx+0x1c],0x10
jnz 0x5a211
mov eax,[ebx+0x8]
cmp dword [eax+0x8],byte +0x0
jnz 0x5a1a1
cmp dword [eax+0xc],byte +0x0
jz 0x5a211
mov esi,[ebx+0x8]
mov eax,[esi+0x10]
mov edx,[ebp-0x4]
cmp eax,[edx+0x48]
jnz 0x5a211
mov eax,[esi+0x14]
mov edx,[ebp-0x4]
cmp eax,[edx+0x4c]
jnz 0x5a211
mov esi,[ebx+0x8]
mov eax,[ebp-0x4]
call dword 0x57634
lea edx,[ebp-0x34]
call dword 0x5bd3c
push ebp
lea eax,[esi+0x8]
xor ecx,ecx
mov edx,[ebp-0x34]
call dword 0x5a11c
pop ecx
push ebp
lea eax,[esi+0xc]
xor ecx,ecx
mov edx,[ebp-0x30]
call dword 0x5a11c
pop ecx
push ebp
mov eax,[ebp-0x4]
mov ecx,[eax+0x48]
lea eax,[esi+0x8]
mov edx,[ebp-0x2c]
call dword 0x5a11c
pop ecx
push ebp
mov eax,[ebp-0x4]
mov ecx,[eax+0x4c]
lea eax,[esi+0xc]
mov edx,[ebp-0x28]
call dword 0x5a11c
pop ecx
mov edx,ebx
mov eax,[ebp-0x4]
call dword 0x4671c
mov eax,[ebp-0x4]
call dword 0x603d0
mov esi,eax
mov eax,esi
call dword 0x606bc
test al,al
jz dword 0x5a32b
cmp byte [esi+0x28],0x0
jnz dword 0x5a32b
mov eax,[ebp-0x4]
cmp byte [eax+0x57],0x0
jz dword 0x5a32b
mov eax,[ebx+0x8]
mov edx,[eax+0x10]
test edx,edx
jnz 0x5a25f
cmp dword [eax+0x14],byte +0x0
jz dword 0x5a32b
mov edi,edx
mov edx,[ebp-0x4]
sub edi,[edx+0x48]
mov eax,[eax+0x14]
mov edx,[ebp-0x4]
sub eax,[edx+0x4c]
mov ebx,eax
test edi,edi
jnz 0x5a27e
test ebx,ebx
jz dword 0x5a32b
lea edx,[ebp-0x14]
mov eax,[ebp-0x4]
mov ecx,[eax]
call dword [ecx+0x44]
mov eax,[ebp-0x8]
sub eax,[esi+0x18]
push eax
lea eax,[ebp-0x24]
push eax
mov ecx,[ebp-0xc]
sub ecx,[esi+0x14]
mov edx,[esi+0x10]
mov eax,[esi+0xc]
call dword 0x12a2c
mov eax,[ebp-0x18]
cmp eax,[esi+0x10]
jg 0x5a2ce
test ebx,ebx
jng 0x5a2ce
mov eax,[ebp-0x20]
sub eax,ebx
mov [ebp-0x18],eax
mov eax,[esi+0x18]
mov [ebp-0x20],eax
mov eax,[ebp-0x4]
mov eax,[eax+0x2a4]
mov byte [eax+0x8],0x1
jmp short 0x5a2e0
test ebx,ebx
jng 0x5a2d5
add [ebp-0x18],ebx
mov eax,[ebp-0x20]
cmp eax,[ebp-0x18]
jng 0x5a2e0
mov [ebp-0x18],eax
mov edx,[esi+0xc]
mov eax,[ebp-0x1c]
cmp edx,eax
jng 0x5a305
test edi,edi
jng 0x5a305
sub eax,edi
mov [ebp-0x24],eax
mov [ebp-0x1c],edx
mov eax,[ebp-0x4]
mov eax,[eax+0x2a4]
mov byte [eax+0x8],0x1
jmp short 0x5a317
test edi,edi
jng 0x5a30c
add [ebp-0x1c],edi
mov eax,[ebp-0x24]
cmp eax,[ebp-0x1c]
jng 0x5a317
mov [ebp-0x1c],eax
push byte +0x0
lea eax,[ebp-0x24]
push eax
mov eax,[ebp-0x4]
call dword 0x4831c
push eax
call dword 0x6150
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret
mov eax,eax
push ebx
push esi
mov esi,edx
mov ebx,eax
mov edx,esi
mov eax,ebx
call dword 0x49228
test byte [ebx+0x1c],0x10
jz 0x5a37b
cmp dword [ebx+0x30],byte +0x0
jz 0x5a37b
cmp dword [ebx+0x290],byte +0x0
jz 0x5a37b
mov eax,[ebx+0x290]
mov eax,[eax+0x34]
call dword 0x373c4
test eax,eax
jng 0x5a37b
mov ebx,[esi+0x8]
push byte +0xf
mov eax,[0x468be8]
mov eax,[eax]
call eax
add [ebx+0x4],eax
pop esi
pop ebx
ret
mov eax,eax
push ebx
push esi
mov ebx,eax
test byte [ebx+0x1c],0x2
jnz 0x5a398
mov eax,ebx
mov si,0xffb0
call dword 0x2dec
pop esi
pop ebx
ret
or byte [ebx+0x358],0x20
pop esi
pop ebx
ret
mov eax,eax
push ebx
push esi
mov ebx,eax
test byte [ebx+0x1c],0x2
jnz 0x5a3bc
mov eax,ebx
mov si,0xffae
call dword 0x2dec
pop esi
pop ebx
ret
and byte [ebx+0x358],0xdf
pop esi
pop ebx
ret
mov eax,eax
push ebx
push esi
mov esi,edx
mov ebx,eax
push byte +0x12
call dword 0x6020
test ax,ax
jl 0x5a456
movzx eax,word [esi+0x4]
sub ax,byte +0x9
jz 0x5a3ef
add eax,byte -0x1c
sub ax,byte +0x4
jc 0x5a421
jmp short 0x5a456
push byte +0x11
call dword 0x6020
test ax,ax
jl 0x5a456
push byte +0x1
push byte +0x10
call dword 0x6020
test ax,ax
setnl cl
mov edx,[ebx+0x268]
mov eax,ebx
call dword 0x488ec
mov dword [esi+0xc],0x1
pop esi
pop ebx
ret
mov eax,[ebx+0x268]
test eax,eax
jz 0x5a45f
push byte +0x0
movzx edx,word [esi+0x4]
cmp dx,byte +0x27
jz 0x5a441
cmp dx,byte +0x28
jz 0x5a441
xor ecx,ecx
jmp short 0x5a443
mov cl,0x1
mov edx,[eax+0x30]
xchg eax,edx
call dword 0x488ec
mov dword [esi+0xc],0x1
pop esi
pop ebx
ret
mov edx,esi
mov eax,ebx
call dword 0x47768
pop esi
pop ebx
ret
mov eax,eax
push ebp
mov ebp,esp
add esp,byte -0x8
push ebx
push esi
push edi
xor ecx,ecx
mov [ebp-0x8],ecx
mov [ebp-0x4],eax
xor eax,eax
push ebp
push dword 0x45bac0
push dword [fs:eax]
mov [fs:eax],esp
mov eax,[ebp-0x4]
test byte [eax+0x1c],0x10
jnz 0x5a4b9
mov eax,[ebp-0x4]
test byte [eax+0x358],0x4
jz 0x5a4b9
lea edx,[ebp-0x8]
mov eax,[0x468e9c]
call dword 0x5750
mov ecx,[ebp-0x8]
mov dl,0x1
mov eax,[0x4128ec]
call dword 0xb450
call dword 0x3464
mov eax,[0x46dc9c]
call dword 0x5f758
mov eax,[ebp-0x4]
or byte [eax+0x358],0x4
xor edx,edx
push ebp
push dword 0x45baa3
push dword [fs:edx]
mov [fs:edx],esp
mov eax,[ebp-0x4]
test byte [eax+0x1c],0x10
jnz dword 0x5aa5d
mov eax,[ebp-0x4]
cmp byte [eax+0x1da],0x0
jz dword 0x5a951
xor eax,eax
push ebp
push dword 0x45b51c
push dword [fs:eax]
mov [fs:eax],esp
mov eax,[ebp-0x4]
mov si,0xffab
call dword 0x2dec
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
jmp short 0x5a533
jmp dword 0x30d0
mov edx,[ebp-0x4]
mov eax,[0x46dc9c]
call dword 0x5ecfc
call dword 0x34e0
mov eax,[ebp-0x4]
cmp byte [eax+0x278],0x4
jz 0x5a55f
mov eax,[ebp-0x4]
cmp byte [eax+0x278],0x6
jnz dword 0x5a642
mov eax,[ebp-0x4]
cmp byte [eax+0x277],0x1
jnz dword 0x5a642
mov eax,[ebp-0x4]
cmp byte [eax+0x277],0x1
jnz 0x5a5a5
mov eax,[0x46dc9c]
mov eax,[eax+0x44]
call dword 0x3fc04
mov ebx,eax
mov eax,[ebp-0x4]
sub ebx,[eax+0x48]
sar ebx,1
jns 0x5a587
adc ebx,byte +0x0
mov eax,[0x46dc9c]
mov eax,[eax+0x44]
call dword 0x3fc48
mov esi,eax
mov eax,[ebp-0x4]
sub esi,[eax+0x4c]
sar esi,1
jns 0x5a5d7
adc esi,byte +0x0
jmp short 0x5a5d7
mov eax,[0x46dca0]
call dword 0x5bfbc
mov ebx,eax
mov eax,[ebp-0x4]
sub ebx,[eax+0x48]
sar ebx,1
jns 0x5a5be
adc ebx,byte +0x0
mov eax,[0x46dca0]
call dword 0x5bfb0
mov esi,eax
mov eax,[ebp-0x4]
sub esi,[eax+0x4c]
sar esi,1
jns 0x5a5d7
adc esi,byte +0x0
mov eax,[0x46dca0]
call dword 0x5bfd4
cmp ebx,eax
jnl 0x5a5f1
mov eax,[0x46dca0]
call dword 0x5bfd4
mov ebx,eax
mov eax,[0x46dca0]
call dword 0x5bfc8
cmp esi,eax
jnl 0x5a60b
mov eax,[0x46dca0]
call dword 0x5bfc8
mov esi,eax
mov eax,[ebp-0x4]
mov eax,[eax+0x48]
push eax
mov eax,[ebp-0x4]
mov eax,[eax+0x4c]
push eax
mov ecx,esi
mov edx,ebx
mov eax,[ebp-0x4]
mov ebx,[eax]
call dword [ebx+0x88]
mov eax,[ebp-0x4]
cmp byte [eax+0x57],0x0
jz dword 0x5a85d
mov eax,[ebp-0x4]
call dword 0x57e34
jmp dword 0x5a85d
mov eax,[ebp-0x4]
movzx eax,byte [eax+0x278]
mov edx,eax
add dl,0xfa
sub dl,0x2
jnc dword 0x5a762
mov eax,[0x46dc9c]
mov esi,[eax+0x44]
mov eax,[ebp-0x4]
cmp byte [eax+0x278],0x7
jnz 0x5a689
mov eax,[ebp-0x4]
mov eax,[eax+0x4]
mov edx,[dword 0x453010]
call dword 0x2d7c
test al,al
jz 0x5a689
mov eax,[ebp-0x4]
mov esi,[eax+0x4]
test esi,esi
jz 0x5a6c5
mov eax,esi
call dword 0x56044
mov ebx,eax
mov eax,[esi+0x48]
mov edx,[ebp-0x4]
sub eax,[edx+0x48]
sar eax,1
jns 0x5a6a6
adc eax,byte +0x0
add ebx,eax
mov eax,esi
call dword 0x56064
mov edx,[esi+0x4c]
mov ecx,[ebp-0x4]
sub edx,[ecx+0x4c]
sar edx,1
jns 0x5a6bf
adc edx,byte +0x0
add eax,edx
mov esi,eax
jmp short 0x5a6f7
mov eax,[0x46dca0]
call dword 0x5bfbc
mov ebx,eax
mov eax,[ebp-0x4]
sub ebx,[eax+0x48]
sar ebx,1
jns 0x5a6de
adc ebx,byte +0x0
mov eax,[0x46dca0]
call dword 0x5bfb0
mov esi,eax
mov eax,[ebp-0x4]
sub esi,[eax+0x4c]
sar esi,1
jns 0x5a6f7
adc esi,byte +0x0
mov eax,[0x46dca0]
call dword 0x5bfd4
cmp ebx,eax
jnl 0x5a711
mov eax,[0x46dca0]
call dword 0x5bfd4
mov ebx,eax
mov eax,[0x46dca0]
call dword 0x5bfc8
cmp esi,eax
jnl 0x5a72b
mov eax,[0x46dca0]
call dword 0x5bfc8
mov esi,eax
mov eax,[ebp-0x4]
mov eax,[eax+0x48]
push eax
mov eax,[ebp-0x4]
mov eax,[eax+0x4c]
push eax
mov ecx,esi
mov edx,ebx
mov eax,[ebp-0x4]
mov ebx,[eax]
call dword [ebx+0x88]
mov eax,[ebp-0x4]
cmp byte [eax+0x57],0x0
jz dword 0x5a85d
mov eax,[ebp-0x4]
call dword 0x57e34
jmp dword 0x5a85d
cmp al,0x5
jnz dword 0x5a85d
mov eax,[ebp-0x4]
cmp byte [eax+0x277],0x1
jnz 0x5a7b0
mov eax,[0x46dc9c]
mov eax,[eax+0x44]
call dword 0x3fc04
mov ebx,eax
mov eax,[ebp-0x4]
sub ebx,[eax+0x48]
sar ebx,1
jns 0x5a792
adc ebx,byte +0x0
mov eax,[0x46dc9c]
mov eax,[eax+0x44]
call dword 0x3fc48
mov esi,eax
mov eax,[ebp-0x4]
sub esi,[eax+0x4c]
sar esi,1
jns 0x5a80c
adc esi,byte +0x0
jmp short 0x5a80c
mov eax,[0x46dca0]
call dword 0x5bfec
mov ebx,eax
sar ebx,1
jns 0x5a7c3
adc ebx,byte +0x0
mov eax,[0x46dca0]
call dword 0x5bfd4
add ebx,eax
mov eax,[ebp-0x4]
mov eax,[eax+0x48]
sar eax,1
jns 0x5a7dc
adc eax,byte +0x0
sub ebx,eax
mov eax,[0x46dca0]
call dword 0x5bfe0
mov esi,eax
sar esi,1
jns 0x5a7f1
adc esi,byte +0x0
mov eax,[0x46dca0]
call dword 0x5bfc8
add esi,eax
mov eax,[ebp-0x4]
mov eax,[eax+0x4c]
sar eax,1
jns 0x5a80a
adc eax,byte +0x0
sub esi,eax
mov eax,[0x46dca0]
call dword 0x5bfd4
cmp ebx,eax
jnl 0x5a826
mov eax,[0x46dca0]
call dword 0x5bfd4
mov ebx,eax
mov eax,[0x46dca0]
call dword 0x5bfc8
cmp esi,eax
jnl 0x5a840
mov eax,[0x46dca0]
call dword 0x5bfc8
mov esi,eax
mov eax,[ebp-0x4]
mov eax,[eax+0x48]
push eax
mov eax,[ebp-0x4]
mov eax,[eax+0x4c]
push eax
mov ecx,esi
mov edx,ebx
mov eax,[ebp-0x4]
mov ebx,[eax]
call dword [ebx+0x88]
mov eax,[ebp-0x4]
mov byte [eax+0x278],0x0
mov eax,[ebp-0x4]
cmp byte [eax+0x277],0x1
jnz dword 0x5a92c
mov eax,[ebp-0x4]
cmp byte [eax+0x273],0x2
jnz 0x5a8b9
push byte +0x0
mov eax,[ebp-0x4]
call dword 0x4831c
push eax
push dword 0x223
mov eax,[0x46dc9c]
mov eax,[eax+0x44]
mov eax,[eax+0x29c]
push eax
call dword 0x6278
push byte +0x3
mov eax,[ebp-0x4]
call dword 0x4831c
push eax
call dword 0x6348
jmp short 0x5a90a
mov eax,[ebp-0x4]
movzx eax,byte [eax+0x273]
mov eax,[eax*4+0x468800]
push eax
mov eax,[ebp-0x4]
call dword 0x4831c
push eax
call dword 0x6348
mov eax,[ebp-0x4]
mov eax,[eax+0x48]
mov edx,[ebp-0x4]
mov edx,[edx+0x4c]
shl edx,byte 0x10
or eax,edx
push eax
push byte +0x0
push byte +0x5
mov eax,[ebp-0x4]
call dword 0x4831c
push eax
push dword 0x406ed0
call dword 0x5e78
mov eax,[ebp-0x4]
call dword 0x40528
push byte +0x0
push byte +0x0
push dword 0x234
mov eax,[0x46dc9c]
mov eax,[eax+0x44]
mov eax,[eax+0x29c]
push eax
call dword 0x6278
jmp dword 0x5aa8b
mov eax,[ebp-0x4]
movzx eax,byte [eax+0x273]
mov eax,[eax*4+0x468800]
push eax
mov eax,[ebp-0x4]
call dword 0x4831c
push eax
call dword 0x6348
jmp dword 0x5aa8b
xor eax,eax
push ebp
push dword 0x45b975
push dword [fs:eax]
mov [fs:eax],esp
mov eax,[ebp-0x4]
mov si,0xffac
call dword 0x2dec
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
jmp short 0x5a98c
jmp dword 0x30d0
mov edx,[ebp-0x4]
mov eax,[0x46dc9c]
call dword 0x5ecfc
call dword 0x34e0
mov eax,[0x46dca0]
mov eax,[eax+0x6c]
cmp eax,[ebp-0x4]
jnz 0x5a9a3
xor edx,edx
mov eax,[ebp-0x4]
call dword 0x591a8
mov eax,[ebp-0x4]
cmp byte [eax+0x277],0x1
jnz 0x5a9bf
mov eax,[ebp-0x4]
mov edx,[eax]
call dword [edx+0xb0]
jmp dword 0x5aa8b
mov eax,[ebp-0x4]
test byte [eax+0x358],0x8
jz 0x5a9ed
push dword 0x97
push byte +0x0
push byte +0x0
push byte +0x0
push byte +0x0
push byte +0x0
mov eax,[ebp-0x4]
call dword 0x4831c
push eax
call dword 0x6320
jmp dword 0x5aa8b
xor ebx,ebx
mov eax,[ebp-0x4]
call dword 0x4831c
mov esi,eax
call dword 0x5fa0
cmp esi,eax
jnz 0x5aa22
mov eax,[ebp-0x4]
call dword 0x4831c
call dword 0x53800
test eax,eax
jnz 0x5aa22
mov eax,[ebp-0x4]
call dword 0x4831c
call dword 0x53b28
mov ebx,eax
test ebx,ebx
jz 0x5aa4b
push dword 0x97
push byte +0x0
push byte +0x0
push byte +0x0
push byte +0x0
push byte +0x0
mov eax,[ebp-0x4]
call dword 0x4831c
push eax
call dword 0x6320
push ebx
call dword 0x6290
jmp short 0x5aa8b
push byte +0x0
mov eax,[ebp-0x4]
call dword 0x4831c
push eax
call dword 0x6348
jmp short 0x5aa8b
mov eax,[ebp-0x4]
test byte [eax+0x1c],0x10
jz 0x5aa8b
mov eax,[ebp-0x4]
cmp dword [eax+0x30],byte +0x0
jz 0x5aa8b
mov eax,[ebp-0x4]
cmp byte [eax+0x1da],0x0
jz 0x5aa8b
push byte +0x1
mov eax,[ebp-0x4]
call dword 0x4831c
push eax
call dword 0x6348
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x45baaa
mov eax,[ebp-0x4]
and byte [eax+0x358],0xfb
ret
jmp dword 0x3384
jmp short 0x5aa98
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x45bac7
lea eax,[ebp-0x8]
call dword 0x3a1c
ret
jmp dword 0x3384
jmp short 0x5aab7
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
ret
mov eax,eax
push ebx
mov ebx,eax
mov eax,[ebx+0x288]
call dword 0x263cc
test eax,eax
jnz 0x5aaeb
xor edx,edx
mov eax,ebx
call dword 0x56130
pop ebx
ret
lea eax,[eax+0x0]
call dword 0x2bf0
ret
mov eax,eax
push ebx
mov ebx,eax
mov eax,ebx
call dword 0x49740
cmp byte [ebx+0x277],0x1
jnz 0x5ab44
mov eax,[0x46dc9c]
cmp dword [eax+0x44],byte +0x0
jz 0x5ab44
mov eax,[0x46dc9c]
mov eax,[eax+0x44]
cmp dword [eax+0x29c],byte +0x0
jz 0x5ab44
push byte +0x0
push byte +0x0
push dword 0x234
mov eax,[0x46dc9c]
mov eax,[eax+0x44]
mov eax,[eax+0x29c]
push eax
call dword 0x6278
pop ebx
ret
mov eax,eax
mov ecx,[eax]
call dword [ecx-0x10]
ret
mov eax,eax
push ebp
mov ebp,esp
push ecx
push esi
mov esi,eax
cmp byte [esi+0x59],0x0
jz 0x5abb5
cmp dword [edx+0x4],byte +0x0
jz 0x5ab70
mov eax,[esi+0x68]
mov edx,[edx+0x8]
mov ecx,[eax]
call dword [ecx+0x8]
jmp short 0x5abb5
mov dl,0x1
mov eax,[0x41f170]
call dword 0x1f9c4
mov [ebp-0x4],eax
xor eax,eax
push ebp
push dword 0x45bbae
push dword [fs:eax]
mov [fs:eax],esp
mov eax,[esi+0x68]
mov edx,[ebp-0x4]
mov ecx,[eax]
call dword [ecx+0x8]
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x45bbb5
mov eax,[ebp-0x4]
call dword 0x2bf0
ret
jmp dword 0x3384
jmp short 0x5aba5
pop esi
pop ecx
pop ebp
ret
lea eax,[eax+0x0]
push ebx
push esi
push edi
mov ebx,edx
mov edi,eax
mov edx,ebx
mov eax,edi
mov si,0xffa5
call dword 0x2dec
test al,al
jz 0x5abdd
mov dword [ebx+0xc],0x1
jmp short 0x5abe2
xor eax,eax
mov [ebx+0xc],eax
pop edi
pop esi
pop ebx
ret
mov eax,eax
push ebx
push esi
push ecx
mov ebx,eax
test byte [ebx+0x358],0x8
jz 0x5ac05
mov dword [ebx+0x294],0x2

jmp dword 0x5ac85
mov eax,ebx
mov edx,[eax]
call dword [edx+0xf4]
test al,al
jz 0x5ac85
cmp byte [ebx+0x277],0x1
jnz 0x5ac31
test byte [ebx+0x270],0x2
jz 0x5ac2b
mov byte [esp],0x3
jmp short 0x5ac35
mov byte [esp],0x0
jmp short 0x5ac35
mov byte [esp],0x1
mov edx,esp
mov eax,ebx
mov si,0xffad
call dword 0x2dec
cmp byte [esp],0x0
jz 0x5ac85
mov eax,[0x46dc9c]
cmp ebx,[eax+0x44]
jnz 0x5ac5e
mov eax,[0x46dc9c]
call dword 0x5ec8c
jmp short 0x5ac85
cmp byte [esp],0x1
jnz 0x5ac6d
mov eax,ebx
call dword 0x5ad88
jmp short 0x5ac85
cmp byte [esp],0x3
jnz 0x5ac7e
mov dl,0x1
mov eax,ebx
call dword 0x57df4
jmp short 0x5ac85
mov eax,ebx
call dword 0x5ae64
pop edx
pop esi
pop ebx
ret
lea eax,[eax+0x0]
push ebx
push esi
push edi
push ecx
mov ebx,eax
cmp byte [ebx+0x277],0x2
jnz 0x5acc9
mov byte [esp],0x0
mov eax,ebx
call dword 0x57568
mov esi,eax
dec esi
test esi,esi
jl 0x5acc9
inc esi
xor edi,edi
mov edx,edi
mov eax,ebx
call dword 0x575b4
mov edx,[eax]
call dword [edx+0xf4]
test al,al
jz 0x5ace7
inc edi
dec esi
jnz 0x5acb0
mov byte [esp],0x1
cmp word [ebx+0x2e2],byte +0x0
jz 0x5ace7
mov ecx,esp
mov edx,ebx
mov eax,[ebx+0x2e4]
call dword [ebx+0x2e0]
movzx eax,byte [esp]
pop edx
pop edi
pop esi
pop ebx
ret
push ebp
mov ebp,esp
add esp,byte -0x8
push ebx
push esi
push edi
mov [ebp-0x4],eax
xor eax,eax
push ebp
push dword 0x45bd5d
push dword [fs:eax]
mov [fs:eax],esp
mov byte [ebp-0x5],0x0
mov eax,[ebp-0x4]
mov edx,[eax]
call dword [edx+0xf4]
test al,al
jz 0x5ad30
mov byte [ebp-0x5],0x1
lea edx,[ebp-0x5]
mov eax,[ebp-0x4]
mov si,0xffad
call dword 0x2dec
movzx eax,byte [ebp-0x5]
sub al,0x1
jc 0x5ad3e
dec al
jz 0x5ad4b
jmp short 0x5ad53
mov eax,[ebp-0x4]
xor edx,edx
mov [eax+0x294],edx
jmp short 0x5ad53
mov eax,[ebp-0x4]
call dword 0x5ae64
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
jmp short 0x5ad7f
jmp dword 0x30d0
mov eax,[ebp-0x4]
xor edx,edx
mov [eax+0x294],edx
mov edx,[ebp-0x4]
mov eax,[0x46dc9c]
call dword 0x5ecfc
call dword 0x34e0
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
ret
mov eax,eax
xor edx,edx
call dword 0x564b4
ret
push ebx
mov ebx,eax
mov dl,0x1
mov eax,ebx
call dword 0x564b4
mov eax,ebx
call dword 0x40528
pop ebx
ret
lea eax,[eax+0x0]
push ebp
mov ebp,esp
push byte +0x0
push ebx
mov ebx,eax
xor eax,eax
push ebp
push dword 0x45be27
push dword [fs:eax]
mov [fs:eax],esp
cmp byte [ebx+0x276],0x0
jnz 0x5ae11
cmp byte [ebx+0x57],0x0
jz 0x5add8
mov eax,ebx
mov edx,[eax]
call dword [edx+0x50]
test al,al
jnz 0x5ae0a
test byte [ebx+0x1c],0x10
jz 0x5ade9
mov eax,ebx
call dword 0x486bc
test al,al
jnz 0x5ae0a
lea edx,[ebp-0x4]
mov eax,[0x468df8]
call dword 0x5750
mov ecx,[ebp-0x4]
mov dl,0x1
mov eax,[0x4128ec]
call dword 0xb450
call dword 0x3464
mov eax,ebx
call dword 0x5907c
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x45be2e
lea eax,[ebp-0x4]
call dword 0x3a1c
ret
jmp dword 0x3384
jmp short 0x5ae1e
pop ebx
pop ecx
pop ebp
ret
mov eax,eax
push ebx
mov ebx,eax
mov [ebx+0x344],edx
xor eax,eax
mov [ebx+0x340],eax
mov eax,ebx
call dword 0x486bc
test al,al
jz 0x5ae59
mov eax,ebx
call dword 0x44c28
pop ebx
ret
mov eax,ebx
call dword 0x44e3c
pop ebx
ret
mov eax,eax
push ebx
mov ebx,eax
push byte +0x0
push byte +0x0
push dword 0xb021
mov eax,ebx
call dword 0x4831c
push eax
call dword 0x6210
pop ebx
ret
nop
push ebp
mov ebp,esp
add esp,byte -0x20
push ebx
push esi
xor edx,edx
mov [ebp-0x20],edx
mov [ebp-0x4],eax
xor eax,eax
push ebp
push dword 0x45c172
push dword [fs:eax]
mov [fs:eax],esp
call dword 0x3e7b4
mov eax,[ebp-0x4]
cmp byte [eax+0x57],0x0
jnz 0x5aed0
mov eax,[ebp-0x4]
mov edx,[eax]
call dword [edx+0x50]
test al,al
jz 0x5aed0
mov eax,[ebp-0x4]
test byte [eax+0x358],0x8
jnz 0x5aed0
mov eax,[ebp-0x4]
cmp byte [eax+0x277],0x1
jnz 0x5aef1
lea edx,[ebp-0x20]
mov eax,[0x468c78]
call dword 0x5750
mov ecx,[ebp-0x20]
mov dl,0x1
mov eax,[0x4128ec]
call dword 0xb450
call dword 0x3464
call dword 0x5fa8
test eax,eax
jz 0x5af0b
push byte +0x0
push byte +0x0
push byte +0x1f
call dword 0x5fa8
push eax
call dword 0x6278
call dword 0x6248
mov eax,[0x46dc9c]
call dword 0x5d610
xor edx,edx
push ebp
push dword 0x45c155
push dword [fs:edx]
mov [fs:edx],esp
mov eax,[ebp-0x4]
or byte [eax+0x358],0x8
mov eax,[ebp-0x4]
cmp byte [eax+0x330],0x0
jnz 0x5af5c
mov eax,[0x46dc9c]
cmp byte [eax+0xd4],0x0
jz 0x5af5c
mov eax,[ebp-0x4]
call dword 0x44c28
mov eax,[ebp-0x4]
call dword 0x482f8
call dword 0x5fa0
mov [ebp-0x1c],eax
call dword 0x53820
mov [ebp-0x10],eax
mov eax,[0x46dca0]
mov ecx,[eax+0x78]
mov eax,[0x46dca0]
mov eax,[eax+0x7c]
xor edx,edx
call dword 0x13ef8
mov eax,[0x46dca0]
mov edx,[ebp-0x4]
mov [eax+0x78],edx
mov eax,[0x46dca0]
movzx eax,word [eax+0x44]
mov [ebp-0x12],ax
xor edx,edx
mov eax,[0x46dca0]
call dword 0x5c4e0
mov eax,[0x46dca0]
mov eax,[eax+0x48]
mov [ebp-0x18],eax
xor eax,eax
call dword 0x539c8
mov [ebp-0xc],eax
xor edx,edx
push ebp
push dword 0x45c133
push dword [fs:edx]
mov [fs:edx],esp
mov eax,[ebp-0x4]
call dword 0x5ad90
xor edx,edx
push ebp
push dword 0x45c092
push dword [fs:edx]
mov [fs:edx],esp
push byte +0x0
push byte +0x0
push dword 0xb000
mov eax,[ebp-0x4]
call dword 0x4831c
push eax
call dword 0x6278
mov eax,[ebp-0x4]
xor edx,edx
mov [eax+0x294],edx
mov eax,[0x46dc9c]
call dword 0x5e91c
mov eax,[0x46dc9c]
cmp byte [eax+0xa4],0x0
jz 0x5b029
mov eax,[ebp-0x4]
mov dword [eax+0x294],0x2

jmp short 0x5b03d
mov eax,[ebp-0x4]
cmp dword [eax+0x294],byte +0x0
jz 0x5b03d
mov eax,[ebp-0x4]
call dword 0x5acf0
mov eax,[ebp-0x4]
mov eax,[eax+0x294]
test eax,eax
jz 0x5b002
mov [ebp-0x8],eax
push byte +0x0
push byte +0x0
push dword 0xb001
mov eax,[ebp-0x4]
call dword 0x4831c
push eax
call dword 0x6278
mov eax,[ebp-0x4]
call dword 0x4831c
mov ebx,eax
call dword 0x5fa0
cmp ebx,eax
jz 0x5b07c
xor eax,eax
mov [ebp-0x1c],eax
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x45c099
mov eax,[ebp-0x4]
call dword 0x5ad88
ret
jmp dword 0x3384
jmp short 0x5b089
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x45c13d
mov eax,[0x46dca0]
mov eax,[eax+0x48]
cmp eax,[ebp-0x18]
jnz 0x5b0c3
movzx edx,word [ebp-0x12]
mov eax,[0x46dca0]
call dword 0x5c4e0
jmp short 0x5b0cf
xor edx,edx
mov eax,[0x46dca0]
call dword 0x5c4e0
mov eax,[ebp-0xc]
call dword 0x53a8c
mov eax,[0x46dca0]
mov ebx,[eax+0x7c]
cmp dword [ebx+0x8],byte +0x0
jng 0x5b107
mov eax,ebx
call dword 0x13e74
mov esi,eax
mov eax,[0x46dca0]
mov [eax+0x78],esi
mov edx,esi
mov eax,[0x46dca0]
mov eax,[eax+0x7c]
call dword 0x14018
jmp short 0x5b111
mov eax,[0x46dca0]
xor edx,edx
mov [eax+0x78],edx
cmp dword [ebp-0x1c],byte +0x0
jz 0x5b120
mov eax,[ebp-0x1c]
push eax
call dword 0x6290
mov eax,[ebp-0x10]
call dword 0x53828
mov eax,[ebp-0x4]
and byte [eax+0x358],0xf7
ret
jmp dword 0x3384
jmp dword 0x5b0a6
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x45c15c
mov eax,[0x46dc9c]
call dword 0x5d63c
ret
jmp dword 0x3384
jmp short 0x5b14a
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x45c179
lea eax,[ebp-0x20]
call dword 0x3a1c
ret
jmp dword 0x3384
jmp short 0x5b169
mov eax,[ebp-0x8]
pop esi
pop ebx
mov esp,ebp
pop ebp
ret
mov eax,eax
push ebp
mov ebp,esp
push ecx
push ebx
push esi
push edi
mov [ebp-0x4],eax
mov eax,[ebp-0x4]
cmp byte [eax+0x1da],0x0
jz 0x5b1ec
mov eax,[ebp-0x4]
call dword 0x442b4
mov esi,eax
dec esi
test esi,esi
jl 0x5b1ec
inc esi
xor edi,edi
mov edx,edi
mov eax,[ebp-0x4]
call dword 0x44278
mov ebx,eax
test byte [ebx+0x51],0x80
jz 0x5b1cb
cmp byte [ebx+0x57],0x0
jz 0x5b1cb
mov eax,ebx
mov edx,[eax]
call dword [edx+0x7c]
mov eax,ebx
mov edx,[dword 0x43d11c]
call dword 0x2d7c
test al,al
jz 0x5b1e8
mov eax,[ebp+0x8]
push eax
mov eax,ebx
call dword 0x5b184
pop ecx
inc edi
dec esi
jnz 0x5b1ac
pop edi
pop esi
pop ebx
pop ecx
pop ebp
ret
mov eax,eax
push ebp
mov ebp,esp
push ebx
push esi
push edi
mov ebx,eax
test byte [ebx+0x1c],0x10
jnz 0x5b256
cmp byte [ebx+0x1da],0x0
jz 0x5b256
mov eax,ebx
mov edx,[eax]
call dword [edx+0x7c]
mov esi,[ebx+0x290]
test esi,esi
jz 0x5b24d
mov eax,[esi+0x34]
call dword 0x373c4
dec eax
test eax,eax
jl 0x5b24d
inc eax
mov esi,eax
xor edi,edi
mov eax,[ebx+0x290]
mov eax,[eax+0x34]
mov edx,edi
call dword 0x373d4
cmp byte [eax+0x3e],0x0
jz 0x5b249
mov edx,[eax]
call dword [edx+0x40]
inc edi
dec esi
jnz 0x5b22e
push ebp
mov eax,ebx
call dword 0x5b184
pop ecx
pop edi
pop esi
pop ebx
pop ebp
ret
nop
push ebx
add esp,byte -0x2c
mov ebx,eax
mov eax,ebx
call dword 0x486bc
test al,al
jz 0x5b2a9
mov dword [esp],0x2c
push esp
mov eax,ebx
call dword 0x4831c
push eax
call dword 0x6108
mov eax,[esp+0x8]
sub eax,byte +0x2
jz 0x5b290
dec eax
jz 0x5b299
jmp short 0x5b2a2
mov byte [ebx+0x273],0x1
jmp short 0x5b2a9
mov byte [ebx+0x273],0x2
jmp short 0x5b2a9
mov byte [ebx+0x273],0x0
add esp,byte +0x2c
pop ebx
ret
mov eax,eax
cmp dword [eax+0x30],byte +0x0
jnz 0x5b2c3
mov edx,eax
mov eax,[0x46dca0]
call dword 0x5cb74
ret
test byte [eax+0x1c],0x10
jnz 0x5b2ce
call dword 0x3f4f0
ret
nop
push ebx
push esi
mov esi,edx
mov ebx,eax
mov edx,esi
mov eax,ebx
call dword 0x46488
cmp dword [esi+0x4],byte +0x2f
jnz 0x5b2ec
mov eax,ebx
mov edx,[eax]
call dword [edx+0x5c]
pop esi
pop ebx
ret
nop
push ebp
mov ebp,esp
push ebx
push esi
mov ebx,eax
test ebx,ebx
jz 0x5b313
mov eax,[ebp+0x8]
mov edx,[eax-0x4]
mov edx,[edx+0x8]
mov eax,ebx
mov si,0xfff3
call dword 0x2dec
test al,al
jnz 0x5b317
xor eax,eax
jmp short 0x5b319
mov al,0x1
pop esi
pop ebx
pop ebp
ret
lea eax,[eax+0x0]
push ebp
mov ebp,esp
push ecx
push ebx
push esi
push edi
mov [ebp-0x4],eax
mov eax,[ebp-0x4]
cmp byte [eax+0x1da],0x0
jz 0x5b393
mov eax,[ebp-0x4]
call dword 0x442b4
mov esi,eax
dec esi
test esi,esi
jl 0x5b393
inc esi
xor edi,edi
mov edx,edi
mov eax,[ebp-0x4]
call dword 0x44278
mov ebx,eax
cmp byte [ebx+0x57],0x0
jz 0x5b36a
mov eax,[ebp+0x8]
push eax
mov eax,ebx
call dword 0x5b2f0
pop ecx
test al,al
jnz 0x5b38b
mov eax,ebx
mov edx,[dword 0x43d11c]
call dword 0x2d7c
test al,al
jz 0x5b38f
mov eax,[ebp+0x8]
push eax
mov eax,ebx
call dword 0x5b320
pop ecx
test al,al
jz 0x5b38f
mov al,0x1
jmp short 0x5b395
inc edi
dec esi
jnz 0x5b348
xor eax,eax
pop edi
pop esi
pop ebx
pop ecx
pop ebp
ret
nop
push ebp
mov ebp,esp
push ecx
push ebx
mov [ebp-0x4],edx
mov ebx,eax
test byte [ebx+0x1c],0x10
jnz 0x5b3ea
cmp byte [ebx+0x1da],0x0
jz 0x5b3ea
push ebp
mov eax,[ebx+0x268]
call dword 0x5b2f0
pop ecx
test al,al
jnz 0x5b3e0
push ebp
mov eax,ebx
call dword 0x5b2f0
pop ecx
test al,al
jnz 0x5b3e0
push ebp
mov eax,ebx
call dword 0x5b320
pop ecx
test al,al
jz 0x5b3ea
mov eax,[ebp-0x4]
mov dword [eax+0xc],0x1
pop ebx
pop ecx
pop ebp
ret
mov eax,eax
push ebp
mov ebp,esp
push ebx
push esi
mov ebx,eax
test ebx,ebx
jz 0x5b413
mov eax,[ebp+0x8]
mov edx,[eax-0x4]
mov edx,[edx+0x8]
mov eax,ebx
mov si,0xfff0
call dword 0x2dec
test al,al
jnz 0x5b417
xor eax,eax
jmp short 0x5b419
mov al,0x1
pop esi
pop ebx
pop ebp
ret
lea eax,[eax+0x0]
push ebp
mov ebp,esp
push ecx
push ebx
push esi
push edi
mov [ebp-0x4],eax
mov eax,[ebp-0x4]
cmp byte [eax+0x1da],0x0
jz 0x5b493
mov eax,[ebp-0x4]
call dword 0x442b4
mov esi,eax
dec esi
test esi,esi
jl 0x5b493
inc esi
xor edi,edi
mov edx,edi
mov eax,[ebp-0x4]
call dword 0x44278
mov ebx,eax
cmp byte [ebx+0x57],0x0
jz 0x5b46a
mov eax,[ebp+0x8]
push eax
mov eax,ebx
call dword 0x5b3f0
pop ecx
test al,al
jnz 0x5b48b
mov eax,ebx
mov edx,[dword 0x43d11c]
call dword 0x2d7c
test al,al
jz 0x5b48f
mov eax,[ebp+0x8]
push eax
mov eax,ebx
call dword 0x5b420
pop ecx
test al,al
jz 0x5b48f
mov al,0x1
jmp short 0x5b495
inc edi
dec esi
jnz 0x5b448
xor eax,eax
pop edi
pop esi
pop ebx
pop ecx
pop ebp
ret
nop
push ebp
mov ebp,esp
push ecx
push ebx
mov [ebp-0x4],edx
mov ebx,eax
test byte [ebx+0x1c],0x10
jnz 0x5b4ea
cmp byte [ebx+0x1da],0x0
jz 0x5b4ea
push ebp
mov eax,[ebx+0x268]
call dword 0x5b3f0
pop ecx
test al,al
jnz 0x5b4e0
push ebp
mov eax,ebx
call dword 0x5b3f0
pop ecx
test al,al
jnz 0x5b4e0
push ebp
mov eax,ebx
call dword 0x5b420
pop ecx
test al,al
jz 0x5b4ea
mov eax,[ebp-0x4]
mov dword [eax+0xc],0x1
pop ebx
pop ecx
pop ebp
ret
mov eax,eax
push ebp
mov ebp,esp
add esp,byte -0x8
push ebx
push esi
push edi
mov [ebp-0x4],eax
mov byte [ebp-0x5],0x0
mov eax,[ebp-0x4]
call dword 0x1abdc
mov esi,eax
dec esi
test esi,esi
jl 0x5b55f
inc esi
xor edi,edi
mov edx,edi
mov eax,[ebp-0x4]
call dword 0x1abb0
mov ebx,eax
mov eax,ebx
mov edx,[dword 0x451410]
call dword 0x2d7c
test al,al
jz 0x5b546
mov eax,[ebp+0x8]
mov edx,[eax-0x4]
mov eax,ebx
call dword 0x50c7c
test al,al
jz 0x5b55b
mov byte [ebp-0x5],0x1
jmp short 0x5b55f
mov eax,[ebp+0x8]
push eax
mov eax,ebx
call dword 0x5b4f0
pop ecx
mov [ebp-0x5],al
cmp byte [ebp-0x5],0x0
jnz 0x5b55f
inc edi
dec esi
jnz 0x5b512
movzx eax,byte [ebp-0x5]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
ret
mov eax,eax
push ebp
mov ebp,esp
add esp,byte -0x8
push ebx
push esi
push edi
mov [ebp-0x4],edx
mov ebx,eax
mov byte [ebp-0x5],0x0
cmp word [ebx+0x30a],byte +0x0
jz 0x5b59a
lea ecx,[ebp-0x5]
mov edx,[ebp-0x4]
mov eax,[ebx+0x30c]
call dword [ebx+0x308]
cmp byte [ebp-0x5],0x0
jnz 0x5b5d3
mov edi,[ebx+0x290]
test edi,edi
jz 0x5b5c2
cmp dword [edi+0x38],byte +0x0
jz 0x5b5c2
mov edx,[ebp-0x4]
mov eax,edi
mov si,0xffee
call dword 0x2dec
test al,al
jnz 0x5b5d3
push ebp
mov eax,ebx
call dword 0x5b4f0
pop ecx
test al,al
jnz 0x5b5d3
xor eax,eax
jmp short 0x5b5d5
mov al,0x1
mov [ebp-0x5],al
movzx eax,byte [ebp-0x5]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
ret
nop
push ebp
mov ebp,esp
push ebx
push esi
push edi
mov edi,[ebp+0x10]
mov esi,[ebp+0xc]
mov ebx,[ebp+0x8]
cmp dword [ebx+0x298],byte +0x0
jz 0x5b60d
push edi
push esi
mov eax,[ebx+0x298]
push eax
mov eax,[eax]
call dword [eax]
test eax,eax
jz 0x5b617
push edi
push esi
push ebx
call dword 0x1ad48
jmp short 0x5b619
xor eax,eax
pop edi
pop esi
pop ebx
pop ebp
ret 0xc
push ebx
push esi
push edi
mov esi,edx
mov ebx,eax
mov edi,[ebx+0x26c]
test edi,edi
jz 0x5b649
mov eax,[esi+0x8]
push eax
mov ecx,[esi+0x4]
mov edx,0xb043
mov eax,edi
call dword 0x41588
mov [esi+0xc],eax
jmp short 0x5b652
mov edx,esi
mov eax,ebx
call dword 0x40804
pop edi
pop esi
pop ebx
ret
mov eax,eax
mov edx,eax
mov eax,[0x46dc9c]
call dword 0x5ecfc
mov al,0x1
ret
nop
push ebx
push esi
mov ebx,eax
test byte [ebx+0x1c],0x10
jnz dword 0x5b73b
cmp dword [dword 0x468774],byte +0x0
jz dword 0x5b73b
mov eax,ebx
call dword 0x486bc
test al,al
jz dword 0x5b73b
push byte -0x14
mov eax,ebx
call dword 0x4831c
push eax
call dword 0x60f8
mov esi,eax
cmp byte [ebx+0x328],0x0
jnz 0x5b6b5
cmp byte [ebx+0x350],0x0
jz 0x5b70f
test esi,0x80000
jnz 0x5b6d3
or esi,0x80000
push esi
push byte -0x14
mov eax,ebx
call dword 0x4831c
push eax
call dword 0x6308
movzx eax,byte [ebx+0x328]
mov eax,[eax*4+0x46880c]
movzx edx,byte [ebx+0x350]
or eax,[edx*4+0x468814]
push eax
movzx eax,byte [ebx+0x329]
push eax
mov eax,[ebx+0x354]
push eax
mov eax,ebx
call dword 0x4831c
push eax
call dword [dword 0x468774]
jmp short 0x5b73b
and esi,0xfff7ffff
push esi
push byte -0x14
mov eax,ebx
call dword 0x4831c
push eax
call dword 0x6308
push dword 0x485
push byte +0x0
push byte +0x0
mov eax,ebx
call dword 0x4831c
push eax
call dword 0x6228
pop esi
pop ebx
ret
mov eax,eax
cmp dl,[eax+0x328]
jz 0x5b753
mov [eax+0x328],dl
call dword 0x5b668
ret
cmp dl,[eax+0x329]
jz 0x5b767
mov [eax+0x329],dl
call dword 0x5b668
ret
cmp edx,[eax+0x354]
jz 0x5b77b
mov [eax+0x354],edx
call dword 0x5b668
ret
push ebx
mov ebx,eax
cmp dl,[ebx+0x350]
jz 0x5b7b8
mov [ebx+0x350],dl
cmp byte [ebx+0x350],0x0
jz 0x5b7b1
mov eax,ebx
call dword 0x603d0
cmp byte [eax+0x8],0x0
jz 0x5b7b1
mov eax,ebx
call dword 0x603d0
xor edx,edx
call dword 0x607e4
mov eax,ebx
call dword 0x5b668
pop ebx
ret
mov eax,eax
test byte [eax+0x1c],0x10
jnz 0x5b7e4
cmp dword [dword 0x468774],byte +0x0
jz 0x5b7e4
cmp byte [eax+0x328],0x0
jnz 0x5b7dd
cmp byte [eax+0x350],0x0
jz 0x5b7e4
or dword [edx+0x8],0x80000
ret
lea eax,[eax+0x0]
test byte [eax+0x1c],0x10
jz 0x5b81c
cmp dword [eax+0x30],byte +0x0
jz 0x5b81c
mov ecx,[eax+0x18]
and ecx,0xffff
shl edx,byte 0x10
or ecx,edx
mov [eax+0x18],ecx
test byte [eax+0x1c],0x1
jnz 0x5b821
cmp byte [eax+0x278],0x3
jz 0x5b821
xor edx,edx
call dword 0x57c20
ret
call dword 0x3f918
ret
mov eax,eax
test byte [eax+0x1c],0x10
jz 0x5b85b
cmp dword [eax+0x30],byte +0x0
jz 0x5b85b
mov ecx,[eax+0x18]
and ecx,0xffff0000
and edx,0xffff
or ecx,edx
mov [eax+0x18],ecx
test byte [eax+0x1c],0x1
jnz 0x5b860
cmp byte [eax+0x278],0x3
jz 0x5b860
xor edx,edx
call dword 0x57c20
ret
call dword 0x3f94c
ret
lea eax,[eax+0x0]
push ebp
mov ebp,esp
push ecx
push ebx
push esi
test dl,dl
jz 0x5b876
add esp,byte -0x10
call dword 0x2f14
mov [ebp-0x1],dl
mov ebx,eax
push byte +0x0
xor edx,edx
mov eax,ebx
mov esi,[eax]
call dword [esi+0xf0]
xor edx,edx
mov eax,ebx
call dword 0x54ce8
mov dl,0x5
mov eax,ebx
call dword 0x572f8
mov dl,0x1
mov eax,ebx
call dword 0x46e44
mov dl,0x3
mov eax,ebx
call dword 0x57718
mov eax,ebx
cmp byte [ebp-0x1],0x0
jz 0x5b8c4
call dword 0x2f6c
pop dword [dword fs:0x0]
add esp,byte +0xc
mov eax,ebx
pop esi
pop ebx
pop ecx
pop ebp
ret
nop
push ebp
mov ebp,esp
add esp,byte -0xc
push ebx
push esi
xor ebx,ebx
mov [ebp-0x4],ebx
mov [ebp-0xc],ecx
mov [ebp-0x8],edx
mov esi,eax
xor eax,eax
push ebp
push dword 0x45c9ac
push dword [fs:eax]
mov [fs:eax],esp
mov eax,esi
call dword 0x46cd0
dec eax
jnz 0x5b970
mov eax,[ebp-0x8]
call dword 0x40208
mov ecx,eax
inc ecx
lea eax,[ebp-0x4]
xor edx,edx
call dword 0x3b0c
mov ebx,[ebp-0x4]
test ebx,ebx
jz 0x5b91a
sub ebx,byte +0x4
mov ebx,[ebx]
mov eax,[ebp-0x4]
call dword 0x3eac
mov edx,eax
mov ecx,ebx
mov eax,[ebp-0x8]
call dword 0x40218
mov eax,[ebp-0x4]
test eax,eax
jz 0x5b93a
sub eax,byte +0x4
mov eax,[eax]
test eax,eax
jng 0x5b966
mov ebx,0x1
mov edx,[ebp-0x4]
movzx edx,byte [edx+ebx-0x1]
sub dl,0xa
jz 0x5b955
sub dl,0x3
jnz 0x5b962
mov edx,ebx
dec edx
lea eax,[ebp-0x4]
call dword 0x413c
jmp short 0x5b966
inc ebx
dec eax
jnz 0x5b943
mov edx,[ebp-0x4]
mov eax,esi
call dword 0x402c8
mov ecx,[ebp-0xc]
mov edx,[ebp-0x8]
mov eax,esi
call dword 0x46b34
mov dl,0x5
mov eax,[ebp-0x8]
call dword 0x3f60c
test byte [esi+0x1c],0x1
jnz 0x5b996
mov dl,0x1
mov eax,esi
call dword 0x564b4
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x45c9b3
lea eax,[ebp-0x4]
call dword 0x3a1c
ret
jmp dword 0x3384
jmp short 0x5b9a3
pop esi
pop ebx
mov esp,ebp
pop ebp
ret
lea eax,[eax+0x0]
push ebx
mov ebx,eax
mov eax,ebx
call dword 0x46b44
mov eax,ebx
call dword 0x46cd0
test eax,eax
jnz 0x5b9d8
mov eax,ebx
call dword 0x5ae64
pop ebx
ret
mov eax,eax
push ebx
push esi
push edi
push ebp
add esp,byte -0x10
mov ebx,eax
mov eax,ebx
call dword 0x442b4
mov edi,eax
dec edi
test edi,edi
jl 0x5ba19
inc edi
xor ebp,ebp
mov edx,esp
mov eax,ebx
mov ecx,[eax]
call dword [ecx+0x44]
push esp
mov edx,ebp
mov eax,ebx
call dword 0x44278
mov edx,ebx
pop ecx
mov si,0xffcc
call dword 0x2dec
inc ebp
dec edi
jnz 0x5b9f6
mov eax,ebx
call dword 0x558ac
add esp,byte +0x10
pop ebp
pop edi
pop esi
pop ebx
ret
push ebp
mov ebp,esp
add esp,byte -0x8
push ebx
push esi
push edi
mov esi,[ebp+0xc]
lea edi,[ebp-0x8]
movsd
movsd
mov ebx,eax
mov eax,ebx
call dword 0x46cd0
test eax,eax
mov eax,[ebp+0x8]
setz [eax]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
ret 0x8
nop
push ebx
push esi
mov esi,edx
mov ebx,eax
mov edx,esi
mov eax,ebx
call dword 0x59864
test byte [ebx+0x1c],0x10
jnz 0x5ba76
cmp dword [esi+0xc],byte +0x1
jnz 0x5ba76
mov dword [esi+0xc],0x2
pop esi
pop ebx
ret
lea eax,[eax+0x0]
push ebx
push esi
mov esi,edx
mov ebx,eax
cmp dword [esi+0x4],byte +0x2
jnz 0x5bb04
cmp byte [ebx+0x8f],0x1
jz 0x5bb04
test byte [ebx+0x1c],0x10
jnz 0x5bb04
mov eax,ebx
call dword 0x4831c
call dword 0x53800
test eax,eax
jnz 0x5bb04
mov eax,ebx
call dword 0x46cd0
test eax,eax
jng 0x5bb04
push byte +0x7
push byte +0x0
push byte +0x0
push byte +0x0
push byte +0x0
push byte +0x0
mov eax,ebx
call dword 0x4831c
push eax
call dword 0x6320
mov eax,[esi+0x8]
push eax
mov eax,[esi+0x4]
push eax
push dword 0xa2
mov eax,ebx
call dword 0x4831c
push eax
call dword 0x6210
cmp byte [ebx+0x276],0x0
jz 0x5bb0d
xor edx,edx
mov eax,ebx
call dword 0x46ce4
or ecx,byte -0x1
mov dl,0x1
call dword 0x40a0c
pop esi
pop ebx
ret
mov edx,esi
mov eax,ebx
call dword 0x5987c
pop esi
pop ebx
ret
push ebx
push esi
push edi
add esp,byte -0x10
mov ebx,edx
mov esi,eax
mov edx,ebx
mov eax,esi
call dword 0x47a04
cmp dword [ebx+0x8],byte +0x0
jnz 0x5bb5f
mov eax,[ebx+0x4]
push eax
xor ecx,ecx
mov edx,0xb039
mov eax,esi
call dword 0x41588
mov edi,[ebx+0x4]
cmp esi,[edi+0x94]
jnz 0x5bb5f
mov edx,esp
mov eax,edi
call dword 0x3fba8
mov ecx,esp
mov eax,edi
or edx,byte -0x1
mov si,0xffcc
call dword 0x2dec
add esp,byte +0x10
pop edi
pop esi
pop ebx
ret
mov eax,eax
push ebp
mov ebp,esp
push byte +0x0
push ebx
push esi
push edi
mov ebx,edx
mov esi,eax
xor eax,eax
push ebp
push dword 0x45cc3d
push dword [fs:eax]
mov [fs:eax],esp
mov edx,ebx
mov eax,esi
mov ecx,[eax]
call dword [ecx-0x10]
mov eax,[ebx+0x8]
mov eax,[eax]
sub eax,byte +0xc
jz 0x5bbb0
sub eax,0xafff
jnz dword 0x5bc27
mov eax,[ebx+0x4]
movzx edx,byte [eax+0x57]
mov eax,esi
call dword 0x564b4
jmp short 0x5bc27
mov eax,[ebx+0x4]
call dword 0x40208
mov ecx,eax
inc ecx
lea eax,[ebp-0x4]
xor edx,edx
call dword 0x3b0c
mov edi,[ebp-0x4]
test edi,edi
jz 0x5bbd1
sub edi,byte +0x4
mov edi,[edi]
mov eax,[ebp-0x4]
call dword 0x3eac
mov edx,eax
mov eax,[ebx+0x4]
mov ecx,edi
call dword 0x40218
mov eax,[ebp-0x4]
test eax,eax
jz 0x5bbf1
sub eax,byte +0x4
mov eax,[eax]
test eax,eax
jng 0x5bc1d
mov ebx,0x1
mov edx,[ebp-0x4]
movzx edx,byte [edx+ebx-0x1]
sub dl,0xa
jz 0x5bc0c
sub dl,0x3
jnz 0x5bc19
mov edx,ebx
dec edx
lea eax,[ebp-0x4]
call dword 0x413c
jmp short 0x5bc1d
inc ebx
dec eax
jnz 0x5bbfa
mov edx,[ebp-0x4]
mov eax,esi
call dword 0x402c8
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x45cc44
lea eax,[ebp-0x4]
call dword 0x3a1c
ret
jmp dword 0x3384
jmp short 0x5bc34
pop edi
pop esi
pop ebx
pop ecx
pop ebp
ret
mov eax,eax
push ebx
mov ebx,edx
mov edx,ebx
call dword 0x46fec
mov eax,[ebx+0x8]
xor edx,edx
call dword 0x3f60c
pop ebx
ret
mov eax,eax
push ebx
push esi
push edi
mov ebx,eax
mov eax,ebx
call dword 0x47780
test byte [ebx+0x1c],0x8
jnz 0x5bc9d
mov eax,ebx
call dword 0x46cd0
mov esi,eax
dec esi
test esi,esi
jl 0x5bc9d
inc esi
xor edi,edi
mov edx,edi
mov eax,ebx
call dword 0x46ce4
movzx edx,byte [ebx+0x57]
call dword 0x401b8
inc edi
dec esi
jnz 0x5bc87
pop edi
pop esi
pop ebx
ret
lea eax,[eax+0x0]
push ebx
add esp,byte -0x10
mov ebx,eax
mov edx,esp
mov eax,ebx
call dword 0x5bd0c
mov eax,[esp]
add esp,byte +0x10
pop ebx
ret
nop
push ebx
add esp,byte -0x10
mov ebx,eax
mov edx,esp
mov eax,ebx
call dword 0x5bd0c
mov eax,[esp+0xc]
sub eax,[esp+0x4]
add esp,byte +0x10
pop ebx
ret
push ebx
add esp,byte -0x10
mov ebx,eax
mov edx,esp
mov eax,ebx
call dword 0x5bd0c
mov eax,[esp+0x4]
add esp,byte +0x10
pop ebx
ret
push ebx
add esp,byte -0x10
mov ebx,eax
mov edx,esp
mov eax,ebx
call dword 0x5bd0c
mov eax,[esp+0x8]
sub eax,[esp]
add esp,byte +0x10
pop ebx
ret
nop
push ebx
push esi
push edi
add esp,byte -0x28
mov ebx,edx
mov dword [esp],0x28
push esp
mov eax,[eax+0x4]
push eax
mov eax,[0x468bc4]
mov eax,[eax]
call eax
mov edi,ebx
lea esi,[esp+0x4]
movsd
movsd
movsd
movsd
add esp,byte +0x28
pop edi
pop esi
pop ebx
ret
mov eax,eax
push ebx
push esi
push edi
add esp,byte -0x28
mov ebx,edx
mov dword [esp],0x28
push esp
mov eax,[eax+0x4]
push eax
mov eax,[0x468bc4]
mov eax,[eax]
call eax
mov edi,ebx
lea esi,[esp+0x14]
movsd
movsd
movsd
movsd
add esp,byte +0x28
pop edi
pop esi
pop ebx
ret
mov eax,eax
add esp,byte -0x28
mov dword [esp],0x28
push esp
mov eax,[eax+0x4]
push eax
mov eax,[0x468bc4]
mov eax,[eax]
call eax
test byte [esp+0x24],0x1
setnz al
add esp,byte +0x28
ret
push ebp
mov ebp,esp
push ecx
push ebx
push esi
test dl,dl
jz 0x5bda2
add esp,byte -0x10
call dword 0x2f14
mov [ebp-0x1],dl
mov ebx,eax
xor edx,edx
mov eax,ebx
call dword 0x1a59c
mov eax,[0x468b68]
mov [eax+0x4],ebx
mov dword [eax],0x45d134
mov eax,[0x468b74]
mov [eax+0x4],ebx
mov dword [eax],0x45d140
mov eax,ebx
call dword 0x5c14c
push byte +0x0
call dword 0x6028
mov [ebx+0x3c],eax
mov dl,0x1
mov eax,[0x41294c]
call dword 0x2bc0
mov [ebx+0x4c],eax
mov dl,0x1
mov eax,[0x41294c]
call dword 0x2bc0
mov [ebx+0x50],eax
mov dl,0x1
mov eax,[0x41294c]
call dword 0x2bc0
mov [ebx+0x54],eax
mov dl,0x1
mov eax,[0x41294c]
call dword 0x2bc0
mov [ebx+0x58],eax
mov dl,0x1
mov eax,[0x41294c]
call dword 0x2bc0
mov [ebx+0x7c],eax
push byte +0x0
call dword 0x5fe0
mov esi,eax
push byte +0x5a
push esi
call dword 0x5d08
mov [ebx+0x40],eax
push esi
push byte +0x0
call dword 0x6250
mov eax,[ebx+0x58]
push eax
mov eax,0x458604
push eax
push byte +0x0
push byte +0x0
mov eax,[0x468cbc]
mov eax,[eax]
call eax
mov dl,0x1
mov eax,[0x41f170]
call dword 0x1f9c4
mov [ebx+0x84],eax
mov dl,0x1
mov eax,[0x41f170]
call dword 0x1f9c4
mov [ebx+0x88],eax
mov dl,0x1
mov eax,[0x41f170]
call dword 0x1f9c4
mov [ebx+0x80],eax
mov eax,ebx
call dword 0x5c57c
mov eax,[ebx+0x84]
mov [eax+0xc],ebx
mov dword [eax+0x8],0x45d44c
mov eax,[ebx+0x88]
mov [eax+0xc],ebx
mov dword [eax+0x8],0x45d44c
mov eax,[ebx+0x80]
mov [eax+0xc],ebx
mov dword [eax+0x8],0x45d44c
mov eax,ebx
cmp byte [ebp-0x1],0x0
jz 0x5bedf
call dword 0x2f6c
pop dword [dword fs:0x0]
add esp,byte +0xc
mov eax,ebx
pop esi
pop ebx
pop ecx
pop ebp
ret
mov eax,eax
push ebx
push esi
push edi
push ebp
call dword 0x2fbc
mov ebx,edx
mov ebp,eax
mov eax,[ebp+0x80]
call dword 0x2bf0
mov eax,[ebp+0x88]
call dword 0x2bf0
mov eax,[ebp+0x84]
call dword 0x2bf0
mov eax,[ebp+0x54]
call dword 0x2bf0
mov eax,[ebp+0x50]
call dword 0x2bf0
mov eax,[ebp+0x4c]
call dword 0x2bf0
mov eax,[ebp+0x30]
call dword 0x2bf0
mov eax,[ebp+0x34]
call dword 0x2bf0
mov eax,[ebp+0x7c]
call dword 0x2bf0
mov eax,[ebp+0x58]
test eax,eax
jz 0x5bf6b
mov esi,[eax+0x8]
dec esi
test esi,esi
jl 0x5bf6b
inc esi
xor edi,edi
mov eax,[ebp+0x58]
mov edx,edi
call dword 0x13e7c
call dword 0x2bf0
inc edi
dec esi
jnz 0x5bf58
mov eax,[ebp+0x58]
call dword 0x2bf0
mov eax,ebp
call dword 0x5c1a8
mov eax,[0x468b68]
xor edx,edx
mov [eax],edx
mov [eax+0x4],edx
mov eax,[0x468b74]
xor edx,edx
mov [eax],edx
mov [eax+0x4],edx
mov edx,ebx
and dl,0xfc
mov eax,ebp
call dword 0x1a5e8
test bl,bl
jng 0x5bfa9
mov eax,ebp
call dword 0x2f64
pop ebp
pop edi
pop esi
pop ebx
ret
mov eax,eax
push byte +0x1
mov eax,[0x468be8]
mov eax,[eax]
call eax
ret
push byte +0x0
mov eax,[0x468be8]
mov eax,[eax]
call eax
ret
push byte +0x4d
mov eax,[0x468be8]
mov eax,[eax]
call eax
ret
push byte +0x4c
mov eax,[0x468be8]
mov eax,[eax]
call eax
ret
push byte +0x4f
mov eax,[0x468be8]
mov eax,[eax]
call eax
ret
push byte +0x4e
mov eax,[0x468be8]
mov eax,[eax]
call eax
ret
push ebx
push esi
mov esi,edx
mov ebx,eax
mov edx,esi
mov eax,[ebx+0x58]
call dword 0x13e7c
pop esi
pop ebx
ret
nop
mov edx,[eax+0x58]
mov edx,[edx+0x8]
test edx,edx
jnz 0x5c022
push byte +0x50
mov eax,[0x468be8]
mov eax,[eax]
call eax
ret
mov eax,edx
ret
lea eax,[eax+0x0]
push ebx
push esi
mov esi,edx
mov ebx,eax
mov edx,esi
mov eax,[ebx+0x4c]
call dword 0x13e7c
pop esi
pop ebx
ret
nop
mov eax,[eax+0x4c]
mov eax,[eax+0x8]
ret
nop
push ebx
push esi
mov esi,edx
mov ebx,eax
mov edx,esi
mov eax,[ebx+0x50]
call dword 0x13e7c
pop esi
pop ebx
ret
nop
mov eax,[eax+0x50]
mov eax,[eax+0x8]
ret
nop
push ebx
mov ebx,eax
mov eax,[ebx+0x68]
cmp eax,[ebx+0x74]
jz 0x5c086
mov [ebx+0x74],eax
cmp word [ebx+0x9a],byte +0x0
jz 0x5c086
mov edx,ebx
mov eax,[ebx+0x9c]
call dword [ebx+0x98]
mov eax,[ebx+0x64]
cmp eax,[ebx+0x70]
jz 0x5c0a9
mov [ebx+0x70],eax
cmp word [ebx+0x92],byte +0x0
jz 0x5c0a9
mov edx,ebx
mov eax,[ebx+0x94]
call dword [ebx+0x90]
pop ebx
ret
nop
push ebx
push esi
mov esi,edx
mov ebx,eax
mov edx,esi
mov eax,[ebx+0x50]
call dword 0x13d24
mov eax,esi
mov edx,[dword 0x45338c]
call dword 0x2d7c
test al,al
jz 0x5c0e1
mov edx,esi
mov eax,[ebx+0x4c]
call dword 0x13d24
mov eax,[0x46dc9c]
call dword 0x5f758
pop esi
pop ebx
ret
push ebx
push esi
mov esi,edx
mov ebx,eax
mov edx,esi
mov eax,[ebx+0x50]
call dword 0x14018
mov edx,esi
mov eax,[ebx+0x4c]
call dword 0x14018
mov eax,[0x46dc9c]
call dword 0x5f758
mov eax,[ebx+0x50]
cmp dword [eax+0x8],byte +0x0
jnz 0x5c12f
mov eax,[0x46dc9c]
cmp dword [eax+0x84],byte +0x0
jz 0x5c12f
mov eax,[0x46dc9c]
mov eax,[eax+0x84]
call dword 0x49cd8
pop esi
pop ebx
ret
mov eax,eax
mov eax,[eax+0x54]
call dword 0x13d24
ret
lea eax,[eax+0x0]
mov eax,[eax+0x54]
call dword 0x14018
ret
lea eax,[eax+0x0]
push ebx
push esi
push edi
push ebp
mov ebp,eax
push dword 0x7f00
push byte +0x0
call dword 0x61b8
mov [ebp+0x60],eax
mov ebx,0xffffffea
mov esi,0x46881c
cmp ebx,byte -0x11
jl 0x5c175
cmp ebx,byte -0xc
jng 0x5c17a
cmp ebx,byte -0x15
jnz 0x5c182
mov edi,[dword 0x46b7f4]
jmp short 0x5c184
xor edi,edi
mov eax,[esi]
push eax
push edi
call dword 0x61b8
mov ecx,eax
mov edx,ebx
mov eax,ebp
call dword 0x5c208
inc ebx
add esi,byte +0x4
cmp ebx,byte -0x1
jnz 0x5c16b
pop ebp
pop edi
pop esi
pop ebx
ret
mov eax,eax
push ebx
push esi
push edi
push ebp
mov ebp,eax
mov ebx,[ebp+0x5c]
test ebx,ebx
jz 0x5c1e8
mov esi,[ebx+0x4]
cmp esi,byte -0x11
jl 0x5c1c2
cmp esi,byte -0xc
jng 0x5c1cb
cmp esi,byte -0x15
jz 0x5c1cb
test esi,esi
jng 0x5c1d4
mov eax,[ebx+0x8]
push eax
call dword 0x5ee8
mov edi,[ebx]
mov edx,0xc
mov eax,ebx
call dword 0x1e7c
mov ebx,edi
test ebx,ebx
jnz 0x5c1b5
push dword 0x7f00
push byte +0x0
call dword 0x61b8
mov edx,[ebp+0x60]
cmp eax,edx
jz 0x5c201
push edx
call dword 0x5ee8
pop ebp
pop edi
pop esi
pop ebx
ret
mov eax,eax
push ebx
push esi
push edi
mov edi,ecx
mov esi,edx
mov ebx,eax
mov eax,0xc
call dword 0x1e60
mov edx,[ebx+0x5c]
mov [eax],edx
mov [eax+0x4],esi
mov [eax+0x8],edi
mov [ebx+0x5c],eax
pop edi
pop esi
pop ebx
ret
lea eax,[eax+0x0]
push ebp
mov ebp,esp
add esp,0xfffffda0
push ebx
xor edx,edx
mov [ebp-0x260],edx
mov [ebp-0x4],eax
xor eax,eax
push ebp
push dword 0x45d3db
push dword [fs:eax]
mov [fs:eax],esp
mov eax,[ebp-0x4]
cmp dword [eax+0x34],byte +0x0
jnz dword 0x5c3bc
mov dl,0x1
mov eax,[0x412efc]
call dword 0x2bc0
mov edx,[ebp-0x4]
mov [edx+0x34],eax
mov eax,[ebp-0x4]
add eax,byte +0x38
call dword 0x3a1c
lea eax,[ebp-0x114]
push eax
push byte +0x40
call dword 0x6030
dec eax
test eax,eax
jl dword 0x5c3ab
inc eax
mov [ebp-0x10],eax
lea eax,[ebp-0x114]
mov [ebp-0x14],eax
mov eax,[ebp-0x14]
mov eax,[eax]
call dword 0x4d9f8
test al,al
jz dword 0x5c39e
lea eax,[ebp-0xc]
push eax
push dword 0x20019
push byte +0x0
push byte +0x0
mov eax,[ebp-0x14]
mov eax,[eax]
mov [ebp-0x25c],eax
mov byte [ebp-0x258],0x0
lea ecx,[ebp-0x25c]
mov edx,0x45d3ec
lea eax,[ebp-0x254]
call dword 0x8aa4
push eax
push dword 0x80000002
call dword 0x5a60
test eax,eax
jnz dword 0x5c39e
xor eax,eax
push ebp
push dword 0x45d397
push dword [fs:eax]
mov [fs:eax],esp
mov dword [ebp-0x8],0x100
lea eax,[ebp-0x8]
push eax
lea eax,[ebp-0x214]
push eax
push byte +0x0
push byte +0x0
push dword 0x45d424
mov eax,[ebp-0xc]
push eax
call dword 0x5a68
test eax,eax
jnz 0x5c380
lea eax,[ebp-0x260]
lea edx,[ebp-0x214]
mov ecx,0x100
call dword 0x3c8c
mov edx,[ebp-0x260]
mov eax,[ebp-0x14]
mov ecx,[eax]
mov eax,[ebp-0x4]
mov eax,[eax+0x34]
mov ebx,[eax]
call dword [ebx+0x3c]
mov eax,[ebp-0x14]
mov eax,[eax]
mov edx,[ebp-0x4]
cmp eax,[edx+0x3c]
jnz 0x5c380
mov eax,[ebp-0x4]
add eax,byte +0x38
lea edx,[ebp-0x214]
mov ecx,0x100
call dword 0x3c8c
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x45d39e
mov eax,[ebp-0xc]
push eax
call dword 0x5a50
ret
jmp dword 0x3384
jmp short 0x5c38d
add dword [ebp-0x14],byte +0x4
dec dword [ebp-0x10]
jnz dword 0x5c2a1
mov eax,[ebp-0x4]
mov eax,[eax+0x34]
mov byte [eax+0x25],0x0
mov dl,0x1
call dword 0x16384
mov eax,[ebp-0x4]
mov ebx,[eax+0x34]
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x45d3e2
lea eax,[ebp-0x260]
call dword 0x3a1c
ret
jmp dword 0x3384
jmp short 0x5c3cf
mov eax,ebx
pop ebx
mov esp,ebp
pop ebp
ret
add [eax],al
add [ebx+0x79],dl
jnc 0x5c464
gs insd
pop esp
inc ebx
jnz 0x5c468
jc 0x5c45d
outsb
jz 0x5c43e
outsd
outsb
jz 0x5c471
outsd
insb
push ebx
gs jz 0x5c461
inc ebx
outsd
outsb
jz 0x5c47c
outsd
insb
pop esp
dec ebx
gs jns 0x5c473
outsd
popad
jc 0x5c479
and [ecx+0x79],cl
outsd
jnz 0x5c490
jnc 0x5c47a
and eax,0x78382e
add [ecx+0x79],ch
outsd
jnz 0x5c49e
and [ebp+0x78],dh
jz 0x5c430
push ebx
push esi
mov esi,edx
mov ebx,eax
mov eax,ebx
call dword 0x5c230
mov eax,esi
mov edx,[ebx+0x38]
call dword 0x3a70
pop esi
pop ebx
ret
mov eax,eax
push ebx
push esi
mov esi,edx
mov ebx,eax
mov dx,0xb035
mov eax,[0x46dc9c]
call dword 0x5f590
cmp esi,[ebx+0x80]
jnz 0x5c497
cmp dword [dword 0x46dc9c],byte +0x0
jz 0x5c497
mov eax,[0x46dc9c]
cmp byte [eax+0x88],0x0
jz 0x5c497
xor edx,edx
mov eax,[0x46dc9c]
call dword 0x5f2f4
mov dl,0x1
mov eax,[0x46dc9c]
call dword 0x5f2f4
pop esi
pop ebx
ret
mov eax,eax
push ebx
push esi
mov esi,edx
mov ebx,eax
mov edx,esi
mov eax,[ebx+0x54]
call dword 0x13e7c
pop esi
pop ebx
ret
nop
mov eax,[eax+0x54]
mov eax,[eax+0x8]
ret
nop
xor ecx,ecx
cmp edx,byte -0x1
jz 0x5c4db
mov ecx,[eax+0x5c]
jmp short 0x5c4c6
mov ecx,[ecx]
test ecx,ecx
jz 0x5c4cf
cmp edx,[ecx+0x4]
jnz 0x5c4c4
test ecx,ecx
jnz 0x5c4d8
mov ecx,[eax+0x60]
jmp short 0x5c4db
mov ecx,[ecx+0x8]
mov eax,ecx
ret
mov eax,eax
push ebx
push esi
push edi
push ebp
add esp,byte -0xc
mov esi,edx
mov ebx,eax
cmp si,[ebx+0x44]
jz 0x5c56f
mov [ebx+0x44],si
test si,si
jnz 0x5c55f
push esp
call dword 0x5fd8
push dword [esp+0x4]
push dword [esp+0x4]
call dword 0x6390
mov edi,eax
test edi,edi
jz 0x5c55f
push byte +0x0
push edi
call dword 0x6120
mov ebp,eax
call dword 0x5af8
cmp ebp,eax
jnz 0x5c55f
movzx eax,word [esp]
mov [esp+0x8],ax
movzx eax,word [esp+0x4]
mov [esp+0xa],ax
mov eax,[esp+0x8]
push eax
push byte +0x0
push dword 0x84
push edi
call dword 0x6278
movzx eax,ax
or eax,0x2000000
push eax
push edi
push byte +0x20
push edi
call dword 0x6278
jmp short 0x5c572
movsx edx,si
mov eax,ebx
call dword 0x5c4b8
push eax
call dword 0x62a8
inc dword [ebx+0x48]
add esp,byte +0xc
pop ebp
pop edi
pop esi
pop ebx
ret
mov eax,eax
push ebp
mov ebp,esp
add esp,0xfffffe6c
push ebx
mov ebx,eax
mov byte [ebp-0x1],0x0
cmp dword [dword 0x46dc9c],byte +0x0
jz 0x5c5a4
mov eax,[0x46dc9c]
movzx eax,byte [eax+0x88]
mov [ebp-0x1],al
xor eax,eax
push ebp
push dword 0x45d6c3
push dword [fs:eax]
mov [fs:eax],esp
cmp dword [dword 0x46dc9c],byte +0x0
jz 0x5c5c7
xor edx,edx
mov eax,[0x46dc9c]
call dword 0x5f2f4
push byte +0x0
lea eax,[ebp-0x3d]
push eax
push byte +0x3c
push byte +0x1f
call dword 0x6350
test eax,eax
jz 0x5c5f2
lea eax,[ebp-0x3d]
push eax
call dword 0x5c88
mov edx,eax
mov eax,[ebx+0x84]
call dword 0x1fe14
jmp short 0x5c606
push byte +0xd
call dword 0x5d48
mov edx,eax
mov eax,[ebx+0x84]
call dword 0x1fe14
mov dword [ebp-0x191],0x154

push byte +0x0
lea eax,[ebp-0x191]
push eax
push byte +0x0
push byte +0x29
call dword 0x6350
test eax,eax
jz 0x5c65a
lea eax,[ebp-0xb5]
push eax
call dword 0x5c88
mov edx,eax
mov eax,[ebx+0x80]
call dword 0x1fe14
lea eax,[ebp-0xf1]
push eax
call dword 0x5c88
mov edx,eax
mov eax,[ebx+0x88]
call dword 0x1fe14
jmp short 0x5c67e
mov eax,[ebx+0x80]
mov edx,0x8
call dword 0x1fef8
push byte +0xd
call dword 0x5d48
mov edx,eax
mov eax,[ebx+0x88]
call dword 0x1fe14
mov eax,[ebx+0x80]
mov edx,0xff000017
call dword 0x1fb98
mov eax,[ebx+0x88]
mov edx,0xff000007
call dword 0x1fb98
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x45d6ca
cmp dword [dword 0x46dc9c],byte +0x0
jz 0x5c6c2
movzx edx,byte [ebp-0x1]
mov eax,[0x46dc9c]
call dword 0x5f2f4
ret
jmp dword 0x3384
jmp short 0x5c6ab
pop ebx
mov esp,ebp
pop ebp
ret
nop
inc word [eax+0x8c]
ret
dec word [eax+0x8c]
cmp word [eax+0x8c],byte +0x0
jnz 0x5c6f7
test byte [eax+0x8e],0x10
jz 0x5c6f7
call dword 0x5c6f8
ret
xor edx,edx
call dword 0x5cb74
ret
push ebx
push esi
push edi
mov edi,edx
mov esi,eax
xor eax,eax
dec cl
jz 0x5c71b
dec cl
jz 0x5c732
dec cl
jz 0x5c74f
dec cl
jz 0x5c766
jmp short 0x5c781
mov eax,esi
call dword 0x56064
mov ebx,eax
mov eax,edi
call dword 0x56064
cmp ebx,eax
setl al
jmp short 0x5c781
mov eax,edi
call dword 0x56064
mov ebx,eax
add ebx,[edi+0x4c]
mov eax,esi
call dword 0x56064
add eax,[esi+0x4c]
cmp ebx,eax
setl al
jmp short 0x5c781
mov eax,esi
call dword 0x56044
mov ebx,eax
mov eax,edi
call dword 0x56044
cmp ebx,eax
setl al
jmp short 0x5c781
mov eax,edi
call dword 0x56044
mov ebx,eax
add ebx,[edi+0x48]
mov eax,esi
call dword 0x56044
add eax,[esi+0x48]
cmp ebx,eax
setl al
pop edi
pop esi
pop ebx
ret
lea eax,[eax+0x0]
push ebp
mov ebp,esp
add esp,byte -0x10
push ebx
push esi
push edi
mov [ebp-0x1],dl
mov ebx,eax
mov eax,[ebp+0x8]
mov esi,[eax-0x4]
mov esi,[esi+0x8]
mov eax,[ebp+0x8]
mov eax,[eax-0x4]
sub esi,[eax]
test esi,esi
jl 0x5c7b5
movzx eax,byte [ebp-0x1]
add al,0xfd
sub al,0x2
jnc 0x5c7b8
mov esi,[ebx+0x48]
mov eax,[ebp+0x8]
mov eax,[eax-0x4]
mov eax,[eax+0xc]
mov edx,[ebp+0x8]
mov edx,[edx-0x4]
sub eax,[edx+0x4]
mov [ebp-0x10],eax
cmp dword [ebp-0x10],byte +0x0
jl 0x5c7dc
movzx eax,byte [ebp-0x1]
dec eax
sub al,0x2
jnc 0x5c7e2
mov eax,[ebx+0x4c]
mov [ebp-0x10],eax
cmp byte [ebp-0x1],0x1
jnz 0x5c814
cmp byte [ebx+0x273],0x2
jnz 0x5c814
mov eax,ebx
call dword 0x56044
mov [ebp-0x8],eax
mov eax,ebx
call dword 0x56064
mov [ebp-0xc],eax
push byte +0x3d
mov eax,[0x468be8]
mov eax,[eax]
call eax
mov esi,eax
jmp short 0x5c82b
mov eax,[ebp+0x8]
mov eax,[eax-0x4]
mov eax,[eax]
mov [ebp-0x8],eax
mov eax,[ebp+0x8]
mov eax,[eax-0x4]
mov eax,[eax+0x4]
mov [ebp-0xc],eax
movzx eax,byte [ebp-0x1]
dec al
jz 0x5c841
dec al
jz 0x5c84f
dec al
jz 0x5c869
dec al
jz 0x5c873
jmp short 0x5c888
mov eax,[ebp+0x8]
mov eax,[eax-0x4]
mov edx,[ebp-0x10]
add [eax+0x4],edx
jmp short 0x5c888
mov eax,[ebp+0x8]
mov eax,[eax-0x4]
mov edx,[ebp-0x10]
sub [eax+0xc],edx
mov eax,[ebp+0x8]
mov eax,[eax-0x4]
mov eax,[eax+0xc]
mov [ebp-0xc],eax
jmp short 0x5c888
mov eax,[ebp+0x8]
mov eax,[eax-0x4]
add [eax],esi
jmp short 0x5c888
mov eax,[ebp+0x8]
mov eax,[eax-0x4]
sub [eax+0x8],esi
mov eax,[ebp+0x8]
mov eax,[eax-0x4]
mov eax,[eax+0x8]
mov [ebp-0x8],eax
push esi
mov eax,[ebp-0x10]
push eax
mov ecx,[ebp-0xc]
mov edx,[ebp-0x8]
mov eax,ebx
mov edi,[eax]
call dword [edi+0x88]
cmp byte [ebx+0x273],0x2
jnz 0x5c8af
sub esi,[ebp-0x8]
mov eax,[ebp-0xc]
sub [ebp-0x10],eax
mov eax,[ebx+0x48]
cmp esi,eax
jnz 0x5c8be
mov edx,[ebx+0x4c]
cmp edx,[ebp-0x10]
jz 0x5c93b
movzx edx,byte [ebp-0x1]
cmp edx,byte +0x5
ja 0x5c93b
jmp dword [edx*4+0x45d8ce]
cmp ebx,ecx
inc ebp
add dh,ah
fadd dword [ebp+0x0]
neg eax
inc ebp
add [eax],cl
fld dword [ebp+0x0]
adc al,0xd9
inc ebp
add [ecx],ah
fld dword [ebp+0x0]
mov eax,[ebp-0x10]
sub eax,[ebx+0x4c]
mov edx,[ebp+0x8]
mov edx,[edx-0x4]
sub [edx+0x4],eax
jmp short 0x5c93b
mov eax,[ebp-0x10]
sub eax,[ebx+0x4c]
mov edx,[ebp+0x8]
mov edx,[edx-0x4]
add [edx+0xc],eax
jmp short 0x5c93b
sub esi,eax
mov eax,[ebp+0x8]
mov eax,[eax-0x4]
sub [eax],esi
jmp short 0x5c93b
sub esi,eax
mov eax,[ebp+0x8]
mov eax,[eax-0x4]
add [eax+0x8],esi
jmp short 0x5c93b
sub esi,eax
mov eax,[ebp+0x8]
mov eax,[eax-0x4]
add [eax+0x8],esi
mov eax,[ebp-0x10]
sub eax,[ebx+0x4c]
mov edx,[ebp+0x8]
mov edx,[edx-0x4]
add [edx+0xc],eax
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret
mov eax,eax
push ebp
mov ebp,esp
add esp,byte -0x8
push ebx
push esi
push edi
mov [ebp-0x1],al
mov eax,[ebp+0x8]
mov eax,[eax-0x8]
mov edx,[eax]
call dword [edx+0x8]
mov eax,[ebp+0x8]
cmp dword [eax-0xc],byte +0x0
jz 0x5c9b7
mov eax,[ebp+0x8]
mov eax,[eax-0xc]
cmp dword [eax+0x30],byte +0x0
jnz 0x5c9b7
mov eax,[ebp+0x8]
mov eax,[eax-0xc]
test byte [eax+0x1c],0x10
jnz 0x5c9b7
mov eax,[ebp+0x8]
mov eax,[eax-0xc]
cmp byte [eax+0x57],0x0
jz 0x5c9b7
mov eax,[ebp+0x8]
mov eax,[eax-0xc]
movzx eax,byte [eax+0x5b]
cmp al,[ebp-0x1]
jnz 0x5c9b7
mov eax,[ebp+0x8]
mov eax,[eax-0xc]
cmp byte [eax+0x273],0x1
jz 0x5c9b7
mov eax,[ebp+0x8]
mov edx,[eax-0xc]
mov eax,[ebp+0x8]
mov eax,[eax-0x8]
call dword 0x13d24
mov eax,[ebp+0x8]
mov eax,[eax-0x10]
call dword 0x5c058
mov edi,eax
dec edi
test edi,edi
jl dword 0x5ca54
inc edi
mov dword [ebp-0x8],0x0
mov eax,[ebp+0x8]
mov eax,[eax-0x10]
mov edx,[ebp-0x8]
call dword 0x5c044
mov ebx,eax
cmp dword [ebx+0x30],byte +0x0
jnz 0x5ca4e
movzx eax,byte [ebx+0x5b]
cmp al,[ebp-0x1]
jnz 0x5ca4e
test byte [ebx+0x1c],0x10
jnz 0x5ca4e
cmp byte [ebx+0x57],0x0
jz 0x5ca4e
cmp byte [ebx+0x273],0x1
jz 0x5ca4e
mov eax,[ebp+0x8]
cmp ebx,[eax-0xc]
jz 0x5ca4e
xor esi,esi
jmp short 0x5ca16
inc esi
mov eax,[ebp+0x8]
mov eax,[eax-0x8]
cmp esi,[eax+0x8]
jnl 0x5ca3f
mov eax,[ebp+0x8]
mov eax,[eax-0x8]
mov edx,esi
call dword 0x13e7c
mov edx,eax
movzx ecx,byte [ebp-0x1]
mov eax,ebx
call dword 0x5c700
test al,al
jz 0x5ca15
mov eax,[ebp+0x8]
mov eax,[eax-0x8]
mov ecx,ebx
mov edx,esi
call dword 0x13ef8
inc dword [ebp-0x8]
dec edi
jnz 0x5c9d5
mov eax,[ebp+0x8]
mov eax,[eax-0x8]
mov edi,[eax+0x8]
dec edi
test edi,edi
jl 0x5ca8c
inc edi
mov dword [ebp-0x8],0x0
mov eax,[ebp+0x8]
push eax
mov eax,[ebp+0x8]
mov eax,[eax-0x8]
mov edx,[ebp-0x8]
call dword 0x13e7c
movzx edx,byte [ebp-0x1]
call dword 0x5c788
pop ecx
inc dword [ebp-0x8]
dec edi
jnz 0x5ca6a
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
ret
nop
push ebp
mov ebp,esp
push ebx
push esi
mov bl,0x1
mov eax,[ebp+0x8]
mov eax,[eax-0x10]
call dword 0x5c058
mov esi,eax
dec esi
cmp esi,byte +0x0
jl 0x5cae2
mov eax,[ebp+0x8]
mov eax,[eax-0x10]
mov edx,esi
call dword 0x5c044
cmp dword [eax+0x30],byte +0x0
jnz 0x5cadc
test byte [eax+0x1c],0x10
jnz 0x5cadc
cmp byte [eax+0x5b],0x0
jz 0x5cadc
cmp byte [eax+0x57],0x0
jz 0x5cadc
cmp byte [eax+0x273],0x1
jnz 0x5cae4
dec esi
cmp esi,byte -0x1
jnz 0x5caae
xor ebx,ebx
mov eax,ebx
pop esi
pop ebx
pop ebp
ret
mov eax,eax
push ebp
mov ebp,esp
add esp,byte -0x10
mov [ebp-0x4],ecx
mov [ebp-0xc],edx
mov [ebp-0x10],eax
push ebp
call dword 0x5ca94
pop ecx
test al,al
jz 0x5cb6d
mov dl,0x1
mov eax,[0x41294c]
call dword 0x2bc0
mov [ebp-0x8],eax
xor eax,eax
push ebp
push dword 0x45db66
push dword [fs:eax]
mov [fs:eax],esp
push ebp
mov al,0x1
call dword 0x5c944
pop ecx
push ebp
mov al,0x2
call dword 0x5c944
pop ecx
push ebp
mov al,0x3
call dword 0x5c944
pop ecx
push ebp
mov al,0x4
call dword 0x5c944
pop ecx
push ebp
mov al,0x5
call dword 0x5c944
pop ecx
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x45db6d
mov eax,[ebp-0x8]
call dword 0x2bf0
ret
jmp dword 0x3384
jmp short 0x5cb5d
mov esp,ebp
pop ebp
ret
lea eax,[eax+0x0]
push ebp
mov ebp,esp
add esp,byte -0x14
push ebx
mov ebx,edx
mov [ebp-0x4],eax
mov eax,[ebp-0x4]
cmp word [eax+0x8c],byte +0x0
jz 0x5cb9a
mov eax,[ebp-0x4]
or word [eax+0x8e],byte +0x10
jmp short 0x5cbf4
mov eax,[ebp-0x4]
call dword 0x5c6d0
xor eax,eax
push ebp
push dword 0x45dbed
push dword [fs:eax]
mov [fs:eax],esp
push byte +0x0
lea eax,[ebp-0x14]
push eax
push byte +0x0
push byte +0x30
call dword 0x6350
lea ecx,[ebp-0x14]
mov edx,ebx
mov eax,[ebp-0x4]
call dword 0x5caec
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x45dbf4
mov eax,[ebp-0x4]
and word [eax+0x8e],byte -0x11
mov eax,[ebp-0x4]
call dword 0x5c6d8
ret
jmp dword 0x3384
jmp short 0x5cbd9
pop ebx
mov esp,ebp
pop ebp
ret
lea eax,[eax+0x0]
add eax,byte +0x30
call dword 0xd0e8
ret
lea eax,[eax+0x0]
push ebx
push esi
mov esi,edx
mov ebx,eax
test ebx,ebx
jz 0x5cc34
cmp dword [ebx+0x84],byte +0x0
jnz 0x5cc20
mov ebx,[ebx+0x30]
jmp short 0x5cc30
mov eax,esi
mov edx,[ebx+0x84]
call dword 0x3a70
pop esi
pop ebx
ret
test ebx,ebx
jnz 0x5cc12
mov eax,esi
call dword 0x3a1c
pop esi
pop ebx
ret
mov eax,eax
jmp short 0x5cc45
mov eax,[eax+0x30]
test eax,eax
jz 0x5cc52
cmp byte [eax+0x8d],0x0
jz 0x5cc42
test eax,eax
jz 0x5cc5e
test byte [eax+0x1c],0x10
jz 0x5cc5e
xor eax,eax
ret
nop
push ebp
mov ebp,esp
push ebx
push esi
push edi
cmp dword [dword 0x46dc9c],byte +0x0
jz 0x5ccab
xor eax,eax
push ebp
push dword 0x45dc91
push dword [fs:eax]
mov [fs:eax],esp
mov eax,[0x46dc9c]
call dword 0x5f98c
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
jmp short 0x5ccab
jmp dword 0x30d0
mov edx,[dword 0x46dc9c]
mov eax,[0x46dc9c]
call dword 0x5ecfc
call dword 0x34e0
pop edi
pop esi
pop ebx
pop ebp
ret 0x10
mov eax,eax
push ebp
mov ebp,esp
add esp,byte -0x8
push ebx
mov ebx,0x46dc9c
call dword 0x5af8
mov [0x46dcb0],eax
jmp short 0x5ccf5
cmp dword [ebx],byte +0x0
jz 0x5ccf5
mov eax,[ebx]
cmp dword [eax+0x60],byte +0x0
jz 0x5ccf5
lea eax,[ebp-0x8]
push eax
call dword 0x5fd8
lea eax,[ebp-0x8]
call dword 0x3e7cc
test eax,eax
jnz 0x5ccf5
mov eax,[ebx]
call dword 0x5fa38
push byte +0x64
mov eax,[0x46dcb4]
push eax
call dword 0x5c18
cmp eax,0x102
jz 0x5cccc
pop ebx
pop ecx
pop ecx
pop ebp
ret 0x4
push ebp
mov ebp,esp
push ebx
push esi
push edi
mov esi,[ebp+0x10]
mov ebx,[ebp+0x8]
push esi
mov eax,[ebp+0xc]
push eax
push ebx
mov eax,[0x46dcb8]
push eax
call dword 0x5e70
mov edi,eax
test ebx,ebx
jl 0x5cd48
cmp dword [dword 0x46dc9c],byte +0x0
jz 0x5cd48
mov edx,esi
mov eax,[0x46dc9c]
call dword 0x5e6b4
mov eax,edi
pop edi
pop esi
pop ebx
pop ebp
ret 0xc
lea eax,[eax+0x0]
push ecx
mov eax,[0x46dc9c]
cmp byte [eax+0xad],0x0
jnz 0x5cdc5
cmp dword [dword 0x46dcb8],byte +0x0
jnz 0x5cd86
call dword 0x5af8
push eax
push byte +0x0
mov eax,0x45dd10
push eax
push byte +0x3
call dword 0x6330
mov [0x46dcb8],eax
cmp dword [dword 0x46dcb4],byte +0x0
jnz 0x5cda1
push byte +0x0
push byte +0x0
push byte +0x0
push byte +0x0
call dword 0x5a88
mov [0x46dcb4],eax
cmp dword [dword 0x46dcbc],byte +0x0
jnz 0x5cdc5
push esp
push byte +0x0
push byte +0x0
push dword 0x45dcb4
push dword 0x3e8
push byte +0x0
call dword 0x5aa0
mov [0x46dcbc],eax
pop edx
ret
nop
cmp dword [dword 0x46dcb8],byte +0x0
jz 0x5cddc
mov eax,[0x46dcb8]
push eax
call dword 0x6370
xor eax,eax
mov [0x46dcb8],eax
cmp dword [dword 0x46dcbc],byte +0x0
jz 0x5ce23
mov eax,[0x46dcb4]
push eax
call dword 0x5be8
call dword 0x5af8
cmp eax,[dword 0x46dcb0]
jz 0x5ce11
push byte -0x1
mov eax,[0x46dcbc]
push eax
call dword 0x5c18
mov eax,[0x46dcbc]
push eax
call dword 0x5a70
xor eax,eax
mov [0x46dcbc],eax
ret
add esp,byte -0x8
mov dword [esp],0x8
push byte +0x0
lea eax,[esp+0x4]
push eax
push byte +0x8
push byte +0x48
call dword 0x6350
test eax,eax
jz 0x5ce4d
cmp dword [esp+0x4],byte +0x0
setnz al
pop ecx
pop edx
ret
xor eax,eax
pop ecx
pop edx
ret
mov eax,eax
add esp,byte -0x8
mov dword [esp],0x8
cmp al,0x1
cmc
sbb eax,eax
mov [esp+0x4],eax
push byte +0x0
lea eax,[esp+0x4]
push eax
push byte +0x8
push byte +0x49
call dword 0x6350
pop ecx
pop edx
ret
mov eax,eax
push ebx
push esi
push edi
mov edi,edx
mov esi,eax
call dword 0x5ce24
mov ebx,eax
test bl,bl
jz 0x5ce95
xor eax,eax
call dword 0x5ce54
push edi
push esi
call dword 0x6348
test bl,bl
jz 0x5cea7
mov al,0x1
call dword 0x5ce54
pop edi
pop esi
pop ebx
ret
nop
push ebx
push esi
push edi
mov edi,eax
mov eax,[edi+0x58]
mov ebx,[eax+0x8]
dec ebx
test ebx,ebx
jl 0x5ced2
inc ebx
xor esi,esi
mov eax,[edi+0x58]
mov edx,esi
call dword 0x13e7c
call dword 0x2bf0
inc esi
dec ebx
jnz 0x5cebf
mov eax,[0x46dca0]
mov eax,[eax+0x58]
mov edx,[eax]
call dword [edx+0x8]
pop edi
pop esi
pop ebx
ret
nop
call dword 0x5ceac
mov eax,[0x46dca0]
mov eax,[eax+0x58]
push eax
mov eax,0x458604
push eax
push byte +0x0
push byte +0x0
mov eax,[0x468cbc]
mov eax,[eax]
call eax
ret
mov eax,eax
push ebx
push esi
push edi
push ebp
mov edi,eax
xor ebp,ebp
mov eax,edi
call dword 0x5c00c
mov esi,eax
dec esi
test esi,esi
jl 0x5cf44
inc esi
xor ebx,ebx
mov edx,ebx
mov eax,edi
call dword 0x5bff8
call dword 0x5bd6c
test al,al
jz 0x5cf40
mov edx,ebx
mov eax,edi
call dword 0x5bff8
mov ebp,eax
jmp short 0x5cf7f
inc ebx
dec esi
jnz 0x5cf21
mov eax,edi
call dword 0x5cee4
mov eax,edi
call dword 0x5c00c
mov esi,eax
dec esi
test esi,esi
jl 0x5cf7f
inc esi
xor ebx,ebx
mov edx,ebx
mov eax,edi
call dword 0x5bff8
call dword 0x5bd6c
test al,al
jz 0x5cf7b
mov edx,ebx
mov eax,edi
call dword 0x5bff8
mov ebp,eax
jmp short 0x5cf7f
inc ebx
dec esi
jnz 0x5cf5c
mov eax,ebp
pop ebp
pop edi
pop esi
pop ebx
ret
mov eax,eax
push esp
inc ecx
jo 0x5cffc
insb
imul esp,[ebx+0x61],dword 0x6e6f6974
add [eax],al
add [eax],al
push ebp
mov ebp,esp
add esp,0xfffffefc
push ebx
push esi
test dl,dl
jz 0x5cfaf
add esp,byte -0x10
call dword 0x2f14
mov [ebp-0x1],dl
mov ebx,eax
xor edx,edx
mov eax,ebx
call dword 0x1a59c
mov eax,[0x468ca4]
cmp word [eax+0x2],byte +0x0
jnz 0x5cfd7
mov eax,[0x468ca4]
mov [eax+0x4],ebx
mov dword [eax],0x45fcfc
mov eax,[0x468d50]
cmp word [eax+0x2],byte +0x0
jnz 0x5cff1
mov eax,[0x468d50]
mov [eax+0x4],ebx
mov dword [eax],0x45ff08
mov byte [ebx+0x34],0x0
mov dl,0x1
mov eax,[0x41294c]
call dword 0x2bc0
mov [ebx+0x90],eax
mov dl,0x1
mov eax,[0x41294c]
call dword 0x2bc0
mov [ebx+0x98],eax
mov dl,0x1
mov eax,[0x41294c]
call dword 0x2bc0
mov [ebx+0xb0],eax
xor eax,eax
mov [ebx+0x60],eax
xor eax,eax
mov [ebx+0x84],eax
mov dword [ebx+0x5c],0xff000018
mov dword [ebx+0x78],0x1f4
mov byte [ebx+0x7c],0x1
xor eax,eax
mov [ebx+0x80],eax
mov dword [ebx+0x74],0x9c4
mov byte [ebx+0x88],0x0
mov byte [ebx+0xa5],0x1
mov byte [ebx+0xbc],0x1
mov dl,0x1
mov eax,[0x41fc80]
call dword 0x2628c
mov esi,eax
mov [ebx+0xa0],esi
push dword 0x45e1a8
mov eax,[0x468bcc]
mov eax,[eax]
push eax
call dword 0x61c0
mov edx,eax
mov eax,esi
call dword 0x26660
mov eax,[ebx+0xa0]
mov [eax+0x14],ebx
mov dword [eax+0x10],0x4605cc
push dword 0x100
lea eax,[ebp-0x101]
push eax
mov eax,[0x468bcc]
mov eax,[eax]
push eax
call dword 0x5b40
lea eax,[ebp-0x101]
push eax
lea eax,[ebp-0x101]
push eax
call dword 0x61f0
lea eax,[ebp-0x101]
mov dl,0x5c
call dword 0xc354
test eax,eax
jz 0x5d0f8
lea edx,[eax+0x1]
lea eax,[ebp-0x101]
call dword 0x8420
lea eax,[ebp-0x101]
mov dl,0x2e
call dword 0xc388
test eax,eax
jz 0x5d10c
mov byte [eax],0x0
lea eax,[ebp-0x101]
push eax
call dword 0x5e88
push eax
call dword 0x5e60
lea eax,[ebx+0x8c]
lea edx,[ebp-0x101]
mov ecx,0x100
call dword 0x3c8c
mov byte [ebx+0xd4],0x0
push ebx
push dword 0x45f754
call dword 0x1b718
mov [ebx+0xc8],eax
mov eax,[0x468acc]
cmp byte [eax],0x0
jnz 0x5d15d
mov eax,ebx
call dword 0x5d2ec
mov byte [ebx+0x59],0x1
mov byte [ebx+0x5a],0x1
mov byte [ebx+0x5b],0x1
mov byte [ebx+0xa6],0x1
xor eax,eax
mov [ebx+0xa8],eax
mov eax,ebx
call dword 0x5f7e0
mov eax,ebx
call dword 0x60344
mov eax,ebx
cmp byte [ebp-0x1],0x0
jz 0x5d19d
call dword 0x2f6c
pop dword [dword fs:0x0]
add esp,byte +0xc
mov eax,ebx
pop esi
pop ebx
mov esp,ebp
pop ebp
ret
add [eax],al
add [ebp+0x41],cl
dec ecx
dec esi
dec ecx
inc ebx
dec edi
dec esi
add [eax],al
add [eax],al
push ebx
push esi
add esp,byte -0x10
call dword 0x2fbc
mov ebx,edx
mov esi,eax
mov eax,esi
call dword 0x60354
mov [esp+0x4],esi
mov dword [esp],0x45fcfc
mov eax,[0x468ca4]
mov eax,[eax]
cmp eax,[esp]
jnz 0x5d1ec
mov eax,[0x468ca4]
xor edx,edx
mov [eax],edx
mov [eax+0x4],edx
mov [esp+0xc],esi
mov dword [esp+0x8],0x45ff08
mov eax,[0x468d50]
mov eax,[eax]
cmp eax,[esp+0x8]
jnz 0x5d211
mov eax,[0x468d50]
xor edx,edx
mov [eax],edx
mov [eax+0x4],edx
mov eax,[esi+0xa8]
test eax,eax
jz 0x5d221
push eax
call dword 0x5ad0
mov byte [esi+0xa5],0x0
mov eax,esi
call dword 0x5fa38
xor edx,edx
mov eax,esi
call dword 0x5f2f4
mov edx,ebx
and dl,0xfc
mov eax,esi
call dword 0x1a5e8
mov eax,[esi+0xc8]
test eax,eax
jz 0x5d253
call dword 0x1b7cc
push esi
push dword 0x45e9b8
mov eax,esi
call dword 0x5e99c
mov eax,[esi+0x30]
test eax,eax
jz 0x5d293
cmp byte [esi+0xac],0x0
jz 0x5d293
mov edx,[dword 0x468c68]
cmp byte [edx],0x0
jz 0x5d28a
push byte +0x0
push byte +0x1
push dword 0x80
push eax
call dword 0x6278
mov eax,[esi+0x30]
push eax
call dword 0x5f00
cmp dword [esi+0x4c],byte +0x0
jz 0x5d2a1
lea eax,[esi+0x4c]
call dword 0x5270
mov eax,[esi+0x40]
test eax,eax
jz 0x5d2ad
call dword 0x1b6f4
mov eax,[esi+0xb0]
call dword 0x2bf0
mov eax,[esi+0x90]
call dword 0x2bf0
mov eax,[esi+0x98]
call dword 0x2bf0
mov eax,[esi+0xa0]
call dword 0x2bf0
test bl,bl
jng 0x5d2e4
mov eax,esi
call dword 0x2f64
add esp,byte +0x10
pop esi
pop ebx
ret
mov eax,eax
push ebp
mov ebp,esp
add esp,byte -0x2c
push ebx
xor edx,edx
mov [ebp-0x2c],edx
mov ebx,eax
xor eax,eax
push ebp
push dword 0x45e485
push dword [fs:eax]
mov [fs:eax],esp
cmp byte [ebx+0xac],0x0
jnz dword 0x5d46f
mov eax,[0x468d98]
cmp byte [eax],0x0
jnz dword 0x5d46f
push ebx
push dword 0x45eb28
call dword 0x1b65c
mov [ebx+0x40],eax
mov eax,0x406ed8
mov [0x468874],eax
lea eax,[ebp-0x28]
push eax
mov eax,[0x468894]
push eax
mov eax,[0x46b7f4]
push eax
call dword 0x5fb0
test eax,eax
jnz 0x5d38e
mov eax,[0x46b7f4]
mov [0x468880],eax
push dword 0x468870
call dword 0x6230
test ax,ax
jnz 0x5d38e
lea edx,[ebp-0x2c]
mov eax,[0x468b38]
call dword 0x5750
mov ecx,[ebp-0x2c]
mov dl,0x1
mov eax,[0x412890]
call dword 0xb450
call dword 0x3464
push dword 0x84ca0000
push byte +0x0
mov eax,[0x468be8]
mov eax,[eax]
call eax
sar eax,1
jns 0x5d3a5
adc eax,byte +0x0
push eax
push byte +0x1
mov eax,[0x468be8]
mov eax,[eax]
call eax
sar eax,1
jns 0x5d3b8
adc eax,byte +0x0
push eax
push byte +0x0
push byte +0x0
push byte +0x0
push byte +0x0
mov eax,[0x46b7f4]
push eax
push byte +0x0
mov eax,[ebx+0x8c]
call dword 0x3eac
mov ecx,eax
mov edx,[dword 0x468894]
xor eax,eax
call dword 0x63a8
mov [ebx+0x30],eax
mov byte [ebx+0xac],0x1
mov eax,[ebx+0x40]
push eax
push byte -0x4
mov eax,[ebx+0x30]
push eax
call dword 0x6308
mov eax,[0x468c68]
cmp byte [eax],0x0
jz 0x5d431
mov eax,ebx
call dword 0x5e1d0
push eax
push byte +0x1
push dword 0x80
mov eax,[ebx+0x30]
push eax
call dword 0x6278
mov eax,ebx
call dword 0x5e1d0
push eax
push byte -0xe
mov eax,[ebx+0x30]
push eax
call dword 0x62a0
push byte +0x0
mov eax,[ebx+0x30]
push eax
call dword 0x60d0
mov ebx,eax
push byte +0x0
push dword 0xf030
push ebx
call dword 0x5ee0
push byte +0x0
push dword 0xf000
push ebx
call dword 0x5ee0
mov eax,[0x468c68]
cmp byte [eax],0x0
jz 0x5d46f
push byte +0x0
push dword 0xf010
push ebx
call dword 0x5ee0
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x45e48c
lea eax,[ebp-0x2c]
call dword 0x3a1c
ret
jmp dword 0x3384
jmp short 0x5d47c
pop ebx
mov esp,ebp
pop ebp
ret
lea eax,[eax+0x0]
push ebx
push esi
mov ecx,0x46dca0
cmp edx,[eax+0x44]
jnz 0x5d4a5
xor ebx,ebx
mov [eax+0x44],ebx
cmp edx,[eax+0x48]
jnz 0x5d4af
xor ebx,ebx
mov [eax+0x48],ebx
mov ebx,[ecx]
cmp edx,[ebx+0x64]
jnz 0x5d4bd
mov ebx,[ecx]
xor esi,esi
mov [ebx+0x64],esi
mov ebx,[ecx]
cmp edx,[ebx+0x68]
jnz 0x5d4d2
mov ebx,[ecx]
xor esi,esi
mov [ebx+0x68],esi
mov ebx,[ecx]
xor esi,esi
mov [ebx+0x6c],esi
mov ebx,[ecx]
cmp edx,[ebx+0x78]
jnz 0x5d4e0
mov ebx,[ecx]
xor esi,esi
mov [ebx+0x78],esi
cmp edx,[eax+0x60]
jnz 0x5d4ea
xor edx,edx
mov [eax+0x60],edx
mov eax,[ecx]
call dword 0x5c060
pop esi
pop ebx
ret
push ebp
mov ebp,esp
push ebx
push esi
push edi
mov ebx,[ebp+0x8]
or esi,byte -0x1
cmp dword [dword 0x46dc9c],byte +0x0
jz 0x5d563
push byte +0x4
push ebx
call dword 0x60e8
mov edx,[dword 0x46dc9c]
cmp eax,[edx+0x30]
jnz 0x5d563
push byte -0x14
push ebx
call dword 0x60f8
test al,0x8
jz 0x5d55c
mov eax,[0x46dc9c]
mov edi,[eax+0x44]
test edi,edi
jz 0x5d548
mov eax,[ebp+0xc]
cmp byte [eax+0x4],0x0
jnz 0x5d548
mov eax,edi
call dword 0x4831c
cmp ebx,eax
jz 0x5d55c
mov eax,[0x46dc9c]
mov eax,[eax+0x90]
mov edx,ebx
call dword 0x13d24
jmp short 0x5d563
mov eax,[ebp+0xc]
mov [eax],ebx
xor esi,esi
mov eax,esi
pop edi
pop esi
pop ebx
pop ebp
ret 0x8
push ebx
push esi
add esp,byte -0x8
mov ebx,eax
mov eax,[ebx+0x30]
test eax,eax
jz dword 0x5d60b
cmp dword [ebx+0x94],byte +0x0
jnz 0x5d605
mov [esp],eax
mov [esp+0x4],dl
mov eax,esp
push eax
push dword 0x45e4f4
call dword 0x5f78
mov eax,[ebx+0x90]
cmp dword [eax+0x8],byte +0x0
jz 0x5d605
push byte +0x3
mov eax,[esp+0x4]
push eax
call dword 0x60e8
mov esi,eax
mov [esp],esi
push byte -0x14
push esi
call dword 0x60f8
test al,0x8
jz 0x5d5cb
mov dword [esp],0xfffffffe
mov eax,[ebx+0x90]
mov esi,[eax+0x8]
dec esi
cmp esi,byte +0x0
jl 0x5d605
push dword 0x213
push byte +0x0
push byte +0x0
push byte +0x0
push byte +0x0
mov eax,[esp+0x14]
push eax
mov edx,esi
mov eax,[ebx+0x90]
call dword 0x13e7c
push eax
call dword 0x6320
dec esi
cmp esi,byte -0x1
jnz 0x5d5da
inc dword [ebx+0x94]
pop ecx
pop edx
pop esi
pop ebx
ret
push ebx
inc dword [eax+0xc4]
cmp dword [eax+0xc4],byte +0x1
jnz 0x5d63a
cmp word [eax+0x10a],byte +0x0
jz 0x5d63a
mov ebx,eax
mov edx,eax
mov eax,[ebx+0x10c]
call dword [ebx+0x108]
pop ebx
ret
push ebx
dec dword [eax+0xc4]
cmp dword [eax+0xc4],byte +0x0
jnz 0x5d666
cmp word [eax+0x112],byte +0x0
jz 0x5d666
mov ebx,eax
mov edx,eax
mov eax,[ebx+0x114]
call dword [ebx+0x110]
pop ebx
ret
xor edx,edx
call dword 0x5d56c
ret
mov dl,0x1
call dword 0x5d56c
ret
push ebx
push esi
push edi
mov edi,edx
mov ebx,eax
mov eax,[ebx+0xd0]
call dword 0x49d8
mov edx,eax
test edx,edx
jl 0x5d6c1
inc edx
xor eax,eax
lea esi,[eax+eax*2]
mov ecx,[ebx+0xd0]
cmp edi,[ecx+esi*4+0x4]
jnz 0x5d6bd
mov edx,[ebx+0xd0]
xor ecx,ecx
mov [edx+esi*4+0x4],ecx
mov eax,[ebx+0xd0]
mov dword [eax+esi*4],0xffffffff
jmp short 0x5d6c1
inc eax
dec edx
jnz 0x5d693
pop edi
pop esi
pop ebx
ret
lea eax,[eax+0x0]
push ebx
push esi
mov ebx,eax
cmp dword [ebx+0x30],byte +0x0
jz 0x5d72c
cmp dword [ebx+0x94],byte +0x0
jng 0x5d72c
dec dword [ebx+0x94]
cmp dword [ebx+0x94],byte +0x0
jnz 0x5d72c
mov eax,[ebx+0x90]
mov esi,[eax+0x8]
dec esi
cmp esi,byte +0x0
jl 0x5d721
push dword 0x213
push byte +0x0
push byte +0x0
push byte +0x0
push byte +0x0
push byte -0x1
mov edx,esi
mov eax,[ebx+0x90]
call dword 0x13e7c
push eax
call dword 0x6320
dec esi
cmp esi,byte -0x1
jnz 0x5d6f9
mov eax,[ebx+0x90]
mov edx,[eax]
call dword [edx+0x8]
pop esi
pop ebx
ret
nop
xor al,0xe7
inc ebp
add [ecx],dl
add ebp,[esi]
aaa
xor [eax+eax],eax
add [eax],al
add [eax],al
add [eax],al
add eax,[eax]
add [eax],al
jo 0x5d7b0
inc eax
add [dword 0x6d726f46],al
jnc 0x5d6e0
push ebp
mov ebp,esp
push ecx
push ebx
push esi
push edi
mov esi,[ebp+0x8]
or edi,byte -0x1
push byte +0x4
push esi
call dword 0x60e8
mov ebx,eax
test ebx,ebx
jz 0x5d781
mov eax,[0x46dc9c]
cmp ebx,[eax+0x30]
jz 0x5d781
lea eax,[ebp-0x4]
push eax
push ebx
call dword 0x6128
jmp short 0x5d786
xor eax,eax
mov [ebp-0x4],eax
call dword 0x5af0
cmp eax,[ebp-0x4]
jnz 0x5d7b8
mov eax,[0x46dc9c]
mov eax,[eax+0x98]
mov edx,ebx
call dword 0x13ed8
test eax,eax
jnl 0x5d7b8
mov eax,[0x46dc9c]
mov eax,[eax+0x98]
mov edx,ebx
call dword 0x13d24
test ebx,ebx
jz 0x5d817
mov eax,[0x46dc9c]
cmp esi,[eax+0x30]
jz 0x5d817
mov eax,[0x46dc9c]
cmp ebx,[eax+0x30]
jnz 0x5d817
cmp esi,[ebp+0xc]
jz 0x5d817
push esi
call dword 0x6198
test eax,eax
jz 0x5d817
mov eax,[0x46dcc0]
call dword 0x49d0
inc eax
push eax
mov eax,0x46dcc0
mov ecx,0x1
mov edx,[dword 0x45e730]
call dword 0x4b8c
add esp,byte +0x4
mov eax,[0x46dcc0]
call dword 0x49d0
mov edx,[dword 0x46dcc0]
mov [edx+eax*4-0x4],esi
mov eax,edi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
ret 0x8
lea eax,[eax+0x0]
push ebx
push esi
push edi
mov ebx,edx
mov esi,eax
mov eax,[0x46dc9c]
cmp dword [eax+0x30],byte +0x0
jz dword 0x5d981
test bl,bl
jnz dword 0x5d8d2
cmp dword [esi+0x9c],byte +0x0
jnz 0x5d8c7
mov eax,esi
call dword 0x601c0
push eax
push dword 0x45e750
call dword 0x5f78
cmp dword [esi+0x44],byte +0x0
jz 0x5d898
mov eax,[0x46dc9c]
call dword 0x608a0
test al,al
jz 0x5d898
mov eax,[0x46dcc0]
call dword 0x49d8
mov edi,eax
cmp edi,byte +0x0
jl 0x5d898
push byte +0x0
mov eax,[0x46dcc0]
mov eax,[eax+edi*4]
push eax
call dword 0x6348
dec edi
cmp edi,byte -0x1
jnz 0x5d882
mov eax,[esi+0x98]
mov edi,[eax+0x8]
dec edi
cmp edi,byte +0x0
jl 0x5d8c7
cmp bl,0x1
cmc
sbb eax,eax
push eax
mov edx,edi
mov eax,[esi+0x98]
call dword 0x13e7c
push eax
call dword 0x6338
dec edi
cmp edi,byte -0x1
jnz 0x5d8a7
inc dword [esi+0x9c]
jmp dword 0x5d981
cmp dword [esi+0x9c],byte +0x0
jng dword 0x5d981
dec dword [esi+0x9c]
cmp dword [esi+0x9c],byte +0x0
jnz dword 0x5d981
cmp dword [esi+0x44],byte +0x0
jz 0x5d92d
mov eax,[0x46dc9c]
call dword 0x608a0
test al,al
jz 0x5d92d
mov eax,[0x46dcc0]
call dword 0x49d8
mov edi,eax
cmp edi,byte +0x0
jl 0x5d92d
push byte +0x5
mov eax,[0x46dcc0]
mov eax,[eax+edi*4]
push eax
call dword 0x6348
dec edi
cmp edi,byte -0x1
jnz 0x5d917
mov eax,[esi+0x98]
mov edi,[eax+0x8]
dec edi
cmp edi,byte +0x0
jl 0x5d95c
cmp bl,0x1
cmc
sbb eax,eax
push eax
mov edx,edi
mov eax,[esi+0x98]
call dword 0x13e7c
push eax
call dword 0x6338
dec edi
cmp edi,byte -0x1
jnz 0x5d93c
mov eax,[esi+0x98]
mov edx,[eax]
call dword [edx+0x8]
push byte +0x0
mov eax,0x46dcc0
mov ecx,0x1
mov edx,[dword 0x45e730]
call dword 0x4b8c
add esp,byte +0x4
pop edi
pop esi
pop ebx
ret
lea eax,[eax+0x0]
mov edx,[dword 0x468eb4]
cmp byte [edx+0xd],0x0
jz 0x5d99a
cmp byte [eax+0x34],0x0
jnz 0x5d99d
xor eax,eax
ret
mov al,0x1
ret
mov edx,[dword 0x468eb4]
cmp byte [edx+0xd],0x0
jz 0x5d9b2
cmp byte [eax+0x34],0x1
jz 0x5d9b5
xor eax,eax
ret
mov al,0x1
ret
push ebx
push esi
push edi
mov esi,edx
mov edi,eax
xor ebx,ebx
mov eax,[esi]
cmp eax,[dword 0x46dca8]
jz 0x5d9d0
cmp eax,byte +0x1a
jnz 0x5da2c
cmp byte [edi+0x59],0x0
jz 0x5d9e5
push dword 0x400
call dword 0x5bf8
call dword 0xc4e8
cmp byte [edi+0x5a],0x0
jz 0x5d9f5
mov eax,[0x46dca0]
call dword 0x5c57c
mov eax,[esi]
cmp eax,[dword 0x46dca8]
jnz 0x5da2c
mov eax,[0x46dca0]
call dword 0x5cbfc
mov eax,edi
call dword 0x608a0
test al,al
jz 0x5da2c
mov cl,0x1
mov dl,0x1
mov eax,[edi+0x30]
call dword 0x5387c
mov cl,0x1
xor edx,edx
mov eax,[edi+0x30]
call dword 0x5387c
mov eax,ebx
pop edi
pop esi
pop ebx
ret
mov eax,eax
push ebp
mov ebp,esp
push byte +0x0
push ebx
push esi
mov esi,edx
mov ebx,eax
xor eax,eax
push ebp
push dword 0x45ea91
push dword [fs:eax]
mov [fs:eax],esp
cmp word [ebx+0x162],byte +0x0
jz 0x5da7b
lea eax,[ebp-0x4]
mov edx,[esi+0x8]
call dword 0x3c14
mov eax,[ebp-0x4]
push eax
lea eax,[esi+0xc]
push eax
mov ecx,[esi+0x4]
mov edx,ebx
mov eax,[ebx+0x164]
call dword [ebx+0x160]
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x45ea98
lea eax,[ebp-0x4]
call dword 0x3a1c
ret
jmp dword 0x3384
jmp short 0x5da88
pop esi
pop ebx
pop ecx
pop ebp
ret
lea eax,[eax+0x0]
push ebp
mov ebp,esp
mov eax,[ebp+0x8]
mov eax,[eax-0x8]
mov eax,[eax+0x8]
push eax
mov eax,[ebp+0x8]
mov eax,[eax-0x8]
mov eax,[eax+0x4]
push eax
mov eax,[ebp+0x8]
mov eax,[eax-0x8]
mov eax,[eax]
push eax
mov eax,[ebp+0x8]
mov eax,[eax-0x4]
mov eax,[eax+0x30]
push eax
call dword 0x5ed8
mov edx,[ebp+0x8]
mov edx,[edx-0x8]
mov [edx+0xc],eax
pop ebp
ret
mov eax,eax
push ebp
mov ebp,esp
add esp,byte -0x40
push ebx
lea eax,[ebp-0x40]
push eax
mov eax,[ebp+0x8]
mov eax,[eax-0x4]
mov eax,[eax+0x30]
push eax
call dword 0x5e68
mov ebx,eax
mov eax,[ebp+0x8]
mov eax,[eax-0x4]
call dword 0x5e1d0
push eax
push byte +0x0
push byte +0x0
push ebx
call dword 0x5f28
lea eax,[ebp-0x40]
push eax
mov eax,[ebp+0x8]
mov eax,[eax-0x4]
mov eax,[eax+0x30]
push eax
call dword 0x5f60
pop ebx
mov esp,ebp
pop ebp
ret
mov eax,eax
push ebp
mov ebp,esp
add esp,byte -0x8
push ebx
push esi
push edi
mov [ebp-0x8],edx
mov [ebp-0x4],eax
xor edx,edx
push ebp
push dword 0x45f1b3
push dword [fs:edx]
mov [fs:edx],esp
mov eax,[ebp-0x8]
xor edx,edx
mov [eax+0xc],edx
mov eax,[ebp-0x4]
mov eax,[eax+0xb0]
mov ebx,[eax+0x8]
dec ebx
test ebx,ebx
jl 0x5db90
inc ebx
xor esi,esi
mov eax,[ebp-0x4]
mov eax,[eax+0xb0]
mov edx,esi
call dword 0x13e7c
mov edi,eax
mov edx,[ebp-0x8]
mov eax,[edi+0x4]
call dword [edi]
test al,al
jz 0x5db8c
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
jmp dword 0x5e1c8
inc esi
dec ebx
jnz 0x5db61
mov edx,[ebp-0x8]
mov eax,[ebp-0x4]
call dword 0x5d9b8
mov ebx,[ebp-0x8]
mov ebx,[ebx]
mov eax,ebx
cmp eax,byte +0x53
jg dword 0x5dc52
jz dword 0x5e0d6
cmp eax,byte +0x11
jg 0x5dc10
jz dword 0x5defb
cmp eax,byte +0x10
ja dword 0x5e1a2
jmp dword [eax*4+0x45ebcc]
cdq
int1
inc ebp
add [edx-0x5dffba0f],ah
int1
inc ebp
add [edx-0x5dffba0f],ah
int1
inc ebp
add [ebx],ch
in eax,dx
inc ebp
add [edx-0x54ffba0f],ah
in eax,dx
inc ebp
add [edx-0x5dffba0f],ah
int1
inc ebp
add [ebx],dh
out dx,al
inc ebp
add [edx-0x5dffba0f],ah
int1
inc ebp
add [edx-0x5dffba0f],ah
int1
inc ebp
add [ebp+ebp*8+0x45],bl
add [ebp+ebp*8+0x45],al
add [ebx+0x267f1cf8],al
jz dword 0x5ddcc
sub eax,byte +0x14
jz dword 0x5dd83
sub eax,byte +0x2
jz dword 0x5dedf
sub eax,byte +0x4
jz dword 0x5e154
jmp dword 0x5e1a2
sub eax,byte +0x1d
jz dword 0x5e17a
sub eax,byte +0x1a
jz dword 0x5dd98
jmp dword 0x5e1a2
cmp eax,0xb017
jg 0x5dca8
jz dword 0x5df4d
cmp eax,0xb000
jg 0x5dc8f
jz dword 0x5dfe6
sub eax,0x112
jz 0x5dcea
add eax,byte -0x20
sub eax,byte +0x7
jc dword 0x5deb3
sub eax,0x1e1
jz dword 0x5e18d
jmp dword 0x5e1a2
sub eax,0xb001
jz dword 0x5e05f
sub eax,byte +0x15
jz dword 0x5df2b
jmp dword 0x5e1a2
cmp eax,0xb020
jg 0x5dcce
jz dword 0x5e0f0
sub eax,0xb01a
jz dword 0x5e098
sub eax,byte +0x5
jz dword 0x5e0d6
jmp dword 0x5e1a2
sub eax,0xb031
jz dword 0x5e129
add eax,byte -0xe
sub eax,byte +0x2
jc dword 0x5df0a
jmp dword 0x5e1a2
mov eax,[ebp-0x8]
mov eax,[eax+0x4]
and eax,0xfff0
sub eax,0xf020
jz 0x5dd05
sub eax,0x100
jz 0x5dd12
jmp short 0x5dd1f
mov eax,[ebp-0x4]
call dword 0x5e1ec
jmp dword 0x5e1a9
mov eax,[ebp-0x4]
call dword 0x5e2cc
jmp dword 0x5e1a9
push ebp
call dword 0x5daa0
pop ecx
jmp dword 0x5e1a9
mov eax,[ebp-0x8]
cmp dword [eax+0x4],byte +0x1
jnz dword 0x5e1a9
mov byte [dword 0x46dcac],0x1
jmp dword 0x5e1a9
mov eax,[ebp-0x4]
mov eax,[eax+0x44]
test eax,eax
jz dword 0x5e1a9
call dword 0x5abe8
jmp dword 0x5e1a9
mov eax,[ebp-0x4]
mov eax,[eax+0x30]
call dword 0x53800
test eax,eax
jz 0x5dd77
push ebp
call dword 0x5dadc
pop ecx
jmp dword 0x5e1a9
push ebp
call dword 0x5daa0
pop ecx
jmp dword 0x5e1a9
mov eax,[ebp-0x8]
mov dword [eax],0x27
push ebp
call dword 0x5daa0
pop ecx
jmp dword 0x5e1a9
mov eax,[ebp-0x4]
call dword 0x5e1d0
mov edx,[ebp-0x8]
mov [edx+0xc],eax
jmp dword 0x5e1a9
push byte +0x0
push byte +0x0
push dword 0xb01a
mov eax,[ebp-0x4]
mov eax,[eax+0x30]
push eax
call dword 0x6210
push ebp
call dword 0x5daa0
pop ecx
jmp dword 0x5e1a9
push ebp
call dword 0x5daa0
pop ecx
mov eax,[ebp-0x8]
cmp dword [eax+0x4],byte +0x1
sbb eax,eax
inc eax
mov edx,[ebp-0x4]
mov [edx+0xa5],al
mov eax,[ebp-0x8]
cmp dword [eax+0x4],byte +0x0
jz 0x5de11
mov eax,[ebp-0x4]
call dword 0x5d6c8
push byte +0x0
push byte +0x0
push dword 0xb000
mov eax,[ebp-0x4]
mov eax,[eax+0x30]
push eax
call dword 0x6210
jmp dword 0x5e1a9
mov eax,[ebp-0x4]
call dword 0x5d668
push byte +0x0
push byte +0x0
push dword 0xb001
mov eax,[ebp-0x4]
mov eax,[eax+0x30]
push eax
call dword 0x6210
jmp dword 0x5e1a9
mov eax,[ebp-0x8]
cmp dword [eax+0x4],byte +0x0
jz 0x5de76
cmp byte [dword 0x468790],0x0
jnz 0x5de6a
mov eax,[ebp-0x4]
call dword 0x5d6c8
mov eax,[ebp-0x4]
mov eax,[eax+0xb4]
test eax,eax
jz 0x5de6a
call dword 0x53a8c
mov eax,[ebp-0x4]
xor edx,edx
mov [eax+0xb4],edx
push ebp
call dword 0x5daa0
pop ecx
jmp dword 0x5e1a9
push ebp
call dword 0x5daa0
pop ecx
mov eax,[ebp-0x4]
cmp dword [eax+0xb4],byte +0x0
jnz 0x5dea6
cmp byte [dword 0x468790],0x0
jnz 0x5dea6
mov eax,[ebp-0x4]
mov eax,[eax+0x30]
call dword 0x539c8
mov edx,[ebp-0x4]
mov [edx+0xb4],eax
mov eax,[ebp-0x4]
call dword 0x5d670
jmp dword 0x5e1a9
mov esi,[ebp-0x8]
mov esi,[esi+0x8]
push esi
mov eax,[ebp-0x8]
mov eax,[eax+0x4]
push eax
mov eax,[ebp-0x8]
add ebx,0xbc00
push ebx
mov eax,[ebp-0x8]
push esi
call dword 0x6278
mov edx,[ebp-0x8]
mov [edx+0xc],eax
jmp dword 0x5e1a9
mov eax,[ebp-0x8]
cmp dword [eax+0x4],byte +0x0
jz dword 0x5e1a9
call dword 0xcc0c
call dword 0x3928
jmp dword 0x5e1a9
mov eax,[ebp-0x8]
mov dword [eax+0xc],0x1
jmp dword 0x5e1a9
mov ecx,[ebp-0x8]
mov ecx,[ecx+0x8]
mov eax,[ebp-0x8]
mov edx,ebx
mov eax,[ebp-0x4]
call dword 0x60200
and eax,byte +0x7f
mov edx,[ebp-0x8]
mov [edx+0xc],eax
jmp dword 0x5e1a9
mov edx,[ebp-0x8]
mov eax,[ebp-0x4]
call dword 0x5e6e8
test al,al
jz dword 0x5e1a9
mov eax,[ebp-0x8]
mov dword [eax+0xc],0x1
jmp dword 0x5e1a9
mov eax,[ebp-0x4]
mov eax,[eax+0x44]
test eax,eax
jz dword 0x5e1a9
mov ebx,eax
mov eax,ebx
call dword 0x4831c
test eax,eax
jz dword 0x5e1a9
mov eax,ebx
call dword 0x4831c
push eax
call dword 0x6188
test eax,eax
jz dword 0x5e1a9
mov eax,ebx
call dword 0x4831c
push eax
call dword 0x6198
test eax,eax
jz dword 0x5e1a9
mov byte [dword 0x468778],0x0
call dword 0x6000
mov esi,eax
mov eax,ebx
call dword 0x4831c
push eax
call dword 0x62b0
mov eax,[ebp-0x8]
mov eax,[eax+0x8]
push eax
mov ecx,[ebp-0x8]
mov ecx,[ecx+0x4]
mov edx,0x112
mov eax,ebx
call dword 0x41588
push esi
call dword 0x62b0
mov byte [dword 0x468778],0x1
mov eax,[ebp-0x8]
mov dword [eax+0xc],0x1
jmp dword 0x5e1a9
mov eax,[ebp-0x4]
cmp word [eax+0x13a],byte +0x0
jz 0x5e005
mov ebx,[ebp-0x4]
mov edx,[ebp-0x4]
mov eax,[ebx+0x13c]
call dword [ebx+0x138]
mov eax,[0x46dc9c]
cmp dword [eax+0x44],byte +0x0
jz 0x5e053
mov eax,[0x46dc9c]
call dword 0x608a0
test al,al
jz 0x5e053
mov eax,[0x46dc9c]
mov eax,[eax+0x44]
call dword 0x4831c
push eax
call dword 0x6188
test eax,eax
jnz 0x5e053
mov eax,[ebp-0x4]
mov eax,[eax+0x44]
call dword 0x4831c
cmp eax,[dword 0x46dcc4]
jz 0x5e053
mov eax,[0x46dcc4]
push eax
call dword 0x62b0
xor eax,eax
mov [0x46dcc4],eax
jmp dword 0x5e1a9
mov eax,[ebp-0x4]
mov eax,[eax+0x30]
push eax
call dword 0x6048
mov [0x46dcc4],eax
mov eax,[ebp-0x4]
cmp word [eax+0x132],byte +0x0
jz dword 0x5e1a9
mov ebx,[ebp-0x4]
mov edx,[ebp-0x4]
mov eax,[ebx+0x134]
call dword [ebx+0x130]
jmp dword 0x5e1a9
mov eax,[ebp-0x4]
mov eax,[eax+0x30]
call dword 0x53800
test eax,eax
jnz dword 0x5e1a9
call dword 0x6000
mov edx,[ebp-0x4]
cmp eax,[edx+0x30]
jnz dword 0x5e1a9
xor eax,eax
call dword 0x53b28
test eax,eax
jz dword 0x5e1a9
push eax
call dword 0x62b0
jmp dword 0x5e1a9
mov ecx,[ebp-0x8]
mov ecx,[ecx+0x8]
mov edx,[ebp-0x8]
movzx edx,word [edx+0x4]
mov eax,[ebp-0x4]
call dword 0x5efe0
jmp dword 0x5e1a9
mov eax,[ebp-0x8]
cmp dword [eax+0x4],byte +0x0
jnz 0x5e111
mov eax,[ebp-0x8]
mov eax,[eax+0x8]
push dword [eax+0x4]
push dword [eax]
mov eax,[ebp-0x4]
call dword 0x5e940
jmp dword 0x5e1a9
mov eax,[ebp-0x8]
mov eax,[eax+0x8]
push dword [eax+0x4]
push dword [eax]
mov eax,[ebp-0x4]
call dword 0x5e99c
jmp dword 0x5e1a9
mov eax,[ebp-0x8]
cmp dword [eax+0x4],byte +0x1
jnz 0x5e143
mov eax,[ebp-0x4]
mov eax,[eax+0xb8]
mov edx,[ebp-0x8]
mov [edx+0xc],eax
jmp short 0x5e1a9
mov eax,[ebp-0x8]
mov eax,[eax+0x8]
mov edx,[ebp-0x4]
mov [edx+0xb8],eax
jmp short 0x5e1a9
mov edx,[ebp-0x8]
mov edx,[edx+0x4]
mov eax,[0x468e58]
mov eax,[eax]
call dword 0x4d638
mov edx,[ebp-0x8]
mov eax,[ebp-0x4]
call dword 0x5da34
push ebp
call dword 0x5daa0
pop ecx
jmp short 0x5e1a9
mov eax,[0x46dca0]
call dword 0x5cbfc
push ebp
call dword 0x5daa0
pop ecx
jmp short 0x5e1a9
call dword 0x4e314
call dword 0x4e478
jmp short 0x5e1a9
xor eax,eax
call dword 0x1a3c4
jmp short 0x5e1a9
push ebp
call dword 0x5daa0
pop ecx
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
jmp short 0x5e1c8
jmp dword 0x30d0
mov edx,[ebp-0x4]
mov eax,[ebp-0x4]
call dword 0x5ecfc
call dword 0x34e0
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
ret
nop
mov eax,[eax+0xa0]
call dword 0x263cc
test eax,eax
jnz 0x5e1eb
push dword 0x7f00
push byte +0x0
call dword 0x61c0
ret
push ebx
mov ebx,eax
mov eax,[ebx+0x30]
call dword 0x53800
test eax,eax
jnz dword 0x5e2c8
mov byte [dword 0x46dcac],0x1
mov eax,ebx
call dword 0x5d668
mov eax,[ebx+0x30]
push eax
call dword 0x6290
xor edx,edx
mov eax,ebx
call dword 0x5d824
cmp dword [ebx+0x44],byte +0x0
jz 0x5e2a3
cmp byte [ebx+0x5b],0x0
jnz 0x5e234
mov eax,[ebx+0x44]
cmp byte [eax+0x57],0x0
jz 0x5e2a3
mov eax,[ebx+0x44]
call dword 0x4831c
push eax
call dword 0x6188
test eax,eax
jz 0x5e2a3
mov eax,ebx
call dword 0x608a0
test al,al
jz 0x5e25d
mov dl,0x1
mov eax,[ebx+0x44]
call dword 0x57df4
jmp short 0x5e2b0
push byte +0x40
push byte +0x0
mov eax,[ebx+0x44]
mov eax,[eax+0x48]
push eax
mov eax,[ebx+0x44]
call dword 0x56064
push eax
mov eax,[ebx+0x44]
call dword 0x56044
push eax
mov eax,[ebx+0x44]
call dword 0x4831c
push eax
mov eax,[ebx+0x30]
push eax
call dword 0x6320
push byte +0x0
push dword 0xf020
push dword 0x112
mov eax,[ebx+0x30]
push eax
call dword 0x5ed8
jmp short 0x5e2b0
mov edx,0x6
mov eax,[ebx+0x30]
call dword 0x5ce7c
cmp word [ebx+0x142],byte +0x0
jz 0x5e2c8
mov edx,ebx
mov eax,[ebx+0x144]
call dword [ebx+0x140]
pop ebx
ret
mov eax,eax
push ebx
push esi
mov ebx,eax
mov eax,[ebx+0x30]
call dword 0x53800
test eax,eax
jz dword 0x5e3f9
mov byte [dword 0x46dcac],0x0
mov eax,[ebx+0x30]
push eax
call dword 0x6290
cmp dword [ebx+0x44],byte +0x0
jz dword 0x5e393
mov eax,ebx
call dword 0x608a0
test al,al
jz 0x5e317
push byte +0x9
mov eax,[ebx+0x44]
call dword 0x4831c
push eax
call dword 0x6348
jmp short 0x5e393
cmp byte [ebx+0x5b],0x0
jnz 0x5e326
mov eax,[ebx+0x44]
cmp byte [eax+0x57],0x0
jz 0x5e34f
mov eax,[ebx+0x44]
call dword 0x4831c
push eax
call dword 0x6188
test eax,eax
jz 0x5e34f
push byte +0x0
push dword 0xf120
push dword 0x112
mov eax,[ebx+0x30]
push eax
call dword 0x5ed8
jmp short 0x5e35c
mov edx,0x9
mov eax,[ebx+0x30]
call dword 0x5ce7c
push byte +0x40
push byte +0x0
push byte +0x0
push byte +0x1
mov eax,[0x468be8]
mov eax,[eax]
call eax
sar eax,1
jns 0x5e374
adc eax,byte +0x0
push eax
push byte +0x0
mov eax,[0x468be8]
mov eax,[eax]
call eax
sar eax,1
jns 0x5e387
adc eax,byte +0x0
push eax
push byte +0x0
mov eax,[ebx+0x30]
push eax
call dword 0x6320
mov eax,[ebx+0x44]
test eax,eax
jz 0x5e3b8
cmp byte [eax+0x273],0x1
jnz 0x5e3b8
cmp byte [eax+0x57],0x0
jnz 0x5e3b8
xor edx,edx
call dword 0x57df4
mov eax,[ebx+0x44]
call dword 0x5ad90
mov eax,ebx
call dword 0x5d6c8
mov dl,0x1
mov eax,ebx
call dword 0x5d824
mov eax,[0x46dca0]
mov esi,[eax+0x64]
test esi,esi
jz 0x5e3e1
mov eax,esi
call dword 0x4831c
push eax
call dword 0x62b0
cmp word [ebx+0x14a],byte +0x0
jz 0x5e3f9
mov edx,ebx
mov eax,[ebx+0x14c]
call dword [ebx+0x148]
pop esi
pop ebx
ret
push ebx
push esi
mov ebx,eax
mov eax,ebx
call dword 0x608a0
test al,al
jz 0x5e41b
cmp dword [ebx+0x44],byte +0x0
jz 0x5e41b
mov eax,[ebx+0x44]
call dword 0x4831c
jmp short 0x5e41e
mov eax,[ebx+0x30]
test eax,eax
jz 0x5e44d
push eax
call dword 0x6048
mov esi,eax
test esi,esi
jz 0x5e44d
cmp esi,[ebx+0x30]
jz 0x5e44d
push esi
call dword 0x6198
test eax,eax
jz 0x5e44d
push esi
call dword 0x6188
test eax,eax
jz 0x5e44d
push esi
call dword 0x62b8
pop esi
pop ebx
ret
push ebx
push esi
add esp,0xfffffefc
mov esi,edx
mov ebx,eax
cmp byte [ebx+0xac],0x0
jz 0x5e4ba
mov eax,ebx
call dword 0x608a0
test al,al
jnz 0x5e4ba
push dword 0x100
lea eax,[esp+0x4]
push eax
mov eax,[ebx+0x30]
push eax
call dword 0x6118
mov ecx,eax
mov edx,esp
mov eax,esi
call dword 0x3b0c
mov eax,[esi]
mov [esp+0x100],eax
mov eax,[esp+0x100]
test eax,eax
jz 0x5e4a7
sub eax,byte +0x4
mov eax,[eax]
test eax,eax
jnz 0x5e4c7
mov eax,esi
mov edx,[ebx+0x8c]
call dword 0x3a70
jmp short 0x5e4c7
mov eax,esi
mov edx,[ebx+0x8c]
call dword 0x3a70
add esp,0x104
pop esi
pop ebx
ret
push ebx
push esi
mov esi,edx
mov ebx,eax
mov eax,[ebx+0x8c]
mov edx,esi
call dword 0x3e44
jz 0x5e524
cmp byte [ebx+0xac],0x0
jz 0x5e517
mov eax,ebx
call dword 0x608a0
test al,al
jz 0x5e506
push byte +0x0
mov eax,[ebx+0x30]
push eax
call dword 0x6328
jmp short 0x5e517
mov eax,esi
call dword 0x3eac
push eax
mov eax,[ebx+0x30]
push eax
call dword 0x6328
lea eax,[ebx+0x8c]
mov edx,esi
call dword 0x3a70
pop esi
pop ebx
ret
nop
push ebx
push esi
mov esi,edx
mov ebx,eax
xor eax,eax
cmp dword [ebx+0xb8],byte +0x0
jz 0x5e56d
mov eax,[esi]
push eax
call dword 0x6190
test eax,eax
jz 0x5e55a
push esi
mov eax,[ebx+0xb8]
push eax
call dword 0x6168
cmp eax,byte +0x1
sbb eax,eax
inc eax
jmp short 0x5e56d
push esi
mov eax,[ebx+0xb8]
push eax
call dword 0x6160
cmp eax,byte +0x1
sbb eax,eax
inc eax
pop esi
pop ebx
ret
push ebx
push esi
push edi
mov edi,edx
mov ebx,eax
xor eax,eax
mov esi,[ebx+0x44]
test esi,esi
jz 0x5e5ba
cmp byte [esi+0x277],0x2
jnz 0x5e5ba
mov edx,[dword 0x46dca0]
cmp dword [edx+0x6c],byte +0x0
jz 0x5e5ba
mov edx,[dword 0x46dca0]
mov edx,[edx+0x6c]
cmp byte [edx+0x277],0x1
jnz 0x5e5ba
push edi
mov eax,[esi+0x29c]
push eax
call dword 0x6360
cmp eax,byte +0x1
sbb eax,eax
inc eax
pop edi
pop esi
pop ebx
ret
mov eax,eax
push ebx
push esi
push edi
push ebp
add esp,byte -0x8
mov esi,edx
mov edi,eax
xor ebx,ebx
mov eax,[esi+0x4]
cmp eax,0x100
jc dword 0x5e6ab
cmp eax,0x109
ja dword 0x5e6ab
call dword 0x5fa8
mov ebp,eax
test ebp,ebp
jnz 0x5e670
mov ebp,[esi]
mov eax,[edi+0x44]
test eax,eax
jz 0x5e613
cmp ebp,[eax+0x29c]
jnz 0x5e613
call dword 0x4831c
mov ebp,eax
jmp short 0x5e628
push ebp
call dword 0x6090
mov ebp,eax
mov eax,ebp
call dword 0x3cd44
test al,al
jnz 0x5e622
test ebp,ebp
jnz 0x5e60b
test ebp,ebp
jnz 0x5e628
mov ebp,[esi]
push ebp
call dword 0x6190
test eax,eax
jz 0x5e651
mov eax,[esi+0xc]
push eax
mov eax,[esi+0x8]
push eax
mov eax,[esi+0x4]
add eax,0xbc00
push eax
push ebp
call dword 0x6288
test eax,eax
jz 0x5e6ab
mov bl,0x1
jmp short 0x5e6ab
mov eax,[esi+0xc]
push eax
mov eax,[esi+0x8]
push eax
mov eax,[esi+0x4]
add eax,0xbc00
push eax
push ebp
call dword 0x6280
test eax,eax
jz 0x5e6ab
mov bl,0x1
jmp short 0x5e6ab
push esp
push ebp
call dword 0x6128
lea eax,[esp+0x4]
push eax
mov eax,[edi+0x30]
push eax
call dword 0x6128
mov eax,[esp]
cmp eax,[esp+0x4]
jnz 0x5e6ab
mov eax,[esi+0xc]
push eax
mov eax,[esi+0x8]
push eax
mov eax,[esi+0x4]
add eax,0xbc00
push eax
push ebp
call dword 0x6278
test eax,eax
jz 0x5e6ab
mov bl,0x1
mov eax,ebx
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
ret
push ebx
push esi
push edi
push ebp
mov edi,edx
mov ebp,eax
xor ebx,ebx
mov esi,[ebp+0x84]
test esi,esi
jz 0x5e6df
mov edx,edi
mov eax,esi
mov ecx,[eax]
call dword [ecx+0xec]
test al,al
jz 0x5e6df
mov eax,ebp
call dword 0x5fa38
mov eax,ebx
pop ebp
pop edi
pop esi
pop ebx
ret
mov eax,eax
push ebx
push esi
push edi
push ebp
push ecx
mov ebp,edx
mov ebx,eax
mov byte [esp],0x0
cmp word [ebx+0x152],byte +0x0
jz 0x5e70f
mov ecx,esp
mov edx,ebp
mov eax,[ebx+0x154]
call dword [ebx+0x150]
cmp byte [esp],0x0
jnz 0x5e743
mov edi,[ebx+0x44]
test edi,edi
jz 0x5e73f
mov eax,edi
call dword 0x4831c
push eax
call dword 0x6188
test eax,eax
jz 0x5e73f
mov edx,ebp
mov eax,[ebx+0x44]
mov si,0xffa5
call dword 0x2dec
test al,al
jnz 0x5e743
xor eax,eax
jmp short 0x5e745
mov al,0x1
mov [esp],al
movzx eax,byte [esp]
pop edx
pop ebp
pop edi
pop esi
pop ebx
ret
mov eax,eax
push ebx
push esi
push edi
push ebp
mov ebp,edx
mov esi,eax
mov eax,[ebp+0x0]
sub eax,byte +0x11
jz 0x5e7e2
sub eax,0xb038
jnz 0x5e7e9
mov eax,[esi+0xd0]
call dword 0x49d8
test eax,eax
jl 0x5e7e9
inc eax
xor ebx,ebx
lea edi,[ebx+ebx*2]
mov edx,[esi+0xd0]
mov edx,[edx+edi*4]
cmp edx,[ebp+0x4]
jnz 0x5e7dc
mov edx,[esi+0xd0]
cmp dword [edx+edi*4+0x4],byte +0x0
jz 0x5e7dc
mov eax,[esi+0xd0]
cmp byte [eax+edi*4+0x8],0x0
jz 0x5e7bc
mov eax,[esi+0xd0]
mov eax,[eax+edi*4+0x4]
mov edx,[ebp+0x8]
call dword 0x5ae34
jmp short 0x5e7e9
mov eax,[esi+0xd0]
mov eax,[eax+edi*4+0x4]
call dword 0x482f8
mov eax,[esi+0xd0]
mov eax,[eax+edi*4+0x4]
call dword 0x44e3c
jmp short 0x5e7e9
inc ebx
dec eax
jnz 0x5e77d
jmp short 0x5e7e9
mov dword [ebp+0xc],0x1
pop ebp
pop edi
pop esi
pop ebx
ret
mov eax,eax
push ebx
push esi
push edi
push ebp
push ecx
mov edi,edx
mov esi,eax
xor ebx,ebx
push byte +0x0
push byte +0x0
push byte +0x0
push byte +0x0
push edi
call dword 0x6200
test eax,eax
jz dword 0x5e8fa
mov ebp,[edi]
test ebp,ebp
jz 0x5e821
push ebp
call dword 0x6190
test eax,eax
jnz 0x5e825
xor eax,eax
jmp short 0x5e827
mov al,0x1
mov [esp],al
cmp byte [esp],0x0
jz 0x5e846
push byte +0x1
push byte +0x0
push byte +0x0
push byte +0x0
push edi
call dword 0x6208
cmp eax,byte +0x1
sbb eax,eax
inc eax
jmp short 0x5e85a
push byte +0x1
push byte +0x0
push byte +0x0
push byte +0x0
push edi
call dword 0x6200
cmp eax,byte +0x1
sbb eax,eax
inc eax
test al,al
jz dword 0x5e8fa
mov bl,0x1
cmp dword [edi+0x4],byte +0x12
jz dword 0x5e8f3
mov byte [esp+0x1],0x0
cmp word [esi+0x102],byte +0x0
jz 0x5e88f
lea ecx,[esp+0x1]
mov edx,edi
mov eax,[esi+0x104]
call dword [esi+0x100]
mov edx,edi
mov eax,esi
call dword 0x60364
test al,al
jnz 0x5e8fa
mov edx,edi
mov eax,esi
call dword 0x5e6b4
test al,al
jnz 0x5e8fa
cmp byte [esp+0x1],0x0
jnz 0x5e8fa
mov edx,edi
mov eax,esi
call dword 0x5e570
test al,al
jnz 0x5e8fa
mov edx,edi
mov eax,esi
call dword 0x5e5c0
test al,al
jnz 0x5e8fa
mov edx,edi
mov eax,esi
call dword 0x5e528
test al,al
jnz 0x5e8fa
push edi
call dword 0x6368
cmp byte [esp],0x0
jz 0x5e8eb
push edi
call dword 0x5f10
jmp short 0x5e8fa
push edi
call dword 0x5f08
jmp short 0x5e8fa
mov byte [esi+0xa4],0x1
mov eax,ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
ret
mov eax,eax
push ebx
add esp,byte -0x1c
mov ebx,eax
mov edx,esp
mov eax,ebx
call dword 0x5e7f0
test al,al
jnz 0x5e90a
add esp,byte +0x1c
pop ebx
ret
push ebx
add esp,byte -0x1c
mov ebx,eax
mov edx,esp
mov eax,ebx
call dword 0x5e7f0
test al,al
jnz 0x5e938
mov edx,esp
mov eax,ebx
call dword 0x5f434
add esp,byte +0x1c
pop ebx
ret
lea eax,[eax+0x0]
push ebp
mov ebp,esp
push ebx
mov ebx,eax
cmp byte [ebx+0xac],0x0
jnz 0x5e969
mov eax,[ebx+0x30]
test eax,eax
jz 0x5e996
lea edx,[ebp+0x8]
push edx
push byte +0x0
push dword 0xb020
push eax
call dword 0x6278
jmp short 0x5e996
mov eax,[ebx+0xb0]
call dword 0x13e5c
mov eax,0x8
call dword 0x1e60
mov edx,[ebp+0x8]
mov [eax],edx
mov edx,[ebp+0xc]
mov [eax+0x4],edx
mov edx,eax
mov eax,[ebx+0xb0]
call dword 0x13d24
pop ebx
pop ebp
ret 0x8
nop
push ebp
mov ebp,esp
push ebx
push esi
push edi
mov ebx,eax
cmp byte [ebx+0xac],0x0
jnz 0x5e9c7
mov eax,[ebx+0x30]
test eax,eax
jz 0x5ea11
lea edx,[ebp+0x8]
push edx
push byte +0x1
push dword 0xb020
push eax
call dword 0x6278
jmp short 0x5ea11
mov eax,[ebx+0xb0]
mov edi,[eax+0x8]
dec edi
test edi,edi
jl 0x5ea11
inc edi
xor esi,esi
mov edx,esi
mov eax,[ebx+0xb0]
call dword 0x13e7c
mov edx,[eax]
cmp edx,[ebp+0x8]
jnz 0x5ea0d
mov edx,[ebp+0xc]
cmp edx,[eax+0x4]
jnz 0x5ea0d
mov edx,0x8
call dword 0x1e7c
mov edx,esi
mov eax,[ebx+0xb0]
call dword 0x13d70
jmp short 0x5ea11
inc esi
dec edi
jnz 0x5e9d8
pop edi
pop esi
pop ebx
pop ebp
ret 0x8
push ebx
mov eax,[0x468c94]
cmp dword [eax],byte +0x0
jz 0x5ea2d
mov ebx,[dword 0x468c94]
mov ebx,[ebx]
call ebx
pop ebx
ret
nop
push ebp
mov ebp,esp
add esp,byte -0xc
push ebx
push esi
push edi
mov [ebp-0x8],ecx
mov ebx,edx
mov [ebp-0x4],eax
mov eax,ebx
call dword [eax-0xc]
mov [ebp-0xc],eax
mov eax,[ebp-0x8]
mov edx,[ebp-0xc]
mov [eax],edx
xor edx,edx
push ebp
push dword 0x45faf0
push dword [fs:edx]
mov [fs:edx],esp
mov eax,[ebp-0x4]
cmp dword [eax+0x44],byte +0x0
jnz 0x5ea8a
mov eax,[ebp-0xc]
mov edx,[dword 0x45338c]
call dword 0x2d7c
test al,al
jz 0x5ea8a
mov eax,[ebp-0xc]
movzx edx,word [eax+0x54]
or dx,0x8000
mov [eax+0x54],dx
xor edx,edx
push ebp
push dword 0x45fadf
push dword [fs:edx]
mov [fs:edx],esp
mov ecx,[ebp-0x4]
or edx,byte -0x1
mov eax,[ebp-0xc]
mov ebx,[eax]
call dword [ebx+0x2c]
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x45fae6
mov eax,[ebp-0x4]
cmp dword [eax+0x44],byte +0x0
jnz 0x5eade
mov eax,[ebp-0xc]
mov edx,[dword 0x45338c]
call dword 0x2d7c
test al,al
jz 0x5eade
mov eax,[ebp-0xc]
movzx edx,word [eax+0x54]
and dx,0x7fff
mov [eax+0x54],dx
ret
jmp dword 0x3384
jmp short 0x5eab3
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
jmp short 0x5eb06
jmp dword 0x30d0
mov eax,[ebp-0x8]
xor edx,edx
mov [eax],edx
call dword 0x348c
call dword 0x34e0
mov eax,[ebp-0x4]
cmp dword [eax+0x44],byte +0x0
jnz 0x5eb7d
mov eax,[ebp-0xc]
mov edx,[dword 0x45338c]
call dword 0x2d7c
test al,al
jz 0x5eb7d
mov ebx,[ebp-0xc]
mov eax,ebx
call dword 0x482f8
mov eax,[ebp-0x4]
mov [eax+0x44],ebx
mov eax,[ebp-0x4]
call dword 0x608a0
test al,al
jz 0x5eb59
push byte -0x14
mov eax,[ebp-0x4]
mov ebx,[eax+0x30]
push ebx
call dword 0x60f8
or eax,0x8000000
push eax
push byte -0x14
push ebx
call dword 0x6308
mov eax,[ebp-0x4]
call dword 0x608a0
xor al,0x1
push eax
mov eax,[ebp-0x4]
call dword 0x608a0
mov edx,eax
xor dl,0x1
mov eax,[ebp-0x4]
mov eax,[eax+0x30]
pop ecx
call dword 0x5387c
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret
push ebp
mov ebp,esp
push ecx
push ebx
push esi
push edi
mov [ebp-0x4],eax
mov eax,[ebp-0x4]
mov byte [eax+0xad],0x1
xor edx,edx
push ebp
push dword 0x45fc7f
push dword [fs:edx]
mov [fs:edx],esp
mov eax,0x454940
call dword 0x7540
mov eax,[ebp-0x4]
mov eax,[eax+0x44]
test eax,eax
jz dword 0x5ec67
mov edx,[dword 0x468cf8]
mov edx,[edx]
sub edx,byte +0x3
jz 0x5ebd9
sub edx,byte +0x4
jnz 0x5ebe0
mov byte [eax+0x273],0x1
jmp short 0x5ebe0
mov dl,0x2
call dword 0x57df4
mov eax,[ebp-0x4]
cmp byte [eax+0x5b],0x0
jz 0x5ec26
mov eax,[ebp-0x4]
mov eax,[eax+0x44]
cmp byte [eax+0x273],0x1
jz 0x5ec01
cmp byte [dword 0x4687f0],0x1
jnz 0x5ec1f
mov eax,[ebp-0x4]
call dword 0x5e1ec
cmp byte [dword 0x4687f0],0x1
jnz 0x5ec26
mov eax,[ebp-0x4]
mov eax,[eax+0x44]
call dword 0x5ad90
jmp short 0x5ec26
mov dl,0x1
call dword 0x564b4
xor eax,eax
push ebp
push dword 0x45fc46
push dword [fs:eax]
mov [fs:eax],esp
mov eax,[ebp-0x4]
call dword 0x5e91c
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
jmp short 0x5ec5b
jmp dword 0x30d0
mov edx,[ebp-0x4]
mov eax,[ebp-0x4]
call dword 0x5ecfc
call dword 0x34e0
mov eax,[ebp-0x4]
cmp byte [eax+0xa4],0x0
jz 0x5ec26
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x45fc86
mov eax,[ebp-0x4]
mov byte [eax+0xad],0x0
ret
jmp dword 0x3384
jmp short 0x5ec74
pop edi
pop esi
pop ebx
pop ecx
pop ebp
ret
call dword 0xcc0c
test al,al
jz 0x5ec9c
push byte +0x0
call dword 0x6218
ret
lea eax,[eax+0x0]
push ebx
push esi
add esp,0xfffffe00
mov esi,edx
call dword 0x2ac8
mov ebx,eax
jmp short 0x5ecbc
mov eax,ebx
call dword 0x2b7c
mov ebx,eax
test ebx,ebx
jz 0x5eced
mov edx,esp
mov eax,ebx
call dword 0x2ad0
mov eax,esp
push eax
lea edx,[esp+0x104]
mov eax,esi
call dword 0x2ad0
lea edx,[esp+0x104]
pop eax
movzx ecx,byte [eax]
inc ecx
call dword 0x24bc
jnz 0x5ecb3
test ebx,ebx
setnz al
add esp,0x200
pop esi
pop ebx
ret
nop
push ebx
push esi
mov esi,edx
mov ebx,eax
call dword 0x5fa8
test eax,eax
jz 0x5ed1c
push byte +0x0
push byte +0x0
push byte +0x1f
call dword 0x5fa8
push eax
call dword 0x6278
call dword 0x1ee4
mov edx,[dword 0x407858]
call dword 0x5eca0
test al,al
jz 0x5ed76
call dword 0x1ee4
mov edx,[dword 0x4078c0]
call dword 0x5eca0
test al,al
jnz 0x5ed87
cmp word [ebx+0xea],byte +0x0
jz 0x5ed65
call dword 0x1ee4
mov ecx,eax
mov edx,esi
mov eax,[ebx+0xec]
call dword [ebx+0xe8]
jmp short 0x5ed87
call dword 0x1ee4
mov edx,eax
mov eax,ebx
call dword 0x5ef08
pop esi
pop ebx
ret
call dword 0x1f04
push eax
call dword 0x1ee4
pop edx
call dword 0xb388
pop esi
pop ebx
ret
mov eax,eax
push ebp
mov ebp,esp
add esp,byte -0x58
push ebx
push esi
push edi
mov [ebp-0x8],ecx
mov edi,edx
mov [ebp-0x4],eax
mov esi,[ebp+0x8]
mov eax,[ebp-0x4]
call dword 0x60178
mov [ebp-0x10],eax
cmp dword [ebp-0x10],byte +0x0
jnz 0x5edb9
mov eax,[ebp-0x4]
mov ebx,[eax+0x30]
jmp short 0x5edbc
mov ebx,[ebp-0x10]
push byte +0x2
mov eax,[ebp-0x10]
push eax
mov eax,[0x468c74]
mov eax,[eax]
call eax
mov [ebp-0x18],eax
push byte +0x2
mov eax,[ebp-0x4]
mov eax,[eax+0x30]
push eax
mov eax,[0x468c74]
mov eax,[eax]
call eax
mov [ebp-0x1c],eax
mov eax,[ebp-0x18]
cmp eax,[ebp-0x1c]
jz 0x5ee4b
mov dword [ebp-0x48],0x28
lea eax,[ebp-0x48]
push eax
mov eax,[ebp-0x18]
push eax
mov eax,[0x468bc4]
mov eax,[eax]
call eax
lea eax,[ebp-0x58]
push eax
mov eax,[ebp-0x4]
mov eax,[eax+0x30]
push eax
call dword 0x6110
push byte +0x1d
push byte +0x0
push byte +0x0
mov ecx,[ebp-0x38]
mov edx,[ebp-0x40]
sub ecx,edx
sar ecx,1
jns 0x5ee28
adc ecx,byte +0x0
add ecx,edx
push ecx
mov edx,[ebp-0x3c]
mov eax,[ebp-0x44]
sub edx,eax
sar edx,1
jns 0x5ee3a
adc edx,byte +0x0
add edx,eax
push edx
push byte +0x0
mov eax,[ebp-0x4]
mov eax,[eax+0x30]
push eax
call dword 0x6320
mov eax,[ebp-0x10]
call dword 0x539c8
mov [ebp-0x14],eax
call dword 0x53820
mov [ebp-0x20],eax
mov eax,[ebp-0x4]
call dword 0x5d988
test al,al
jz 0x5ee70
or esi,0x100000
xor ecx,ecx
push ebp
push dword 0x45fef4
push dword [fs:ecx]
mov [fs:ecx],esp
push esi
mov eax,[ebp-0x8]
push eax
push edi
push ebx
call dword 0x61e8
mov [ebp-0xc],eax
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x45fefb
mov eax,[ebp-0x18]
cmp eax,[ebp-0x1c]
jz 0x5eeda
push byte +0x1d
push byte +0x0
push byte +0x0
mov ecx,[ebp-0x4c]
mov edx,[ebp-0x54]
sub ecx,edx
sar ecx,1
jns 0x5eeb7
adc ecx,byte +0x0
add ecx,edx
push ecx
mov edx,[ebp-0x50]
mov eax,[ebp-0x58]
sub edx,eax
sar edx,1
jns 0x5eec9
adc edx,byte +0x0
add edx,eax
push edx
push byte +0x0
mov eax,[ebp-0x4]
mov eax,[eax+0x30]
push eax
call dword 0x6320
mov eax,[ebp-0x14]
call dword 0x53a8c
mov eax,[ebp-0x10]
push eax
call dword 0x6290
mov eax,[ebp-0x20]
call dword 0x53828
ret
jmp dword 0x3384
jmp short 0x5ee9a
mov eax,[ebp-0xc]
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret 0x4
nop
push ebp
mov ebp,esp
add esp,0xfffffef8
push ebx
push esi
xor ecx,ecx
mov [ebp-0x108],ecx
mov [ebp-0x4],ecx
mov esi,edx
mov ebx,eax
xor eax,eax
push ebp
push dword 0x45ffc3
push dword [fs:eax]
mov [fs:eax],esp
lea eax,[ebp-0x4]
mov edx,[esi+0x4]
call dword 0x3ab4
cmp dword [ebp-0x4],byte +0x0
jz 0x5ef75
mov eax,[ebp-0x4]
call dword 0x81c4
mov edx,eax
lea eax,[ebp-0x104]
call dword 0x269c
lea eax,[ebp-0x104]
mov edx,0x45ffd0
call dword 0x2438
jna 0x5ef75
lea eax,[ebp-0x4]
mov edx,0x45ffdc
call dword 0x3ce8
push byte +0x10
lea edx,[ebp-0x108]
mov eax,ebx
call dword 0x5e450
mov eax,[ebp-0x108]
call dword 0x3eac
push eax
mov eax,[ebp-0x4]
call dword 0x3eac
mov edx,eax
mov eax,ebx
pop ecx
call dword 0x5ed8c
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x45ffca
lea eax,[ebp-0x108]
call dword 0x3a1c
lea eax,[ebp-0x4]
call dword 0x3a1c
ret
jmp dword 0x3384
jmp short 0x5efaf
pop esi
pop ebx
mov esp,ebp
pop ebp
ret
add [esi],ebp
add [eax],al
db 0xff
db 0xff
db 0xff
inc dword [ecx]
add [eax],al
add [esi],ch
add [eax],al
add [ebx+0x56],dl
push edi
push ebp
add esp,byte -0xc
mov [esp],ecx
mov ebp,edx
mov esi,eax
xor edi,edi
mov byte [esp+0x4],0x1
lea eax,[esp+0x4]
push eax
mov ecx,[esp+0x4]
mov edx,ebp
mov eax,esi
call dword 0x5f108
mov ebx,eax
test bl,bl
jnz 0x5f049
mov eax,[0x46dca0]
mov edi,[eax+0x68]
test edi,edi
jz 0x5f024
test byte [edi+0x1c],0x10
jz 0x5f024
mov byte [esp+0x4],0x0
test edi,edi
jz 0x5f049
mov eax,edi
call dword 0x48554
cmp ax,byte -0x1
jnz 0x5f049
cmp byte [edi+0x57],0x0
jnz 0x5f049
cmp dword [edi+0x268],byte +0x0
jnz 0x5f049
mov byte [esp+0x4],0x0
cmp byte [esp+0x4],0x0
jz dword 0x5f0fe
test edi,edi
jz 0x5f09e
mov eax,edi
call dword 0x486bc
test al,al
jz 0x5f09e
cmp dword [edi+0x284],byte +0x0
jz 0x5f09e
mov eax,edi
call dword 0x4831c
mov [esp+0x8],eax
mov eax,esi
call dword 0x5f7e0
test al,al
jz 0x5f0fe
push ebp
mov eax,[esp+0x4]
push eax
mov ecx,[edi+0x284]
mov edx,[esp+0x10]
mov eax,[esi+0x4c]
mov ebx,[eax]
call dword [ebx+0x20]
mov ebx,eax
jmp short 0x5f0fe
cmp dword [esi+0x50],byte +0x0
jz 0x5f0df
mov eax,[esi+0x30]
mov [esp+0x8],eax
mov eax,[esi+0x44]
test eax,eax
jz 0x5f0bb
call dword 0x4831c
mov [esp+0x8],eax
mov eax,esi
call dword 0x5f7e0
test al,al
jz 0x5f0fe
push ebp
mov eax,[esp+0x4]
push eax
mov ecx,[esi+0x50]
mov edx,[esp+0x10]
mov eax,[esi+0x4c]
mov ebx,[eax]
call dword [ebx+0x20]
mov ebx,eax
jmp short 0x5f0fe
cmp byte [esi+0xac],0x0
jnz 0x5f0fe
mov eax,[esp]
push eax
movzx eax,bp
push eax
push dword 0xb01f
mov eax,[esi+0x30]
push eax
call dword 0x6210
mov eax,ebx
add esp,byte +0xc
pop ebp
pop edi
pop esi
pop ebx
ret
push ebp
mov ebp,esp
add esp,byte -0xc
push ebx
push esi
mov [ebp-0xc],ecx
mov [ebp-0x6],dx
mov [ebp-0x4],eax
xor ebx,ebx
mov eax,[ebp+0x8]
mov byte [eax],0x1
xor esi,esi
mov eax,[0x46dca0]
mov eax,[eax+0x64]
test eax,eax
jz 0x5f160
xor edx,edx
call dword 0x53e38
mov esi,eax
test esi,esi
jz 0x5f160
cmp word [esi+0x2f2],byte +0x0
jz 0x5f160
mov eax,[ebp+0x8]
push eax
mov ecx,[ebp-0xc]
movzx edx,word [ebp-0x6]
mov eax,[esi+0x2f4]
call dword [esi+0x2f0]
mov ebx,eax
test bl,bl
jnz 0x5f1ca
mov eax,[0x46dca0]
mov eax,[eax+0x68]
test eax,eax
jz 0x5f19d
cmp esi,eax
jz 0x5f19d
mov esi,eax
test esi,esi
jz 0x5f19d
cmp word [esi+0x2f2],byte +0x0
jz 0x5f19d
mov eax,[ebp+0x8]
push eax
mov ecx,[ebp-0xc]
movzx edx,word [ebp-0x6]
mov eax,[esi+0x2f4]
call dword [esi+0x2f0]
mov ebx,eax
test bl,bl
jnz 0x5f1ca
mov eax,[ebp-0x4]
cmp word [eax+0x11a],byte +0x0
jz 0x5f1ca
mov eax,[ebp+0x8]
push eax
mov ebx,[ebp-0x4]
mov ecx,[ebp-0xc]
movzx edx,word [ebp-0x6]
mov eax,[ebx+0x11c]
call dword [ebx+0x118]
mov ebx,eax
mov eax,ebx
pop esi
pop ebx
mov esp,ebp
pop ebp
ret 0x4
push ebp
mov ebp,esp
add esp,byte -0x8
push ebx
push esi
push edi
xor ecx,ecx
mov [ebp-0x8],ecx
mov edi,edx
mov esi,eax
xor eax,eax
push ebp
push dword 0x460252
push dword [fs:eax]
mov [fs:eax],esp
lea eax,[ebp-0x1]
push eax
mov eax,edi
call dword 0x3eac
mov ecx,eax
mov dx,0x102
mov eax,esi
call dword 0x5f108
mov ebx,eax
cmp byte [ebp-0x1],0x0
jz 0x5f23c
mov eax,esi
call dword 0x5f7e0
test al,al
jz 0x5f23a
mov bl,0x1
lea edx,[ebp-0x8]
mov eax,esi
call dword 0x6013c
mov ecx,[ebp-0x8]
mov edx,edi
mov eax,[esi+0x4c]
mov esi,[eax]
call dword [esi+0xc]
jmp short 0x5f23c
xor ebx,ebx
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x460259
lea eax,[ebp-0x8]
call dword 0x3a1c
ret
jmp dword 0x3384
jmp short 0x5f249
mov eax,ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
ret
mov eax,eax
push ebp
mov ebp,esp
add esp,byte -0x8
push ebx
push esi
push edi
xor ecx,ecx
mov [ebp-0x8],ecx
mov edi,edx
mov esi,eax
xor eax,eax
push ebp
push dword 0x4602db
push dword [fs:eax]
mov [fs:eax],esp
lea eax,[ebp-0x1]
push eax
mov ecx,edi
mov dx,0x1
mov eax,esi
call dword 0x5f108
mov ebx,eax
cmp byte [ebp-0x1],0x0
jz 0x5f2c5
mov eax,esi
call dword 0x5f7e0
test al,al
jz 0x5f2c3
mov bl,0x1
lea edx,[ebp-0x8]
mov eax,esi
call dword 0x6013c
mov ecx,[ebp-0x8]
mov edx,edi
mov eax,[esi+0x4c]
mov esi,[eax]
call dword [esi+0x10]
jmp short 0x5f2c5
xor ebx,ebx
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x4602e2
lea eax,[ebp-0x8]
call dword 0x3a1c
ret
jmp dword 0x3384
jmp short 0x5f2d2
mov eax,ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
ret
nop
call dword 0x5efe0
ret
mov eax,eax
push ebx
push esi
mov ebx,eax
cmp dl,[ebx+0x88]
jz 0x5f33f
mov eax,edx
mov [ebx+0x88],al
test al,al
jz 0x5f32c
mov ecx,ebx
mov dl,0x1
mov eax,[0x468770]
call dword [eax+0x2c]
mov esi,eax
mov [ebx+0x84],esi
mov edx,[ebx+0x5c]
mov eax,esi
call dword 0x40438
jmp short 0x5f33f
mov eax,[ebx+0x84]
call dword 0x2bf0
xor eax,eax
mov [ebx+0x84],eax
pop esi
pop ebx
ret
mov eax,eax
push ebx
push esi
push edi
mov eax,[0x46dca0]
call dword 0x5c058
mov esi,eax
dec esi
test esi,esi
jl 0x5f3a4
inc esi
xor edi,edi
mov edx,edi
mov eax,[0x46dca0]
call dword 0x5c044
mov ebx,eax
mov eax,ebx
call dword 0x486bc
test al,al
jz 0x5f3a0
mov eax,ebx
call dword 0x4831c
push eax
call dword 0x6198
test eax,eax
jz 0x5f3a0
mov eax,ebx
call dword 0x4831c
push eax
call dword 0x6188
test eax,eax
jz 0x5f3a0
mov eax,ebx
mov edx,[eax]
call dword [edx+0xec]
inc edi
dec esi
jnz 0x5f35b
pop edi
pop esi
pop ebx
ret
push ebx
add esp,byte -0x8
mov ebx,eax
push esp
call dword 0x5fd8
mov eax,esp
mov dl,0x1
call dword 0x3e800
cmp eax,[ebx+0x48]
jz 0x5f3c5
mov [ebx+0x48],eax
pop ecx
pop edx
pop ebx
ret
lea eax,[eax+0x0]
push ebp
mov ebp,esp
push ebx
push esi
push edi
cmp dword [dword 0x46dc9c],byte +0x0
jz 0x5f42b
xor eax,eax
push ebp
push dword 0x460411
push dword [fs:eax]
mov [fs:eax],esp
mov eax,[0x46dcc8]
push eax
push byte +0x0
call dword 0x61a8
xor eax,eax
mov [0x46dcc8],eax
mov eax,[0x46dc9c]
call dword 0x5f344
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
jmp short 0x5f42b
jmp dword 0x30d0
mov edx,[dword 0x46dc9c]
mov eax,[0x46dc9c]
call dword 0x5ecfc
call dword 0x34e0
pop edi
pop esi
pop ebx
pop ebp
ret 0x10
mov eax,eax
push ebp
mov ebp,esp
add esp,byte -0x10
push ebx
push esi
push edi
xor ecx,ecx
mov [ebp-0xc],ecx
mov [ebp-0x10],ecx
mov [ebp-0x4],eax
xor eax,eax
push ebp
push dword 0x460581
push dword [fs:eax]
mov [fs:eax],esp
mov eax,[ebp-0x4]
call dword 0x5f3a8
mov ebx,eax
mov eax,[ebp-0x4]
cmp byte [eax+0x88],0x0
jz 0x5f47d
mov eax,[ebp-0x4]
cmp dword [eax+0x48],byte +0x0
jnz 0x5f47d
mov eax,[ebp-0x4]
call dword 0x5fa38
lea edx,[ebp-0x10]
mov eax,ebx
call dword 0x5cc08
mov eax,[ebp-0x10]
lea edx,[ebp-0xc]
call dword 0x3cf9c
mov edx,[ebp-0xc]
mov eax,[0x46dc9c]
call dword 0x5f62c
mov byte [ebp-0x5],0x1
xor eax,eax
push ebp
push dword 0x460528
push dword [fs:eax]
mov [fs:eax],esp
mov eax,[ebp-0x4]
cmp word [eax+0x12a],byte +0x0
jz 0x5f4d3
lea ecx,[ebp-0x5]
mov ebx,[ebp-0x4]
mov edx,[ebp-0x4]
mov eax,[ebx+0x12c]
call dword [ebx+0x128]
cmp byte [ebp-0x5],0x0
jz 0x5f51e
mov eax,[ebp-0x4]
mov ebx,[eax+0xc0]
test ebx,ebx
jg 0x5f4f0
mov eax,[ebp-0x4]
call dword 0x5f344
jmp short 0x5f51e
cmp dword [dword 0x46dcc8],byte +0x0
jnz 0x5f51e
push dword 0x4603cc
push ebx
push byte +0x0
push byte +0x0
call dword 0x6300
mov [0x46dcc8],eax
cmp dword [dword 0x46dcc8],byte +0x0
jnz 0x5f51e
mov eax,[ebp-0x4]
call dword 0x5f344
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
jmp short 0x5f53d
jmp dword 0x30d0
mov edx,[ebp-0x4]
mov eax,[ebp-0x4]
call dword 0x5ecfc
call dword 0x34e0
call dword 0x5af8
mov edx,[dword 0x468eac]
cmp eax,[edx]
jnz 0x5f55b
xor eax,eax
call dword 0x1a3c4
test al,al
jz 0x5f55b
mov byte [ebp-0x5],0x0
cmp byte [ebp-0x5],0x0
jz 0x5f566
call dword 0x6388
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x460588
lea eax,[ebp-0x10]
mov edx,0x2
call dword 0x3a40
ret
jmp dword 0x3384
jmp short 0x5f573
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret
nop
push ebx
push esi
push edi
mov edi,edx
mov eax,[0x46dca0]
call dword 0x5c03c
mov ebx,eax
dec ebx
test ebx,ebx
jl 0x5f5c5
inc ebx
xor esi,esi
push byte +0x0
mov edx,esi
mov eax,[0x46dca0]
call dword 0x5c028
movzx edx,di
xor ecx,ecx
call dword 0x41588
inc esi
dec ebx
jnz 0x5f5a9
pop edi
pop esi
pop ebx
ret
lea eax,[eax+0x0]
push ebx
mov ebx,eax
mov eax,[0x468c68]
cmp byte [eax],0x0
jz 0x5f606
mov eax,ebx
call dword 0x5e1d0
push eax
push byte +0x1
push dword 0x80
mov eax,[ebx+0x30]
push eax
call dword 0x6278
mov eax,ebx
call dword 0x5e1d0
push eax
push byte -0xe
mov eax,[ebx+0x30]
push eax
call dword 0x62a0
jmp short 0x5f61f
mov eax,[ebx+0x30]
call dword 0x53800
test eax,eax
jz 0x5f61f
push byte -0x1
push byte +0x0
mov eax,[ebx+0x30]
push eax
call dword 0x6150
mov dx,0xb01d
mov eax,ebx
call dword 0x5f590
pop ebx
ret
push ebp
mov ebp,esp
push ecx
push ebx
push esi
mov esi,edx
mov ebx,eax
mov eax,[ebx+0x54]
mov edx,esi
call dword 0x3e44
jz 0x5f6b8
lea eax,[ebx+0x54]
mov edx,esi
call dword 0x3a70
cmp word [ebx+0x122],byte +0x0
jz 0x5f666
mov edx,ebx
mov eax,[ebx+0x124]
call dword [ebx+0x120]
jmp short 0x5f6b8
mov ecx,ebx
mov dl,0x1
mov eax,[0x434500]
call dword 0x335f4
mov [ebp-0x4],eax
mov edx,esi
mov eax,[ebp-0x4]
call dword 0x512f4
xor eax,eax
push ebp
push dword 0x4606b1
push dword [fs:eax]
mov [fs:eax],esp
mov eax,[ebp-0x4]
mov si,0xffef
call dword 0x2dec
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x4606b8
mov eax,[ebp-0x4]
call dword 0x2bf0
ret
jmp dword 0x3384
jmp short 0x5f6a8
pop esi
pop ebx
pop ecx
pop ebp
ret
lea eax,[eax+0x0]
push ebp
mov ebp,esp
push ebx
push esi
mov ebx,eax
mov eax,[ebp+0x8]
mov eax,[eax-0x4]
mov eax,[eax+0x30]
push eax
call dword 0x6198
cmp eax,byte +0x1
sbb eax,eax
inc eax
cmp al,[dword 0x468898]
jnz 0x5f751
cmp bl,[dword 0x468898]
jz 0x5f751
mov eax,[ebp+0x8]
mov eax,[eax-0x4]
call dword 0x608a0
test al,al
jz 0x5f726
cmp byte [dword 0x468898],0x0
jnz 0x5f726
push byte -0x14
mov eax,[ebp+0x8]
mov eax,[eax-0x4]
mov esi,[eax+0x30]
push esi
call dword 0x60f8
or eax,0x8000000
push eax
push byte -0x14
mov eax,[ebp+0x8]
push esi
call dword 0x6308
movzx eax,bl
movzx eax,word [eax*2+0x46889c]
push eax
push byte +0x0
push byte +0x0
push byte +0x0
push byte +0x0
push byte +0x0
mov eax,[ebp+0x8]
mov eax,[eax-0x4]
mov eax,[eax+0x30]
push eax
call dword 0x6320
mov [dword 0x468898],bl
pop esi
pop ebx
pop ebp
ret
lea eax,[eax+0x0]
push ebp
mov ebp,esp
push ecx
push ebx
push esi
push edi
mov [ebp-0x4],eax
mov eax,[ebp-0x4]
cmp dword [eax+0x30],byte +0x0
jz 0x5f7d7
mov eax,[0x46dca0]
call dword 0x5c03c
mov esi,eax
dec esi
test esi,esi
jl 0x5f7ce
inc esi
xor edi,edi
mov edx,edi
mov eax,[0x46dca0]
call dword 0x5c028
mov ebx,eax
cmp byte [ebx+0x57],0x0
jz 0x5f7ca
cmp dword [ebx+0x1c4],byte +0x0
jz 0x5f7bf
mov eax,ebx
call dword 0x486bc
test al,al
jz 0x5f7bf
mov eax,[ebx+0x1c4]
push eax
mov eax,ebx
call dword 0x4831c
push eax
call dword 0x6158
test eax,eax
jnz 0x5f7ca
push ebp
mov al,0x1
call dword 0x5f6c0
pop ecx
jmp short 0x5f7d7
inc edi
dec esi
jnz 0x5f77f
push ebp
xor eax,eax
call dword 0x5f6c0
pop ecx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
ret
lea eax,[eax+0x0]
push ebx
mov ebx,eax
cmp dword [ebx+0x4c],byte +0x0
jnz 0x5f7f6
lea eax,[ebx+0x4c]
call dword 0x5270
call dword 0x1be34
cmp dword [ebx+0x4c],byte +0x0
setnz al
pop ebx
ret
nop
push ebx
push esi
push edi
mov ebx,ecx
mov esi,edx
mov edi,eax
mov eax,edi
call dword 0x5f844
push dword 0x45dc60
push esi
push byte +0x0
push byte +0x0
call dword 0x6300
mov [edi+0x8a],ax
mov [edi+0x89],bl
cmp word [edi+0x8a],byte +0x0
jnz 0x5f83d
mov eax,edi
call dword 0x5fa38
pop edi
pop esi
pop ebx
ret
lea eax,[eax+0x0]
push ebx
mov ebx,eax
movzx eax,word [ebx+0x8a]
test ax,ax
jz 0x5f867
movzx eax,ax
push eax
push byte +0x0
call dword 0x61a8
mov word [ebx+0x8a],0x0

pop ebx
ret
lea eax,[eax+0x0]
push ebx
push esi
push edi
push ebp
add esp,byte -0x2c
mov ebp,ecx
mov ebx,edx
mov esi,eax
mov eax,[ebp+0x8]
mov [esp+0xc],eax
movsx eax,word [esp+0xc]
mov [esp+0x10],eax
movsx eax,word [esp+0xe]
mov [esp+0x14],eax
lea ecx,[esp+0x24]
lea edx,[esp+0x10]
mov eax,ebx
call dword 0x3fd18
lea eax,[esp+0x24]
mov dl,0x1
call dword 0x3e800
call dword 0x5cc40
mov edi,eax
test edi,edi
jz 0x5f8c0
cmp byte [edi+0x8d],0x0
jnz 0x5f8cc
mov eax,esi
call dword 0x5fa38
jmp dword 0x5f984
cmp edi,[esi+0x60]
jz 0x5f8d5
mov al,0x1
jmp short 0x5f915
mov eax,[ebp+0x8]
mov [esp+0x18],eax
movsx eax,word [esp+0x18]
mov [esp+0x1c],eax
movsx eax,word [esp+0x1a]
mov [esp+0x20],eax
lea ecx,[esp+0x24]
lea edx,[esp+0x1c]
mov eax,ebx
call dword 0x3fd18
push dword [esp+0x28]
push dword [esp+0x28]
lea eax,[esi+0x64]
push eax
call dword 0x6220
cmp eax,byte +0x1
sbb eax,eax
neg eax
test al,al
jz 0x5f984
movzx ebx,byte [esi+0x58]
test bl,bl
jz 0x5f92c
mov eax,[esi+0x80]
mov [esp],eax
jmp short 0x5f932
mov eax,[esi+0x78]
mov [esp],eax
mov eax,esp
push eax
movzx ecx,bl
mov edx,0xb041
mov eax,edi
call dword 0x41588
test bl,bl
jz 0x5f96b
cmp dword [esp],byte +0x0
jnz 0x5f96b
mov [esi+0x58],bl
mov [esi+0x60],edi
lea eax,[esp+0x4]
push eax
call dword 0x5fd8
lea edx,[esp+0x4]
mov eax,esi
call dword 0x5fcd8
jmp short 0x5f984
mov eax,esi
call dword 0x5fa38
mov [esi+0x58],bl
mov [esi+0x60],edi
xor ecx,ecx
mov edx,[esp]
mov eax,esi
call dword 0x5f800
add esp,byte +0x2c
pop ebp
pop edi
pop esi
pop ebx
ret
push ebx
add esp,byte -0x8
mov ebx,eax
mov eax,ebx
call dword 0x5f844
movzx eax,byte [ebx+0x89]
sub al,0x1
jc 0x5f9af
jnz 0x5f9be
mov eax,ebx
call dword 0x5f9c4
jmp short 0x5f9be
push esp
call dword 0x5fd8
mov edx,esp
mov eax,ebx
call dword 0x5fcd8
pop ecx
pop edx
pop ebx
ret
mov eax,eax
push ebx
push esi
mov ebx,eax
mov esi,[ebx+0x84]
test esi,esi
jz 0x5fa32
mov eax,esi
call dword 0x486bc
test al,al
jz 0x5fa32
mov eax,[ebx+0x84]
call dword 0x4831c
push eax
call dword 0x6198
test eax,eax
jz 0x5fa32
mov eax,[ebx+0x84]
mov edx,[eax]
call dword [edx+0xf0]
test al,al
jz 0x5fa26
push byte +0x0
mov eax,[ebx+0x84]
call dword 0x4831c
push eax
call dword 0x6348
xor edx,edx
mov eax,[ebx+0x84]
call dword 0x401b8
jmp short 0x5fa32
mov cl,0x1
mov edx,[ebx+0x74]
mov eax,ebx
call dword 0x5f800
pop esi
pop ebx
ret
lea eax,[eax+0x0]
push ebx
mov ebx,eax
cmp dword [ebx+0x60],byte +0x0
jz 0x5fa5d
mov eax,ebx
call dword 0x5f9c4
xor eax,eax
mov [ebx+0x60],eax
mov byte [ebx+0x58],0x0
call dword 0x5cdc8
mov eax,ebx
call dword 0x5f844
pop ebx
ret
nop
push ecx
mov ecx,edx
mov edx,edi
mov edi,eax
pop eax
repe scasb
mov eax,ecx
mov edi,edx
ret
nop
push ebp
mov ebp,esp
add esp,byte -0x28
push ebx
push esi
push edi
push byte +0xe
mov eax,[0x468be8]
mov eax,[eax]
call eax
mov [ebp-0x4],eax
lea eax,[ebp-0x28]
push eax
call dword 0x5fd0
push eax
call dword 0x6010
test eax,eax
jz dword 0x5fbbb
xor edx,edx
push ebp
push dword 0x460bb4
push dword [fs:edx]
mov [fs:edx],esp
lea ecx,[ebp-0xc]
lea edx,[ebp-0x8]
mov eax,[ebp-0x1c]
call dword 0x21df0
mov eax,[ebp-0x8]
add eax,[ebp-0xc]
call dword 0x1e48
mov [ebp-0x10],eax
xor edx,edx
push ebp
push dword 0x460b85
push dword [fs:edx]
mov [fs:edx],esp
mov ebx,[ebp-0x10]
add ebx,[ebp-0x8]
push ebx
mov esi,[ebp-0x10]
mov ecx,esi
xor edx,edx
mov eax,[ebp-0x1c]
call dword 0x21eac
test al,al
jz 0x5fb69
mov eax,[ebp-0x10]
cmp word [eax+0xe],byte +0x1
jnz 0x5fb69
mov eax,[esi+0x4]
mov edx,eax
movzx ecx,word [esi+0xe]
imul edx,ecx
add edx,byte +0x1f
and edx,byte -0x20
test edx,edx
jns 0x5fb13
add edx,byte +0x7
sar edx,byte 0x3
mov [ebp-0x14],edx
mov edi,eax
imul edi,[ebp-0x14]
add ebx,[ebp-0xc]
sub ebx,edi
mov ecx,0xff
mov edx,edi
mov eax,ebx
call dword 0x5fa60
mov [ebp-0x4],eax
cmp dword [ebp-0x4],byte +0x0
jnz 0x5fb57
mov eax,[esi+0x8]
mov edx,[esi+0x4]
add edx,edx
cmp eax,edx
jl 0x5fb57
mov eax,ebx
sub eax,edi
xor ecx,ecx
mov edx,edi
call dword 0x5fa60
mov [ebp-0x4],eax
mov ecx,[ebp-0x14]
mov eax,[ebp-0x4]
cdq
idiv ecx
mov [ebp-0x4],eax
mov eax,[ebp-0x20]
sub [ebp-0x4],eax
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x460b8c
mov edx,[ebp-0x8]
add edx,[ebp-0xc]
mov eax,[ebp-0x10]
call dword 0x1e7c
ret
jmp dword 0x3384
jmp short 0x5fb76
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x460bbb
mov eax,[ebp-0x18]
test eax,eax
jz 0x5fba6
push eax
call dword 0x5cc0
mov eax,[ebp-0x1c]
test eax,eax
jz 0x5fbb3
push eax
call dword 0x5cc0
ret
jmp dword 0x3384
jmp short 0x5fb99
mov eax,[ebp-0x4]
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret
lea eax,[eax+0x0]
push ebp
mov ebp,esp
push ebx
push esi
mov ebx,eax
test ebx,ebx
jnz 0x5fbd9
mov ebx,[dword 0x468770]
mov eax,[ebp+0x8]
mov eax,[eax-0x4]
mov esi,[eax+0x84]
test esi,esi
jz 0x5fbf7
mov eax,[ebp+0x8]
mov eax,esi
call dword 0x2ac8
cmp ebx,eax
jz 0x5fc21
mov eax,[ebp+0x8]
mov eax,[eax-0x4]
mov eax,[eax+0x84]
call dword 0x2bf0
mov eax,[ebp+0x8]
mov ecx,[eax-0x4]
mov dl,0x1
mov eax,ebx
call dword [eax+0x2c]
mov edx,[ebp+0x8]
mov edx,[edx-0x4]
mov [edx+0x84],eax
pop esi
pop ebx
pop ebp
ret
lea eax,[eax+0x0]
push ebp
mov ebp,esp
add esp,byte -0x8
push ebx
push esi
push edi
xor edx,edx
mov [ebp-0x4],edx
xor edx,edx
push ebp
push dword 0x460cc6
push dword [fs:edx]
mov [fs:edx],esp
xor edx,edx
mov [ebp-0x8],edx
mov ebx,eax
test ebx,ebx
jz 0x5fcb0
jmp short 0x5fcab
mov esi,ebx
jmp short 0x5fc5e
mov eax,ebx
call dword 0xc07c
mov ebx,eax
movzx eax,byte [ebx]
test al,al
jz 0x5fc6d
sub al,0xa
jz 0x5fc6d
sub al,0x3
jnz 0x5fc55
mov ecx,ebx
sub ecx,esi
lea eax,[ebp-0x4]
mov edx,esi
call dword 0x3b0c
mov eax,[ebp+0x8]
mov eax,[eax-0x4]
mov eax,[eax+0x84]
mov eax,[eax+0x250]
mov edx,[ebp-0x4]
call dword 0x2098c
mov edi,eax
cmp edi,[ebp-0x8]
jng 0x5fc9f
mov [ebp-0x8],edi
cmp byte [ebx],0xd
jnz 0x5fca5
inc ebx
cmp byte [ebx],0xa
jnz 0x5fcab
inc ebx
cmp byte [ebx],0x0
jnz 0x5fc51
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x460ccd
lea eax,[ebp-0x4]
call dword 0x3a1c
ret
jmp dword 0x3384
jmp short 0x5fcbd
mov eax,[ebp-0x8]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
ret
nop
push ebp
mov ebp,esp
add esp,0xffffff70
push ebx
push esi
push edi
xor ecx,ecx
mov [ebp-0x8c],ecx
mov [ebp-0x90],ecx
mov esi,edx
lea edi,[ebp-0x4c]
movsd
movsd
mov [ebp-0x4],eax
lea eax,[ebp-0x44]
mov edx,[dword 0x454570]
call dword 0x4540
lea ebx,[ebp-0x4]
xor eax,eax
push ebp
push dword 0x461066
push dword [fs:eax]
mov [fs:eax],esp
mov eax,[ebx]
mov byte [eax+0x58],0x0
xor eax,eax
mov [ebp-0x14],eax
mov eax,[ebx]
cmp byte [eax+0x88],0x0
jz dword 0x6001f
mov eax,[ebx]
cmp dword [eax+0x60],byte +0x0
jz dword 0x6001f
mov eax,[ebx]
call dword 0x6090c
call dword 0x53bdc
test al,al
jz dword 0x6001f
lea eax,[ebp-0x4c]
mov dl,0x1
call dword 0x3e800
call dword 0x5cc40
mov edx,[ebx]
cmp eax,[edx+0x60]
jnz dword 0x6001f
mov eax,[ebx]
mov eax,[eax+0x60]
mov [ebp-0x44],eax
mov eax,[ebp-0x4c]
mov [ebp-0x3c],eax
mov eax,[ebp-0x48]
mov [ebp-0x38],eax
call dword 0x5fa70
add [ebp-0x38],eax
mov eax,[0x46dca0]
call dword 0x5bfbc
mov [ebp-0x34],eax
mov eax,[ebx]
mov eax,[eax+0x5c]
mov [ebp-0x30],eax
lea edx,[ebp-0x80]
mov eax,[ebx]
mov eax,[eax+0x60]
call dword 0x3fba8
lea esi,[ebp-0x80]
lea edi,[ebp-0x2c]
movsd
movsd
movsd
movsd
lea edx,[ebp-0x54]
mov eax,[ebx]
mov eax,[eax+0x60]
mov ecx,[eax]
call dword [ecx+0x40]
xor eax,eax
mov [ebp-0x5c],eax
xor eax,eax
mov [ebp-0x58],eax
mov eax,[ebx]
mov eax,[eax+0x60]
mov esi,[eax+0x30]
test esi,esi
jz 0x5fde6
lea edx,[ebp-0x5c]
mov eax,esi
mov ecx,[eax]
call dword [ecx+0x40]
jmp short 0x5fe15
mov eax,[ebx]
mov esi,[eax+0x60]
mov eax,esi
mov edx,[dword 0x43d11c]
call dword 0x2d7c
test al,al
jz 0x5fe15
cmp dword [esi+0x1c4],byte +0x0
jz 0x5fe15
lea eax,[ebp-0x5c]
push eax
mov eax,[esi+0x1c4]
push eax
call dword 0x5ea8
mov eax,[ebp-0x58]
sub eax,[ebp-0x50]
push eax
mov eax,[ebp-0x5c]
sub eax,[ebp-0x54]
push eax
lea eax,[ebp-0x2c]
push eax
call dword 0x61f8
lea ecx,[ebp-0x88]
lea edx,[ebp-0x4c]
mov eax,[ebx]
mov eax,[eax+0x60]
call dword 0x3fdc8
mov eax,[ebp-0x88]
mov [ebp-0x1c],eax
mov eax,[ebp-0x84]
mov [ebp-0x18],eax
lea edx,[ebp-0x90]
mov eax,[ebx]
mov eax,[eax+0x60]
call dword 0x5cc08
mov eax,[ebp-0x90]
lea edx,[ebp-0x8c]
call dword 0x3cf58
mov edx,[ebp-0x8c]
lea eax,[ebp-0xc]
call dword 0x3ab4
mov eax,[ebx]
mov eax,[eax+0x74]
mov [ebp-0x10],eax
mov eax,[0x468770]
mov [ebp-0x40],eax
xor eax,eax
mov [ebp-0x8],eax
lea eax,[ebp-0x44]
push eax
mov eax,[ebx]
mov eax,[eax+0x60]
xor ecx,ecx
mov edx,0xb030
call dword 0x41588
test eax,eax
setz [ebp-0x5d]
cmp byte [ebp-0x5d],0x0
jz 0x5feda
mov eax,[ebx]
cmp word [eax+0x15a],byte +0x0
jz 0x5feda
lea eax,[ebp-0x44]
push eax
lea ecx,[ebp-0x5d]
lea edx,[ebp-0xc]
mov esi,[ebx]
mov eax,[esi+0x15c]
call dword [esi+0x158]
cmp byte [ebp-0x5d],0x0
jz 0x5fee8
mov eax,[ebx]
cmp dword [eax+0x60],byte +0x0
jnz 0x5feec
xor eax,eax
jmp short 0x5feee
mov al,0x1
mov edx,[ebx]
mov [edx+0x58],al
mov eax,[ebx]
cmp byte [eax+0x58],0x0
jz dword 0x6001f
cmp dword [ebp-0xc],byte +0x0
jz dword 0x6001f
push ebp
mov eax,[ebp-0x40]
call dword 0x5fbc8
pop ecx
mov eax,[ebx]
mov eax,[eax+0x60]
movzx edx,byte [eax+0x5f]
mov eax,[ebx]
mov eax,[eax+0x84]
mov ecx,[eax]
call dword [ecx+0x74]
mov eax,[ebp-0x8]
push eax
lea eax,[ebp-0x6d]
push eax
mov eax,[ebx]
mov eax,[eax+0x84]
mov ecx,[ebp-0xc]
mov edx,[ebp-0x34]
mov esi,[eax]
call dword [esi+0xe8]
mov eax,[ebp-0x38]
push eax
mov eax,[ebp-0x3c]
push eax
lea eax,[ebp-0x6d]
push eax
call dword 0x61f8
mov eax,[ebx]
mov eax,[eax+0x84]
mov si,0xffc7
call dword 0x2dec
test al,al
jz 0x5ff80
push ebp
mov eax,[ebp-0xc]
call dword 0x5fc28
pop ecx
add eax,byte +0x5
sub [ebp-0x6d],eax
sub [ebp-0x65],eax
lea ecx,[ebp-0x88]
lea edx,[ebp-0x2c]
mov eax,[ebx]
mov eax,[eax+0x60]
call dword 0x3fd18
mov eax,[ebx]
mov edx,[ebp-0x88]
mov [eax+0x64],edx
mov edx,[ebp-0x84]
mov [eax+0x68],edx
lea ecx,[ebp-0x88]
lea edx,[ebp-0x24]
mov eax,[ebx]
mov eax,[eax+0x60]
call dword 0x3fd18
mov eax,[ebx]
mov edx,[ebp-0x88]
mov [eax+0x6c],edx
mov edx,[ebp-0x84]
mov [eax+0x70],edx
mov eax,[ebx]
mov eax,[eax+0x84]
mov edx,[ebp-0x30]
call dword 0x40438
mov eax,[ebp-0x8]
push eax
mov eax,[ebx]
mov eax,[eax+0x84]
mov ecx,[ebp-0xc]
lea edx,[ebp-0x6d]
mov esi,[eax]
call dword [esi+0xe4]
call dword 0x5cd54
mov eax,[ebp-0x14]
test eax,eax
jng 0x60011
xor ecx,ecx
mov edx,eax
mov eax,[ebx]
call dword 0x5f800
jmp short 0x6003a
mov cl,0x1
mov edx,[ebp-0x10]
mov eax,[ebx]
call dword 0x5f800
jmp short 0x6003a
mov eax,[ebp-0x14]
test eax,eax
jng 0x60033
xor ecx,ecx
mov edx,eax
mov eax,[ebx]
call dword 0x5f800
jmp short 0x6003a
mov eax,[ebx]
call dword 0x5fa38
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x46106d
lea eax,[ebp-0x90]
mov edx,0x2
call dword 0x3a40
lea eax,[ebp-0x44]
mov edx,[dword 0x454570]
call dword 0x4610
ret
jmp dword 0x3384
jmp short 0x60047
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret
push ebx
push esi
push edi
push ebp
push ecx
mov ebp,edx
mov esi,eax
xor ebx,ebx
jmp short 0x600ae
lea edi,[ebx+ebx*2]
mov eax,[esi+0xd0]
cmp ebp,[eax+edi*4+0x4]
jnz 0x600a1
mov eax,[esi+0xd0]
mov eax,[eax+edi*4]
mov [esp],eax
jmp dword 0x60132
mov eax,[esi+0xd0]
cmp dword [eax+edi*4],byte -0x1
jz 0x600bd
inc ebx
mov eax,[esi+0xd0]
call dword 0x49d0
cmp ebx,eax
jl 0x60081
mov eax,[esi+0xcc]
mov [esp],eax
inc dword [esi+0xcc]
mov eax,[esi+0xd0]
call dword 0x49d0
cmp ebx,eax
jl 0x60105
mov eax,[esi+0xd0]
call dword 0x49d0
mov ebx,eax
lea eax,[ebx+0x1]
push eax
lea eax,[esi+0xd0]
mov ecx,0x1
mov edx,[dword 0x454590]
call dword 0x4b8c
add esp,byte +0x4
lea eax,[ebx+ebx*2]
mov edx,[esi+0xd0]
mov ecx,[esp]
mov [edx+eax*4],ecx
mov edx,[esi+0xd0]
mov [edx+eax*4+0x4],ebp
mov edx,[esi+0xd0]
cmp dword [ebp+0x344],byte +0x0
setnz cl
mov [edx+eax*4+0x8],cl
mov eax,[esp]
pop edx
pop ebp
pop edi
pop esi
pop ebx
ret
nop
push ebx
push esi
push edi
mov edi,edx
mov esi,eax
mov eax,[0x46dca0]
mov ebx,[eax+0x68]
test ebx,ebx
jz 0x60167
cmp dword [ebx+0x284],byte +0x0
jz 0x60167
mov eax,edi
mov edx,[ebx+0x284]
call dword 0x3a70
jmp short 0x60171
mov eax,edi
mov edx,[esi+0x50]
call dword 0x3a70
pop edi
pop esi
pop ebx
ret
lea eax,[eax+0x0]
push ebx
push ecx
mov ebx,eax
xor eax,eax
mov [esp],eax
cmp word [ebx+0xf2],byte +0x0
jz 0x60199
mov edx,esp
mov eax,[ebx+0xf4]
call dword [ebx+0xf0]
cmp dword [esp],byte +0x0
jnz 0x601a7
call dword 0x5fa0
mov [esp],eax
cmp dword [esp],byte +0x0
jnz 0x601b9
mov eax,[ebx+0x30]
push eax
call dword 0x6048
mov [esp],eax
mov eax,[esp]
pop edx
pop ebx
ret
nop
push ebx
push ecx
mov ebx,eax
xor eax,eax
mov [esp],eax
cmp word [ebx+0xfa],byte +0x0
jz 0x601e1
mov edx,esp
mov eax,[ebx+0xfc]
call dword [ebx+0xf8]
cmp dword [esp],byte +0x0
jnz 0x601f8
cmp dword [ebx+0x44],byte +0x0
jz 0x601f8
mov eax,[ebx+0x44]
call dword 0x4831c
mov [esp],eax
mov eax,[esp]
pop edx
pop ebx
ret
mov eax,eax
push ebx
push esi
push edi
push ebp
add esp,byte -0x8
mov ebx,ecx
mov [esp],edx
mov esi,eax
mov eax,[0x46dca0]
mov edi,[eax+0x68]
test edi,edi
jz 0x6022b
push ebx
xor ecx,ecx
mov edx,[esp+0x4]
mov eax,edi
call dword 0x41588
dec eax
jz 0x6024b
mov ebp,[esi+0x44]
cmp edi,ebp
jz 0x60247
test ebp,ebp
jz 0x60247
push ebx
xor ecx,ecx
mov edx,[esp+0x4]
mov eax,ebp
call dword 0x41588
dec eax
jz 0x6024b
xor eax,eax
jmp short 0x6024d
mov al,0x1
mov [esp+0x4],al
cmp byte [esp+0x4],0x0
jnz 0x6028a
mov eax,ebx
mov edx,[dword 0x45160c]
call dword 0x2d7c
test al,al
jz 0x6028a
cmp byte [ebx+0x6a],0x0
jz 0x6028a
cmp byte [ebx+0x60],0x0
jz 0x6028a
test byte [ebx+0x1c],0x10
jnz 0x6028a
cmp word [ebx+0x42],byte +0x0
setnz dl
mov eax,ebx
call dword 0x511b8
movzx eax,byte [esp+0x4]
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
ret
mov eax,eax
push ebx
push ecx
mov byte [esp],0x0
cmp word [eax+0xda],byte +0x0
jz 0x602b8
mov ecx,esp
mov ebx,eax
mov eax,[ebx+0xdc]
call dword [ebx+0xd8]
movzx eax,byte [esp]
pop edx
pop ebx
ret
nop
push ebx
push ecx
mov byte [esp],0x0
cmp word [eax+0xe2],byte +0x0
jz 0x602e0
mov ecx,esp
mov ebx,eax
mov eax,[ebx+0xe4]
call dword [ebx+0xe0]
movzx eax,byte [esp]
pop edx
pop ebx
ret
nop
push ebx
push dword 0x46130c
call dword 0x5b48
mov ebx,eax
test ebx,ebx
jz 0x60309
push dword 0x461318
push ebx
call dword 0x5b50
mov [0x468774],eax
pop ebx
ret
add [ebp+0x73],dl
gs jc 0x60344
xor ch,[esi]
fs insb
insb
add [eax],al
push ebx
gs jz 0x60368
popad
jns 0x60384
jc 0x60386
fs push edi
imul ebp,[esi+0x64],dword 0x7441776f
jz 0x6039e
imul esp,[edx+0x75],dword 0x736574
add [edx+0x0],ch
push byte +0x0
push byte +0x0
mov eax,[eax+0x30]
push eax
call dword 0x6210
ret
mov edx,[dword 0x468e54]
mov [edx+0x4],eax
mov dword [edx],0x461334
ret
mov eax,[0x468e54]
xor edx,edx
mov [eax],edx
mov [eax+0x4],edx
ret
lea eax,[eax+0x0]
push ebx
push esi
push edi
push ebp
mov edi,edx
mov esi,eax
xor ebx,ebx
call dword 0x5fa8
mov ebp,eax
test ebp,ebp
jnz 0x603c7
mov ebp,[edi]
mov eax,[esi+0x44]
test eax,eax
jz 0x6038e
cmp ebp,[eax+0x29c]
jnz 0x6038e
mov esi,eax
jmp short 0x603b4
mov eax,ebp
call dword 0x3cce8
mov esi,eax
test esi,esi
jnz 0x603b4
push ebp
call dword 0x6090
mov ebp,eax
test ebp,ebp
jz 0x603b4
mov eax,ebp
call dword 0x3cce8
mov esi,eax
test esi,esi
jz 0x6039b
test esi,esi
jz 0x603c7
mov edx,edi
mov eax,esi
mov si,0xffb1
call dword 0x2dec
mov ebx,eax
mov eax,ebx
pop ebp
pop edi
pop esi
pop ebx
ret
mov eax,eax
mov eax,[eax+0x2a4]
mov eax,[eax+0x4]
ret
mov eax,eax
push ebx
push esi
mov esi,edx
mov ebx,eax
mov eax,esi
call dword 0x18874
mov esi,eax
mov eax,ebx
call dword 0x603d0
mov [eax+0x18],esi
pop esi
pop ebx
ret
push ebx
push esi
mov esi,edx
mov ebx,eax
mov eax,esi
call dword 0x17d14
push eax
mov eax,ebx
call dword 0x603d0
pop edx
mov [eax+0x8],dl
pop esi
pop ebx
ret
push ebx
push esi
mov esi,edx
mov ebx,eax
mov eax,esi
call dword 0x18874
mov esi,eax
mov eax,ebx
call dword 0x603d0
mov [eax+0xc],esi
pop esi
pop ebx
ret
push ebx
push esi
mov esi,edx
mov ebx,eax
mov eax,esi
call dword 0x18874
mov esi,eax
mov eax,ebx
call dword 0x603d0
mov [eax+0x14],esi
pop esi
pop ebx
ret
push ebx
push esi
mov esi,edx
mov ebx,eax
mov eax,esi
call dword 0x17d14
push eax
mov eax,ebx
call dword 0x603d0
pop edx
mov [eax+0x28],dl
pop esi
pop ebx
ret
push ebx
push esi
mov esi,edx
mov ebx,eax
mov eax,esi
call dword 0x18874
mov esi,eax
mov eax,ebx
call dword 0x603d0
mov [eax+0x10],esi
pop esi
pop ebx
ret
push ebx
add esp,byte -0x10
mov ebx,eax
call dword 0x27c2c
test al,al
jz dword 0x60538
mov eax,ebx
call dword 0x486bc
test al,al
jz dword 0x60538
mov eax,ebx
call dword 0x603d0
cmp byte [eax+0x8],0x0
jz 0x604f7
cmp byte [eax+0x28],0x0
jnz 0x604d6
mov edx,[eax+0xc]
mov [esp],edx
mov edx,[eax+0x14]
mov [esp+0x4],edx
mov edx,[eax+0x10]
mov [esp+0x8],edx
mov eax,[eax+0x18]
mov [esp+0xc],eax
jmp short 0x60505
mov dword [esp],0xffffffff
mov dword [esp+0x4],0xffffffff
mov dword [esp+0x8],0xffffffff
mov dword [esp+0xc],0xffffffff
jmp short 0x60505
mov eax,esp
xor ecx,ecx
mov edx,0x10
call dword 0x252c
test byte [ebx+0x1c],0x10
jz 0x6051e
push byte -0x1
push byte +0x0
mov eax,ebx
call dword 0x4831c
push eax
call dword 0x6150
jmp short 0x6054f
mov eax,ebx
call dword 0x4831c
mov edx,esp
call dword 0x27b00
mov eax,ebx
mov edx,[eax]
call dword [edx+0x80]
jmp short 0x6054f
test byte [ebx+0x1c],0x10
jz 0x6054f
push byte -0x1
push byte +0x0
mov eax,ebx
call dword 0x4831c
push eax
call dword 0x6150
add esp,byte +0x10
pop ebx
ret
push ebx
push esi
mov esi,edx
mov ebx,eax
mov eax,ebx
call dword 0x603d0
mov edx,[eax+0x18]
mov eax,esi
call dword 0x1a1b8
pop esi
pop ebx
ret
mov eax,eax
push ebx
push esi
mov esi,edx
mov ebx,eax
mov eax,ebx
call dword 0x603d0
movzx edx,byte [eax+0x8]
mov eax,esi
call dword 0x1a1a4
pop esi
pop ebx
ret
nop
push ebx
push esi
mov esi,edx
mov ebx,eax
mov eax,ebx
call dword 0x603d0
mov edx,[eax+0xc]
mov eax,esi
call dword 0x1a1b8
pop esi
pop ebx
ret
mov eax,eax
push ebx
push esi
mov esi,edx
mov ebx,eax
mov eax,ebx
call dword 0x603d0
mov edx,[eax+0x14]
mov eax,esi
call dword 0x1a1b8
pop esi
pop ebx
ret
mov eax,eax
push ebx
push esi
mov esi,edx
mov ebx,eax
mov eax,ebx
call dword 0x603d0
movzx edx,byte [eax+0x28]
mov eax,esi
call dword 0x1a1a4
pop esi
pop ebx
ret
nop
push ebx
push esi
mov esi,edx
mov ebx,eax
mov eax,ebx
call dword 0x603d0
mov edx,[eax+0x10]
mov eax,esi
call dword 0x1a1b8
pop esi
pop ebx
ret
mov eax,eax
push ebx
push esi
push edi
test dl,dl
jz 0x6060b
add esp,byte -0x10
call dword 0x2f14
mov esi,ecx
mov ebx,edx
mov edi,eax
xor edx,edx
mov eax,edi
call dword 0x2bc0
mov [edi+0x4],esi
xor eax,eax
mov [edi+0xc],eax
xor eax,eax
mov [edi+0x10],eax
xor eax,eax
mov [edi+0x14],eax
xor eax,eax
mov [edi+0x18],eax
mov byte [edi+0x28],0x0
mov eax,edi
test bl,bl
jz 0x6064a
call dword 0x2f6c
pop dword [dword fs:0x0]
add esp,byte +0xc
mov eax,edi
pop edi
pop esi
pop ebx
ret
push ebx
push esi
mov esi,edx
mov ebx,eax
mov eax,esi
mov edx,[dword 0x4546ac]
call dword 0x2d7c
test al,al
jz 0x60699
mov eax,esi
movzx edx,byte [eax+0x8]
mov [ebx+0x8],dl
mov edx,[eax+0xc]
mov [ebx+0xc],edx
mov edx,[eax+0x10]
mov [ebx+0x10],edx
mov edx,[eax+0x14]
mov [ebx+0x14],edx
mov edx,[eax+0x18]
mov [ebx+0x18],edx
movzx eax,byte [eax+0x28]
mov [ebx+0x28],al
mov eax,ebx
mov edx,[eax]
call dword [edx+0xc]
pop esi
pop ebx
ret
mov edx,esi
mov eax,ebx
call dword 0x1447c
pop esi
pop ebx
ret
lea eax,[eax+0x0]
push ebx
cmp word [eax+0x22],byte +0x0
jz 0x606ba
mov ebx,eax
mov edx,eax
mov eax,[ebx+0x24]
call dword [ebx+0x20]
pop ebx
ret
push ebx
mov ebx,eax
cmp byte [ebx+0x8],0x0
jz 0x606ec
call dword 0x27c2c
test al,al
jz 0x606ec
cmp byte [ebx+0x28],0x0
jnz 0x606f0
cmp dword [ebx+0xc],byte +0x0
jnz 0x606f0
cmp dword [ebx+0x10],byte +0x0
jnz 0x606f0
cmp dword [ebx+0x14],byte +0x0
jnz 0x606f0
cmp dword [ebx+0x18],byte +0x0
jnz 0x606f0
xor eax,eax
pop ebx
ret
mov al,0x1
pop ebx
ret
push ebx
push esi
push edi
add esp,byte -0x38
mov edi,edx
mov esi,eax
xor ebx,ebx
cmp byte [esi+0x8],0x0
jz dword 0x607da
call dword 0x27c2c
test al,al
jz dword 0x607da
movzx ebx,byte [esi+0x28]
test bl,bl
jnz dword 0x607da
mov edx,esp
mov eax,edi
mov ecx,[eax]
call dword [ecx+0x44]
lea eax,[esp+0x20]
push eax
lea edx,[esp+0x4]
mov ecx,[esi+0x4]
mov eax,edi
call dword 0x42e78
mov eax,[esp+0x20]
mov [esp],eax
mov eax,[esp+0x24]
mov [esp+0x4],eax
lea eax,[esp+0x20]
push eax
lea edx,[esp+0xc]
mov ecx,[esi+0x4]
mov eax,edi
call dword 0x42e78
mov eax,[esp+0x20]
mov [esp+0x8],eax
mov eax,[esp+0x24]
mov [esp+0xc],eax
lea edx,[esp+0x10]
mov eax,[esi+0x4]
mov ecx,[eax]
call dword [ecx+0x44]
mov eax,[esp+0x1c]
sub eax,[esi+0x18]
push eax
lea eax,[esp+0x2c]
push eax
mov ecx,[esp+0x20]
sub ecx,[esi+0x14]
mov edx,[esi+0x10]
mov eax,[esi+0xc]
call dword 0x12a2c
lea esi,[esp+0x28]
lea edi,[esp+0x10]
movsd
movsd
movsd
movsd
push dword [esp+0x4]
push dword [esp+0x4]
lea eax,[esp+0x18]
push eax
call dword 0x6220
test eax,eax
jz 0x607d8
push dword [esp+0xc]
push dword [esp+0xc]
lea eax,[esp+0x18]
push eax
call dword 0x6220
test eax,eax
jz 0x607d8
xor ebx,ebx
jmp short 0x607da
mov bl,0x1
mov eax,ebx
add esp,byte +0x38
pop edi
pop esi
pop ebx
ret
nop
push ebx
mov ebx,eax
cmp dl,[ebx+0x8]
jz 0x60812
mov [ebx+0x8],dl
cmp byte [ebx+0x8],0x0
jz 0x6080b
mov eax,[ebx+0x4]
cmp byte [eax+0x350],0x0
jz 0x6080b
xor edx,edx
mov eax,[ebx+0x4]
call dword 0x5b77c
mov eax,ebx
mov edx,[eax]
call dword [edx+0xc]
pop ebx
ret
push esi
mov esi,eax
sub edx,byte +0x1
jc 0x60826
jz 0x60837
dec edx
jz 0x60848
dec edx
jz 0x60859
jmp short 0x6086f
cmp ecx,[esi+0xc]
jz 0x60868
mov [esi+0xc],ecx
inc ecx
jnz 0x60868
mov byte [esi+0x28],0x1
jmp short 0x60868
cmp ecx,[esi+0x10]
jz 0x60868
mov [esi+0x10],ecx
inc ecx
jnz 0x60868
mov byte [esi+0x28],0x1
jmp short 0x60868
cmp ecx,[esi+0x14]
jz 0x60868
mov [esi+0x14],ecx
inc ecx
jnz 0x60868
mov byte [esi+0x28],0x1
jmp short 0x60868
cmp ecx,[esi+0x18]
jz 0x60868
mov [esi+0x18],ecx
inc ecx
jnz 0x60868
mov byte [esi+0x28],0x1
mov eax,esi
mov edx,[eax]
call dword [edx+0xc]
pop esi
ret
lea eax,[eax+0x0]
cmp dl,[eax+0x28]
jz 0x6089f
cmp byte [eax+0x28],0x0
jz 0x60897
cmp dword [eax+0xc],byte -0x1
jz 0x6089f
cmp dword [eax+0x10],byte -0x1
jz 0x6089f
cmp dword [eax+0x14],byte -0x1
jz 0x6089f
cmp dword [eax+0x18],byte -0x1
jz 0x6089f
mov [eax+0x28],dl
mov edx,[eax]
call dword [edx+0xc]
ret
movzx eax,byte [dword 0x46dccc]
ret
push ebx
push esi
mov ebx,eax
mov eax,[ebx+0x30]
call dword 0x53800
test eax,eax
jz 0x60909
mov byte [dword 0x46dcac],0x0
mov eax,[ebx+0x30]
push eax
call dword 0x6290
mov eax,ebx
call dword 0x5d6c8
mov dl,0x1
mov eax,ebx
call dword 0x5d824
mov eax,[0x46dca0]
mov esi,[eax+0x64]
test esi,esi
jz 0x608f1
mov eax,esi
call dword 0x4831c
push eax
call dword 0x62b0
cmp word [ebx+0x14a],byte +0x0
jz 0x60909
mov edx,ebx
mov eax,[ebx+0x14c]
call dword [ebx+0x148]
pop esi
pop ebx
ret
movzx eax,byte [dword 0x468780]
ret
add [eax],eax
add [eax],al
jo 0x608a1
inc esi
add [edi+edx*8+0x43],bh
add [eax],al
push ebp
mov ebp,esp
xor eax,eax
push ebp
push dword 0x461987
push dword [fs:eax]
mov [fs:eax],esp
inc dword [dword 0x46dca4]
jnz 0x60979
cmp dword [dword 0x46dc9c],byte +0x0
jz 0x6094b
call dword 0x53940
cmp dword [dword 0x46dcb4],byte +0x0
jz 0x6095f
mov eax,[0x46dcb4]
push eax
call dword 0x5a70
mov eax,0x454c20
call dword 0x139b0
mov eax,0x46dcc0
mov edx,[dword 0x45e730]
call dword 0x4b98
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x46198e
ret
jmp dword 0x3384
jmp short 0x60986
pop ebp
ret
fcomp qword [ecx]
inc esi
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax-0x1fffb9e5],ch
sbb al,[esi+0x0]
xor al,0x1b
inc esi
add [edi+0x1b],bh
inc esi
add [edi+0x7800461b],al
add eax,[eax]
add [ebx+esi-0x42d7ffbb],cl
inc ecx
add [eax+0x64],cl
inc ebp
add [esi+0x45],cl
add [esi+edi+0x40],cl
add [esp+ebx*4+0x45],al
add [eax-0x5bffbfc5],cl
cmp eax,[eax+0x0]
mov ah,0x66
inc ebp
add [edi+ebx*4+0x44],bh
add [eax+0x7c00456d],al
push esp
inc ecx
add [eax+ebp*2+0x69100045],ch
inc ebp
add [edx+ebp*2+0x45],cl
add [eax+0x40004410],al
mov ebp,0x76240041
inc ebp
add [edx+edi*4],bl
inc ecx
add ah,ah
lds eax,[ebp+0x0]
mov esp,0xa0004562
cdq
inc esp
add [edi+ebx*4-0x6107ffbc],ch
inc esp
add [eax+0x3],dh
inc esp
add [esp+edx*4+0x44],ah
add [eax+0x72],bl
inc ebp
add al,dh
nop
inc esp
add [eax-0x4bffbbfe],dh
add al,[eax+eax+0x4c]
jnc 0x60a78
add [eax],dh
cmp al,0x44
add [eax+0x640045c2],dh
adc [eax+eax-0x14],al
add al,0x44
add al,dh
adc [eax+eax+0x68],eax
jnz 0x60a90
add [esp+esi*2],ah
inc ebp
add [ebx+edx],ch
inc esp
add [esi+esi*2+0x45],ah
add [esp+edi-0x6ebbffbc],dh
inc esp
add [edx+edx*4],al
inc esp
add al,bh
mov [eax+eax-0x18],es
xchg eax,ecx
inc esp
add [ecx+0x7e380045],ch
inc ebp
add [edx+ebx*2+0x44],ah
add [eax],cl
xchg eax,edx
inc ebp
add [eax-0x67],dl
inc ebp
add [edi+edx*4+0x45],bl
add ah,bh
pop edx
inc esp
add [eax],ah
pop ebx
inc esp
add ah,cl
call dword 0x45:0x9c000045
pop eax
pop ecx
inc esp
add [edi-0x6ccfffbc],cl
inc esp
add [eax],bh
mov [0xa7000045],eax
inc esp
add [eax+0x5000448f],ah
test al,0x44
add [eax-0x73ffba43],ch
pop ebx
inc ebp
add [esi+ebx*2],bh
inc ebp
add [eax],al
lodsb
inc ebp
add al,dl
inc ebp
add [eax+ebp*2+0x45],cl
add ah,dh
rol dword [ebp+0x0],byte 0x80
fs inc ebp
add [esp+edi*4-0x622bffbb],cl
inc ebp
add [eax+0x640045be],al
jnz 0x60b24
add [esi],al
add [esi+0x6000461b],cl
add eax,[eax]
add [eax],al
add [edi],al
inc edx
jnz 0x60b64
jz 0x60b61
outsb
xor [ebx+eax+0x0],esp
add [ecx],al
add [dword 0x6f6d654d],al
xor [eax+0x3],ebp
add [eax],al
add al,[eax]
add eax,0x74696445
xor [ebx+eax+0x0],ebp
add [eax],al
add [edi],al
inc edx
jnz 0x60b8a
jz 0x60b87
outsb
xor dh,[eax+0x3]
add [eax],al
add eax,[eax]
push es
dec esp
popad
bound esp,[ebp+0x6c]
xor [ebx+eax+0x0],esi
add [eax+eax],al
push es
dec ecx
insd
popad
xor [gs:si],eax
add [ebx],dl
add [eax+0x1d],ch
inc esi
add [edx+eax*2],cl
jnz 0x60bb4
jz 0x60bb1
outsb
xor [ebx+0x6c],eax
imul esp,[ebx+0x6b],dword 0x1df80011
inc esi
add [edx],cl
inc esi
outsd
jc 0x60bc1
inc ebx
jc 0x60bbc
popad
jz 0x60bbf
adc eax,[eax]
pushfd
sbb al,0x46
add [edx+eax*2],cl
jnz 0x60bd8
jz 0x60bd5
outsb
xor al,[ebx+0x6c]
imul esp,[ebx+0x6b],dword 0x1fbc0012
inc esi
add [ebx],cl
inc ecx
arpl [ebx+0x65],sp
jo 0x60bee
inc esi
imul ebp,[ebp+0x73],dword 0x2330001
mov esp,0x600461f
push esp
inc esi
outsd
jc 0x60bfa
xor [dword 0x42b16800],eax
add [0x99740042],ah
inc edx
add [eax+edx*4+0x42],ch
add [esp+ebp*8+0x42],dl
add [eax+0x700461b],ch
push es
push esp
inc esi
outsd
jc 0x60c1c
xor esp,ebx
sbb [esi+0x0],eax
in al,0x34
inc ebp
add [eax+0x0],ch
add esp,[edi+0x75]
imul eax,[eax],dword 0xec8b5500
push ecx
push ebx
mov [ebp-0x4],eax
mov eax,[ebp-0x4]
call dword 0x3e9c
xor eax,eax
push ebp
push dword 0x461c38
push dword [fs:eax]
mov [fs:eax],esp
mov ebx,0x1
jmp short 0x60bfd
mov eax,[ebp-0x4]
cmp byte [eax+ebx-0x1],0x0
jnz 0x60bfc
lea eax,[ebp-0x4]
call dword 0x3f0c
mov byte [eax+ebx-0x1],0x20
inc ebx
mov eax,[ebp-0x4]
call dword 0x3cdc
cmp ebx,eax
jng 0x60be5
mov eax,[0x46dcd0]
mov eax,[eax+0x364]
mov eax,[eax+0x270]
mov edx,[ebp-0x4]
mov ecx,[eax]
call dword [ecx+0x38]
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x461c3f
lea eax,[ebp-0x4]
call dword 0x3a1c
ret
jmp dword 0x3384
jmp short 0x60c2f
pop ebx
pop ecx
pop ebp
ret
nop
push ebp
mov ebp,esp
push byte +0x0
push ebx
push esi
push edi
mov edi,ecx
mov esi,edx
mov ebx,eax
xor eax,eax
push ebp
push dword 0x461c8d
push dword [fs:eax]
mov [fs:eax],esp
lea eax,[ebp-0x4]
push eax
mov edx,esi
mov ecx,edi
mov eax,ebx
call dword 0x8b24
mov eax,[ebp-0x4]
call dword 0x60bc0
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x461c94
lea eax,[ebp-0x4]
call dword 0x3a1c
ret
jmp dword 0x3384
jmp short 0x60c84
pop edi
pop esi
pop ebx
pop ecx
pop ebp
ret
mov eax,eax
push ebp
mov ebp,esp
push byte +0x0
push ebx
push esi
mov esi,eax
xor eax,eax
push ebp
push dword 0x461d26
push dword [fs:eax]
mov [fs:eax],esp
xor ecx,ecx
mov dl,0x1
mov eax,[0x430038]
call dword 0x31350
mov ebx,eax
mov eax,[0x461d34]
mov [ebx+0x64],eax
lea eax,[ebx+0x68]
mov edx,0x461d40
call dword 0x3a70
mov eax,ebx
mov edx,[eax]
call dword [edx+0x3c]
test al,al
jz 0x60d09
lea edx,[ebp-0x4]
mov eax,ebx
call dword 0x31cb8
mov edx,[ebp-0x4]
mov eax,[esi+0x368]
call dword 0x402c8
mov eax,[esi+0x360]
mov edx,[eax]
call dword [edx+0xd4]
mov eax,ebx
call dword 0x2bf0
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x461d2d
lea eax,[ebp-0x4]
call dword 0x3a1c
ret
jmp dword 0x3384
jmp short 0x60d1d
pop esi
pop ebx
pop ecx
pop ebp
ret
add [eax],al
add al,0x3
add [eax],al
db 0xff
db 0xff
db 0xff
jmp dword [dword 0x45000000]
js 0x60da8
arpl [ebp+0x74],si
popad
bound ebp,[ebp+0x73]
and [eax],ch
sub ch,[esi]
gs js 0x60db7
cmp ebp,[edx]
fs insb
insb
sub [edx+ebp+0x2e],edi
gs js 0x60dc4
cmp ebp,[edx]
fs insb
insb
add [eax],al
add [ebp-0x75],dl
in al,dx
push byte +0x0
push byte +0x0
push ebx
mov ebx,eax
xor eax,eax
push ebp
push dword 0x461dd1
push dword [fs:eax]
mov [fs:eax],esp
lea edx,[ebp-0x4]
mov eax,[ebx+0x368]
call dword 0x40298
cmp dword [ebp-0x4],byte +0x0
jz 0x60dac
lea edx,[ebp-0x8]
mov eax,[ebx+0x368]
call dword 0x40298
mov eax,[ebp-0x8]
call dword 0x63eb0
jmp short 0x60db6
mov eax,0x461de8
call dword 0x60bc0
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x461dd8
lea eax,[ebp-0x8]
mov edx,0x2
call dword 0x3a40
ret
jmp dword 0x3384
jmp short 0x60dc3
pop ebx
pop ecx
pop ecx
pop ebp
ret
add [eax],al
add bh,bh
db 0xff
db 0xff
dec dword [dword 0x4e000000]
outsd
jz 0x60e54
imul ebp,[esi+0x67],dword 0x206f7420
fs outsd
add [eax],al
add [ebp-0x75],dl
in al,dx
push byte +0x0
push byte +0x0
push ebx
mov ebx,eax
xor eax,eax
push ebp
push dword 0x461eca
push dword [fs:eax]
mov [fs:eax],esp
mov eax,[0x468d34]
mov eax,[eax]
mov edx,0x461ee0
call dword 0x5e4d0
mov edx,0x461ee0
mov eax,ebx
call dword 0x402c8
mov eax,0x461efc
call dword 0x60bc0
mov eax,0x461f3c
call dword 0x60bc0
mov eax,0x461f6c
call dword 0x60bc0
push byte -0x1
mov eax,ebx
call dword 0x4831c
push eax
call dword 0x27c94
mov eax,[0x468d34]
mov eax,[eax]
call dword 0x5e904
call dword 0x224c
test eax,eax
jng 0x60eac
lea edx,[ebp-0x4]
mov eax,0x1
call dword 0x22ac
mov edx,[ebp-0x4]
mov eax,[ebx+0x368]
call dword 0x402c8
mov eax,[0x468d34]
mov eax,[eax]
call dword 0x5e904
lea edx,[ebp-0x8]
mov eax,[ebx+0x368]
call dword 0x40298
mov eax,[ebp-0x8]
call dword 0x63eb0
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x461ed1
lea eax,[ebp-0x8]
call dword 0x3a1c
lea eax,[ebp-0x4]
call dword 0x3a1c
ret
jmp dword 0x3384
jmp short 0x60eb9
pop ebx
pop ecx
pop ecx
pop ebp
ret
add [eax],al
db 0xff
db 0xff
db 0xff
call dword [eax]
add [eax],al
add [ebp+0x6e],al
imul esp,[edi+0x6d],dword 0x55425661
outsb
jo 0x60f4d
arpl [ebx+0x65],bp
jc 0x60ef1
add [eax],al
add bh,bh
db 0xff
db 0xff
push dword [eax+eax]
add [eax],al
inc ebp
outsb
imul esp,[edi+0x6d],dword 0x55425661
outsb
jo 0x60f69
arpl [ebx+0x65],bp
jc 0x60f2d
jna 0x60f3f
xor dh,[cs:eax]
sub al,0x20
arpl [edi+0x6d],bp
jo 0x60f82
insb
and [fs:edi+0x6e],ch
and [eax],dh
xor al,0x2e
xor [ebx],dh
xor dh,[cs:eax]
xor [dword 0x3a303220],esi
xor [eax],dh
add [eax],al
add [eax],al
db 0xff
db 0xff
db 0xff
jmp dword [edi]
add [eax],al
add [ebx+0x75],dl
jo 0x60fb0
outsd
jc 0x60fb7
jnc 0x60f65
inc ebp
outsb
imul esp,[edi+0x6d],dword 0x69562061
jc 0x60fc4
jnz 0x60fb3
insb
and [edx+0x6f],al
js 0x60f78
jna 0x60f8e
xor [cs:eax],esi
cs aaa
xor dh,[cs:eax]
add bh,bh
db 0xff
db 0xff
dec dword [eax+eax+0x0]
add [ecx+0x74],cl
gs jnc 0x60fe6
and [esi+0x65],dh
jc 0x60fea
imul ebp,[edi+0x6e],dword 0x776c6120
popad
jns 0x60ff4
and [edi+0x6e],ch
and [eax+0x74],ch
jz 0x60ff9
jnc 0x60fc5
das
das
outsw
jc 0x61006
insd
cs jz 0x6100a
jz 0x6100a
xor al,0x79
outsd
jnz 0x60fca
arpl [edi+0x6d],bp
and [ecx+0x6e],ah
and [fs:eax+0x74],ch
jz 0x61018
cmp ch,[edi]
das
insb
imul esp,[esi+0x65],dword 0x65686e69
js 0x60fe3
arpl [edi+0x6d],bp
add [eax],al
add [eax],al
push ebp
mov ebp,esp
add esp,0xfffffeec
push ebx
push esi
push edi
xor ecx,ecx
mov [ebp-0x114],ecx
mov [ebp-0x110],ecx
mov esi,edx
mov edi,eax
xor eax,eax
push ebp
push dword 0x4620a5
push dword [fs:eax]
mov [fs:eax],esp
push dword 0x104
lea eax,[ebp-0x109]
push eax
push byte -0x1
mov eax,[esi+0x4]
push eax
call dword 0x27ca4
mov [ebp-0x4],eax
xor ebx,ebx
cmp ebx,[ebp-0x4]
jnl 0x61078
push dword 0x104
lea eax,[ebp-0x109]
push eax
push ebx
mov eax,[esi+0x4]
push eax
call dword 0x27ca4
test eax,eax
jz 0x61072
lea eax,[ebp-0x110]
lea edx,[ebp-0x109]
mov ecx,0x105
call dword 0x3c8c
mov edx,[ebp-0x110]
mov eax,[edi+0x368]
call dword 0x402c8
mov eax,[0x468d34]
mov eax,[eax]
call dword 0x5e904
lea edx,[ebp-0x114]
mov eax,[edi+0x368]
call dword 0x40298
mov eax,[ebp-0x114]
call dword 0x63eb0
inc ebx
cmp ebx,[ebp-0x4]
jl 0x61009
mov eax,[esi+0x4]
push eax
call dword 0x27c9c
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x4620ac
lea eax,[ebp-0x114]
call dword 0x3a1c
lea eax,[ebp-0x110]
call dword 0x3a1c
ret
jmp dword 0x3384
jmp short 0x6108e
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret
nop
add [ecx],ah
inc esi
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
and [esi+0x0],eax
or al,0x0
add [eax],al
pop eax
js 0x6111f
add [eax],bh
ds inc eax
add [esi+edi+0x40],al
add [eax+0x3e],cl
inc eax
add [esi+edi+0x40],cl
add [eax+0x3e],al
inc eax
add [eax-0x5bffbfc5],cl
cmp eax,[eax+0x0]
loopne 0x61139
inc eax
add [eax],dl
inc ebp
push eax
inc ebp
inc esi
imul ebp,[ebp+0x45],dword 0x70656378
jz 0x61178
outsd
outsb
lea eax,[eax+0x0]
pushad
and [esi+0x0],eax
add [eax],al
add [eax],al
add [eax],al
add [eax],al
and [fs:esi+0x0],eax
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
jna 0x61157
inc esi
add [eax],dl
add [eax],al
add [eax+0x38004010],dh
ds inc eax
add [esi+edi+0x40],al
add [eax+0x3e],cl
inc eax
add [esi+edi+0x40],cl
add [eax+0x3e],al
inc eax
add [eax-0x5bffbfc5],cl
cmp eax,[eax+0x0]
les esp,[ecx]
inc esi
add [edx+0xe0046],dl
add [eax],al
add [eax],al
add [eax],eax
add [eax],al
xchg eax,esp
adc [eax+0x0],al
add al,0x0
add [eax],al
pop es
push esp
push eax
inc ebp
inc esi
imul ebp,[ebp-0x75],dword 0x845653c0
db 0xd2
jz 0x6118e
add esp,byte -0x10
call dword 0x2f14
mov ebx,edx
mov esi,eax
xor edx,edx
mov eax,esi
call dword 0x2bc0
mov dl,0x1
mov eax,[0x413200]
call dword 0x2bc0
mov [esi+0xc],eax
mov eax,esi
test bl,bl
jz 0x611bf
call dword 0x2f6c
pop dword [dword fs:0x0]
add esp,byte +0xc
mov eax,esi
pop esi
pop ebx
ret
push ebx
push esi
call dword 0x2fbc
mov ebx,edx
mov esi,eax
mov eax,[esi+0xc]
test eax,eax
jz 0x611db
call dword 0x2bf0
mov edx,ebx
and dl,0xfc
mov eax,esi
call dword 0x2be0
test bl,bl
jng 0x611f2
mov eax,esi
call dword 0x2f64
pop esi
pop ebx
ret
lea eax,[eax+0x0]
mov eax,[eax+0xc]
mov eax,[eax+0x4]
ret
nop
mov eax,[eax+0xc]
mov eax,[eax+0x4]
ret
nop
push ebx
push esi
mov ebx,eax
mov eax,ebx
call dword 0x61200
mov esi,eax
mov eax,ebx
call dword 0x61200
add esi,[eax+0x3c]
mov eax,esi
pop esi
pop ebx
ret
push ebx
push esi
mov ebx,eax
mov eax,ebx
call dword 0x61200
mov esi,eax
mov eax,ebx
call dword 0x61200
add esi,[eax+0x3c]
mov eax,esi
pop esi
pop ebx
ret
push ebx
mov ebx,eax
mov eax,ebx
call dword 0x61208
movzx eax,word [eax+0x6]
pop ebx
ret
push ebx
push esi
mov esi,edx
mov ebx,eax
cmp byte [ebx+0x8],0x0
jnz 0x61278
mov eax,ebx
call dword 0x61208
add eax,0xf8
mov edx,esi
add edx,edx
add edx,edx
add edx,edx
lea edx,[edx+edx*4]
add eax,edx
pop esi
pop ebx
ret
mov eax,ebx
call dword 0x61208
add eax,0x108
mov edx,esi
add edx,edx
add edx,edx
add edx,edx
lea edx,[edx+edx*4]
add eax,edx
pop esi
pop ebx
ret
push ebx
mov ebx,eax
mov eax,ebx
call dword 0x61200
cmp word [eax],0x5a4d
jz 0x612bb
mov ecx,0x462338
mov dl,0x1
mov eax,[0x4620b4]
call dword 0xb450
call dword 0x3464
mov eax,ebx
call dword 0x61200
cmp dword [eax+0x3c],byte +0x0
jz 0x612f0
mov eax,[ebx+0xc]
mov edx,[eax]
call dword [edx]
push edx
push eax
mov eax,ebx
call dword 0x61200
mov eax,[eax+0x3c]
xor edx,edx
cmp edx,[esp+0x4]
jnz 0x612ec
cmp eax,[esp]
pop edx
pop eax
jna 0x61306
jmp short 0x612f0
pop edx
pop eax
jng 0x61306
mov ecx,0x462350
mov dl,0x1
mov eax,[0x4620b4]
call dword 0xb450
call dword 0x3464
mov eax,ebx
call dword 0x61208
cmp dword [eax],0x4550
jz 0x6132b
mov ecx,0x462350
mov dl,0x1
mov eax,[0x4620b4]
call dword 0xb450
call dword 0x3464
pop ebx
ret
add [eax],al
add bh,bh
db 0xff
db 0xff
dec dword [edi]
add [eax],al
add [esi+0x6f],cl
jz 0x6135c
popad
outsb
and [ebp+0x78],al
and [gs:esi+0x69],ah
insb
gs add bh,bh
db 0xff
db 0xff
dec dword [dword 0x4e000000]
outsd
jz 0x61374
popad
and [eax+0x45],dl
and [esi+0x69],ah
insb
add [gs:eax],al
add [ebx+0x56],dl
mov esi,edx
mov ebx,eax
lea eax,[ebx+0x4]
mov edx,esi
call dword 0x3a70
mov edx,esi
mov eax,[ebx+0xc]
call dword 0x16c98
mov byte [ebx+0x8],0x0
mov eax,ebx
call dword 0x61208
movzx eax,word [eax+0x4]
sub ax,0x8664
jz 0x61391
jmp short 0x61395
mov byte [ebx+0x8],0x1
pop esi
pop ebx
ret
push ebx
push esi
push edi
push ebp
mov esi,ecx
mov edi,edx
mov ebx,eax
lea eax,[ebx+0x4]
mov edx,0x462404
call dword 0x3a70
xor ecx,ecx
xor edx,edx
mov eax,[ebx+0xc]
mov ebp,[eax]
call dword [ebp+0x14]
mov eax,esi
xor edx,edx
push edx
push eax
mov eax,[ebx+0xc]
call dword 0x1652c
mov eax,esi
xor edx,edx
push edx
push eax
mov edx,edi
mov eax,[ebx+0xc]
call dword 0x16744
mov byte [ebx+0x8],0x0
mov eax,ebx
call dword 0x61208
movzx eax,word [eax+0x4]
sub ax,0x8664
jz 0x613f0
jmp short 0x613f4
mov byte [ebx+0x8],0x1
pop ebp
pop edi
pop esi
pop ebx
ret
add [eax],al
add bh,bh
db 0xff
db 0xff
dec dword [ebx]
add [eax],al
add [esp],ah
push esp
dec ebp
push eax
and al,0x24
gs js 0x61474
add [ebx+0x56],dl
push edi
push ebp
mov esi,ecx
mov edi,edx
mov ebx,eax
lea eax,[ebx+0x4]
mov edx,0x462478
call dword 0x3a70
xor ecx,ecx
xor edx,edx
mov eax,[ebx+0xc]
mov ebp,[eax]
call dword [ebp+0x14]
mov eax,esi
xor edx,edx
push edx
push eax
mov eax,[ebx+0xc]
call dword 0x1652c
mov edx,edi
mov ecx,esi
mov eax,[ebx+0xc]
mov esi,[eax]
call dword [esi+0x10]
mov byte [ebx+0x8],0x0
mov eax,ebx
call dword 0x61208
movzx eax,word [eax+0x4]
sub ax,0x8664
jz 0x61464
jmp short 0x61468
mov byte [ebx+0x8],0x1
pop ebp
pop edi
pop esi
pop ebx
ret
add [eax],al
add bh,bh
db 0xff
db 0xff
dec dword [ebx]
add [eax],al
add [esp],ah
push esp
dec ebp
push eax
and al,0x24
gs js 0x614e8
add [ebx+0x38e80c40],cl
push edi
sti
inc ebx
lea eax,[eax+0x0]
push ebx
mov eax,[eax+0xc]
mov ebx,[eax]
call dword [ebx+0x14]
pop ebx
ret
nop
push ebx
mov eax,[eax+0xc]
mov ebx,[eax]
call dword [ebx+0xc]
pop ebx
ret
nop
push ebx
push esi
mov esi,eax
mov eax,[esi+0xc]
mov ebx,[eax]
call dword [ebx+0x10]
pop esi
pop ebx
ret
nop
add esp,byte -0x8
mov eax,[eax+0xc]
mov edx,[eax]
call dword [edx]
mov [esp],eax
mov [esp+0x4],edx
mov eax,[esp]
mov edx,[esp+0x4]
pop ecx
pop edx
ret
nop
push ebx
push esi
push edi
mov ebx,edx
mov edi,eax
mov eax,edi
call dword 0x61208
movzx esi,word [eax+0x6]
mov eax,edi
call dword 0x61208
add eax,0xf8
test esi,esi
jna 0x61515
mov edx,[eax+0xc]
cmp ebx,edx
jc 0x6150f
mov ecx,edx
add ecx,[eax+0x10]
cmp ebx,ecx
ja 0x6150f
sub ebx,edx
add ebx,[eax+0x14]
mov eax,ebx
jmp short 0x61517
add eax,byte +0x28
dec esi
jnz 0x614f6
xor eax,eax
pop edi
pop esi
pop ebx
ret
nop
push ebx
mov ebx,eax
mov eax,ebx
xor ecx,ecx
mov edx,0x58
call dword 0x252c
mov dword [ebx],0x67452301
mov dword [ebx+0x4],0xefcdab89
mov dword [ebx+0x8],0x98badcfe
mov dword [ebx+0xc],0x10325476
pop ebx
ret
mov eax,eax
push ebx
push esi
push edi
push ebp
push ecx
mov esi,ecx
mov [esp],edx
mov ebx,eax
mov ebp,[ebx+0x10]
mov eax,esi
add eax,eax
add eax,eax
add eax,eax
add [ebx+0x10],eax
cmp ebp,[ebx+0x10]
jng 0x6156e
inc dword [ebx+0x14]
mov eax,esi
shr eax,byte 0x1d
add [ebx+0x14],eax
shr ebp,byte 0x3
and ebp,byte +0x3f
xor edi,edi
test ebp,ebp
jz 0x615ca
mov edi,ebp
mov eax,0x40
sub eax,ebp
mov ebp,eax
cmp ebp,esi
jng 0x615a4
movzx eax,di
lea edx,[ebx+eax+0x18]
mov eax,[esp]
mov ecx,esi
call dword 0x2050
jmp short 0x61615
movzx eax,di
lea edx,[ebx+eax+0x18]
mov eax,[esp]
mov ecx,ebp
call dword 0x2050
push byte +0xf
lea ecx,[ebx+0x18]
mov eax,ebx
mov edx,0x3
call dword 0x617a8
sub esi,ebp
mov edi,ebp
cmp esi,byte +0x40
jl 0x61602
movzx eax,di
mov edx,[esp]
lea eax,[edx+eax]
lea edx,[ebx+0x18]
mov ecx,0x40
call dword 0x2050
push byte +0xf
lea ecx,[ebx+0x18]
mov eax,ebx
mov edx,0x3
call dword 0x617a8
add di,byte +0x40
sub esi,byte +0x40
cmp esi,byte +0x40
jnl 0x615cf
movzx eax,di
mov edx,[esp]
lea eax,[edx+eax]
lea edx,[ebx+0x18]
mov ecx,esi
call dword 0x2050
pop edx
pop ebp
pop edi
pop esi
pop ebx
ret
nop
push ebx
push esi
mov ebx,edx
mov esi,eax
mov eax,[ebx+0x10]
shr eax,byte 0x3
and ax,byte +0x3f
mov edx,eax
movzx ecx,dl
mov byte [ebx+ecx+0x18],0x80
inc edx
mov cx,0x3f
sub cx,ax
mov eax,ecx
cmp ax,byte +0x8
jnc 0x6167a
movzx edx,dl
lea edx,[ebx+edx+0x18]
movzx eax,ax
xor ecx,ecx
xchg eax,edx
call dword 0x252c
push byte +0xf
lea ecx,[ebx+0x18]
mov eax,ebx
mov edx,0x3
call dword 0x617a8
lea eax,[ebx+0x18]
xor ecx,ecx
mov edx,0x38
call dword 0x252c
jmp short 0x6168f
movzx edx,dl
lea edx,[ebx+edx+0x18]
movzx eax,ax
sub eax,byte +0x8
xor ecx,ecx
xchg eax,edx
call dword 0x252c
mov eax,[ebx+0x10]
mov [ebx+0x50],eax
mov eax,[ebx+0x14]
mov [ebx+0x54],eax
push byte +0xf
lea ecx,[ebx+0x18]
mov eax,ebx
mov edx,0x3
call dword 0x617a8
mov edx,esi
mov eax,ebx
mov ecx,0x10
call dword 0x2050
mov eax,ebx
xor ecx,ecx
mov edx,0x58
call dword 0x252c
pop esi
pop ebx
ret
nop
push ebp
mov ebp,esp
push ebx
push esi
mov ebx,[ebp+0x10]
xor ecx,ebx
and ecx,edx
xor ebx,ecx
add ebx,[ebp+0xc]
add [eax],ebx
movzx ecx,byte [ebp+0x8]
push ecx
mov ecx,0x20
pop ebx
sub ecx,ebx
mov ebx,[eax]
shr ebx,cl
movzx ecx,byte [ebp+0x8]
mov esi,[eax]
shl esi,cl
or ebx,esi
mov [eax],ebx
add [eax],edx
pop esi
pop ebx
pop ebp
ret 0xc
push ebp
mov ebp,esp
push ebx
push esi
mov ebx,[ebp+0x8]
mov esi,ecx
xor esi,edx
and esi,[ebp+0x10]
xor ecx,esi
add ecx,[ebp+0xc]
add [eax],ecx
movzx ecx,bl
push ecx
mov ecx,0x20
pop esi
sub ecx,esi
mov esi,[eax]
shr esi,cl
mov ecx,ebx
mov ebx,[eax]
shl ebx,cl
or esi,ebx
mov [eax],esi
add [eax],edx
pop esi
pop ebx
pop ebp
ret 0xc
push ebp
mov ebp,esp
push ebx
push esi
mov ebx,[ebp+0x8]
xor ecx,edx
xor ecx,[ebp+0x10]
add ecx,[ebp+0xc]
add [eax],ecx
movzx ecx,bl
push ecx
mov ecx,0x20
pop esi
sub ecx,esi
mov esi,[eax]
shr esi,cl
mov ecx,ebx
mov ebx,[eax]
shl ebx,cl
or esi,ebx
mov [eax],esi
add [eax],edx
pop esi
pop ebx
pop ebp
ret 0xc
push ebp
mov ebp,esp
push ebx
push esi
mov ebx,[ebp+0x8]
mov esi,[ebp+0x10]
not esi
or esi,edx
xor ecx,esi
add ecx,[ebp+0xc]
add [eax],ecx
movzx ecx,bl
push ecx
mov ecx,0x20
pop esi
sub ecx,esi
mov esi,[eax]
shr esi,cl
mov ecx,ebx
mov ebx,[eax]
shl ebx,cl
or esi,ebx
mov [eax],esi
add [eax],edx
pop esi
pop ebx
pop ebp
ret 0xc
push ebp
mov ebp,esp
add esp,byte -0x14
push ebx
push esi
push edi
mov ebx,ecx
mov [ebp-0x4],eax
lea esi,[ebp-0x8]
lea edi,[ebp-0xc]
mov eax,[ebp-0x4]
mov eax,[eax]
mov [esi],eax
mov eax,[ebp-0x4]
mov eax,[eax+0x4]
mov [edi],eax
mov eax,[ebp-0x4]
mov eax,[eax+0x8]
mov [ebp-0x10],eax
mov eax,[ebp-0x4]
mov eax,[eax+0xc]
mov [ebp-0x14],eax
mov eax,[ebp-0x14]
push eax
mov eax,[ebx]
add eax,0xd76aa478
push eax
push byte +0x7
mov eax,esi
mov ecx,[ebp-0x10]
mov edx,[edi]
call dword 0x616cc
mov eax,[ebp-0x10]
push eax
mov eax,[ebx+0x4]
add eax,0xe8c7b756
push eax
push byte +0xc
lea eax,[ebp-0x14]
mov ecx,[edi]
mov edx,[esi]
call dword 0x616cc
mov eax,[edi]
push eax
mov eax,[ebx+0x8]
add eax,0x242070db
push eax
push byte +0x11
lea eax,[ebp-0x10]
mov ecx,[esi]
mov edx,[ebp-0x14]
call dword 0x616cc
mov eax,[esi]
push eax
mov eax,[ebx+0xc]
add eax,0xc1bdceee
push eax
push byte +0x16
mov eax,edi
mov ecx,[ebp-0x14]
mov edx,[ebp-0x10]
call dword 0x616cc
mov eax,[ebp-0x14]
push eax
mov eax,[ebx+0x10]
add eax,0xf57c0faf
push eax
push byte +0x7
mov eax,esi
mov ecx,[ebp-0x10]
mov edx,[edi]
call dword 0x616cc
mov eax,[ebp-0x10]
push eax
mov eax,[ebx+0x14]
add eax,0x4787c62a
push eax
push byte +0xc
lea eax,[ebp-0x14]
mov ecx,[edi]
mov edx,[esi]
call dword 0x616cc
mov eax,[edi]
push eax
mov eax,[ebx+0x18]
add eax,0xa8304613
push eax
push byte +0x11
lea eax,[ebp-0x10]
mov ecx,[esi]
mov edx,[ebp-0x14]
call dword 0x616cc
mov eax,[esi]
push eax
mov eax,[ebx+0x1c]
add eax,0xfd469501
push eax
push byte +0x16
mov eax,edi
mov ecx,[ebp-0x14]
mov edx,[ebp-0x10]
call dword 0x616cc
mov eax,[ebp-0x14]
push eax
mov eax,[ebx+0x20]
add eax,0x698098d8
push eax
push byte +0x7
mov eax,esi
mov ecx,[ebp-0x10]
mov edx,[edi]
call dword 0x616cc
mov eax,[ebp-0x10]
push eax
mov eax,[ebx+0x24]
add eax,0x8b44f7af
push eax
push byte +0xc
lea eax,[ebp-0x14]
mov ecx,[edi]
mov edx,[esi]
call dword 0x616cc
mov eax,[edi]
push eax
mov eax,[ebx+0x28]
add eax,0xffff5bb1
push eax
push byte +0x11
lea eax,[ebp-0x10]
mov ecx,[esi]
mov edx,[ebp-0x14]
call dword 0x616cc
mov eax,[esi]
push eax
mov eax,[ebx+0x2c]
add eax,0x895cd7be
push eax
push byte +0x16
mov eax,edi
mov ecx,[ebp-0x14]
mov edx,[ebp-0x10]
call dword 0x616cc
mov eax,[ebp-0x14]
push eax
mov eax,[ebx+0x30]
add eax,0x6b901122
push eax
push byte +0x7
mov eax,esi
mov ecx,[ebp-0x10]
mov edx,[edi]
call dword 0x616cc
mov eax,[ebp-0x10]
push eax
mov eax,[ebx+0x34]
add eax,0xfd987193
push eax
push byte +0xc
lea eax,[ebp-0x14]
mov ecx,[edi]
mov edx,[esi]
call dword 0x616cc
mov eax,[edi]
push eax
mov eax,[ebx+0x38]
add eax,0xa679438e
push eax
push byte +0x11
lea eax,[ebp-0x10]
mov ecx,[esi]
mov edx,[ebp-0x14]
call dword 0x616cc
mov eax,[esi]
push eax
mov eax,[ebx+0x3c]
add eax,0x49b40821
push eax
push byte +0x16
mov eax,edi
mov ecx,[ebp-0x14]
mov edx,[ebp-0x10]
call dword 0x616cc
mov eax,[ebp-0x14]
push eax
mov eax,[ebx+0x4]
add eax,0xf61e2562
push eax
push byte +0x5
mov eax,esi
mov ecx,[ebp-0x10]
mov edx,[edi]
call dword 0x61704
mov eax,[ebp-0x10]
push eax
mov eax,[ebx+0x18]
add eax,0xc040b340
push eax
push byte +0x9
lea eax,[ebp-0x14]
mov ecx,[edi]
mov edx,[esi]
call dword 0x61704
mov eax,[edi]
push eax
mov eax,[ebx+0x2c]
add eax,0x265e5a51
push eax
push byte +0xe
lea eax,[ebp-0x10]
mov ecx,[esi]
mov edx,[ebp-0x14]
call dword 0x61704
mov eax,[esi]
push eax
mov eax,[ebx]
add eax,0xe9b6c7aa
push eax
push byte +0x14
mov eax,edi
mov ecx,[ebp-0x14]
mov edx,[ebp-0x10]
call dword 0x61704
mov eax,[ebp-0x14]
push eax
mov eax,[ebx+0x14]
add eax,0xd62f105d
push eax
push byte +0x5
mov eax,esi
mov ecx,[ebp-0x10]
mov edx,[edi]
call dword 0x61704
mov eax,[ebp-0x10]
push eax
mov eax,[ebx+0x28]
add eax,0x2441453
push eax
push byte +0x9
lea eax,[ebp-0x14]
mov ecx,[edi]
mov edx,[esi]
call dword 0x61704
mov eax,[edi]
push eax
mov eax,[ebx+0x3c]
add eax,0xd8a1e681
push eax
push byte +0xe
lea eax,[ebp-0x10]
mov ecx,[esi]
mov edx,[ebp-0x14]
call dword 0x61704
mov eax,[esi]
push eax
mov eax,[ebx+0x10]
add eax,0xe7d3fbc8
push eax
push byte +0x14
mov eax,edi
mov ecx,[ebp-0x14]
mov edx,[ebp-0x10]
call dword 0x61704
mov eax,[ebp-0x14]
push eax
mov eax,[ebx+0x24]
add eax,0x21e1cde6
push eax
push byte +0x5
mov eax,esi
mov ecx,[ebp-0x10]
mov edx,[edi]
call dword 0x61704
mov eax,[ebp-0x10]
push eax
mov eax,[ebx+0x38]
add eax,0xc33707d6
push eax
push byte +0x9
lea eax,[ebp-0x14]
mov ecx,[edi]
mov edx,[esi]
call dword 0x61704
mov eax,[edi]
push eax
mov eax,[ebx+0xc]
add eax,0xf4d50d87
push eax
push byte +0xe
lea eax,[ebp-0x10]
mov ecx,[esi]
mov edx,[ebp-0x14]
call dword 0x61704
mov eax,[esi]
push eax
mov eax,[ebx+0x20]
add eax,0x455a14ed
push eax
push byte +0x14
mov eax,edi
mov ecx,[ebp-0x14]
mov edx,[ebp-0x10]
call dword 0x61704
mov eax,[ebp-0x14]
push eax
mov eax,[ebx+0x34]
add eax,0xa9e3e905
push eax
push byte +0x5
mov eax,esi
mov ecx,[ebp-0x10]
mov edx,[edi]
call dword 0x61704
mov eax,[ebp-0x10]
push eax
mov eax,[ebx+0x8]
add eax,0xfcefa3f8
push eax
push byte +0x9
lea eax,[ebp-0x14]
mov ecx,[edi]
mov edx,[esi]
call dword 0x61704
mov eax,[edi]
push eax
mov eax,[ebx+0x1c]
add eax,0x676f02d9
push eax
push byte +0xe
lea eax,[ebp-0x10]
mov ecx,[esi]
mov edx,[ebp-0x14]
call dword 0x61704
mov eax,[esi]
push eax
mov eax,[ebx+0x30]
add eax,0x8d2a4c8a
push eax
push byte +0x14
mov eax,edi
mov ecx,[ebp-0x14]
mov edx,[ebp-0x10]
call dword 0x61704
mov eax,[ebp-0x14]
push eax
mov eax,[ebx+0x14]
add eax,0xfffa3942
push eax
push byte +0x4
mov eax,esi
mov ecx,[ebp-0x10]
mov edx,[edi]
call dword 0x6173c
mov eax,[ebp-0x10]
push eax
mov eax,[ebx+0x20]
add eax,0x8771f681
push eax
push byte +0xb
lea eax,[ebp-0x14]
mov ecx,[edi]
mov edx,[esi]
call dword 0x6173c
mov eax,[edi]
push eax
mov eax,[ebx+0x2c]
add eax,0x6d9d6122
push eax
push byte +0x10
lea eax,[ebp-0x10]
mov ecx,[esi]
mov edx,[ebp-0x14]
call dword 0x6173c
mov eax,[esi]
push eax
mov eax,[ebx+0x38]
add eax,0xfde5380c
push eax
push byte +0x17
mov eax,edi
mov ecx,[ebp-0x14]
mov edx,[ebp-0x10]
call dword 0x6173c
mov eax,[ebp-0x14]
push eax
mov eax,[ebx+0x4]
add eax,0xa4beea44
push eax
push byte +0x4
mov eax,esi
mov ecx,[ebp-0x10]
mov edx,[edi]
call dword 0x6173c
mov eax,[ebp-0x10]
push eax
mov eax,[ebx+0x10]
add eax,0x4bdecfa9
push eax
push byte +0xb
lea eax,[ebp-0x14]
mov ecx,[edi]
mov edx,[esi]
call dword 0x6173c
mov eax,[edi]
push eax
mov eax,[ebx+0x1c]
add eax,0xf6bb4b60
push eax
push byte +0x10
lea eax,[ebp-0x10]
mov ecx,[esi]
mov edx,[ebp-0x14]
call dword 0x6173c
mov eax,[esi]
push eax
mov eax,[ebx+0x28]
add eax,0xbebfbc70
push eax
push byte +0x17
mov eax,edi
mov ecx,[ebp-0x14]
mov edx,[ebp-0x10]
call dword 0x6173c
mov eax,[ebp-0x14]
push eax
mov eax,[ebx+0x34]
add eax,0x289b7ec6
push eax
push byte +0x4
mov eax,esi
mov ecx,[ebp-0x10]
mov edx,[edi]
call dword 0x6173c
mov eax,[ebp-0x10]
push eax
mov eax,[ebx]
add eax,0xeaa127fa
push eax
push byte +0xb
lea eax,[ebp-0x14]
mov ecx,[edi]
mov edx,[esi]
call dword 0x6173c
mov eax,[edi]
push eax
mov eax,[ebx+0xc]
add eax,0xd4ef3085
push eax
push byte +0x10
lea eax,[ebp-0x10]
mov ecx,[esi]
mov edx,[ebp-0x14]
call dword 0x6173c
mov eax,[esi]
push eax
mov eax,[ebx+0x18]
add eax,0x4881d05
push eax
push byte +0x17
mov eax,edi
mov ecx,[ebp-0x14]
mov edx,[ebp-0x10]
call dword 0x6173c
mov eax,[ebp-0x14]
push eax
mov eax,[ebx+0x24]
add eax,0xd9d4d039
push eax
push byte +0x4
mov eax,esi
mov ecx,[ebp-0x10]
mov edx,[edi]
call dword 0x6173c
mov eax,[ebp-0x10]
push eax
mov eax,[ebx+0x30]
add eax,0xe6db99e5
push eax
push byte +0xb
lea eax,[ebp-0x14]
mov ecx,[edi]
mov edx,[esi]
call dword 0x6173c
mov eax,[edi]
push eax
mov eax,[ebx+0x3c]
add eax,0x1fa27cf8
push eax
push byte +0x10
lea eax,[ebp-0x10]
mov ecx,[esi]
mov edx,[ebp-0x14]
call dword 0x6173c
mov eax,[esi]
push eax
mov eax,[ebx+0x8]
add eax,0xc4ac5665
push eax
push byte +0x17
mov eax,edi
mov ecx,[ebp-0x14]
mov edx,[ebp-0x10]
call dword 0x6173c
mov eax,[ebp-0x14]
push eax
mov eax,[ebx]
add eax,0xf4292244
push eax
push byte +0x6
mov eax,esi
mov ecx,[ebp-0x10]
mov edx,[edi]
call dword 0x61770
mov eax,[ebp-0x10]
push eax
mov eax,[ebx+0x1c]
add eax,0x432aff97
push eax
push byte +0xa
lea eax,[ebp-0x14]
mov ecx,[edi]
mov edx,[esi]
call dword 0x61770
mov eax,[edi]
push eax
mov eax,[ebx+0x38]
add eax,0xab9423a7
push eax
push byte +0xf
lea eax,[ebp-0x10]
mov ecx,[esi]
mov edx,[ebp-0x14]
call dword 0x61770
mov eax,[esi]
push eax
mov eax,[ebx+0x14]
add eax,0xfc93a039
push eax
push byte +0x15
mov eax,edi
mov ecx,[ebp-0x14]
mov edx,[ebp-0x10]
call dword 0x61770
mov eax,[ebp-0x14]
push eax
mov eax,[ebx+0x30]
add eax,0x655b59c3
push eax
push byte +0x6
mov eax,esi
mov ecx,[ebp-0x10]
mov edx,[edi]
call dword 0x61770
mov eax,[ebp-0x10]
push eax
mov eax,[ebx+0xc]
add eax,0x8f0ccc92
push eax
push byte +0xa
lea eax,[ebp-0x14]
mov ecx,[edi]
mov edx,[esi]
call dword 0x61770
mov eax,[edi]
push eax
mov eax,[ebx+0x28]
add eax,0xffeff47d
push eax
push byte +0xf
lea eax,[ebp-0x10]
mov ecx,[esi]
mov edx,[ebp-0x14]
call dword 0x61770
mov eax,[esi]
push eax
mov eax,[ebx+0x4]
add eax,0x85845dd1
push eax
push byte +0x15
mov eax,edi
mov ecx,[ebp-0x14]
mov edx,[ebp-0x10]
call dword 0x61770
mov eax,[ebp-0x14]
push eax
mov eax,[ebx+0x20]
add eax,0x6fa87e4f
push eax
push byte +0x6
mov eax,esi
mov ecx,[ebp-0x10]
mov edx,[edi]
call dword 0x61770
mov eax,[ebp-0x10]
push eax
mov eax,[ebx+0x3c]
add eax,0xfe2ce6e0
push eax
push byte +0xa
lea eax,[ebp-0x14]
mov ecx,[edi]
mov edx,[esi]
call dword 0x61770
mov eax,[edi]
push eax
mov eax,[ebx+0x18]
add eax,0xa3014314
push eax
push byte +0xf
lea eax,[ebp-0x10]
mov ecx,[esi]
mov edx,[ebp-0x14]
call dword 0x61770
mov eax,[esi]
push eax
mov eax,[ebx+0x34]
add eax,0x4e0811a1
push eax
push byte +0x15
mov eax,edi
mov ecx,[ebp-0x14]
mov edx,[ebp-0x10]
call dword 0x61770
mov eax,[ebp-0x14]
push eax
mov eax,[ebx+0x10]
add eax,0xf7537e82
push eax
push byte +0x6
mov eax,esi
mov ecx,[ebp-0x10]
mov edx,[edi]
call dword 0x61770
mov eax,[ebp-0x10]
push eax
mov eax,[ebx+0x2c]
add eax,0xbd3af235
push eax
push byte +0xa
lea eax,[ebp-0x14]
mov ecx,[edi]
mov edx,[esi]
call dword 0x61770
mov eax,[edi]
push eax
mov eax,[ebx+0x8]
add eax,0x2ad7d2bb
push eax
push byte +0xf
lea eax,[ebp-0x10]
mov ecx,[esi]
mov edx,[ebp-0x14]
call dword 0x61770
mov eax,[esi]
push eax
mov eax,[ebx+0x24]
add eax,0xeb86d391
push eax
push byte +0x15
mov eax,edi
mov ecx,[ebp-0x14]
mov edx,[ebp-0x10]
call dword 0x61770
mov eax,[ebp-0x4]
mov edx,[esi]
add [eax],edx
mov eax,[ebp-0x4]
mov edx,[edi]
add [eax+0x4],edx
mov eax,[ebp-0x4]
mov edx,[ebp-0x10]
add [eax+0x8],edx
mov eax,[ebp-0x4]
mov edx,[ebp-0x14]
add [eax+0xc],edx
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret 0x4
nop
push ebp
mov ebp,esp
add esp,byte -0xc
push ebx
push esi
push edi
mov edi,ecx
mov ebx,edx
mov [ebp-0x4],eax
mov eax,0x4000
call dword 0x1e60
mov [ebp-0x8],eax
mov [ebp-0xc],ebx
xor eax,eax
push ebp
push dword 0x462f4b
push dword [fs:eax]
mov [fs:eax],esp
cmp edi,0x4000
jng 0x61f00
mov bx,0x4000
jmp short 0x61f02
mov ebx,edi
movzx esi,bx
mov ecx,esi
mov edx,[ebp-0x8]
mov eax,[ebp-0xc]
call dword 0x2050
add [ebp-0xc],esi
sub edi,esi
test bx,bx
jna 0x61f29
mov ecx,esi
mov edx,[ebp-0x8]
mov eax,[ebp-0x4]
call dword 0x6154c
cmp bx,0x4000
jnc 0x61ef2
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x462f52
mov edx,0x4000
mov eax,[ebp-0x8]
call dword 0x1e7c
ret
jmp dword 0x3384
jmp short 0x61f3d
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret
lea eax,[eax+0x0]
push ebp
mov ebp,esp
add esp,byte -0x70
push ebx
push esi
push edi
xor ebx,ebx
mov [ebp-0x70],ebx
mov [ebp-0x4],ecx
mov edi,edx
mov esi,eax
xor eax,eax
push ebp
push dword 0x462ff7
push dword [fs:eax]
mov [fs:eax],esp
xor ebx,ebx
lea eax,[ebp-0x14]
mov edx,ebx
inc edx
mov [eax],dl
inc ebx
inc eax
cmp ebx,byte +0x10
jnz 0x61f84
lea eax,[ebp-0x6c]
call dword 0x6151c
lea eax,[ebp-0x6c]
mov ecx,edi
mov edx,esi
call dword 0x61ec4
lea edx,[ebp-0x6c]
lea eax,[ebp-0x14]
call dword 0x6161c
mov eax,[ebp-0x4]
call dword 0x3a1c
mov ebx,0x10
lea esi,[ebp-0x14]
lea ecx,[ebp-0x70]
movzx eax,byte [esi]
mov edx,0x2
call dword 0x7d10
mov edx,[ebp-0x70]
mov eax,[ebp-0x4]
call dword 0x3ce8
mov eax,[ebp-0x4]
inc esi
dec ebx
jnz 0x61fbf
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x462ffe
lea eax,[ebp-0x70]
call dword 0x3a1c
ret
jmp dword 0x3384
jmp short 0x61fee
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret
lea eax,[eax+0x0]
push esp
xor [esi+0x0],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
jo 0x6205a
inc esi
add [eax],cl
add [eax],al
add [eax+esi+0x3e380041],al
inc eax
add [esi+edi+0x40],al
add [eax+0x3e],cl
inc eax
add [esi+edi+0x40],cl
add [eax+0x3e],al
inc eax
add [eax-0x5bffbfc5],cl
cmp eax,[eax+0x0]
aam 0x32
inc esi
add ah,bl
jz 0x62098
add [eax],ah
jns 0x6209c
add [ecx+edi*2],dh
inc ecx
add ah,dl
js 0x620a4
add ah,ah
js 0x620a8
add al,ah
jnz 0x620ac
add ah,dh
js 0x620b0
add [esi],cl
push esp
push esp
outsb
jz 0x620bc
imul ebp,[ebp+0x53],dword 0x61657274
insd
nop
int3
xor [esi+0x0],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
in al,dx
xor [esi+0x0],al
adc al,0x0
add [eax],al
add [edx],dh
inc ecx
add [eax],bh
ds inc eax
add [esi+edi+0x40],al
add [eax+0x3e],cl
inc eax
add [esi+edi+0x40],cl
add [eax+0x3e],al
inc eax
add [eax-0x5bffbfc5],cl
cmp eax,[eax+0x0]
sbb al,0x7c
inc ecx
add ah,bl
jz 0x62110
add [edi*2+0x75400041],dl
inc ecx
add [eax+0x7b],dl
inc ecx
add al,al
jnl 0x62120
add [eax+0x6400417b],cl
jna 0x62128
add [eax+0x7d],al
inc ecx
add [eax],dl
push esp
push esp
outsb
jz 0x6213f
gs insd
outsd
jc 0x62170
push ebx
jz 0x6216c
gs popad
insd
lea eax,[eax+0x0]
push ebx
mov ebx,eax
push byte +0x0
push dword 0x80
push byte +0x2
push byte +0x0
push byte +0x0
push dword 0xc0000000
mov eax,ebx
call dword 0x4348
push eax
call dword 0x5a98
pop ebx
ret
push ebx
push esi
add esp,0xfffffdf4
mov esi,edx
mov ebx,eax
push esp
lea eax,[esp+0x8]
push eax
push dword 0x104
mov eax,ebx
call dword 0x4348
push eax
call dword 0x5b20
mov ecx,eax
lea edx,[esp+0x4]
mov eax,esi
call dword 0x42c8
add esp,0x20c
pop esi
pop ebx
ret
mov eax,eax
push ebx
push esi
mov ebx,edx
mov esi,eax
push byte +0x0
push dword 0x80
push byte +0x3
push byte +0x0
mov eax,ebx
and eax,0xf0
shr eax,byte 0x4
mov eax,[eax*4+0x4688ac]
push eax
and ebx,byte +0x3
mov eax,[ebx*4+0x4688a0]
push eax
mov eax,esi
call dword 0x4348
push eax
call dword 0x5a98
pop esi
pop ebx
ret
mov eax,eax
push ebp
mov ebp,esp
push byte +0x0
push byte +0x0
push byte +0x0
push byte +0x0
push byte +0x0
push byte +0x0
push byte +0x0
push ebx
push esi
test dl,dl
jz 0x621bf
add esp,byte -0x10
call dword 0x2f14
mov esi,ecx
mov [ebp-0x1],dl
mov ebx,eax
mov eax,[ebp+0x8]
xor edx,edx
push ebp
push dword 0x4632ab
push dword [fs:edx]
mov [fs:edx],esp
cmp ax,0xffff
jnz 0x62229
mov eax,esi
call dword 0x62100
test eax,eax
jnl dword 0x62272
lea edx,[ebp-0x10]
mov eax,esi
call dword 0x62124
mov eax,[ebp-0x10]
mov [ebp-0xc],eax
mov byte [ebp-0x8],0xf
lea eax,[ebp-0xc]
push eax
push byte +0x0
lea edx,[ebp-0x14]
mov eax,[0x468db4]
call dword 0x5750
mov ecx,[ebp-0x14]
mov dl,0x1
mov eax,[0x4124b0]
call dword 0xb48c
call dword 0x3464
jmp short 0x62272
movzx edx,ax
mov eax,esi
call dword 0x62160
test eax,eax
jnl 0x62272
lea edx,[ebp-0x18]
mov eax,esi
call dword 0x62124
mov eax,[ebp-0x18]
mov [ebp-0xc],eax
mov byte [ebp-0x8],0xf
lea eax,[ebp-0xc]
push eax
push byte +0x0
lea edx,[ebp-0x1c]
mov eax,[0x468dc8]
call dword 0x5750
mov ecx,[ebp-0x1c]
mov dl,0x1
mov eax,[0x41250c]
call dword 0xb48c
call dword 0x3464
mov ecx,eax
xor edx,edx
mov eax,ebx
call dword 0x16898
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x4632b2
lea eax,[ebp-0x1c]
call dword 0x3a1c
lea eax,[ebp-0x18]
call dword 0x41d0
lea eax,[ebp-0x14]
call dword 0x3a1c
lea eax,[ebp-0x10]
call dword 0x41d0
ret
jmp dword 0x3384
jmp short 0x6228a
mov eax,ebx
cmp byte [ebp-0x1],0x0
jz 0x622c9
call dword 0x2f6c
pop dword [dword fs:0x0]
add esp,byte +0xc
mov eax,ebx
pop esi
pop ebx
mov esp,ebp
pop ebp
ret 0x4
nop
push ebx
push esi
call dword 0x2fbc
mov ebx,edx
mov esi,eax
mov eax,[esi+0x4]
test eax,eax
jl 0x622ec
push eax
call dword 0x5a70
test bl,bl
jng 0x622f7
mov eax,esi
call dword 0x2f64
pop esi
pop ebx
ret
mov eax,eax
push ebp
mov ebp,esp
push ecx
push ebx
mov ebx,eax
push dword 0xffff
mov ecx,edx
mov eax,[0x463008]
mov dl,0x1
call dword 0x621a0
mov [ebp-0x4],eax
xor eax,eax
push ebp
push dword 0x463347
push dword [fs:eax]
mov [fs:eax],esp
mov edx,[ebp-0x4]
mov eax,ebx
call dword 0x16bac
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x46334e
mov eax,[ebp-0x4]
call dword 0x2bf0
ret
jmp dword 0x3384
jmp short 0x6233e
pop ebx
pop ecx
pop ebp
ret
mov eax,eax
push ebp
mov ebp,esp
xor eax,eax
push ebp
push dword 0x463379
push dword [fs:eax]
mov [fs:eax],esp
inc dword [dword 0x46dcd4]
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x463380
ret
jmp dword 0x3384
jmp short 0x62378
pop ebp
ret
mov eax,eax
mov [ebx],dh
inc esi
add [esi],cl
adc [ebp+eax*2+0x6e],dl
imul esp,[edi+0x6d],dword 0x6c694661
gs inc ebp
outsb
jz 0x6240b
jns 0x623df
add [eax],al
add [edx],al
add [eax],al
add [eax+0xc004010],ah
add [eax],al
add [eax+0x38004010],ah
add [eax],al
add [ebx+0x4633b8c0],cl
add [ecx],dl
add ch,[esi]
xor al,[ecx]
add [eax],al
add [eax],al
add [eax],al
add [ecx],dl
add [eax],al
add [eax+edx+0x40],dl
add [esi],al
gs outsb
imul ebp,[bp+0x65],dword 0x4633d890
add [esi],cl
adc al,0x54
inc ebp
outsb
imul esp,[edi+0x6d],dword 0x67655261
imul esi,[ebx+0x74],dword 0x6e457972
jz 0x6245f
jns 0x6241b
add [eax],al
add [ebx],al
add [eax],al
add [eax+0xb004010],ah
add [eax],al
add [eax+0x18004010],ah
add [eax],al
add [ebx+esi+0x280046],dh
add [eax],al
mov eax,eax
xor al,0x2e
xor [eax],esi
add [eax],al
add [eax],al
xor al,0x2e
xor dh,[eax]
add [eax],al
add [eax],al
xor al,0x2e
xor esi,[eax]
add [eax],al
add [eax],al
xor al,0x2e
xor al,0x30
add [eax],al
add [eax],al
xor al,0x2e
xor eax,0x30
add [esi+ebp],dh
xor [ss:eax],al
add [eax],al
add [esi+ebp],dh
aaa
xor [eax],al
add [eax],al
add [esi+ebp],dh
cmp [eax],dh
add [eax],al
add [eax],al
xor al,0x2e
cmp [eax],esi
add [eax],al
add [eax],al
xor eax,0x30302e
add [eax],al
add [dword 0x30312e],dh
add [eax],al
add [dword 0x30332e],dh
add [eax],al
add [dword 0x30342e],dh
add [eax],al
add [dword 0x30352e],dh
add [eax],al
add [dword 0x30362e],dh
add [eax],al
add [dword 0x30382e],dh
add [eax],al
add [esi],dh
xor [cs:eax],dh
add [eax],al
add [eax],al
xor [cs:eax],esi
add [eax],al
add [eax],al
xor dh,[cs:eax]
add [eax],al
add [eax],al
xor esi,[cs:eax]
add [eax],al
add [eax],al
cs xor al,0x30
add [eax],al
add [eax],al
cs xor eax,0x30
add [esi],dh
xor [ss:eax],al
add [eax],al
add [esi],dh
cs aaa
xor [eax],al
add [eax],al
add [esi],dh
cmp [cs:eax],dh
add [eax],al
add [eax],al
cmp [cs:eax],esi
add [eax],al
add [eax],al
aaa
xor [cs:eax],dh
add [eax],al
add [eax],al
aaa
xor [cs:eax],esi
add [eax],al
add [eax],al
aaa
xor dh,[cs:eax]
add [eax],al
add [eax],al
xor al,0x2e
xor al,0x30
add [eax],al
add [eax],al
xor al,0x2e
xor [ss:eax],al
add [eax],al
add [esi+ebp],dh
aaa
xor [eax],al
add [eax],al
add [esi+ebp],dh
cmp [eax],dh
add [eax],al
add [eax],al
xor al,0x2e
cmp [eax],esi
das
xor eax,0x30322e
add [eax],al
xor eax,0x30302e
add [eax],al
add [dword 0x30332e],dh
add [eax],al
add [dword 0x30342e],dh
add [eax],al
add [dword 0x30352e],dh
add [eax],al
add [dword 0x30362e],dh
add [eax],al
add [dword 0x30382e],dh
add [eax],al
add [esi],dh
xor [cs:eax],dh
add [eax],al
add [eax],al
xor [cs:eax],esi
das
xor dh,[cs:eax]
add [eax],al
add [esi],dh
xor esi,[cs:eax]
add [eax],al
add [eax],al
cs xor al,0x30
add [eax],al
add [eax],al
cs xor eax,0x30
add [esi],dh
xor [ss:eax],al
add [eax],al
add [esi],dh
cs aaa
xor [eax],al
add [eax],al
add [esi],dh
cmp [cs:eax],esi
add [eax],al
add [eax],al
aaa
xor [cs:eax],dh
add [eax],al
add [eax],al
aaa
xor [cs:eax],esi
add [eax],al
add [eax],al
aaa
xor dh,[cs:eax]
add [eax],al
add [eax],al
dec ebx
gs jns 0x62613
outsd
jc 0x62616
push edx
inc ebp
inc edi
pop edi
push ebx
pop edx
add [eax],al
add [edx+0x45],dl
inc edi
pop edi
inc edx
dec ecx
dec esi
inc ecx
push edx
pop ecx
add [eax],al
push edx
inc ebp
inc edi
pop edi
inc esp
push edi
dec edi
push edx
inc esp
add [eax],al
add [edx+0x45],dl
inc edi
pop edi
push ecx
push edi
dec edi
push edx
inc esp
add [eax],al
add [edx+0x45],dl
inc edi
pop edi
dec ebp
push ebp
dec esp
push esp
dec ecx
pop edi
push ebx
pop edx
add [eax],al
add [eax],al
push edx
inc ebp
inc edi
pop edi
inc ebp
pop eax
push eax
inc ecx
dec esi
inc esp
pop edi
push ebx
pop edx
add [eax],al
add [ebx+0x56],dl
push edi
push ebp
mov ebp,edx
mov edi,eax
mov eax,ebp
mov edx,0x463648
call dword 0x3a70
mov esi,0x1d
mov ebx,0x4688c0
cmp edi,[ebx]
jnz 0x62632
mov eax,ebp
mov edx,[ebx+0x4]
call dword 0x3c14
jmp short 0x62638
add ebx,byte +0x9
dec esi
jnz 0x62622
pop ebp
pop edi
pop esi
pop ebx
ret
add [eax],al
add bh,bh
db 0xff
db 0xff
inc dword [edi]
add [eax],al
add [ebp+0x4e],dl
dec ebx
dec esi
dec edi
push edi
dec esi
add [ebx+0x56],dl
push edi
push ebp
mov ebp,edx
mov edi,eax
mov eax,ebp
mov edx,0x463694
call dword 0x3a70
mov esi,0x16
mov ebx,0x4689c8
cmp edi,[ebx]
jnz 0x6267e
mov eax,ebp
mov edx,[ebx+0x4]
call dword 0x3c14
jmp short 0x62684
add ebx,byte +0x9
dec esi
jnz 0x6266e
pop ebp
pop edi
pop esi
pop ebx
ret
add [eax],al
add bh,bh
db 0xff
db 0xff
inc dword [edi]
add [eax],al
add [ebp+0x4e],dl
dec ebx
dec esi
dec edi
push edi
dec esi
add [esi-0x75],dl
lock xor eax,eax
mov ecx,0x1d
mov edx,0x4688c0
cmp esi,[edx]
jnz 0x626b5
movzx eax,byte [edx+0x8]
pop esi
ret
add edx,byte +0x9
dec ecx
jnz 0x626ab
pop esi
ret
lea eax,[eax+0x0]
push esi
mov esi,eax
xor eax,eax
mov ecx,0x16
mov edx,0x4689c8
cmp esi,[edx]
jnz 0x626d9
movzx eax,byte [edx+0x8]
pop esi
ret
add edx,byte +0x9
dec ecx
jnz 0x626cf
pop esi
ret
lea eax,[eax+0x0]
push ebx
push esi
push edi
mov edi,edx
mov esi,eax
mov dl,0x1
mov eax,[0x462114]
call dword 0x61180
mov ebx,eax
mov ecx,edi
mov edx,esi
mov eax,ebx
call dword 0x61410
cmp byte [ebx+0x8],0x0
jz 0x62719
mov eax,ebx
call dword 0x61224
mov esi,[eax+0x98]
jmp short 0x62726
mov eax,ebx
call dword 0x61208
mov esi,[eax+0x88]
xor edi,edi
test esi,esi
jz 0x62745
mov edx,esi
mov eax,ebx
call dword 0x614d4
mov esi,eax
mov eax,ebx
call dword 0x611f8
add esi,eax
mov eax,esi
mov edi,[eax+0x4]
mov eax,ebx
call dword 0x2bf0
mov eax,edi
pop edi
pop esi
pop ebx
ret
mov eax,eax
push ebx
push esi
push edi
mov edi,edx
mov esi,eax
mov dl,0x1
mov eax,[0x462114]
call dword 0x61180
mov ebx,eax
mov ecx,edi
mov edx,esi
mov eax,ebx
call dword 0x61410
cmp byte [ebx+0x8],0x0
jz 0x62786
mov eax,ebx
call dword 0x61224
mov esi,[eax+0x1c]
jmp short 0x62790
mov eax,ebx
call dword 0x61208
mov esi,[eax+0x1c]
mov eax,ebx
call dword 0x2bf0
mov eax,esi
pop edi
pop esi
pop ebx
ret
lea eax,[eax+0x0]
push ebp
mov ebp,esp
add esp,byte -0x8
push ebx
push esi
push edi
xor ebx,ebx
mov [ebp-0x8],ebx
mov edi,ecx
mov esi,edx
mov [ebp-0x4],eax
xor eax,eax
push ebp
push dword 0x463811
push dword [fs:eax]
mov [fs:eax],esp
mov eax,edi
call dword 0x41d0
mov eax,[esi]
add eax,[ebp-0x4]
movzx ebx,word [eax]
jmp short 0x627f3
lea eax,[ebp-0x8]
mov edx,ebx
call dword 0x42ec
mov edx,[ebp-0x8]
mov eax,edi
call dword 0x4364
add dword [esi],byte +0x2
mov eax,[esi]
add eax,[ebp-0x4]
movzx ebx,word [eax]
test bx,bx
jnz 0x627d4
add dword [esi],byte +0x2
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x463818
lea eax,[ebp-0x8]
call dword 0x41d0
ret
jmp dword 0x3384
jmp short 0x62808
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
ret
nop
push ebp
mov ebp,esp
add esp,byte -0x10
push ebx
push esi
push edi
xor ebx,ebx
mov [ebp-0x10],ebx
mov [ebp-0x8],ecx
mov ebx,edx
mov [ebp-0x4],eax
mov esi,[ebp+0x8]
xor eax,eax
push ebp
push dword 0x4638a4
push dword [fs:eax]
mov [fs:eax],esp
mov eax,esi
call dword 0x41d0
xor eax,eax
mov [ebp-0xc],eax
mov eax,[ebx]
add eax,[ebp-0x4]
movzx edi,word [eax]
mov eax,[ebp-0xc]
cmp eax,[ebp-0x8]
jnc 0x6288e
lea eax,[ebp-0x10]
mov edx,edi
call dword 0x42ec
mov edx,[ebp-0x10]
mov eax,esi
call dword 0x4364
add dword [ebx],byte +0x2
add dword [ebp-0xc],byte +0x2
mov eax,[ebx]
add eax,[ebp-0x4]
movzx edi,word [eax]
mov eax,[ebp-0xc]
cmp eax,[ebp-0x8]
jc 0x62863
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x4638ab
lea eax,[ebp-0x10]
call dword 0x41d0
ret
jmp dword 0x3384
jmp short 0x6289b
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret 0x4
push ebp
mov ebp,esp
add esp,byte -0x24
push ebx
push esi
push edi
mov [ebp-0x5],cl
mov esi,edx
mov [ebp-0x4],eax
lea eax,[ebp-0x4]
call dword 0x4520
xor eax,eax
push ebp
push dword 0x463a6a
push dword [fs:eax]
mov [fs:eax],esp
mov dl,0x1
mov eax,[0x463080]
call dword 0x2bc0
mov ebx,eax
xor ecx,ecx
xor edx,edx
mov eax,ebx
mov edi,[eax]
call dword [edi+0x14]
xor eax,eax
push ebp
push dword 0x463a48
push dword [fs:eax]
mov [fs:eax],esp
cmp byte [dword 0x46dce0],0x0
jz dword 0x62a13
movzx eax,byte [ebp-0x5]
dec eax
sub al,0x3
jnc 0x62960
mov eax,[ebp+0x10]
call dword 0x1e60
mov [ebp-0xc],eax
mov eax,[ebp+0x10]
push eax
mov edi,[ebp-0xc]
push edi
mov eax,[ebp+0x8]
push eax
mov eax,[0x46dcdc]
call dword 0x611f8
add esi,eax
push esi
call dword 0x64790
add esp,byte +0x10
mov [ebp-0x10],eax
mov edx,edi
mov ecx,[ebp-0x10]
mov eax,ebx
mov esi,[eax]
call dword [esi+0x10]
mov eax,[ebp-0xc]
call dword 0x1e7c
jmp dword 0x62a2b
mov eax,0x10000
call dword 0x1e60
mov [ebp-0xc],eax
xor eax,eax
mov [ebp-0x20],eax
xor eax,eax
mov [ebp-0x24],eax
jmp short 0x629ee
mov eax,[0x46dcdc]
call dword 0x611f8
add eax,esi
add eax,[ebp-0x20]
mov edx,[eax]
mov [ebp-0x18],edx
mov edx,[eax+0x4]
mov [ebp-0x14],edx
mov eax,[0x46dcdc]
call dword 0x611f8
add eax,esi
add eax,[ebp-0x20]
add eax,byte +0x8
mov eax,[eax]
mov [ebp-0x1c],eax
add dword [ebp-0x20],byte +0xc
push dword 0x10000
mov eax,[ebp-0xc]
push eax
mov eax,[ebp-0x1c]
push eax
mov eax,[0x46dcdc]
call dword 0x611f8
add eax,esi
xor edx,edx
add eax,[ebp-0x18]
adc edx,[ebp-0x14]
push eax
call dword 0x64790
add esp,byte +0x10
mov [ebp-0x10],eax
mov eax,[ebp-0x10]
add [ebp-0x24],eax
mov edx,[ebp-0xc]
mov ecx,[ebp-0x10]
mov eax,ebx
mov edi,[eax]
call dword [edi+0x10]
mov eax,[ebp-0x24]
xor edx,edx
cmp edx,[ebp+0x14]
jnz 0x62a03
cmp eax,[ebp+0x10]
jc dword 0x62979
jmp short 0x62a09
jl dword 0x62979
mov eax,[ebp-0xc]
call dword 0x1e7c
jmp short 0x62a2b
mov eax,[0x46dcdc]
call dword 0x611f8
mov edx,eax
add edx,esi
mov ecx,[ebp+0x8]
mov eax,ebx
mov esi,[eax]
call dword [esi+0x10]
mov edx,[ebp-0x4]
mov eax,ebx
call dword 0x622fc
mov eax,ebx
call dword 0x2bf0
mov bl,0x1
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
jmp short 0x62a54
jmp dword 0x30d0
xor ebx,ebx
call dword 0x34e0
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x463a71
lea eax,[ebp-0x4]
call dword 0x41d0
ret
jmp dword 0x3384
jmp short 0x62a61
mov eax,ebx
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret 0x10
push ebp
mov ebp,esp
push ecx
mov ecx,0x16
push byte +0x0
push byte +0x0
dec ecx
jnz 0x62a85
push ecx
xchg ecx,[ebp-0x4]
push ebx
push esi
push edi
mov [ebp-0x49],cl
mov edi,edx
mov [ebp-0x4],eax
lea eax,[ebp-0x4]
call dword 0x4520
lea eax,[ebp-0x48]
mov edx,[dword 0x463384]
call dword 0x4540
xor eax,eax
push ebp
push dword 0x463eef
push dword [fs:eax]
mov [fs:eax],esp
mov eax,[0x46dce4]
mov edx,[eax+0x14]
add edx,[dword 0x46dce8]
add edx,edi
xor ecx,ecx
mov eax,[0x46dcdc]
call dword 0x61490
lea edx,[ebp-0x50]
mov ecx,0x4
mov eax,[0x46dcdc]
call dword 0x6149c
mov eax,[ebp-0x50]
call dword 0x1e60
mov ebx,eax
mov edx,ebx
mov ecx,[ebp-0x50]
mov eax,[0x46dcdc]
call dword 0x6149c
mov esi,ebx
mov eax,esi
mov eax,[eax]
mov [ebp-0x48],eax
mov eax,esi
add eax,byte +0x4
mov eax,[eax]
mov [ebp-0x44],eax
mov eax,esi
add eax,byte +0x8
mov eax,[eax]
mov [ebp-0x40],eax
mov dword [ebp-0x54],0xc
lea ecx,[ebp-0x58]
lea edx,[ebp-0x54]
mov eax,ebx
call dword 0x627a0
mov edx,[ebp-0x58]
lea eax,[ebp-0x3c]
call dword 0x4234
mov eax,esi
add eax,[ebp-0x54]
movzx eax,byte [eax]
mov [ebp-0x38],al
inc dword [ebp-0x54]
mov edx,eax
dec dl
jz dword 0x62d76
dec dl
jz 0x62b6b
dec dl
jz dword 0x62dfc
jmp dword 0x62e3c
mov eax,esi
add eax,[ebp-0x54]
movzx eax,byte [eax]
mov [ebp-0x37],al
inc dword [ebp-0x54]
mov eax,esi
add eax,[ebp-0x54]
movzx eax,byte [eax]
mov [ebp-0x36],al
inc dword [ebp-0x54]
mov eax,esi
add eax,[ebp-0x54]
mov edx,[eax]
mov [ebp-0x35],edx
mov edx,[eax+0x4]
mov [ebp-0x31],edx
add dword [ebp-0x54],byte +0x8
mov eax,esi
add eax,[ebp-0x54]
mov edx,[eax]
mov [ebp-0x2d],edx
mov edx,[eax+0x4]
mov [ebp-0x29],edx
add dword [ebp-0x54],byte +0x8
mov eax,esi
add eax,[ebp-0x54]
mov edx,[eax]
mov [ebp-0x25],edx
mov edx,[eax+0x4]
mov [ebp-0x21],edx
add dword [ebp-0x54],byte +0x8
mov eax,esi
add eax,[ebp-0x54]
mov edx,[eax]
mov [ebp-0x1d],edx
mov edx,[eax+0x4]
mov [ebp-0x19],edx
add dword [ebp-0x54],byte +0x8
mov eax,esi
add eax,[ebp-0x54]
mov eax,[eax]
mov [ebp-0x15],eax
add dword [ebp-0x54],byte +0x4
mov eax,esi
add eax,[ebp-0x54]
movzx eax,byte [eax]
mov [ebp-0x11],al
inc dword [ebp-0x54]
lea ecx,[ebp-0x5c]
lea edx,[ebp-0x54]
mov eax,ebx
call dword 0x627a0
mov edx,[ebp-0x5c]
lea eax,[ebp-0x10]
call dword 0x4234
movzx eax,byte [ebp-0x49]
dec eax
sub al,0x4
jnc 0x62c35
mov dword [ebp-0xc],0x0
mov dword [ebp-0x8],0x0
add esi,[ebp-0x54]
mov eax,[esi]
xor edx,edx
mov [ebp-0xc],eax
mov [ebp-0x8],edx
add dword [ebp-0x54],byte +0x4
jmp short 0x62c47
add esi,[ebp-0x54]
mov eax,[esi]
mov [ebp-0xc],eax
mov eax,[esi+0x4]
mov [ebp-0x8],eax
add dword [ebp-0x54],byte +0x8
movzx eax,byte [dword 0x463f00]
push eax
lea eax,[ebp-0x78]
push eax
lea eax,[ebp-0x7c]
mov edx,[ebp-0x4]
call dword 0x3ca4
mov eax,[ebp-0x7c]
xor ecx,ecx
mov edx,0x463f0c
call dword 0xc860
mov eax,[ebp-0x78]
mov [ebp-0x74],eax
mov byte [ebp-0x70],0xb
mov eax,[ebp-0x3c]
mov [ebp-0x6c],eax
mov byte [ebp-0x68],0xf
lea eax,[ebp-0x35]
mov [ebp-0x64],eax
mov byte [ebp-0x60],0x10
lea edx,[ebp-0x74]
mov ecx,0x2
mov eax,0x463f18
call dword 0x60c44
lea eax,[ebp-0x80]
mov edx,[ebp-0x4]
call dword 0x3ca4
mov eax,[ebp-0x80]
call dword 0x80cc
push dword [ebp-0x31]
push dword [ebp-0x35]
push dword [ebp-0x8]
push dword [ebp-0xc]
push dword [ebp-0x4]
push dword 0x463f38
push dword [ebp-0x3c]
lea eax,[ebp-0x84]
mov edx,0x3
call dword 0x43c4
mov eax,[ebp-0x84]
mov edx,[dword 0x46dce4]
mov edx,[edx+0x14]
add edx,[dword 0x46dce8]
add edx,edi
add edx,byte +0x4
add edx,[ebp-0x54]
movzx ecx,byte [ebp-0x49]
call dword 0x628b4
test al,al
jnz 0x62d68
movzx eax,byte [dword 0x463f00]
push eax
lea eax,[ebp-0x98]
push eax
lea eax,[ebp-0x9c]
mov edx,[ebp-0x4]
call dword 0x3ca4
mov eax,[ebp-0x9c]
xor ecx,ecx
mov edx,0x463f0c
call dword 0xc860
mov eax,[ebp-0x98]
mov [ebp-0x94],eax
mov byte [ebp-0x90],0xb
mov eax,[ebp-0x3c]
mov [ebp-0x8c],eax
mov byte [ebp-0x88],0xf
lea edx,[ebp-0x94]
mov ecx,0x1
mov eax,0x463f44
call dword 0x60c44
lea esi,[edi+0x4]
add esi,[ebp-0x50]
add esi,[ebp-0xc]
jmp dword 0x62e64
lea esi,[edi+0x4]
add esi,[ebp-0x50]
xor edi,edi
jmp short 0x62df5
push dword [ebp-0x4]
push dword 0x463f38
movzx eax,byte [dword 0x463f00]
push eax
lea eax,[ebp-0xa8]
push eax
lea eax,[ebp-0xac]
mov edx,[ebp-0x3c]
call dword 0x3ca4
mov eax,[ebp-0xac]
mov ecx,0x463f90
mov edx,0x463fa0
call dword 0xc860
mov edx,[ebp-0xa8]
lea eax,[ebp-0xa4]
call dword 0x4338
push dword [ebp-0xa4]
lea eax,[ebp-0xa0]
mov edx,0x3
call dword 0x43c4
mov eax,[ebp-0xa0]
movzx ecx,byte [ebp-0x49]
mov edx,esi
call dword 0x62a7c
mov esi,eax
inc edi
cmp edi,[ebp-0x40]
jc 0x62d80
jmp short 0x62e64
lea esi,[edi+0x4]
add esi,[ebp-0x50]
xor edi,edi
jmp short 0x62e35
push dword [ebp-0x4]
push dword 0x463f38
push dword [ebp-0x3c]
lea eax,[ebp-0xb0]
mov edx,0x3
call dword 0x43c4
mov eax,[ebp-0xb0]
movzx ecx,byte [ebp-0x49]
mov edx,esi
call dword 0x62a7c
mov esi,eax
inc edi
cmp edi,[ebp-0x40]
jc 0x62e06
jmp short 0x62e64
movzx eax,al
mov [ebp-0xb8],eax
mov byte [ebp-0xb4],0x0
lea edx,[ebp-0xb8]
xor ecx,ecx
mov eax,0x463fac
call dword 0x60c44
lea esi,[edi+0x4]
add esi,[ebp-0x50]
mov eax,ebx
call dword 0x1e7c
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x463ef6
lea eax,[ebp-0xb0]
call dword 0x41d0
lea eax,[ebp-0xac]
mov edx,0x2
call dword 0x3a40
lea eax,[ebp-0xa4]
mov edx,0x2
call dword 0x41e8
lea eax,[ebp-0x9c]
mov edx,0x2
call dword 0x3a40
lea eax,[ebp-0x84]
call dword 0x41d0
lea eax,[ebp-0x80]
mov edx,0x3
call dword 0x3a40
lea eax,[ebp-0x5c]
mov edx,0x2
call dword 0x41e8
lea eax,[ebp-0x48]
mov edx,[dword 0x463384]
call dword 0x4610
lea eax,[ebp-0x4]
call dword 0x41d0
ret
jmp dword 0x3384
jmp short 0x62e78
mov eax,esi
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret
add [ecx],al
add [eax],al
add bh,bh
db 0xff
db 0xff
inc dword [edx]
add [eax],al
add [esi],ch
pop esp
add [eax],al
db 0xff
db 0xff
db 0xff
call dword far [ebx]
add [eax],al
add [ebx+0x2b],bl
pop ebp
and [esi+0x69],al
insb
and [gs:edx],ah
and eax,0x73255c73
and ch,[eax]
jnc 0x62f95
jpe 0x62f93
cmp eax,0x78257830
add [edx],al
add [eax],al
add [eax+eax+0x0],bl
add bh,bh
db 0xff
db 0xff
inc dword [eax+0x0]
add [eax],al
pop ebx
js 0x62fa4
and [ebp+0x78],al
jz 0x62fbe
popad
arpl [ecx+ebp*2+0x6f],si
outsb
and [edi+0x66],ch
and [esi+0x69],ah
insb
and [dword gs:0x61662073],ah
imul ebp,[ebp+0x64],dword 0x7270202c
outsd
db 0x62
popad
bound ebp,[ecx+edi*2+0x20]
arpl [edi+0x72],bp
jc 0x62fe9
jo 0x62fea
and [fs:ebp+0x78],ah
arpl [gs:ebp+0x74],si
popad
bound ebp,[ebp+0x21]
add [eax],al
add [eax],al
db 0xff
db 0xff
db 0xff
inc dword [esi]
add [eax],al
add [edi+0x64],bl
jc 0x62ffd
jna 0x62ffb
add [eax],al
db 0xff
db 0xff
db 0xff
inc dword [ecx]
add [eax],al
add [edx],bh
add [eax],al
add bh,bh
db 0xff
db 0xff
jmp dword [eax]
add [eax],al
add [ebx+0x21],bl
pop ebp
and [ebp+0x6e],dh
imul ebp,[esi+0x6f],byte +0x77
outsb
and [esi+0x69],dh
jc 0x63030
jnz 0x6301f
insb
and [esi+0x69],ah
insb
and [gs:ecx+edi*2+0x70],dh
and [dword gs:0x64],ah
add [ebp-0x75],dl
in al,dx
add esp,byte -0x10
push ebx
push esi
push edi
xor ebx,ebx
mov [ebp-0x8],ebx
mov ebx,edx
test ebx,ebx
js 0x62fee
shr ebx,byte 0x2
mov esi,[eax+ebx*4]
dec ebx
push esi
jns 0x62fe7
mov eax,esp
mov [ebp-0x4],ecx
mov edi,eax
mov esi,[ebp+0x8]
xor eax,eax
push ebp
push dword 0x46406d
push dword [fs:eax]
mov [fs:eax],esp
mov eax,esi
mov edx,0x46408c
call dword 0x3a70
xor ebx,ebx
cmp ebx,[ebp-0x4]
jnc 0x63057
test ebx,ebx
jz 0x63029
mov eax,esi
mov edx,0x46409c
call dword 0x3ce8
lea eax,[ebp-0x8]
push eax
movzx eax,byte [edi+ebx]
mov [ebp-0x10],eax
mov byte [ebp-0xc],0x0
lea edx,[ebp-0x10]
xor ecx,ecx
mov eax,0x4640a8
call dword 0x8b24
mov edx,[ebp-0x8]
mov eax,esi
call dword 0x3ce8
inc ebx
cmp ebx,[ebp-0x4]
jc 0x63019
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x464074
lea eax,[ebp-0x8]
call dword 0x3a1c
ret
jmp dword 0x3384
jmp short 0x63064
mov edi,[ebp-0x1c]
mov esi,[ebp-0x18]
mov ebx,[ebp-0x14]
mov esp,ebp
pop ebp
ret 0x4
add bh,bh
db 0xff
db 0xff
inc dword [eax+eax]
add [eax],al
push dword 0x3a7865
add [eax],al
add bh,bh
db 0xff
db 0xff
inc dword [ecx]
add [eax],al
add [eax+eax],ch
add [eax],al
db 0xff
db 0xff
db 0xff
inc dword [dword 0x25000000]
xor [cs:edx],dh
js 0x630ae
add [eax],al
push ebp
mov ebp,esp
add esp,byte -0x7c
push ebx
push esi
push edi
xor ebx,ebx
mov [ebp-0x7c],ebx
mov [ebp-0x70],ebx
mov [ebp-0x4c],ebx
mov [ebp-0x48],ebx
mov [ebp-0x31],cl
mov esi,edx
mov [ebp-0x4],eax
lea eax,[ebp-0x4]
call dword 0x4520
lea eax,[ebp-0x30]
mov edx,[dword 0x4633d4]
call dword 0x4540
xor eax,eax
push ebp
push dword 0x464461
push dword [fs:eax]
mov [fs:eax],esp
mov eax,[0x46dce4]
mov edx,[eax+0x14]
add edx,[dword 0x46dce8]
add edx,esi
xor ecx,ecx
mov eax,[0x46dcdc]
call dword 0x61490
lea edx,[ebp-0x38]
mov ecx,0x4
mov eax,[0x46dcdc]
call dword 0x6149c
mov eax,[ebp-0x38]
call dword 0x1e60
mov ebx,eax
mov edx,ebx
mov ecx,[ebp-0x38]
mov eax,[0x46dcdc]
call dword 0x6149c
xor eax,eax
mov [ebp-0x20],eax
mov edi,ebx
mov eax,edi
mov eax,[eax]
mov [ebp-0x30],eax
mov eax,edi
add eax,byte +0x4
mov eax,[eax]
mov [ebp-0x2c],eax
mov eax,edi
add eax,byte +0x8
movzx eax,byte [eax]
mov [ebp-0x28],al
mov eax,edi
add eax,byte +0x9
movzx eax,byte [eax]
mov [ebp-0x27],al
mov eax,edi
add eax,byte +0xa
movzx eax,byte [eax]
mov [ebp-0x26],al
mov dword [ebp-0x3c],0xb
lea ecx,[ebp-0x48]
lea edx,[ebp-0x3c]
mov eax,ebx
call dword 0x627a0
mov edx,[ebp-0x48]
lea eax,[ebp-0x25]
call dword 0x4234
add esi,byte +0x4
add esi,[ebp-0x38]
movzx eax,byte [ebp-0x26]
movzx edx,al
cmp edx,byte +0x5
ja dword 0x633a7
jmp dword [edx*4+0x4641af]
mov dword [ecx+0x46],0x46426200
add [ebx],al
inc ebx
inc esi
add [ebp+0x43],dl
inc esi
add bh,al
inc ecx
inc esi
add bh,al
inc ecx
inc esi
add [eax+0x7401cf7d],al
adc [ebx-0x3bbafc39],cl
movzx eax,byte [eax]
mov [ebp-0x21],al
inc dword [ebp-0x3c]
jmp short 0x631e1
mov byte [ebp-0x21],0xdd
mov eax,edi
add eax,[ebp-0x3c]
mov eax,[eax]
mov [ebp-0x1c],eax
add dword [ebp-0x3c],byte +0x4
cmp dword [ebp-0x1c],byte +0x0
jz 0x63213
lea eax,[ebp-0x4c]
push eax
lea edx,[ebp-0x3c]
mov ecx,[ebp-0x1c]
mov eax,ebx
call dword 0x62820
mov edx,[ebp-0x4c]
lea eax,[ebp-0x18]
call dword 0x4234
jmp short 0x6321b
lea eax,[ebp-0x18]
call dword 0x41d0
movzx eax,byte [ebp-0x26]
mov eax,[eax*4+0x468a90]
mov [ebp-0x6c],eax
mov byte [ebp-0x68],0x6
mov eax,[ebp-0x4]
mov [ebp-0x64],eax
mov byte [ebp-0x60],0xf
mov eax,[ebp-0x25]
mov [ebp-0x5c],eax
mov byte [ebp-0x58],0xf
mov eax,[ebp-0x18]
mov [ebp-0x54],eax
mov byte [ebp-0x50],0xf
lea edx,[ebp-0x6c]
mov ecx,0x3
mov eax,0x46447c
call dword 0x60c44
jmp dword 0x633c0
mov eax,edi
add eax,[ebp-0x3c]
mov eax,[eax]
mov [ebp-0xc],eax
add dword [ebp-0x3c],byte +0x4
mov eax,[ebp-0xc]
push eax
lea eax,[ebp-0x8]
mov ecx,0x1
mov edx,[dword 0x4633b4]
call dword 0x4b8c
add esp,byte +0x4
mov edx,edi
add edx,[ebp-0x3c]
mov eax,[ebp-0x8]
mov ecx,[ebp-0xc]
call dword 0x6398
mov eax,[ebp-0xc]
add [ebp-0x3c],eax
movzx eax,byte [ebp-0x26]
mov eax,[eax*4+0x468a90]
mov [ebp-0x6c],eax
mov byte [ebp-0x68],0x6
mov eax,[ebp-0x4]
mov [ebp-0x64],eax
mov byte [ebp-0x60],0xf
mov eax,[ebp-0x25]
mov [ebp-0x5c],eax
mov byte [ebp-0x58],0xf
lea eax,[ebp-0x70]
push eax
mov eax,[ebp-0x8]
mov [ebp-0x44],eax
call dword 0x49d8
mov edx,eax
mov eax,[ebp-0x44]
mov ecx,[ebp-0xc]
call dword 0x62fd0
mov eax,[ebp-0x70]
mov [ebp-0x54],eax
mov byte [ebp-0x50],0xb
lea edx,[ebp-0x6c]
mov ecx,0x3
mov eax,0x46447c
call dword 0x60c44
jmp dword 0x633c0
mov eax,edi
add eax,[ebp-0x3c]
mov eax,[eax]
mov [ebp-0x14],eax
add dword [ebp-0x3c],byte +0x4
movzx eax,byte [ebp-0x26]
mov eax,[eax*4+0x468a90]
mov [ebp-0x6c],eax
mov byte [ebp-0x68],0x6
mov eax,[ebp-0x4]
mov [ebp-0x64],eax
mov byte [ebp-0x60],0xf
mov eax,[ebp-0x25]
mov [ebp-0x5c],eax
mov byte [ebp-0x58],0xf
mov eax,[ebp-0x14]
mov [ebp-0x54],eax
mov byte [ebp-0x50],0x0
lea edx,[ebp-0x6c]
mov ecx,0x3
mov eax,0x4644a0
call dword 0x60c44
jmp short 0x633c0
mov eax,edi
add eax,[ebp-0x3c]
mov eax,[eax]
mov [ebp-0x10],eax
add dword [ebp-0x3c],byte +0x8
movzx eax,byte [ebp-0x26]
mov eax,[eax*4+0x468a90]
mov [ebp-0x6c],eax
mov byte [ebp-0x68],0x6
mov eax,[ebp-0x4]
mov [ebp-0x64],eax
mov byte [ebp-0x60],0xf
mov eax,[ebp-0x25]
mov [ebp-0x5c],eax
mov byte [ebp-0x58],0xf
mov eax,[ebp-0x10]
mov [ebp-0x54],eax
mov byte [ebp-0x50],0x0
lea edx,[ebp-0x6c]
mov ecx,0x3
mov eax,0x4644c8
call dword 0x60c44
jmp short 0x633c0
movzx eax,al
mov [ebp-0x78],eax
mov byte [ebp-0x74],0x0
lea edx,[ebp-0x78]
xor ecx,ecx
mov eax,0x4644f0
call dword 0x60c44
xor eax,eax
mov [ebp-0x40],eax
movzx eax,byte [ebp-0x28]
sub al,0x1
jc 0x633d1
jz 0x633df
jmp short 0x633eb
add edi,[ebp-0x3c]
mov eax,[edi]
mov [ebp-0x40],eax
add dword [ebp-0x3c],byte +0x4
jmp short 0x633eb
add edi,[ebp-0x3c]
mov eax,[edi]
mov [ebp-0x40],eax
add dword [ebp-0x3c],byte +0x4
xor ebx,ebx
cmp ebx,[ebp-0x40]
jnc 0x63420
push dword [ebp-0x4]
push dword 0x464518
push dword [ebp-0x25]
lea eax,[ebp-0x7c]
mov edx,0x3
call dword 0x43c4
mov eax,[ebp-0x7c]
movzx ecx,byte [ebp-0x31]
mov edx,esi
call dword 0x630b0
mov esi,eax
inc ebx
cmp ebx,[ebp-0x40]
jc 0x633f2
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x464468
lea eax,[ebp-0x7c]
call dword 0x41d0
lea eax,[ebp-0x70]
call dword 0x3a1c
lea eax,[ebp-0x4c]
mov edx,0x2
call dword 0x41e8
lea eax,[ebp-0x30]
mov edx,[dword 0x4633d4]
call dword 0x4610
lea eax,[ebp-0x4]
call dword 0x41d0
ret
jmp dword 0x3384
jmp short 0x6342d
mov eax,esi
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret
add [eax],al
add bh,bh
db 0xff
db 0xff
call dword far [ebx]
add [eax],al
add [ebx+0x2b],bl
pop ebp
and [dword 0x22203a73],ah
and eax,0x73255c73
and ch,[eax]
jna 0x634f0
insb
jnz 0x634f7
and [edx],ah
and eax,0xff002273
db 0xff
db 0xff
call dword far [esi]
add [eax],al
add [ebx+0x2b],bl
pop ebp
and [dword 0x22203a73],ah
and eax,0x73255c73
and ch,[eax]
jna 0x63514
insb
jnz 0x6351b
and [edx],ah
and eax,0x7838302e
and al,[eax]
add bh,bh
db 0xff
db 0xff
call dword far [esi]
add [eax],al
add [ebx+0x2b],bl
pop ebp
and [dword 0x22203a73],ah
and eax,0x73255c73
and ch,[eax]
jna 0x6353c
insb
jnz 0x63543
and [edx],ah
and eax,0x7836312e
and al,[eax]
add bh,bh
db 0xff
db 0xff
jmp dword [edx]
add [eax],al
add [ebx+0x21],bl
pop ebp
and [ebp+0x6e],dl
imul ebp,[esi+0x6f],byte +0x77
outsb
and [edx+0x65],dh
imul esi,[bp+di+0x74],dword 0x65207972
outsb
jz 0x6357b
jns 0x6352b
jz 0x63586
jo 0x63574
and [dword 0x2000064],ah
add [eax],al
add [eax+eax+0x0],bl
add [ebp-0x75],dl
in al,dx
add esp,byte -0x24
push ebx
push esi
xor eax,eax
mov [ebp-0x24],eax
mov [ebp-0x20],eax
mov ebx,0x46dcdc
xor eax,eax
push ebp
push dword 0x464784
push dword [fs:eax]
mov [fs:eax],esp
mov eax,[ebx]
cmp byte [eax+0x8],0x0
jz 0x63560
mov eax,[0x46dce4]
mov edx,[eax+0x14]
add edx,0x88
xor ecx,ecx
mov eax,[ebx]
call dword 0x61490
jmp short 0x63574
mov eax,[0x46dce4]
mov edx,[eax+0x14]
add edx,byte +0x6c
xor ecx,ecx
mov eax,[ebx]
call dword 0x61490
lea edx,[ebp-0x10]
mov ecx,0x4
mov eax,[ebx]
call dword 0x6149c
mov eax,[ebp-0x10]
mov [ebp-0x4],eax
mov eax,[ebx]
cmp byte [eax+0x8],0x0
jz 0x635aa
mov eax,[0x46dce4]
mov edx,[eax+0x14]
add edx,0x98
xor ecx,ecx
mov eax,[ebx]
call dword 0x61490
jmp short 0x635be
mov eax,[0x46dce4]
mov edx,[eax+0x14]
add edx,byte +0x74
xor ecx,ecx
mov eax,[ebx]
call dword 0x61490
lea edx,[ebp-0xc]
mov ecx,0x4
mov eax,[ebx]
call dword 0x6149c
mov eax,[ebx]
cmp byte [eax+0x8],0x0
jz 0x635ee
mov eax,[0x46dce4]
mov edx,[eax+0x14]
add edx,0x9c
xor ecx,ecx
mov eax,[ebx]
call dword 0x61490
jmp short 0x63602
mov eax,[0x46dce4]
mov edx,[eax+0x14]
add edx,byte +0x78
xor ecx,ecx
mov eax,[ebx]
call dword 0x61490
lea edx,[ebp-0x8]
mov ecx,0x4
mov eax,[ebx]
call dword 0x6149c
cmp dword [ebp-0xc],byte +0x0
jnz 0x63626
mov eax,0x46479c
call dword 0x60bc0
jmp dword 0x63769
mov eax,[0x46dce4]
mov edx,[eax+0x14]
add edx,[dword 0x46dce8]
add edx,[ebp-0x10]
xor ecx,ecx
mov eax,[ebx]
call dword 0x61490
lea edx,[ebp-0x14]
mov ecx,0x4
mov eax,[ebx]
call dword 0x6149c
cmp dword [ebp-0x14],0x505a384d
jz 0x636af
cmp dword [ebp-0x14],0x905a384d
jz 0x636af
add dword [ebp-0x10],byte +0xa
mov eax,[0x46dce4]
mov edx,[eax+0x14]
add edx,[dword 0x46dce8]
add edx,[ebp-0x10]
xor ecx,ecx
mov eax,[ebx]
call dword 0x61490
lea edx,[ebp-0x14]
mov ecx,0x4
mov eax,[ebx]
call dword 0x6149c
cmp dword [ebp-0x14],0x505a384d
jz 0x636af
cmp dword [ebp-0x14],0x905a384d
jz 0x636af
mov eax,0x4647e4
call dword 0x60bc0
jmp dword 0x63769
mov eax,[ebp-0xc]
call dword 0x1e60
mov esi,eax
mov eax,[ebx]
call dword 0x611f8
add eax,[ebp-0x10]
mov edx,[dword 0x46dce4]
add eax,[edx+0x14]
add eax,[dword 0x46dce8]
mov edx,[ebp-0xc]
push edx
push esi
mov edx,[ebp-0x8]
push edx
push eax
call dword 0x64790
add esp,byte +0x10
mov edx,[ebx]
cmp byte [edx+0x8],0x0
jz 0x63728
mov edx,eax
mov eax,esi
call dword 0x62754
mov ebx,eax
lea edx,[ebp-0x20]
mov eax,ebx
call dword 0x62650
mov eax,[ebp-0x20]
mov [ebp-0x1c],eax
mov byte [ebp-0x18],0xb
lea edx,[ebp-0x1c]
xor ecx,ecx
mov eax,0x464834
call dword 0x60c44
mov eax,ebx
call dword 0x626c0
mov [0x46dce1],al
jmp short 0x63762
mov edx,eax
mov eax,esi
call dword 0x626e4
mov ebx,eax
lea edx,[ebp-0x24]
mov eax,ebx
call dword 0x62604
mov eax,[ebp-0x24]
mov [ebp-0x1c],eax
mov byte [ebp-0x18],0xb
lea edx,[ebp-0x1c]
xor ecx,ecx
mov eax,0x464834
call dword 0x60c44
mov eax,ebx
call dword 0x6269c
mov [0x46dce1],al
mov eax,esi
call dword 0x1e7c
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x46478b
lea eax,[ebp-0x24]
mov edx,0x2
call dword 0x3a40
ret
jmp dword 0x3384
jmp short 0x63776
mov eax,[ebp-0x4]
pop esi
pop ebx
mov esp,ebp
pop ebp
ret
db 0xff
db 0xff
db 0xff
db 0xff
add [ds:eax],al
add [ebx+0x78],bl
pop ebp
and [edi+ebp*2+0x61],cl
gs jc 0x637fa
imul edi,[edx+0x65],dword 0x30203d20
and [cs:eax+0x72],dl
outsd
db 0x62
popad
bound ebp,[ecx+edi*2+0x20]
outsd
insb
and [fs:ebp+0x6e],dh
jnc 0x63836
jo 0x63833
outsd
jc 0x6383a
and [fs:ebp+0x6e],al
imul esp,[edi+0x6d],dword 0x20425661
jna 0x63839
jc 0x63849
imul ebp,[edi+0x6e],dword 0xff00002e
db 0xff
db 0xff
inc dword [ebp+0x0]
add [eax],al
pop ebx
js 0x63844
and [edi+ebp*2+0x61],cl
gs jc 0x6380f
fs popad
jz 0x63854
and [edi+ebp*2+0x6f],ch
imul esp,[eax],byte +0x77
jc 0x6386b
outsb
and [cs:bx+si+0x72],dl
outsd
db 0x62
popad
bound ebp,[ecx+edi*2+0x20]
bound esi,[ebp+0x67]
and [fs:di+0x58],al
inc ebp
and [eax],ch
inc ebp
outsb
imul esp,[edi+0x6d],dword 0x20425661
jna 0x63854
xor [ss:edi],ch
xor al,0x2e
aaa
xor [ecx],ch
add [eax],al
add bh,bh
db 0xff
db 0xff
call dword far [eax]
add [eax],al
add [ebx+0x2b],bl
pop ebp
and [ebp+0x6e],al
imul esp,[edi+0x6d],dword 0x20425661
jna 0x638a8
jc 0x638b8
imul ebp,[edi+0x6e],dword 0x7325203a
add [eax],al
add [eax],al
push ebx
push esi
mov ebx,edx
mov ecx,eax
mov eax,ecx
xor edx,edx
div ebx
mov esi,eax
mov eax,ecx
xor edx,edx
div ebx
mov eax,edx
test eax,eax
jnz 0x6386f
mov eax,ecx
pop esi
pop ebx
ret
lea eax,[esi+0x1]
imul ebx
pop esi
pop ebx
ret
nop
push ebp
mov ebp,esp
add esp,byte -0x3c
push ebx
push esi
push edi
xor edx,edx
mov [ebp-0x34],edx
mov [ebp-0x38],edx
mov [ebp-0x3c],edx
mov [ebp-0x8],edx
mov [ebp-0x4],eax
mov eax,[ebp-0x4]
call dword 0x3e9c
mov esi,0x46dcdc
mov ebx,0x46dce4
xor eax,eax
push ebp
push dword 0x464e0f
push dword [fs:eax]
mov [fs:eax],esp
mov eax,[esi]
cmp byte [eax+0x8],0x0
jz 0x638cd
mov eax,[ebx]
mov edx,[eax+0x14]
add edx,byte +0x68
xor ecx,ecx
mov eax,[esi]
call dword 0x61490
jmp short 0x638de
mov eax,[ebx]
mov edx,[eax+0x14]
add edx,byte +0x4c
xor ecx,ecx
mov eax,[esi]
call dword 0x61490
lea edx,[ebp-0xc]
mov ecx,0x4
mov eax,[esi]
call dword 0x6149c
mov eax,[esi]
cmp byte [eax+0x8],0x0
jz 0x63908
mov eax,[ebx]
mov edx,[eax+0x14]
add edx,byte +0x6c
xor ecx,ecx
mov eax,[esi]
call dword 0x61490
jmp short 0x63919
mov eax,[ebx]
mov edx,[eax+0x14]
add edx,byte +0x50
xor ecx,ecx
mov eax,[esi]
call dword 0x61490
lea edx,[ebp-0x10]
mov ecx,0x4
mov eax,[esi]
call dword 0x6149c
mov eax,[esi]
cmp byte [eax+0x8],0x0
jz 0x63943
mov eax,[ebx]
mov edx,[eax+0x14]
add edx,byte +0x70
xor ecx,ecx
mov eax,[esi]
call dword 0x61490
jmp short 0x63954
mov eax,[ebx]
mov edx,[eax+0x14]
add edx,byte +0x54
xor ecx,ecx
mov eax,[esi]
call dword 0x61490
lea edx,[ebp-0x14]
mov ecx,0x4
mov eax,[esi]
call dword 0x6149c
mov eax,[esi]
cmp byte [eax+0x8],0x0
jz 0x6397e
mov eax,[ebx]
mov edx,[eax+0x14]
add edx,byte +0x74
xor ecx,ecx
mov eax,[esi]
call dword 0x61490
jmp short 0x6398f
mov eax,[ebx]
mov edx,[eax+0x14]
add edx,byte +0x58
xor ecx,ecx
mov eax,[esi]
call dword 0x61490
lea edx,[ebp-0x18]
mov ecx,0x4
mov eax,[esi]
call dword 0x6149c
mov eax,[esi]
cmp byte [eax+0x8],0x0
jz 0x639b9
mov eax,[ebx]
mov edx,[eax+0x14]
add edx,byte +0x78
xor ecx,ecx
mov eax,[esi]
call dword 0x61490
jmp short 0x639ca
mov eax,[ebx]
mov edx,[eax+0x14]
add edx,byte +0x5c
xor ecx,ecx
mov eax,[esi]
call dword 0x61490
lea edx,[ebp-0x1c]
mov ecx,0x4
mov eax,[esi]
call dword 0x6149c
mov eax,[esi]
cmp byte [eax+0x8],0x0
jz 0x639f4
mov eax,[ebx]
mov edx,[eax+0x14]
add edx,byte +0x7c
xor ecx,ecx
mov eax,[esi]
call dword 0x61490
jmp short 0x63a05
mov eax,[ebx]
mov edx,[eax+0x14]
add edx,byte +0x60
xor ecx,ecx
mov eax,[esi]
call dword 0x61490
lea edx,[ebp-0x20]
mov ecx,0x4
mov eax,[esi]
call dword 0x6149c
mov dl,0x1
mov eax,[0x462114]
call dword 0x61180
mov ebx,eax
mov eax,[esi]
mov eax,[eax+0xc]
xor ecx,ecx
xor edx,edx
mov edi,[eax]
call dword [edi+0x14]
mov eax,[esi]
mov edi,[eax+0xc]
mov eax,edi
mov edx,[eax]
call dword [edx]
mov ecx,eax
mov edx,edi
mov eax,ebx
call dword 0x61398
mov eax,ebx
call dword 0x61240
mov edx,eax
sub edx,byte +0x2
mov eax,ebx
call dword 0x61250
xor ecx,ecx
mov edx,0x28
call dword 0x252c
mov eax,ebx
call dword 0x61240
mov edx,eax
dec edx
mov eax,ebx
call dword 0x61250
xor ecx,ecx
mov edx,0x28
call dword 0x252c
cmp byte [ebx+0x8],0x0
jz dword 0x63bb6
mov eax,[esi]
call dword 0x61224
movzx edi,word [eax+0x6]
sub di,byte +0x2
mov eax,ebx
call dword 0x61224
mov [eax+0x6],di
mov eax,ebx
call dword 0x61240
mov edx,eax
dec edx
mov eax,ebx
call dword 0x61250
mov edi,[eax+0xc]
mov eax,ebx
call dword 0x61240
mov edx,eax
dec edx
mov eax,ebx
call dword 0x61250
add edi,[eax+0x8]
push edi
mov eax,ebx
call dword 0x61224
mov edx,[eax+0x38]
pop eax
call dword 0x63850
mov edi,eax
mov eax,ebx
call dword 0x61224
mov [eax+0x50],edi
mov eax,ebx
call dword 0x61240
mov edx,eax
dec edx
mov eax,ebx
call dword 0x61250
mov edi,[eax+0x14]
mov eax,ebx
call dword 0x61240
mov edx,eax
dec edx
mov eax,ebx
call dword 0x61250
add edi,[eax+0x10]
mov edx,edi
mov eax,[ebx+0xc]
mov ecx,[eax]
call dword [ecx+0x4]
xor edx,edx
mov eax,ebx
call dword 0x61250
mov edi,[eax+0x14]
mov eax,ebx
call dword 0x61224
mov [eax+0x54],edi
mov eax,ebx
call dword 0x61224
mov edx,[ebp-0xc]
mov [eax+0x90],edx
mov eax,ebx
call dword 0x61224
mov edx,[ebp-0x10]
mov [eax+0x94],edx
mov eax,ebx
call dword 0x61224
mov edx,[ebp-0x14]
mov [eax+0xb0],edx
mov eax,ebx
call dword 0x61224
mov edx,[ebp-0x18]
mov [eax+0xb4],edx
mov eax,ebx
call dword 0x61224
mov edx,[ebp-0x1c]
mov [eax+0xf8],edx
mov eax,ebx
call dword 0x61224
mov edx,[ebp-0x20]
mov [eax+0xfc],edx
mov eax,ebx
call dword 0x61224
xor edx,edx
mov [eax+0xd0],edx
mov eax,ebx
call dword 0x61224
xor edx,edx
mov [eax+0xd4],edx
jmp dword 0x63cdb
mov eax,[esi]
call dword 0x61208
movzx edi,word [eax+0x6]
sub di,byte +0x2
mov eax,ebx
call dword 0x61208
mov [eax+0x6],di
mov eax,ebx
call dword 0x61240
mov edx,eax
dec edx
mov eax,ebx
call dword 0x61250
mov edi,[eax+0xc]
mov eax,ebx
call dword 0x61240
mov edx,eax
dec edx
mov eax,ebx
call dword 0x61250
add edi,[eax+0x8]
push edi
mov eax,ebx
call dword 0x61208
mov edx,[eax+0x38]
pop eax
call dword 0x63850
mov edi,eax
mov eax,ebx
call dword 0x61208
mov [eax+0x50],edi
mov eax,ebx
call dword 0x61240
mov edx,eax
dec edx
mov eax,ebx
call dword 0x61250
mov edi,[eax+0x14]
mov eax,ebx
call dword 0x61240
mov edx,eax
dec edx
mov eax,ebx
call dword 0x61250
add edi,[eax+0x10]
mov edx,edi
mov eax,[ebx+0xc]
mov ecx,[eax]
call dword [ecx+0x4]
xor edx,edx
mov eax,ebx
call dword 0x61250
mov edi,[eax+0x14]
mov eax,ebx
call dword 0x61208
mov [eax+0x54],edi
mov eax,ebx
call dword 0x61208
mov edx,[ebp-0xc]
mov [eax+0x80],edx
mov eax,ebx
call dword 0x61208
mov edx,[ebp-0x10]
mov [eax+0x84],edx
mov eax,ebx
call dword 0x61208
mov edx,[ebp-0x14]
mov [eax+0xa0],edx
mov eax,ebx
call dword 0x61208
mov edx,[ebp-0x18]
mov [eax+0xa4],edx
mov eax,ebx
call dword 0x61208
mov edx,[ebp-0x1c]
mov [eax+0xe8],edx
mov eax,ebx
call dword 0x61208
mov edx,[ebp-0x20]
mov [eax+0xec],edx
mov eax,ebx
call dword 0x61208
xor edx,edx
mov [eax+0xc0],edx
mov eax,ebx
call dword 0x61208
xor edx,edx
mov [eax+0xc4],edx
mov eax,[esi]
call dword 0x61240
mov edx,eax
dec edx
mov eax,[esi]
call dword 0x61250
mov edi,[eax+0x14]
mov eax,[esi]
call dword 0x61240
mov edx,eax
dec edx
mov eax,[esi]
call dword 0x61250
add edi,[eax+0x10]
mov eax,[esi]
mov eax,[eax+0xc]
mov edx,[eax]
call dword [edx]
push edx
push eax
mov eax,edi
xor edx,edx
cmp edx,[esp+0x4]
jnz 0x63d21
cmp eax,[esp]
pop edx
pop eax
jnc 0x63d88
jmp short 0x63d25
pop edx
pop eax
jnl 0x63d88
mov eax,[esi]
mov eax,[eax+0xc]
mov edx,[eax]
call dword [edx]
push edx
push eax
mov eax,edi
xor edx,edx
sub [esp],eax
sbb [esp+0x4],edx
pop eax
pop edx
mov [ebp-0x30],eax
mov [ebp-0x2c],edx
lea eax,[ebp-0x30]
mov [ebp-0x28],eax
mov byte [ebp-0x24],0x10
lea edx,[ebp-0x28]
xor ecx,ecx
mov eax,0x464e28
call dword 0x60c44
mov cx,0x2
xor edx,edx
mov eax,ebx
call dword 0x61490
mov eax,[esi]
mov eax,[eax+0xc]
mov edx,[eax]
call dword [edx]
sub eax,edi
push eax
mov eax,[esi]
call dword 0x611f8
mov edx,eax
add edx,edi
mov eax,ebx
pop ecx
call dword 0x614a8
lea edx,[ebp-0x34]
mov eax,[ebp-0x4]
call dword 0x824c
push dword [ebp-0x34]
lea edx,[ebp-0x38]
mov eax,[ebp-0x4]
call dword 0x8280
push dword [ebp-0x38]
push dword 0x464e80
lea edx,[ebp-0x3c]
mov eax,[ebp-0x4]
call dword 0x82b8
push dword [ebp-0x3c]
lea eax,[ebp-0x8]
mov edx,0x4
call dword 0x3db0
mov edx,[ebp-0x8]
mov eax,ebx
call dword 0x61484
mov eax,[ebp-0x8]
mov [ebp-0x28],eax
mov byte [ebp-0x24],0xb
lea edx,[ebp-0x28]
xor ecx,ecx
mov eax,0x464e94
call dword 0x60c44
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x464e16
lea eax,[ebp-0x3c]
mov edx,0x3
call dword 0x3a40
lea eax,[ebp-0x8]
mov edx,0x2
call dword 0x3a40
ret
jmp dword 0x3384
jmp short 0x63df4
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret
add [eax],al
add bh,bh
db 0xff
db 0xff
dec dword [edi+0x0]
add [eax],al
pop ebx
and [ebp+0x20],ebx
inc esi
outsd
jnz 0x63e9e
and [fs:eax],dh
js 0x63e5a
js 0x63e57
bound edi,[ecx+0x74]
gs jnc 0x63e5d
outsd
o16 and [edi+0x76],ch
gs jc 0x63eb1
popad
jns 0x63e76
and [ebp+0x6e],dl
jo 0x63eae
arpl [ebx+0x65],bp
and [fs:esi+0x69],ah
insb
and [gs:ebp+0x61],ch
jns 0x63e7b
outsd
jc 0x63e7e
insd
popad
jns 0x63e82
outsb
outsd
jz 0x63e86
ja 0x63ed7
jc 0x63ed5
and [cs:edx+0x65],al
and [ebx+0x61],ah
jc 0x63ed8
o16 jnz 0x63ee2
and [eax],eax
db 0xff
db 0xff
db 0xff
dec dword [ecx]
add [eax],al
add [edi+0x75],bl
outsb
jo 0x63ee6
arpl [ebx+0x65],bp
add [fs:eax],al
add bh,bh
db 0xff
db 0xff
call dword far [edx]
add [eax],al
add [ebx+0x2b],bl
pop ebp
and [ebp+0x6e],dl
jo 0x63efd
arpl [ebx+0x65],bp
and [fs:ebp+0x61],ch
imul ebp,[esi+0x20],dword 0x656c6966
cmp ah,[eax]
and eax,0x55000073
mov ebp,esp
add esp,byte -0x38
push ebx
push esi
push edi
xor edx,edx
mov [ebp-0x28],edx
mov [ebp-0x4],eax
mov eax,[ebp-0x4]
call dword 0x3e9c
mov esi,0x46dcdc
xor eax,eax
push ebp
push dword 0x4653b4
push dword [fs:eax]
mov [fs:eax],esp
mov dl,0x1
mov eax,[0x462114]
call dword 0x61180
mov [esi],eax
mov edx,[ebp-0x4]
mov eax,[esi]
call dword 0x61360
mov eax,[ebp-0x4]
mov [ebp-0x24],eax
mov byte [ebp-0x20],0xb
lea edx,[ebp-0x24]
xor ecx,ecx
mov eax,0x4653cc
call dword 0x60c44
xor ecx,ecx
xor edx,edx
mov eax,[esi]
call dword 0x61490
mov eax,[esi]
call dword 0x614b8
push eax
mov eax,[esi]
call dword 0x611f8
lea ecx,[ebp-0x28]
pop edx
call dword 0x61f5c
mov eax,[ebp-0x28]
mov [ebp-0x24],eax
mov byte [ebp-0x20],0xb
lea edx,[ebp-0x24]
xor ecx,ecx
mov eax,0x4653e8
call dword 0x60c44
mov eax,[esi]
call dword 0x61208
movzx eax,word [eax+0x4]
sub ax,0x14c
jz 0x63f62
sub ax,0x8518
jz 0x63f6e
jmp short 0x63f7a
mov eax,0x4653fc
call dword 0x60bc0
jmp short 0x63f89
mov eax,0x465418
call dword 0x60bc0
jmp short 0x63f89
mov eax,0x465434
call dword 0x60bc0
jmp dword 0x64396
mov eax,[esi]
movzx eax,byte [eax+0x8]
mov [0x46dcec],al
mov eax,[esi]
call dword 0x61240
mov ebx,eax
cmp ebx,byte +0x3
jnc 0x63fb1
mov eax,0x465464
call dword 0x60bc0
jmp dword 0x64396
mov edi,ebx
dec edi
mov edx,edi
mov eax,[esi]
call dword 0x61250
mov eax,[eax+0x14]
push eax
mov edx,edi
mov eax,[esi]
call dword 0x61250
pop edx
add edx,[eax+0x10]
mov [ebp-0x8],edx
mov eax,[esi]
call dword 0x614b8
push edx
push eax
mov eax,[ebp-0x8]
xor edx,edx
cmp edx,[esp+0x4]
jnz 0x63fee
cmp eax,[esp]
pop edx
pop eax
jna 0x6402a
jmp short 0x63ff2
pop edx
pop eax
jng 0x6402a
mov eax,[ebp-0x8]
mov [ebp-0x38],eax
mov byte [ebp-0x34],0x0
mov eax,[esi]
call dword 0x614b8
mov [ebp-0x24],eax
mov [ebp-0x20],edx
lea eax,[ebp-0x24]
mov [ebp-0x30],eax
mov byte [ebp-0x2c],0x10
lea edx,[ebp-0x38]
mov ecx,0x1
mov eax,0x4654bc
call dword 0x60c44
jmp dword 0x64396
mov edx,edi
mov eax,[esi]
call dword 0x61250
mov edx,0x465504
mov ecx,0x8
call dword 0x8560
test eax,eax
jz 0x6406a
mov edx,edi
mov eax,[esi]
call dword 0x61250
mov [ebp-0x24],eax
mov byte [ebp-0x20],0x6
lea edx,[ebp-0x24]
xor ecx,ecx
mov eax,0x465518
call dword 0x60c44
jmp dword 0x64396
mov edx,ebx
sub edx,byte +0x2
mov eax,[esi]
call dword 0x61250
mov [0x46dce4],eax
mov edx,0x46554c
mov eax,[0x46dce4]
mov ecx,0x8
call dword 0x8560
test eax,eax
jz 0x640b3
mov eax,[0x46dce4]
mov [ebp-0x24],eax
mov byte [ebp-0x20],0x6
lea edx,[ebp-0x24]
xor ecx,ecx
mov eax,0x465560
call dword 0x60c44
jmp dword 0x64396
mov eax,[esi]
cmp byte [eax+0x8],0x0
jz 0x64101
mov eax,[esi]
call dword 0x61224
cmp dword [eax+0xd0],byte +0x0
jnz 0x640da
mov eax,0x46559c
call dword 0x60bc0
jmp dword 0x64396
mov eax,[esi]
call dword 0x61224
mov eax,[eax+0xd0]
mov edx,[dword 0x46dce4]
cmp eax,[edx+0xc]
jz 0x64147
mov eax,0x4655d4
call dword 0x60bc0
jmp dword 0x64396
mov eax,[esi]
call dword 0x61208
cmp dword [eax+0xc0],byte +0x0
jnz 0x64120
mov eax,0x46559c
call dword 0x60bc0
jmp dword 0x64396
mov eax,[esi]
call dword 0x61208
mov eax,[eax+0xc0]
mov edx,[dword 0x46dce4]
cmp eax,[edx+0xc]
jz 0x64147
mov eax,0x4655d4
call dword 0x60bc0
jmp dword 0x64396
mov eax,[esi]
cmp byte [eax+0x8],0x0
jz 0x6418f
mov eax,[0x46dce4]
mov edx,[eax+0x14]
add edx,0xb4
xor ecx,ecx
mov eax,[esi]
call dword 0x61490
mov edx,0x46dce8
mov ecx,0x4
mov eax,[esi]
call dword 0x6149c
cmp dword [dword 0x46dce8],0xb8

jz 0x641cd
mov eax,0x465614
call dword 0x60bc0
jmp short 0x641cd
mov eax,[0x46dce4]
mov edx,[eax+0x14]
add edx,0x9c
xor ecx,ecx
mov eax,[esi]
call dword 0x61490
mov edx,0x46dce8
mov ecx,0x4
mov eax,[esi]
call dword 0x6149c
cmp dword [dword 0x46dce8],0xa0

jz 0x641cd
mov eax,0x465654
call dword 0x60bc0
mov eax,[0x46dce4]
mov edx,[eax+0x14]
add edx,[dword 0x46dce8]
xor ecx,ecx
mov eax,[esi]
call dword 0x61490
lea edx,[ebp-0xc]
mov ecx,0x4
mov eax,[esi]
call dword 0x6149c
cmp dword [ebp-0xc],0x425645
jz 0x6420b
mov eax,0x465694
call dword 0x60bc0
jmp dword 0x64396
mov eax,[esi]
cmp byte [eax+0x8],0x0
jz 0x6422c
mov eax,[0x46dce4]
mov edx,[eax+0x14]
add edx,0xa0
xor ecx,ecx
mov eax,[esi]
call dword 0x61490
jmp short 0x64243
mov eax,[0x46dce4]
mov edx,[eax+0x14]
add edx,0x88
xor ecx,ecx
mov eax,[esi]
call dword 0x61490
lea edx,[ebp-0x18]
mov ecx,0x8
mov eax,[esi]
call dword 0x6149c
mov byte [dword 0x46dce0],0x0
mov eax,[esi]
cmp byte [eax+0x8],0x0
jz 0x6427a
mov eax,[0x46dce4]
mov edx,[eax+0x14]
add edx,0x8c
xor ecx,ecx
mov eax,[esi]
call dword 0x61490
jmp short 0x6428e
mov eax,[0x46dce4]
mov edx,[eax+0x14]
add edx,byte +0x70
xor ecx,ecx
mov eax,[esi]
call dword 0x61490
mov edx,0x46dce0
mov ecx,0x1
mov eax,[esi]
call dword 0x6149c
cmp byte [dword 0x46dce0],0x0
jz 0x642b4
mov eax,0x4656c0
call dword 0x60bc0
jmp short 0x642be
mov eax,0x4656ec
call dword 0x60bc0
call dword 0x6351c
mov [ebp-0x1c],eax
movzx eax,byte [dword 0x46dce1]
dec eax
sub al,0x4
jc 0x642d6
jz 0x642f8
jmp short 0x6431a
mov eax,[esi]
call dword 0x611f8
mov edx,[dword 0x46dce4]
add eax,[edx+0x14]
add eax,[dword 0x46dce8]
add eax,byte +0x28
mov edi,[eax]
mov ebx,0x43
jmp short 0x64344
mov eax,[esi]
call dword 0x611f8
mov edx,[dword 0x46dce4]
add eax,[edx+0x14]
add eax,[dword 0x46dce8]
add eax,byte +0x30
mov edi,[eax]
mov ebx,0x53
jmp short 0x64344
mov eax,0x46571c
call dword 0x60bc0
mov eax,[esi]
call dword 0x611f8
mov edx,[dword 0x46dce4]
add eax,[edx+0x14]
add eax,[dword 0x46dce8]
add eax,byte +0x30
mov edi,[eax]
mov ebx,0x53
cmp edi,ebx
jna 0x64361
movzx ecx,byte [dword 0x46dce1]
mov edx,ebx
mov eax,0x465774
call dword 0x62a7c
mov ebx,eax
cmp edi,ebx
ja 0x64348
cmp ebx,[ebp-0x1c]
jnc 0x6437d
movzx ecx,byte [dword 0x46dce1]
mov edx,ebx
xor eax,eax
call dword 0x630b0
mov ebx,eax
cmp ebx,[ebp-0x1c]
jc 0x64366
mov eax,[ebp-0x4]
call dword 0x63878
mov eax,[esi]
call dword 0x2bf0
mov eax,0x465780
call dword 0x60bc0
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x4653bb
lea eax,[ebp-0x28]
call dword 0x3a1c
lea eax,[ebp-0x4]
call dword 0x3a1c
ret
jmp dword 0x3384
jmp short 0x643a3
pop edi
pop esi
pop ebx
mov esp,ebp
pop ebp
ret
add [eax],al
db 0xff
db 0xff
db 0xff
call dword [eax]
add [eax],al
add [ebx+0x2b],bl
pop ebp
and [esi+0x69],al
insb
gs outsb
popad
insd
cmp ah,[gs:eax]
and eax,0x73
add bh,bh
db 0xff
db 0xff
dec dword [ebx]
add [eax],al
add [ebx+0x2b],bl
pop ebp
and [ebp+0x44],cl
xor eax,0x7325203a
add bh,bh
db 0xff
db 0xff
call dword [edx]
add [eax],al
add [ebx+0x2b],bl
pop ebp
and [eax+0x38],bh
and [ss:ebp+0x78],ah
arpl [gs:ebp+0x74],si
popad
bound ebp,[ebp+0x0]
add bh,bh
db 0xff
db 0xff
call dword [edx]
add [eax],al
add [ebx+0x2b],bl
pop ebp
and [eax+0x36],bh
xor al,0x20
gs js 0x64488
arpl [ebp+0x74],si
popad
bound ebp,[ebp+0x0]
add bh,bh
db 0xff
db 0xff
jmp dword [dword 0x5b000000]
js 0x64494
and [edi+0x68],dl
popad
jz 0x6445d
imul ebp,[ecx+0x6e],byte +0x64
and [edi+0x66],ch
and [ebp+0x78],ah
arpl [gs:ebp+0x74],si
popad
bound ebp,[ebp+0x20]
imul esi,[ebx+0x20],dword 0x73696874
aas
and [eax],eax
add [eax],al
db 0xff
db 0xff
db 0xff
dec dword [eax+eax+0x0]
add [ebx+0x78],bl
pop ebp
and [ebp+0x73],cl
jnc 0x6448d
jz 0x644d7
popad
outsb
and [ebx],dh
and [ebx+0x65],dh
arpl [ecx+ebp*2+0x6f],si
outsb
jnc 0x644a9
and [eax+ebp*2+0x69],dh
jnc 0x644a3
arpl [ecx+0x6e],sp
daa
jz 0x644a9
bound esp,[ebp+0x20]
inc ebp
outsb
imul esp,[edi+0x6d],dword 0x20425661
imul bp,[ebp+0x2c],word 0x6f20
jc 0x644be
imul esi,[edi+0x73],dword 0x756f6420
bound ebp,[ebp+0x2d]
jo 0x6450d
arpl [ebx+0x65],bp
add [fs:eax],al
add [eax],al
db 0xff
db 0xff
db 0xff
inc dword [ebp+0x0]
add [eax],al
pop ebx
js 0x6451c
and [ebp+0x78],al
jo 0x64529
arpl [ebp+0x64],si
and [esi+0x69],ah
insb
and [gs:ebx+0x69],dh
jpe 0x64537
and [dword 0x302e2520],bh
cmp [eax+0x2c],bh
and [edx+0x65],dh
popad
insb
and [esi+0x69],ah
insb
and [gs:ebx+0x69],dh
jpe 0x6454f
and [dword 0x302e2520],bh
cmp [eax+0x2e],bh
and [ecx+0x6d],al
popad
and [fs:bp+0x69],ah
insb
gs aas
add [eax],al
add [esi],ch
gs outsb
imul esp,[edi+0x6d],dword 0x3261
add [eax],al
db 0xff
db 0xff
db 0xff
push dword [eax]
add [eax],al
add [ebx+0x78],bl
pop ebp
and [ebp+0x78],al
jo 0x64585
arpl [ebp+0x64],si
and [ebx+0x65],dh
arpl [ecx+ebp*2+0x6f],si
outsb
and [esi+0x61],ch
insd
and [gs:edx],ah
gs outsb
imul esp,[edi+0x6d],dword 0x2c223261
and [esi+0x6f],ah
jnz 0x645b0
and [fs:edx],ah
and eax,0x2273
add [eax],al
gs outsb
imul esp,[edi+0x6d],dword 0x3161
add [eax],al
db 0xff
db 0xff
db 0xff
push dword [eax]
add [eax],al
add [ebx+0x78],bl
pop ebp
and [ebp+0x78],al
jo 0x645cd
arpl [ebp+0x64],si
and [ebx+0x65],dh
arpl [ecx+ebp*2+0x6f],si
outsb
and [esi+0x61],ch
insd
and [gs:edx],ah
gs outsb
imul esp,[edi+0x6d],dword 0x2c223161
and [esi+0x6f],ah
jnz 0x645f8
and [fs:edx],ah
and eax,0x2273
add [eax],al
db 0xff
db 0xff
db 0xff
jmp dword far [dword 0x5b000000]
js 0x645fc
and [edi+ebp*2+0x6f],cl
imul ebp,[ecx+0x6e],byte +0x67
and [esi+0x6f],ah
jc 0x645cc
push esp
dec esp
push ebx
and [ebx+0x61],ah
insb
insb
db 0x62
popad
arpl [ebx+0x2c],bp
and [ecx+ebp*2+0x64],ah
outsb
daa
jz 0x645e1
imul bp,[esi+0x64],word 0x6920
jz 0x645f7
add [eax],al
add bh,bh
db 0xff
db 0xff
push dword [dword 0x5b000000]
js 0x64634
and [esp+ecx*2+0x53],dl
and [ebx+0x61],ah
insb
insb
db 0x62
popad
arpl [ebx+0x20],bp
fs outsd
gs jnc 0x64658
daa
jz 0x6460d
jo 0x6465e
imul ebp,[esi+0x74],dword 0x206f7420
and ch,[esi]
gs outsb
imul esp,[edi+0x6d],dword 0x20223161
jnc 0x64668
arpl [ecx+ebp*2+0x6f],si
outsb
add [cs:eax],al
add bh,bh
db 0xff
db 0xff
push dword [dword 0x5b000000]
and [ebp+0x20],ebx
inc ebp
js 0x6468b
arpl [gs:ebp+0x64],si
and [eax+0x74],dh
jc 0x64679
outsd
push ebx
imul esp,[edi+0x3d],dword 0x2c384224
and [ecx+ebp*2+0x64],ah
outsb
daa
jz 0x64656
imul bp,[esi+0x64],word 0x6920
jz 0x6466c
and [ecx+0x6b],dl
and [gs:ebx+0x61],ah
jc 0x646ad
and [eax],eax
add [eax],al
db 0xff
db 0xff
db 0xff
push dword [dword 0x5b000000]
and [ebp+0x20],ebx
inc ebp
js 0x646cb
arpl [gs:ebp+0x64],si
and [eax+0x74],dh
jc 0x646b9
outsd
push ebx
imul esp,[edi+0x3d],dword 0x2c304124
and [ecx+ebp*2+0x64],ah
outsb
daa
jz 0x64696
imul bp,[esi+0x64],word 0x6920
jz 0x646ac
and [ecx+0x6b],dl
and [gs:ebx+0x61],ah
jc 0x646ed
and [eax],eax
add [eax],al
db 0xff
db 0xff
db 0xff
jmp dword [eax]
add [eax],al
add [ebx+0x78],bl
pop ebp
and [ecx+ebp*2+0x64],al
outsb
daa
jz 0x646bf
imul bp,[esi+0x64],word 0x2220
inc ebp
push esi
inc edx
and ah,[eax]
jnc 0x64715
a16 outsb
popad
jz 0x64726
jc 0x64718
add [cs:eax],al
add [eax],al
db 0xff
db 0xff
db 0xff
jmp dword [ecx]
add [eax],al
add [ebx+0x2b],bl
pop ebp
and [ebp+0x6d],al
bound esp,[ebp+0x64]
and [fs:esi+0x69],ah
insb
gs jnc 0x646f3
popad
jc 0x6473b
and [ebx+0x6f],ah
insd
jo 0x6474e
gs jnc 0x64752
add [fs:eax],al
add bh,bh
db 0xff
db 0xff
jmp dword [dword 0x5b000000]
sub ebx,[ebp+0x20]
inc ebp
insd
bound esp,[ebp+0x64]
and [fs:esi+0x69],ah
insb
gs jnc 0x6471f
popad
jc 0x64767
and [esi+0x6f],ch
jz 0x64727
arpl [edi+0x6d],bp
jo 0x6477e
gs jnc 0x64782
add [fs:eax],al
add bh,bh
db 0xff
db 0xff
call dword [ecx+0x0]
add [eax],al
pop ebx
and [ebp+0x20],ebx
push ebp
outsb
imul ebp,[esi+0x6f],byte +0x77
outsb
and [ebp+0x6e],al
imul esp,[edi+0x6d],dword 0x20425661
jna 0x64798
jc 0x647a8
imul ebp,[edi+0x6e],dword 0x6163202c
outsb
outsb
outsd
jz 0x64761
jnz 0x647a5
jc 0x647a7
outsb
jz 0x647ae
and [gs:eax+ebp*2+0x61],dh
jz 0x64770
jnz 0x647c0
jo 0x647b5
arpl [ebx+0x69],bp
outsb
and [bx+0x69],dh
insb
insb
and [edi+0x6f],dh
jc 0x647ce
and [eax+0x72],dh
outsd
jo 0x647ce
jc 0x647d7
jns 0x6478e
add [eax],al
add [edx],al
add [eax],al
add [esi],ch
add [eax],al
add bh,bh
db 0xff
db 0xff
dec dword [dword 0x5b000000]
sub ebx,[ebp+0x20]
inc esi
imul ebp,[esi+0x69],dword 0x64656873
and [eax],eax
add [eax],al
pushad
mov esi,[esp+0x24]
mov eax,[esp+0x28]
mov edi,[esp+0x2c]
mov ecx,[esp+0x30]
push eax
push ecx
test esi,esi
jz dword 0x64a56
test edi,edi
jz dword 0x64a56
cld
xor edx,edx
sub dword [esp+0x4],byte +0x1
jc dword 0x64a56
mov al,[esi]
add esi,byte +0x1
sub dword [esp],byte +0x1
jc dword 0x64a56
mov [edi],al
add edi,byte +0x1
mov ebx,0x2
add dl,dl
jnz 0x647f0
sub dword [esp+0x4],byte +0x1
jc dword 0x64a56
mov dl,[esi]
inc esi
add dl,dl
inc dl
jnc 0x647b6
add dl,dl
jnz 0x64808
sub dword [esp+0x4],byte +0x1
jc dword 0x64a56
mov dl,[esi]
inc esi
add dl,dl
inc dl
jnc dword 0x648be
xor eax,eax
add dl,dl
jnz 0x64826
sub dword [esp+0x4],byte +0x1
jc dword 0x64a56
mov dl,[esi]
inc esi
add dl,dl
inc dl
jnc dword 0x64a0b
add dl,dl
jnz 0x64842
sub dword [esp+0x4],byte +0x1
jc dword 0x64a56
mov dl,[esi]
inc esi
add dl,dl
inc dl
adc eax,eax
add dl,dl
jnz 0x6485a
sub dword [esp+0x4],byte +0x1
jc dword 0x64a56
mov dl,[esi]
inc esi
add dl,dl
inc dl
adc eax,eax
add dl,dl
jnz 0x64872
sub dword [esp+0x4],byte +0x1
jc dword 0x64a56
mov dl,[esi]
inc esi
add dl,dl
inc dl
adc eax,eax
add dl,dl
jnz 0x6488a
sub dword [esp+0x4],byte +0x1
jc dword 0x64a56
mov dl,[esi]
inc esi
add dl,dl
inc dl
adc eax,eax
jz dword 0x648a7
mov ebx,[esp+0x38]
sub ebx,[esp]
cmp eax,ebx
ja dword 0x64a56
mov ebx,edi
sub ebx,eax
mov al,[ebx]
sub dword [esp],byte +0x1
jc dword 0x64a56
mov [edi],al
inc edi
mov ebx,0x2
jmp dword 0x647da
mov eax,0x1
add dl,dl
jnz 0x648d9
sub dword [esp+0x4],byte +0x1
jc dword 0x64a56
mov dl,[esi]
inc esi
add dl,dl
inc dl
adc eax,eax
jc dword 0x64a56
add dl,dl
jnz 0x648f7
sub dword [esp+0x4],byte +0x1
jc dword 0x64a56
mov dl,[esi]
inc esi
add dl,dl
inc dl
jc 0x648c3
sub eax,ebx
mov ebx,0x1
jnz dword 0x64969
mov ecx,0x1
add dl,dl
jnz 0x64921
sub dword [esp+0x4],byte +0x1
jc dword 0x64a56
mov dl,[esi]
inc esi
add dl,dl
inc dl
adc ecx,ecx
jc dword 0x64a56
add dl,dl
jnz 0x6493f
sub dword [esp+0x4],byte +0x1
jc dword 0x64a56
mov dl,[esi]
inc esi
add dl,dl
inc dl
jc 0x6490b
push ecx
mov ecx,[esp+0x3c]
sub ecx,[esp+0x4]
cmp ebp,ecx
pop ecx
ja dword 0x64a56
sub [esp],ecx
jc dword 0x64a56
push esi
mov esi,edi
sub esi,ebp
rep movsb
pop esi
jmp dword 0x647da
dec eax
test eax,0xff000000
jnz dword 0x64a56
shl eax,byte 0x8
sub dword [esp+0x4],byte +0x1
jc dword 0x64a56
mov al,[esi]
inc esi
mov ebp,eax
mov ecx,0x1
add dl,dl
jnz 0x649a3
sub dword [esp+0x4],byte +0x1
jc dword 0x64a56
mov dl,[esi]
inc esi
add dl,dl
inc dl
adc ecx,ecx
jc dword 0x64a56
add dl,dl
jnz 0x649c1
sub dword [esp+0x4],byte +0x1
jc dword 0x64a56
mov dl,[esi]
inc esi
add dl,dl
inc dl
jc 0x6498d
cmp eax,0x7d00
sbb ecx,byte -0x1
cmp eax,0x500
sbb ecx,byte -0x1
cmp eax,0x80
adc ecx,byte +0x0
cmp eax,0x80
adc ecx,byte +0x0
push ecx
mov ecx,[esp+0x3c]
sub ecx,[esp+0x4]
cmp eax,ecx
pop ecx
ja dword 0x64a56
sub [esp],ecx
jc dword 0x64a56
push esi
mov esi,edi
sub esi,eax
rep movsb
pop esi
jmp dword 0x647da
sub dword [esp+0x4],byte +0x1
jc dword 0x64a56
mov al,[esi]
inc esi
xor ecx,ecx
shr al,byte 0x1
jz dword 0x64a5e
adc ecx,byte +0x2
mov ebp,eax
push ecx
mov ecx,[esp+0x3c]
sub ecx,[esp+0x4]
cmp eax,ecx
pop ecx
ja dword 0x64a56
sub [esp],ecx
jc dword 0x64a56
push esi
mov esi,edi
sub esi,eax
rep movsb
pop esi
mov ebx,0x1
jmp dword 0x647da
add esp,byte +0x8
popad
or eax,byte -0x1
ret
add esp,byte +0x8
sub edi,[esp+0x2c]
mov [esp+0x1c],edi
popad
ret
nop
push ebp
mov ebp,esp
xor eax,eax
push ebp
push dword 0x465a8b
push dword [fs:eax]
mov [fs:eax],esp
xor eax,eax
pop edx
pop ecx
pop ecx
mov [fs:eax],edx
push dword 0x465a92
ret
jmp dword 0x3384
jmp short 0x64a8a
pop ebp
ret
cmp [eax],eax
add [eax],al
pushfd
pop edx
inc esi
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
pushad
inc esi
add [eax+0x4067],dh
add [eax],al
add [eax],al
add [eax],al
add [eax-0x7ffb9a0],bl
jz 0x64afb
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax-0x1ac7ffba],ch
inc eax
add [ecx],dh
inc esi
add [eax+0x440040ee],cl
popad
inc esi
add al,dl
pop ss
inc ecx
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add al,dh
popad
inc esi
add ah,ah
and [ecx+0x0],eax
add [eax],al
add [eax],al
add [eax],al
add [eax],al
clc
popad
inc esi
add ah,dh
mov dword [ecx+0x0],0x4662a4
and bh,ah
inc ecx
add [edx-0x1317ffba],ch
inc ecx
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [edx+0x7d040046],dh
inc edx
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax-0x53ffb99d],dh
mov al,[edx+0x0]
xchg eax,esp
bound eax,[esi+0x0]
loopne 0x64b3d
inc ecx
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax+0x66],dh
inc esi
add al,dh
and eax,0x63cc0045
inc esi
add [eax-0x74],dl
inc edx
add al,bl
gs inc esi
add [eax+esi*8],ch
inc esp
add [eax+0x66],ch
inc esi
add [ebx+edi*8+0x44],bh
add [eax],al
add [eax],al
add [eax],al
push eax
gs inc esi
add [eax-0x4d],bl
inc ebx
add [edx-0x239fffba],cl
inc ecx
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add ah,dl
arpl [esi+0x0],ax
mov al,[0x400042dd]
gs inc esi
add [eax],dl
dec ecx
inc ebx
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add ah,bl
arpl [esi+0x0],ax
lock jmp short 0x64c35
add [esp+0x46],ah
add [eax],dh
cld
inc edx
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax+0x68004664],ch
inc esp
inc ebx
add al,ch
fs inc esi
add ah,al
inc esp
inc ebx
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [esi+0x19240046],bl
inc esi
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [edi],cl
inc esi
add [ebx+esi+0x46],dl
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [edx+ebx*2+0x46],ch
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
add [eax],al
db 0x00
