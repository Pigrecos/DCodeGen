Bits 32

;<00F94CE0>

	MOV     EDX,DWORD PTR SS:[ESP+$C]
	MOV     ECX,DWORD PTR SS:[ESP+4]
	TEST    EDX,EDX
	JE       @L00000007
	XOR     EAX,EAX
	MOV     AL,BYTE PTR SS:[ESP+8]
	TEST    AL,AL
	JNZ      @L00000002
	CMP     EDX,100
	JB       @L00000002
	CMP     DWORD PTR DS:[$FCACB8],0

@L00000001:
	JE       @L00000002
	JMP     @L00000010

@L00000002:
	PUSH    EDI
	MOV     EDI,ECX
	CMP     EDX,4
	JB       @L00000005
	NEG     ECX
	AND     ECX,3
	JE       @L00000004
	SUB     EDX,ECX

@L00000003:
	MOV     BYTE PTR DS:[EDI],AL
	ADD     EDI,1
	SUB     ECX,1
	JNZ      @L00000003

@L00000004:
	MOV     ECX,EAX
	SHL     EAX,$8
	ADD     EAX,ECX
	MOV     ECX,EAX
	SHL     EAX,$10
	ADD     EAX,ECX
	MOV     ECX,EDX
	AND     EDX,3
	SHR     ECX,2
	JE       @L00000005
	REP     STOS DWORD PTR ES:[EDI]
	TEST    EDX,EDX
	JE       @L00000006

@L00000005:
	MOV     BYTE PTR DS:[EDI],AL
	ADD     EDI,1
	SUB     EDX,1
	JNZ      @L00000005

@L00000006:
	MOV     EAX,DWORD PTR SS:[ESP+8]
	POP     EDI
	RETN

@L00000007:
	MOV     EAX,DWORD PTR SS:[ESP+4]
	RETN
	INT3
	INT3
	INT3
	INT3
	INT3
	INT3
	CMP     CL,$40
	JNB      @L00000009
	CMP     CL,$20
	JNB      @L00000008
	SHRD    EAX,EDX,CL
	SHR     EDX,CL
	RETN

@L00000008:
	MOV     EAX,EDX
	XOR     EDX,EDX
	AND     CL,$1F
	SHR     EAX,CL
	RETN

@L00000009:
	XOR     EAX,EAX
	XOR     EDX,EDX
	RETN
	MOV     EDI,EDI
	PUSH    EBP
	MOV     EBP,ESP
	PUSH    ECX
	PUSH    EBX
	MOV     EAX,DWORD PTR SS:[EBP+$C]
	ADD     EAX,$0C
	MOV     DWORD PTR SS:[EBP-4],EAX
	MOV     EBX,DWORD PTR FS:[0]
	MOV     EAX,DWORD PTR DS:[EBX]
	MOV     DWORD PTR FS:[0],EAX

@L00000010:
	JE       @L00000011
	OR      BYTE PTR DS:[EBX+$6D8B0C5D],CL
	CLD
	NOP

@L00000011:
	JMP     @L00000001
	LEAVE
	RETN    8
